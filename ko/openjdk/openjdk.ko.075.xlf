<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="25bcc41bb9be6142d4b382a35be675feb6b382ec" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtCompleted attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCompleted attribute. To convert a DateTimeAtCompleted attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtCompleted attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 DateTimeAtCompleted 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 DateTimeAtCompleted 속성을 구성하십시오. DateTimeAtCompleted 속성을 연도, 월, 일,시, 분 등의 값으로 구분하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들어 DateTimeAtCompleted 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa286d2c9331083538f7b2483ba40d01066c7be7" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtCreation attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCreation attribute. To convert a DateTimeAtCreation attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtCreation attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 DateTimeAtCreation 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 DateTimeAtCreation 속성을 구성하십시오. DateTimeAtCreation 속성을 년, 월, 일,시, 분 등의 별도 값으로 변환하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 DateTimeAtCreation 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="74dd642a97b53fdc97dc32a69febd07a2a41f613" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtProcessing attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtProcessing attribute. To convert a DateTimeAtProcessing attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtProcessing attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 DateTimeAtProcessing 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 DateTimeAtProcessing 속성을 구성하십시오. DateTimeAtProcessing 속성을 년, 월, 일,시, 분 등의 별도 값으로 변환하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 DateTimeAtProcessing 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d51e72cb883d367f9e951d82f4b8bfada0f7edfe" translate="yes" xml:space="preserve">
          <source>To construct a JobHoldUntil attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the JobHoldUntil attribute. To convert a JobHoldUntil attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the JobHoldUntil attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 JobHoldUntil 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 JobHoldUntil 속성을 구성하십시오. JobHoldUntil 속성을 년, 월, 일,시, 분 등의 별도 값으로 변환하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 JobHoldUntil 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="db92a2c6c7f08bf559d61fcd335d1b352eb04511" translate="yes" xml:space="preserve">
          <source>To construct a date-time attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt; object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute. To convert a date-time attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class DateTimeSyntax stores its value in the form of a &lt;code&gt;java.util.Date
 &lt;/code&gt; rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt; than a &lt;code&gt;java.util.Calendar&lt;/code&gt;.</source>
          <target state="translated">등등 년, 월, 일,시, 분 등 개개의 값으로부터 일자와 시각 속성을 구축하고하려면 사용 &lt;code&gt;java.util.Calendar&lt;/code&gt; 구성하는 객체를 &lt;code&gt;java.util.Date&lt;/code&gt; 의 다음 사용하여 객체를 &lt;code&gt;java.util.Date&lt;/code&gt; 객체는 일자와 시각 속성을 구축합니다. 날짜-시간 속성을 년, 월, 일,시, 분 등의 값으로 분리하려면 &lt;code&gt;java.util.Calendar&lt;/code&gt; 오브젝트를 작성 하고 날짜-시간 속성에서 &lt;code&gt;java.util.Date&lt;/code&gt; 로 설정하십시오. . DateTimeSyntax 클래스는의 형태로 그 값을 저장 &lt;code&gt;java.util.Date &lt;/code&gt; 보다는 &lt;code&gt;java.util.Calendar&lt;/code&gt; 의 는 일반적으로 저장하고 비교하는 더 적은 시간에 더 적은 메모리 걸리기 때문에 &lt;code&gt;java.util.Date&lt;/code&gt; 를 &lt;code&gt;java.util.Calendar&lt;/code&gt; 보다 .</target>
        </trans-unit>
        <trans-unit id="087aae889fb70843b3991a318cba4a5735f9cb01" translate="yes" xml:space="preserve">
          <source>To continue the operation, the client program should re-invoke the method using the same arguments as the original invocation.</source>
          <target state="translated">작업을 계속하려면 클라이언트 프로그램이 원래 호출과 동일한 인수를 사용하여 메소드를 다시 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="23e44dbd2456435fa91cf79de7a65d5d719ff213" translate="yes" xml:space="preserve">
          <source>To control the time-zone used, see &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용 된 시간대를 제어하려면 &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8dd8a7b4f5dab34349b3a4318dd855c7abbe2237" translate="yes" xml:space="preserve">
          <source>To convert to a specific time in a given time-zone call &lt;a href=&quot;localdate#atTime-java.time.LocalTime-&quot;&gt;&lt;code&gt;atTime(LocalTime)&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;localdatetime#atZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 시간대 호출 &lt;a href=&quot;localdate#atTime-java.time.LocalTime-&quot;&gt; &lt;code&gt;atTime(LocalTime)&lt;/code&gt; &lt;/a&gt; 다음에 &lt;a href=&quot;localdatetime#atZone-java.time.ZoneId-&quot;&gt; &lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt; &lt;/a&gt; 에서 특정 시간으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="04c0fcc1d36b488dceb3eb03800fffb2574fb9a1" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;RuleBasedCollator&lt;/code&gt; object with specialized rules tailored to your needs, you construct the &lt;code&gt;RuleBasedCollator&lt;/code&gt; with the rules contained in a &lt;code&gt;String&lt;/code&gt; object. For example:</source>
          <target state="translated">필요에 맞게 특수화 된 규칙 을 사용하여 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 오브젝트 를 작성하려면 &lt;code&gt;String&lt;/code&gt; 오브젝트에 포함 된 규칙으로 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 를 구성하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="791b72a8d90e2e2ec1bac7e05d883ff1e653d19d" translate="yes" xml:space="preserve">
          <source>To create a proxy for some interface &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="translated">일부 인터페이스 &lt;code&gt;Foo&lt;/code&gt; 에 대한 프록시를 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="0dc7f689cdf1bba3e94d6df9657ba2feff02c34a" translate="yes" xml:space="preserve">
          <source>To create a set of &lt;code&gt;n&lt;/code&gt; tasks using a tree of phasers, you could use code of the following form, assuming a Task class with a constructor accepting a &lt;code&gt;Phaser&lt;/code&gt; that it registers with upon construction. After invocation of &lt;code&gt;build(new Task[n], 0, n,
 new Phaser())&lt;/code&gt;, these tasks could then be started, for example by submitting to a pool:</source>
          <target state="translated">페이저 트리를 사용하여 &lt;code&gt;n&lt;/code&gt; 개의 태스크 세트를 작성하려면 생성 시 등록한 &lt;code&gt;Phaser&lt;/code&gt; 를 승인하는 생성자가있는 Task 클래스를 가정하여 다음 양식의 코드를 사용할 수 있습니다 . &lt;code&gt;build(new Task[n], 0, n, new Phaser())&lt;/code&gt; 호출 한 후 풀에 제출하여 이러한 태스크를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21cef35b7895ed0dec80ac99d3f5fda763229008" translate="yes" xml:space="preserve">
          <source>To create a zoned date-time at the same instant irrespective of the local time-line, use &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로컬 타임 라인에 상관없이 동일한 순간에 존 날짜-시간을 작성하려면 &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; . 영역 ID로 오프셋을 사용하려면 &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="60baa4fa76cf50ff7c38d2a22f008a79c85d01d7" translate="yes" xml:space="preserve">
          <source>To create an &lt;code&gt;ActionListener&lt;/code&gt; that sets the the text of a &lt;code&gt;JLabel&lt;/code&gt; to the text value of the &lt;code&gt;JTextField&lt;/code&gt; source of the incoming event, you can use the following code:</source>
          <target state="translated">&lt;code&gt;JLabel&lt;/code&gt; 의 텍스트를 수신 이벤트 의 &lt;code&gt;JTextField&lt;/code&gt; 소스의 텍스트 값으로 설정 하는 &lt;code&gt;ActionListener&lt;/code&gt; 를 작성하려면 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45312066937624f899610291c457e6f409e99be8" translate="yes" xml:space="preserve">
          <source>To create an &lt;code&gt;ActionListener&lt;/code&gt; that shows a &lt;code&gt;JDialog&lt;/code&gt; with &lt;code&gt;dialog.show()&lt;/code&gt;, one can write:</source>
          <target state="translated">&lt;code&gt;dialog.show()&lt;/code&gt; 와 함께 &lt;code&gt;JDialog&lt;/code&gt; 를 표시 하는 &lt;code&gt;ActionListener&lt;/code&gt; 를 작성하려면 다음을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f18a394ec1d00d632fa8ea8c9678ed1d607d136" translate="yes" xml:space="preserve">
          <source>To create an empty keystore using the above &lt;code&gt;load&lt;/code&gt; method, pass &lt;code&gt;null&lt;/code&gt; as the &lt;code&gt;InputStream&lt;/code&gt; argument.</source>
          <target state="translated">위의 &lt;code&gt;load&lt;/code&gt; 메소드 를 사용하여 빈 키 저장소를 작성하려면 &lt;code&gt;InputStream&lt;/code&gt; 인수 로 &lt;code&gt;null&lt;/code&gt; 을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="8dea388bdca9f830fe55c273e0d4866e5bd285b2" translate="yes" xml:space="preserve">
          <source>To create localized string representations of a floating-point value, use subclasses of &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부동 소수점 값의 현지화 된 문자열 표현을 작성하려면 &lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; 의&lt;/a&gt; 서브 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="808da32e3a261ba4ac89ef37045a1f29ac0fb890" translate="yes" xml:space="preserve">
          <source>To create the new file, the prefix and the suffix may first be adjusted to fit the limitations of the underlying platform. If the prefix is too long then it will be truncated, but its first three characters will always be preserved. If the suffix is too long then it too will be truncated, but if it begins with a period character (&lt;code&gt;'.'&lt;/code&gt;) then the period and the first three characters following it will always be preserved. Once these adjustments have been made the name of the new file will be generated by concatenating the prefix, five or more internally-generated characters, and the suffix.</source>
          <target state="translated">새 파일을 만들려면 먼저 기본 플랫폼의 제한에 맞게 접두사와 접미사를 조정할 수 있습니다. 접두사가 너무 길면 잘리지 만 처음 세 문자는 항상 유지됩니다. 접미사가 너무 길면 잘리지 만, 마침표 문자 ( &lt;code&gt;'.'&lt;/code&gt; )로 시작하면 마침표와 그 뒤의 첫 세 문자는 항상 유지됩니다. 이러한 조정이 이루어지면 접두사, 내부적으로 생성 된 5 개 이상의 문자 및 접미사를 연결하여 새 파일의 이름이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3e4a062b070484f1c27e4ca896fe630eef6f8d83" translate="yes" xml:space="preserve">
          <source>To declare a feature non-transient in a class whose superclass declares it transient, use &lt;code&gt;@Transient(false)&lt;/code&gt;. In all cases, the &lt;a href=&quot;introspector&quot;&gt;&lt;code&gt;Introspector&lt;/code&gt;&lt;/a&gt; decides if a feature is transient by referring to the annotation on the most specific superclass. If no &lt;code&gt;Transient&lt;/code&gt; annotation is present in any superclass the feature is not transient.</source>
          <target state="translated">수퍼 클래스가 일시적인 것으로 선언하는 클래스에서 일시적이지 않은 기능을 선언하려면 &lt;code&gt;@Transient(false)&lt;/code&gt; . 모든 경우에 &lt;a href=&quot;introspector&quot;&gt; &lt;code&gt;Introspector&lt;/code&gt; &lt;/a&gt; 는 가장 구체적인 수퍼 클래스의 주석을 참조하여 기능이 일시적인지 결정합니다. 수퍼 클래스에 &lt;code&gt;Transient&lt;/code&gt; 주석이 없으면 이 기능은 과도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="57fd356f7d95a14f5404eeb90ff5031af2abdc3b" translate="yes" xml:space="preserve">
          <source>To declare a service provider, a &lt;code&gt;services&lt;/code&gt; subdirectory is placed within the &lt;code&gt;META-INF&lt;/code&gt; directory that is present in every JAR file. This directory contains a file for each service provider interface that has one or more implementation classes present in the JAR file. For example, if the JAR file contained a class named &lt;code&gt;com.mycompany.mypkg.MyServiceImpl&lt;/code&gt; which implements the &lt;code&gt;javax.someapi.SomeService&lt;/code&gt; interface, the JAR file would contain a file named:</source>
          <target state="translated">서비스 제공자를 선언하기 위해 &lt;code&gt;services&lt;/code&gt; 서브 디렉토리는 모든 JAR 파일에 있는 &lt;code&gt;META-INF&lt;/code&gt; 디렉토리 내에 있습니다. 이 디렉토리에는 JAR 파일에 하나 이상의 구현 클래스가있는 각 서비스 제공자 인터페이스에 대한 파일이 있습니다. 예를 들어, JAR 파일 에 &lt;code&gt;javax.someapi.SomeService&lt;/code&gt; 인터페이스 를 구현하는 &lt;code&gt;com.mycompany.mypkg.MyServiceImpl&lt;/code&gt; 이라는 클래스 가 포함 된 경우 JAR 파일은 다음과 같은 이름의 파일을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="7283b113e7c0164d77d2a8c9fb8573fa56cef93b" translate="yes" xml:space="preserve">
          <source>To define a new attribute category, a vendor defines a new attribute class. This attribute class, like the standard attribute classes, implements &lt;code&gt;Attribute&lt;/code&gt; or one of its subinterfaces and extends an abstract syntax class. The vendor can either use an existing abstract syntax class or define a new one. The new vendor-defined attribute can be used wherever an &lt;code&gt;Attribute&lt;/code&gt; is used, such as in an &lt;code&gt;AttributeSet&lt;/code&gt;.</source>
          <target state="translated">새로운 속성 범주를 정의하기 위해 공급 업체는 새로운 속성 클래스를 정의합니다. 이 속성 클래스는 표준 속성 클래스와 마찬가지로 &lt;code&gt;Attribute&lt;/code&gt; 또는 해당 서브 인터페이스 중 하나를 구현 하고 추상 구문 클래스를 확장합니다. 공급 업체는 기존 추상 구문 클래스를 사용하거나 새로운 추상 구문 클래스를 정의 할 수 있습니다. 목적지 새로운 벤더 정의 속성을 사용할 수있는 &lt;code&gt;Attribute&lt;/code&gt; 그러한 같이 사용되는 &lt;code&gt;AttributeSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e347f14baa8fe4d897360a51c83aed5e5fbc4b76" translate="yes" xml:space="preserve">
          <source>To define a new value for an attribute, a client can construct instances of such attributes with arbitrary values at runtime. However, an enumerated attribute using an abstract syntax class of &lt;code&gt;EnumSyntax&lt;/code&gt; specifies all the possible attribute values at compile time as singleton instances of the attribute class. This means that new enumerated values cannot be constructed at run time. To define new vendor-specific values for a standard enumerated attribute, the vendor must define a new attribute class specifying the new singleton instances. To ensure that the new attribute values fall in the same category as the standard attribute values, the new attribute class must be a subclass of the standard attribute class.</source>
          <target state="translated">속성에 대한 새로운 값을 정의하기 위해 클라이언트는 런타임에 임의의 값으로 이러한 속성의 인스턴스를 구성 할 수 있습니다. 그러나 &lt;code&gt;EnumSyntax&lt;/code&gt; 의 추상 구문 클래스를 사용하여 열거 된 특성 은 컴파일 타임에 가능한 모든 특성 값을 특성 클래스의 단일 인스턴스로 지정합니다. 즉, 새로운 열거 값을 런타임에 구성 할 수 없습니다. 표준 열거 속성에 대해 새로운 공급 업체별 값을 정의하려면 공급 업체는 새 싱글 톤 인스턴스를 지정하는 새로운 속성 클래스를 정의해야합니다. 새 속성 값이 표준 속성 값과 동일한 범주에 있도록하려면 새 속성 클래스는 표준 속성 클래스의 서브 클래스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="7be390e424352119396aca90952aa3eb2e129ceb" translate="yes" xml:space="preserve">
          <source>To detect if a MidiDevice represents a hardware MIDI port, the following programming technique can be used:</source>
          <target state="translated">MidiDevice가 하드웨어 MIDI 포트를 나타내는 지 감지하려면 다음 프로그래밍 기술을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e676ccd071b538464ec0f5bba24430555e2f6906" translate="yes" xml:space="preserve">
          <source>To determine certificate equality, this method only compares actual signer certificates. Supporting certificate chains are not taken into consideration by this method.</source>
          <target state="translated">인증서 동등성을 확인하기 위해이 방법은 실제 서명자 인증서 만 비교합니다. 이 방법에서는 지원 인증서 체인을 고려하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b59757c043cfb960c17c98e1a8dd7ce3314ad5d3" translate="yes" xml:space="preserve">
          <source>To ensure that client parameters will be deserialized at the server side with the correct classloader, client parameters such as parameters used to invoke a method are wrapped in a &lt;a href=&quot;/openjdk~8_web/java/rmi/marshalledobject&quot;&gt;&lt;code&gt;MarshalledObject&lt;/code&gt;&lt;/a&gt;. An implementation of this interface must first get the appropriate class loader for the operation and its target, then deserialize the marshalled parameters with this classloader. Except as noted, a parameter that is a &lt;code&gt;MarshalledObject&lt;/code&gt; or &lt;code&gt;MarshalledObject[]&lt;/code&gt; must not be null; the behavior is unspecified if it is.</source>
          <target state="translated">클라이언트 클래스가 올바른 클래스 로더를 사용하여 서버 측에서 직렬화 해제되도록하기 위해 메소드를 호출하는 데 사용되는 매개 변수와 같은 클라이언트 매개 변수는 &lt;a href=&quot;/openjdk~8_web/java/rmi/marshalledobject&quot;&gt; &lt;code&gt;MarshalledObject&lt;/code&gt; 에&lt;/a&gt; 랩됩니다 . 이 인터페이스의 구현은 먼저 조작 및 해당 대상에 적합한 클래스 로더를 확보 한 후이 클래스 로더로 마샬링 된 매개 변수를 직렬화 해제해야합니다. 언급 된 것을 제외하고 &lt;code&gt;MarshalledObject&lt;/code&gt; 또는 &lt;code&gt;MarshalledObject[]&lt;/code&gt; 매개 변수는 널이 아니어야합니다. 동작이 지정되지 않은 경우 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f2abea5f649f3db3eea3bbf55598ba6f03b42815" translate="yes" xml:space="preserve">
          <source>To ensure that keystore entries are uniquely identified, each entry's alias is prefixed by its &lt;code&gt;keystoreName&lt;/code&gt; followed by the entry name separator and each &lt;code&gt;keystoreName&lt;/code&gt; must be unique within its domain. Entry name prefixes are omitted when storing a keystore.</source>
          <target state="translated">키 저장소 항목이 고유하게 식별되도록하려면 각 항목의 별명 앞에 해당 &lt;code&gt;keystoreName&lt;/code&gt; 이름이 있고 그 뒤에 항목 이름 구분 기호가 있으며 각 &lt;code&gt;keystoreName&lt;/code&gt; 이름 은 해당 도메인 내에서 고유해야합니다. 키 저장소를 저장할 때 항목 이름 접 두부가 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="7533c6ef00ad28237e37b969dc3e84fa760e069f" translate="yes" xml:space="preserve">
          <source>To ensure that sequential and parallel executions produce equivalent results, the collector functions must satisfy an &lt;em&gt;identity&lt;/em&gt; and an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associativity&lt;/a&gt; constraints.</source>
          <target state="translated">순차적 및 병렬 실행이 동등한 결과를 생성하도록하려면 콜렉터 함수가 &lt;em&gt;ID&lt;/em&gt; 및 &lt;a href=&quot;package-summary#Associativity&quot;&gt;연관성&lt;/a&gt; 제한 조건을 만족시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="00fe0fe22981250465b7707614b837e155640b61" translate="yes" xml:space="preserve">
          <source>To ensure the integrity of time-zones already created, there is no way to deregister providers.</source>
          <target state="translated">이미 생성 된 시간대의 무결성을 보장하기 위해 공급자를 등록 취소 할 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="054a915983e4b95e8f0a7fc17e50da04ce361fd5" translate="yes" xml:space="preserve">
          <source>To fill in default values, use &lt;a href=&quot;../util/elements#getElementValuesWithDefaults-javax.lang.model.element.AnnotationMirror-&quot;&gt;&lt;code&gt;getElementValuesWithDefaults&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본값을 채우려면 &lt;a href=&quot;../util/elements#getElementValuesWithDefaults-javax.lang.model.element.AnnotationMirror-&quot;&gt; &lt;code&gt;getElementValuesWithDefaults&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e7a2eb21d729f289e381419913e34035d0572aa1" translate="yes" xml:space="preserve">
          <source>To find a matching method in a class or interface C: If C declares exactly one public method with the specified name and exactly the same formal parameter types, that is the method reflected. If more than one such method is found in C, and one of these methods has a return type that is more specific than any of the others, that method is reflected; otherwise one of the methods is chosen arbitrarily.</source>
          <target state="translated">클래스 또는 인터페이스 C에서 일치하는 메소드를 찾으려면 : C가 지정된 이름과 정확히 동일한 형식 매개 변수 유형으로 정확히 하나의 공용 메소드를 선언하면 해당 메소드가 반영됩니다. C에서 두 개 이상의 이러한 메소드가 발견되고이 메소드 중 하나가 다른 메소드보다 더 구체적인 리턴 유형을 갖는 경우 해당 메소드가 반영됩니다. 그렇지 않으면 방법 중 하나가 임의로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="18affa8e6289d316bfbb65fcc90a0d84436fb4e2" translate="yes" xml:space="preserve">
          <source>To force a complete SSL/TLS session renegotiation, the current session should be invalidated prior to calling this method.</source>
          <target state="translated">완전한 SSL / TLS 세션 재협상을 강제하려면이 메소드를 호출하기 전에 현재 세션을 무효화해야합니다.</target>
        </trans-unit>
        <trans-unit id="23a173b3cd0da62e49a4c6312b7effbebcf70a1d" translate="yes" xml:space="preserve">
          <source>To format a date for a different Locale, specify it in the call to &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 로케일의 날짜를 형식화하려면 &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance()&lt;/code&gt; &lt;/a&gt; 호출에서 날짜를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="31c56dc41650b703b7585ee73957c79da8a6ebd8" translate="yes" xml:space="preserve">
          <source>To format a date for the current Locale, use one of the static factory methods:</source>
          <target state="translated">현재 로케일의 날짜를 형식화하려면 정적 팩토리 메소드 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1efc90fec6b3d2be588385321c3b066f49b91be9" translate="yes" xml:space="preserve">
          <source>To format a number for a different Locale, specify it in the call to &lt;code&gt;getInstance&lt;/code&gt;.</source>
          <target state="translated">다른 로케일의 숫자를 형식화하려면 &lt;code&gt;getInstance&lt;/code&gt; 호출에서 해당 숫자를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8abc2244a33eeafa86f7a9eab9d0022e187c943" translate="yes" xml:space="preserve">
          <source>To format a number for the current Locale, use one of the factory class methods:</source>
          <target state="translated">현재 로케일의 숫자를 형식화하려면 팩토리 클래스 메소드 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d0c3f50bdc8e06b0b1c0cba75b086eb2e0b2a934" translate="yes" xml:space="preserve">
          <source>To get all the print data for a multidoc print job, a Print Service proxy could use either of two patterns:</source>
          <target state="translated">다중 문서 인쇄 작업에 대한 모든 인쇄 데이터를 가져 오기 위해 인쇄 서비스 프록시는 다음 두 패턴 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53f9c125af6f96d56cd5afcb02f4e6777d74a3ee" translate="yes" xml:space="preserve">
          <source>To get inherited annotations as well, use &lt;a href=&quot;../util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt;&lt;code&gt;getAllAnnotationMirrors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상속 된 주석도 얻으려면 &lt;a href=&quot;../util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt; &lt;code&gt;getAllAnnotationMirrors&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="734faec3693f1b81c8049c2b2612c8bba8fe7efe" translate="yes" xml:space="preserve">
          <source>To give the &quot;backup&quot; service a proxiable nfs service ticket the target permission might be specified:</source>
          <target state="translated">&quot;백업&quot;서비스에 프록시 가능 nfs 서비스 티켓을 제공하려면 대상 권한을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4efd0f5f6873e8bf5dda3afa59ebf8833c4b8c6e" translate="yes" xml:space="preserve">
          <source>To have an exception thrown if the conversion is inexact (in other words if a nonzero fractional part is discarded), use the &lt;a href=&quot;bigdecimal#toBigIntegerExact--&quot;&gt;&lt;code&gt;toBigIntegerExact()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환이 정확하지 않은 경우 (즉, 0이 아닌 소수 부분을 버린 경우) 예외를 발생 시키려면 &lt;a href=&quot;bigdecimal#toBigIntegerExact--&quot;&gt; &lt;code&gt;toBigIntegerExact()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7cd77572030e4bc183f87ba9e0b647921b604b65" translate="yes" xml:space="preserve">
          <source>To help ensure portability of Java programs, the definitions of some of the numeric functions in this package require that they produce the same results as certain published algorithms. These algorithms are available from the well-known network library &lt;code&gt;netlib&lt;/code&gt; as the package &quot;Freely Distributable Math Library,&quot; &lt;a href=&quot;ftp://ftp.netlib.org/fdlibm.tar&quot;&gt;&lt;code&gt;fdlibm&lt;/code&gt;&lt;/a&gt;. These algorithms, which are written in the C programming language, are then to be understood as executed with all floating-point operations following the rules of Java floating-point arithmetic.</source>
          <target state="translated">Java 프로그램의 이식성을 보장하기 위해이 패키지의 일부 숫자 함수를 정의하려면 공개 된 특정 알고리즘과 동일한 결과를 생성해야합니다. 이 알고리즘은 잘 알려진 네트워크 라이브러리 &lt;code&gt;netlib&lt;/code&gt; 에서 &quot;Freely Distributable Math Library&quot; &lt;a href=&quot;ftp://ftp.netlib.org/fdlibm.tar&quot;&gt; &lt;code&gt;fdlibm&lt;/code&gt; &lt;/a&gt; 패키지 로 제공 됩니다. C 프로그래밍 언어로 작성된 이러한 알고리즘은 Java 부동 소수점 산술 규칙에 따라 모든 부동 소수점 연산으로 실행되는 것으로 이해됩니다.</target>
        </trans-unit>
        <trans-unit id="5e4c97873af70f0195b146c1979f0db569946b5a" translate="yes" xml:space="preserve">
          <source>To implement a list the programmer needs only to extend this class and provide implementations for the &lt;code&gt;listIterator&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; methods. For an unmodifiable list, the programmer need only implement the list iterator's &lt;code&gt;hasNext&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;hasPrevious&lt;/code&gt;, &lt;code&gt;previous&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; methods.</source>
          <target state="translated">리스트를 구현하려면 프로그래머는이 클래스를 확장하고 &lt;code&gt;listIterator&lt;/code&gt; 및 &lt;code&gt;size&lt;/code&gt; 메소드에 대한 구현 만 제공하면 됩니다. 수정 불가능한리스트의 경우, 프로그래머는리스트 반복자의 &lt;code&gt;hasNext&lt;/code&gt; , &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;hasPrevious&lt;/code&gt; , &lt;code&gt;previous&lt;/code&gt; 및 &lt;code&gt;index&lt;/code&gt; 메소드 만 구현하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="86969fc9fa9ff65fcf2df680df949b538474ae52" translate="yes" xml:space="preserve">
          <source>To implement a modifiable collection, the programmer must additionally override this class's &lt;code&gt;add&lt;/code&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;), and the iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method must additionally implement its &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">수정 가능한 컬렉션을 구현하려면 프로그래머는이 클래스의 &lt;code&gt;add&lt;/code&gt; 메서드를 추가로 재정의해야하며 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 ) &lt;code&gt;iterator&lt;/code&gt; 메서드에서 반환 된 반복자 는 &lt;code&gt;remove&lt;/code&gt; 메서드를 추가로 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9decea476179857efb8167e4eb3423dfe587d678" translate="yes" xml:space="preserve">
          <source>To implement a modifiable list, the programmer must additionally override the &lt;a href=&quot;abstractlist#set-int-E-&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;). If the list is variable-size the programmer must additionally override the &lt;a href=&quot;abstractlist#add-int-E-&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractlist#remove-int-&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정 가능한 목록을 구현하려면 프로그래머가 &lt;a href=&quot;abstractlist#set-int-E-&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt; 메서드를 추가로 재정의해야합니다 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 발생 ). 리스트가 가변 크기 인 경우 프로그래머는 &lt;a href=&quot;abstractlist#add-int-E-&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;abstractlist#remove-int-&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt; 메소드를 추가로 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="aa7303ac29218f70d971d81a83ee93b68db42140" translate="yes" xml:space="preserve">
          <source>To implement a modifiable map, the programmer must additionally override this class's &lt;code&gt;put&lt;/code&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;), and the iterator returned by &lt;code&gt;entrySet().iterator()&lt;/code&gt; must additionally implement its &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">수정 가능한 맵을 구현하려면 프로그래머가이 클래스의 &lt;code&gt;put&lt;/code&gt; 메소드를 추가로 재정의해야하며 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생 함 ) &lt;code&gt;entrySet().iterator()&lt;/code&gt; 의해 리턴 된 반복자 는 &lt;code&gt;remove&lt;/code&gt; 메소드를 추가로 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f4f28c36fafbaae1ba1c6b2a0d879b13be8b6d8f" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfDouble.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfDouble.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">스플리터를 구현하려면 확장 클래스는 &lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfDouble.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance} 만 구현 하면 됩니다. 확장 클래스는 성능이 뛰어난 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfDouble.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt; forEach}를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5cc0eceff27a04f1eb4e78d0fa0f239a31937f3c" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">스플리터를 구현하려면 확장 클래스는 &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance} 만 구현 하면 됩니다. 확장 클래스는 성능이 뛰어난 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt; forEach}를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9d003ef038d7bc2222c0d7ed292f23107be6608e" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfLong.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfLong.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">스플리터를 구현하려면 확장 클래스는 &lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfLong.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance} 만 구현 하면 됩니다. 확장 클래스는 성능이 뛰어난 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfLong.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt; forEach}를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="671463582399b1ae06cf4aed172d63ff06a22dcf" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable collection, the programmer needs only to extend this class and provide implementations for the &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; methods. (The iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method must implement &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;.)</source>
          <target state="translated">수정 불가능한 콜렉션을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;code&gt;iterator&lt;/code&gt; 및 &lt;code&gt;size&lt;/code&gt; 메소드에 대한 구현 만 제공하면 됩니다 . (반복자에 의해 반환 된 &lt;code&gt;iterator&lt;/code&gt; 구현해야하는 방법 &lt;code&gt;hasNext&lt;/code&gt; 및 &lt;code&gt;next&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="5430a4e8b9de5cc4540fc3c7ac301e5ebbad4405" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable list, the programmer needs only to extend this class and provide implementations for the &lt;a href=&quot;abstractlist#get-int-&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;list#size--&quot;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정 불가능한 목록을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;a href=&quot;abstractlist#get-int-&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;list#size--&quot;&gt; &lt;code&gt;size()&lt;/code&gt; &lt;/a&gt; 메소드에 대한 구현 만 제공하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="e46f4737bb04074017c53a93c53e20d7d872b78c" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable map, the programmer needs only to extend this class and provide an implementation for the &lt;code&gt;entrySet&lt;/code&gt; method, which returns a set-view of the map's mappings. Typically, the returned set will, in turn, be implemented atop &lt;code&gt;AbstractSet&lt;/code&gt;. This set should not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt; methods, and its iterator should not support the &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">수정 불가능한 맵을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;code&gt;entrySet&lt;/code&gt; 메소드에 대한 구현 만 제공하면됩니다.이 메소드는 맵 맵핑의 설정보기를 리턴합니다. 일반적으로 반환 된 세트는 &lt;code&gt;AbstractSet&lt;/code&gt; 위에 구현 됩니다. 이 세트는 &lt;code&gt;add&lt;/code&gt; 또는 &lt;code&gt;remove&lt;/code&gt; 메소드를 지원하지 않아야하며 반복자는 &lt;code&gt;remove&lt;/code&gt; 메소드를 지원하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="4da9eb624b21389bac68e88ef77ffb98422a9b5d" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;Element&lt;/code&gt; object, either use a &lt;a href=&quot;elementvisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;element#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;Element&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;elementvisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;element#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용하십시오 . 구현시 단일 객체가 여러 &lt;code&gt;Element&lt;/code&gt; 서브 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt;instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층에서 객체의 유효 클래스를 결정하는 데 반드시 신뢰할만한 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="56c3983484a828bf0458dd2e79533731da677b55" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;TypeMirror&lt;/code&gt; object, either use a &lt;a href=&quot;typevisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;typemirror#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;TypeMirror&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt;TypeMirror&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;typevisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;typemirror#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용하십시오 . 구현시 단일 객체가 여러 &lt;code&gt;TypeMirror&lt;/code&gt; 하위 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt;instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층 구조에서 객체의 유효 클래스를 결정하는 데 반드시 신뢰할만한 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b4be84618ead6d10538cc9ccc258161cb330d82f" translate="yes" xml:space="preserve">
          <source>To instantiate a &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; object, an application must specify one or more</source>
          <target state="translated">&lt;code&gt;PKIXBuilderParameters&lt;/code&gt; 객체 를 인스턴스화하려면 응용 프로그램에서 하나 이상을 지정해야합니다</target>
        </trans-unit>
        <trans-unit id="a1248ff0d2cedefb6820edb5e4b125b407119479" translate="yes" xml:space="preserve">
          <source>To instantiate a &lt;code&gt;PKIXParameters&lt;/code&gt; object, an application must specify one or more</source>
          <target state="translated">&lt;code&gt;PKIXParameters&lt;/code&gt; 객체 를 인스턴스화하려면 응용 프로그램에서 하나 이상을 지정해야합니다</target>
        </trans-unit>
        <trans-unit id="e7a2a17113f40ab1a2b8b839f4be030b470dc7d9" translate="yes" xml:space="preserve">
          <source>To instantiate the new class, UnresolvedPermission assumes the class provides a zero, one, and/or two-argument constructor. The zero-argument constructor would be used to instantiate a permission without a name and without actions. A one-arg constructor is assumed to take a &lt;code&gt;String&lt;/code&gt; name as input, and a two-arg constructor is assumed to take a &lt;code&gt;String&lt;/code&gt; name and &lt;code&gt;String&lt;/code&gt; actions as input. UnresolvedPermission may invoke a constructor with a &lt;code&gt;null&lt;/code&gt; name and/or actions. If an appropriate permission constructor is not available, the UnresolvedPermission is ignored and the relevant permission will not be granted to executing code.</source>
          <target state="translated">새 클래스를 인스턴스화하기 위해 UnresolvedPermission은 클래스가 0, 1 및 / 또는 2 인수 생성자를 제공한다고 가정합니다. 인수없는 생성자는 이름과 동작없이 권한을 인스턴스화하는 데 사용됩니다. 1 개 인수 생성자는 &lt;code&gt;String&lt;/code&gt; 이름을 입력으로 사용하고 2 개 인수 생성자는 &lt;code&gt;String&lt;/code&gt; 이름과 &lt;code&gt;String&lt;/code&gt; 조치를 입력으로 사용 한다고 가정합니다 . UnresolvedPermission은 &lt;code&gt;null&lt;/code&gt; 이름 및 / 또는 작업 으로 생성자를 호출 할 수 있습니다 . 적절한 권한 생성자를 사용할 수 없으면 UnresolvedPermission이 무시되고 관련 권한이 코드 실행에 부여되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59dd951cff89541b8bd5f93b0411b551c7798c0c" translate="yes" xml:space="preserve">
          <source>To interpret localized string representations of a floating-point value, use subclasses of &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부동 소수점 값의 지역화 된 문자열 표현을 해석하려면 &lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; 의&lt;/a&gt; 서브 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5466cc76778431e496f99d3381063b005b2172db" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type. This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">완전한 기호 유형 설명자를 발행하려면 컴파일러도 리턴 유형을 결정해야합니다. 이것은 메소드 호출 표현식 (있는 경우)에 대한 캐스트 또는 호출이 표현식 인 경우 &lt;code&gt;Object&lt;/code&gt; 또는 호출이 명령문 인 경우 &lt;code&gt;void&lt;/code&gt; 를 기반으로합니다. 캐스트는 기본 유형이 될 수 있지만 &lt;code&gt;void&lt;/code&gt; 는 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="3862489804c9e4ccfb61d25cb12af67885cc894f" translate="yes" xml:space="preserve">
          <source>To iterate over the &lt;code&gt;true&lt;/code&gt; bits in a &lt;code&gt;BitSet&lt;/code&gt;, use the following loop:</source>
          <target state="translated">&lt;code&gt;BitSet&lt;/code&gt; 에서 &lt;code&gt;true&lt;/code&gt; 비트 를 반복하려면 다음 루프를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7d94124009c8104d9400754da5bae70b65e77522" translate="yes" xml:space="preserve">
          <source>To learn what ports are available, you can retrieve port info objects through the &lt;code&gt;&lt;a href=&quot;mixer#getSourceLineInfo--&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mixer#getTargetLineInfo--&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; methods of the &lt;code&gt;Mixer&lt;/code&gt; interface. Instances of the &lt;code&gt;Port.Info&lt;/code&gt; class may also be constructed and used to obtain lines matching the parameters specified in the &lt;code&gt;Port.Info&lt;/code&gt; object.</source>
          <target state="translated">사용 가능한 포트를 배우려면 &lt;code&gt;Mixer&lt;/code&gt; 인터페이스 의 &lt;code&gt;&lt;a href=&quot;mixer#getSourceLineInfo--&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mixer#getTargetLineInfo--&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 통해 포트 정보 오브젝트를 검색 할 수 있습니다. &lt;code&gt;Port.Info&lt;/code&gt; 클래스의 인스턴스를 구성하여 &lt;code&gt;Port.Info&lt;/code&gt; 객체에 지정된 매개 변수와 일치하는 줄을 얻을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cca5ea87ce09aec7665e06c31b2fdc7ff940f7d1" translate="yes" xml:space="preserve">
          <source>To locate an encoder for a given encoding name it defines a static factory method which iterates through the known and available providers, returning only when it has located a suitable encoder or has run out of providers.</source>
          <target state="translated">주어진 인코딩 이름에 대한 인코더를 찾기 위해 알려진 인코더와 사용 가능한 제공자를 반복하는 정적 팩토리 메소드를 정의하여 적합한 인코더를 찾거나 제공자가 부족한 경우에만 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ac598dff30c7e6f4b3338e570c1a2ac571c32ca6" translate="yes" xml:space="preserve">
          <source>To logout the Subject, the caller calls the &lt;code&gt;logout&lt;/code&gt; method. As with the &lt;code&gt;login&lt;/code&gt; method, this &lt;code&gt;logout&lt;/code&gt; method invokes the &lt;code&gt;logout&lt;/code&gt; method for the configured modules.</source>
          <target state="translated">주제를 로그 아웃하기 위해 호출자는 &lt;code&gt;logout&lt;/code&gt; 메소드를 호출합니다 . 와 같이 &lt;code&gt;login&lt;/code&gt; 에있어서,이 &lt;code&gt;logout&lt;/code&gt; 방법은 호출 &lt;code&gt;logout&lt;/code&gt; 구성된 모듈을위한 방법.</target>
        </trans-unit>
        <trans-unit id="8370a551b9ecf25330a7b4809b220f9b66585147" translate="yes" xml:space="preserve">
          <source>To make MBean implementation simple, the JMX API includes the notion of &lt;em&gt;Standard MBeans&lt;/em&gt;. A Standard MBean is one whose attributes and operations are deduced from a Java interface using certain naming patterns, similar to those used by JavaBeans&lt;sup&gt;TM&lt;/sup&gt;. For example, consider an interface like this:</source>
          <target state="translated">MBean 구현을 단순하게하기 위해 JMX API에는 &lt;em&gt;표준 MBean&lt;/em&gt; 개념이 포함되어 있습니다. 표준 MBean은 JavaBeans &lt;sup&gt;TM에서&lt;/sup&gt; 사용하는 것과 유사한 특정 이름 지정 패턴을 사용하여 Java 인터페이스에서 속성과 조작을 추론하는 것 입니다. 예를 들어 다음과 같은 인터페이스를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="1a451ca1030952d13ab8c6eccc71c2d4c0d4e7e3" translate="yes" xml:space="preserve">
          <source>To make this concrete, suppose &lt;code&gt;list&lt;/code&gt; comprises &lt;code&gt;[a, b, c, d, e]&lt;/code&gt;. To move the element at index &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;b&lt;/code&gt;) forward two positions, perform the following invocation:</source>
          <target state="translated">이를 구체적으로하기 위해, &lt;code&gt;list&lt;/code&gt; 가 &lt;code&gt;[a, b, c, d, e]&lt;/code&gt; 포함 한다고 가정하자 . 인덱스 &lt;code&gt;1&lt;/code&gt; ( &lt;code&gt;b&lt;/code&gt; ) 의 요소를 두 위치 앞으로 이동하려면 다음 호출을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b4c58cb2bc69f7e6c96cfbf89e008c558629746d" translate="yes" xml:space="preserve">
          <source>To minimize the resources used by a bean, the classes used by bean editors are loaded only when the bean is being edited. They are not needed while the bean is running in an application and therefore not loaded. This information is kept in what's called a bean-info (see &lt;a href=&quot;beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Bean이 사용하는 자원을 최소화하기 위해 Bean 편집기가 사용하는 클래스는 Bean을 편집 할 때만로드됩니다. Bean이 응용 프로그램에서 실행 중일 때 필요하지 않으므로로드되지 않습니다. 이 정보는 bean-info ( &lt;a href=&quot;beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; &lt;/a&gt; 참조 )에 보관됩니다.</target>
        </trans-unit>
        <trans-unit id="001ebdf96f05e6d648887ada3f8bd648fe04f7a1" translate="yes" xml:space="preserve">
          <source>To modify the Principals Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt;. To modify the public credential Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt;. To modify the private credential Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt;.</source>
          <target state="translated">프린시 펄 세트를 수정하려면 호출자에게 &lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt; 이 있어야합니다 . 공개 자격 증명 세트를 수정하려면 호출자에게 &lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt; 가 있어야합니다 . 개인 자격 증명 세트를 수정하려면 호출자에게 &lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt; 가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="747d9090669e7fe96070fad66923fdb34ea9838f" translate="yes" xml:space="preserve">
          <source>To monitor a particular job see &lt;a href=&quot;printjoblistener&quot;&gt;&lt;code&gt;PrintJobListener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;printjobattributelistener&quot;&gt;&lt;code&gt;PrintJobAttributeListener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 작업을 모니터하려면 &lt;a href=&quot;printjoblistener&quot;&gt; &lt;code&gt;PrintJobListener&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;printjobattributelistener&quot;&gt; &lt;code&gt;PrintJobAttributeListener&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5089e9351790c46132512de82fa88484edb534b8" translate="yes" xml:space="preserve">
          <source>To move more than one element forward, increase the absolute value of the rotation distance. To move elements backward, use a positive shift distance.</source>
          <target state="translated">둘 이상의 요소를 앞으로 이동하려면 회전 거리의 절대 값을 늘리십시오. 요소를 뒤로 이동하려면 양의 이동 거리를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3ca70a679375afb9e5c1facb8c4a73f234fc0942" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;code&gt;NumberFormat&lt;/code&gt; for a specific locale, including the default locale, call one of &lt;code&gt;NumberFormat&lt;/code&gt;'s factory methods, such as &lt;code&gt;getInstance()&lt;/code&gt;. In general, do not call the &lt;code&gt;DecimalFormat&lt;/code&gt; constructors directly, since the &lt;code&gt;NumberFormat&lt;/code&gt; factory methods may return subclasses other than &lt;code&gt;DecimalFormat&lt;/code&gt;. If you need to customize the format object, do something like this:</source>
          <target state="translated">기본 로케일을 포함하여 특정 로케일에 대한 &lt;code&gt;NumberFormat&lt;/code&gt; 을 얻으려면 &lt;code&gt;getInstance()&lt;/code&gt; 와 같은 &lt;code&gt;NumberFormat&lt;/code&gt; 의 팩토리 메소드 중 하나를 호출하십시오 . &lt;code&gt;NumberFormat&lt;/code&gt; 팩토리 메소드는 &lt;code&gt;DecimalFormat&lt;/code&gt; 이외의 서브 클래스를 돌려 줄 가능성이 있기 때문에 , 일반적으로 &lt;code&gt;DecimalFormat&lt;/code&gt; 생성자를 직접 호출하지 말아주세요 . 형식 객체를 사용자 정의해야하는 경우 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="ae8a17b5ce812b5ceaad690b87f673999972dec5" translate="yes" xml:space="preserve">
          <source>To obtain a pure Julian calendar, set the change date to &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt;. To obtain a pure Gregorian calendar, set the change date to &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt;.</source>
          <target state="translated">순수 Julian 캘린더를 얻으려면 변경 날짜를 &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt; 로 설정하십시오 . 순수한 그레고리력을 얻으려면 변경 날짜를 &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="20e33629fe48c53be57864a0404e40b70573533b" translate="yes" xml:space="preserve">
          <source>To obtain a service ticket to initiate a context with the &quot;host&quot; service the permission is constructed as follows:</source>
          <target state="translated">&quot;호스트&quot;서비스로 컨텍스트를 시작하는 서비스 티켓을 얻으려면 다음과 같이 권한이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="4183bcd6b7f5e700ca506552b7f6e4893d309d35" translate="yes" xml:space="preserve">
          <source>To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getInstance or getCurrencyInstance. If you need only minor adjustments to a standard format, you can modify the format returned by a NumberFormat factory method.</source>
          <target state="translated">지정된 로케일의 표준 형식을 얻으려면 getInstance 또는 getCurrencyInstance와 같은 NumberFormat의 팩토리 메소드를 사용하십시오. 표준 형식을 약간만 조정해야하는 경우 NumberFormat 팩토리 메소드에서 리턴 한 형식을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bac3c8ec9809edfd530be7395e55daf334bf4e69" translate="yes" xml:space="preserve">
          <source>To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getNumberInstance. These factories will return the most appropriate sub-class of NumberFormat for a given locale.</source>
          <target state="translated">지정된 로케일의 표준 형식을 얻으려면 getNumberInstance와 같은 NumberFormat의 팩토리 메소드를 사용하십시오. 이 팩토리는 지정된 로케일에 대해 가장 적합한 NumberFormat 서브 클래스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="62bf607232950c6e5e7025ae2f04f0f1bad57b89" translate="yes" xml:space="preserve">
          <source>To obtain the current position in microseconds, use the &lt;code&gt;&lt;a href=&quot;dataline#getMicrosecondPosition--&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">마이크로 초 단위로 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;dataline#getMicrosecondPosition--&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6363ba55df8358f378be9461ccc703149c5241ef" translate="yes" xml:space="preserve">
          <source>To obtain the current position in sample frames, use the &lt;code&gt;&lt;a href=&quot;dataline#getFramePosition--&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">샘플 프레임에서 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;dataline#getFramePosition--&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="421ed1485a6e75b37273583056082a34fe2d7c71" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">겹치는 동안 이후 오프셋을 얻으려면 이 메서드의 결과에서 &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a76d6f4b82757c761a4c955f850c236f16199c83" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method. To throw an exception when there is a gap or overlap, use &lt;a href=&quot;zoneddatetime#ofStrict-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">겹치는 동안 이후 오프셋을 얻으려면 이 메서드의 결과에서 &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 . 간격이나 겹침이있을 때 예외를 발생 시키려면 &lt;a href=&quot;zoneddatetime#ofStrict-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="955cdb74994f65d4a739b1a149a26b028d610190" translate="yes" xml:space="preserve">
          <source>To perform a computation, stream &lt;a href=&quot;package-summary#StreamOps&quot;&gt;operations&lt;/a&gt; are composed into a &lt;em&gt;stream pipeline&lt;/em&gt;. A stream pipeline consists of a source (which might be an array, a collection, a generator function, an I/O channel, etc), zero or more &lt;em&gt;intermediate operations&lt;/em&gt; (which transform a stream into another stream, such as &lt;a href=&quot;stream#filter-java.util.function.Predicate-&quot;&gt;&lt;code&gt;filter(Predicate)&lt;/code&gt;&lt;/a&gt;), and a &lt;em&gt;terminal operation&lt;/em&gt; (which produces a result or side-effect, such as &lt;a href=&quot;stream#count--&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream#forEach-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEach(Consumer)&lt;/code&gt;&lt;/a&gt;). Streams are lazy; computation on the source data is only performed when the terminal operation is initiated, and source elements are consumed only as needed.</source>
          <target state="translated">계산을 수행하기 위해 스트림 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;작업&lt;/a&gt; 은 &lt;em&gt;스트림 파이프 라인&lt;/em&gt; 으로 구성됩니다 . 스트림 파이프 라인은 소스 (배열, 수집, 생성기 함수, I / O 채널 등), 0 개 이상의 &lt;em&gt;중간 작업&lt;/em&gt; (스트림 (예 : &lt;a href=&quot;stream#filter-java.util.function.Predicate-&quot;&gt; &lt;code&gt;filter(Predicate)&lt;/code&gt; &lt;/a&gt; 과 같은 스트림을 다른 스트림으로 변환 )으로 구성됩니다. ) 및 &lt;em&gt;터미널 작업&lt;/em&gt; ( &lt;a href=&quot;stream#count--&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;stream#forEach-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEach(Consumer)&lt;/code&gt; &lt;/a&gt; 과 같은 결과 또는 부작용을 생성 함 ). 시냇물은 게으르다. 소스 데이터에 대한 계산은 터미널 작업이 시작될 때만 수행되며 소스 요소는 필요한 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f24477df6a8f7d518c4250334cd224fae9b1651e" translate="yes" xml:space="preserve">
          <source>To permit the discovery of additional chronologies, the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; is used. A file must be added to the &lt;code&gt;META-INF/services&lt;/code&gt; directory with the name 'java.time.chrono.Chronology' listing the implementation classes. See the ServiceLoader for more details on service loading. For lookup by id or calendarType, the system provided calendars are found first followed by application provided calendars.</source>
          <target state="translated">추가 연대를 발견 할 수 있도록 &lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; 가 사용됩니다. 구현 클래스를 나열하는 이름이 'java.time.chrono.Chronology'인 &lt;code&gt;META-INF/services&lt;/code&gt; 디렉토리에 파일을 추가해야합니다 . 서비스로드에 대한 자세한 내용은 ServiceLoader를 참조하십시오. id 또는 calendarType으로 조회 할 경우 시스템 제공 캘린더가 먼저 찾은 다음 애플리케이션 제공 캘린더가 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="f214719abbe3a0f490a16da532d965a4ed7ccf8b" translate="yes" xml:space="preserve">
          <source>To prevent man-in-the-middle attacks, hostname checks can be done to verify that the hostname in an end-entity certificate matches the targeted hostname. TLS does not require such checks, but some protocols over TLS (such as HTTPS) do. In earlier versions of the JDK, the certificate chain checks were done at the SSL/TLS layer, and the hostname verification checks were done at the layer over TLS. This class allows for the checking to be done during a single call to this class.</source>
          <target state="translated">중간자 (man-in-the-middle) 공격을 방지하기 위해 엔드 엔티티 인증서의 호스트 이름이 대상 호스트 이름과 일치하는지 확인하기 위해 호스트 이름 검사를 수행 할 수 있습니다. TLS에는 이러한 검사가 필요하지 않지만 TLS를 통한 일부 프로토콜 (예 : HTTPS)에는 필요합니다. JDK의 이전 버전에서는 인증서 체인 검사가 SSL / TLS 계층에서 수행되었으며 호스트 이름 확인 검사가 TLS를 통해 계층에서 수행되었습니다. 이 클래스를 사용하면이 클래스를 한 번 호출하는 동안 검사를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c0f2cbf694f3313c16fa7613b5e6dd577e4074f" translate="yes" xml:space="preserve">
          <source>To provide a specific keystore type:</source>
          <target state="translated">특정 키 저장소 유형을 제공하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f2c7dc36ed85076024b694930f5b7d29edac3f37" translate="yes" xml:space="preserve">
          <source>To query for the printable area, a client must supply a suitable context. Without specifying at the very least the size of the media being used no meaningful value for printable area can be obtained.</source>
          <target state="translated">인쇄 가능 영역을 쿼리하려면 클라이언트가 적절한 컨텍스트를 제공해야합니다. 사용되는 용지의 크기를 최소한으로 지정하지 않으면 인쇄 가능 영역에 대한 의미있는 값을 얻을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="263c5b92a194433ee16767a9bc877843ab4b7dc8" translate="yes" xml:space="preserve">
          <source>To receive MBeanServerNotifications, you need to register a listener with the &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt; MBean that represents the MBeanServer. The ObjectName of the MBeanServerDelegate is &lt;a href=&quot;mbeanserverdelegate#DELEGATE_NAME&quot;&gt;&lt;code&gt;MBeanServerDelegate.DELEGATE_NAME&lt;/code&gt;&lt;/a&gt;, which is &lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</source>
          <target state="translated">MBeanServerNotifications를 수신하려면 MBeanServer 를 나타내는 &lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; &lt;/a&gt; MBean에 리스너를 등록해야합니다 . MBeanServerDelegate의 ObjectName은 &lt;a href=&quot;mbeanserverdelegate#DELEGATE_NAME&quot;&gt; &lt;code&gt;MBeanServerDelegate.DELEGATE_NAME&lt;/code&gt; &lt;/a&gt; 이며 &lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f583fb3f20043b03ba3a2a6406effbeae1eccf6a" translate="yes" xml:space="preserve">
          <source>To rely on the default type:</source>
          <target state="translated">기본 유형을 사용하려면</target>
        </trans-unit>
        <trans-unit id="91f9cda7b431d0791931992a65a62beb1c70ea1a" translate="yes" xml:space="preserve">
          <source>To remove an attribute by local name and namespace URI, use the &lt;code&gt;removeAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">로컬 이름 및 네임 스페이스 URI로 속성을 제거하려면 &lt;code&gt;removeAttributeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f2f47f1e44b85ff762285f2c5a88392990bee0a" translate="yes" xml:space="preserve">
          <source>To remove the render size setting, pass in a value of &lt;code&gt;null&lt;/code&gt; for &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">렌더링 크기 설정을 제거하려면 값을 전달 &lt;code&gt;null&lt;/code&gt; 에 대한 &lt;code&gt;size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d75120333640b4d1d4805bc00d87a16aaa41463" translate="yes" xml:space="preserve">
          <source>To retrieve a number, use the following code:</source>
          <target state="translated">숫자를 검색하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dbf8b81ecf37a1973c4e33082f309e1de3fee8e2" translate="yes" xml:space="preserve">
          <source>To retrieve all the Principals associated with a &lt;code&gt;Subject&lt;/code&gt;, invoke the &lt;code&gt;getPrincipals&lt;/code&gt; method. To retrieve all the public or private credentials belonging to a &lt;code&gt;Subject&lt;/code&gt;, invoke the &lt;code&gt;getPublicCredentials&lt;/code&gt; method or &lt;code&gt;getPrivateCredentials&lt;/code&gt; method, respectively. To modify the returned &lt;code&gt;Set&lt;/code&gt; of Principals and credentials, use the methods defined in the &lt;code&gt;Set&lt;/code&gt; class. For example:</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; 와 연관된 모든 프린시 펄을 검색하려면 &lt;code&gt;getPrincipals&lt;/code&gt; 메소드를 호출하십시오 . &lt;code&gt;Subject&lt;/code&gt; 에 속하는 모든 공개 또는 개인 신임 정보를 검색하려면 각각 &lt;code&gt;getPublicCredentials&lt;/code&gt; 메소드 또는 &lt;code&gt;getPrivateCredentials&lt;/code&gt; 메소드를 호출하십시오 . 리턴 된 프린시 펄 및 신임 정보 &lt;code&gt;Set&lt;/code&gt; 를 수정하려면 &lt;code&gt;Set&lt;/code&gt; 클래스에 정의 된 메소드를 사용하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd7c59a4a30c4a9f9ade76ab24ca6203b8101d8d" translate="yes" xml:space="preserve">
          <source>To retrieve an attribute node by qualified name and namespace URI, use the &lt;code&gt;getAttributeNodeNS&lt;/code&gt; method.</source>
          <target state="translated">규정 된 이름 및 네임 스페이스 URI로 속성 노드를 검색하려면 &lt;code&gt;getAttributeNodeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffccbd13dfb2daf73f4f42560bc59770446ca868" translate="yes" xml:space="preserve">
          <source>To retrieve current cookie store.</source>
          <target state="translated">현재 쿠키 저장소를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="dafe7f14b12f045174019ecf0206f06223d238c3" translate="yes" xml:space="preserve">
          <source>To select what instrument should play the notes on a particular MIDI channel, two kinds of MIDI message are used that specify a patch location: a bank-select command, and a program-change channel command. The Java Sound equivalent is the &lt;a href=&quot;midichannel#programChange-int-int-&quot;&gt;&lt;code&gt;programChange(int, int)&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiChannel&lt;/code&gt;.</source>
          <target state="translated">특정 MIDI 채널에서 음표를 연주 할 악기를 선택하기 위해 패치 위치를 지정하는 두 가지 종류의 MIDI 메시지 (뱅크 선택 명령 및 프로그램 변경 채널 명령)가 사용됩니다. Java Sound와 동등한 기능은 &lt;code&gt;MidiChannel&lt;/code&gt; 의 &lt;a href=&quot;midichannel#programChange-int-int-&quot;&gt; &lt;code&gt;programChange(int, int)&lt;/code&gt; &lt;/a&gt; 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="1f07255a778509d637268f559910dc6e481f25e8" translate="yes" xml:space="preserve">
          <source>To set an attribute with a qualified name and namespace URI, use the &lt;code&gt;setAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">규정 된 이름 및 네임 스페이스 URI로 속성을 설정하려면 &lt;code&gt;setAttributeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6abe598d39804a927c2ced4346e73a14a3784062" translate="yes" xml:space="preserve">
          <source>To set the cookie policy of this cookie manager.</source>
          <target state="translated">이 쿠키 관리자의 쿠키 정책을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="eeb6a793892d451fecc2449a02eb99c7e627a351" translate="yes" xml:space="preserve">
          <source>To simplify the task of setting up the environment required by a JNDI application, application components and service providers may be distributed along with &lt;em&gt;resource files.&lt;/em&gt; A JNDI resource file is a file in the properties file format (see &lt;a href=&quot;../../java/util/properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;), containing a list of key/value pairs. The key is the name of the property (e.g. &quot;java.naming.factory.object&quot;) and the value is a string in the format defined for that property. Here is an example of a JNDI resource file:</source>
          <target state="translated">JNDI 애플리케이션에 필요한 환경 설정 작업을 단순화하기 위해 애플리케이션 컴포넌트 및 서비스 제공자가 &lt;em&gt;자원 파일&lt;/em&gt; 과 함께 분배 될 수 있습니다 &lt;em&gt;.&lt;/em&gt; JNDI 자원 파일은 키 / 값 쌍 목록을 포함하는 특성 파일 형식 ( &lt;a href=&quot;../../java/util/properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 참조 )의 파일입니다 . 키는 속성 이름 (예 : &quot;java.naming.factory.object&quot;)이며 값은 해당 속성에 대해 정의 된 형식의 문자열입니다. 다음은 JNDI 리소스 파일의 예입니다.</target>
        </trans-unit>
        <trans-unit id="cb7dcfade2357e76eeab66e5023506d61009553b" translate="yes" xml:space="preserve">
          <source>To specify a day of the week on or before an exact day of the month, set &lt;em&gt;day-of-month&lt;/em&gt; and &lt;em&gt;day-of-week&lt;/em&gt; to a negative value. For example, to specify the last Wednesday on or before the 21st of March, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;MARCH&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; is -21 and &lt;em&gt;day-of-week&lt;/em&gt; is &lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;calendar#WEDNESDAY&quot;&gt;&lt;code&gt;WEDNESDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">, 세트 또는 달의 정확한 일 이전의 요일을 지정하려면 &lt;em&gt;하루의 달&lt;/em&gt; 과 &lt;em&gt;요일&lt;/em&gt; 음의 값으로 설정합니다. 예를 들어, 또는 3 월 세트의 21 일 이전의 마지막 수요일을 지정하려면 &lt;em&gt;한 달&lt;/em&gt; 에 &lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;MARCH&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;-의 - 월 일&lt;/em&gt; -21과 &lt;em&gt;-의 주 날&lt;/em&gt; 입니다 &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;calendar#WEDNESDAY&quot;&gt; &lt;code&gt;WEDNESDAY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="600c1d56e2bfbab8d400f99a6f9b01cc9657e004" translate="yes" xml:space="preserve">
          <source>To specify a day of week on or after an exact day of month, set the &lt;em&gt;month&lt;/em&gt; to an exact month value, &lt;em&gt;day-of-month&lt;/em&gt; to the day on or after which the rule is applied, and &lt;em&gt;day-of-week&lt;/em&gt; to a negative &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field value. For example, to specify the second Sunday of April, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#APRIL&quot;&gt;&lt;code&gt;APRIL&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; to 8, and &lt;em&gt;day-of-week&lt;/em&gt; to &lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정확한 요일 또는 그 이후에 요일을 지정하려면 해당 &lt;em&gt;월&lt;/em&gt; 을 정확한 월 값으로 설정하고 , &lt;em&gt;요일을&lt;/em&gt; 규칙이 적용되는 &lt;em&gt;요일&lt;/em&gt; 로 설정하고, &lt;em&gt;요일&lt;/em&gt; 을 음수로 설정하십시오. &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 필드 값 예를 들어, 4 월, 세트의 두 번째 일요일 지정 &lt;em&gt;달&lt;/em&gt; 에 &lt;a href=&quot;calendar#APRIL&quot;&gt; &lt;code&gt;APRIL&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;일 - 중 - 달&lt;/em&gt; 8, 및 &lt;em&gt;요일&lt;/em&gt; 에 &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cff0db5d830da38e5dab22f343491d41223cf96f" translate="yes" xml:space="preserve">
          <source>To specify an exact day of month, set the &lt;em&gt;month&lt;/em&gt; and &lt;em&gt;day-of-month&lt;/em&gt; to an exact value, and &lt;em&gt;day-of-week&lt;/em&gt; to zero. For example, to specify March 1, set the &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;MARCH&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; to 1, and &lt;em&gt;day-of-week&lt;/em&gt; to 0.</source>
          <target state="translated">정확한 월을 지정하려면 &lt;em&gt;월&lt;/em&gt; 과 &lt;em&gt;월&lt;/em&gt; 을 정확한 값으로 설정하고 &lt;em&gt;요일&lt;/em&gt; 을 0으로 설정하십시오. 예를 들어, 설정 년 3 월 1 일 지정하려면 &lt;em&gt;한 달&lt;/em&gt; 에 &lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;MARCH&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;일-의 달을&lt;/em&gt; 1로하고, &lt;em&gt;요일&lt;/em&gt; 0.</target>
        </trans-unit>
        <trans-unit id="ebef5d1fda4022cf205594fb36709781cf042e4a" translate="yes" xml:space="preserve">
          <source>To specify an unlimited cardinality.</source>
          <target state="translated">무제한 카디널리티를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="346177fca6fdf62142f8d6109cf3044e28c817e9" translate="yes" xml:space="preserve">
          <source>To specify the local machine, use &quot;localhost&quot; as the</source>
          <target state="translated">로컬 컴퓨터를 지정하려면 &quot;localhost&quot;를</target>
        </trans-unit>
        <trans-unit id="71610a41fcfd2431be44a9737e9e5d35ee635b42" translate="yes" xml:space="preserve">
          <source>To specify, the last day-of-week of the month, set &lt;em&gt;day-of-week&lt;/em&gt; to a &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; value and &lt;em&gt;day-of-month&lt;/em&gt; to -1. For example, to specify the last Sunday of October, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#OCTOBER&quot;&gt;&lt;code&gt;OCTOBER&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-week&lt;/em&gt; to &lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;day-of-month&lt;/em&gt; to -1.</source>
          <target state="translated">매월 마지막 요일을 지정하려면 &lt;em&gt;요일&lt;/em&gt; 을 &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 값으로 설정하고 &lt;em&gt;일&lt;/em&gt; 을 -1로 설정하십시오. 예를 들어 10 월 마지막 일요일을 지정하려면 &lt;em&gt;월&lt;/em&gt; 을 &lt;a href=&quot;calendar#OCTOBER&quot;&gt; &lt;code&gt;OCTOBER&lt;/code&gt; 로&lt;/a&gt; , &lt;em&gt;요일&lt;/em&gt; 을 &lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; 로&lt;/a&gt; , &lt;em&gt;월&lt;/em&gt; 을 -1로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="dabced04ee8980ac3351cf7550967d78cbcac1de" translate="yes" xml:space="preserve">
          <source>To start a process with an explicit set of environment variables, first call &lt;a href=&quot;../util/map#clear--&quot;&gt;&lt;code&gt;Map.clear()&lt;/code&gt;&lt;/a&gt; before adding environment variables.</source>
          <target state="translated">명시 적 환경 변수 세트로 프로세스를 시작하려면 먼저 환경 변수 를 추가하기 전에 &lt;a href=&quot;../util/map#clear--&quot;&gt; &lt;code&gt;Map.clear()&lt;/code&gt; &lt;/a&gt; 를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="58629dec74d32767f98759bd723d2f2301a534af" translate="yes" xml:space="preserve">
          <source>To successfully store and retrieve objects from a hashtable, the objects used as keys must implement the &lt;code&gt;hashCode&lt;/code&gt; method and the &lt;code&gt;equals&lt;/code&gt; method.</source>
          <target state="translated">해시 테이블에서 객체를 성공적으로 저장하고 검색하려면 키로 사용 된 객체가 &lt;code&gt;hashCode&lt;/code&gt; 메소드와 &lt;code&gt;equals&lt;/code&gt; 메소드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="61ba1f124775d658e582d1b9c65013ec1fb595ed" translate="yes" xml:space="preserve">
          <source>To support the most common use cases, the default implementation of this method returns &lt;code&gt;true&lt;/code&gt; when the number of registered parties has become zero as the result of a party invoking &lt;code&gt;arriveAndDeregister&lt;/code&gt;. You can disable this behavior, thus enabling continuation upon future registrations, by overriding this method to always return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">가장 일반적인 사용 사례를 지원하기 위해이 메소드의 기본 구현은 당사자가 &lt;code&gt;arriveAndDeregister&lt;/code&gt; 를 호출 한 결과 등록 된 당사자 수가 0이되면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 이 동작을 비활성화하면 항상 &lt;code&gt;false&lt;/code&gt; 를 반환하도록이 메서드를 재정 의하여 향후 등록시 계속할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93c821be0e5b126c40cf4d122a421ae1c3b72506" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;offsetdatetime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오프셋 간의 차이를 고려하고 시간 필드를 조정하려면 &lt;a href=&quot;offsetdatetime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9c0200631901a83fac6a3cbd77dd17954ef0002" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;offsettime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오프셋 간의 차이를 고려하고 시간 필드를 조정하려면 &lt;a href=&quot;offsettime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b5faa256a72bd87ad66902ce359b5fa4dc07a0c" translate="yes" xml:space="preserve">
          <source>To use this class as the basis of a synchronizer, redefine the following methods, as applicable, by inspecting and/or modifying the synchronization state using &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractqueuedsynchronizer#setState-int-&quot;&gt;&lt;code&gt;setState(int)&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;abstractqueuedsynchronizer#compareAndSetState-int-int-&quot;&gt;&lt;code&gt;compareAndSetState(int, int)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이 클래스를 동기화 프로그램의 기초로 사용하려면 &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;abstractqueuedsynchronizer#setState-int-&quot;&gt; &lt;code&gt;setState(int)&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;abstractqueuedsynchronizer#compareAndSetState-int-int-&quot;&gt; &lt;code&gt;compareAndSetState(int, int)&lt;/code&gt; &lt;/a&gt; 사용하여 동기화 상태를 검사 및 / 또는 수정하여 해당하는 경우 다음 메소드를 재정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3957b540892debf6dc1ef8d89f9aa2666b7352b" translate="yes" xml:space="preserve">
          <source>ToASCII operation can fail. ToASCII fails if any step of it fails. If ToASCII operation fails, an IllegalArgumentException will be thrown. In this case, the input string should not be used in an internationalized domain name.</source>
          <target state="translated">ToASCII 조작이 실패 할 수 있습니다. 단계가 실패하면 ToASCII가 실패합니다. ToASCII 조작이 실패하면 IllegalArgumentException이 발생합니다. 이 경우 국제화 된 도메인 이름에 입력 문자열을 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ba0a3f3c82b6a5fc5288edead51ddf50d3b0d1e9" translate="yes" xml:space="preserve">
          <source>ToDoubleBiFunction</source>
          <target state="translated">ToDoubleBiFunction</target>
        </trans-unit>
        <trans-unit id="0318cdbb2b34e80a79e890127925ce52072d7f3c" translate="yes" xml:space="preserve">
          <source>ToDoubleBiFunction.applyAsDouble()</source>
          <target state="translated">ToDoubleBiFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="09f750600a104a44d78135d5e870412f3c7805b5" translate="yes" xml:space="preserve">
          <source>ToDoubleFunction</source>
          <target state="translated">ToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="4e2d379b77935a919a92841c689e185cb4a21cb2" translate="yes" xml:space="preserve">
          <source>ToDoubleFunction.applyAsDouble()</source>
          <target state="translated">ToDoubleFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="32c237c8ac27995aa55b0864b8fe91bf8f438790" translate="yes" xml:space="preserve">
          <source>ToIntBiFunction</source>
          <target state="translated">ToIntBiFunction</target>
        </trans-unit>
        <trans-unit id="05cf5723dc4be71476d90209a69fb5b6d835eec9" translate="yes" xml:space="preserve">
          <source>ToIntBiFunction.applyAsInt()</source>
          <target state="translated">ToIntBiFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="91a9b9d60fbf777890e4726e3100e8b9ba66b566" translate="yes" xml:space="preserve">
          <source>ToIntFunction</source>
          <target state="translated">ToIntFunction</target>
        </trans-unit>
        <trans-unit id="f55d62bed2d4830e1e8b4d4e6a85cecdb300e5cd" translate="yes" xml:space="preserve">
          <source>ToIntFunction.applyAsInt()</source>
          <target state="translated">ToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="4949a89642588c0be35330ecc2f3ae51fd705ac1" translate="yes" xml:space="preserve">
          <source>ToLongBiFunction</source>
          <target state="translated">ToLongBiFunction</target>
        </trans-unit>
        <trans-unit id="4bd64f065ed2902bbcd8f76d6e44881bc4118d44" translate="yes" xml:space="preserve">
          <source>ToLongBiFunction.applyAsLong()</source>
          <target state="translated">ToLongBiFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="41f13cd58fc6b1fa34ead7945815dddba3add0bd" translate="yes" xml:space="preserve">
          <source>ToLongFunction</source>
          <target state="translated">ToLongFunction</target>
        </trans-unit>
        <trans-unit id="e56d9ac1d48e88ffbac75f7e19702347c5e304ad" translate="yes" xml:space="preserve">
          <source>ToLongFunction.applyAsLong()</source>
          <target state="translated">ToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="3eaca1a8d0cf29b74a258f818fe7e8e50c017801" translate="yes" xml:space="preserve">
          <source>ToUnicode never fails. In case of any error, the input string is returned unmodified.</source>
          <target state="translated">ToUnicode는 절대 실패하지 않습니다. 오류가 발생하면 입력 문자열이 수정되지 않은 상태로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="226fb00dcae85857dd8afacc31a7c3741fdc264f" translate="yes" xml:space="preserve">
          <source>Together these two values allow a year or month to be divided into weeks.</source>
          <target state="translated">이 두 값을 함께 사용하면 1 년 또는 월을 몇 주로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b099a72141eb62ad771b99b713aebac10a2db2e" translate="yes" xml:space="preserve">
          <source>TooManyListenersException</source>
          <target state="translated">TooManyListenersException</target>
        </trans-unit>
        <trans-unit id="9a830c714bb2b52b8f817649335855437ebcb701" translate="yes" xml:space="preserve">
          <source>Tool</source>
          <target state="translated">Tool</target>
        </trans-unit>
        <trans-unit id="2465964821ffab0f30173adb50e18b4b07c33308" translate="yes" xml:space="preserve">
          <source>Tool.getSourceVersions()</source>
          <target state="translated">Tool.getSourceVersions()</target>
        </trans-unit>
        <trans-unit id="ca44d4b0cd3f5970bb01aa99598f074dd8256704" translate="yes" xml:space="preserve">
          <source>Tool.run()</source>
          <target state="translated">Tool.run()</target>
        </trans-unit>
        <trans-unit id="9db5d55f0a18fe16f909e9161136b5b2187f90ab" translate="yes" xml:space="preserve">
          <source>ToolProvider</source>
          <target state="translated">ToolProvider</target>
        </trans-unit>
        <trans-unit id="125c22c4e79d3f1aaa4ff4818affaaa630c94b27" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemDocumentationTool()</source>
          <target state="translated">ToolProvider.getSystemDocumentationTool()</target>
        </trans-unit>
        <trans-unit id="5a85c700b447e10795dd82b2c999d7b683f2201d" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemJavaCompiler()</source>
          <target state="translated">ToolProvider.getSystemJavaCompiler()</target>
        </trans-unit>
        <trans-unit id="adebd288935819a43f9fa88aef37e1f86d705eb0" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemToolClassLoader()</source>
          <target state="translated">ToolProvider.getSystemToolClassLoader()</target>
        </trans-unit>
        <trans-unit id="d0860f604b36747580272753c6007388c2eb7dbf" translate="yes" xml:space="preserve">
          <source>Tools can be located using &lt;a href=&quot;../../java/util/serviceloader#load-java.lang.Class-&quot;&gt;&lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../java/util/serviceloader#load-java.lang.Class-&quot;&gt; &lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt; &lt;/a&gt; 사용하여 도구를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1c5a7af06ba8c911bcfd11f72d7463fed9a472d" translate="yes" xml:space="preserve">
          <source>Track</source>
          <target state="translated">Track</target>
        </trans-unit>
        <trans-unit id="6039ae3bec62ee58d46239c85708e58980430f4a" translate="yes" xml:space="preserve">
          <source>Track.add()</source>
          <target state="translated">Track.add()</target>
        </trans-unit>
        <trans-unit id="c383eb9ec76a8558da2ada8319656f778db25dca" translate="yes" xml:space="preserve">
          <source>Track.get()</source>
          <target state="translated">Track.get()</target>
        </trans-unit>
        <trans-unit id="f06a16518df4333b85e639ec34c445659ec8dcbe" translate="yes" xml:space="preserve">
          <source>Track.remove()</source>
          <target state="translated">Track.remove()</target>
        </trans-unit>
        <trans-unit id="d7cf50c20f4790528323ec22a2123ff40f267630" translate="yes" xml:space="preserve">
          <source>Track.size()</source>
          <target state="translated">Track.size()</target>
        </trans-unit>
        <trans-unit id="c0a1198b7666cb2d73a3a3104c49ade8c53119a2" translate="yes" xml:space="preserve">
          <source>Track.ticks()</source>
          <target state="translated">Track.ticks()</target>
        </trans-unit>
        <trans-unit id="bb5bfba786b0eae0218a1983e05a5411de1d4796" translate="yes" xml:space="preserve">
          <source>TransferQueue</source>
          <target state="translated">TransferQueue</target>
        </trans-unit>
        <trans-unit id="573907bd24612ac4bd00872c28366e83deb01854" translate="yes" xml:space="preserve">
          <source>TransferQueue.getWaitingConsumerCount()</source>
          <target state="translated">TransferQueue.getWaitingConsumerCount()</target>
        </trans-unit>
        <trans-unit id="ca2f116faa0f32c42170a0967ec26a5841ddf432" translate="yes" xml:space="preserve">
          <source>TransferQueue.hasWaitingConsumer()</source>
          <target state="translated">TransferQueue.hasWaitingConsumer()</target>
        </trans-unit>
        <trans-unit id="4323aaff7adee58e9b2c8e02d952d56b56c5ef81" translate="yes" xml:space="preserve">
          <source>TransferQueue.transfer()</source>
          <target state="translated">TransferQueue.transfer()</target>
        </trans-unit>
        <trans-unit id="2e238bfd7c98c64fd2c433c149b7961c4585de03" translate="yes" xml:space="preserve">
          <source>TransferQueue.tryTransfer()</source>
          <target state="translated">TransferQueue.tryTransfer()</target>
        </trans-unit>
        <trans-unit id="a048d6e6d7ce25b1e50aa81a5c5db3185a0bfb6f" translate="yes" xml:space="preserve">
          <source>Transferring data</source>
          <target state="translated">데이터 전송</target>
        </trans-unit>
        <trans-unit id="e885c1d9baf8cbb3c0238784b38da3846bd64021" translate="yes" xml:space="preserve">
          <source>Transfers bytes from this channel's file to the given writable byte channel.</source>
          <target state="translated">이 채널의 파일에서 지정된 쓰기 가능한 바이트 채널로 바이트를 전송합니다.</target>
        </trans-unit>
        <trans-unit id="db6a55b55707a8b2cb4c137d52447d234470548e" translate="yes" xml:space="preserve">
          <source>Transfers bytes into this channel's file from the given readable byte channel.</source>
          <target state="translated">주어진 읽을 수있는 바이트 채널에서이 채널의 파일로 바이트를 전송합니다.</target>
        </trans-unit>
        <trans-unit id="b125d8a36092938479dcc7ee49adeb6009285170" translate="yes" xml:space="preserve">
          <source>Transfers the element to a consumer if it is possible to do so before the timeout elapses.</source>
          <target state="translated">시간 초과가 경과하기 전에 가능한 경우 요소를 소비자에게 전송합니다.</target>
        </trans-unit>
        <trans-unit id="5c9d10af3f672647b4fdfa21f16fbfe5ed54a2b9" translate="yes" xml:space="preserve">
          <source>Transfers the element to a consumer, waiting if necessary to do so.</source>
          <target state="translated">필요한 경우 요소를 소비자에게 전송하고 기다립니다.</target>
        </trans-unit>
        <trans-unit id="1d93f2dc771c77d1c7018c91e84fbb34bc2155df" translate="yes" xml:space="preserve">
          <source>Transfers the element to a waiting consumer immediately, if possible.</source>
          <target state="translated">가능한 경우 요소를 즉시 대기 소비자에게 전송합니다.</target>
        </trans-unit>
        <trans-unit id="ca4d4304cb107b1cd7b72652d0bb4f5b52d6a971" translate="yes" xml:space="preserve">
          <source>Transformations are applied in the following order:</source>
          <target state="translated">변환은 다음 순서로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="427f8149763a71f58d01809ed2f00fbc5d4a7482" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format.</source>
          <target state="translated">JAR 파일을 Pack200 형식의 압축 스트림으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="bfa2086e372da8c2a99ed28990f49bfe633f06b9" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format. Please refer to Network Transfer Format JSR 200 Specification at &lt;a href=&quot;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&quot;&gt;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&lt;/a&gt;</source>
          <target state="translated">JAR 파일을 Pack200 형식의 압축 스트림으로 변환합니다. &lt;a href=&quot;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&quot;&gt;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html의&lt;/a&gt; 네트워크 전송 형식 JSR 200 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="25bdaf180ce67e68f08941f5090cebffa74a9d8b" translate="yes" xml:space="preserve">
          <source>Transforms the String into a series of bits that can be compared bitwise to other CollationKeys. CollationKeys provide better performance than Collator.compare when Strings are involved in multiple comparisons. See the Collator class description for an example using CollationKeys.</source>
          <target state="translated">문자열을 다른 CollationKey와 비트 단위로 비교할 수있는 일련의 비트로 변환합니다. CollationKey는 문자열이 여러 비교에 포함될 때 Collator.compare보다 나은 성능을 제공합니다. CollationKeys를 사용한 예제는 Collator 클래스 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1fefb842e9f6899ce3a4d4c1995c23d512c00dce" translate="yes" xml:space="preserve">
          <source>Transforms the string into a series of characters that can be compared with CollationKey.compareTo. This overrides java.text.Collator.getCollationKey. It can be overriden in a subclass.</source>
          <target state="translated">문자열을 CollationKey.compareTo와 비교할 수있는 일련의 문자로 변환합니다. 이것은 java.text.Collator.getCollationKey를 대체합니다. 서브 클래스에서 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45d5bc5a6500f8488347501d41f5194f063eae68" translate="yes" xml:space="preserve">
          <source>Transient</source>
          <target state="translated">Transient</target>
        </trans-unit>
        <trans-unit id="5b601527b30341f6dd29e898feb7eeba79792b68" translate="yes" xml:space="preserve">
          <source>Transient.value</source>
          <target state="translated">Transient.value</target>
        </trans-unit>
        <trans-unit id="d03eb4f7f8405fdb8867dacd161044d034bbc665" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 문맥 설정에 따른 둥근은. &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="6105c018fcff9985e0750ac22252585e51ec7b62" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 와 . &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="be0411dfa667d534a22c4a53a6be0938d5e800dc" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt;, rounded according to the &lt;code&gt;precision&lt;/code&gt; and rounding mode settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;BigInteger&lt;/code&gt; 스케일링되지 않은 값과 &lt;code&gt;int&lt;/code&gt; 스케일을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. &lt;code&gt;BigDecimal&lt;/code&gt; 의 값 은 &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt; 이며 &lt;code&gt;precision&lt;/code&gt; 및 반올림 모드 설정 에 따라 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="26956240efce2987468795621b24536f8bca2a27" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;. The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 의 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; (A) 내로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; . &lt;code&gt;BigDecimal&lt;/code&gt; 의 값 은 &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9f9c3eca67395def6a8eea8b965b84bdef922b01" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal representation of the &lt;code&gt;double&lt;/code&gt;'s binary floating-point value. The scale of the returned &lt;code&gt;BigDecimal&lt;/code&gt; is the smallest value such that &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; is an integer.</source>
          <target state="translated">변환 &lt;code&gt;double&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; 의 정확한 진수 표현입니다 &lt;code&gt;double&lt;/code&gt; 의 이진 부동 소수점 값. 리턴 된 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일은 &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; 이 정수 가되도록 가장 작은 값 입니다.</target>
        </trans-unit>
        <trans-unit id="850828fbab0c584297016129b6722ea3ab1becd2" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, using the &lt;code&gt;double&lt;/code&gt;'s canonical string representation provided by the &lt;a href=&quot;../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환 &lt;code&gt;double&lt;/code&gt; (A) 내로 &lt;code&gt;BigDecimal&lt;/code&gt; 은 USING, &lt;code&gt;double&lt;/code&gt; 의해 제공의 표준 문자열 표현 &lt;a href=&quot;../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="07b6f09a046e9531f0736348533520c9c60bef0b" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is the smallest value such that &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; is an integer.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;double&lt;/code&gt; 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일은 &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; 이 정수 가되도록 가장 작은 값 입니다.</target>
        </trans-unit>
        <trans-unit id="fbb9ae3fa6eeea7b936665101ff5f4c0736effcd" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt;, before any rounding, is zero.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;long&lt;/code&gt; 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. 반올림하기 전에 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="562116b88884d3bfcedf2a8b9d640829218018e9" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; . &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="e2d198ea04a92dbcd6d06acdc6325462bd68c515" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;. This &quot;static factory method&quot; is provided in preference to a (&lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;) constructor because it allows for reuse of frequently used &lt;code&gt;BigDecimal&lt;/code&gt; values..</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; 로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; . 이 &quot;정적 팩토리 메소드&quot;는 자주 사용되는 &lt;code&gt;BigDecimal&lt;/code&gt; 값 을 재사용 할 수 있기 때문에 ( &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; ) 생성자 보다 우선적으로 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="a87266ba09f203dfab987bd4aae1f2f0a54ea17f" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; value into a &lt;code&gt;BigDecimal&lt;/code&gt; with a scale of zero. This &quot;static factory method&quot; is provided in preference to a (&lt;code&gt;long&lt;/code&gt;) constructor because it allows for reuse of frequently used &lt;code&gt;BigDecimal&lt;/code&gt; values.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 에 값 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일이 0의를. 이 &quot;정적 팩토리 메소드&quot;는 자주 사용되는 &lt;code&gt;BigDecimal&lt;/code&gt; 값 을 재사용 할 수 있으므로 ( &lt;code&gt;long&lt;/code&gt; ) 생성자 보다 우선적으로 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="ffc7d4cdbf5c8bddb6c6be1496ec23afbf00d8df" translate="yes" xml:space="preserve">
          <source>Translates a byte array containing the two's-complement binary representation of a BigInteger into a BigInteger. The input array is assumed to be in</source>
          <target state="translated">BigInteger의 2의 보수 2 진 표현을 포함하는 바이트 배열을 BigInteger로 변환합니다. 입력 배열은</target>
        </trans-unit>
        <trans-unit id="e95a387e37c7d74dbc7c9f0331125aee98e460c5" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor and with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자와 동일한 문자 시퀀스를 허용 하고 컨텍스트 설정에 따라 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="bda463fe5a4d05c22f4655928b6f483669d25433" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified and with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자 시퀀스 를 허용하면서 서브 어레이를 지정할 수 있으며 컨텍스트 설정에 따라 반올림 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5367af291d1dad8cf8aee053e94387ebe41d59db" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자 시퀀스 를 허용하면서 하위 배열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6cbb8f1f8949120d165c79b502c88af315638ba" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자 시퀀스를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="caaec521da0f0769da2d9ee6de81cb7b5c669360" translate="yes" xml:space="preserve">
          <source>Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this key factory.</source>
          <target state="translated">공급자를 알 수 없거나 신뢰할 수없는 키 객체를이 키 팩토리의 해당 키 객체로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d2aff912a8bf73e171f624f60eac67132e23fef3" translate="yes" xml:space="preserve">
          <source>Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this secret-key factory.</source>
          <target state="translated">공급자를 알 수 없거나 신뢰할 수없는 키 객체를이 비밀 키 팩토리의 해당 키 객체로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d55036512c3d06de57f540a3a010abfa06e4e9a7" translate="yes" xml:space="preserve">
          <source>Translates a string from ASCII Compatible Encoding (ACE) to Unicode, as defined by the ToUnicode operation of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt; 의 ToUnicode 조작에 의해 정의 된대로 문자열을 ASCII 호환 인코딩 (ACE)에서 유니 코드로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b943d5a14e4888451ba8fa6215b0e7f72d3762c5" translate="yes" xml:space="preserve">
          <source>Translates a string from Unicode to ASCII Compatible Encoding (ACE), as defined by the ToASCII operation of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt; 의 ToASCII 조작으로 정의 된대로 문자열을 유니 코드에서 ASCII 호환 인코딩 (ACE)으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4d59a776cc2656bd77a8e0f9b385251da96dd1ab" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific encoding scheme. This method uses the supplied encoding scheme to obtain the bytes for unsafe characters.</source>
          <target state="translated">특정 인코딩 체계를 사용하여 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다. 이 방법은 제공된 인코딩 체계를 사용하여 안전하지 않은 문자의 바이트를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="e047b85bd71414efc578845b6d8e1d90059ffd0f" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; format. This method uses the platform's default encoding as the encoding scheme to obtain the bytes for unsafe characters.</source>
          <target state="translated">문자열을 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다. 이 방법은 플랫폼의 기본 인코딩을 인코딩 체계로 사용하여 안전하지 않은 문자의 바이트를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="50f92eea2ff33d3a5a4c74ff1405a8ec3381c5c3" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt;, before any rounding, is zero.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;int&lt;/code&gt; 를 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. 반올림하기 전에 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="e229a02a15acf36cd72ba5270b9512fadf9ab47a" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;int&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; . &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="1b727c4bb71d79e76c3eeaf58bdc8ae8accde65d" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger. The String representation consists of an optional minus or plus sign followed by a sequence of one or more digits in the specified radix. The character-to-digit mapping is provided by &lt;code&gt;Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">지정된 기수의 BigInteger의 String 표현을 BigInteger로 변환합니다. 문자열 표현은 선택적 빼기 또는 더하기 부호와 지정된 기수의 하나 이상의 숫자 시퀀스로 구성됩니다. 문자 대 숫자 매핑은 &lt;code&gt;Character.digit&lt;/code&gt; 에 의해 제공됩니다 . 문자열은 외부 문자를 포함 할 수 없습니다 (예 : 공백).</target>
        </trans-unit>
        <trans-unit id="1971dfcab7363ad427f03f6ddc91d2aaa314e6a6" translate="yes" xml:space="preserve">
          <source>Translates the decimal String representation of a BigInteger into a BigInteger. The String representation consists of an optional minus sign followed by a sequence of one or more decimal digits. The character-to-digit mapping is provided by &lt;code&gt;Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">BigInteger의 10 진수 문자열 표시를 BigInteger로 변환합니다. 문자열 표현은 선택적 빼기 부호와 하나 이상의 10 진수 숫자로 구성됩니다. 문자 대 숫자 매핑은 &lt;code&gt;Character.digit&lt;/code&gt; 에 의해 제공됩니다 . 문자열은 외부 문자를 포함 할 수 없습니다 (예 : 공백).</target>
        </trans-unit>
        <trans-unit id="5c52de63addaade59e66530488f1741aa06fc2ff" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger. The sign is represented as an integer signum value: -1 for negative, 0 for zero, or 1 for positive. The magnitude is a byte array in</source>
          <target state="translated">BigInteger의 부호 크기 표현을 BigInteger로 변환합니다. 부호는 정수 부호 값으로 표시됩니다. -1은 음수, 0은 0 또는 양수입니다. 크기는 바이트 배열입니다</target>
        </trans-unit>
        <trans-unit id="eaeb644e5e369708ac477fe488962acceba1548c" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same strings as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, with rounding according to the context settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;BigDecimal&lt;/code&gt; 의 문자열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자열을 승인합니다 .</target>
        </trans-unit>
        <trans-unit id="2f81c6b37d85c35c397c7c1fc049f4a6cba771b7" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The string representation consists of an optional sign, &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt; '\u002B'&lt;/code&gt;) or &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;), followed by a sequence of zero or more decimal digits (&quot;the integer&quot;), optionally followed by a fraction, optionally followed by an exponent.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 캐릭터 라인 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 합니다. 문자열 표현은 선택적인 부호 &lt;code&gt;'+'&lt;/code&gt; ( &lt;code&gt; '\u002B'&lt;/code&gt; ) 또는 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002D'&lt;/code&gt; )와 0 개 이상의 10 진수 ( &quot;정수&quot;)의 순서로 구성되며 선택적으로 분수, 선택적으로 지수가 뒤 따릅니다.</target>
        </trans-unit>
        <trans-unit id="da34ba9de444c96ddc1a3bae0850b2622a0572d5" translate="yes" xml:space="preserve">
          <source>Transmitter</source>
          <target state="translated">Transmitter</target>
        </trans-unit>
        <trans-unit id="51450f02a2587b281bcd471db6d893f369739bf2" translate="yes" xml:space="preserve">
          <source>Transmitter.close()</source>
          <target state="translated">Transmitter.close()</target>
        </trans-unit>
        <trans-unit id="f9cb2258b1778d8c3bc3517121ceaaa1554dff9f" translate="yes" xml:space="preserve">
          <source>Transmitter.getReceiver()</source>
          <target state="translated">Transmitter.getReceiver()</target>
        </trans-unit>
        <trans-unit id="9331c814a22fa32349ceb6cda3994482fea2c369" translate="yes" xml:space="preserve">
          <source>Transmitter.setReceiver()</source>
          <target state="translated">Transmitter.setReceiver()</target>
        </trans-unit>
        <trans-unit id="8173e5a0ab0d66651e0708a8bcbefeef2dd3831c" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the iterator. The behaviour of traversal is undefined if the spliterator is operated after the iterator is returned.</source>
          <target state="translated">요소의 순회는 반복자를 통해 수행되어야합니다. 반복기가 리턴 된 후 스플리터가 작동되면 순회 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="30d46763ec7881d4f58abae3049a96683c8f9143" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the spliterator. The behaviour of splitting and traversal is undefined if the iterator is operated on after the spliterator is returned, or the initially reported size is not equal to the actual number of elements in the source.</source>
          <target state="translated">요소 탐색은 스플리터를 통해 수행해야합니다. 분할기가 반환 된 후 반복기가 작동되거나 처음에보고 된 크기가 소스의 실제 요소 수와 같지 않으면 분할 및 순회 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="00ca3dda7684f8348bfee89b641a056d672651d3" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the spliterator. The behaviour of splitting and traversal is undefined if the iterator is operated on after the spliterator is returned.</source>
          <target state="translated">요소 탐색은 스플리터를 통해 수행해야합니다. 스플리터가 리턴 된 후 이터레이터가 작동하는 경우 스 플리 팅 및 순회 동작은 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0387bf3d77b5fef9a75cac2dd19feeffbcd116dd" translate="yes" xml:space="preserve">
          <source>Traversal via iterators is fast and cannot encounter interference from other threads. Iterators rely on unchanging snapshots of the array at the time the iterators were constructed.</source>
          <target state="translated">반복자를 통한 순회는 빠르며 다른 스레드의 간섭을받을 수 없습니다. 반복자는 반복자가 구성 될 때 변경되지 않은 배열의 스냅 샷에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="1ba08ab52cde7420cbd3c26bc714af709c837cd8" translate="yes" xml:space="preserve">
          <source>Traverse both forward and backward from a given position in the text. Calls to notBoundary() in this example represents some additional stopping criteria.</source>
          <target state="translated">텍스트의 주어진 위치에서 앞뒤로 이동합니다. 이 예제에서 notBoundary ()에 대한 호출은 몇 가지 추가 중지 기준을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d3b823617556e185dfc8f7708a19dd8b14580a0b" translate="yes" xml:space="preserve">
          <source>Traverse the text backwards, from end to start</source>
          <target state="translated">끝에서 시작하여 텍스트를 뒤로 이동</target>
        </trans-unit>
        <trans-unit id="b0fa76c6202418f069b17f36977c45c010c2e7cc" translate="yes" xml:space="preserve">
          <source>Traverse the text from start to finish</source>
          <target state="translated">처음부터 끝까지 텍스트 탐색</target>
        </trans-unit>
        <trans-unit id="f5b2faff4d9b4cc3e53f74c54f2316fc6c676530" translate="yes" xml:space="preserve">
          <source>TreeMap</source>
          <target state="translated">TreeMap</target>
        </trans-unit>
        <trans-unit id="e5316ea688f0da29e1f65fed0da1b46ebcdbda8a" translate="yes" xml:space="preserve">
          <source>TreeMap.ceilingEntry()</source>
          <target state="translated">TreeMap.ceilingEntry()</target>
        </trans-unit>
        <trans-unit id="4928da85f4b361e5d085411df925eb6355d02ccd" translate="yes" xml:space="preserve">
          <source>TreeMap.ceilingKey()</source>
          <target state="translated">TreeMap.ceilingKey()</target>
        </trans-unit>
        <trans-unit id="d821816e6e966f8b3d1577edaf8405a54a8bac65" translate="yes" xml:space="preserve">
          <source>TreeMap.clear()</source>
          <target state="translated">TreeMap.clear()</target>
        </trans-unit>
        <trans-unit id="6dd69679a95980cc913012d3d49d57d3438052ba" translate="yes" xml:space="preserve">
          <source>TreeMap.clone()</source>
          <target state="translated">TreeMap.clone()</target>
        </trans-unit>
        <trans-unit id="132e0fac0be392849749eb7187695583f3c1bae4" translate="yes" xml:space="preserve">
          <source>TreeMap.comparator()</source>
          <target state="translated">TreeMap.comparator()</target>
        </trans-unit>
        <trans-unit id="aba73b51f5749ac86a5825ad48589ad82de9c9d0" translate="yes" xml:space="preserve">
          <source>TreeMap.containsKey()</source>
          <target state="translated">TreeMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="65d0bbe349fb657486fc3ca8727106a6f76375d8" translate="yes" xml:space="preserve">
          <source>TreeMap.containsValue()</source>
          <target state="translated">TreeMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="2066f4d1d87cf54e4201d5b6b43810901a60a09e" translate="yes" xml:space="preserve">
          <source>TreeMap.descendingKeySet()</source>
          <target state="translated">TreeMap.descendingKeySet()</target>
        </trans-unit>
        <trans-unit id="496fa6003029e1da671d7cd46af7012c714a278e" translate="yes" xml:space="preserve">
          <source>TreeMap.descendingMap()</source>
          <target state="translated">TreeMap.descendingMap()</target>
        </trans-unit>
        <trans-unit id="1b90293c4f5f34694a779c50db391ac5a1a15f98" translate="yes" xml:space="preserve">
          <source>TreeMap.entrySet()</source>
          <target state="translated">TreeMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="91cd659b9bb4df3b20daa3c36cf5b06f78bf28e0" translate="yes" xml:space="preserve">
          <source>TreeMap.firstEntry()</source>
          <target state="translated">TreeMap.firstEntry()</target>
        </trans-unit>
        <trans-unit id="e24b9ff84913f700271a226cb98f89024ca00c9e" translate="yes" xml:space="preserve">
          <source>TreeMap.firstKey()</source>
          <target state="translated">TreeMap.firstKey()</target>
        </trans-unit>
        <trans-unit id="bfa45d75312c5aad42c5173c03f70f8a06bf61e1" translate="yes" xml:space="preserve">
          <source>TreeMap.floorEntry()</source>
          <target state="translated">TreeMap.floorEntry()</target>
        </trans-unit>
        <trans-unit id="b57c465a9ed8fce97e6d108abf55a1b758a876a3" translate="yes" xml:space="preserve">
          <source>TreeMap.floorKey()</source>
          <target state="translated">TreeMap.floorKey()</target>
        </trans-unit>
        <trans-unit id="32b815d8822cc010b2dea7e47dd49ef655559b7e" translate="yes" xml:space="preserve">
          <source>TreeMap.forEach()</source>
          <target state="translated">TreeMap.forEach()</target>
        </trans-unit>
        <trans-unit id="e4278be43e238f656122e5f83d909caa4e0058c2" translate="yes" xml:space="preserve">
          <source>TreeMap.get()</source>
          <target state="translated">TreeMap.get()</target>
        </trans-unit>
        <trans-unit id="d795a70cfa4017d4e2580575fc584f8bda1e8bf5" translate="yes" xml:space="preserve">
          <source>TreeMap.headMap()</source>
          <target state="translated">TreeMap.headMap()</target>
        </trans-unit>
        <trans-unit id="4605c36878c64b5c5a9b1ae5cec8221cfb870071" translate="yes" xml:space="preserve">
          <source>TreeMap.higherEntry()</source>
          <target state="translated">TreeMap.higherEntry()</target>
        </trans-unit>
        <trans-unit id="88ebbb98630e8d6f0aa2a442fdd87e6b5f192d94" translate="yes" xml:space="preserve">
          <source>TreeMap.higherKey()</source>
          <target state="translated">TreeMap.higherKey()</target>
        </trans-unit>
        <trans-unit id="3524629c1674ca5bee3777a687eb14c89812771e" translate="yes" xml:space="preserve">
          <source>TreeMap.keySet()</source>
          <target state="translated">TreeMap.keySet()</target>
        </trans-unit>
        <trans-unit id="2427b56045488e13ed88595150f52b76439edafe" translate="yes" xml:space="preserve">
          <source>TreeMap.lastEntry()</source>
          <target state="translated">TreeMap.lastEntry()</target>
        </trans-unit>
        <trans-unit id="2fc0327a416b90d08c9d8fadeb6bb0a9fa2603c5" translate="yes" xml:space="preserve">
          <source>TreeMap.lastKey()</source>
          <target state="translated">TreeMap.lastKey()</target>
        </trans-unit>
        <trans-unit id="dd05595fa1313aec4d7ebf40d7dab6809c7095d7" translate="yes" xml:space="preserve">
          <source>TreeMap.lowerEntry()</source>
          <target state="translated">TreeMap.lowerEntry()</target>
        </trans-unit>
        <trans-unit id="b550fa2027fb6c3ed211c79fab553f2af410eb80" translate="yes" xml:space="preserve">
          <source>TreeMap.lowerKey()</source>
          <target state="translated">TreeMap.lowerKey()</target>
        </trans-unit>
        <trans-unit id="7915d610e74e7c65de3ec87fe86176cbb154fcd5" translate="yes" xml:space="preserve">
          <source>TreeMap.navigableKeySet()</source>
          <target state="translated">TreeMap.navigableKeySet()</target>
        </trans-unit>
        <trans-unit id="b0f48e4c5aaa86462d2495a34296faf0204d020a" translate="yes" xml:space="preserve">
          <source>TreeMap.pollFirstEntry()</source>
          <target state="translated">TreeMap.pollFirstEntry()</target>
        </trans-unit>
        <trans-unit id="3ba1c7d5e824634ea0aba4a0fd44feb73f14dcc1" translate="yes" xml:space="preserve">
          <source>TreeMap.pollLastEntry()</source>
          <target state="translated">TreeMap.pollLastEntry()</target>
        </trans-unit>
        <trans-unit id="4be22808d79589f0c4911f86861c59bda925d960" translate="yes" xml:space="preserve">
          <source>TreeMap.put()</source>
          <target state="translated">TreeMap.put()</target>
        </trans-unit>
        <trans-unit id="113ed1243333d0ec7328427f6dd19f0b4f7e8528" translate="yes" xml:space="preserve">
          <source>TreeMap.putAll()</source>
          <target state="translated">TreeMap.putAll()</target>
        </trans-unit>
        <trans-unit id="a8c243296a0e84bd175e472f5f0a0e5273229663" translate="yes" xml:space="preserve">
          <source>TreeMap.remove()</source>
          <target state="translated">TreeMap.remove()</target>
        </trans-unit>
        <trans-unit id="5c7fa55653c3471f3a6af4dd608d43540da07784" translate="yes" xml:space="preserve">
          <source>TreeMap.replace()</source>
          <target state="translated">TreeMap.replace()</target>
        </trans-unit>
        <trans-unit id="4d0e299e3ba998c2dcf0ec34621e331722934c5f" translate="yes" xml:space="preserve">
          <source>TreeMap.replaceAll()</source>
          <target state="translated">TreeMap.replaceAll()</target>
        </trans-unit>
        <trans-unit id="336677cb1fe98f23e75d163b974930002fd8cd27" translate="yes" xml:space="preserve">
          <source>TreeMap.size()</source>
          <target state="translated">TreeMap.size()</target>
        </trans-unit>
        <trans-unit id="552ea32c982c18811875853860337db0aad1d967" translate="yes" xml:space="preserve">
          <source>TreeMap.subMap()</source>
          <target state="translated">TreeMap.subMap()</target>
        </trans-unit>
        <trans-unit id="274005151bd94300a52eb1ead3c9e76df7d91b66" translate="yes" xml:space="preserve">
          <source>TreeMap.tailMap()</source>
          <target state="translated">TreeMap.tailMap()</target>
        </trans-unit>
        <trans-unit id="2f8809dc68a09b62cc6461a42ec84b65d1f332c3" translate="yes" xml:space="preserve">
          <source>TreeMap.values()</source>
          <target state="translated">TreeMap.values()</target>
        </trans-unit>
        <trans-unit id="d9aca827286e61a4a205b918bf7138319000ed98" translate="yes" xml:space="preserve">
          <source>TreeSet</source>
          <target state="translated">TreeSet</target>
        </trans-unit>
        <trans-unit id="4c58b66af81f57dd8b2ae479f65b088a968c2890" translate="yes" xml:space="preserve">
          <source>TreeSet.add()</source>
          <target state="translated">TreeSet.add()</target>
        </trans-unit>
        <trans-unit id="e53f2301ea65fb9f94c8616cd01d0e870eaa58ae" translate="yes" xml:space="preserve">
          <source>TreeSet.addAll()</source>
          <target state="translated">TreeSet.addAll()</target>
        </trans-unit>
        <trans-unit id="4eeaf14d40be2a768f5551ac3ceab30c7eb5c11d" translate="yes" xml:space="preserve">
          <source>TreeSet.ceiling()</source>
          <target state="translated">TreeSet.ceiling()</target>
        </trans-unit>
        <trans-unit id="33ebc3a6fc05e0db15894a991bd5c6cfa684a2e6" translate="yes" xml:space="preserve">
          <source>TreeSet.clear()</source>
          <target state="translated">TreeSet.clear()</target>
        </trans-unit>
        <trans-unit id="b5ee84bff6e39a16be8fd9c8497e9d38405dc8e7" translate="yes" xml:space="preserve">
          <source>TreeSet.clone()</source>
          <target state="translated">TreeSet.clone()</target>
        </trans-unit>
        <trans-unit id="9a0eaadb461d069d2b062edc6cf1eaa5a8efb5c2" translate="yes" xml:space="preserve">
          <source>TreeSet.comparator()</source>
          <target state="translated">TreeSet.comparator()</target>
        </trans-unit>
        <trans-unit id="c40aeedbffe9e8c8b5e88e273fa9325e9604f055" translate="yes" xml:space="preserve">
          <source>TreeSet.contains()</source>
          <target state="translated">TreeSet.contains()</target>
        </trans-unit>
        <trans-unit id="4742b925b108b32534598f4493ff8334c0f0dffc" translate="yes" xml:space="preserve">
          <source>TreeSet.descendingIterator()</source>
          <target state="translated">TreeSet.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="4e18a772039f604f6721b3d8dc2df28eb7f3d8fd" translate="yes" xml:space="preserve">
          <source>TreeSet.descendingSet()</source>
          <target state="translated">TreeSet.descendingSet()</target>
        </trans-unit>
        <trans-unit id="6560ec38319181f093c1ff9d0ac085bcefa40a74" translate="yes" xml:space="preserve">
          <source>TreeSet.first()</source>
          <target state="translated">TreeSet.first()</target>
        </trans-unit>
        <trans-unit id="72bae8ffa692e55ba3e7651d893967f363699e1d" translate="yes" xml:space="preserve">
          <source>TreeSet.floor()</source>
          <target state="translated">TreeSet.floor()</target>
        </trans-unit>
        <trans-unit id="d3cf600d3331960e00c525f3d569c97d03638b9e" translate="yes" xml:space="preserve">
          <source>TreeSet.headSet()</source>
          <target state="translated">TreeSet.headSet()</target>
        </trans-unit>
        <trans-unit id="1302632331c72e3e587859613e6504465a6156df" translate="yes" xml:space="preserve">
          <source>TreeSet.higher()</source>
          <target state="translated">TreeSet.higher()</target>
        </trans-unit>
        <trans-unit id="71529bc00e790a7a7b58d4cb8582a66c121ed166" translate="yes" xml:space="preserve">
          <source>TreeSet.isEmpty()</source>
          <target state="translated">TreeSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="71b02e64e43f1219a1d83f8105cf88dfebac5b2d" translate="yes" xml:space="preserve">
          <source>TreeSet.iterator()</source>
          <target state="translated">TreeSet.iterator()</target>
        </trans-unit>
        <trans-unit id="016f9951ee6b0476df52517da0ba1ff18acee328" translate="yes" xml:space="preserve">
          <source>TreeSet.last()</source>
          <target state="translated">TreeSet.last()</target>
        </trans-unit>
        <trans-unit id="28c8df1cca624a201d466b664b9817f9cd9e5dcf" translate="yes" xml:space="preserve">
          <source>TreeSet.lower()</source>
          <target state="translated">TreeSet.lower()</target>
        </trans-unit>
        <trans-unit id="7d8bdd7fd5daa61a0159cb57387f3d97f5080aa1" translate="yes" xml:space="preserve">
          <source>TreeSet.pollFirst()</source>
          <target state="translated">TreeSet.pollFirst()</target>
        </trans-unit>
        <trans-unit id="559c468def30ad4e10a37a70cbb1afcebac3f873" translate="yes" xml:space="preserve">
          <source>TreeSet.pollLast()</source>
          <target state="translated">TreeSet.pollLast()</target>
        </trans-unit>
        <trans-unit id="ddba668430ede9a4d1ee3b337e536df9ef952dd4" translate="yes" xml:space="preserve">
          <source>TreeSet.remove()</source>
          <target state="translated">TreeSet.remove()</target>
        </trans-unit>
        <trans-unit id="10adc5b62fe4ed759fad5f5fd2950555d482584f" translate="yes" xml:space="preserve">
          <source>TreeSet.size()</source>
          <target state="translated">TreeSet.size()</target>
        </trans-unit>
        <trans-unit id="9fe7c6a88052085baa4980aad72125fc3520c547" translate="yes" xml:space="preserve">
          <source>TreeSet.spliterator()</source>
          <target state="translated">TreeSet.spliterator()</target>
        </trans-unit>
        <trans-unit id="83d63aba3929098f734092786887fdf3ce00ad2f" translate="yes" xml:space="preserve">
          <source>TreeSet.subSet()</source>
          <target state="translated">TreeSet.subSet()</target>
        </trans-unit>
        <trans-unit id="424cfeb57b6d89969ea19e90d0edf198f1f866dc" translate="yes" xml:space="preserve">
          <source>TreeSet.tailSet()</source>
          <target state="translated">TreeSet.tailSet()</target>
        </trans-unit>
        <trans-unit id="d18f5d6a0e37e1be1c95c5b83dec2805e4973064" translate="yes" xml:space="preserve">
          <source>Tries to determine the content type of an object, based on the specified &quot;file&quot; component of a URL. This is a convenience method that can be used by subclasses that override the &lt;code&gt;getContentType&lt;/code&gt; method.</source>
          <target state="translated">URL의 지정된 &quot;파일&quot;구성 요소를 기반으로 오브젝트의 컨텐츠 유형을 판별하려고 시도합니다. &lt;code&gt;getContentType&lt;/code&gt; 메소드 를 대체하는 서브 클래스에서 사용할 수있는 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="8136b251085567de41730b0cf3c283337bf62ab5" translate="yes" xml:space="preserve">
          <source>Tries to determine the type of an input stream based on the characters at the beginning of the input stream. This method can be used by subclasses that override the &lt;code&gt;getContentType&lt;/code&gt; method.</source>
          <target state="translated">입력 스트림의 시작 부분에있는 문자를 기반으로 입력 스트림의 유형을 판별하려고합니다. 이 메소드는 &lt;code&gt;getContentType&lt;/code&gt; 메소드 를 대체하는 서브 클래스에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94e3f7802063463730ee0a659237dc66ff598c52" translate="yes" xml:space="preserve">
          <source>Tries to remove from the work queue all &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; tasks that have been cancelled. This method can be useful as a storage reclamation operation, that has no other impact on functionality. Cancelled tasks are never executed, but may accumulate in work queues until worker threads can actively remove them. Invoking this method instead tries to remove them now. However, this method may fail to remove tasks in the presence of interference by other threads.</source>
          <target state="translated">취소 된 모든 &lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 작업을 작업 대기열에서 제거하려고합니다 . 이 방법은 기능에 다른 영향을 미치지 않는 저장소 교정 작업으로 유용 할 수 있습니다. 취소 된 작업은 절대 실행되지 않지만 작업자 스레드가 적극적으로 제거 할 때까지 작업 대기열에 누적 될 수 있습니다. 이 메소드를 호출하면 지금 제거하려고 시도합니다. 그러나이 방법은 다른 스레드의 간섭이있는 경우 작업을 제거하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7536ae3390a11ff355e55fac0b2beec700d3bbf7" translate="yes" xml:space="preserve">
          <source>Tries to unschedule this task for execution. This method will typically (but is not guaranteed to) succeed if this task is the most recently forked task by the current thread, and has not commenced executing in another thread. This method may be useful when arranging alternative local processing of tasks that could have been, but were not, stolen.</source>
          <target state="translated">실행을 위해이 태스크의 스케줄을 해제하려고합니다. 이 작업이 현재 스레드에서 가장 최근에 수행 한 작업이고 다른 스레드에서 실행을 시작하지 않은 경우이 방법은 일반적으로 성공하지만 보장되지는 않습니다. 이 방법은 도난 당했을 수도 있지만 도난 당하지 않은 작업의 대체 로컬 처리를 배열 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="956a4e9adf25eb2b061b86bbe5a36cf9bc435e58" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this &lt;code&gt;ArrayList&lt;/code&gt; instance to be the list's current size. An application can use this operation to minimize the storage of an &lt;code&gt;ArrayList&lt;/code&gt; instance.</source>
          <target state="translated">이 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스 의 용량을 리스트의 현재 크기로 잘라냅니다. 애플리케이션은이 작업을 사용하여 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스 의 스토리지를 최소화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="409e26f80653b9a0477fcbaf5528851c8694d8ca" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this vector to be the vector's current size. If the capacity of this vector is larger than its current size, then the capacity is changed to equal the size by replacing its internal data array, kept in the field &lt;code&gt;elementData&lt;/code&gt;, with a smaller one. An application can use this operation to minimize the storage of a vector.</source>
          <target state="translated">이 벡터의 용량을 벡터의 현재 크기로 자릅니다. 이 벡터의 용량이 현재 크기보다 큰 경우 &lt;code&gt;elementData&lt;/code&gt; 필드에 유지 된 내부 데이터 배열을 더 작은 크기로 대체하여 용량이 크기와 동일하게 변경됩니다 . 응용 프로그램은이 작업을 사용하여 벡터 저장을 최소화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9008b59944e474716b6c279855a4c78603b9e73" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;fields[]&lt;/code&gt; are in sync with the currently set time. If false, then the next attempt to get the value of a field will force a recomputation of all fields from the current value of &lt;code&gt;time&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fields[]&lt;/code&gt; 가 현재 설정된 시간과 동기화되어 있으면 true 입니다. false 인 경우 다음에 필드 값을 가져 오려고하면 현재 &lt;code&gt;time&lt;/code&gt; 값에서 모든 필드를 다시 계산해야합니다 .</target>
        </trans-unit>
        <trans-unit id="316d6a9546a69f4fa93b8e29ea71be29825c4055" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;name&lt;/code&gt; matches this ObjectName.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 이이 ObjectName과 일치하면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="7d74cdbb58b6ecbcac3a0ef765cee10ee5e0d7b3" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is an ObjectName whose canonical form is equal to that of this ObjectName.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 정식 형식이이 ObjectName과 동일한 ObjectName 인 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="c8d0f539ec0cef070a91f358f1a2c15c74d970da" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this PrinterURI attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 PrinterURI 속성과 동일한 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="f5ff83a5171e1f22fe9bd1d647c63c57c7f7c621" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this URI attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 URI 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="78a517787d59bde4667e895c1101649344c15ca0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this copies attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 복사본 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="debd04af9459fa14193dd46af30fee5f7051260a" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this copies supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 복사본 지원 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="c78a6f27610d5e65cb2064729eff898ea0e03070" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at completed attribute, false otherwise.</source>
          <target state="translated">완료된 속성에서 &lt;code&gt;object&lt;/code&gt; 가이 날짜-시간과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a5d2dea2d175c00ba7a0c624cb1fac6db752ac44" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at creation attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 작성 날짜의이 날짜-시간과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a123332ed042028561a571511e8ffdcee65617d2" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at processing attribute, false otherwise.</source>
          <target state="translated">처리 속성에서 &lt;code&gt;object&lt;/code&gt; 가이 날짜-시간과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="042d32b64be9612eac1597129d3d8b62758db782" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 날짜-시간 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="32eeb754a247b34f3f4c6ac9ef3263d83fbfb6e9" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this destination attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 destination 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="a73062b2bf78d86898ca309f5e37bfb78b6a80d1" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this document name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 문서명 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="ca3ca75d2887858d161d619559ce0b9cf2aa315d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this integer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 정수 속성에 해당 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="c0660c0d541c5bae8b10462386bd955c3dbe965c" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 K octets 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="30180f68b47f9549353326a0c11ec0d0aecaae28" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets processed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 K 옥텟 처리 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="2b7d3e78b96c18bf47929ef0d2a080e154430969" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 K octets 지원 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="b53f332594b109ee4e955770ca84c8d643a8f8e6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job hold until attribute, false otherwise.</source>
          <target state="translated">속성이 될 때까지 &lt;code&gt;object&lt;/code&gt; 가이 작업 보류와 동등한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="370648e0de26abf3709fa30cba89a4b44e622167" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 노출 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a4314844386a074052274b8fe7e0b100ecf3ee83" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions completed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 노출 완료 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a45af18ce0944078a918753b891fdadd163731c0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 노출 지원 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="3d5dc84fe5210c7beab4cb2b2a3f5d6582023d42" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 매체 시트 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="7378ee2254d9fa4f8e56e76757701609934a9ab9" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets completed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 매체 시트 완료 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="06f9d9ac3992c96fefc1e4fef8dafc528c43d8dc" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 지원되는이 작업 매체 시트 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="f08b3a579d9e48ac23f20d1ab42098114f2bf095" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job message from operator attribute, false otherwise.</source>
          <target state="translated">운영자 속성의 &lt;code&gt;object&lt;/code&gt; 가이 작업 메시지와 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="6b8822239f6df81c6840ab3a71c620a84a417af6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 이름 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="1ea04e73ea945f7c8ace36a30b0cb140f8056780" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job originating user name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 시작 사용자 이름 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="db83998c8ad28006baf27710d7bfce52d68901c7" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job priority attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 우선 순위 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="7bdc113edf8fe71105dda622c453eaab1fd529d6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job priority supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 우선 순위 지원 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="54dce3d84390b3568ca1685ed8c8ae7c237c9bce" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this media attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 미디어 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="67c4f98614d7b7c70dfeadd19988c94145ad1042" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this media margins attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 media margins 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="9226fd0b3150904362e91003b8c4244c4b7ab5de" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this media size attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 미디어 크기 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a8c5b719128af1553dd3c3499e432bd7ec3bd852" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number of documents attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 문서 수 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="5515b1ced5d5eed6cc4c583237af880d0dbd9743" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number of intervening jobs attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 수의 개입 작업 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a7c15690962ce5e2e364a518d284a8b0f51c2f28" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number up attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 number-up 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="62b718244bedd7caae1e8b5714f47ee65e724019" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number up supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 지원되는이 숫자 지원 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="40d9c1c96c4ce710cdaa6bc2276979da01564190" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this output device assigned attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 출력 장치 할당 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a0c8ca6c59834aa1cf1480fc9e9fa72f5bcd02e5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this page ranges attribute, false otherwise.</source>
          <target state="translated">경우는 true &lt;code&gt;object&lt;/code&gt; 그렇지 않은 경우는 false,이 페이지 범위 속성과 동일한 기능을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="79e421205af1ffead2e903264c2ea38c1328cca8" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this pages per minute attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 분당이 페이지 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a77bddaac82f96f88fec398e45568f7e0f4f502b" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this pages per minute color attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 분당이 페이지 색상 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="936e58366635010bf4cbc88e6bb441dd16bd6cf5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer info attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 정보 속성과 동일한 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="a3869ad738e829e22b6ad1b283619a6803e635fb" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer location attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 위치 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="2e502f9d426a99490cb924f10d484d2b50384927" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer make and model attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 제조업체 및 모델 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="230db4c8c5525351a3158ca1d3bd3850c4830d64" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer message from operator attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 운영자 속성의이 프린터 메시지와 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="0b3b19272ee08b8dc7e38895e029afb3fa43b400" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer more info attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터의 추가 정보 속성과 동일한 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="8158bbe8285598be830ae5cf794358ad1e6985a6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer more info manufacturer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터의 추가 정보 제조업체 특성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="d4eaafce4348aa10f440d6b9e7e1fe59139f46b8" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 이름 특성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="8645ab04f082af554745c1d06d925e857de95c0e" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer resolution attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 프린터 해상도 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="07097e5a6dbc1780b24ae505e30115c6a7b8cafb" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this queued job count attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 대기 작업 수 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="7f41558e522e714a78e7e2bf7aafd89786bf37a5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this requesting user name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 요청하는 사용자 이름 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="b4cd45ae7096b6fa068eb9ee274f9ec6f50848ba" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this resolution attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 해상도 속성에 해당 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="c8150784974576b67a6ade27c52d4ba6dde1081f" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this set-of-integer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 정수 세트 속성과 동일한 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="f03142c60449edb750c330936fd47e74eccd904e" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this text attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 텍스트 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="09115d70f2459084f4b16056c586c3bca86b875d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this two-dimensional size attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 2 차원 크기 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="d84529ce46c0b99b343bc272a1269269cb24f977" translate="yes" xml:space="preserve">
          <source>True if an equivalent copy of &lt;code&gt;newInstance&lt;/code&gt; may be created by applying a series of mutations to &lt;code&gt;oldInstance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;oldInstance&lt;/code&gt; 에 일련의 돌연변이를 적용하여 &lt;code&gt;newInstance&lt;/code&gt; 의 동등한 사본 을 작성할 수있는 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="72acd669a5bae0f9027566fa8f540689c159adec" translate="yes" xml:space="preserve">
          <source>True if the MBean is already registered in the MBean server, false otherwise.</source>
          <target state="translated">MBean이 MBean 서버에 이미 등록되어 있으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="d9e2b8a6231cfbc9b04840d1f2a8c52b47e58e7c" translate="yes" xml:space="preserve">
          <source>True if the annotated interface is an MXBean interface.</source>
          <target state="translated">주석이 추가 된 인터페이스가 MXBean 인터페이스 인 경우 참입니다.</target>
        </trans-unit>
        <trans-unit id="5e0678e798c9adf3be1ca57c92b6d28f2a9876fe" translate="yes" xml:space="preserve">
          <source>True if the attribute can be read, false otherwise.</source>
          <target state="translated">속성을 읽을 수 있으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="430eefc3f193cd471d08a7b3fad3a3c7a4e81b03" translate="yes" xml:space="preserve">
          <source>True if the attribute can be written to, false otherwise.</source>
          <target state="translated">속성을 쓸 수 있으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="0262528c6862f2163255b62c3a42780edb6a145e" translate="yes" xml:space="preserve">
          <source>True if the bean absolutely needs a GUI available in order to get its work done.</source>
          <target state="translated">Bean이 작업을 수행하기 위해 GUI를 사용할 수 있어야하는 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="871d7e256eb6be73fc624c05f8c5efeae35a22a1" translate="yes" xml:space="preserve">
          <source>True if the class will honor the paintValue method.</source>
          <target state="translated">클래스가 paintValue 메소드를 존중하는 경우에 true입니다.</target>
        </trans-unit>
        <trans-unit id="5b2610a91028db8e665ce846b0abcdd873a1d0b0" translate="yes" xml:space="preserve">
          <source>True if the given &lt;code&gt;obj&lt;/code&gt; is the same as this &lt;code&gt;SimpleTimeZone&lt;/code&gt; object; false otherwise.</source>
          <target state="translated">지정된 &lt;code&gt;obj&lt;/code&gt; 가이 &lt;code&gt;SimpleTimeZone&lt;/code&gt; 객체 와 같은 경우는 true . 그렇지 않으면 거짓.</target>
        </trans-unit>
        <trans-unit id="91a0286d93f75bfbf7e8ea933781e954a6586e48" translate="yes" xml:space="preserve">
          <source>True if the name is a domain pattern, otherwise false.</source>
          <target state="translated">이름이 도메인 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="d295faae8d543ae95cae46c595b4fceb692cdf20" translate="yes" xml:space="preserve">
          <source>True if the name is a pattern, otherwise false.</source>
          <target state="translated">이름이 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="e10ca211f228b3c5db003c3fea2a477c6338c590" translate="yes" xml:space="preserve">
          <source>True if the name is a property list pattern, otherwise false.</source>
          <target state="translated">이름이 속성 목록 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="58593912db01af7865de5913714994c5ee75873b" translate="yes" xml:space="preserve">
          <source>True if the name is a property pattern, otherwise false.</source>
          <target state="translated">이름이 속성 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="3c82e798826072fe1750a71d55e463b72e564ecc" translate="yes" xml:space="preserve">
          <source>True if the name is a property value pattern, otherwise false.</source>
          <target state="translated">이름이 속성 값 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="296ddb6e0bfc97c39454a7352e9f5c4f06ff26e0" translate="yes" xml:space="preserve">
          <source>True if the next read() is guaranteed not to block for input</source>
          <target state="translated">다음 read ()가 입력을 차단하지 않도록 보장되면 true</target>
        </trans-unit>
        <trans-unit id="72177c90484795271749cc0029b51961fb02402d" translate="yes" xml:space="preserve">
          <source>True if the next read() is guaranteed not to block for input, false otherwise. Note that returning false does not guarantee that the next read will block.</source>
          <target state="translated">다음 read ()가 입력을 차단하지 않으면 true이고, 그렇지 않으면 false입니다. false를 반환한다고해서 다음 읽기가 차단되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="61d5fc75f48f05ea99011b3c8bdee26e5f9c97e2" translate="yes" xml:space="preserve">
          <source>True if the propertyEditor can provide a custom editor.</source>
          <target state="translated">propertyEditor가 사용자 정의 편집기를 제공 할 수있는 경우 참입니다.</target>
        </trans-unit>
        <trans-unit id="67371c8f68701530943732be85e883f939c9ad90" translate="yes" xml:space="preserve">
          <source>True if the query was successfully applied to the MBean, false otherwise</source>
          <target state="translated">쿼리가 MBean에 성공적으로 적용된 경우 true, 그렇지 않으면 false</target>
        </trans-unit>
        <trans-unit id="b78db768fb19408b18c571000941a62f2f3d3a67" translate="yes" xml:space="preserve">
          <source>True if the two Attribute objects are equal, otherwise false.</source>
          <target state="translated">두 개의 Attribute 객체가 같으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="fdce3816caf0c099b4f01a9f4518db4ae50dcf6c" translate="yes" xml:space="preserve">
          <source>True if the two object instances are equal, otherwise false.</source>
          <target state="translated">두 객체 인스턴스가 같으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a3b98ad5f49e1c1d38080f2110048b734b37b56b" translate="yes" xml:space="preserve">
          <source>True if the value associated with the given key property is a pattern, otherwise false.</source>
          <target state="translated">주어진 키 속성과 관련된 값이 패턴이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="c83441fff2b565ae55b322b2e62426a67e8b1525" translate="yes" xml:space="preserve">
          <source>True if then the value of &lt;code&gt;time&lt;/code&gt; is valid. The time is made invalid by a change to an item of &lt;code&gt;field[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 값 이 유효 하면 true 입니다. &lt;code&gt;field[]&lt;/code&gt; 항목을 변경하면 시간이 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="673e66a932927c766564f59e6def50c88e451ac7" translate="yes" xml:space="preserve">
          <source>True if there is no more data in the buffered part of the stream.</source>
          <target state="translated">스트림의 버퍼링 된 부분에 더 이상 데이터가 없으면 참입니다.</target>
        </trans-unit>
        <trans-unit id="513e47a5017cdb24e4f4d20fc6b1ee63de51a72f" translate="yes" xml:space="preserve">
          <source>True if this Print Service supports specifying &lt;code&gt;attrval&lt;/code&gt; as a doc-level or job-level attribute in a Print Request, false if it doesn't.</source>
          <target state="translated">이 인쇄 서비스가 &lt;code&gt;attrval&lt;/code&gt; 을 인쇄 요청에서 문서 레벨 또는 작업 레벨 속성으로 지정하도록 지원 하면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="1d9ba50b3b690a8e0ac10e13867c2ac4cd8a38a5" translate="yes" xml:space="preserve">
          <source>True if this doc flavor object equals &lt;code&gt;obj&lt;/code&gt;, false otherwise.</source>
          <target state="translated">이 doc 플레이버 오브제 크트가 &lt;code&gt;obj&lt;/code&gt; 와 같은 경우는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="bc87f0b14529d6c96922d61e011d56a6033bc5de" translate="yes" xml:space="preserve">
          <source>True if this feature is intended for use by experts only.</source>
          <target state="translated">이 기능이 전문가 만 사용할 수있는 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="936c0c8748822696fa2238857c6da82d450d8769" translate="yes" xml:space="preserve">
          <source>True if this feature should be hidden from human users.</source>
          <target state="translated">이 기능을 사용자에게 숨겨야하는 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="9a2c9fbca019ccf921c07920b82ddcdd62c16f88" translate="yes" xml:space="preserve">
          <source>True if this feature should be preferentially shown to human users.</source>
          <target state="translated">이 기능이 사용자에게 우선적으로 표시되어야하는 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="e81ae2ca658cccbae8b207880ff384cb9c71c187" translate="yes" xml:space="preserve">
          <source>True if this is a bound property.</source>
          <target state="translated">이 속성이 바인딩 된 속성 인 경우 참입니다.</target>
        </trans-unit>
        <trans-unit id="0384f2901c32d82f6dfeb7f8437c9cc22bf77e8f" translate="yes" xml:space="preserve">
          <source>True if this is a constrained property.</source>
          <target state="translated">이것이 제한된 속성 인 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="0f20d043d01d9ed0dbe792a1c6b003c8f3f6fdec" translate="yes" xml:space="preserve">
          <source>True if this resolution attribute is less than or equal to the &lt;code&gt;other&lt;/code&gt; resolution attribute, false otherwise.</source>
          <target state="translated">이 해상도 속성이 &lt;code&gt;other&lt;/code&gt; 해상도 속성 보다 작거나 같으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="b5d41f16126553b7a6db77032569b772a6cfca64" translate="yes" xml:space="preserve">
          <source>True if this set-of-integer attribute contains &lt;code&gt;theAttribute&lt;/code&gt;'s value, false otherwise.</source>
          <target state="translated">이 정수 세트 속성에 &lt;code&gt;theAttribute&lt;/code&gt; 값이 포함되는 경우는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="5ae279aab85e79b566f26af99b478fad1647c9e2" translate="yes" xml:space="preserve">
          <source>True if this set-of-integer attribute contains the value &lt;code&gt;x&lt;/code&gt;, false otherwise.</source>
          <target state="translated">이 정수 세트 속성에 &lt;code&gt;x&lt;/code&gt; 값이 포함되어 있으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="8c75a6bf7e61e4ed9b2807469a60c3f85451248b" translate="yes" xml:space="preserve">
          <source>True if we are running in an application construction environment.</source>
          <target state="translated">애플리케이션 구축 환경에서 실행중인 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="01159a5439382c7219f5ad2557c8b74a5012df3f" translate="yes" xml:space="preserve">
          <source>True if we are running in an environment where beans can assume that an interactive GUI is available, so they can pop up dialog boxes, etc. This will normally return true in a windowing environment, and will normally return false in a server environment or if an application is running as part of a batch job.</source>
          <target state="translated">Bean이 대화식 GUI를 사용할 수 있다고 가정 할 수있는 환경에서 실행 중이면 대화 상자 등을 팝업 할 수 있습니다. 이는 일반적으로 창 환경에서는 true를 리턴하고 서버 환경에서는 일반적으로 false를 리턴합니다. 응용 프로그램이 일괄 작업의 일부로 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="ff6d79205307304ccbe04a5cfb0c6bd0adec8d8e" translate="yes" xml:space="preserve">
          <source>Truncates the entity, to which this channel is connected, to the given size.</source>
          <target state="translated">이 채널이 연결된 엔티티를 지정된 크기로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="ad6547800e3cc053297a9a2f061b6284a1c42184" translate="yes" xml:space="preserve">
          <source>Truncates this channel's file to the given size.</source>
          <target state="translated">이 채널의 파일을 지정된 크기로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="79a3f99a7603cf1991a756cae56124de8247db87" translate="yes" xml:space="preserve">
          <source>Truncating the instant returns a copy of the original with fields smaller than the specified unit set to zero. The fields are calculated on the basis of using a UTC offset as seen in &lt;code&gt;toString&lt;/code&gt;. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;MINUTES&lt;/code&gt;&lt;/a&gt; unit will round down to the nearest minute, setting the seconds and nanoseconds to zero.</source>
          <target state="translated">인스턴트를 자르면 지정된 단위보다 작은 필드가 0으로 설정된 원본의 사본이 반환됩니다. 필드는 &lt;code&gt;toString&lt;/code&gt; 에 표시된 UTC 오프셋을 사용하여 계산됩니다 . 예를 들어 &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;MINUTES&lt;/code&gt; &lt;/a&gt; 단위로 자르면 가장 가까운 분으로 반올림하여 초와 나노초를 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="46728e78399c2ef4201c30b70feba7f32a425954" translate="yes" xml:space="preserve">
          <source>Truncation returns a copy of the original date-time with fields smaller than the specified unit set to zero. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;minutes&lt;/code&gt;&lt;/a&gt; unit will set the second-of-minute and nano-of-second field to zero.</source>
          <target state="translated">잘림은 지정된 단위보다 작은 필드가 0으로 설정된 원래 날짜-시간의 복사본을 반환합니다. 예를 들어, &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;minutes&lt;/code&gt; &lt;/a&gt; 단위로 자르면 초와 나노초 필드가 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1f29e0520ca15424c75fc5c7c1e020e8b57e547d" translate="yes" xml:space="preserve">
          <source>Truncation returns a copy of the original time with fields smaller than the specified unit set to zero. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;minutes&lt;/code&gt;&lt;/a&gt; unit will set the second-of-minute and nano-of-second field to zero.</source>
          <target state="translated">잘림은 지정된 단위보다 작은 필드가 0으로 설정된 원래 시간의 복사본을 반환합니다. 예를 들어, &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;minutes&lt;/code&gt; &lt;/a&gt; 단위로 자르면 초와 나노초 필드가 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9ff1fa71f94fa80ea032f012d9275d9d960ef7bf" translate="yes" xml:space="preserve">
          <source>TrustAnchor</source>
          <target state="translated">TrustAnchor</target>
        </trans-unit>
        <trans-unit id="e1198f03c160dcee02f250da582eacc5135d366c" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getCA()</source>
          <target state="translated">TrustAnchor.getCA()</target>
        </trans-unit>
        <trans-unit id="962dc9f9ba08469e8bc4b06894f7ed9ab8a27904" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getCAName()</source>
          <target state="translated">TrustAnchor.getCAName()</target>
        </trans-unit>
        <trans-unit id="edfbf18d143b7b10b5f8635b31c3dd8efeeb1a7c" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getCAPublicKey()</source>
          <target state="translated">TrustAnchor.getCAPublicKey()</target>
        </trans-unit>
        <trans-unit id="e0619f9daa82cad2de4c96355d9e952cf6db60a8" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getNameConstraints()</source>
          <target state="translated">TrustAnchor.getNameConstraints()</target>
        </trans-unit>
        <trans-unit id="3a73962db8321c7bb663d99d968fa08492487ae3" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getTrustedCert()</source>
          <target state="translated">TrustAnchor.getTrustedCert()</target>
        </trans-unit>
        <trans-unit id="2d12bf7262a60b66f9ef0c4aed5e014369200002" translate="yes" xml:space="preserve">
          <source>TrustAnchor.toString()</source>
          <target state="translated">TrustAnchor.toString()</target>
        </trans-unit>
        <trans-unit id="cf170153db4f3bf87be22cf4d6df3d50bf346cf1" translate="yes" xml:space="preserve">
          <source>TrustManager</source>
          <target state="translated">TrustManager</target>
        </trans-unit>
        <trans-unit id="b38b25686e83f7263c127858a07ef41818b4e939" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory</source>
          <target state="translated">TrustManagerFactory</target>
        </trans-unit>
        <trans-unit id="4e7970986e1c932f399b3bc4fb5a4b57bdc309c6" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getAlgorithm()</source>
          <target state="translated">TrustManagerFactory.getAlgorithm()</target>
        </trans-unit>
        <trans-unit id="5f4d699ddce6bf46800f2e8b97a808b5737b53c0" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getDefaultAlgorithm()</source>
          <target state="translated">TrustManagerFactory.getDefaultAlgorithm()</target>
        </trans-unit>
        <trans-unit id="b10571068827658b3b755d6e3f3cecb9a46661f5" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getInstance()</source>
          <target state="translated">TrustManagerFactory.getInstance()</target>
        </trans-unit>
        <trans-unit id="9e62d2c8eca05e38e204da2a35189b4f1200f9a1" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getProvider()</source>
          <target state="translated">TrustManagerFactory.getProvider()</target>
        </trans-unit>
        <trans-unit id="2d10fdf7767f1f64ab4cc0d93331c4f79ff7011e" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getTrustManagers()</source>
          <target state="translated">TrustManagerFactory.getTrustManagers()</target>
        </trans-unit>
        <trans-unit id="e324560c6bc2ca29aedabe0ff28b3a7845588ff8" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.init()</source>
          <target state="translated">TrustManagerFactory.init()</target>
        </trans-unit>
        <trans-unit id="3fb8699eb45c86babcb3771077865c43dd636f5a" translate="yes" xml:space="preserve">
          <source>TrustManagerFactorySpi</source>
          <target state="translated">TrustManagerFactorySpi</target>
        </trans-unit>
        <trans-unit id="8c67faa49913e7372282549efd20ca5804ac76ac" translate="yes" xml:space="preserve">
          <source>TrustManagerFactorySpi.engineGetTrustManagers()</source>
          <target state="translated">TrustManagerFactorySpi.engineGetTrustManagers()</target>
        </trans-unit>
        <trans-unit id="59664be8fdddfb869d86416b222fcac7ca15dec5" translate="yes" xml:space="preserve">
          <source>TrustManagerFactorySpi.engineInit()</source>
          <target state="translated">TrustManagerFactorySpi.engineInit()</target>
        </trans-unit>
        <trans-unit id="85a5c0ad6b1cbb5deac6e76b7268202bd210aff9" translate="yes" xml:space="preserve">
          <source>TrustedCertificateEntry</source>
          <target state="translated">TrustedCertificateEntry</target>
        </trans-unit>
        <trans-unit id="7072217a4d4e0b86b0b43ee21814c1ae891bbde1" translate="yes" xml:space="preserve">
          <source>Turns local control on or off. The default is for local control to be on. The &quot;on&quot; setting means that if a device is capable of both synthesizing sound and transmitting MIDI messages, it will synthesize sound in response to the note-on and note-off messages that it itself transmits. It will also respond to messages received from other transmitting devices. The &quot;off&quot; setting means that the synthesizer will ignore its own transmitted MIDI messages, but not those received from other devices. It is possible that the underlying synthesizer does not support local control. In order to verify that a call to &lt;code&gt;localControl&lt;/code&gt; was successful, check the return value.</source>
          <target state="translated">로컬 컨트롤을 켜거나 끕니다. 기본 설정은 로컬 제어가 켜져있는 것입니다. &quot;켜기&quot;설정은 장치가 사운드를 합성하고 MIDI 메시지를 전송할 수있는 경우, 자체적으로 전송하는 노트 온 및 노트 오프 메시지에 응답하여 사운드를 합성한다는 것을 의미합니다. 또한 다른 전송 장치에서 수신 한 메시지에 응답합니다. &quot;off&quot;설정은 신디사이저가 자체 전송 된 MIDI 메시지를 무시하지만 다른 장치에서 수신 된 메시지는 무시한다는 것을 의미합니다. 기본 신디사이저가 로컬 컨트롤을 지원하지 않을 수 있습니다. &lt;code&gt;localControl&lt;/code&gt; 에 대한 호출 이 성공적인지 확인하려면 리턴 값을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5ce9559f4b22fd455c3313b028b1ce2207e86a26" translate="yes" xml:space="preserve">
          <source>Turns mono mode on or off. In mono mode, the channel synthesizes only one note at a time. In poly mode (identical to mono mode off), the channel can synthesize multiple notes simultaneously. The default is mono off (poly mode on).</source>
          <target state="translated">모노 모드를 켜거나 끕니다. 모노 모드에서 채널은 한 번에 하나의 음만 합성합니다. 폴리 모드 (모노 모드 꺼짐과 동일)에서 채널은 여러 음을 동시에 합성 할 수 있습니다. 기본값은 모노 꺼짐 (폴리 모드 켜짐)입니다.</target>
        </trans-unit>
        <trans-unit id="e1cb764c3fc90ec12c04780c545174c2e044a33b" translate="yes" xml:space="preserve">
          <source>Turns off all notes that are currently sounding on this channel. The notes might not die away instantaneously; their decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal controller (see &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">이 채널에서 현재 소리 나는 모든 음을 끕니다. 노트는 즉시 죽지 않을 수도 있습니다. 감쇠율은 &lt;code&gt;Instrument&lt;/code&gt; 내부에 의해 결정됩니다 . Hold Pedal 컨트롤러 ( &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; &lt;/a&gt; 참조 )가 다운되면 페달을 놓을 때까지이 방법의 효과가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="b69131d82a65694e0dc5e7f5a0f9f802953cfea2" translate="yes" xml:space="preserve">
          <source>Turns omni mode on or off. In omni mode, the channel responds to messages sent on all channels. When omni is off, the channel responds only to messages sent on its channel number. The default is omni off. It is possible that the underlying synthesizer does not support omni mode. In order to verify that &lt;code&gt;setOmni&lt;/code&gt; was successful, use &lt;code&gt;getOmni&lt;/code&gt;.</source>
          <target state="translated">옴니 모드를 켜거나 끕니다. 옴니 모드에서 채널은 모든 채널에서 전송 된 메시지에 응답합니다. 옴니가 꺼져 있으면 채널 번호로 전송 된 메시지에만 채널이 응답합니다. 기본값은 omni off입니다. 기본 신디사이저가 옴니 모드를 지원하지 않을 수 있습니다. &lt;code&gt;setOmni&lt;/code&gt; 가 성공 했는지 확인 하려면 &lt;code&gt;getOmni&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b41b6160386def9c3b24b59d70a186f5f05cd9d0" translate="yes" xml:space="preserve">
          <source>Turns the digest function on or off. The default is on. When it is on, a call to one of the &lt;code&gt;read&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated.</source>
          <target state="translated">다이제스트 기능을 켜거나 끕니다. 기본값은 켜져 있습니다. 켜져 있으면 &lt;code&gt;read&lt;/code&gt; 방법 중 하나를 호출 하면 메시지 요약이 업데이트됩니다. 그러나 해제되어 있으면 메시지 요약이 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82f2258b914e31cbffa36e7b526ce6ed41c142e1" translate="yes" xml:space="preserve">
          <source>Turns the digest function on or off. The default is on. When it is on, a call to one of the &lt;code&gt;write&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated.</source>
          <target state="translated">다이제스트 기능을 켜거나 끕니다. 기본값은 켜져 있습니다. 켜져 있으면 &lt;code&gt;write&lt;/code&gt; 메소드 중 하나를 호출 하면 메시지 요약이 업데이트됩니다. 그러나 해제되어 있으면 메시지 요약이 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="00229f015752c0881b83f9e6f7a6ac3a52a1d247" translate="yes" xml:space="preserve">
          <source>Turns the specified note off.</source>
          <target state="translated">지정된 음표를 끕니다.</target>
        </trans-unit>
        <trans-unit id="be797f59792eace5578bb5bd17367f2fcd155546" translate="yes" xml:space="preserve">
          <source>Turns the specified note off. The key-up velocity, if not ignored, can be used to affect how quickly the note decays. In any case, the note might not die away instantaneously; its decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal (a controller; see &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">지정된 음표를 끕니다. 건반 속도는 무시하지 않으면 음표가 얼마나 빨리 소멸되는지에 영향을 줄 수 있습니다. 어쨌든 메모는 즉시 죽지 않을 수도 있습니다. 감쇠율은 &lt;code&gt;Instrument&lt;/code&gt; 의 내부에 의해 결정됩니다 . 홀드 페달 (컨트롤러; &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; &lt;/a&gt; 참조 )이 다운되면 페달을 놓을 때까지이 방법의 효과가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="3cbf4957811d182a140c60394c9d804e7be71f2f" translate="yes" xml:space="preserve">
          <source>Twice the old capacity, plus &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">기존 용량의 두 배에 &lt;code&gt;2&lt;/code&gt; 를 더한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="3963b2bdc52d8c572907a77d154125a67fb6430c" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;ArrayType&lt;/code&gt; instances are equal if and only if they describe array instances which have the same dimension, elements' open type and primitive array flag.</source>
          <target state="translated">두 개의 &lt;code&gt;ArrayType&lt;/code&gt; 인스턴스는 동일한 차원, 요소의 개방형 및 기본 배열 플래그를 갖는 배열 인스턴스를 설명하는 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7393bf9d05310d00acc183e1ca7d39763b45e0ae" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;CompositeType&lt;/code&gt; instances are equal if and only if all of the following statements are true:</source>
          <target state="translated">다음 명령문이 모두 참인 경우에만 두 &lt;code&gt;CompositeType&lt;/code&gt; 인스턴스가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e95dadfba4aba0b5ed81d95cc373094049834066" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;SimpleType&lt;/code&gt; instances are equal if and only if their &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; methods return the same value.</source>
          <target state="translated">&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt; 메소드가 동일한 값을 리턴하는 경우에만 두 개의 &lt;code&gt;SimpleType&lt;/code&gt; 인스턴스가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4355266a57a804e19a61b7283d511c8c0f567e5d" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;TabularType&lt;/code&gt; instances are equal if and only if all of the following statements are true:</source>
          <target state="translated">다음 명령문이 모두 참인 경우에만 두 &lt;code&gt;TabularType&lt;/code&gt; 인스턴스가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="73a77fb5a46cef2494e3f215053010fdc6720025" translate="yes" xml:space="preserve">
          <source>Two Java security properties control the TTL values used for positive and negative host name resolution caching:</source>
          <target state="translated">두 가지 Java 보안 특성은 긍정 및 부정 호스트 이름 확인 캐싱에 사용되는 TTL 값을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="82f73f1dfe8bdd02baba316fe916c320a724de55" translate="yes" xml:space="preserve">
          <source>Two LDAP names are equal if each RDN in one is equal to the corresponding RDN in the other. This implies both have the same number of RDNs, and each RDN's equals() test against the corresponding RDN in the other name returns true. See &lt;a href=&quot;rdn#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt;&lt;/a&gt; for a definition of RDN equality.</source>
          <target state="translated">하나의 각 RDN이 다른 하나의 해당 RDN과 동일한 경우 두 개의 LDAP 이름이 동일합니다. 이것은 둘 다 같은 수의 RDN을 가지며 다른 이름의 해당 RDN에 대한 각 RDN의 equals () 테스트는 true를 반환합니다. RDN 동등성의 정의에 대해서는 &lt;a href=&quot;rdn#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32e588338ba77efabef38aa557b887e65faea8ac" translate="yes" xml:space="preserve">
          <source>Two URIs with different schemes are ordered according the ordering of their schemes, without regard to case.</source>
          <target state="translated">경우에 상관없이 다른 체계를 가진 두 개의 URI는 체계의 순서에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="3da8e84c94c7ef795c80dec53e06bb0d8e4519fa" translate="yes" xml:space="preserve">
          <source>Two URL objects are equal if they have the same protocol, reference equivalent hosts, have the same port number on the host, and the same file and fragment of the file.</source>
          <target state="translated">두 개의 URL 객체가 동일한 프로토콜, 동등한 호스트 참조, 호스트의 포트 번호 및 파일 및 파일 조각이 동일한 경우 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b3f1dafe4e26516f76225ee43807f52c8780fc4b" translate="yes" xml:space="preserve">
          <source>Two array references are considered deeply equal if both are &lt;code&gt;null&lt;/code&gt;, or if they refer to arrays that contain the same number of elements and all corresponding pairs of elements in the two arrays are deeply equal.</source>
          <target state="translated">두 배열이 모두 &lt;code&gt;null&lt;/code&gt; 이거나 같은 수의 요소를 포함하는 배열을 참조하고 두 배열의 모든 해당 요소 쌍이 완전히 동일한 경우 두 배열 참조는 깊이 동일한 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="ffdee623c9463604338d995b03212cf5f1a12f2b" translate="yes" xml:space="preserve">
          <source>Two byte buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;byte&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/byte#compare-byte-byte-&quot;&gt;&lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2 바이트 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;byte&lt;/code&gt; 요소 쌍은 마치 &lt;a href=&quot;../lang/byte#compare-byte-byte-&quot;&gt; &lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt; &lt;/a&gt; 호출하는 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="828fd46b4b2eb2d1a9a761d4546a648fd204b699" translate="yes" xml:space="preserve">
          <source>Two byte buffers are equal if, and only if,</source>
          <target state="translated">두 바이트 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="320534074932bd09c255edba6d0926f12d5b5ee4" translate="yes" xml:space="preserve">
          <source>Two channels that form a unidirectional pipe</source>
          <target state="translated">단방향 파이프를 형성하는 2 개의 채널</target>
        </trans-unit>
        <trans-unit id="15f33adc6e8f5895ac7434f58d64ef4dfb852ea3" translate="yes" xml:space="preserve">
          <source>Two char buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;char&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/character#compare-char-char-&quot;&gt;&lt;code&gt;Character.compare(char,char)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대응하는 버퍼 내에서 각각의 서열의 시작 위치에 관계없이, 나머지 요소들의 순서를 사전 식으로 비교함으로써 2 개의 문자 버퍼를 비교한다. &lt;code&gt;char&lt;/code&gt; 요소의 쌍은 &lt;a href=&quot;../lang/character#compare-char-char-&quot;&gt; &lt;code&gt;Character.compare(char,char)&lt;/code&gt; &lt;/a&gt; 호출하여 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="bb9c1fccb8ffead1f642a071e83ff69e521384af" translate="yes" xml:space="preserve">
          <source>Two char buffers are equal if, and only if,</source>
          <target state="translated">두 개의 문자 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1255ac3931ad4204469ef90364f16617e4241739" translate="yes" xml:space="preserve">
          <source>Two characters &lt;code&gt;c1&lt;/code&gt; and &lt;code&gt;c2&lt;/code&gt; are considered the same ignoring case if at least one of the following is true:</source>
          <target state="translated">다음 중 하나 이상에 해당하는 경우 두 문자 &lt;code&gt;c1&lt;/code&gt; 및 &lt;code&gt;c2&lt;/code&gt; 는 동일한 무시 사례로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="70eac33f370d438cd2d849d987bb139e150c76ab" translate="yes" xml:space="preserve">
          <source>Two charsets are equal if, and only if, they have the same canonical names. A charset is never equal to any other type of object.</source>
          <target state="translated">두 개의 문자 집합이 동일한 정식 이름을 가진 경우에만 동일합니다. 문자셋은 다른 유형의 객체와 결코 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b658c2892dc5a68b396e9cc96727ddfa17470887" translate="yes" xml:space="preserve">
          <source>Two corresponding &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, enum, or annotation typed members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;x.equals(y)&lt;/code&gt;. (Note that this definition is recursive for annotation typed members.)</source>
          <target state="translated">&lt;code&gt;x.equals(y)&lt;/code&gt; 경우 값이 &lt;code&gt;x&lt;/code&gt; 이고 &lt;code&gt;y&lt;/code&gt; 인 두 개의 해당 &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Class&lt;/code&gt; , enum 또는 주석 유형 멤버는 동일한 것으로 간주됩니다 . 이 정의는 주석 유형의 멤버에 대해 재귀 적입니다.</target>
        </trans-unit>
        <trans-unit id="7f9446391cf829fc996ed9387bf8ae2aaf6c1766" translate="yes" xml:space="preserve">
          <source>Two corresponding &lt;code&gt;double&lt;/code&gt; members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Double.valueOf(x).equals(Double.valueOf(y))&lt;/code&gt;. (Unlike the &lt;code&gt;==&lt;/code&gt; operator, NaN is considered equal to itself, and &lt;code&gt;0.0&lt;/code&gt; unequal to &lt;code&gt;-0.0&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;Double.valueOf(x).equals(Double.valueOf(y))&lt;/code&gt; 경우 값이 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 인 두 개의 해당 &lt;code&gt;double&lt;/code&gt; 멤버는 동일한 것으로 간주됩니다 . ( &lt;code&gt;==&lt;/code&gt; 연산자 와 달리 NaN은 자체와 같고 &lt;code&gt;0.0&lt;/code&gt; 은 &lt;code&gt;-0.0&lt;/code&gt; 과 같지 않은 것으로 간주됩니다 .)</target>
        </trans-unit>
        <trans-unit id="7b4157aa85e4495185b272adb91fa68959fca9a7" translate="yes" xml:space="preserve">
          <source>Two corresponding &lt;code&gt;float&lt;/code&gt; members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Float.valueOf(x).equals(Float.valueOf(y))&lt;/code&gt;. (Unlike the &lt;code&gt;==&lt;/code&gt; operator, NaN is considered equal to itself, and &lt;code&gt;0.0f&lt;/code&gt; unequal to &lt;code&gt;-0.0f&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;Float.valueOf(x).equals(Float.valueOf(y))&lt;/code&gt; 경우 값이 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 인 두 개의 해당 &lt;code&gt;float&lt;/code&gt; 멤버는 동일한 것으로 간주됩니다 . &lt;code&gt;==&lt;/code&gt; 연산자 와 달리 NaN은 자체와 같고 &lt;code&gt;0.0f&lt;/code&gt; 는 &lt;code&gt;-0.0f&lt;/code&gt; 와 같지 않은 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="02ed45a3d9ac87a4d6fa229ca8c0b8493e038c63" translate="yes" xml:space="preserve">
          <source>Two corresponding array typed members &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt;, for the appropriate overloading of &lt;a href=&quot;../../util/arrays#equals-long:A-long:A-&quot;&gt;&lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../util/arrays#equals-long:A-long:A-&quot;&gt; &lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt; &lt;/a&gt; 의 적절한 오버로드에 대해 &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt; 인 경우 두 개의 해당 배열 유형 멤버 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 가 동일한 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f37fe1c0cd073bed6a3d8167750817a9a3b3e11" translate="yes" xml:space="preserve">
          <source>Two corresponding primitive typed members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;x == y&lt;/code&gt;, unless their type is &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 또는 &lt;code&gt;y&lt;/code&gt; 값이 x 또는 y 인 두 개의 해당 기본 유형 멤버는 유형이 &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; 이 아닌 한 &lt;code&gt;x == y&lt;/code&gt; 이면 동일한 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="78efe36ca860b207cc926e61aa19241248835f18" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;day-of-month&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">에 대한 두 자리 숫자 &lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;day-of-month&lt;/code&gt; &lt;/a&gt; . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6f818a4014fb3ec08d68c4244c331a7b03adbb4" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#HOUR_OF_DAY&quot;&gt;&lt;code&gt;hour-of-day&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#HOUR_OF_DAY&quot;&gt; &lt;code&gt;hour-of-day&lt;/code&gt; &lt;/a&gt; 대한 두 자리 숫자 . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="031dd940536a454024b57a3eb7f0ea3967700728" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#MINUTE_OF_HOUR&quot;&gt;&lt;code&gt;minute-of-hour&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#MINUTE_OF_HOUR&quot;&gt; &lt;code&gt;minute-of-hour&lt;/code&gt; &lt;/a&gt; 을 나타내는 두 자리 숫자입니다 . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="260c79d2746b062c0631f4c19ac19986dea55e22" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;month-of-year&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;month-of-year&lt;/code&gt; &lt;/a&gt; 두 자리 숫자입니다 . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7c0583466a4505eb8649c3e513fa06e4de68123" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;second-of-minute&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;second-of-minute&lt;/code&gt; &lt;/a&gt; 를 나타내는 두 자리 숫자입니다 . 두 자리 수를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b3c6bcc0384e99e1c250290b576b84394198430" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/isofields#WEEK_OF_WEEK_BASED_YEAR&quot;&gt;&lt;code&gt;week-of-week-based-year&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure three digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/isofields#WEEK_OF_WEEK_BASED_YEAR&quot;&gt; &lt;code&gt;week-of-week-based-year&lt;/code&gt; &lt;/a&gt; 두 자리 숫자입니다 . 세 자리를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="81275db60144c060dec068367d7aa73a2913bf64" translate="yes" xml:space="preserve">
          <source>Two double buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;double&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/double#compare-double-double-&quot;&gt;&lt;code&gt;Double.compare(double,double)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Double.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;double&lt;/code&gt; values (including &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">두 개의 이중 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;-0.0&lt;/code&gt; 과 &lt;code&gt;0.0&lt;/code&gt; 이 동일한 것으로 간주되는 것을 제외하고 &lt;a href=&quot;../lang/double#compare-double-double-&quot;&gt; &lt;code&gt;Double.compare(double,double)&lt;/code&gt; &lt;/a&gt; 을 호출 하여 &lt;code&gt;double&lt;/code&gt; 요소 쌍을 비교 합니다. 이 메소드에서는 &lt;code&gt;Double.NaN&lt;/code&gt; 이 자신과 같고 다른 모든 &lt;code&gt;double&lt;/code&gt; 값 ( &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; 포함 ) 보다 큰 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc1fbd4f57c34fae7e58834caea565d67450878c" translate="yes" xml:space="preserve">
          <source>Two double buffers are equal if, and only if,</source>
          <target state="translated">두 개의 이중 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b2c6a7b0a40e89f2d5eef1f68a05b982f6ad559e" translate="yes" xml:space="preserve">
          <source>Two doubles &lt;code&gt;d1&lt;/code&gt; and &lt;code&gt;d2&lt;/code&gt; are considered equal if:</source>
          <target state="translated">다음 과 같은 경우 두 개의 복식 &lt;code&gt;d1&lt;/code&gt; 과 &lt;code&gt;d2&lt;/code&gt; 가 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="790cbd91130d9bfeeeae9a1f57903936a9c8548f" translate="yes" xml:space="preserve">
          <source>Two factory methods, &lt;a href=&quot;resourcebundle.control#getControl-java.util.List-&quot;&gt;&lt;code&gt;getControl(List)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resourcebundle.control#getNoFallbackControl-java.util.List-&quot;&gt;&lt;code&gt;getNoFallbackControl(List)&lt;/code&gt;&lt;/a&gt;, provide &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instances that implement common variations of the default bundle loading process.</source>
          <target state="translated">두 가지 팩토리 메소드 인 &lt;a href=&quot;resourcebundle.control#getControl-java.util.List-&quot;&gt; &lt;code&gt;getControl(List)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;resourcebundle.control#getNoFallbackControl-java.util.List-&quot;&gt; &lt;code&gt;getNoFallbackControl(List)&lt;/code&gt; &lt;/a&gt; 은 기본 번들로드 프로세스의 공통 변형을 구현 하는 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 인스턴스를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="94f969c3f1c5266dac27819cb6f7c1da1174a51f" translate="yes" xml:space="preserve">
          <source>Two fields are used for week-based-year, one for the &lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt;&lt;code&gt;week-of-week-based-year&lt;/code&gt;&lt;/a&gt; and one for &lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt;&lt;code&gt;week-based-year&lt;/code&gt;&lt;/a&gt;. In a week-based-year, each week belongs to only a single year. Week 1 of a year is the first week that starts on the first day-of-week and has at least the minimum number of days. The first and last weeks of a year may contain days from the previous calendar year or next calendar year respectively.</source>
          <target state="translated">두 개의 필드가 주 단위로 사용되며, 하나는 &lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt; &lt;code&gt;week-of-week-based-year&lt;/code&gt; &lt;/a&gt; , 다른 하나는 &lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt; &lt;code&gt;week-based-year&lt;/code&gt; &lt;/a&gt; . 주별 연도에서 각주는 단일 연도에만 속합니다. 1 주일은 첫 번째 요일에 시작하여 최소한 최소 일 수를 갖는 첫 번째 주입니다. 연도의 첫 번째 및 마지막 주에는 각각 이전 연도 또는 다음 연도의 날짜가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f856d53c5409354b424a6b88872025e64ea40cc" translate="yes" xml:space="preserve">
          <source>Two float buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;float&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/float#compare-float-float-&quot;&gt;&lt;code&gt;Float.compare(float,float)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Float.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;float&lt;/code&gt; values (including &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">2 개의 플로트 버퍼는 대응하는 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소들의 시퀀스를 사전 식으로 비교함으로써 비교된다. &lt;code&gt;float&lt;/code&gt; 요소의 쌍은 &lt;a href=&quot;../lang/float#compare-float-float-&quot;&gt; &lt;code&gt;Float.compare(float,float)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것처럼 &lt;code&gt;-0.0&lt;/code&gt; 과 &lt;code&gt;0.0&lt;/code&gt; 이 동일한 것으로 간주되는 것을 제외하고 비교됩니다. &lt;code&gt;Float.NaN&lt;/code&gt; 은이 메소드에서 자신과 같고 다른 모든 &lt;code&gt;float&lt;/code&gt; 값 ( &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; 포함 ) 보다 큰 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="ab5aaf9dda16dddecde94392b8de1659ec944d53" translate="yes" xml:space="preserve">
          <source>Two float buffers are equal if, and only if,</source>
          <target state="translated">두 개의 부동 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0f7529428614cd74b61525d183cd15ac20ea3382" translate="yes" xml:space="preserve">
          <source>Two floats &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt; are considered equal if:</source>
          <target state="translated">다음 과 같은 경우 두 개의 부동 소수점 &lt;code&gt;f1&lt;/code&gt; 과 &lt;code&gt;f2&lt;/code&gt; 는 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3ec7c4685fbb6e0cd82151a82b1856e783298e58" translate="yes" xml:space="preserve">
          <source>Two hierarchical URIs with identical schemes are ordered according to the ordering of their authority components:</source>
          <target state="translated">동일한 체계를 가진 두 개의 계층 적 URI는 권한 구성 요소의 순서에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="9456e8128eea79cf44263ed1c3e02c15485da4d1" translate="yes" xml:space="preserve">
          <source>Two hosts are considered equivalent if both host names can be resolved into the same IP addresses; else if either host name can't be resolved, the host names must be equal without regard to case; or both host names equal to null.</source>
          <target state="translated">두 호스트 이름이 모두 동일한 IP 주소로 해석 될 수있는 경우 두 호스트는 동등한 것으로 간주됩니다. 그렇지 않으면 호스트 이름을 확인할 수 없으면 대소 문자와 상관없이 호스트 이름이 같아야합니다. 또는 두 호스트 이름이 모두 null입니다.</target>
        </trans-unit>
        <trans-unit id="f3f5469340d8a203d30f3b1f4bca04b9e2cd70cb" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;InetAddress&lt;/code&gt; represent the same IP address if the length of the byte arrays returned by &lt;code&gt;getAddress&lt;/code&gt; is the same for both, and each of the array components is the same for the byte arrays.</source>
          <target state="translated">&lt;code&gt;getAddress&lt;/code&gt; 에 의해 리턴 된 바이트 배열의 길이가 둘 다 동일하고 각 배열 구성 요소가 바이트 배열에 대해 동일한 경우 &lt;code&gt;InetAddress&lt;/code&gt; 의 두 인스턴스는 동일한 IP 주소를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d53ae396b1d69ae511021d6ecc99a9bfe4ea1851" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;InetSocketAddress&lt;/code&gt; represent the same address if both the InetAddresses (or hostnames if it is unresolved) and port numbers are equal. If both addresses are unresolved, then the hostname and the port number are compared. Note: Hostnames are case insensitive. e.g. &quot;FooBar&quot; and &quot;foobar&quot; are considered equal.</source>
          <target state="translated">InetAddresses (또는 확인되지 않은 경우 호스트 이름)와 포트 번호가 모두 같은 경우 &lt;code&gt;InetSocketAddress&lt;/code&gt; 의 두 인스턴스는 동일한 주소를 나타냅니다. 두 주소가 모두 확인되지 않으면 호스트 이름과 포트 번호가 비교됩니다. 참고 : 호스트 이름은 대소 문자를 구분하지 않습니다. 예를 들어 &quot;FooBar&quot;와 &quot;foobar&quot;는 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="97b13973b11b6b04063de8e03fd3ecc4239481db" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;InterfaceAddress&lt;/code&gt; represent the same address if the InetAddress, the prefix length and the broadcast are the same for both.</source>
          <target state="translated">InetAddress, 접두사 길이 및 브로드 캐스트가 모두 동일한 경우 &lt;code&gt;InterfaceAddress&lt;/code&gt; 의 두 인스턴스가 동일한 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4b996d3889c3b875c55ca3ae310956b714b115ac" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;NetworkInterface&lt;/code&gt; represent the same NetworkInterface if both name and addrs are the same for both.</source>
          <target state="translated">이름과 주소가 모두 동일한 경우 두 개의 &lt;code&gt;NetworkInterface&lt;/code&gt; 인스턴스는 동일한 NetworkInterface를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dc1c2e993d8d2f8ab36ba6b41f124760050317c8" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;Proxy&lt;/code&gt; represent the same address if both the SocketAddresses and type are equal.</source>
          <target state="translated">SocketAddresses와 type이 모두 같은 경우 &lt;code&gt;Proxy&lt;/code&gt; 의 두 인스턴스는 동일한 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1ef72b659250c65bf74ac7f0e0e43c90b4dbda63" translate="yes" xml:space="preserve">
          <source>Two int buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;int&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/integer#compare-int-int-&quot;&gt;&lt;code&gt;Integer.compare(int,int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 int 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;int&lt;/code&gt; 요소 쌍은 &lt;a href=&quot;../lang/integer#compare-int-int-&quot;&gt; &lt;code&gt;Integer.compare(int,int)&lt;/code&gt; &lt;/a&gt; 호출하여 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="cb4e364b400dcaea531f35acc3fbff8db2fedfa4" translate="yes" xml:space="preserve">
          <source>Two int buffers are equal if, and only if,</source>
          <target state="translated">두 개의 int 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ef16d0364abe5e4f58dba4f94de905b5517ef114" translate="yes" xml:space="preserve">
          <source>Two language ranges, &lt;code&gt;&quot;iw&quot;&lt;/code&gt; and &lt;code&gt;&quot;he&quot;&lt;/code&gt;, have the same highest priority in the list. By adding &lt;code&gt;&quot;he&quot;&lt;/code&gt; to the user's Language Priority List, locale-matching method can find Hebrew as a matching locale (or language tag) even if the application or system offers only &lt;code&gt;&quot;he&quot;&lt;/code&gt; as a supported locale (or language tag).</source>
          <target state="translated">&lt;code&gt;&quot;iw&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;he&quot;&lt;/code&gt; 의 두 언어 범위 는 목록에서 동일한 우선 순위를 갖습니다. 사용자의 언어 우선 순위 목록에 &lt;code&gt;&quot;he&quot;&lt;/code&gt; 를 추가 하면 응용 프로그램이나 시스템에서 &lt;code&gt;&quot;he&quot;&lt;/code&gt; 만 지원되는 로캘 (또는 언어 태그)로 제공하더라도 로캘 일치 방법은 히브리어를 일치하는 로캘 (또는 언어 태그)로 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="563eba67f158dd6d851a49f32b865a37f108fae1" translate="yes" xml:space="preserve">
          <source>Two long buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;long&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/long#compare-long-long-&quot;&gt;&lt;code&gt;Long.compare(long,long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 긴 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;long&lt;/code&gt; 요소를 &lt;a href=&quot;../lang/long#compare-long-long-&quot;&gt; &lt;code&gt;Long.compare(long,long)&lt;/code&gt; &lt;/a&gt; 으로 호출하면 긴 요소 쌍이 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="5705efd986e39e3f93e960d33bcd6c77fb79107d" translate="yes" xml:space="preserve">
          <source>Two long buffers are equal if, and only if,</source>
          <target state="translated">두 개의 긴 버퍼는 다음과 같은 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="765caf736393b1447e3dedc3e6859f322e2c0332" translate="yes" xml:space="preserve">
          <source>Two method forms support processing whether the triggering stage completed normally or exceptionally: Method &lt;a href=&quot;completionstage#whenComplete-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;whenComplete&lt;/code&gt;&lt;/a&gt; allows injection of an action regardless of outcome, otherwise preserving the outcome in its completion. Method &lt;a href=&quot;completionstage#handle-java.util.function.BiFunction-&quot;&gt;&lt;code&gt;handle&lt;/code&gt;&lt;/a&gt; additionally allows the stage to compute a replacement result that may enable further processing by other dependent stages. In all other cases, if a stage's computation terminates abruptly with an (unchecked) exception or error, then all dependent stages requiring its completion complete exceptionally as well, with a &lt;a href=&quot;completionexception&quot;&gt;&lt;code&gt;CompletionException&lt;/code&gt;&lt;/a&gt; holding the exception as its cause. If a stage is dependent on &lt;em&gt;both&lt;/em&gt; of two stages, and both complete exceptionally, then the CompletionException may correspond to either one of these exceptions. If a stage is dependent on &lt;em&gt;either&lt;/em&gt; of two others, and only one of them completes exceptionally, no guarantees are made about whether the dependent stage completes normally or exceptionally. In the case of method &lt;code&gt;whenComplete&lt;/code&gt;, when the supplied action itself encounters an exception, then the stage exceptionally completes with this exception if not already completed exceptionally.</source>
          <target state="translated">두 방법 형태는 트리거링 단계가 정상적으로 완료 여부 예외적 처리 지원 : 방법 &lt;a href=&quot;completionstage#whenComplete-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;whenComplete&lt;/code&gt; 이&lt;/a&gt; 결과에 관계없이 동작의 주입을 허용 다르게 완성의 결과를 보존. 메소드 &lt;a href=&quot;completionstage#handle-java.util.function.BiFunction-&quot;&gt; &lt;code&gt;handle&lt;/code&gt; &lt;/a&gt; 은 스테이지가 다른 종속 스테이지에 의한 추가 처리를 가능하게하는 대체 결과를 계산할 수있게합니다. 다른 모든 경우에, 스테이지의 계산이 (확인되지 ​​않은) 예외 또는 오류로 갑자기 종료되면 완료를 요구하는 모든 종속 스테이지 는 예외적으로 예외를 원인으로 하는 &lt;a href=&quot;completionexception&quot;&gt; &lt;code&gt;CompletionException&lt;/code&gt; &lt;/a&gt; 과 함께 예외적으로 완료됩니다 . 무대가 &lt;em&gt;둘 다에&lt;/em&gt; 의존하는 &lt;em&gt;경우&lt;/em&gt;두 단계 중 하나이며 둘 다 예외적으로 완료되면 CompletionException은 이러한 예외 중 하나에 해당 할 수 있습니다. 한 단계가 다른 두 단계 &lt;em&gt;중 하나&lt;/em&gt; 에 종속되어 &lt;em&gt;있고&lt;/em&gt; 그 중 하나만 예외적으로 완료되는 경우 종속 단계가 정상적으로 완료되는지 또는 예외적으로 완료되는지에 대한 보장은 없습니다. &lt;code&gt;whenComplete&lt;/code&gt; 메소드의 경우 , 제공된 조치 자체에 예외가 발생하면 스테이지가 예외적으로 완료되지 않은 경우이 예외로 예외적으로 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="7605eae3d98d28d6062311241e63da1518e1a157" translate="yes" xml:space="preserve">
          <source>Two opaque URIs with identical schemes and scheme-specific parts are ordered according to the ordering of their fragments.</source>
          <target state="translated">동일한 체계와 체계 특정 부분을 가진 두 개의 불투명 한 URI는 조각의 순서에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="d473d0f256cea49ed96dc67be37016b899731d09" translate="yes" xml:space="preserve">
          <source>Two opaque URIs with identical schemes are ordered according to the ordering of their scheme-specific parts.</source>
          <target state="translated">동일한 체계를 가진 두 개의 불투명 한 URI는 체계 별 파트의 순서에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="85b07d5e140ce2cc6d820c15a44356fd530a45ae" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;&lt;code&gt;queries&lt;/code&gt;&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 가지 날짜 / 시간 정보는 &lt;a href=&quot;../chrono/chronology&quot;&gt;연대기&lt;/a&gt; 및 &lt;a href=&quot;../zoneid&quot;&gt;시간대&lt;/a&gt; 로 숫자로 표시 할 수 없습니다 . 이들은 &lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; 에&lt;/a&gt; 정의 된 정적 메소드를 사용하여 &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt; &lt;code&gt;queries&lt;/code&gt; &lt;/a&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e05778c54f992a5b6114c3e9fe56ad4e25fbad09" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;queries&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 가지 날짜 / 시간 정보는 &lt;a href=&quot;../chrono/chronology&quot;&gt;연대기&lt;/a&gt; 및 &lt;a href=&quot;../zoneid&quot;&gt;시간대&lt;/a&gt; 로 숫자로 표시 할 수 없습니다 . 이들은 &lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; 에&lt;/a&gt; 정의 된 정적 메소드를 사용하여 &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;쿼리&lt;/a&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c94d69790e1ec838959829076066d6897764fdf" translate="yes" xml:space="preserve">
          <source>Two possibly &lt;code&gt;null&lt;/code&gt; elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are deeply equal if any of the following conditions hold:</source>
          <target state="translated">다음 조건 중 하나라도 해당되는 경우 두 개의 &lt;code&gt;null&lt;/code&gt; 요소 &lt;code&gt;e1&lt;/code&gt; 과 &lt;code&gt;e2&lt;/code&gt; 는 완전히 같습니다.</target>
        </trans-unit>
        <trans-unit id="e737b2c512ad189e678d92bf45b1d83ff5c03037" translate="yes" xml:space="preserve">
          <source>Two rule sets are equal if they will always result in the same output for any given input instant or local date-time. Rules from two different groups may return false even if they are in fact the same.</source>
          <target state="translated">주어진 입력 순간 또는 현지 날짜-시간에 대해 항상 동일한 출력을 생성 할 경우 두 규칙 세트는 동일합니다. 서로 다른 두 그룹의 규칙은 실제로 동일하더라도 거짓을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d74931762644a8874ec6ca8b382ffa83e63855b9" translate="yes" xml:space="preserve">
          <source>Two short buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;short&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/short#compare-short-short-&quot;&gt;&lt;code&gt;Short.compare(short,short)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 개의 짧은 버퍼는 해당 버퍼 내에서 각 시퀀스의 시작 위치에 관계없이 나머지 요소의 시퀀스를 사전 식으로 비교하여 비교됩니다. &lt;code&gt;short&lt;/code&gt; 요소의 쌍은 &lt;a href=&quot;../lang/short#compare-short-short-&quot;&gt; &lt;code&gt;Short.compare(short,short)&lt;/code&gt; &lt;/a&gt; 호출하여 것처럼 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="92e271d05453aef061bbc3509e2fc83770af674e" translate="yes" xml:space="preserve">
          <source>Two short buffers are equal if, and only if,</source>
          <target state="translated">두 개의 짧은 버퍼는 다음과 같은 경우에만 같습니다.</target>
        </trans-unit>
        <trans-unit id="840bcd21edbcd6c45b75d11fb8d1eb8bd409a790" translate="yes" xml:space="preserve">
          <source>Two types of operations are provided for manipulating the scale of a &lt;code&gt;BigDecimal&lt;/code&gt;: scaling/rounding operations and decimal point motion operations. Scaling/rounding operations (&lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is approximately (or exactly) equal to that of the operand, but whose scale or precision is the specified value; that is, they increase or decrease the precision of the stored number with minimal effect on its value. Decimal point motion operations (&lt;a href=&quot;bigdecimal#movePointLeft-int-&quot;&gt;&lt;code&gt;movePointLeft&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bigdecimal#movePointRight-int-&quot;&gt;&lt;code&gt;movePointRight&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; created from the operand by moving the decimal point a specified distance in the specified direction.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일을 조작하기 위해 스케일링 / 라운딩 조작과 소수점 모션 조작의 두 가지 조작 유형이 제공 됩니다. 스케일링 / 라운딩 연산 ( &lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt; ) 은 값이 피연산자의 값과 대략 같거나 정확히 같지만 스케일 또는 정밀도가 지정된 값인 &lt;code&gt;BigDecimal&lt;/code&gt; 을 리턴 합니다. 즉, 값에 미치는 영향을 최소화하면서 저장된 수의 정밀도를 높이거나 낮 춥니 다. 소수점 모션 연산 ( &lt;a href=&quot;bigdecimal#movePointLeft-int-&quot;&gt; &lt;code&gt;movePointLeft&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;bigdecimal#movePointRight-int-&quot;&gt; &lt;code&gt;movePointRight&lt;/code&gt; &lt;/a&gt; ) 은 지정된 방향으로 지정된 거리만큼 소수점을 이동하여 피연산자에서 생성 된 &lt;code&gt;BigDecimal&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3dd96db0b8fdb5ec29bc75110364487fd08afe3f" translate="yes" xml:space="preserve">
          <source>TwoDigitHours</source>
          <target state="translated">TwoDigitHours</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="47f39d80096c89d119a7202ce0aa5f0bce9d98cd" translate="yes" xml:space="preserve">
          <source>Type Names</source>
          <target state="translated">타입 이름</target>
        </trans-unit>
        <trans-unit id="6a6611d567cb2f36519ceaec8099760e8d3871d3" translate="yes" xml:space="preserve">
          <source>Type Parameters:</source>
          <target state="translated">유형 매개 변수 :</target>
        </trans-unit>
        <trans-unit id="fecc28dda84b2d001dce080aebed61aa8adf2ceb" translate="yes" xml:space="preserve">
          <source>Type String</source>
          <target state="translated">타입 문자열</target>
        </trans-unit>
        <trans-unit id="29a202322290c41693f4d3d1ecfd33271e248f35" translate="yes" xml:space="preserve">
          <source>Type and value equality matching is done as below:</source>
          <target state="translated">유형 및 값 평등 일치는 다음과 같이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="9abaed5a4fee3a84c132511e464e39d0e2015cac" translate="yes" xml:space="preserve">
          <source>Type for an update of an internal relation.</source>
          <target state="translated">내부 관계 업데이트를위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9b0911379bab618c3ca8a02dd5468d7f6fc9d0cd" translate="yes" xml:space="preserve">
          <source>Type for private keys.</source>
          <target state="translated">개인 키를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="a43434f2b4ba91c827a66d3dea3fb82db7c68968" translate="yes" xml:space="preserve">
          <source>Type for public keys.</source>
          <target state="translated">공개 키 유형입니다.</target>
        </trans-unit>
        <trans-unit id="c05b29592a901917c665933e4af5a98552bb0a36" translate="yes" xml:space="preserve">
          <source>Type for secret keys.</source>
          <target state="translated">비밀 키를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="d4def0c1ec8dd2ec9d5988d983aae91de603bde6" translate="yes" xml:space="preserve">
          <source>Type for the creation of an internal relation.</source>
          <target state="translated">내부 관계 작성을위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="711f460ec0af76d4dd67b882900ac195c361a8f7" translate="yes" xml:space="preserve">
          <source>Type for the relation MBean added into the Relation Service.</source>
          <target state="translated">관계 서비스에 추가 된 관계 MBean의 유형.</target>
        </trans-unit>
        <trans-unit id="a5da08a49b0d9e8ba1122bf89572a0805a2818ab" translate="yes" xml:space="preserve">
          <source>Type for the removal from the Relation Service of a relation MBean.</source>
          <target state="translated">관계 MBean의 관계 서비스에서 제거하기위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e2fdd3bfdc86204fa1c97bf98ce5b54c3508745e" translate="yes" xml:space="preserve">
          <source>Type for the removal from the Relation Service of an internal relation.</source>
          <target state="translated">내부 관계의 관계 서비스에서 제거하기위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="c8d98b51d69372823b9b8567bac9ec3e64421f25" translate="yes" xml:space="preserve">
          <source>Type for the update of a relation MBean.</source>
          <target state="translated">관계 MBean 업데이트를위한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="aed2c219e25eff0ad10e7f04bc3e58f3f626c08c" translate="yes" xml:space="preserve">
          <source>Type is the common superinterface for all types in the Java programming language.</source>
          <target state="translated">유형은 Java 프로그래밍 언어의 모든 유형에 대한 공통 수퍼 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="5fc0e2d3160b7d91982c2ed8ec79bf17e0ac1b46" translate="yes" xml:space="preserve">
          <source>Type is the common superinterface for all types in the Java programming language. These include raw types, parameterized types, array types, type variables and primitive types.</source>
          <target state="translated">유형은 Java 프로그래밍 언어의 모든 유형에 대한 공통 수퍼 인터페이스입니다. 여기에는 원시 유형, 매개 변수화 된 유형, 배열 유형, 유형 변수 및 기본 유형이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c6ec621ecbf5fcd4c27ed13185ac289b46b52d55" translate="yes" xml:space="preserve">
          <source>Type mapping rules</source>
          <target state="translated">타입 매핑 규칙</target>
        </trans-unit>
        <trans-unit id="d45cba8a21920a8210285abd1be6831a6888dd62" translate="yes" xml:space="preserve">
          <source>Type of descriptor, &quot;mbean&quot;, &quot;attribute&quot;, &quot;constructor&quot;, &quot;operation&quot;, or &quot;notification&quot;.</source>
          <target state="translated">디스크립터 유형, &quot;mbean&quot;, &quot;attribute&quot;, &quot;constructor&quot;, &quot;operation&quot;또는 &quot;notification&quot;</target>
        </trans-unit>
        <trans-unit id="108497ad4df6837d5bfdccaa8d930f21cd3240d7" translate="yes" xml:space="preserve">
          <source>Type parameter declaration</source>
          <target state="translated">타입 파라미터 선언</target>
        </trans-unit>
        <trans-unit id="3b6542b78cc1cbb76a295d173e0073cdf159b82f" translate="yes" xml:space="preserve">
          <source>Type parameters of functional interfaces can be specialized to primitives with additional type prefixes. To specialize the return type for a type that has both generic return type and generic arguments, we prefix &lt;code&gt;ToXxx&lt;/code&gt;, as in &lt;a href=&quot;tointfunction&quot;&gt;&lt;code&gt;ToIntFunction&lt;/code&gt;&lt;/a&gt;. Otherwise, type arguments are specialized left-to-right, as in &lt;a href=&quot;doubleconsumer&quot;&gt;&lt;code&gt;DoubleConsumer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;objintconsumer&quot;&gt;&lt;code&gt;ObjIntConsumer&lt;/code&gt;&lt;/a&gt;. (The type prefix &lt;code&gt;Obj&lt;/code&gt; is used to indicate that we don't want to specialize this parameter, but want to move on to the next parameter, as in &lt;a href=&quot;objintconsumer&quot;&gt;&lt;code&gt;ObjIntConsumer&lt;/code&gt;&lt;/a&gt;.) These schemes can be combined, as in &lt;code&gt;IntToDoubleFunction&lt;/code&gt;.</source>
          <target state="translated">기능 인터페이스의 유형 매개 변수는 추가 유형 접 두부가있는 기본 요소에 특화 될 수 있습니다. 제네릭 반환 형식과 제네릭 인수가 모두있는 형식의 반환 형식을 특수화하기 위해 &lt;code&gt;ToXxx&lt;/code&gt; 과 같이 ToXxx 접두사 를 &lt;a href=&quot;tointfunction&quot;&gt; &lt;code&gt;ToIntFunction&lt;/code&gt; &lt;/a&gt; 합니다. 그렇지 않으면 &lt;a href=&quot;doubleconsumer&quot;&gt; &lt;code&gt;DoubleConsumer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;objintconsumer&quot;&gt; &lt;code&gt;ObjIntConsumer&lt;/code&gt; &lt;/a&gt; 와 같이 형식 인수가 왼쪽에서 오른쪽으로 특수화 됩니다. (타입 접두사 &lt;code&gt;Obj&lt;/code&gt; 는이 매개 변수를 특수화하고 싶지 않지만 &lt;a href=&quot;objintconsumer&quot;&gt; &lt;code&gt;ObjIntConsumer&lt;/code&gt; &lt;/a&gt; 에서와 같이 다음 매개 변수로 넘어 가고자 함을 표시하는 데 사용됩니다 .) 이러한 스키마는 &lt;code&gt;IntToDoubleFunction&lt;/code&gt; 에서와 같이 결합 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f8294383485abed352067f227b79009adf3c167" translate="yes" xml:space="preserve">
          <source>Type.PRIVATE/&quot;PKCS#8&quot; - gets a KeyFactory instance for the key algorithm, constructs a PKCS8EncodedKeySpec with the encoded key bytes, and generates a private key from the spec</source>
          <target state="translated">Type.PRIVATE / &quot;PKCS # 8&quot;-키 알고리즘에 대한 KeyFactory 인스턴스를 가져 와서 인코딩 된 키 바이트를 사용하여 PKCS8EncodedKeySpec을 구성하고 스펙에서 개인 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="15b906813731146468dfa298adc84c9da494f96f" translate="yes" xml:space="preserve">
          <source>Type.PUBLIC/&quot;X.509&quot; - gets a KeyFactory instance for the key algorithm, constructs an X509EncodedKeySpec with the encoded key bytes, and generates a public key from the spec</source>
          <target state="translated">Type.PUBLIC / &quot;X.509&quot;-키 알고리즘에 대한 KeyFactory 인스턴스를 가져 와서 인코딩 된 키 바이트로 X509EncodedKeySpec을 구성하고 스펙에서 공개 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="dcadb89f135202adf7519224af015ac2f9066835" translate="yes" xml:space="preserve">
          <source>Type.SECRET/&quot;RAW&quot; - returns a SecretKeySpec object constructed using encoded key bytes and algorithm</source>
          <target state="translated">Type.SECRET / &quot;RAW&quot;-인코딩 된 키 바이트 및 알고리즘을 사용하여 생성 된 SecretKeySpec 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="922b714e8a60a9b8371bbfa4e5aa962ee018783d" translate="yes" xml:space="preserve">
          <source>Type.getTypeName()</source>
          <target state="translated">Type.getTypeName()</target>
        </trans-unit>
        <trans-unit id="c1b9a00d5c9fe3e2f619f664a098f04d08687ef3" translate="yes" xml:space="preserve">
          <source>TypeElement</source>
          <target state="translated">TypeElement</target>
        </trans-unit>
        <trans-unit id="b64a644106759ff55f140758a0f7850c79005783" translate="yes" xml:space="preserve">
          <source>TypeElement.getEnclosedElements()</source>
          <target state="translated">TypeElement.getEnclosedElements()</target>
        </trans-unit>
        <trans-unit id="556a6c6cf67bd5e900e2b331b74ddb186847980d" translate="yes" xml:space="preserve">
          <source>TypeElement.getEnclosingElement()</source>
          <target state="translated">TypeElement.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="bc967cc0397f942223b06f856d7b96af8640be4c" translate="yes" xml:space="preserve">
          <source>TypeElement.getInterfaces()</source>
          <target state="translated">TypeElement.getInterfaces()</target>
        </trans-unit>
        <trans-unit id="03403f85e463d34632b915bd485058f7373ea9eb" translate="yes" xml:space="preserve">
          <source>TypeElement.getNestingKind()</source>
          <target state="translated">TypeElement.getNestingKind()</target>
        </trans-unit>
        <trans-unit id="c30bd2e348d148383d0794372f6001eca19f1b6e" translate="yes" xml:space="preserve">
          <source>TypeElement.getQualifiedName()</source>
          <target state="translated">TypeElement.getQualifiedName()</target>
        </trans-unit>
        <trans-unit id="a705bbcbc2931abff53dbe6d64843f2eb6083b7d" translate="yes" xml:space="preserve">
          <source>TypeElement.getSimpleName()</source>
          <target state="translated">TypeElement.getSimpleName()</target>
        </trans-unit>
        <trans-unit id="435931ca94a8e7a74c66397bc58303d12f4608be" translate="yes" xml:space="preserve">
          <source>TypeElement.getSuperclass()</source>
          <target state="translated">TypeElement.getSuperclass()</target>
        </trans-unit>
        <trans-unit id="23289c0ae2106e74322b0223e0e821b8ba78c6f8" translate="yes" xml:space="preserve">
          <source>TypeElement.getTypeParameters()</source>
          <target state="translated">TypeElement.getTypeParameters()</target>
        </trans-unit>
        <trans-unit id="4d0bad4e8d6be3bb83a36ca4e24be27b0caed088" translate="yes" xml:space="preserve">
          <source>TypeKind</source>
          <target state="translated">TypeKind</target>
        </trans-unit>
        <trans-unit id="023690b532be6d5660bf06163ead725dc9988193" translate="yes" xml:space="preserve">
          <source>TypeKind.isPrimitive()</source>
          <target state="translated">TypeKind.isPrimitive()</target>
        </trans-unit>
        <trans-unit id="ceafbe7a47ac4951f0ccfc31a6fa456bfc90b450" translate="yes" xml:space="preserve">
          <source>TypeKind.valueOf()</source>
          <target state="translated">TypeKind.valueOf()</target>
        </trans-unit>
        <trans-unit id="1f5e07b79978ad60eb9bd84ff3c264917a686d61" translate="yes" xml:space="preserve">
          <source>TypeKind.values()</source>
          <target state="translated">TypeKind.values()</target>
        </trans-unit>
        <trans-unit id="e93e42fbad68836a1d5ae1990b903da543837054" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6</source>
          <target state="translated">TypeKindVisitor6</target>
        </trans-unit>
        <trans-unit id="29818e0ef0e0b101e77e7a4ad562e73f643500d5" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoType()</source>
          <target state="translated">TypeKindVisitor6.visitNoType()</target>
        </trans-unit>
        <trans-unit id="b1adf8c1e39ca0c87e92a181504ab90673aa6163" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoTypeAsNone()</source>
          <target state="translated">TypeKindVisitor6.visitNoTypeAsNone()</target>
        </trans-unit>
        <trans-unit id="263d4ba34a6c279c498c27503925db92866f684c" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoTypeAsPackage()</source>
          <target state="translated">TypeKindVisitor6.visitNoTypeAsPackage()</target>
        </trans-unit>
        <trans-unit id="c89e8714fabbbc2b7e76fd4de8f39a9e5a98f037" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoTypeAsVoid()</source>
          <target state="translated">TypeKindVisitor6.visitNoTypeAsVoid()</target>
        </trans-unit>
        <trans-unit id="ca8111277455079790839208148e76690fa72f1a" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitive()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitive()</target>
        </trans-unit>
        <trans-unit id="7a14bcf9f18f2f6a7c790ba144ce2ff1c8a6791f" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsBoolean()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsBoolean()</target>
        </trans-unit>
        <trans-unit id="c30ff91000c210630c7370b3a51664daeefbb22d" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsByte()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsByte()</target>
        </trans-unit>
        <trans-unit id="dfd902b66123a7dcc18ee50e5cccc35635252524" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsChar()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsChar()</target>
        </trans-unit>
        <trans-unit id="fb55ec4494cd19d7a488990f63db5ab09f5dfaf2" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsDouble()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsDouble()</target>
        </trans-unit>
        <trans-unit id="c7efd0276b7557b398a87fe8b0248a82887324d7" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsFloat()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsFloat()</target>
        </trans-unit>
        <trans-unit id="ee2478b126427392ca8446c7cd41165c75858cbc" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsInt()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsInt()</target>
        </trans-unit>
        <trans-unit id="687e0c3141db3901bdf44a33eed5ed93e0e0086a" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsLong()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsLong()</target>
        </trans-unit>
        <trans-unit id="ace897553f996f09a086d5420408990571d11a7c" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsShort()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsShort()</target>
        </trans-unit>
        <trans-unit id="b8824112ecd54db42a3ad0aebbd8d4aedb80ca07" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor7</source>
          <target state="translated">TypeKindVisitor7</target>
        </trans-unit>
        <trans-unit id="3ee3f96aa4cc0d570047b984f8a50690278c62cd" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor7.visitUnion()</source>
          <target state="translated">TypeKindVisitor7.visitUnion()</target>
        </trans-unit>
        <trans-unit id="8bc2fa014d3f6f5521e608186d6bd02d29585e13" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor8</source>
          <target state="translated">TypeKindVisitor8</target>
        </trans-unit>
        <trans-unit id="8786b5fc0cd948201b7e8e2de386108a15afd543" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor8.visitIntersection()</source>
          <target state="translated">TypeKindVisitor8.visitIntersection()</target>
        </trans-unit>
        <trans-unit id="722d9d65e4cd952d0238c827b82facc7fe84912f" translate="yes" xml:space="preserve">
          <source>TypeMirror</source>
          <target state="translated">TypeMirror</target>
        </trans-unit>
        <trans-unit id="5ff9038187ec4605eaabd92b366b0a4c3a8bf8d7" translate="yes" xml:space="preserve">
          <source>TypeMirror.accept()</source>
          <target state="translated">TypeMirror.accept()</target>
        </trans-unit>
        <trans-unit id="d891e78ad8b0895fa35fc937d6b8a3b0152935b3" translate="yes" xml:space="preserve">
          <source>TypeMirror.equals()</source>
          <target state="translated">TypeMirror.equals()</target>
        </trans-unit>
        <trans-unit id="db041740887a264fd31f915f9d084c08f10ec941" translate="yes" xml:space="preserve">
          <source>TypeMirror.getKind()</source>
          <target state="translated">TypeMirror.getKind()</target>
        </trans-unit>
        <trans-unit id="a576f524851b4db32a9820cb6c5bc3a181786af6" translate="yes" xml:space="preserve">
          <source>TypeMirror.hashCode()</source>
          <target state="translated">TypeMirror.hashCode()</target>
        </trans-unit>
        <trans-unit id="91fe331ed89f52e8a8b5c6d525fe66535a64a629" translate="yes" xml:space="preserve">
          <source>TypeMirror.toString()</source>
          <target state="translated">TypeMirror.toString()</target>
        </trans-unit>
        <trans-unit id="9e430f17eb96d796bf49c46584b98c497f8ae559" translate="yes" xml:space="preserve">
          <source>TypeName</source>
          <target state="translated">TypeName</target>
        </trans-unit>
        <trans-unit id="52a705d1c7165c704537e82d674a10a3224930fd" translate="yes" xml:space="preserve">
          <source>TypeNotPresentException</source>
          <target state="translated">TypeNotPresentException</target>
        </trans-unit>
        <trans-unit id="e04827ae30cd68204292b58743e61d1ed65b8a16" translate="yes" xml:space="preserve">
          <source>TypeNotPresentException.typeName()</source>
          <target state="translated">TypeNotPresentException.typeName()</target>
        </trans-unit>
        <trans-unit id="727b7f929ccf50c30982875f9e48598c393efef3" translate="yes" xml:space="preserve">
          <source>TypeParameterElement</source>
          <target state="translated">TypeParameterElement</target>
        </trans-unit>
        <trans-unit id="c960aaf11c27121321d2c1d95a2625ac340b8e25" translate="yes" xml:space="preserve">
          <source>TypeParameterElement.getBounds()</source>
          <target state="translated">TypeParameterElement.getBounds()</target>
        </trans-unit>
        <trans-unit id="1906530225ac0cad013869d6611bb815974f1d56" translate="yes" xml:space="preserve">
          <source>TypeParameterElement.getEnclosingElement()</source>
          <target state="translated">TypeParameterElement.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="6fc1b0383b2f21cff4d222c1c2afc5014cec15cf" translate="yes" xml:space="preserve">
          <source>TypeParameterElement.getGenericElement()</source>
          <target state="translated">TypeParameterElement.getGenericElement()</target>
        </trans-unit>
        <trans-unit id="1382a88c5310fa44afdc93ad2337d61cbbf8897c" translate="yes" xml:space="preserve">
          <source>TypeVariable</source>
          <target state="translated">TypeVariable</target>
        </trans-unit>
        <trans-unit id="0625b00c19877f1f2e82d82b52ab4cce23556b13" translate="yes" xml:space="preserve">
          <source>TypeVariable is the common superinterface for type variables of kinds.</source>
          <target state="translated">TypeVariable은 종류의 유형 변수에 대한 공통 슈퍼 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="bd47e3f07cb3692d1c38a4f5212749aafef3341d" translate="yes" xml:space="preserve">
          <source>TypeVariable is the common superinterface for type variables of kinds. A type variable is created the first time it is needed by a reflective method, as specified in this package. If a type variable t is referenced by a type (i.e, class, interface or annotation type) T, and T is declared by the nth enclosing class of T (see JLS 8.1.2), then the creation of t requires the resolution (see JVMS 5) of the ith enclosing class of T, for i = 0 to n, inclusive. Creating a type variable must not cause the creation of its bounds. Repeated creation of a type variable has no effect.</source>
          <target state="translated">TypeVariable은 종류의 유형 변수에 대한 공통 슈퍼 인터페이스입니다. 이 패키지에 지정된 것처럼 반사 방법에 필요한 유형 변수가 처음 만들어집니다. 타입 변수 t가 타입 (예를 들어, 클래스, 인터페이스 또는 주석 타입) T에 의해 참조되고, T가 n 번째 둘러싸는 클래스 T에 의해 선언되면 (JLS 8.1.2 참조), t를 생성하려면 해결이 필요합니다 ( i = 0에서 n까지의 i 번째 엔 클로징 클래스 T의 JVMS 5)를 참조하십시오. 유형 변수를 만들면 해당 범위가 만들어지지 않아야합니다. 유형 변수를 반복해서 생성해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="53f8e1483f0754d9e109f4b6d2212c7e0ded41e8" translate="yes" xml:space="preserve">
          <source>TypeVariable.asElement()</source>
          <target state="translated">TypeVariable.asElement()</target>
        </trans-unit>
        <trans-unit id="02efb8237ca64580805be12b7533aa15a1136243" translate="yes" xml:space="preserve">
          <source>TypeVariable.getAnnotatedBounds()</source>
          <target state="translated">TypeVariable.getAnnotatedBounds()</target>
        </trans-unit>
        <trans-unit id="b9199d614efc47488f5aeb4d1cba227bdf89f957" translate="yes" xml:space="preserve">
          <source>TypeVariable.getBounds()</source>
          <target state="translated">TypeVariable.getBounds()</target>
        </trans-unit>
        <trans-unit id="bd477ab31bb6bd5d32910a1e49aa5214ee95b4e5" translate="yes" xml:space="preserve">
          <source>TypeVariable.getGenericDeclaration()</source>
          <target state="translated">TypeVariable.getGenericDeclaration()</target>
        </trans-unit>
        <trans-unit id="2d79f2287b2cb839b31eda576b3e66bcfdd31865" translate="yes" xml:space="preserve">
          <source>TypeVariable.getLowerBound()</source>
          <target state="translated">TypeVariable.getLowerBound()</target>
        </trans-unit>
        <trans-unit id="69a7ffd4c332358d063d5f7c16a6723e156b1cb9" translate="yes" xml:space="preserve">
          <source>TypeVariable.getName()</source>
          <target state="translated">TypeVariable.getName()</target>
        </trans-unit>
        <trans-unit id="c4e65862937f0fd6bb6994952b6ff637fbe3192b" translate="yes" xml:space="preserve">
          <source>TypeVariable.getUpperBound()</source>
          <target state="translated">TypeVariable.getUpperBound()</target>
        </trans-unit>
        <trans-unit id="138dd7e4f4ddfae7cd580ff8a959c44c045ac7b0" translate="yes" xml:space="preserve">
          <source>TypeVisitor</source>
          <target state="translated">TypeVisitor</target>
        </trans-unit>
        <trans-unit id="85f77c8f09b72001be291ac6bb020d543cc7aaca" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visit()</source>
          <target state="translated">TypeVisitor.visit()</target>
        </trans-unit>
        <trans-unit id="950da07f4dee6a891ffdc3a2705e48a919a48af1" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitArray()</source>
          <target state="translated">TypeVisitor.visitArray()</target>
        </trans-unit>
        <trans-unit id="f63f6225b784b2e1d45baf5671f011975645eedc" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitDeclared()</source>
          <target state="translated">TypeVisitor.visitDeclared()</target>
        </trans-unit>
        <trans-unit id="8a8537178dfddc00d50ddb0a6252813875dd7155" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitError()</source>
          <target state="translated">TypeVisitor.visitError()</target>
        </trans-unit>
        <trans-unit id="070e9ab5efeeabd2e8d10c4cdc8ea67203380085" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitExecutable()</source>
          <target state="translated">TypeVisitor.visitExecutable()</target>
        </trans-unit>
        <trans-unit id="ee46cfd1d5521db0f52a433b792445f0409700f1" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitIntersection()</source>
          <target state="translated">TypeVisitor.visitIntersection()</target>
        </trans-unit>
        <trans-unit id="b79b61306db2c372ca0510717ee2e084d2f6ab32" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitNoType()</source>
          <target state="translated">TypeVisitor.visitNoType()</target>
        </trans-unit>
        <trans-unit id="c81264a6e7c64a90524036038ec07a7a439645c4" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitNull()</source>
          <target state="translated">TypeVisitor.visitNull()</target>
        </trans-unit>
        <trans-unit id="a15341fd876101cd6711165b1632a0811cee3a20" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitPrimitive()</source>
          <target state="translated">TypeVisitor.visitPrimitive()</target>
        </trans-unit>
        <trans-unit id="1dc019ede96c158711b7f14a6ccbcb92cd4cb275" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitTypeVariable()</source>
          <target state="translated">TypeVisitor.visitTypeVariable()</target>
        </trans-unit>
        <trans-unit id="99a4d3d3c10f041a4c35d7a26f873cfeac49e5ae" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitUnion()</source>
          <target state="translated">TypeVisitor.visitUnion()</target>
        </trans-unit>
        <trans-unit id="e62d0fa3a69f58b973d8f3152d55fcb4d81ba713" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitUnknown()</source>
          <target state="translated">TypeVisitor.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="fd6b2cd0c518cc165b4f8f66612f31456baa0149" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitWildcard()</source>
          <target state="translated">TypeVisitor.visitWildcard()</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="000dafb254d0e804a33aa2922c4e5a5cb70aef05" translate="yes" xml:space="preserve">
          <source>Types of &lt;a href=&quot;memorypoolmxbean&quot;&gt;&lt;code&gt;memory pools&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;memorypoolmxbean&quot;&gt; &lt;code&gt;memory pools&lt;/code&gt; &lt;/a&gt; 종류 .</target>
        </trans-unit>
        <trans-unit id="418a4179b6ddeec6a531a348f7b4974385430d62" translate="yes" xml:space="preserve">
          <source>Types should be compared using the utility methods in &lt;a href=&quot;../util/types&quot;&gt;&lt;code&gt;Types&lt;/code&gt;&lt;/a&gt;. There is no guarantee that any particular type will always be represented by the same object.</source>
          <target state="translated">유형의 유틸리티 방법을 사용하여 비교해야합니다 &lt;a href=&quot;../util/types&quot;&gt; &lt;code&gt;Types&lt;/code&gt; &lt;/a&gt; . 특정 유형이 항상 동일한 객체로 표현된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="8220da2395cbfc761a19f5ca198c14679339c682" translate="yes" xml:space="preserve">
          <source>Types.asElement()</source>
          <target state="translated">Types.asElement()</target>
        </trans-unit>
        <trans-unit id="db52ef7f7c75252d3808023cc21bb5abf4bd3ee1" translate="yes" xml:space="preserve">
          <source>Types.asMemberOf()</source>
          <target state="translated">Types.asMemberOf()</target>
        </trans-unit>
        <trans-unit id="17e90de4ae399d6e6bb2f6d195302e439560b448" translate="yes" xml:space="preserve">
          <source>Types.boxedClass()</source>
          <target state="translated">Types.boxedClass()</target>
        </trans-unit>
        <trans-unit id="a98adefefd3f0a12bd2b8a5a2b42d54383902a60" translate="yes" xml:space="preserve">
          <source>Types.capture()</source>
          <target state="translated">Types.capture()</target>
        </trans-unit>
        <trans-unit id="8a7e05a41446973611bd347a8f958db745c41342" translate="yes" xml:space="preserve">
          <source>Types.contains()</source>
          <target state="translated">Types.contains()</target>
        </trans-unit>
        <trans-unit id="d6165ccf668177971997e9ec543238a1834a737a" translate="yes" xml:space="preserve">
          <source>Types.directSupertypes()</source>
          <target state="translated">Types.directSupertypes()</target>
        </trans-unit>
        <trans-unit id="57eaddf0baaecc7cfda1ccacce29deacddabd942" translate="yes" xml:space="preserve">
          <source>Types.erasure()</source>
          <target state="translated">Types.erasure()</target>
        </trans-unit>
        <trans-unit id="18707c83c605fac0d25fd1e0c6b603f48c79bf1a" translate="yes" xml:space="preserve">
          <source>Types.getArrayType()</source>
          <target state="translated">Types.getArrayType()</target>
        </trans-unit>
        <trans-unit id="d150e05f8c46d06a1ed28723bda2a56ff359a1d1" translate="yes" xml:space="preserve">
          <source>Types.getDeclaredType()</source>
          <target state="translated">Types.getDeclaredType()</target>
        </trans-unit>
        <trans-unit id="1a6b0cb731c5c2681831057524e2944c3daf1d4a" translate="yes" xml:space="preserve">
          <source>Types.getNoType()</source>
          <target state="translated">Types.getNoType()</target>
        </trans-unit>
        <trans-unit id="7fffda90e7c9be2459e97b02cf86bebd69e620d2" translate="yes" xml:space="preserve">
          <source>Types.getNullType()</source>
          <target state="translated">Types.getNullType()</target>
        </trans-unit>
        <trans-unit id="165368d1d4affa266ad19e5d6ec1fb0a3b87b788" translate="yes" xml:space="preserve">
          <source>Types.getPrimitiveType()</source>
          <target state="translated">Types.getPrimitiveType()</target>
        </trans-unit>
        <trans-unit id="db0d4ada18bb9ba24f46124427704fd1849ffb3f" translate="yes" xml:space="preserve">
          <source>Types.getWildcardType()</source>
          <target state="translated">Types.getWildcardType()</target>
        </trans-unit>
        <trans-unit id="69b739efe9dae818854f6e591c6b3802740397c0" translate="yes" xml:space="preserve">
          <source>Types.isAssignable()</source>
          <target state="translated">Types.isAssignable()</target>
        </trans-unit>
        <trans-unit id="9b4006a927e8e1a8767f9c70bd27b86ce8ca03a8" translate="yes" xml:space="preserve">
          <source>Types.isSameType()</source>
          <target state="translated">Types.isSameType()</target>
        </trans-unit>
        <trans-unit id="75fe72db59db66cd0b499e600304400aac8ed891" translate="yes" xml:space="preserve">
          <source>Types.isSubsignature()</source>
          <target state="translated">Types.isSubsignature()</target>
        </trans-unit>
        <trans-unit id="321dcd6539aaa7bcea5e1210c364a6e8185a5a0c" translate="yes" xml:space="preserve">
          <source>Types.isSubtype()</source>
          <target state="translated">Types.isSubtype()</target>
        </trans-unit>
        <trans-unit id="3087fe2df77509ff542e831fb9ce0a8c0dd03340" translate="yes" xml:space="preserve">
          <source>Types.unboxedType()</source>
          <target state="translated">Types.unboxedType()</target>
        </trans-unit>
        <trans-unit id="f9c14fcf11cec686c23544b61ae8e945b8987811" translate="yes" xml:space="preserve">
          <source>Typesafe enumeration for byte orders</source>
          <target state="translated">바이트 순서의 형태 보증 된 열거</target>
        </trans-unit>
        <trans-unit id="318ac366c231a84014a3fcd2405ee25e46686356" translate="yes" xml:space="preserve">
          <source>Typical IPv6 values would be 128 (::1/128) or 10 (fe80::203:baff:fe27:1243/10)</source>
          <target state="translated">일반적인 IPv6 값은 128 (:: 1/128) 또는 10 (fe80 :: 203 : baff : fe27 : 1243/10)입니다.</target>
        </trans-unit>
        <trans-unit id="1b366285be7b47faacd4c4f7eadf81503801a02d" translate="yes" xml:space="preserve">
          <source>Typical callers of SecureRandom invoke the following methods to retrieve random bytes:</source>
          <target state="translated">SecureRandom의 일반적인 호출자는 다음 방법을 호출하여 임의 바이트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="745acda069b7dd6df062268fa4a9fbf083c6b5c1" translate="yes" xml:space="preserve">
          <source>Typical causes include not being able to map a string class name to a Class object, not being able to resolve a string method name, or specifying a method name that has the wrong type signature for its intended use.</source>
          <target state="translated">일반적인 원인으로는 문자열 클래스 이름을 클래스 객체에 매핑 할 수 없거나 문자열 메서드 이름을 확인할 수 없거나 의도 한 용도에 대해 잘못된 형식 서명이있는 메서드 이름을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d09f9193879e5b47f46ee5ca152f3019da4bf67" translate="yes" xml:space="preserve">
          <source>Typical clients of this class first set up the syntax tables and then sit in a loop calling nextToken to parse successive tokens until TT_EOF is returned.</source>
          <target state="translated">이 클래스의 일반적인 클라이언트는 먼저 구문 테이블을 설정 한 다음 nextToken을 호출하는 루프에 앉아 TT_EOF가 리턴 될 때까지 연속 토큰을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="2ecae194561833029542c22333813db0b374a9fc" translate="yes" xml:space="preserve">
          <source>Typical return values might include &lt;code&gt;InputStream.class&lt;/code&gt; or &lt;code&gt;URL.class&lt;/code&gt;, but any class may be used.</source>
          <target state="translated">일반적인 반환 값에는 &lt;code&gt;InputStream.class&lt;/code&gt; 또는 &lt;code&gt;URL.class&lt;/code&gt; 가 포함될 수 있지만 모든 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3617e7faa01f94a7aa656c678fe2abcdc4c6f0d4" translate="yes" xml:space="preserve">
          <source>Typical return values might include &lt;code&gt;OutputStream.class&lt;/code&gt; or &lt;code&gt;File.class&lt;/code&gt;, but any class may be used.</source>
          <target state="translated">일반적인 반환 값에는 &lt;code&gt;OutputStream.class&lt;/code&gt; 또는 &lt;code&gt;File.class&lt;/code&gt; 가 포함될 수 있지만 모든 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="692c6ce74ab5a39f646b5b2b823bae5efe92dcea" translate="yes" xml:space="preserve">
          <source>Typical ways to request a KeyStore object include relying on the default type and providing a specific keystore type.</source>
          <target state="translated">KeyStore 객체를 요청하는 일반적인 방법은 기본 유형에 의존하고 특정 키 저장소 유형을 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="721b8c16db5dc0f9c361e43e504f2b76855d14fe" translate="yes" xml:space="preserve">
          <source>Typically INFO messages will be written to the console or its equivalent. So the INFO level should only be used for reasonably significant messages that will make sense to end users and system administrators. This level is initialized to &lt;code&gt;800&lt;/code&gt;.</source>
          <target state="translated">일반적으로 INFO 메시지는 콘솔 또는 이와 동등한 것으로 작성됩니다. 따라서 INFO 수준은 최종 사용자와 시스템 관리자에게 의미가있는 합리적으로 중요한 메시지에만 사용해야합니다. 이 수준은 &lt;code&gt;800&lt;/code&gt; 으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="2734d91430975e9303efb7386525c21798b51d92" translate="yes" xml:space="preserve">
          <source>Typically each logging Handler will have a Formatter associated with it. The Formatter takes a LogRecord and converts it to a string.</source>
          <target state="translated">일반적으로 각 로깅 핸들러에는 연관된 포매터가 있습니다. 포맷터는 LogRecord를 가져 와서 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="dcfb0d2563482618c96dbe72cc919b03a2b95aee" translate="yes" xml:space="preserve">
          <source>Typically the packer engine is used by application developers to deploy or host JAR files on a website. The unpacker engine is used by deployment applications to transform the byte-stream back to JAR format.</source>
          <target state="translated">일반적으로 패커 엔진은 응용 프로그램 개발자가 웹 사이트에 JAR 파일을 배포하거나 호스팅하는 데 사용됩니다. 언 패커 엔진은 배포 응용 프로그램에서 바이트 스트림을 다시 JAR 형식으로 변환하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f20b6994432dd69c94ae0272a5ae9e15094084bb" translate="yes" xml:space="preserve">
          <source>Typically this method is called from the &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;stop&lt;/code&gt;, to consult loaders that appear before it in the &lt;code&gt;ClassLoaderRepository&lt;/code&gt;. By stopping the search as soon as &lt;code&gt;stop&lt;/code&gt; is reached, a potential deadlock with concurrent class loading is avoided.</source>
          <target state="translated">일반적으로이 메소드는 &lt;code&gt;stop&lt;/code&gt; 의 &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; 메소드 에서 호출되어 &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 에서 이전에 나타나는 로더를 참조합니다 . &lt;code&gt;stop&lt;/code&gt; 에 도달 하자마자 검색을 중지하면 동시 클래스로드로 잠재적 교착 상태를 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a0ae6e1c0caa53230a3bceb9425d1aab42b1e7e" translate="yes" xml:space="preserve">
          <source>Typically this stream corresponds to display output or another output destination specified by the host environment or user. By convention, this output stream is used to display error messages or other information that should come to the immediate attention of a user even if the principal output stream, the value of the variable &lt;code&gt;out&lt;/code&gt;, has been redirected to a file or other destination that is typically not continuously monitored.</source>
          <target state="translated">일반적으로이 스트림은 디스플레이 출력 또는 호스트 환경이나 사용자가 지정한 다른 출력 대상에 해당합니다. 일반적으로이 출력 스트림은 변수 &lt;code&gt;out&lt;/code&gt; 값인 기본 출력 스트림 이 파일 또는 다른 대상으로 경로 재 지정된 경우에도 사용자에게 즉시주의를 기울여야하는 오류 메시지 또는 기타 정보를 표시하는 데 사용됩니다. 일반적으로 지속적으로 모니터링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="003f8d1f6f4dc10d08d4844a18a991aed53f0781" translate="yes" xml:space="preserve">
          <source>Typically you shouldn't use &lt;code&gt;DateFormatSymbols&lt;/code&gt; directly. Rather, you are encouraged to create a date-time formatter with the &lt;code&gt;DateFormat&lt;/code&gt; class's factory methods: &lt;code&gt;getTimeInstance&lt;/code&gt;, &lt;code&gt;getDateInstance&lt;/code&gt;, or &lt;code&gt;getDateTimeInstance&lt;/code&gt;. These methods automatically create a &lt;code&gt;DateFormatSymbols&lt;/code&gt; for the formatter so that you don't have to. After the formatter is created, you may modify its format pattern using the &lt;code&gt;setPattern&lt;/code&gt; method. For more information about creating formatters using &lt;code&gt;DateFormat&lt;/code&gt;'s factory methods, see &lt;a href=&quot;dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일반적으로 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 를 직접 사용해서는 안됩니다 . 대신 &lt;code&gt;DateFormat&lt;/code&gt; 클래스의 팩토리 메소드 ( &lt;code&gt;getTimeInstance&lt;/code&gt; , &lt;code&gt;getDateInstance&lt;/code&gt; 또는 &lt;code&gt;getDateTimeInstance&lt;/code&gt; ) 를 사용하여 날짜-시간 포맷터를 작성하는 것이 좋습니다 . 이러한 메소드 는 포맷터에 대한 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 를 자동으로 작성 하므로 필요하지 않습니다. 포맷터가 작성된 후 &lt;code&gt;setPattern&lt;/code&gt; 메소드를 사용하여 포맷 패턴을 수정할 수 있습니다 . 사용 포매터 만드는 방법에 대한 자세한 내용은 &lt;code&gt;DateFormat&lt;/code&gt; 의 의 팩토리 메소드를 참조 &lt;a href=&quot;dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="121e94298a66156863123ae4de4ded2129f1599c" translate="yes" xml:space="preserve">
          <source>Typically, &lt;code&gt;ctl&lt;/code&gt; is a &quot;basic&quot; control containing BER encoded data. The factory is used to create a specialized control implementation, usually by decoding the BER encoded data, that provides methods to access that data in a type-safe and friendly manner.</source>
          <target state="translated">일반적으로 &lt;code&gt;ctl&lt;/code&gt; 은 BER 인코딩 데이터를 포함하는 &quot;기본&quot;컨트롤입니다. 팩토리는 일반적으로 BER 인코딩 된 데이터를 디코딩하여 특수한 제어 구현을 작성하는 데 사용됩니다.이 데이터는 형식 안전하고 친숙한 방식으로 해당 데이터에 액세스하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0f8148a3227c5af2f0ea63a8ae87fdb6a21d07f4" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;CertStoreParameters&lt;/code&gt; object is passed as a parameter to one of the &lt;a href=&quot;certstore#getInstance-java.lang.String-java.security.cert.CertStoreParameters-&quot;&gt;&lt;code&gt;CertStore.getInstance&lt;/code&gt;&lt;/a&gt; methods. The &lt;code&gt;getInstance&lt;/code&gt; method returns a &lt;code&gt;CertStore&lt;/code&gt; that is used for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s. The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified parameters. The type of parameters needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s.</source>
          <target state="translated">일반적으로 &lt;code&gt;CertStoreParameters&lt;/code&gt; 객체는 &lt;a href=&quot;certstore#getInstance-java.lang.String-java.security.cert.CertStoreParameters-&quot;&gt; &lt;code&gt;CertStore.getInstance&lt;/code&gt; &lt;/a&gt; 메소드 중 하나에 매개 변수로 전달됩니다 . &lt;code&gt;getInstance&lt;/code&gt; 메소드는 반환 &lt;code&gt;CertStore&lt;/code&gt; 를 검색하는 데 사용되는 &lt;code&gt;Certificate&lt;/code&gt; 의와 &lt;code&gt;CRL&lt;/code&gt; 들. 리턴 된 &lt;code&gt;CertStore&lt;/code&gt; 는 지정된 매개 변수로 초기화됩니다. 필요한 매개 변수 유형은 &lt;code&gt;CertStore&lt;/code&gt; 유형에 따라 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0e263966e00e1bea9563954e017ba4e7d3bc9611" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;CompletionService&lt;/code&gt; relies on a separate &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; to actually execute the tasks, in which case the &lt;code&gt;CompletionService&lt;/code&gt; only manages an internal completion queue. The &lt;a href=&quot;executorcompletionservice&quot;&gt;&lt;code&gt;ExecutorCompletionService&lt;/code&gt;&lt;/a&gt; class provides an implementation of this approach.</source>
          <target state="translated">일반적으로 &lt;code&gt;CompletionService&lt;/code&gt; 는 별도의 &lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt; 를 사용하여 실제로 작업을 실행합니다.이 경우 &lt;code&gt;CompletionService&lt;/code&gt; 는 내부 완료 대기열 만 관리합니다. &lt;a href=&quot;executorcompletionservice&quot;&gt; &lt;code&gt;ExecutorCompletionService&lt;/code&gt; 의&lt;/a&gt; 클래스는이 방법의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f0e810068a3e83f4fbccb129817a1c93bcdae442" translate="yes" xml:space="preserve">
          <source>Typically, a connector server has an address, represented by the class &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt;. An address for the RMI Connector can look like this:</source>
          <target state="translated">일반적으로 커넥터 서버에는 &lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt; 클래스로 표시되는 주소가 있습니다. RMI 커넥터의 주소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3fa2f828613a1214e8113b1763d0e324471c0613" translate="yes" xml:space="preserve">
          <source>Typically, a connector server is associated with an MBean server either by registering it in that MBean server, or by supplying the MBean server as a parameter when creating the connector server.</source>
          <target state="translated">일반적으로 커넥터 서버는 해당 MBean 서버에 등록하거나 커넥터 서버를 작성할 때 MBean 서버를 매개 변수로 제공하여 MBean 서버와 연관됩니다.</target>
        </trans-unit>
        <trans-unit id="dc97893cfa85101d7bf2cbcc6717bc6e85e4bf1a" translate="yes" xml:space="preserve">
          <source>Typically, a plug-in will implement this method using code such as &lt;code&gt;return new MyImageReader(this)&lt;/code&gt;.</source>
          <target state="translated">일반적으로 플러그인은 &lt;code&gt;return new MyImageReader(this)&lt;/code&gt; 와 같은 코드를 사용하여이 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="0fc9f7a92b1bed3cc8b20f055c7b0992147a8329" translate="yes" xml:space="preserve">
          <source>Typically, a plug-in will implement this method using code such as &lt;code&gt;return new MyImageWriter(this)&lt;/code&gt;.</source>
          <target state="translated">일반적으로 플러그인은 &lt;code&gt;return new MyImageWriter(this)&lt;/code&gt; 와 같은 코드를 사용하여이 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="b0224dfcf9383ee6b39590169eb90efd6f5f259c" translate="yes" xml:space="preserve">
          <source>Typically, if exactly one annotation of type</source>
          <target state="translated">일반적으로 정확히 하나의 주석 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="11a0281f2b8a35df21a0c083491659003cc47cf5" translate="yes" xml:space="preserve">
          <source>Typically, not all command-line options to the 'java' command are passed to the Java virtual machine. Thus, the returned input arguments may not include all command-line options.</source>
          <target state="translated">일반적으로 'java'명령에 대한 모든 명령 행 옵션이 Java 가상 머신으로 전달되는 것은 아닙니다. 따라서 반환 된 입력 인수에 모든 명령 줄 옵션이 포함되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c4b0fbcfb227505f9ff9bec714e31409af99584" translate="yes" xml:space="preserve">
          <source>Typically, only one of the notify high and notify low flags is set. The other threshold is used to provide a &lt;em&gt;hysteresis&lt;/em&gt; mechanism to avoid the repeated triggering of notifications when an attribute makes small oscillations around the threshold value.</source>
          <target state="translated">일반적으로 notify high 및 notify low 플래그 중 하나만 설정됩니다. 다른 임계 값은 속성이 임계 값 주위에서 작은 진동을 만들 때 알림의 반복 트리거를 피하기 위해 &lt;em&gt;히스테리시스&lt;/em&gt; 메커니즘 을 제공하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5a4e8a27cd1d7ea3f191f13a075b8a146969a4b0" translate="yes" xml:space="preserve">
          <source>Typically, the width and height should be chosen such that the ratio of width to height closely approximates the aspect ratio of the image, as returned from &lt;code&gt;ImageReader.getAspectRatio&lt;/code&gt;.</source>
          <target state="translated">일반적으로 너비와 높이는 &lt;code&gt;ImageReader.getAspectRatio&lt;/code&gt; 에서 반환 될 때 너비와 높이의 비율이 이미지의 가로 세로 비율에 가깝도록 선택해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8d19915a230fc8aed6ca2d34d02a4b48746d9d29" translate="yes" xml:space="preserve">
          <source>Typically, you get a &lt;code&gt;TimeZone&lt;/code&gt; using &lt;code&gt;getDefault&lt;/code&gt; which creates a &lt;code&gt;TimeZone&lt;/code&gt; based on the time zone where the program is running. For example, for a program running in Japan, &lt;code&gt;getDefault&lt;/code&gt; creates a &lt;code&gt;TimeZone&lt;/code&gt; object based on Japanese Standard Time.</source>
          <target state="translated">일반적으로 &lt;code&gt;getDefault&lt;/code&gt; 를 사용하여 &lt;code&gt;TimeZone&lt;/code&gt; 을 얻습니다. getDefault 는 프로그램이 실행 되는 &lt;code&gt;TimeZone&lt;/code&gt; 기반으로 TimeZone 을 만듭니다 . 예를 들어, 일본에서 실행중인 프로그램의 경우 &lt;code&gt;getDefault&lt;/code&gt; 는 일본 표준시를 기반으로 &lt;code&gt;TimeZone&lt;/code&gt; 객체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="4040182b7e4e52dc6d9e6e3a2664a62839330104" translate="yes" xml:space="preserve">
          <source>UGARITIC</source>
          <target state="translated">UGARITIC</target>
        </trans-unit>
        <trans-unit id="7770d04c7bfb791e7c95959f12d6797bee87a8d8" translate="yes" xml:space="preserve">
          <source>UK</source>
          <target state="translated">UK</target>
        </trans-unit>
        <trans-unit id="3ffbb1c97e0137a2f7c2ef141510c5f14921920c" translate="yes" xml:space="preserve">
          <source>ULAW</source>
          <target state="translated">ULAW</target>
        </trans-unit>
        <trans-unit id="b9a5671fcf84e88d78fc3704de6f9b452eff55a8" translate="yes" xml:space="preserve">
          <source>UNASSIGNED</source>
          <target state="translated">UNASSIGNED</target>
        </trans-unit>
        <trans-unit id="aab23daca03338cce018882955cad88d456e9957" translate="yes" xml:space="preserve">
          <source>UNCOLLATED</source>
          <target state="translated">UNCOLLATED</target>
        </trans-unit>
        <trans-unit id="4fbffc2cb2dae5d6950872ab753dd0da1cbc2fef" translate="yes" xml:space="preserve">
          <source>UNDECIMBER</source>
          <target state="translated">UNDECIMBER</target>
        </trans-unit>
        <trans-unit id="d5ec95e94734946a01160d1ca82577ce0d150bd5" translate="yes" xml:space="preserve">
          <source>UNDERFLOW</source>
          <target state="translated">UNDERFLOW</target>
        </trans-unit>
        <trans-unit id="e1bc6aef81bd7de7876d9ee5d08490a7195271de" translate="yes" xml:space="preserve">
          <source>UNDETERMINED_REVOCATION_STATUS</source>
          <target state="translated">UNDETERMINED_REVOCATION_STATUS</target>
        </trans-unit>
        <trans-unit id="845241598751dd855255e9c79722f987ee0cb09a" translate="yes" xml:space="preserve">
          <source>UNICODE_CASE</source>
          <target state="translated">UNICODE_CASE</target>
        </trans-unit>
        <trans-unit id="7efa50e0befaf7590307c2452853eb7467c715c5" translate="yes" xml:space="preserve">
          <source>UNICODE_CHARACTER_CLASS</source>
          <target state="translated">UNICODE_CHARACTER_CLASS</target>
        </trans-unit>
        <trans-unit id="54444a5b23d945e8091e4cbc28ec431f48f7a22a" translate="yes" xml:space="preserve">
          <source>UNICODE_LOCALE_EXTENSION</source>
          <target state="translated">UNICODE_LOCALE_EXTENSION</target>
        </trans-unit>
        <trans-unit id="848edf998b9f6aa99226218aaa4ef04483ffe536" translate="yes" xml:space="preserve">
          <source>UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS</source>
          <target state="translated">UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS</target>
        </trans-unit>
        <trans-unit id="c6e078d5754338d8eb7fe777e2879a34b1d88212" translate="yes" xml:space="preserve">
          <source>UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED</source>
          <target state="translated">UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED</target>
        </trans-unit>
        <trans-unit id="cbeaa9181b9e3e91bc0a15ee75bdd475cfdc366f" translate="yes" xml:space="preserve">
          <source>UNINITIALIZED</source>
          <target state="translated">UNINITIALIZED</target>
        </trans-unit>
        <trans-unit id="363cb5cb9b015bf8fe75ee8f6f3ad675ca5618cc" translate="yes" xml:space="preserve">
          <source>UNION</source>
          <target state="translated">UNION</target>
        </trans-unit>
        <trans-unit id="5503f662c6cca0c4abff5cad919fa155f1413144" translate="yes" xml:space="preserve">
          <source>UNIX compression technology.</source>
          <target state="translated">유닉스 압축 기술.</target>
        </trans-unit>
        <trans-unit id="a7864204909e345af29e9c794841c9fe894997a9" translate="yes" xml:space="preserve">
          <source>UNIX_LINES</source>
          <target state="translated">UNIX_LINES</target>
        </trans-unit>
        <trans-unit id="25ba44ec3b391ba4ce5fbbd2979635e254775e7d" translate="yes" xml:space="preserve">
          <source>UNKNOWN</source>
          <target state="translated">UNKNOWN</target>
        </trans-unit>
        <trans-unit id="9270118f1b0e10a49f78c8b01469578d1b2045e8" translate="yes" xml:space="preserve">
          <source>UNKNOWN_ATTRIBUTE</source>
          <target state="translated">UNKNOWN_ATTRIBUTE</target>
        </trans-unit>
        <trans-unit id="2fbda97fdd3a3e29fc4d679b3be34c3daf399f5b" translate="yes" xml:space="preserve">
          <source>UNKNOWN_LENGTH</source>
          <target state="translated">UNKNOWN_LENGTH</target>
        </trans-unit>
        <trans-unit id="d392c5b9710bde643f506a2edc93541e20afdf4e" translate="yes" xml:space="preserve">
          <source>UNLIMITED</source>
          <target state="translated">UNLIMITED</target>
        </trans-unit>
        <trans-unit id="55fdf1077fb0652e9772d821d8d3800f6836f8dd" translate="yes" xml:space="preserve">
          <source>UNNECESSARY</source>
          <target state="translated">UNNECESSARY</target>
        </trans-unit>
        <trans-unit id="9e815fd4cd955a9675b65ffb33b438c419602c2b" translate="yes" xml:space="preserve">
          <source>UNORDERED</source>
          <target state="translated">UNORDERED</target>
        </trans-unit>
        <trans-unit id="7a38cb8f01f9b8de22a82e5357fc4886bd97b7a0" translate="yes" xml:space="preserve">
          <source>UNRECOGNIZED_CRIT_EXT</source>
          <target state="translated">UNRECOGNIZED_CRIT_EXT</target>
        </trans-unit>
        <trans-unit id="6271989c485413083af478f7a92b7c582a821bd9" translate="yes" xml:space="preserve">
          <source>UNREGISTRATION_NOTIFICATION</source>
          <target state="translated">UNREGISTRATION_NOTIFICATION</target>
        </trans-unit>
        <trans-unit id="c8a99cf63c07cc9f22e5bfb248402a73f0ec3c48" translate="yes" xml:space="preserve">
          <source>UNSPECIFIED</source>
          <target state="translated">UNSPECIFIED</target>
        </trans-unit>
        <trans-unit id="9456b8eabbee13448994ef0e6bfa071be788f7b1" translate="yes" xml:space="preserve">
          <source>UNSPECIFIED_OPTION</source>
          <target state="translated">UNSPECIFIED_OPTION</target>
        </trans-unit>
        <trans-unit id="5b269ab5ea8eb4f44af01d7231f3f416748515b3" translate="yes" xml:space="preserve">
          <source>UNSUPPORTED_COMPRESSION</source>
          <target state="translated">UNSUPPORTED_COMPRESSION</target>
        </trans-unit>
        <trans-unit id="eaf14ecae6e7bf580f710e4774eceec9673befae" translate="yes" xml:space="preserve">
          <source>UNSUPPORTED_DOCUMENT_FORMAT</source>
          <target state="translated">UNSUPPORTED_DOCUMENT_FORMAT</target>
        </trans-unit>
        <trans-unit id="907b4640785fc410291ea453b59392ebb0def255" translate="yes" xml:space="preserve">
          <source>UNSUPPORTED_EMPTY_COLLECTION</source>
          <target state="translated">UNSUPPORTED_EMPTY_COLLECTION</target>
        </trans-unit>
        <trans-unit id="faafcfa63e128929409bf310b7ea5a415f2331ce" translate="yes" xml:space="preserve">
          <source>UNUSED</source>
          <target state="translated">UNUSED</target>
        </trans-unit>
        <trans-unit id="9a96fee80cfa06147b1da07124be521deb5fbebb" translate="yes" xml:space="preserve">
          <source>UNWRAP_MODE</source>
          <target state="translated">UNWRAP_MODE</target>
        </trans-unit>
        <trans-unit id="11a66854c0ed7fd7fbaf5a561663c5dc867c9f19" translate="yes" xml:space="preserve">
          <source>UP</source>
          <target state="translated">UP</target>
        </trans-unit>
        <trans-unit id="7ad1e7b093e2665ff1bdef8789dda91b1e51fde7" translate="yes" xml:space="preserve">
          <source>UPPERCASE</source>
          <target state="translated">UPPERCASE</target>
        </trans-unit>
        <trans-unit id="260ff90ffb9b1a7afc1635ad4eeec327ff83ec80" translate="yes" xml:space="preserve">
          <source>UPPERCASE_LETTER</source>
          <target state="translated">UPPERCASE_LETTER</target>
        </trans-unit>
        <trans-unit id="cb371c93c5aa0e62198efd303ae2c17474416d1a" translate="yes" xml:space="preserve">
          <source>URI</source>
          <target state="translated">URI</target>
        </trans-unit>
        <trans-unit id="9ae45a2c531195553ab62b4840481ed9f36509ab" translate="yes" xml:space="preserve">
          <source>URI is an absolute URI whose scheme-specific part does not begin with a slash character (&lt;code&gt;'/'&lt;/code&gt;). Opaque URIs are not subject to further parsing. Some examples of opaque URIs are:</source>
          <target state="translated">URI는 스키마 특정 부분이 슬래시 문자 ( &lt;code&gt;'/'&lt;/code&gt; )로 시작하지 않는 절대 URI입니다 . 불투명 URI는 추가 구문 분석을받지 않습니다. 불투명 URI의 몇 가지 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="03e263aac84b1cac4fa8545639aac636a68c97a9" translate="yes" xml:space="preserve">
          <source>URI is either an absolute URI whose scheme-specific part begins with a slash character, or a relative URI, that is, a URI that does not specify a scheme. Some examples of hierarchical URIs are:</source>
          <target state="translated">URI는 스키마 특정 부분이 슬래시 문자로 시작하는 절대 URI이거나 상대 URI, 즉 스키마를 지정하지 않는 URI입니다. 계층 적 URI의 몇 가지 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="643b9564e05c0b57efb1d92c5f6af61a244691a5" translate="yes" xml:space="preserve">
          <source>URI specifies a scheme; a URI that is not absolute is said to be</source>
          <target state="translated">URI는 체계를 지정합니다. 절대적이지 않은 URI는</target>
        </trans-unit>
        <trans-unit id="8b6027e142fdf9e64e3c606829a279f2ab9d188a" translate="yes" xml:space="preserve">
          <source>URI syntax and components</source>
          <target state="translated">URI 구문 및 구성 요소</target>
        </trans-unit>
        <trans-unit id="ac568886b4104d27cdfc778405e9919f29c0ffcc" translate="yes" xml:space="preserve">
          <source>URI. The resulting URI is constructed from components of both URIs in the manner specified by RFC 2396, taking components from the base URI for those not specified in the original. For hierarchical URIs, the path of the original is resolved against the path of the base and then normalized. The result, for example, of resolving</source>
          <target state="translated">URI. 결과 URI는 RFC 2396에 지정된 방식으로 두 URI의 구성 요소로 구성되며, 원본에 지정되지 않은 구성 요소의 기본 URI에서 구성 요소를 가져옵니다. 계층 적 URI의 경우 원본의 경로는 기본 경로에 대해 확인 된 다음 정규화됩니다. 예를 들어, 해결 결과</target>
        </trans-unit>
        <trans-unit id="b80b28a5ac24955413bf7fdb68e0c4ffee718d57" translate="yes" xml:space="preserve">
          <source>URI.compareTo()</source>
          <target state="translated">URI.compareTo()</target>
        </trans-unit>
        <trans-unit id="83bbb2120930d9f9c273eca0ddb2108a0d187cca" translate="yes" xml:space="preserve">
          <source>URI.create()</source>
          <target state="translated">URI.create()</target>
        </trans-unit>
        <trans-unit id="ed7a3ef3ad368a56bb19e07229fd62faa824db66" translate="yes" xml:space="preserve">
          <source>URI.equals()</source>
          <target state="translated">URI.equals()</target>
        </trans-unit>
        <trans-unit id="0d7c69b6a93cef033aa5c06e7fce491b0b2870ea" translate="yes" xml:space="preserve">
          <source>URI.getAuthority()</source>
          <target state="translated">URI.getAuthority()</target>
        </trans-unit>
        <trans-unit id="982ff29e64f53ecd27aaa4fe8bbd2ec1c80b5773" translate="yes" xml:space="preserve">
          <source>URI.getFragment()</source>
          <target state="translated">URI.getFragment()</target>
        </trans-unit>
        <trans-unit id="94a19be36e32b76bcd776969174513d602bba81f" translate="yes" xml:space="preserve">
          <source>URI.getHost()</source>
          <target state="translated">URI.getHost()</target>
        </trans-unit>
        <trans-unit id="c0f03b8897703602ba3fb46b9aae4408057f2770" translate="yes" xml:space="preserve">
          <source>URI.getPath()</source>
          <target state="translated">URI.getPath()</target>
        </trans-unit>
        <trans-unit id="447cc520be97885d630f421deaf16492703607cf" translate="yes" xml:space="preserve">
          <source>URI.getPort()</source>
          <target state="translated">URI.getPort()</target>
        </trans-unit>
        <trans-unit id="4a10c771829fad1f00c1addb624c0a5c658057c1" translate="yes" xml:space="preserve">
          <source>URI.getQuery()</source>
          <target state="translated">URI.getQuery()</target>
        </trans-unit>
        <trans-unit id="48f52ef8e63b07e14ed3a59f28dd031e12a64638" translate="yes" xml:space="preserve">
          <source>URI.getRawAuthority()</source>
          <target state="translated">URI.getRawAuthority()</target>
        </trans-unit>
        <trans-unit id="1ea7a818c69d546dbe7387dafafa3cb4b5d60f11" translate="yes" xml:space="preserve">
          <source>URI.getRawFragment()</source>
          <target state="translated">URI.getRawFragment()</target>
        </trans-unit>
        <trans-unit id="d45a9748cb8378271a078cb65b7bce99e3306904" translate="yes" xml:space="preserve">
          <source>URI.getRawPath()</source>
          <target state="translated">URI.getRawPath()</target>
        </trans-unit>
        <trans-unit id="b607b5e016025294d8a0885ad829cd4ea8193aa2" translate="yes" xml:space="preserve">
          <source>URI.getRawQuery()</source>
          <target state="translated">URI.getRawQuery()</target>
        </trans-unit>
        <trans-unit id="fec619326413f05a0fd1619eba1af8e4a11374c9" translate="yes" xml:space="preserve">
          <source>URI.getRawSchemeSpecificPart()</source>
          <target state="translated">URI.getRawSchemeSpecificPart()</target>
        </trans-unit>
        <trans-unit id="9d813166acad7987cd3f947a45df49aad78eb069" translate="yes" xml:space="preserve">
          <source>URI.getRawUserInfo()</source>
          <target state="translated">URI.getRawUserInfo()</target>
        </trans-unit>
        <trans-unit id="a69c11d137bfe3b4fb84d3b761c8b64646fe84b5" translate="yes" xml:space="preserve">
          <source>URI.getScheme()</source>
          <target state="translated">URI.getScheme()</target>
        </trans-unit>
        <trans-unit id="7380dc97652a3f8129d125980f6f58c7ede5bef4" translate="yes" xml:space="preserve">
          <source>URI.getSchemeSpecificPart()</source>
          <target state="translated">URI.getSchemeSpecificPart()</target>
        </trans-unit>
        <trans-unit id="2298f4cf279f447dac7de606005ef04534a1b947" translate="yes" xml:space="preserve">
          <source>URI.getUserInfo()</source>
          <target state="translated">URI.getUserInfo()</target>
        </trans-unit>
        <trans-unit id="e7c5ea21ac7914f539635617bad862bd7eb48c14" translate="yes" xml:space="preserve">
          <source>URI.hashCode()</source>
          <target state="translated">URI.hashCode()</target>
        </trans-unit>
        <trans-unit id="cf0ad19cfe3080d6930a8febd9c78a824503fef0" translate="yes" xml:space="preserve">
          <source>URI.isAbsolute()</source>
          <target state="translated">URI.isAbsolute()</target>
        </trans-unit>
        <trans-unit id="804c6be42a3cc72870112f254f9849c73cab825c" translate="yes" xml:space="preserve">
          <source>URI.isOpaque()</source>
          <target state="translated">URI.isOpaque()</target>
        </trans-unit>
        <trans-unit id="180dbdd0918e5b807f45cb6792ec2a3116ef36b3" translate="yes" xml:space="preserve">
          <source>URI.normalize()</source>
          <target state="translated">URI.normalize()</target>
        </trans-unit>
        <trans-unit id="9200a1a48c09bed56cf695228f2882d0336a893a" translate="yes" xml:space="preserve">
          <source>URI.parseServerAuthority()</source>
          <target state="translated">URI.parseServerAuthority()</target>
        </trans-unit>
        <trans-unit id="43058fea97cb41e569681919c44b4618b3e6290d" translate="yes" xml:space="preserve">
          <source>URI.relativize()</source>
          <target state="translated">URI.relativize()</target>
        </trans-unit>
        <trans-unit id="f323cc8b97c9ed7832c37a856692c6b500e42b39" translate="yes" xml:space="preserve">
          <source>URI.resolve()</source>
          <target state="translated">URI.resolve()</target>
        </trans-unit>
        <trans-unit id="3c89bd3e8edcaff2606cfce05ba6513dfbc7feec" translate="yes" xml:space="preserve">
          <source>URI.toASCIIString()</source>
          <target state="translated">URI.toASCIIString()</target>
        </trans-unit>
        <trans-unit id="35c0012c4bd056e891ad62c0dbbf063d60b8f385" translate="yes" xml:space="preserve">
          <source>URI.toString()</source>
          <target state="translated">URI.toString()</target>
        </trans-unit>
        <trans-unit id="8ba293f8bdbf8cd48a8584e21b522eb9096ad0b9" translate="yes" xml:space="preserve">
          <source>URI.toURL()</source>
          <target state="translated">URI.toURL()</target>
        </trans-unit>
        <trans-unit id="85511daf33810ebabcacd07a883ba655fb5073ab" translate="yes" xml:space="preserve">
          <source>URIException</source>
          <target state="translated">URIException</target>
        </trans-unit>
        <trans-unit id="d788d8c643420134a745f295d5c96642d42e280e" translate="yes" xml:space="preserve">
          <source>URIException.getReason()</source>
          <target state="translated">URIException.getReason()</target>
        </trans-unit>
        <trans-unit id="299f0f5ab339f67e99eb0149b6fb9237e83f4a6f" translate="yes" xml:space="preserve">
          <source>URIException.getUnsupportedURI()</source>
          <target state="translated">URIException.getUnsupportedURI()</target>
        </trans-unit>
        <trans-unit id="68ef24bb41faf07f913e09c44f5729ce97df37ee" translate="yes" xml:space="preserve">
          <source>URIInaccessible</source>
          <target state="translated">URIInaccessible</target>
        </trans-unit>
        <trans-unit id="7639daee5c2d745565a2086bb34973dc92353d98" translate="yes" xml:space="preserve">
          <source>URIOtherProblem</source>
          <target state="translated">URIOtherProblem</target>
        </trans-unit>
        <trans-unit id="1379a191336ba302bc39974d6339641c128e1023" translate="yes" xml:space="preserve">
          <source>URIParameter</source>
          <target state="translated">URIParameter</target>
        </trans-unit>
        <trans-unit id="5e20cb6b1507b6425b24b6f1ff1bc79876af1b4b" translate="yes" xml:space="preserve">
          <source>URIParameter.getURI()</source>
          <target state="translated">URIParameter.getURI()</target>
        </trans-unit>
        <trans-unit id="8f32fc8b9d16d4bb35eaba7e9a9e0ff997c27e65" translate="yes" xml:space="preserve">
          <source>URISchemeNotSupported</source>
          <target state="translated">URISchemeNotSupported</target>
        </trans-unit>
        <trans-unit id="9d5a0853a8ab4e3c75aa825bbf8b8ab26ffc0aea" translate="yes" xml:space="preserve">
          <source>URISyntax</source>
          <target state="translated">URISyntax</target>
        </trans-unit>
        <trans-unit id="acc5f943261659f6892fcff6c529bd74a14fc777" translate="yes" xml:space="preserve">
          <source>URISyntax.equals()</source>
          <target state="translated">URISyntax.equals()</target>
        </trans-unit>
        <trans-unit id="10c57fec5e0e97b5489ce56f873d70cf0b4f807e" translate="yes" xml:space="preserve">
          <source>URISyntax.getURI()</source>
          <target state="translated">URISyntax.getURI()</target>
        </trans-unit>
        <trans-unit id="08756aa7077298e803b6ff63b69701d2186e3ef0" translate="yes" xml:space="preserve">
          <source>URISyntax.hashCode()</source>
          <target state="translated">URISyntax.hashCode()</target>
        </trans-unit>
        <trans-unit id="1dd4f1408f81299e3e1c1e423cbfa53c59f02d93" translate="yes" xml:space="preserve">
          <source>URISyntax.toString()</source>
          <target state="translated">URISyntax.toString()</target>
        </trans-unit>
        <trans-unit id="156b2656ed25a5b4d682b68f8fb3cfda1fe850ce" translate="yes" xml:space="preserve">
          <source>URISyntaxException</source>
          <target state="translated">URISyntaxException</target>
        </trans-unit>
        <trans-unit id="ff9a3b8a6cf1816540267025b7da039c0af5eb79" translate="yes" xml:space="preserve">
          <source>URISyntaxException.getIndex()</source>
          <target state="translated">URISyntaxException.getIndex()</target>
        </trans-unit>
        <trans-unit id="a4f0aa3af76d827c0e2501836d5fb490f1d0bc0b" translate="yes" xml:space="preserve">
          <source>URISyntaxException.getInput()</source>
          <target state="translated">URISyntaxException.getInput()</target>
        </trans-unit>
        <trans-unit id="8121f35ae06debf4ca50eb6b79cd28a49cb73468" translate="yes" xml:space="preserve">
          <source>URISyntaxException.getMessage()</source>
          <target state="translated">URISyntaxException.getMessage()</target>
        </trans-unit>
        <trans-unit id="8fcab60916b7361a491893d1d638f4b47f7ac3be" translate="yes" xml:space="preserve">
          <source>URISyntaxException.getReason()</source>
          <target state="translated">URISyntaxException.getReason()</target>
        </trans-unit>
        <trans-unit id="5f44b5b98950d84e6d998f90c719f68719a03e6f" translate="yes" xml:space="preserve">
          <source>URIs</source>
          <target state="translated">URIs</target>
        </trans-unit>
        <trans-unit id="ac410bd5773ea0876be1d5f18cd54bcb13a04441" translate="yes" xml:space="preserve">
          <source>URIs, URLs, and URNs</source>
          <target state="translated">URI, URL 및 URN</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="40dad9b6d530c1c9d83722289b4cec7050c4cd42" translate="yes" xml:space="preserve">
          <source>URL Examples</source>
          <target state="translated">URL 예</target>
        </trans-unit>
        <trans-unit id="290b6030cf0f28475ba6772fcecf190f0117869c" translate="yes" xml:space="preserve">
          <source>URL.equals()</source>
          <target state="translated">URL.equals()</target>
        </trans-unit>
        <trans-unit id="948d8a934c1f734961b72bda78d6fc9c078c6fab" translate="yes" xml:space="preserve">
          <source>URL.getAuthority()</source>
          <target state="translated">URL.getAuthority()</target>
        </trans-unit>
        <trans-unit id="13770e3bc8c730751d3284ed7909215ccf7e94e1" translate="yes" xml:space="preserve">
          <source>URL.getContent()</source>
          <target state="translated">URL.getContent()</target>
        </trans-unit>
        <trans-unit id="5e6641cc023d29e9fb91d366389e6b494f74bf85" translate="yes" xml:space="preserve">
          <source>URL.getDefaultPort()</source>
          <target state="translated">URL.getDefaultPort()</target>
        </trans-unit>
        <trans-unit id="c3dd07f4fa3d0c8c7d27592b11467d4b0da6576f" translate="yes" xml:space="preserve">
          <source>URL.getFile()</source>
          <target state="translated">URL.getFile()</target>
        </trans-unit>
        <trans-unit id="9990299434739d8cff55a8a7fb89ddc93eac353e" translate="yes" xml:space="preserve">
          <source>URL.getHost()</source>
          <target state="translated">URL.getHost()</target>
        </trans-unit>
        <trans-unit id="b1d146b751e66fa53d760a30fbcf0db6746494c8" translate="yes" xml:space="preserve">
          <source>URL.getPath()</source>
          <target state="translated">URL.getPath()</target>
        </trans-unit>
        <trans-unit id="495e8cf46d098662232aebfce00bb92a50449ef0" translate="yes" xml:space="preserve">
          <source>URL.getPort()</source>
          <target state="translated">URL.getPort()</target>
        </trans-unit>
        <trans-unit id="648a16960b1a462fcb8ce85d3de91e591b7992a7" translate="yes" xml:space="preserve">
          <source>URL.getProtocol()</source>
          <target state="translated">URL.getProtocol()</target>
        </trans-unit>
        <trans-unit id="d4cf9a43511c3e587d9b96d133a4ea14e518dbc6" translate="yes" xml:space="preserve">
          <source>URL.getQuery()</source>
          <target state="translated">URL.getQuery()</target>
        </trans-unit>
        <trans-unit id="b1036c6bcb4ffe33681a88c2c71fd1a8b45ca0a3" translate="yes" xml:space="preserve">
          <source>URL.getRef()</source>
          <target state="translated">URL.getRef()</target>
        </trans-unit>
        <trans-unit id="f1d25264678d54d75ff19e3ed408c8ba40f5f2e1" translate="yes" xml:space="preserve">
          <source>URL.getUserInfo()</source>
          <target state="translated">URL.getUserInfo()</target>
        </trans-unit>
        <trans-unit id="7e6802403fb705f2d424ac17c5b728ff5a5df45d" translate="yes" xml:space="preserve">
          <source>URL.hashCode()</source>
          <target state="translated">URL.hashCode()</target>
        </trans-unit>
        <trans-unit id="2c62417f8f02dc1553cd844eb93b1e15ea0261f4" translate="yes" xml:space="preserve">
          <source>URL.openConnection()</source>
          <target state="translated">URL.openConnection()</target>
        </trans-unit>
        <trans-unit id="4e842631373e300d819f58283ddca0662e1cb3ef" translate="yes" xml:space="preserve">
          <source>URL.openStream()</source>
          <target state="translated">URL.openStream()</target>
        </trans-unit>
        <trans-unit id="175ce6a713ca6279ab75227bec4e0fda8f9ff8ad" translate="yes" xml:space="preserve">
          <source>URL.sameFile()</source>
          <target state="translated">URL.sameFile()</target>
        </trans-unit>
        <trans-unit id="b1687bbf60362b00e3f265a36a549be0ddf3b5b3" translate="yes" xml:space="preserve">
          <source>URL.setURLStreamHandlerFactory()</source>
          <target state="translated">URL.setURLStreamHandlerFactory()</target>
        </trans-unit>
        <trans-unit id="e0a9678bc81d2470cd44ab5f45f0beb308661ff8" translate="yes" xml:space="preserve">
          <source>URL.toExternalForm()</source>
          <target state="translated">URL.toExternalForm()</target>
        </trans-unit>
        <trans-unit id="1f94d442836b80e3d40e2afc01930e07fbc760a7" translate="yes" xml:space="preserve">
          <source>URL.toString()</source>
          <target state="translated">URL.toString()</target>
        </trans-unit>
        <trans-unit id="1af9bac071eec79fea2649ebee1c04009853a048" translate="yes" xml:space="preserve">
          <source>URL.toURI()</source>
          <target state="translated">URL.toURI()</target>
        </trans-unit>
        <trans-unit id="1c554c9c1bd7e994e0f7be208c560c95e7c5f7d5" translate="yes" xml:space="preserve">
          <source>URLClassLoader</source>
          <target state="translated">URLClassLoader</target>
        </trans-unit>
        <trans-unit id="9f15be999836620ed626eeb3d20fdb6190f8739b" translate="yes" xml:space="preserve">
          <source>URLClassLoader.addURL()</source>
          <target state="translated">URLClassLoader.addURL()</target>
        </trans-unit>
        <trans-unit id="48b1ae55ede0b956a1dc6188bbc913a84a72f48d" translate="yes" xml:space="preserve">
          <source>URLClassLoader.close()</source>
          <target state="translated">URLClassLoader.close()</target>
        </trans-unit>
        <trans-unit id="96412388901c31003e5c9fe6627c3c2d8e914734" translate="yes" xml:space="preserve">
          <source>URLClassLoader.definePackage()</source>
          <target state="translated">URLClassLoader.definePackage()</target>
        </trans-unit>
        <trans-unit id="b0b509ded95051a6cd41c58f3e6a469b30c05efb" translate="yes" xml:space="preserve">
          <source>URLClassLoader.findClass()</source>
          <target state="translated">URLClassLoader.findClass()</target>
        </trans-unit>
        <trans-unit id="0e68dbdf40c918d84533bd77b4dba49856481636" translate="yes" xml:space="preserve">
          <source>URLClassLoader.findResource()</source>
          <target state="translated">URLClassLoader.findResource()</target>
        </trans-unit>
        <trans-unit id="6e8bb564c01efaf74c29ff2f49db5a1ce12e0550" translate="yes" xml:space="preserve">
          <source>URLClassLoader.findResources()</source>
          <target state="translated">URLClassLoader.findResources()</target>
        </trans-unit>
        <trans-unit id="5899562ebe908e9f774dbc25691c00cef1734e63" translate="yes" xml:space="preserve">
          <source>URLClassLoader.getPermissions()</source>
          <target state="translated">URLClassLoader.getPermissions()</target>
        </trans-unit>
        <trans-unit id="77e914303d960e0243ab8ec20969d062e7168024" translate="yes" xml:space="preserve">
          <source>URLClassLoader.getResourceAsStream()</source>
          <target state="translated">URLClassLoader.getResourceAsStream()</target>
        </trans-unit>
        <trans-unit id="5e5d19b30d2e8700d8ec995dbf34cf29dd3a14c3" translate="yes" xml:space="preserve">
          <source>URLClassLoader.getURLs()</source>
          <target state="translated">URLClassLoader.getURLs()</target>
        </trans-unit>
        <trans-unit id="3f3ba691a9bda11ceec15211ca3e024896e67f21" translate="yes" xml:space="preserve">
          <source>URLClassLoader.newInstance()</source>
          <target state="translated">URLClassLoader.newInstance()</target>
        </trans-unit>
        <trans-unit id="bb31b7d779267ba4023fd5a6002df9ae26074db8" translate="yes" xml:space="preserve">
          <source>URLConnection</source>
          <target state="translated">URLConnection</target>
        </trans-unit>
        <trans-unit id="e88f3e7a203259d7700895bd7330c59e9d6fc841" translate="yes" xml:space="preserve">
          <source>URLConnection objects go through two phases: first they are created, then they are connected. After being created, and before being connected, various options can be specified (e.g., doInput and UseCaches). After connecting, it is an error to try to set them. Operations that depend on being connected, like getContentLength, will implicitly perform the connection, if necessary.</source>
          <target state="translated">URLConnection 객체는 두 단계로 진행됩니다. 먼저 생성 된 다음 연결됩니다. 작성 후, 연결하기 전에 다양한 옵션 (예 : doInput 및 UseCaches)을 지정할 수 있습니다. 연결 한 후 설정을 시도하면 오류가 발생합니다. getContentLength와 같이 연결에 의존하는 조작은 필요한 경우 내재적으로 연결을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="086d409c94192f21bfd01b820049929d12e90fa5" translate="yes" xml:space="preserve">
          <source>URLConnection.addRequestProperty()</source>
          <target state="translated">URLConnection.addRequestProperty()</target>
        </trans-unit>
        <trans-unit id="ce0e91405aa8eb79d6f20c837540c7c7363a9b17" translate="yes" xml:space="preserve">
          <source>URLConnection.connect()</source>
          <target state="translated">URLConnection.connect()</target>
        </trans-unit>
        <trans-unit id="c41e25c10eb9d5f500969733d87046392845af3c" translate="yes" xml:space="preserve">
          <source>URLConnection.getAllowUserInteraction()</source>
          <target state="translated">URLConnection.getAllowUserInteraction()</target>
        </trans-unit>
        <trans-unit id="57d06aa0a45d22c3e214fad09de223dab09c1d35" translate="yes" xml:space="preserve">
          <source>URLConnection.getConnectTimeout()</source>
          <target state="translated">URLConnection.getConnectTimeout()</target>
        </trans-unit>
        <trans-unit id="9c5191c4d3c65cfde15fd9d8c1ebbd0ab43eceb6" translate="yes" xml:space="preserve">
          <source>URLConnection.getContent()</source>
          <target state="translated">URLConnection.getContent()</target>
        </trans-unit>
        <trans-unit id="6e2041ae0a96f020a8f63955a1e5d41760d5b66e" translate="yes" xml:space="preserve">
          <source>URLConnection.getContentEncoding()</source>
          <target state="translated">URLConnection.getContentEncoding()</target>
        </trans-unit>
        <trans-unit id="9c0bf163abca1d1facc81dc4edab19b804656e7b" translate="yes" xml:space="preserve">
          <source>URLConnection.getContentLength()</source>
          <target state="translated">URLConnection.getContentLength()</target>
        </trans-unit>
        <trans-unit id="ecbbb80afeb04cf8983ed1543d84f345cc91a3d9" translate="yes" xml:space="preserve">
          <source>URLConnection.getContentLengthLong()</source>
          <target state="translated">URLConnection.getContentLengthLong()</target>
        </trans-unit>
        <trans-unit id="a6b4f3fcfd4948204b4a98eb3233b04b3f8cfb4e" translate="yes" xml:space="preserve">
          <source>URLConnection.getContentType()</source>
          <target state="translated">URLConnection.getContentType()</target>
        </trans-unit>
        <trans-unit id="8da5e786bd32ff5a399ceb63cd92ae8c80b7fad6" translate="yes" xml:space="preserve">
          <source>URLConnection.getDate()</source>
          <target state="translated">URLConnection.getDate()</target>
        </trans-unit>
        <trans-unit id="e95368adb353d2c0325d319b0de268814a64675a" translate="yes" xml:space="preserve">
          <source>URLConnection.getDefaultAllowUserInteraction()</source>
          <target state="translated">URLConnection.getDefaultAllowUserInteraction()</target>
        </trans-unit>
        <trans-unit id="514353937a26b96906e4de7674005cc849cace08" translate="yes" xml:space="preserve">
          <source>URLConnection.getDefaultRequestProperty()</source>
          <target state="translated">URLConnection.getDefaultRequestProperty()</target>
        </trans-unit>
        <trans-unit id="1420fe191d3eaa3071785c9ba3191e6ce78a9d95" translate="yes" xml:space="preserve">
          <source>URLConnection.getDefaultUseCaches()</source>
          <target state="translated">URLConnection.getDefaultUseCaches()</target>
        </trans-unit>
        <trans-unit id="1256f2bedf084bc7215408cc22e24b8c0ab7002a" translate="yes" xml:space="preserve">
          <source>URLConnection.getDoInput()</source>
          <target state="translated">URLConnection.getDoInput()</target>
        </trans-unit>
        <trans-unit id="db8e28b4189b4501ea6d487ee96b2be986af92bd" translate="yes" xml:space="preserve">
          <source>URLConnection.getDoOutput()</source>
          <target state="translated">URLConnection.getDoOutput()</target>
        </trans-unit>
        <trans-unit id="4d2956f09ea8e98fa52906b8b430794863023d64" translate="yes" xml:space="preserve">
          <source>URLConnection.getExpiration()</source>
          <target state="translated">URLConnection.getExpiration()</target>
        </trans-unit>
        <trans-unit id="fde05ab49eb8b60c02d1346d83f985914f98b660" translate="yes" xml:space="preserve">
          <source>URLConnection.getFileNameMap()</source>
          <target state="translated">URLConnection.getFileNameMap()</target>
        </trans-unit>
        <trans-unit id="2b299489d8d0a103d886aced49ee8baf86f0fd7f" translate="yes" xml:space="preserve">
          <source>URLConnection.getHeaderField()</source>
          <target state="translated">URLConnection.getHeaderField()</target>
        </trans-unit>
        <trans-unit id="d05a362bf9c03eac5ec83ad973a159df2f3b3d10" translate="yes" xml:space="preserve">
          <source>URLConnection.getHeaderFieldDate()</source>
          <target state="translated">URLConnection.getHeaderFieldDate()</target>
        </trans-unit>
        <trans-unit id="7756f35c8d29759b6d6fc0f0a93f54ed484081be" translate="yes" xml:space="preserve">
          <source>URLConnection.getHeaderFieldInt()</source>
          <target state="translated">URLConnection.getHeaderFieldInt()</target>
        </trans-unit>
        <trans-unit id="a258e42021d7c1386cc8f8a9a64cade0fafa501f" translate="yes" xml:space="preserve">
          <source>URLConnection.getHeaderFieldKey()</source>
          <target state="translated">URLConnection.getHeaderFieldKey()</target>
        </trans-unit>
        <trans-unit id="a20b70854f9cd88e8f481192136a1307f68482b0" translate="yes" xml:space="preserve">
          <source>URLConnection.getHeaderFieldLong()</source>
          <target state="translated">URLConnection.getHeaderFieldLong()</target>
        </trans-unit>
        <trans-unit id="c4373ef5e6c1105f51e6b858227289fdca2a6212" translate="yes" xml:space="preserve">
          <source>URLConnection.getHeaderFields()</source>
          <target state="translated">URLConnection.getHeaderFields()</target>
        </trans-unit>
        <trans-unit id="7a83e43ae2bafa4c135bc528056725c4c9147e6b" translate="yes" xml:space="preserve">
          <source>URLConnection.getIfModifiedSince()</source>
          <target state="translated">URLConnection.getIfModifiedSince()</target>
        </trans-unit>
        <trans-unit id="4bfb13cc31de7b7c0153fdc1b786332bde0137fb" translate="yes" xml:space="preserve">
          <source>URLConnection.getInputStream()</source>
          <target state="translated">URLConnection.getInputStream()</target>
        </trans-unit>
        <trans-unit id="b84505fcf6603c7d1741cc28e1697da95d531ab1" translate="yes" xml:space="preserve">
          <source>URLConnection.getLastModified()</source>
          <target state="translated">URLConnection.getLastModified()</target>
        </trans-unit>
        <trans-unit id="759625b3c3b917cee8b7d2837068544ae13c1605" translate="yes" xml:space="preserve">
          <source>URLConnection.getOutputStream()</source>
          <target state="translated">URLConnection.getOutputStream()</target>
        </trans-unit>
        <trans-unit id="ecbd1260ec34e57274125f44da71cb9fff74980d" translate="yes" xml:space="preserve">
          <source>URLConnection.getPermission()</source>
          <target state="translated">URLConnection.getPermission()</target>
        </trans-unit>
        <trans-unit id="84ee954b4e0f26eca96dcc0acaf35b0a1a193cf2" translate="yes" xml:space="preserve">
          <source>URLConnection.getReadTimeout()</source>
          <target state="translated">URLConnection.getReadTimeout()</target>
        </trans-unit>
        <trans-unit id="a07a9e75159fc9ac6f863d084a464639d6fbfed2" translate="yes" xml:space="preserve">
          <source>URLConnection.getRequestProperties()</source>
          <target state="translated">URLConnection.getRequestProperties()</target>
        </trans-unit>
        <trans-unit id="aa58ef370aadaaef49d703832f0512bb83121bc6" translate="yes" xml:space="preserve">
          <source>URLConnection.getRequestProperty()</source>
          <target state="translated">URLConnection.getRequestProperty()</target>
        </trans-unit>
        <trans-unit id="f4b2b1641ac38e1c571d433fe045ab7f9d4d89cb" translate="yes" xml:space="preserve">
          <source>URLConnection.getURL()</source>
          <target state="translated">URLConnection.getURL()</target>
        </trans-unit>
        <trans-unit id="2ff1ee5ff682c1e1ddbbdd417f8adb7213707e32" translate="yes" xml:space="preserve">
          <source>URLConnection.getUseCaches()</source>
          <target state="translated">URLConnection.getUseCaches()</target>
        </trans-unit>
        <trans-unit id="46c557cf79436b2120f32f6acb41877eef9d1063" translate="yes" xml:space="preserve">
          <source>URLConnection.guessContentTypeFromName()</source>
          <target state="translated">URLConnection.guessContentTypeFromName()</target>
        </trans-unit>
        <trans-unit id="38d5f21e99f74bf130827d2424bd9427e8c50914" translate="yes" xml:space="preserve">
          <source>URLConnection.guessContentTypeFromStream()</source>
          <target state="translated">URLConnection.guessContentTypeFromStream()</target>
        </trans-unit>
        <trans-unit id="657374c38968167386c1b5d3ca0c08a12a4aae83" translate="yes" xml:space="preserve">
          <source>URLConnection.setAllowUserInteraction()</source>
          <target state="translated">URLConnection.setAllowUserInteraction()</target>
        </trans-unit>
        <trans-unit id="c3b0a6508cc86b7f9ef8c04c2c1b7ed121eeb8df" translate="yes" xml:space="preserve">
          <source>URLConnection.setConnectTimeout()</source>
          <target state="translated">URLConnection.setConnectTimeout()</target>
        </trans-unit>
        <trans-unit id="cb6bad9175fa1bc8395131592e28d3ebabd4b663" translate="yes" xml:space="preserve">
          <source>URLConnection.setContentHandlerFactory()</source>
          <target state="translated">URLConnection.setContentHandlerFactory()</target>
        </trans-unit>
        <trans-unit id="0fc5e345dc678b9ccc80f148a2e8bf87df837a8c" translate="yes" xml:space="preserve">
          <source>URLConnection.setDefaultAllowUserInteraction()</source>
          <target state="translated">URLConnection.setDefaultAllowUserInteraction()</target>
        </trans-unit>
        <trans-unit id="bd49c93dc439de1331080832534529cd42bab3ae" translate="yes" xml:space="preserve">
          <source>URLConnection.setDefaultRequestProperty()</source>
          <target state="translated">URLConnection.setDefaultRequestProperty()</target>
        </trans-unit>
        <trans-unit id="fb720f26a52ddcbc4726dc76943954f1fa5b66c1" translate="yes" xml:space="preserve">
          <source>URLConnection.setDefaultUseCaches()</source>
          <target state="translated">URLConnection.setDefaultUseCaches()</target>
        </trans-unit>
        <trans-unit id="2a42a4e54a2bb1a1186f7eeb59e20345ab318fea" translate="yes" xml:space="preserve">
          <source>URLConnection.setDoInput()</source>
          <target state="translated">URLConnection.setDoInput()</target>
        </trans-unit>
        <trans-unit id="c2cadf1941a971c33b23e714d9cf6d3f0af88429" translate="yes" xml:space="preserve">
          <source>URLConnection.setDoOutput()</source>
          <target state="translated">URLConnection.setDoOutput()</target>
        </trans-unit>
        <trans-unit id="7315f05528349a7f4d673ec7b6fae755ad37cf73" translate="yes" xml:space="preserve">
          <source>URLConnection.setFileNameMap()</source>
          <target state="translated">URLConnection.setFileNameMap()</target>
        </trans-unit>
        <trans-unit id="ae45c09b5d792f2326a27e2920c111f73fc8bc69" translate="yes" xml:space="preserve">
          <source>URLConnection.setIfModifiedSince()</source>
          <target state="translated">URLConnection.setIfModifiedSince()</target>
        </trans-unit>
        <trans-unit id="248d4b79056b6fa3899c3f99546d331858dde1ef" translate="yes" xml:space="preserve">
          <source>URLConnection.setReadTimeout()</source>
          <target state="translated">URLConnection.setReadTimeout()</target>
        </trans-unit>
        <trans-unit id="a9e8b64b6eb28ccb95373a4346f1534ac3558013" translate="yes" xml:space="preserve">
          <source>URLConnection.setRequestProperty()</source>
          <target state="translated">URLConnection.setRequestProperty()</target>
        </trans-unit>
        <trans-unit id="f1bc1dbdbb082737f7f0d73ffa1adfee07a2a915" translate="yes" xml:space="preserve">
          <source>URLConnection.setUseCaches()</source>
          <target state="translated">URLConnection.setUseCaches()</target>
        </trans-unit>
        <trans-unit id="f2274f64cff34a2d4139b18f304662346b8484cc" translate="yes" xml:space="preserve">
          <source>URLConnection.toString()</source>
          <target state="translated">URLConnection.toString()</target>
        </trans-unit>
        <trans-unit id="50640762c0d5085a696bdc1927633312d0c0643c" translate="yes" xml:space="preserve">
          <source>URLContextFactory (e.g. &quot;ftpURLContextFactory&quot; for the &quot;ftp&quot; scheme-id), in the package specified as follows. The &lt;code&gt;Context.URL_PKG_PREFIXES&lt;/code&gt; environment property (which may contain values taken from applet parameters, system properties, or application resource files) contains a colon-separated list of package prefixes. Each package prefix in the property is tried in the order specified to load the factory class. The default package prefix is &quot;com.sun.jndi.url&quot; (if none of the specified packages work, this default is tried). The complete package name is constructed using the package prefix, concatenated with the scheme id.</source>
          <target state="translated">다음과 같이 지정된 패키지의 URLContextFactory (예 : &quot;ftp&quot;scheme-id의 경우 &quot;ftpURLContextFactory&quot;) &lt;code&gt;Context.URL_PKG_PREFIXES&lt;/code&gt; 환경 속성 (애플릿 파라미터, 시스템 특성 또는 애플리케이션 리소스 파일에서 가져온 값을 포함 할 수 있음) 패키지 접두사리스트가 포함. 속성의 각 패키지 접두사는 팩토리 클래스를로드하도록 지정된 순서대로 시도됩니다. 기본 패키지 접두사는 &quot;com.sun.jndi.url&quot;입니다 (지정한 패키지가 작동하지 않으면이 기본값이 시도됩니다). 전체 패키지 이름은 패키지 접두사를 사용하여 구성표 ID와 연결하여 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e7e78da3b8e8c1250337c22d1ae989a96a31e508" translate="yes" xml:space="preserve">
          <source>URLDecoder</source>
          <target state="translated">URLDecoder</target>
        </trans-unit>
        <trans-unit id="309383e58c40f0a844effaa00b2737cb6f53721a" translate="yes" xml:space="preserve">
          <source>URLDecoder.decode()</source>
          <target state="translated">URLDecoder.decode()</target>
        </trans-unit>
        <trans-unit id="c573a2f59b456500d64444b7353e32b405bbe021" translate="yes" xml:space="preserve">
          <source>URLEncoder</source>
          <target state="translated">URLEncoder</target>
        </trans-unit>
        <trans-unit id="31bb1168abc619f382dc7a8b72cd7ef012e24688" translate="yes" xml:space="preserve">
          <source>URLEncoder.encode()</source>
          <target state="translated">URLEncoder.encode()</target>
        </trans-unit>
        <trans-unit id="646316d39df4a86e3c9100888a2fa66c4eb86add" translate="yes" xml:space="preserve">
          <source>URLPermission</source>
          <target state="translated">URLPermission</target>
        </trans-unit>
        <trans-unit id="984acb238e999c7ec9a0ef77a2b73f6c50edfe81" translate="yes" xml:space="preserve">
          <source>URLPermission.equals()</source>
          <target state="translated">URLPermission.equals()</target>
        </trans-unit>
        <trans-unit id="18e7c0902c106d2d71382dee336e81180757da7f" translate="yes" xml:space="preserve">
          <source>URLPermission.getActions()</source>
          <target state="translated">URLPermission.getActions()</target>
        </trans-unit>
        <trans-unit id="ea98a4596fb7edde20ba9b69d99dd4973e5ad192" translate="yes" xml:space="preserve">
          <source>URLPermission.hashCode()</source>
          <target state="translated">URLPermission.hashCode()</target>
        </trans-unit>
        <trans-unit id="2010a8e436cc7ce6357eaef9c8e5cd34c6d712dd" translate="yes" xml:space="preserve">
          <source>URLPermission.implies()</source>
          <target state="translated">URLPermission.implies()</target>
        </trans-unit>
        <trans-unit id="37ff05f75743bb85251a8d0e9652c77a84b4608f" translate="yes" xml:space="preserve">
          <source>URLStreamHandler</source>
          <target state="translated">URLStreamHandler</target>
        </trans-unit>
        <trans-unit id="4b17038ea7b52a4d5c74f2577dcd23f8ae72a510" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.equals()</source>
          <target state="translated">URLStreamHandler.equals()</target>
        </trans-unit>
        <trans-unit id="638e2740faf4dd6b887838c618cdc4f2a33dc281" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.getDefaultPort()</source>
          <target state="translated">URLStreamHandler.getDefaultPort()</target>
        </trans-unit>
        <trans-unit id="c50dbcd4c55d223602a42fe04c06a44eaa3b6c8b" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.getHostAddress()</source>
          <target state="translated">URLStreamHandler.getHostAddress()</target>
        </trans-unit>
        <trans-unit id="3b366fb565969512e5b6d812e1790c681d9c03c9" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.hashCode()</source>
          <target state="translated">URLStreamHandler.hashCode()</target>
        </trans-unit>
        <trans-unit id="a4c8c02e0a5d4193145789ca48acac3eb6d9d830" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.hostsEqual()</source>
          <target state="translated">URLStreamHandler.hostsEqual()</target>
        </trans-unit>
        <trans-unit id="7c98fd369111bf03319646a33611f10febfdaa30" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.openConnection()</source>
          <target state="translated">URLStreamHandler.openConnection()</target>
        </trans-unit>
        <trans-unit id="05bf617d9d3531c3ca9bbed0652d0ba95a5a4caf" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.parseURL()</source>
          <target state="translated">URLStreamHandler.parseURL()</target>
        </trans-unit>
        <trans-unit id="01fe4d849e027cf61248ac8020050be27d34260e" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.sameFile()</source>
          <target state="translated">URLStreamHandler.sameFile()</target>
        </trans-unit>
        <trans-unit id="26dced5ce8ea2dac01e52a745d5556c6923f6e93" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.setURL()</source>
          <target state="translated">URLStreamHandler.setURL()</target>
        </trans-unit>
        <trans-unit id="2804b6a5ce21a696fadf8af46888b35c5d1ce413" translate="yes" xml:space="preserve">
          <source>URLStreamHandler.toExternalForm()</source>
          <target state="translated">URLStreamHandler.toExternalForm()</target>
        </trans-unit>
        <trans-unit id="f75b7220aa94205db4056ee9b8ca10ea621cc53f" translate="yes" xml:space="preserve">
          <source>URLStreamHandlerFactory</source>
          <target state="translated">URLStreamHandlerFactory</target>
        </trans-unit>
        <trans-unit id="6258804f00586df996aa1e056d090e7ac1e185ad" translate="yes" xml:space="preserve">
          <source>URLStreamHandlerFactory.createURLStreamHandler()</source>
          <target state="translated">URLStreamHandlerFactory.createURLStreamHandler()</target>
        </trans-unit>
        <trans-unit id="346b97624dcb795817f91784486215b3c877a07b" translate="yes" xml:space="preserve">
          <source>URL_PKG_PREFIXES</source>
          <target state="translated">URL_PKG_PREFIXES</target>
        </trans-unit>
        <trans-unit id="01f03837323aab32409bb99c50d6c475179c49df" translate="yes" xml:space="preserve">
          <source>URLs</source>
          <target state="translated">URLs</target>
        </trans-unit>
        <trans-unit id="aa3093554472fd113135bed5b63e12f84c2e9fe8" translate="yes" xml:space="preserve">
          <source>US</source>
          <target state="translated">US</target>
        </trans-unit>
        <trans-unit id="791934168ddb19bd3af1092282a00fd033f571f9" translate="yes" xml:space="preserve">
          <source>USENET news using Network News Transfer Protocol (NNTP).</source>
          <target state="translated">NNTP (Network News Transfer Protocol)를 사용하는 USENET 뉴스.</target>
        </trans-unit>
        <trans-unit id="5277467e603532c3ad10d7250d6c12fc802ecc0a" translate="yes" xml:space="preserve">
          <source>USENET news.</source>
          <target state="translated">유즈넷 뉴스.</target>
        </trans-unit>
        <trans-unit id="771e22dc13137b2e43cf5bee64cb4a75d659ec37" translate="yes" xml:space="preserve">
          <source>USE_ALL_BEANINFO</source>
          <target state="translated">USE_ALL_BEANINFO</target>
        </trans-unit>
        <trans-unit id="e1e266ee88d83b6e50d32810bb537de3e1f096ca" translate="yes" xml:space="preserve">
          <source>USE_STD3_ASCII_RULES</source>
          <target state="translated">USE_STD3_ASCII_RULES</target>
        </trans-unit>
        <trans-unit id="91e7bf3c4d0ab9784e0c43761883c8268e94bc3e" translate="yes" xml:space="preserve">
          <source>US_ASCII</source>
          <target state="translated">US_ASCII</target>
        </trans-unit>
        <trans-unit id="bdfd4d8d6952777c39403b2d2e2f8a2a52bf255f" translate="yes" xml:space="preserve">
          <source>UTC</source>
          <target state="translated">UTC</target>
        </trans-unit>
        <trans-unit id="a7c8c593a13792c2fbab11cf047f81332128a3d3" translate="yes" xml:space="preserve">
          <source>UTC_TIME</source>
          <target state="translated">UTC_TIME</target>
        </trans-unit>
        <trans-unit id="daf6fd5d844e72cbc45b893ccfad7538b3721efc" translate="yes" xml:space="preserve">
          <source>UTF length</source>
          <target state="translated">UTF 길이</target>
        </trans-unit>
        <trans-unit id="c81d5ff485c99a1e8fbc89190e13a97e29f6cbe3" translate="yes" xml:space="preserve">
          <source>UTFDataFormatException</source>
          <target state="translated">UTFDataFormatException</target>
        </trans-unit>
        <trans-unit id="3133dd8458a32c8b5ce4a722caa62b68748d9288" translate="yes" xml:space="preserve">
          <source>UTF_16</source>
          <target state="translated">UTF_16</target>
        </trans-unit>
        <trans-unit id="6ca2e2b19e1ecda564482fabe6d3670b269a5872" translate="yes" xml:space="preserve">
          <source>UTF_16BE</source>
          <target state="translated">UTF_16BE</target>
        </trans-unit>
        <trans-unit id="9754e677d06d03c4582e2dcf98147ca46f84d72e" translate="yes" xml:space="preserve">
          <source>UTF_16LE</source>
          <target state="translated">UTF_16LE</target>
        </trans-unit>
        <trans-unit id="444b32f7d1774bb52a894fb896e3e3f1afe43c1f" translate="yes" xml:space="preserve">
          <source>UTF_8</source>
          <target state="translated">UTF_8</target>
        </trans-unit>
        <trans-unit id="a595563bb0b10e18891551337c7510134d987d58" translate="yes" xml:space="preserve">
          <source>UTS#35, &quot;Unicode Locale Data Markup Language&quot; defines optional attributes and keywords to override or refine the default behavior associated with a locale. A keyword is represented by a pair of key and type. For example, &quot;nu-thai&quot; indicates that Thai local digits (value:&quot;thai&quot;) should be used for formatting numbers (key:&quot;nu&quot;).</source>
          <target state="translated">UTS # 35, &quot;유니 코드 로캘 데이터 마크 업 언어&quot;는 로캘과 관련된 기본 동작을 재정의하거나 수정하기위한 선택적 특성 및 키워드를 정의합니다. 키워드는 한 쌍의 키와 유형으로 표시됩니다. 예를 들어, &quot;nu-thai&quot;는 태국 현지 숫자 (값 : &quot;thai&quot;)를 숫자 형식 (키 : &quot;nu&quot;)으로 사용해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="21bf75a5255af008f6315cb6aca4bb3bdccee521" translate="yes" xml:space="preserve">
          <source>UUID</source>
          <target state="translated">UUID</target>
        </trans-unit>
        <trans-unit id="e68499d7e8a2ebbd621739527b29c83b45bc09d8" translate="yes" xml:space="preserve">
          <source>UUID.clockSequence()</source>
          <target state="translated">UUID.clockSequence()</target>
        </trans-unit>
        <trans-unit id="50f92949cf3f1c6d383ef6c5548ecf5fb5f4b5c2" translate="yes" xml:space="preserve">
          <source>UUID.compareTo()</source>
          <target state="translated">UUID.compareTo()</target>
        </trans-unit>
        <trans-unit id="c24fd70c64f31fc8730f796cd01c9ab6d02c2467" translate="yes" xml:space="preserve">
          <source>UUID.equals()</source>
          <target state="translated">UUID.equals()</target>
        </trans-unit>
        <trans-unit id="ffbdd344a974bbf2559a07a8d673a794845286e6" translate="yes" xml:space="preserve">
          <source>UUID.fromString()</source>
          <target state="translated">UUID.fromString()</target>
        </trans-unit>
        <trans-unit id="ab7cfde8af086a74b40607bd07844f048c6e968c" translate="yes" xml:space="preserve">
          <source>UUID.getLeastSignificantBits()</source>
          <target state="translated">UUID.getLeastSignificantBits()</target>
        </trans-unit>
        <trans-unit id="49d391c151a957a0f6d76176a3ea8b02dadff20b" translate="yes" xml:space="preserve">
          <source>UUID.getMostSignificantBits()</source>
          <target state="translated">UUID.getMostSignificantBits()</target>
        </trans-unit>
        <trans-unit id="19199f558c73038d585832a5ff818bba385cb2e5" translate="yes" xml:space="preserve">
          <source>UUID.hashCode()</source>
          <target state="translated">UUID.hashCode()</target>
        </trans-unit>
        <trans-unit id="82682d505da8c944348bb6b87e692c69d0cf337e" translate="yes" xml:space="preserve">
          <source>UUID.nameUUIDFromBytes()</source>
          <target state="translated">UUID.nameUUIDFromBytes()</target>
        </trans-unit>
        <trans-unit id="f47ada746a3778e1c0db8059a3df21dfea82de0b" translate="yes" xml:space="preserve">
          <source>UUID.node()</source>
          <target state="translated">UUID.node()</target>
        </trans-unit>
        <trans-unit id="e1519ade423f610f5b994c23b3480e0fb2f1c442" translate="yes" xml:space="preserve">
          <source>UUID.randomUUID()</source>
          <target state="translated">UUID.randomUUID()</target>
        </trans-unit>
        <trans-unit id="91d036053ebf7775a8e6735d958bdbc1f593e5db" translate="yes" xml:space="preserve">
          <source>UUID.timestamp()</source>
          <target state="translated">UUID.timestamp()</target>
        </trans-unit>
        <trans-unit id="530abc9ac3385d0e1f5a7087d5a8dcee26590709" translate="yes" xml:space="preserve">
          <source>UUID.toString()</source>
          <target state="translated">UUID.toString()</target>
        </trans-unit>
        <trans-unit id="a58f92b4744a4c42778a547a5b55e6843a79e8ae" translate="yes" xml:space="preserve">
          <source>UUID.variant()</source>
          <target state="translated">UUID.variant()</target>
        </trans-unit>
        <trans-unit id="db854f6ee52f7cb9e484c92c23e2dc8501d44f62" translate="yes" xml:space="preserve">
          <source>UUID.version()</source>
          <target state="translated">UUID.version()</target>
        </trans-unit>
        <trans-unit id="70cad3c582ebdf1dc7038dafbc16d10f08e75aa0" translate="yes" xml:space="preserve">
          <source>UnaryOperator</source>
          <target state="translated">UnaryOperator</target>
        </trans-unit>
        <trans-unit id="2fbf0866ab096f636b5af97ffb968de6a74d7940" translate="yes" xml:space="preserve">
          <source>UnaryOperator.identity()</source>
          <target state="translated">UnaryOperator.identity()</target>
        </trans-unit>
        <trans-unit id="7aca825cdc523d370fa4b6c81a7fc0d3131c9ec7" translate="yes" xml:space="preserve">
          <source>Unbinds the named object. Removes the terminal atomic name in &lt;code&gt;name&lt;/code&gt; from the target context--that named by all but the terminal atomic part of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">명명 된 객체를 바인드 해제합니다. 대상 컨텍스트 에서 &lt;code&gt;name&lt;/code&gt; 의 터미널 아토믹 이름 ( name 의 터미널 아토믹 부분을 제외한 &lt;code&gt;name&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="96478d6f4eb793b927e8db78cfdfe11ce6622b7c" translate="yes" xml:space="preserve">
          <source>Unbinds the named object. See &lt;a href=&quot;context#unbind-javax.naming.Name-&quot;&gt;&lt;code&gt;Context.unbind(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">명명 된 객체를 바인드 해제합니다. 자세한 내용은 &lt;a href=&quot;context#unbind-javax.naming.Name-&quot;&gt; &lt;code&gt;Context.unbind(Name)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0e73bf841a96348b61ebb9e5fd79ca04afd24423" translate="yes" xml:space="preserve">
          <source>Unbinds the named object. See &lt;a href=&quot;context#unbind-javax.naming.Name-&quot;&gt;&lt;code&gt;unbind(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">명명 된 객체를 바인딩 해제합니다. 자세한 내용은 &lt;a href=&quot;context#unbind-javax.naming.Name-&quot;&gt; &lt;code&gt;unbind(Name)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6e9c094d1e994fb862b20894f597b24362dff167" translate="yes" xml:space="preserve">
          <source>Unblock multicast datagrams from the given source address that was previously blocked using the &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; 방법을 사용하여 이전에 차단 된 지정된 소스 주소에서 멀티 캐스트 데이터 그램을 차단 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb039a580d49c29c95cdd57622fe60fa5f3dd04b" translate="yes" xml:space="preserve">
          <source>Uncaught exception handling is controlled first by the thread, then by the thread's &lt;a href=&quot;threadgroup&quot;&gt;&lt;code&gt;ThreadGroup&lt;/code&gt;&lt;/a&gt; object and finally by the default uncaught exception handler. If the thread does not have an explicit uncaught exception handler set, and the thread's thread group (including parent thread groups) does not specialize its &lt;code&gt;uncaughtException&lt;/code&gt; method, then the default handler's &lt;code&gt;uncaughtException&lt;/code&gt; method will be invoked.</source>
          <target state="translated">잡히지 않은 예외 처리는 먼저 스레드에 의해 제어 된 다음 스레드의 &lt;a href=&quot;threadgroup&quot;&gt; &lt;code&gt;ThreadGroup&lt;/code&gt; &lt;/a&gt; 객체에 의해 그리고 마지막으로 잡히지 않은 기본 예외 처리기에 의해 제어됩니다. 스레드에 명시적인 catch되지 않은 예외 핸들러 세트가없고 스레드의 스레드 그룹 (부모 스레드 그룹 포함)이 &lt;code&gt;uncaughtException&lt;/code&gt; 메소드를 특수화하지 않으면 기본 핸들러의 &lt;code&gt;uncaughtException&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="62814e42fab179c202ebc40aa40519f25f15d71b" translate="yes" xml:space="preserve">
          <source>Uncaught exceptions are handled in shutdown hooks just as in any other thread, by invoking the &lt;code&gt;&lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;&lt;code&gt;uncaughtException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the thread's &lt;code&gt;&lt;a href=&quot;threadgroup&quot;&gt;&lt;code&gt;ThreadGroup&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object. The default implementation of this method prints the exception's stack trace to &lt;code&gt;&lt;a href=&quot;system#err&quot;&gt;&lt;code&gt;System.err&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and terminates the thread; it does not cause the virtual machine to exit or halt.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;&lt;code&gt;uncaughtException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 예외는 스레드의 &lt;code&gt;&lt;a href=&quot;threadgroup&quot;&gt;&lt;code&gt;ThreadGroup&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 오브젝트 의 uncaughtException 메소드를 호출하여 다른 스레드와 마찬가지로 종료 후크에서 처리됩니다 . 이 메소드의 기본 구현은 예외의 스택 추적을 &lt;code&gt;&lt;a href=&quot;system#err&quot;&gt;&lt;code&gt;System.err&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 에 인쇄 하고 스레드를 종료합니다. 가상 시스템이 종료되거나 중지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5da10f787918d90fe12b404830faac2ce7daf5ca" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown to indicate a syntax error in a regular-expression pattern.</source>
          <target state="translated">정규식 패턴에서 구문 오류를 나타 내기 위해 검사되지 않은 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="2ab6f92e4810bcebc04e1827a0096051501dfda5" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when a blocking-mode-specific operation is invoked upon a channel in the incorrect blocking mode.</source>
          <target state="translated">잘못된 차단 모드의 채널에서 차단 모드 별 작업이 호출되면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="851d40cea93fc58c6333b6491295c0c5fa3446ee" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when a character with an invalid Unicode code point as defined by &lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt;&lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt;&lt;/a&gt; is passed to the &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt; &lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt; &lt;/a&gt; 의해 정의 된 유효하지 않은 유니 코드 코드 포인트를 가진 문자 가 &lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; 로 전달 될 때 확인되지 않은 예외가 발생 합니다 .</target>
        </trans-unit>
        <trans-unit id="e36e7d5e0ec83bacf33b683a7830d2adcb04b486" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when a content-mutation method such as &lt;code&gt;put&lt;/code&gt; or &lt;code&gt;compact&lt;/code&gt; is invoked upon a read-only buffer.</source>
          <target state="translated">읽기 전용 버퍼에서 &lt;code&gt;put&lt;/code&gt; 또는 &lt;code&gt;compact&lt;/code&gt; 와 같은 컨텐츠 변경 메소드 가 호출되면 검사되지 않은 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="3d2ae65166765870694882f4a6bb9a4b775cfec1" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when a conversion and flag are incompatible.</source>
          <target state="translated">변환 및 플래그가 호환되지 않으면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ed27190801aca4dbe4161d7849fd6ea3b466eb4e" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when a format string contains an illegal syntax or a format specifier that is incompatible with the given arguments.</source>
          <target state="translated">형식 문자열에 잘못된 구문이나 지정된 인수와 호환되지 않는 형식 지정자가 포함되어 있으면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="270ec1a516efefda542d40492c7dee37cdb47a5c" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when a format string contains an illegal syntax or a format specifier that is incompatible with the given arguments. Only explicit subtypes of this exception which correspond to specific errors should be instantiated.</source>
          <target state="translated">형식 문자열에 잘못된 구문이나 지정된 인수와 호환되지 않는 형식 지정자가 포함되어 있으면 검사되지 않은 예외가 발생합니다. 특정 오류에 해당하는이 예외의 명시 적 하위 유형 만 인스턴스화해야합니다.</target>
        </trans-unit>
        <trans-unit id="d267cbd84eb3f420d95a66983947566627ab3a8b" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when a relative</source>
          <target state="translated">친척 일 때 확인되지 않은 예외가 발생 함</target>
        </trans-unit>
        <trans-unit id="2499a9f69de797c14ebb69e77210a4a26c715a12" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when a string that is not a &lt;a href=&quot;charset#names&quot;&gt;legal charset name&lt;/a&gt; is used as such.</source>
          <target state="translated">&lt;a href=&quot;charset#names&quot;&gt;유효한 문자 세트 이름&lt;/a&gt; 이 아닌 문자열을 그대로 사용하면 검사되지 않은 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="277eb80c6ae5ba8e2601493375c57bfcb3a9c6b3" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to acquire a lock on a region of a file that overlaps a region already locked by the same Java virtual machine, or when another thread is already waiting to lock an overlapping region of the same file.</source>
          <target state="translated">동일한 Java 가상 머신이 이미 잠근 영역과 겹치는 파일 영역에서 잠금을 획득하려고 시도하거나 다른 스레드가 이미 동일한 파일의 겹치는 영역을 잠그기를 대기중인 경우 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="435ca20996bb0aa697cb4088c4dd74e8824536a5" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to bind or connect to a socket address of a type that is not supported.</source>
          <target state="translated">지원되지 않는 유형의 소켓 주소에 바인드하거나 연결하려고 할 때 확인되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b113768520b1f0028869bbfa35fbf4541f04935e" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to bind the socket a network oriented channel that is already bound.</source>
          <target state="translated">소켓에 이미 바인딩 된 네트워크 지향 채널을 바인딩하려고 할 때 확인되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0d24447f672c9eaa7a932152397ca2e539912661" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to connect a &lt;a href=&quot;socketchannel&quot;&gt;&lt;code&gt;SocketChannel&lt;/code&gt;&lt;/a&gt; for which a non-blocking connection operation is already in progress.</source>
          <target state="translated">비 차단 연결 작업이 이미 진행중인 &lt;a href=&quot;socketchannel&quot;&gt; &lt;code&gt;SocketChannel&lt;/code&gt; &lt;/a&gt; 에 연결하려고하면 검사되지 않은 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="13993b1d2181a8eeb04861474cdcd304ee1b2d63" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to connect a &lt;a href=&quot;socketchannel&quot;&gt;&lt;code&gt;SocketChannel&lt;/code&gt;&lt;/a&gt; that is already connected.</source>
          <target state="translated">이미 연결된 &lt;a href=&quot;socketchannel&quot;&gt; &lt;code&gt;SocketChannel&lt;/code&gt; &lt;/a&gt; 에 연결하려고 할 때 확인되지 않은 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="5b8b16873f645ba7f694d9e4dde8cb3f4b891f0d" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to construct a channel in a group that is shutdown or the completion handler for an I/O operation cannot be invoked because the channel group has terminated.</source>
          <target state="translated">종료 된 그룹에서 채널을 구성하려고 시도하거나 채널 그룹이 종료되어 I / O 조작에 대한 완료 핸들러를 호출 할 때 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d3ac386b0cf0b286b3904b61d65262f7b5f79363" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to initiate an accept operation on a channel and a previous accept operation has not completed.</source>
          <target state="translated">채널에서 수락 작업을 시작하려고 시도했지만 이전 수락 작업이 완료되지 않은 경우 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c2956f68a99f854afa4afbf466dcd8f3e1417b4d" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to invoke a method on an object created by one file system provider with a parameter created by a different file system provider.</source>
          <target state="translated">다른 파일 시스템 제공자가 작성한 매개 변수를 사용하여 한 파일 시스템 제공자가 작성한 오브젝트에서 메소드를 호출하려고 시도 할 때 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0f33ed4970f13579d0befc70ed451d604c534ccf" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to invoke a network operation upon an unresolved socket address.</source>
          <target state="translated">해결되지 않은 소켓 주소에서 네트워크 작업을 호출하려고 할 때 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f921b7413b615d76bb1501354725a6420a08ad72" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to invoke an I/O operation upon a closed selector.</source>
          <target state="translated">닫힌 선택기에서 I / O 작업을 호출하려고 할 때 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="24ee7f8f935fce8778bd91858b00ab7527eebc6b" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to invoke an I/O operation upon a server socket channel that is not yet bound.</source>
          <target state="translated">아직 바인드되지 않은 서버 소켓 채널에서 I / O 작업을 호출하려고 할 때 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="156ee4a3f92363606bebae506918f6ce97858eca" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to invoke an I/O operation upon a socket channel that is not yet connected.</source>
          <target state="translated">아직 연결되지 않은 소켓 채널에서 I / O 작업을 호출하려고 시도하면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ac853a806fab4d09a07ccb3e976839bfbcbe95c9" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to invoke an operation on a directory stream that is closed.</source>
          <target state="translated">닫힌 디렉토리 스트림에서 조작을 호출하려고 시도 할 때 확인되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="faf2b1ac2b1ab55f1f21f216786d3e3487f69280" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to invoke an operation on a file and the file system is closed.</source>
          <target state="translated">파일에서 조작을 호출하려고 시도하고 파일 시스템이 닫히면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9a4d32f077ce7bb723d6d3064cec55da0a7de8f8" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to invoke an operation on a watch service that is closed.</source>
          <target state="translated">닫힌 시계 서비스에서 작업을 호출하려고 할 때 확인되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="57af465af4fc0fcf7ea9515590ee50fc536433da" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to open a channel in a group that was not created by the same provider.</source>
          <target state="translated">동일한 제공자가 작성하지 않은 그룹에서 채널을 열려고 시도 할 때 확인되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e5874b0ca4bfc396368c8807912a358d75a41937" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to read from a channel that was not originally opened for reading.</source>
          <target state="translated">원래 읽기 위해 열리지 않은 채널에서 읽으려고하면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e1df27db596fcf823c0fef3c02901d03b9fe3385" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to read from an asynchronous socket channel and a previous read has not completed.</source>
          <target state="translated">비동기 소켓 채널에서 읽기를 시도하고 이전 읽기가 완료되지 않은 경우 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9e1cdb3183844c82d6ebe30cc3ac9936dec55bf2" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to register a channel with a selector that was not created by the provider that created the channel.</source>
          <target state="translated">채널을 작성한 제공자가 작성하지 않은 선택기에 채널을 등록하려고 시도 할 때 확인되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9bb3da70355633112d2b3845e518e1df74d6cfdb" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to reset a buffer when its mark is not defined.</source>
          <target state="translated">마크가 정의되지 않은 경우 버퍼를 재설정하려고 할 때 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="20865fdc227d039f8eba32e1f1f3c2954486e199" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to update an object associated with a &lt;a href=&quot;filesystem#isReadOnly--&quot;&gt;&lt;code&gt;read-only&lt;/code&gt;&lt;/a&gt;&lt;code&gt;FileSystem&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;filesystem#isReadOnly--&quot;&gt; &lt;code&gt;read-only&lt;/code&gt; &lt;/a&gt; &lt;code&gt;FileSystem&lt;/code&gt; 과 연관된 객체를 업데이트하려고 할 때 검사되지 않은 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="a6cd75ee756b60fd15d10b4fe71e0c926dae5c93" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to use a selection key that is no longer valid.</source>
          <target state="translated">더 이상 유효하지 않은 선택 키를 사용하려고하면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bfa6f3090d433a47b7c93aaa78e4f8446c792fc4" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to write to a channel that was not originally opened for writing.</source>
          <target state="translated">원래 쓰기 위해 열리지 않은 채널에 쓰려고 할 때 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0880870aac5a8356bf4bd79b441c1222ece9ce55" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an attempt is made to write to an asynchronous socket channel and a previous write has not completed.</source>
          <target state="translated">비동기 소켓 채널에 쓰려고 시도하고 이전 쓰기가 완료되지 않은 경우 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8d18bc79fdc894ad582d95a81c85486f91d902f3" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an illegal combination flags is given.</source>
          <target state="translated">잘못된 조합 플래그가 제공되면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="286989cc9c9d7d6d63c621753eef5f41ad9ac840" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an unknown conversion is given.</source>
          <target state="translated">알 수없는 변환이 제공 될 때 확인되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5e6f44e8033b6ed65a20f40ab218d6d6b1fd296f" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when an unknown flag is given.</source>
          <target state="translated">알 수없는 플래그가 주어지면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25dd9334c9e84a5908106a98705aa41ca78b68b3" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when duplicate flags are provided in the format specifier.</source>
          <target state="translated">형식 지정자에 중복 플래그가 제공되면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fbe3b163ed9e1c44d3fc0319742fc785c33ba57b" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when no support is available for a requested charset.</source>
          <target state="translated">요청 된 문자셋에 대한 지원이없는 경우 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="90fb58c8ca6fed54940d5ee6a161039c854dc127" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when path string cannot be converted into a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; because the path string contains invalid characters, or the path string is invalid for other file system specific reasons.</source>
          <target state="translated">경로 문자열에 유효하지 않은 문자가 포함되어 있거나 다른 파일 시스템 특정 이유로 경로 문자열이 유효하지 않으므로 경로 문자열을 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 로 변환 할 수없는 경우 검사되지 않은 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="6d9f28c394071875c5dac74e067002e4fcd6e646" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when the &lt;a href=&quot;socketchannel#finishConnect--&quot;&gt;&lt;code&gt;finishConnect&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;socketchannel&quot;&gt;&lt;code&gt;SocketChannel&lt;/code&gt;&lt;/a&gt; is invoked without first successfully invoking its &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">때 체크되지 않는 예외가 슬로우 &lt;a href=&quot;socketchannel#finishConnect--&quot;&gt; &lt;code&gt;finishConnect&lt;/code&gt; &lt;/a&gt; (A)의 방법 &lt;a href=&quot;socketchannel&quot;&gt; &lt;code&gt;SocketChannel&lt;/code&gt; &lt;/a&gt; 처음 성공적으로 호출하지 않고 호출 &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 방법을.</target>
        </trans-unit>
        <trans-unit id="d944f428d7018c0000cebb7c5ecaf68035b14712" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when the argument corresponding to the format specifier is of an incompatible type.</source>
          <target state="translated">형식 지정자에 해당하는 인수가 호환되지 않는 유형 인 경우 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ee6536f016346243961a931d2ee6d0de8d19893a" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when the format width is a negative value other than &lt;code&gt;-1&lt;/code&gt; or is otherwise unsupported.</source>
          <target state="translated">형식 너비가 &lt;code&gt;-1&lt;/code&gt; 이외의 음수 이거나 지원되지 않는 경우 검사되지 않은 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="aed0dd1bfc585b9c9295528db6eadb3b289de8e7" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when the format width is required.</source>
          <target state="translated">형식 너비가 필요한 경우 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a4a602e975d873670f98ddd502be6cce3cd93f93" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when the formatter has been closed.</source>
          <target state="translated">포맷터가 닫히면 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ec12d76d9088e0051515a427aeb3d5ddb40999b" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when the precision is a negative value other than &lt;code&gt;-1&lt;/code&gt;, the conversion does not support a precision, or the value is otherwise unsupported.</source>
          <target state="translated">정밀도가 &lt;code&gt;-1&lt;/code&gt; 이외의 음수이거나 변환이 정밀도를 지원하지 않거나 값이 지원되지 않으면 예외가 발생 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1cfba30c11cff3f62e1167a9bf09c427e7b08466" translate="yes" xml:space="preserve">
          <source>Unchecked exception thrown when there is a format specifier which does not have a corresponding argument or if an argument index refers to an argument that does not exist.</source>
          <target state="translated">해당 인수가없는 형식 지정자가 있거나 인수 색인이 존재하지 않는 인수를 참조하는 경우 검사되지 않은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ed3d719229c17677bf21cc71804461e491f985f6" translate="yes" xml:space="preserve">
          <source>UncheckedIOException</source>
          <target state="translated">UncheckedIOException</target>
        </trans-unit>
        <trans-unit id="93c72482c3890e8cd011d98e1ca46a5c50f77a63" translate="yes" xml:space="preserve">
          <source>UncheckedIOException.getCause()</source>
          <target state="translated">UncheckedIOException.getCause()</target>
        </trans-unit>
        <trans-unit id="11d4da9d295e35c2f24cd3477e20f0d43387a81c" translate="yes" xml:space="preserve">
          <source>Uncompressed RLE</source>
          <target state="translated">비 압축 RLE</target>
        </trans-unit>
        <trans-unit id="96a649e39aebed7fe554d42ad3dafead8916bc9e" translate="yes" xml:space="preserve">
          <source>Uncompresses bytes into specified buffer. Returns actual number of bytes uncompressed. A return value of 0 indicates that needsInput() or needsDictionary() should be called in order to determine if more input data or a preset dictionary is required. In the latter case, getAdler() can be used to get the Adler-32 value of the dictionary required.</source>
          <target state="translated">지정된 버퍼로 바이트를 압축 해제합니다. 압축되지 않은 실제 바이트 수를 반환합니다. 리턴 값 0은 추가 입력 데이터 또는 사전 설정 사전이 필요한지 판별하기 위해 needsInput () 또는 needsDictionary ()를 호출해야 함을 나타냅니다. 후자의 경우, getAdler ()를 사용하여 필요한 사전의 Adler-32 값을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67bf0647177751ef6ad483af5d64e7cce16145e0" translate="yes" xml:space="preserve">
          <source>Unconditionally sets the value of both the reference and mark.</source>
          <target state="translated">참조 및 마크 값을 무조건 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e5226ae7f34d9757cabaa8967954e8be5660f28f" translate="yes" xml:space="preserve">
          <source>Unconditionally sets the value of both the reference and stamp.</source>
          <target state="translated">참조 및 스탬프 모두의 값을 무조건 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0f0f8a154114fb48c996c6969be334ecc94085ef" translate="yes" xml:space="preserve">
          <source>Unconditionally sets to the given value.</source>
          <target state="translated">주어진 값으로 무조건 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ddf8ff6da81b4a6b95832c5db9878f3606d04e3e" translate="yes" xml:space="preserve">
          <source>UndeclaredThrowableException</source>
          <target state="translated">UndeclaredThrowableException</target>
        </trans-unit>
        <trans-unit id="94d19299e822a12dccbaeb85f2a9777689bd0d61" translate="yes" xml:space="preserve">
          <source>UndeclaredThrowableException.getCause()</source>
          <target state="translated">UndeclaredThrowableException.getCause()</target>
        </trans-unit>
        <trans-unit id="a0594780bb1c310fc409107d196147c29318aff9" translate="yes" xml:space="preserve">
          <source>UndeclaredThrowableException.getUndeclaredThrowable()</source>
          <target state="translated">UndeclaredThrowableException.getUndeclaredThrowable()</target>
        </trans-unit>
        <trans-unit id="a2570f4d995169cd25ade0e53aebb8dd50e4a603" translate="yes" xml:space="preserve">
          <source>Undefined bidirectional character type. Undefined &lt;code&gt;char&lt;/code&gt; values have undefined directionality in the Unicode specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbaaf9491ec8900da89e334f8da7b5c4a9929fa" translate="yes" xml:space="preserve">
          <source>Under abnormal conditions the underlying connection may be broken by the remote host or the network software (for example a connection reset in the case of TCP connections). When a broken connection is detected by the network software the following applies to the returned input stream :-</source>
          <target state="translated">비정상적인 조건에서 원격 호스트 또는 네트워크 소프트웨어에 의해 기본 연결이 끊어 질 수 있습니다 (예 : TCP 연결의 경우 연결 재설정). 네트워크 소프트웨어가 끊어진 연결을 감지하면 반환 된 입력 스트림에 다음이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e11de14e15a4ab51d23969d4f035aaf8234d6b20" translate="yes" xml:space="preserve">
          <source>Under some circumstances a bean may be run on servers where a GUI is not available.</source>
          <target state="translated">경우에 따라 GUI를 사용할 수없는 서버에서 Bean이 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="496ebb655be961f65af4f7534af7890575bf1cd7" translate="yes" xml:space="preserve">
          <source>Under some circumstances a bean may be run on servers where a GUI is not available. This interface can be used to query a bean to determine whether it absolutely needs a gui, and to advise the bean whether a GUI is available.</source>
          <target state="translated">경우에 따라 GUI를 사용할 수없는 서버에서 Bean이 실행될 수 있습니다. 이 인터페이스는 Bean을 쿼리하여 GUI가 절대적으로 필요한지 여부를 판별하고 Bean이 GUI를 사용할 수 있는지 여부를 통지하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="928fdfd0f57704f30c4dae168d8adda1932c6219" translate="yes" xml:space="preserve">
          <source>Under the hood, a date-time attribute is stored as a value of class &lt;code&gt;
 java.util.Date&lt;/code&gt;. You can get a date-time attribute's Date value by calling &lt;a href=&quot;datetimesyntax#getValue--&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt;. A date-time attribute's Date value is established when it is constructed (see &lt;a href=&quot;datetimesyntax#DateTimeSyntax-java.util.Date-&quot;&gt;&lt;code&gt;DateTimeSyntax(Date)&lt;/code&gt;&lt;/a&gt;). Once constructed, a date-time attribute's value is immutable.</source>
          <target state="translated">후드에서 날짜-시간 속성은 클래스 &lt;code&gt; java.util.Date&lt;/code&gt; 의 값으로 저장됩니다 . &lt;a href=&quot;datetimesyntax#getValue--&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt; 를 호출하여 날짜-시간 속성의 Date 값을 얻을 수 있습니다 . 날짜-시간 속성의 Date 값은 구성 될 때 설정됩니다 ( &lt;a href=&quot;datetimesyntax#DateTimeSyntax-java.util.Date-&quot;&gt; &lt;code&gt;DateTimeSyntax(Date)&lt;/code&gt; &lt;/a&gt; 참조 ). 생성 된 날짜-시간 속성의 값은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a9de41378b06507128c84abbed213d459ad8c6a1" translate="yes" xml:space="preserve">
          <source>Under the hood, an enumeration value is just an integer, a different integer for each enumeration value within an enumeration class. You can get an enumeration value's integer value by calling &lt;a href=&quot;enumsyntax#getValue--&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt;. An enumeration value's integer value is established when it is constructed (see &lt;a href=&quot;enumsyntax#EnumSyntax-int-&quot;&gt;&lt;code&gt;EnumSyntax(int)&lt;/code&gt;&lt;/a&gt;). Since the constructor is protected, the only possible enumeration values are the singleton objects declared in the enumeration class; additional enumeration values cannot be created at run time.</source>
          <target state="translated">후드 아래에서 열거 형 값은 열거 형 클래스 내의 각 열거 형 값에 대해 다른 정수인 정수입니다. &lt;a href=&quot;enumsyntax#getValue--&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt; 를 호출하여 열거 형 값의 정수 값을 얻을 수 있습니다 . 열거 치의 정수 치가 구축되면 확립됩니다 ( &lt;a href=&quot;enumsyntax#EnumSyntax-int-&quot;&gt; &lt;code&gt;EnumSyntax(int)&lt;/code&gt; &lt;/a&gt; 참조 ). 생성자가 보호되기 때문에 가능한 열거 형 값은 열거 형 클래스에서 선언 된 싱글 톤 객체입니다. 런타임에는 추가 열거 형 값을 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="366df636c9c0b885eea56577dcc6daabb1e2a605" translate="yes" xml:space="preserve">
          <source>Under the hood, an integer attribute is just an integer. You can get an integer attribute's integer value by calling &lt;a href=&quot;integersyntax#getValue--&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt;. An integer attribute's integer value is established when it is constructed (see &lt;a href=&quot;integersyntax#IntegerSyntax-int-&quot;&gt;&lt;code&gt;IntegerSyntax(int)&lt;/code&gt;&lt;/a&gt;). Once constructed, an integer attribute's value is immutable.</source>
          <target state="translated">후드에서 정수 속성은 정수입니다. &lt;a href=&quot;integersyntax#getValue--&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt; 를 호출하여 정수 속성의 정수 값을 얻을 수 있습니다 . 정수 속성의 정수 값은 생성 될 때 설정됩니다 ( &lt;a href=&quot;integersyntax#IntegerSyntax-int-&quot;&gt; &lt;code&gt;IntegerSyntax(int)&lt;/code&gt; &lt;/a&gt; 참조 ). 일단 생성되면 정수 속성의 값은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="befde3cad169af590a27942ec587ed85bf818337" translate="yes" xml:space="preserve">
          <source>Underflow</source>
          <target state="translated">Underflow</target>
        </trans-unit>
        <trans-unit id="e8bdb4c5722f19961e3d952e31f65687738c3d81" translate="yes" xml:space="preserve">
          <source>Underlying security services instantiate and pass a &lt;code&gt;ChoiceCallback&lt;/code&gt; to the &lt;code&gt;handle&lt;/code&gt; method of a &lt;code&gt;CallbackHandler&lt;/code&gt; to display a list of choices and to retrieve the selected choice(s).</source>
          <target state="translated">기본 보안 서비스는 &lt;code&gt;ChoiceCallback&lt;/code&gt; 을 인스턴스화하고 &lt;code&gt;CallbackHandler&lt;/code&gt; 의 &lt;code&gt;handle&lt;/code&gt; 메소드로 전달하여 선택 사항 목록을 표시하고 선택된 선택 사항을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="76d84e61a90a536a4031970e0344084950f7b8d5" translate="yes" xml:space="preserve">
          <source>Underlying security services instantiate and pass a &lt;code&gt;ConfirmationCallback&lt;/code&gt; to the &lt;code&gt;handle&lt;/code&gt; method of a &lt;code&gt;CallbackHandler&lt;/code&gt; to ask for YES/NO, OK/CANCEL, YES/NO/CANCEL or other similar confirmations.</source>
          <target state="translated">기본 보안 서비스 는 YES / NO, OK / CANCEL, YES / NO / CANCEL 또는 기타 유사한 확인을 요청하기 위해 &lt;code&gt;ConfirmationCallback&lt;/code&gt; 을 인스턴스화하고 &lt;code&gt;CallbackHandler&lt;/code&gt; 의 &lt;code&gt;handle&lt;/code&gt; 메소드로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="d29f481afabc83cc76a4b0989fe079d5dbe63e7d" translate="yes" xml:space="preserve">
          <source>Underlying security services instantiate and pass a &lt;code&gt;LanguageCallback&lt;/code&gt; to the &lt;code&gt;handle&lt;/code&gt; method of a &lt;code&gt;CallbackHandler&lt;/code&gt; to retrieve the &lt;code&gt;Locale&lt;/code&gt; used for localizing text.</source>
          <target state="translated">기본 보안 서비스는 텍스트를 현지화하는 데 사용되는 &lt;code&gt;Locale&lt;/code&gt; 을 검색하기 위해 &lt;code&gt;LanguageCallback&lt;/code&gt; 을 인스턴스화하고 &lt;code&gt;CallbackHandler&lt;/code&gt; 의 &lt;code&gt;handle&lt;/code&gt; 메서드에 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="25b4cfa71062c2d40ac8a2bad2ff04499ef16e86" translate="yes" xml:space="preserve">
          <source>Underlying security services instantiate and pass a &lt;code&gt;NameCallback&lt;/code&gt; to the &lt;code&gt;handle&lt;/code&gt; method of a &lt;code&gt;CallbackHandler&lt;/code&gt; to retrieve name information.</source>
          <target state="translated">기본 보안 서비스는 &lt;code&gt;NameCallback&lt;/code&gt; 을 인스턴스화하고 &lt;code&gt;CallbackHandler&lt;/code&gt; 의 &lt;code&gt;handle&lt;/code&gt; 메소드에 전달하여 이름 정보를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="e3851418f38c3098f25b6389f9ca0a372f829206" translate="yes" xml:space="preserve">
          <source>Underlying security services instantiate and pass a &lt;code&gt;PasswordCallback&lt;/code&gt; to the &lt;code&gt;handle&lt;/code&gt; method of a &lt;code&gt;CallbackHandler&lt;/code&gt; to retrieve password information.</source>
          <target state="translated">기본 보안 서비스는 &lt;code&gt;PasswordCallback&lt;/code&gt; 을 인스턴스화 하여 &lt;code&gt;CallbackHandler&lt;/code&gt; 의 &lt;code&gt;handle&lt;/code&gt; 메소드에 전달하여 비밀번호 정보를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="5ff6cc4b168425320bbbd5832a1a19cfe63741bc" translate="yes" xml:space="preserve">
          <source>Underlying security services instantiate and pass a &lt;code&gt;TextInputCallback&lt;/code&gt; to the &lt;code&gt;handle&lt;/code&gt; method of a &lt;code&gt;CallbackHandler&lt;/code&gt; to retrieve generic text information.</source>
          <target state="translated">기본 보안 서비스 는 일반 텍스트 정보를 검색하기 위해 &lt;code&gt;TextInputCallback&lt;/code&gt; 을 인스턴스화하고 &lt;code&gt;CallbackHandler&lt;/code&gt; 의 &lt;code&gt;handle&lt;/code&gt; 메소드에 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="1a0909265b72cb5b61ee8be00fbf579ba33d7e34" translate="yes" xml:space="preserve">
          <source>Underlying security services instantiate and pass a &lt;code&gt;TextOutputCallback&lt;/code&gt; to the &lt;code&gt;handle&lt;/code&gt; method of a &lt;code&gt;CallbackHandler&lt;/code&gt; to display information messages, warning messages and error messages.</source>
          <target state="translated">기본 보안 서비스는 &lt;code&gt;TextOutputCallback&lt;/code&gt; 을 인스턴스화하고 &lt;code&gt;CallbackHandler&lt;/code&gt; 의 &lt;code&gt;handle&lt;/code&gt; 메소드에 전달하여 정보 메시지, 경고 메시지 및 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="290fceaaab1e7c06e3e0d7f84f872a2a6695d5b6" translate="yes" xml:space="preserve">
          <source>Underlying security services make requests for different types of information by passing individual Callbacks to the &lt;code&gt;CallbackHandler&lt;/code&gt;. The &lt;code&gt;CallbackHandler&lt;/code&gt; implementation decides how to retrieve and display information depending on the Callbacks passed to it. For example, if the underlying service needs a username and password to authenticate a user, it uses a &lt;code&gt;NameCallback&lt;/code&gt; and &lt;code&gt;PasswordCallback&lt;/code&gt;. The &lt;code&gt;CallbackHandler&lt;/code&gt; can then choose to prompt for a username and password serially, or to prompt for both in a single window.</source>
          <target state="translated">기본 보안 서비스는 개별 콜백을 전달하여 서로 다른 유형의 정보에 대한 요청을 &lt;code&gt;CallbackHandler&lt;/code&gt; . &lt;code&gt;CallbackHandler&lt;/code&gt; 구현을 검색하고 콜백에 따라 표시 정보가 전달하는 방법을 결정합니다. 예를 들어, 기본 서비스에 사용자를 인증하기 위해 사용자 이름과 비밀번호가 필요한 경우 &lt;code&gt;NameCallback&lt;/code&gt; 및 &lt;code&gt;PasswordCallback&lt;/code&gt; 을 사용합니다 . &lt;code&gt;CallbackHandler&lt;/code&gt; 다음 하나의 창에서 모두 직렬 또는 프롬프트에 사용자 이름과 암호를 묻는 메시지를 표시하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96405a3e7c6a3eb6f3d632029bdeaa54097711bc" translate="yes" xml:space="preserve">
          <source>Underlying security services use this constructor if they require a confirmation different from the available preset confirmations provided (for example, CONTINUE/ABORT or STOP/GO). The confirmation options are listed in the &lt;code&gt;options&lt;/code&gt; array, and are displayed by the &lt;code&gt;CallbackHandler&lt;/code&gt; implementation in a manner consistent with the way preset options are displayed.</source>
          <target state="translated">기본 보안 서비스는 제공된 사용 가능한 사전 설정 확인과 다른 확인이 필요한 경우 (예 : CONTINUE / ABORT 또는 STOP / GO)이 생성자를 사용합니다. 확인 옵션은 &lt;code&gt;options&lt;/code&gt; 배열에 나열되며 사전 설정 옵션이 표시되는 방식과 일치하는 방식으로 &lt;code&gt;CallbackHandler&lt;/code&gt; 구현에 의해 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0c426c3051e2d9a96257412c66e82ad55d0eb2d0" translate="yes" xml:space="preserve">
          <source>Underlying security services use this constructor if they require either a YES/NO, YES/NO/CANCEL or OK/CANCEL confirmation.</source>
          <target state="translated">기본 보안 서비스는 YES / NO, YES / NO / CANCEL 또는 OK / CANCEL 확인이 필요한 경우이 생성자를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e99c8c8f044243cdd77d79510c758ad4ea8cac55" translate="yes" xml:space="preserve">
          <source>Unescaped value.</source>
          <target state="translated">이스케이프되지 않은 값.</target>
        </trans-unit>
        <trans-unit id="337dc6cc9266d20150aad2dd8d1833782ce22fd0" translate="yes" xml:space="preserve">
          <source>Unfortunately, as the Earth rotates the length of the day varies. In addition, over time the average length of the day is getting longer as the Earth slows. As a result, the length of a solar day in 2012 is slightly longer than 86400 SI seconds. The actual length of any given day and the amount by which the Earth is slowing are not predictable and can only be determined by measurement. The UT1 time-scale captures the accurate length of day, but is only available some time after the day has completed.</source>
          <target state="translated">불행히도, 지구가 회전함에 따라 하루의 길이는 다양합니다. 또한 시간이 지남에 따라 지구가 느려지면서 하루의 평균 길이가 길어집니다. 결과적으로 2012 년 태양 일의 길이는 86400 SI 초보다 약간 더 깁니다. 특정 날짜의 실제 길이와 지구가 둔화되는 양은 예측할 수 없으며 측정에 의해서만 결정될 수 있습니다. UT1 시간 척도는 정확한 하루의 길이를 캡처하지만 하루가 끝나고 얼마 후에 만 ​​사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30bb24eabe2b477078e8b3566571807ff1ee7139" translate="yes" xml:space="preserve">
          <source>Unicode Character Representations</source>
          <target state="translated">유니 코드 문자 표현</target>
        </trans-unit>
        <trans-unit id="bcac43ace94451be5d2629cfeb9fb8c81cde73db" translate="yes" xml:space="preserve">
          <source>Unicode locale/language extension</source>
          <target state="translated">유니 코드 로캘 / 언어 확장</target>
        </trans-unit>
        <trans-unit id="053ef1ed524f384df88618fc3f641f0d64e558de" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Arabic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;아랍어&quot;.</target>
        </trans-unit>
        <trans-unit id="804c14e144f3191c1d5e7f8083d153ced1ab0fb4" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Armenian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;아르메니아어&quot;.</target>
        </trans-unit>
        <trans-unit id="547f41683da85ac4d13ac6f543b340ebbd962d51" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Avestan&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Avestan&quot;.</target>
        </trans-unit>
        <trans-unit id="530af3bd1e71b00c1fc937f72d3783084f58e7e7" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Balinese&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Balinese&quot;.</target>
        </trans-unit>
        <trans-unit id="a0f80cdeb1e8eeb0a49821d2ce62117bddfaf25f" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Bamum&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Bamum&quot;.</target>
        </trans-unit>
        <trans-unit id="81dab1961d87c3313708569c4a1037ffe6b57d2e" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Batak&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Batak&quot;.</target>
        </trans-unit>
        <trans-unit id="124049c38146ec1566a35df0edd1e6749e1e2d99" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Bengali&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;벵골어&quot;.</target>
        </trans-unit>
        <trans-unit id="744aed529787164e939f98c1e91d43e012cbf733" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Bopomofo&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Bopomofo&quot;.</target>
        </trans-unit>
        <trans-unit id="70976cae6a1d03394e29bccfbf3102a29f03f905" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Brahmi&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Brahmi&quot;.</target>
        </trans-unit>
        <trans-unit id="b6616c63c2c0b59d68d7b2a52936f61e1cdc2aca" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Braille&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;점자&quot;.</target>
        </trans-unit>
        <trans-unit id="91dea030208a90d89bdf07dee486180ba4ed9689" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Buginese&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Buginese&quot;</target>
        </trans-unit>
        <trans-unit id="d0e6329774850258b1992c20dd6564f1d99099c2" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Buhid&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Buhid&quot;.</target>
        </trans-unit>
        <trans-unit id="ea11f050f59871f8731fe268cdc5ae163f2d0829" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Canadian_Aboriginal&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Canadian_Aboriginal&quot;.</target>
        </trans-unit>
        <trans-unit id="1113fa21c48b1282888108f56e6026ab5cadf247" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Carian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Carian&quot;.</target>
        </trans-unit>
        <trans-unit id="6e56bd0770627dcd436d66773bb54b9eee395660" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Chakma&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Chakma&quot;.</target>
        </trans-unit>
        <trans-unit id="f6b98d1b6f5b0afc6e8b3c025239485ed876e3e4" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Cham&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Cham&quot;.</target>
        </trans-unit>
        <trans-unit id="93282564c493ff4d5a6737d8b505c0bf73982e6a" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Cherokee&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Cherokee&quot;.</target>
        </trans-unit>
        <trans-unit id="1d7cc2d31ec6ad92907c4121889ab0da6fdf8309" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Common&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;공통&quot;.</target>
        </trans-unit>
        <trans-unit id="328eab1b59c4678403702060ac6d596e08b6c984" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Coptic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Coptic&quot;.</target>
        </trans-unit>
        <trans-unit id="e7b2c295555c3aaf04e767a4b4ea4edd9d1be070" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Cuneiform&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Cuneiform&quot;.</target>
        </trans-unit>
        <trans-unit id="00565ba9ff0a9159721089f8cfa3bc60db09d4ab" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Cypriot&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Cypriot&quot;.</target>
        </trans-unit>
        <trans-unit id="d2447929c0e3bf7d79ec286f4078cff510383cea" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Cyrillic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;키릴 자모&quot;.</target>
        </trans-unit>
        <trans-unit id="d6e6776c26a88fbcfb2e5b8ae25c27cbb8aa7ad3" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Deseret&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Deseret&quot;.</target>
        </trans-unit>
        <trans-unit id="187c3ed4dd3ae6a5d5b631ef856a31264815e48d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Devanagari&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Devanagari&quot;.</target>
        </trans-unit>
        <trans-unit id="fd5ab8a8ae6d27b0b14b922d0197e5c0af03c283" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Egyptian_Hieroglyphs&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Egyptian_Hieroglyphs&quot;</target>
        </trans-unit>
        <trans-unit id="dbef450b870d84d9556bd0613aac3eb893b434fb" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Ethiopic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Ethiopic&quot;.</target>
        </trans-unit>
        <trans-unit id="45e9515b16ec4fb8027b8bccdb141e22e14d4997" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Georgian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Georgian&quot;.</target>
        </trans-unit>
        <trans-unit id="033bd777af178c5f0976d3a41a63b1b18c2e273b" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Glagolitic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Glagolitic&quot;.</target>
        </trans-unit>
        <trans-unit id="aed77cefea897b146315a4061e31a5770df2327d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Gothic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Gothic&quot;.</target>
        </trans-unit>
        <trans-unit id="59c7b3e29aee89d1aceaa6052f8e9344a2164698" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Greek&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Greek&quot;.</target>
        </trans-unit>
        <trans-unit id="14330e838da03e871d740cc61cc32ec491e53072" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Gujarati&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;구자라트&quot;.</target>
        </trans-unit>
        <trans-unit id="0bf49ea458b6902009a3315460293410dfc9f437" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Gurmukhi&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Gurmukhi&quot;.</target>
        </trans-unit>
        <trans-unit id="3b72c03d8054ef7a423b2c85152b7fdfcfe2128d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Han&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Han&quot;.</target>
        </trans-unit>
        <trans-unit id="6c760db86076082ba8c98a884e9fb33f26fdd2ad" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Hangul&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;한글&quot;.</target>
        </trans-unit>
        <trans-unit id="026f02206c85f6abd0509d0c44417e8ce3a05979" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Hanunoo&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Hanunoo&quot;</target>
        </trans-unit>
        <trans-unit id="a81330b09fc87fc10b30527f2e28ab3597ab2c8a" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Hebrew&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;히브리어&quot;.</target>
        </trans-unit>
        <trans-unit id="b68eac202b5d1d8b51ef2b1154c648e24da75651" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Hiragana&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;히라가나&quot;.</target>
        </trans-unit>
        <trans-unit id="bad20089fae34988e6ac16f6e95141645aabf615" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Imperial_Aramaic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Imperial_Aramaic&quot;.</target>
        </trans-unit>
        <trans-unit id="9edf3d8a3af9ca212be1e7bcec0130c185524cbe" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Inherited&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;상 속됨&quot;.</target>
        </trans-unit>
        <trans-unit id="9865f1f63d33934fc041f4ad163c7eae5d0ee333" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Inscriptional_Pahlavi&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Inscriptional_Pahlavi&quot;.</target>
        </trans-unit>
        <trans-unit id="77497ae442e1330571dd2952b28cd60728e33c4d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Inscriptional_Parthian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Inscriptional_Parthian&quot;.</target>
        </trans-unit>
        <trans-unit id="f0aede2d39e861b920a2947cce7d0362649cae0b" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Javanese&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Javanese&quot;.</target>
        </trans-unit>
        <trans-unit id="2d6d3289c84ea7e88ffb7458ba238733d4e2f691" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Kaithi&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Kaithi&quot;.</target>
        </trans-unit>
        <trans-unit id="9694cf6b3e997dadf4e274b24c722e25c74db64d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Kannada&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Kannada&quot;</target>
        </trans-unit>
        <trans-unit id="ed6cb40425161aa8271b1e65d258b4f967dfdae4" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Katakana&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;카타카나&quot;.</target>
        </trans-unit>
        <trans-unit id="7fc390e44661973fea41ed277cf2380fd2635fcd" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Kayah_Li&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Kayah_Li&quot;.</target>
        </trans-unit>
        <trans-unit id="37a33e6ea3346e50c70ea92540eb5ac1fb60887f" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Kharoshthi&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Kharoshthi&quot;.</target>
        </trans-unit>
        <trans-unit id="9c35e408a97145cecd3cf51cf91458a02954726c" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Khmer&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Khmer&quot;.</target>
        </trans-unit>
        <trans-unit id="2140ca03364e40a5bda4808f06677bbfba2574ab" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Lao&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Lao&quot;.</target>
        </trans-unit>
        <trans-unit id="373599b3eda55fafa1af41c39cec24ae1795c2a5" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Latin&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;라틴&quot;.</target>
        </trans-unit>
        <trans-unit id="b894d246ce52922d259ce5da4c06e393259648ba" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Lepcha&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Lepcha&quot;.</target>
        </trans-unit>
        <trans-unit id="12886bb1285ea8998dbc997a8cd9219472dad99a" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Limbu&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Limbu&quot;.</target>
        </trans-unit>
        <trans-unit id="9dda6335f6a3145f90e23eeb661d2542de0769b5" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Linear_B&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Linear_B&quot;.</target>
        </trans-unit>
        <trans-unit id="bd720e3a22d347ec6a0f42ae423884b373d5c70d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Lisu&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Lisu&quot;.</target>
        </trans-unit>
        <trans-unit id="70e2f1004dd521920a99967ee4ca7a4bf1af7e95" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Lycian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Lycian&quot;.</target>
        </trans-unit>
        <trans-unit id="badb092a5e2eb89d3f33a47dcb5e13a1bf0abe72" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Lydian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Lydian&quot;.</target>
        </trans-unit>
        <trans-unit id="18731671f5476ce120825cbe66cc991de3417199" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Malayalam&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Malayalam&quot;</target>
        </trans-unit>
        <trans-unit id="e15799297dc38ab88d67762878ddf87cc291d86c" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Mandaic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Mandaic&quot;</target>
        </trans-unit>
        <trans-unit id="66d17500a013180f4d9ff0dec3f8e9945f373ae0" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Meetei_Mayek&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Meetei_Mayek&quot;.</target>
        </trans-unit>
        <trans-unit id="24f6710ee70c83e499fc73b86e5bcf05f9d8741c" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Meroitic Cursive&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Meroitic Cursive&quot;.</target>
        </trans-unit>
        <trans-unit id="086f30f78c6e7d1aa8910bfec0d36755d2e5bf25" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Meroitic Hieroglyphs&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Meroitic Hieroglyphs&quot;</target>
        </trans-unit>
        <trans-unit id="274c57a30fa599ee4062490eac2ec9e7a07e3aaa" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Miao&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Miao&quot;.</target>
        </trans-unit>
        <trans-unit id="62a39f78b3672523b1349c8d439ed481a651e645" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Mongolian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Mongolian&quot;</target>
        </trans-unit>
        <trans-unit id="a84f0968830b51c23d01179d713664ae0b4cc600" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Myanmar&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;미얀마&quot;.</target>
        </trans-unit>
        <trans-unit id="2a9625dcab087eb0cb7c75e07c5716ade59aea78" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;New_Tai_Lue&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;New_Tai_Lue&quot;.</target>
        </trans-unit>
        <trans-unit id="f4a6f7994367e7c71a62518baa24415859de3053" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Nko&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Nko&quot;.</target>
        </trans-unit>
        <trans-unit id="4289ca1bd5e24164bc68722457342898e92255bf" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Ogham&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Ogham&quot;.</target>
        </trans-unit>
        <trans-unit id="55084ecde9e40f8ea382702092f2b348dfa6b014" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Ol_Chiki&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Ol_Chiki&quot;</target>
        </trans-unit>
        <trans-unit id="f04b0af5686a09017d9ffb348bf2f5667b3e8286" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Old_Italic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Old_Italic&quot;</target>
        </trans-unit>
        <trans-unit id="d256f32a07f9ae57f24ab2150f287e2a4f66d0b9" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Old_Persian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Old_Persian&quot;</target>
        </trans-unit>
        <trans-unit id="7f03ed5cab2ed460b52d838d2358d419da8d2b72" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Old_South_Arabian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Old_South_Arabian&quot;.</target>
        </trans-unit>
        <trans-unit id="7458837c8d205271d491f6a4a0d83d4b6be2ccc6" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Old_Turkic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Old_Turkic&quot;</target>
        </trans-unit>
        <trans-unit id="be925bcae868753090a801414b1568cbe403bec1" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Oriya&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Oriya&quot;.</target>
        </trans-unit>
        <trans-unit id="7421b1d595a1936a6c6f5d5e310a84bf8c585282" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Osmanya&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Osmanya&quot;</target>
        </trans-unit>
        <trans-unit id="29283e02b8ee1be48d10538f37ebf9f8f5c1b7e6" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Phags_Pa&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Phags_Pa&quot;.</target>
        </trans-unit>
        <trans-unit id="335adcbac6225e12b90721488c4d66207f2c510f" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Phoenician&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;페니키아&quot;.</target>
        </trans-unit>
        <trans-unit id="f06c05dbc40af1565168b6cd0f98861eb8560460" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Rejang&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Rejang&quot;.</target>
        </trans-unit>
        <trans-unit id="237b6bb098a579d732a832e3c7bd8a956da2535d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Runic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Runic&quot;.</target>
        </trans-unit>
        <trans-unit id="cd3178c9be247dac0bf7dc98dd69e191f8b97194" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Samaritan&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Samaritan&quot;</target>
        </trans-unit>
        <trans-unit id="45f7cc43204b1aecc76b69297c5c5dfba5dd81e2" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Saurashtra&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Saurashtra&quot;.</target>
        </trans-unit>
        <trans-unit id="5d80a59e79b34875896d5a25bf22d03eb7897b9a" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Sharada&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Sharada&quot;.</target>
        </trans-unit>
        <trans-unit id="69186bb35d1402e7122aefcae42f2449cc0b22ab" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Shavian&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Shavian&quot;.</target>
        </trans-unit>
        <trans-unit id="e4bac58633e7d3be4ff48e240661ca916ea93e91" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Sinhala&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Sinhala&quot;.</target>
        </trans-unit>
        <trans-unit id="59f69c78754d57e66bee3662db45cf58f6cdd64e" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Sora Sompeng&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Sora Sompeng&quot;.</target>
        </trans-unit>
        <trans-unit id="91f665b2822b74a5945bf3afcc4e4cdd6fac1b0f" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Sundanese&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Sundanese&quot;</target>
        </trans-unit>
        <trans-unit id="57ac5bb5026f081bff72ff9353d99935ad547c4b" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Syloti_Nagri&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Syloti_Nagri&quot;.</target>
        </trans-unit>
        <trans-unit id="6a1d560f018dbd98c67cebdac2b292262f19b147" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Syriac&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Syriac&quot;.</target>
        </trans-unit>
        <trans-unit id="5959287b63af262dec6aafe5d5a7a768f0cfe6b4" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tagalog&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Tagalog&quot;.</target>
        </trans-unit>
        <trans-unit id="c8a70b11e4c71250eb93056169942ca0cadbb514" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tagbanwa&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Tagbanwa&quot;.</target>
        </trans-unit>
        <trans-unit id="8484c56958ae9e391e2da07c1de4c783d2d9813e" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tai_Le&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Tai_Le&quot;</target>
        </trans-unit>
        <trans-unit id="88b04e651437bd0a0d20db85b754b439a48eb67d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tai_Tham&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Tai_Tham&quot;.</target>
        </trans-unit>
        <trans-unit id="f38a07b0af9c32a1f3f09108acdc09fd75a1ca5c" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tai_Viet&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Tai_Viet&quot;.</target>
        </trans-unit>
        <trans-unit id="c0ab3abca5f58e0c2fba6f829b3e518bac7a70c9" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Takri&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Takri&quot;.</target>
        </trans-unit>
        <trans-unit id="0952a5325cc57d9ab4b144b40fe5608f38dd2521" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tamil&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Tamil&quot;.</target>
        </trans-unit>
        <trans-unit id="63c2f06b87376149dfa602389988b9177d254358" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Telugu&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;텔루구 어&quot;.</target>
        </trans-unit>
        <trans-unit id="55ef1474277b907b1f089581e563c78d10ee847f" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Thaana&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Thaana&quot;.</target>
        </trans-unit>
        <trans-unit id="a790244317ef6f8f22e001515f3afa6581f3b63d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Thai&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;태국어&quot;.</target>
        </trans-unit>
        <trans-unit id="0d74a2f8886f4b4275b027ea6634a3f028d5e624" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tibetan&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;티벳어&quot;.</target>
        </trans-unit>
        <trans-unit id="447194ee252203f005ae895e41c573a1b0e32c7e" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tifinagh&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Tifinagh&quot;.</target>
        </trans-unit>
        <trans-unit id="86a8af449125c52e87cbc04402ca695102962af0" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Ugaritic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Ugaritic&quot;.</target>
        </trans-unit>
        <trans-unit id="fbca9a168a0a2e469517e59f4adafef081385463" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Unknown&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;알 수 없음&quot;.</target>
        </trans-unit>
        <trans-unit id="fe838de5b6e22ca16b5d3eff936f49efb7772533" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Vai&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Vai&quot;.</target>
        </trans-unit>
        <trans-unit id="d6c41a22fa95d87caa8eb9aa104e0600de4fed53" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Yi&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Yi&quot;.</target>
        </trans-unit>
        <trans-unit id="7305a77af6d86e2cb16fbc42ea10aae3d23cbca8" translate="yes" xml:space="preserve">
          <source>Unicode scripts, blocks, categories and binary properties are written with the &lt;code&gt;\p&lt;/code&gt; and &lt;code&gt;\P&lt;/code&gt; constructs as in Perl. &lt;code&gt;\p{&lt;/code&gt;</source>
          <target state="translated">유니 코드 스크립트, 블록, 범주 및 이진 속성은 Perl에서 와 같이 &lt;code&gt;\p&lt;/code&gt; 및 &lt;code&gt;\P&lt;/code&gt; 구문으로 작성됩니다. &lt;code&gt;\p{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4247bd31bdb74c5074c844a1f51c93a859ff8578" translate="yes" xml:space="preserve">
          <source>Unicode support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f5ec45d7a5a3a4d9fd6dfd9fa57c477e519399" translate="yes" xml:space="preserve">
          <source>Unicode-aware case folding can also be enabled via the embedded flag expression &lt;code&gt;(?u)&lt;/code&gt;.</source>
          <target state="translated">임베디드 플래그 표현식 &lt;code&gt;(?u)&lt;/code&gt; 통해 유니 코드 인식 케이스 폴딩을 활성화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="df43d35e4f1866ff3652c8576f1fd5c446edad72" translate="yes" xml:space="preserve">
          <source>UnicodeData</source>
          <target state="translated">UnicodeData</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
