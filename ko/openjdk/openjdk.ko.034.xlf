<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="774b4dd078d52a1d34cb27581a555da16066755b" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;SaslException&lt;/code&gt;. The root exception and the detailed message are null.</source>
          <target state="translated">&lt;code&gt;SaslException&lt;/code&gt; 새로운 인스턴스를 구축합니다 . 근본 예외 및 자세한 메시지는 null입니다.</target>
        </trans-unit>
        <trans-unit id="25f9f4c2a896300d3fddb31e4a1917448f95d9a3" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt; 의 새로운 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="dd6bfe6a1790a69fa56ce6ea642a44ed238f06d6" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of AttributeInUseException with an explanation. All other fields are set to null.</source>
          <target state="translated">설명과 함께 AttributeInUseException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="83e260d0596c522427198018a1c8ab8a06124215" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of AttributeInUseException. All fields are initialized to null.</source>
          <target state="translated">AttributeInUseException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="6d5b2a21c371df5db3a59d6c4fda9f4949d9a3ab" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of AttributeModificationException using an explanation. All other fields are set to null.</source>
          <target state="translated">설명을 사용해 AttributeModificationException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4d0d7dc9b751606ebf3684a0cf9dcaf7b355762e" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of AttributeModificationException. All fields are set to null.</source>
          <target state="translated">AttributeModificationException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f8993f4bb00d9974b21be0d2b2135e00c8c84e7a" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of Attributes with one attribute. The attribute specified by attrID and val are added to the newly created attribute. If &lt;code&gt;ignoreCase&lt;/code&gt; is true, the character case of attribute identifiers is ignored; otherwise the case is significant.</source>
          <target state="translated">하나의 속성으로 속성의 새로운 인스턴스를 구성합니다. attrID 및 val로 지정된 속성이 새로 작성된 속성에 추가됩니다. 경우 &lt;code&gt;ignoreCase&lt;/code&gt; 사실, 속성 식별자의 대문자와 소문자는 무시된다; 그렇지 않으면 사건은 중요하다.</target>
        </trans-unit>
        <trans-unit id="88d90d3f1ec6fceb30a67d690fb5aed40d2b0d8e" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of Attributes with one attribute. The attribute specified by attrID and val are added to the newly created attribute. The character case of attribute identifiers is significant when subsequently retrieving or adding attributes.</source>
          <target state="translated">하나의 속성으로 속성의 새로운 인스턴스를 구성합니다. attrID 및 val로 지정된 속성이 새로 작성된 속성에 추가됩니다. 속성 식별자의 문자 대소 문자는 이후에 속성을 검색하거나 추가 할 때 중요합니다.</target>
        </trans-unit>
        <trans-unit id="340cb1392982f520d46ba60feb43a9f2a8b18cdd" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of Attributes. If &lt;code&gt;ignoreCase&lt;/code&gt; is true, the character case of attribute identifiers is ignored; otherwise the case is significant.</source>
          <target state="translated">속성의 새로운 인스턴스를 구축합니다. 경우 &lt;code&gt;ignoreCase&lt;/code&gt; 사실, 속성 식별자의 대문자와 소문자는 무시된다; 그렇지 않으면 사건은 중요하다.</target>
        </trans-unit>
        <trans-unit id="4573c29f47e5fcbf0303564d7a9fc20017fec0d7" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of Attributes. The character case of attribute identifiers is significant when subsequently retrieving or adding attributes.</source>
          <target state="translated">속성의 새로운 인스턴스를 구축합니다. 속성 식별자의 문자 대소 문자는 이후에 속성을 검색하거나 추가 할 때 중요합니다.</target>
        </trans-unit>
        <trans-unit id="6d87cb71bb6c547081c0c1888732e7bfb4fc68f4" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of AuthenticationException using the explanation supplied. All other fields default to null.</source>
          <target state="translated">제공된 설명을 사용하여 AuthenticationException의 새 인스턴스를 구성합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="a763ed0c08a72e947cd9b3f118697963007af246" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of AuthenticationException. All fields are set to null.</source>
          <target state="translated">AuthenticationException 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="75d86a49da6b839bedca886c42fd6a2e819f4df4" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of AuthenticationNotSupportedException all name resolution fields and explanation initialized to null.</source>
          <target state="translated">이름 해석 필드 및 설명이 모두 null에 초기화 된 AuthenticationNotSupportedException의 새로운 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="9cd1156b92be8b6578aa8b330481a2f6df55fe0c" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of AuthenticationNotSupportedException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용해 AuthenticationNotSupportedException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="443a7bcc951f0acbca8c0a189dceaa8c24df2c7a" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of BinaryRefAddr using its address type and a byte array for contents.</source>
          <target state="translated">주소 유형과 내용의 바이트 배열을 사용하여 BinaryRefAddr의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="dee6b7c7ad1bd29e64bdfffb4ebdf0b4ace7b856" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of BinaryRefAddr using its address type and a region of a byte array for contents.</source>
          <target state="translated">주소 유형과 내용에 대한 바이트 배열 영역을 사용하여 BinaryRefAddr의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="4b0221f9c0492806646631520c5751ba29186d79" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of CannotProceedException using an explanation. All unspecified fields default to null.</source>
          <target state="translated">설명을 사용해 CannotProceedException의 새로운 인스턴스를 구축합니다. 지정되지 않은 모든 필드의 기본값은 null입니다.</target>
        </trans-unit>
        <trans-unit id="b8e0f094f3e976dfb7acd23c0b59d4dc60289edc" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of CannotProceedException. All fields default to null.</source>
          <target state="translated">CannotProceedException의 새로운 인스턴스를 구축합니다. 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="4af7835714b19b4d7754660663531e2ab72d501a" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of CommunicationException using the arguments supplied.</source>
          <target state="translated">제공된 인수를 사용하여 CommunicationException의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="6aa3261b1de45a07009d1ce740df111624fb8430" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of CommunicationException.</source>
          <target state="translated">CommunicationException의 새로운 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="c31369d51640ee2e3873cc250d2bb69cf18edb8a" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ConfigurationException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용해 ConfigurationException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="d60deefcc0d8e12745d07fed8ab0cef4d35934a1" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ConfigurationException with all name resolution fields and explanation initialized to null.</source>
          <target state="translated">이름 해석 필드 및 설명이 모두 null에 초기화 된, ConfigurationException의 새로운 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="f500c653fc996582e3109c44bde06a93d70542e0" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ContextNotEmptyException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용하여 ContextNotEmptyException의 새 인스턴스를 구성합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="8833353748fa5969539c95251899ab14b8e9764a" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ContextNotEmptyException with all name resolution fields and explanation initialized to null.</source>
          <target state="translated">이름 해석 필드 및 설명이 모두 null에 초기화 된, ContextNotEmptyException의 새로운 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="806894b7c92919832783f64d4e128d51f94ba668" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of IOError with the specified cause. The IOError is created with the detail message of &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (which typically contains the class and detail message of cause).</source>
          <target state="translated">지정된 원인으로 IOError의 새로운 인스턴스를 구축합니다. IOError는 세부 메시지 &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (일반적으로 원인의 클래스 및 세부 메시지를 포함 함)로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="3ae93b8ce5dbb691b3bd97d7213395937c87abed" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InsufficientResourcesException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용하여 InsufficientResourcesException의 새 인스턴스를 구성합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="05e12c4fc484de663b89cb05944fb7665cb4dfe0" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InsufficientResourcesException with all name resolution fields and explanation initialized to null.</source>
          <target state="translated">이름 해석 필드 및 설명이 모두 null에 초기화 된, InsufficientResourcesException의 새로운 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="a8807bc8eef42dc55fff0302823d8b1126706467" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidAttributeIdentifierException using the explanation supplied. All other fields set to null.</source>
          <target state="translated">제공된 설명을 사용하여 InvalidAttributeIdentifierException의 새 인스턴스를 구성합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="c20341f52e87e450a54c33b7f5ea27431e8616a2" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidAttributeIdentifierException. All fields are set to null.</source>
          <target state="translated">InvalidAttributeIdentifierException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5edbad4f569064f39c5896e9813f0dec9b0e28ba" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidAttributeValueException using an explanation. All other fields are set to null.</source>
          <target state="translated">설명을 사용해 InvalidAttributeValueException 새로운 인스턴스를 구축합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1d34201f410766138d55cd590b2455518fe349c7" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidAttributeValueException. All fields are set to null.</source>
          <target state="translated">InvalidAttributeValueException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0a6c0aabae3da6e0baf3be0a87274413b4fb151b" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidAttributesException using an explanation. All other fields are set to null.</source>
          <target state="translated">설명을 사용해 InvalidAttributesException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5f6f3e7b2b7ca680b05edf6d108590fb1f3d8f3b" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidAttributesException. All fields are set to null.</source>
          <target state="translated">InvalidAttributesException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d8b20d6501b262d4ab907f248aa21fc79ec47175" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidSearchControlsException with an explanation. All other fields set to null.</source>
          <target state="translated">설명과 함께 InvalidSearchControlsException의 새 인스턴스를 구성합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="92117f6d1cac862b6a421ae90d067520348bbdd0" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidSearchControlsException. All fields are set to null.</source>
          <target state="translated">InvalidSearchControlsException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3fbd13e7f7aacc0785cf70cfedb08bd09880ca76" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidSearchFilterException with an explanation. All other fields are set to null.</source>
          <target state="translated">설명이있는 InvalidSearchFilterException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="db3d17e41c8b3b0c63ee2081feb6e451d047b5d5" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of InvalidSearchFilterException. All fields are set to null.</source>
          <target state="translated">InvalidSearchFilterException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="867e122a82695eeafd6fe7667214d55e32a9dfb4" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of LdapReferralException using the explanation supplied. All other fields are set to null.</source>
          <target state="translated">제공된 설명을 사용하여 LdapReferralException의 새 인스턴스를 구성합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="807249cc7ce07131e333347aa9fae1ba592c2027" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of LdapReferralException. All fields are set to null.</source>
          <target state="translated">LdapReferralException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="401133e93f5855af0a912255b5073121fc17fbf9" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of LimitExceededException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용하여 LimitExceededException의 새 인스턴스를 구성합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="59b519692413cbc3667cfe33cebe6a861d28027c" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of LimitExceededException with all name resolution fields and explanation initialized to null.</source>
          <target state="translated">이름 해석 필드 및 설명이 모두 null에 초기화 된, LimitExceededException의 새로운 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="c807158e1532c52b84cba7bd5311ef2a7c3c005c" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of LinkException with an explanation All the other fields are initialized to null.</source>
          <target state="translated">설명이있는 LinkException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 null에 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="aa54f57157dece61f3f4d31ca37ceb9495242896" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of LinkException. All the non-link-related and link-related fields are initialized to null.</source>
          <target state="translated">LinkException의 새로운 인스턴스를 구축합니다. 비 링크 관련 및 링크 관련 필드는 모두 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="f2a5cacabe521af874c33e1baba726348325faab" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of LinkLoopException with an explanation All the other fields are initialized to null.</source>
          <target state="translated">설명이있는 LinkLoopException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 null에 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="d72c555a2409ea7fee0c1ee822e865a78b610264" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of LinkLoopException. All the non-link-related and link-related fields are initialized to null.</source>
          <target state="translated">LinkLoopException의 새로운 인스턴스를 구축합니다. 비 링크 관련 및 링크 관련 필드는 모두 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="179261b188e497936c3feb128636d9a94d4521c4" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of Malformed LinkException. All fields are initialized to null.</source>
          <target state="translated">조작 된 LinkException 새로운 인스턴스를 구축합니다. 모든 필드는 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="954923b3b83cc5be961192cfc7547d0797a4665d" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of MalformedLinkException with an explanation All the other fields are initialized to null.</source>
          <target state="translated">설명이있는 MalformedLinkException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 null에 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="1bb261aa8870661f8ff89f0b83d6dd80a259fc19" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NameAlreadyBoundException using the explanation supplied. All other fields default to null.</source>
          <target state="translated">제공된 설명을 사용하여 NameAlreadyBoundException의 새 인스턴스를 구성합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="e7cc868522545e6069262b765025fcd29b0a3354" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NameAlreadyBoundException. All fields are set to null;</source>
          <target state="translated">NameAlreadyBoundException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="963118eb2f30651ecef86f44b13284767388b25d" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NameNotFoundException using the explanation supplied. All other fields default to null.</source>
          <target state="translated">제공된 설명을 사용하여 NameNotFoundException의 새 인스턴스를 구성합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="f3737d8200218b73ca7e0ede42ec9715551fdf19" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NameNotFoundException. all name resolution fields and explanation initialized to null.</source>
          <target state="translated">NameNotFoundException의 새로운 인스턴스를 구축합니다. 모든 이름 확인 필드와 설명이 null로 초기화되었습니다.</target>
        </trans-unit>
        <trans-unit id="2b84ba84e529ba28a385b9389bb0923ec6bbfae2" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NamingSecurityException using the explanation supplied. All other fields default to null.</source>
          <target state="translated">제공된 설명을 사용해 NamingSecurityException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="6297b4f5af84b682872d1128d219cd63d85a5c26" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NamingSecurityException. All fields are initialized to null.</source>
          <target state="translated">NamingSecurityException 새로운 인스턴스를 구축합니다. 모든 필드는 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="42cfd35d28cc7db66adb023a120ffd90f09ad723" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NoPermissionException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용해 NoPermissionException 새로운 인스턴스를 구축합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="5e5db156a2ac4a91d64ad0f4ac86f15f28faa93f" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NoPermissionException. All fields are initialized to null.</source>
          <target state="translated">NoPermissionException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="e2304b61c79c41734ea3e1d6c62b8ad8ec562240" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NoSuchAttributeException using an explanation. All other fields are set to null.</source>
          <target state="translated">설명을 사용하여 NoSuchAttributeException의 새 인스턴스를 구성합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2aa6d38dddb65b3d76b2195b1b98857ecce965d4" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NoSuchAttributeException. All fields are initialized to null.</source>
          <target state="translated">NoSuchAttributeException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="aaf3fb39d450d425c37e77d32acae5a56613cdb7" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NotContextException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용해 NotContextException 새로운 인스턴스를 구축합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="8f82c4774f56c3d0aac84c928659fcffc0fcee6b" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of NotContextException. All fields default to null.</source>
          <target state="translated">NotContextException의 새로운 인스턴스를 구축합니다. 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="03e28e7fbe4ab67b35375fc9091b396be562b39a" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of OperationNotSupportedException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용해 OperationNotSupportedException의 새로운 인스턴스를 구축합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="1642abbd99ae934dbb9fcd9fcb88e2a1d1148530" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of OperationNotSupportedException. All fields default to null.</source>
          <target state="translated">OperationNotSupportedException의 새로운 인스턴스를 구축합니다. 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="f01f0846760d8dadec219edd683d893d93eadf49" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of PartialResultException. All fields default to null.</source>
          <target state="translated">PartialResultException의 새 인스턴스를 구성합니다. 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="d813ff1f759976e48db992dc30f596064b676684" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of RefAddr using its address type.</source>
          <target state="translated">주소 유형을 사용하여 RefAddr의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="64e96f07ae032f6d898d2799b2858cfccea25108" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ReferralException using the explanation supplied. All other fields are set to null.</source>
          <target state="translated">제공된 설명을 사용하여 ReferralException의 새 인스턴스를 구성합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="06d3b9dabf5dffe8bc0943f56beaedefc950ca02" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ReferralException. All fields are set to null.</source>
          <target state="translated">ReferralException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="feab1e7107c86b1aa6d083fb297baca86dbbd772" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ResolveResult consisting of the resolved Object and the remaining name.</source>
          <target state="translated">해결 된 Object와 나머지 이름으로 구성되는 ResolveResult의 새로운 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="f990b72297ee8c571fa3b4d4336b67e5f5b1e860" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ResolveResult consisting of the resolved object and the remaining unresolved component.</source>
          <target state="translated">해결 된 객체와 나머지 해결되지 않은 구성 요소로 구성된 ResolveResult의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="83a215e6fc980921a691573aa84f887e6940b08a" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of SchemaViolationException using the explanation supplied. All other fields are set to null.</source>
          <target state="translated">제공된 설명을 사용하여 SchemaViolationException의 새 인스턴스를 구성합니다. 다른 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="db21d37eeffe6400333933cf1f5105aab9eb78e5" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of SchemaViolationException. All fields are set to null.</source>
          <target state="translated">SchemaViolationException의 새로운 인스턴스를 구축합니다. 모든 필드는 null로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="cf4dc07c51ecc977669437977404e4f5c52795c0" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ServiceUnavailableException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용하여 ServiceUnavailableException의 새 인스턴스를 구성합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="554af4600636474735e38b2c2371ad071772f16a" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of ServiceUnavailableException. All fields default to null.</source>
          <target state="translated">ServiceUnavailableException의 새로운 인스턴스를 구축합니다. 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="6b52f9a573e1780ea81f8c498facffc9010ae425" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of SizeLimitExceededException using an explanation. All other fields default to null.</source>
          <target state="translated">설명을 사용하여 SizeLimitExceededException의 새 인스턴스를 구성합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="1df5f4dc93f656b2aad091dc11f61af44e5463eb" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of SizeLimitExceededException. All fields default to null.</source>
          <target state="translated">SizeLimitExceededException의 새로운 인스턴스를 구축합니다. 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="223abaeed8255333d1e5e053732b85a940f3ee11" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of StringRefAddr using its address type and contents.</source>
          <target state="translated">주소 유형과 내용을 사용하여 StringRefAddr의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="2a8774e54a47294edbb38a54ce3d52e1582a2448" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of TimeLimitExceededException using the argument supplied.</source>
          <target state="translated">제공된 인수를 사용하여 TimeLimitExceededException의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="cf8dd2f32938197136fe80fa9dc80db851b109f9" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of TimeLimitExceededException. All fields default to null.</source>
          <target state="translated">TimeLimitExceededException의 새 인스턴스를 구성합니다. 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="d4eb771b01645402767b7e9469ae29f4ad9d748b" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of a possibly ordered attribute with a single value.</source>
          <target state="translated">단일 값으로 정렬 가능한 속성의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="f126186f6149523d84aded0b925f4a97eab16936" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of a possibly ordered attribute with no value.</source>
          <target state="translated">값이없는 순서가 지정된 속성의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="6132826ecaddbee63f3a7d131d07e64cd5b69017" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of an unordered attribute with a single value.</source>
          <target state="translated">단일 값으로 정렬되지 않은 속성의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="8ca85d7fb0cbba689c114726a05c40dcaa362949" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of an unordered attribute with no value.</source>
          <target state="translated">값이없는 정렬되지 않은 속성의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="71d863bb7fdbd3219362befff63c76650734280e" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of the builder.</source>
          <target state="translated">빌더의 새 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="a5ca43ce3ff0fa9b19db0c65c607da4a47cbe258" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of the exception using the explanation message specified. All other fields default to null.</source>
          <target state="translated">지정된 설명 메시지를 사용하여 예외의 새 인스턴스를 구성합니다. 다른 모든 필드는 기본적으로 null입니다.</target>
        </trans-unit>
        <trans-unit id="c10199e9cce138b6b24fa333de9d48eebc5ceb00" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of this class.</source>
          <target state="translated">이 클래스의 새로운 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="52ba25b38ec81dede22e0b9a54624a6fac94dc5e" translate="yes" xml:space="preserve">
          <source>Constructs a new instance with the specified message and cause.</source>
          <target state="translated">지정된 메세지와 원인으로 새로운 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="54d20bf0473842f742706a2780dfc01d4dc5abdb" translate="yes" xml:space="preserve">
          <source>Constructs a new instance with the specified message.</source>
          <target state="translated">지정된 메세지로 새로운 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0cfcf074eeb62fe62955c4d62dd3f54493865970" translate="yes" xml:space="preserve">
          <source>Constructs a new job message from operator attribute with the given message and locale.</source>
          <target state="translated">주어진 메시지와 로케일로 운영자 속성에서 새 작업 메시지를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="00634e2e55a3257b99730f1a4a04e3719082883e" translate="yes" xml:space="preserve">
          <source>Constructs a new job name attribute with the given job name and locale.</source>
          <target state="translated">주어진 작업 명과 로케일로 새로운 작업 명 속성을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="741ca3912bc8fac2e9e60adb916acd67a255f980" translate="yes" xml:space="preserve">
          <source>Constructs a new job originating user name attribute with the given user name and locale.</source>
          <target state="translated">주어진 사용자 이름과 로케일로 새 작업 시작 사용자 이름 속성을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="9a56a036742829ae700c7591acde7718717c1863" translate="yes" xml:space="preserve">
          <source>Constructs a new linked hash set with the same elements as the specified collection. The linked hash set is created with an initial capacity sufficient to hold the elements in the specified collection and the default load factor (0.75).</source>
          <target state="translated">지정된 컬렉션과 같은 요소를 가지는 새로운 링크 해시 세트를 작성합니다. 링크 된 해시 세트는 지정된 콜렉션의 요소와 기본로드 팩터 (0.75)를 보유하기에 충분한 초기 용량으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="1d04c12093ed0a54b84ac82d82c657d8d149388b" translate="yes" xml:space="preserve">
          <source>Constructs a new map containing the same mappings and using the same ordering as the specified sorted map.</source>
          <target state="translated">동일한 매핑을 포함하고 지정된 정렬 된 맵과 동일한 순서를 사용하여 새 맵을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="8838e428f8398958ac2e531f2815c4a38eb9d17a" translate="yes" xml:space="preserve">
          <source>Constructs a new map containing the same mappings as the given map, sorted according to the &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of the keys.</source>
          <target state="translated">주어진 맵과 동일한 매핑을 포함하는 새로운 맵을 키 의 &lt;a href=&quot;../../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 따라 정렬 하여 구성합니다.</target>
        </trans-unit>
        <trans-unit id="9757cb49ede50525901e300d1065ff13f3460210" translate="yes" xml:space="preserve">
          <source>Constructs a new media attribute specified by name.</source>
          <target state="translated">이름으로 지정된 새로운 미디어 속성을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="06debca11295b912e3b8f8831dcdaf0766145698" translate="yes" xml:space="preserve">
          <source>Constructs a new media name enumeration value with the given integer value.</source>
          <target state="translated">지정된 정수 치를 사용해 새로운 미디어 명 열거 치를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="e47e78959fc802348b1f817cb0bf39cc3273aca6" translate="yes" xml:space="preserve">
          <source>Constructs a new output device assigned attribute with the given device name and locale.</source>
          <target state="translated">지정된 장치명과 로케일로 속성을 지정해 새로운 출력 장치를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="4c4a71e45d0c494bdcc78e50634cdbe29dc4b581" translate="yes" xml:space="preserve">
          <source>Constructs a new patch object from the specified bank and program numbers.</source>
          <target state="translated">지정된 뱅크와 프로그램 번호로부터 새로운 패치 객체를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="cf3c65476e499bdf83cdf91d87ab2d8b84f7d321" translate="yes" xml:space="preserve">
          <source>Constructs a new printer info attribute with the given information string and locale.</source>
          <target state="translated">지정된 정보 캐릭터 라인과 로케일로 새로운 프린터 정보 속성을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="9086e53dc721e99d7661c5c163d2a5c686d9f7d3" translate="yes" xml:space="preserve">
          <source>Constructs a new printer location attribute with the given location and locale.</source>
          <target state="translated">주어진 위치와 로케일로 새로운 프린터 위치 속성을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="b818b1078bedb8d95b308e6984cf540fa82d383f" translate="yes" xml:space="preserve">
          <source>Constructs a new printer make and model attribute with the given make and model string and locale.</source>
          <target state="translated">지정된 제조업체 및 모델 문자열 및 로케일을 사용하여 새 프린터 제조업체 및 모델 속성을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="8300ae008b2b6c682b478327c96ce449390976e0" translate="yes" xml:space="preserve">
          <source>Constructs a new printer message from operator attribute with the given message and locale.</source>
          <target state="translated">주어진 메시지와 로케일로 운영자 속성에서 새 프린터 메시지를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="2271dbf9c6da0326151f74f7fefc4cc2bc46f29a" translate="yes" xml:space="preserve">
          <source>Constructs a new printer more info attribute with the specified URI.</source>
          <target state="translated">지정된 URI를 사용해 새로운 프린터 추가 정보 속성을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="7a278f48972b12ab7fd7279a0eb0175387574d25" translate="yes" xml:space="preserve">
          <source>Constructs a new printer more info manufacturer attribute with the specified URI.</source>
          <target state="translated">지정된 URI로 새로운 프린터 추가 정보 제조업체 속성을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="b3712cf3c4a1ef7f129f36c7c4d3692c61fe223d" translate="yes" xml:space="preserve">
          <source>Constructs a new printer name attribute with the given name and locale.</source>
          <target state="translated">주어진 이름과 로케일로 새로운 프린터 이름 속성을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="3b8d175d9b266764b9378fb8e2941966160fa8f0" translate="yes" xml:space="preserve">
          <source>Constructs a new reference for an object with class name 'className' and an address. Class factory and class factory location are set to null.</source>
          <target state="translated">클래스 이름이 'className'이고 주소가있는 객체에 대한 새 참조를 구성합니다. 클래스 팩토리 및 클래스 팩토리 위치는 null로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e625517074ff2d800adfa645cff98c9a64554e83" translate="yes" xml:space="preserve">
          <source>Constructs a new reference for an object with class name 'className', and the class name and location of the object's factory.</source>
          <target state="translated">클래스 이름이 'className'이고 오브젝트 팩토리의 클래스 이름과 위치를 가진 오브젝트에 대한 새 참조를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="309d59a3194ef00c3a8d20c4128afdb50afcee8d" translate="yes" xml:space="preserve">
          <source>Constructs a new reference for an object with class name 'className', the class name and location of the object's factory, and the address for the object.</source>
          <target state="translated">클래스 이름이 'className', 객체 팩토리의 클래스 이름 및 위치 및 객체 주소를 사용하여 객체에 대한 새 참조를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="6c3988c80478a5d8d05a9b8fd27a32d27d568afa" translate="yes" xml:space="preserve">
          <source>Constructs a new reference for an object with class name 'className'. Class factory and class factory location are set to null. The newly created reference contains zero addresses.</source>
          <target state="translated">클래스 명이 'className'인 객체에 대한 새로운 참조를 구성합니다. 클래스 팩토리 및 클래스 팩토리 위치는 null로 설정되어 있습니다. 새로 작성된 참조에는 주소가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6a16b1b913b8e176d9bb03ef9a917b8ebeb285ec" translate="yes" xml:space="preserve">
          <source>Constructs a new reference-object queue.</source>
          <target state="translated">새로운 참조 객체 큐를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="953d7efdd3c35be8417eae28f26c3204e2eb3775" translate="yes" xml:space="preserve">
          <source>Constructs a new requesting user name attribute with the given user name and locale.</source>
          <target state="translated">주어진 사용자 이름과 로케일로 새로운 요청 사용자 이름 속성을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="55f83a994eba1effe46da393edc962ed12284b04" translate="yes" xml:space="preserve">
          <source>Constructs a new reverb type that has the specified reverberation parameter values.</source>
          <target state="translated">지정된 잔향 파라미터 값을 갖는 새로운 잔향 형식을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="08ea9c887970ee19e501ccf9ccd797b53f1c17f4" translate="yes" xml:space="preserve">
          <source>Constructs a new runtime exception with &lt;code&gt;null&lt;/code&gt; as its detail message. The cause is not initialized, and may subsequently be initialized by a call to &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.initCause(java.lang.Throwable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">세부 메시지 로 &lt;code&gt;null&lt;/code&gt; 을 사용하여 새 런타임 예외를 구성 합니다. 원인은 초기화되지 않았으며 &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.initCause(java.lang.Throwable)&lt;/code&gt; &lt;/a&gt; 호출로 초기화 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1a83b568bda1771c29fb14116f257e205938d09" translate="yes" xml:space="preserve">
          <source>Constructs a new runtime exception with the specified cause and a detail message of &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (which typically contains the class and detail message of &lt;code&gt;cause&lt;/code&gt;). This constructor is useful for runtime exceptions that are little more than wrappers for other throwables.</source>
          <target state="translated">지정된 원인의 상세 메세지 새로운 런타임 예외 구축 &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (보통의 클래스와 상세 메세지 포함하는 &lt;code&gt;cause&lt;/code&gt; ). 이 생성자는 다른 throwables에 대한 래퍼보다 작은 런타임 예외에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7cdef0d9d6c0916a3adc5da96c5a2fc8ce1aa6be" translate="yes" xml:space="preserve">
          <source>Constructs a new runtime exception with the specified detail message and cause.</source>
          <target state="translated">지정된 상세 메세지 및 원인을 사용해 새로운 런타임 예외를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="2938beee184d1f8ff486f72ceec621f90d78f1ed" translate="yes" xml:space="preserve">
          <source>Constructs a new runtime exception with the specified detail message, cause, suppression enabled or disabled, and writable stack trace enabled or disabled.</source>
          <target state="translated">지정된 상세 메세지, 원인, 억제 유효 또는 무효, 및 기입 가능한 스택 트레이스 유효 또는 무효로 새로운 런타임 예외를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="dd6121f2eba009c4564f9d9dded28ced46d66adc" translate="yes" xml:space="preserve">
          <source>Constructs a new runtime exception with the specified detail message. The cause is not initialized, and may subsequently be initialized by a call to &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.initCause(java.lang.Throwable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 상세 메세지를 사용해 새로운 런타임 예외를 구축합니다. 원인은 초기화되지 않았으며 &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.initCause(java.lang.Throwable)&lt;/code&gt; &lt;/a&gt; 호출로 초기화 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29412f4921942d26f6f30134e114bdb7320e549b" translate="yes" xml:space="preserve">
          <source>Constructs a new set containing the elements in the specified collection, that orders its elements according to their &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;.</source>
          <target state="translated">지정된 컬렉션의 요소를 포함한 새로운 세트를 작성해, 그 &lt;a href=&quot;../../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 따라 요소를 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="2af14c48e9987fad39568b81fe69aa31469bc8d1" translate="yes" xml:space="preserve">
          <source>Constructs a new set containing the elements in the specified collection. The &lt;code&gt;HashMap&lt;/code&gt; is created with default load factor (0.75) and an initial capacity sufficient to contain the elements in the specified collection.</source>
          <target state="translated">지정된 컬렉션의 요소를 포함하는 새로운 세트를 구축합니다. &lt;code&gt;HashMap&lt;/code&gt; 기본 부하 계수 (0.75) 및 지정된 컬렉션의 요소를 포함하기에 충분한 초기 용량을 생성한다.</target>
        </trans-unit>
        <trans-unit id="504e20d07694cbe41bf3b129f41afdde23b211f9" translate="yes" xml:space="preserve">
          <source>Constructs a new set containing the same elements and using the same ordering as the specified sorted set.</source>
          <target state="translated">동일한 요소를 포함하고 지정된 정렬 된 세트와 동일한 순서를 사용하여 새 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="1cee87043f820a40b341b62ae8798e4c03e39a74" translate="yes" xml:space="preserve">
          <source>Constructs a new thread group. The parent of this new group is the thread group of the currently running thread.</source>
          <target state="translated">새로운 스레드 그룹을 구성합니다. 이 새 그룹의 부모는 현재 실행중인 스레드의 스레드 그룹입니다.</target>
        </trans-unit>
        <trans-unit id="c7d02abc09eff37ce505e64b07449c099444c340" translate="yes" xml:space="preserve">
          <source>Constructs a new throwable with &lt;code&gt;null&lt;/code&gt; as its detail message. The cause is not initialized, and may subsequently be initialized by a call to &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(java.lang.Throwable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상세 메세지로서 &lt;code&gt;null&lt;/code&gt; 를 사용해 새로운 Throwable를 구축 합니다. 원인은 초기화되지 않았으므로 &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(java.lang.Throwable)&lt;/code&gt; &lt;/a&gt; 호출로 초기화 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b959b390c649361090c71aed67c0bf3c2194ca2e" translate="yes" xml:space="preserve">
          <source>Constructs a new throwable with the specified cause and a detail message of &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (which typically contains the class and detail message of &lt;code&gt;cause&lt;/code&gt;). This constructor is useful for throwables that are little more than wrappers for other throwables (for example, &lt;a href=&quot;../security/privilegedactionexception&quot;&gt;&lt;code&gt;PrivilegedActionException&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">지정된 원인과 상세 메세지로 새로운 throw 가능 객체를 구축합니다 &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (일반적으로 클래스와 상세 메세지가 포함되어있는 &lt;code&gt;cause&lt;/code&gt; ). 이 생성자는 다른 throwables (예 : &lt;a href=&quot;../security/privilegedactionexception&quot;&gt; &lt;code&gt;PrivilegedActionException&lt;/code&gt; &lt;/a&gt; )의 래퍼에 불과한 Throwables에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="bbc7a0173a948291d760d883486e84021bd9df03" translate="yes" xml:space="preserve">
          <source>Constructs a new throwable with the specified detail message and cause.</source>
          <target state="translated">지정된 상세 메세지 및 원인으로 새로운 Throw 가능 객체를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="2ae70fcbad71aad52f6ebf95c01cfdc8a982e5fe" translate="yes" xml:space="preserve">
          <source>Constructs a new throwable with the specified detail message, cause, &lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt;suppression&lt;/a&gt; enabled or disabled, and writable stack trace enabled or disabled. If suppression is disabled, &lt;a href=&quot;throwable#getSuppressed--&quot;&gt;&lt;code&gt;getSuppressed()&lt;/code&gt;&lt;/a&gt; for this object will return a zero-length array and calls to &lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt;&lt;code&gt;addSuppressed(java.lang.Throwable)&lt;/code&gt;&lt;/a&gt; that would otherwise append an exception to the suppressed list will have no effect. If the writable stack trace is false, this constructor will not call &lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;null&lt;/code&gt; will be written to the &lt;code&gt;stackTrace&lt;/code&gt; field, and subsequent calls to &lt;code&gt;fillInStackTrace&lt;/code&gt; and &lt;a href=&quot;throwable#setStackTrace-java.lang.StackTraceElement:A-&quot;&gt;&lt;code&gt;setStackTrace(StackTraceElement[])&lt;/code&gt;&lt;/a&gt; will not set the stack trace. If the writable stack trace is false, &lt;a href=&quot;throwable#getStackTrace--&quot;&gt;&lt;code&gt;getStackTrace()&lt;/code&gt;&lt;/a&gt; will return a zero length array.</source>
          <target state="translated">지정된 상세 메세지, 원인, &lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt;억제&lt;/a&gt; 유효 또는 무효, 및 기입 가능한 스택 트레이스 유효 또는 무효 로 새로운 Throw 가능를 구축합니다 . 억제가 무효로되어있는 경우, 이 객체의 &lt;a href=&quot;throwable#getSuppressed--&quot;&gt; &lt;code&gt;getSuppressed()&lt;/code&gt; &lt;/a&gt; 는 길이가 제로의 배열을 &lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt; &lt;code&gt;addSuppressed(java.lang.Throwable)&lt;/code&gt; &lt;/a&gt; , 억제리스트에 예외를 추가하는 addSuppressed (java.lang.Throwable) 를 호출 해도 효과는 없습니다. 기록 가능한 스택 추적이 거짓이면,이 생성자가 호출되지 &lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt; 하는 &lt;code&gt;null&lt;/code&gt; 받는 기록 될 &lt;code&gt;stackTrace&lt;/code&gt; 필드 및 후속 호출 &lt;code&gt;fillInStackTrace&lt;/code&gt; 및 &lt;a href=&quot;throwable#setStackTrace-java.lang.StackTraceElement:A-&quot;&gt; &lt;code&gt;setStackTrace(StackTraceElement[])&lt;/code&gt; &lt;/a&gt;스택 추적을 설정하지 않습니다. 쓰기 가능한 스택 추적이 false이면 &lt;a href=&quot;throwable#getStackTrace--&quot;&gt; &lt;code&gt;getStackTrace()&lt;/code&gt; &lt;/a&gt; 는 길이가 0 인 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="76b783b1e933471ceaf3f7295b35e424385a9116" translate="yes" xml:space="preserve">
          <source>Constructs a new throwable with the specified detail message. The cause is not initialized, and may subsequently be initialized by a call to &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(java.lang.Throwable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 상세 메세지를 사용해 새로운 Throwable를 구축합니다. 원인은 초기화되지 않았으므로 &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(java.lang.Throwable)&lt;/code&gt; &lt;/a&gt; 호출로 초기화 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="67bde20c144992c888aaf9d7f6cfe839806d9990" translate="yes" xml:space="preserve">
          <source>Constructs a new tree map containing the same mappings and using the same ordering as the specified sorted map. This method runs in linear time.</source>
          <target state="translated">동일한 매핑을 포함하고 지정된 정렬 된 맵과 동일한 순서를 사용하여 새 트리 맵을 구성합니다. 이 방법은 선형 시간으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="16840dcba636eff816d761fadba25c7640080c62" translate="yes" xml:space="preserve">
          <source>Constructs a new tree map containing the same mappings as the given map, ordered according to the &lt;em&gt;natural ordering&lt;/em&gt; of its keys. All keys inserted into the new map must implement the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface. Furthermore, all such keys must be &lt;em&gt;mutually comparable&lt;/em&gt;: &lt;code&gt;k1.compareTo(k2)&lt;/code&gt; must not throw a &lt;code&gt;ClassCastException&lt;/code&gt; for any keys &lt;code&gt;k1&lt;/code&gt; and &lt;code&gt;k2&lt;/code&gt; in the map. This method runs in n*log(n) time.</source>
          <target state="translated">주어진 맵과 동일한 매핑을 포함하는 새로운 트리 맵을 키 의 &lt;em&gt;자연스러운 순서&lt;/em&gt; 에 따라 순서대로 구성 합니다. 새 맵에 삽입 된 모든 키는 &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현해야합니다 . 또한 이러한 모든 키는 &lt;em&gt;서로 비교 가능&lt;/em&gt; 해야합니다 . &lt;code&gt;k1.compareTo(k2)&lt;/code&gt; 는 맵의 모든 키 &lt;code&gt;k1&lt;/code&gt; 및 &lt;code&gt;k2&lt;/code&gt; 에 대해 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생시키지 않아야합니다 . 이 방법은 n * log (n) 시간에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="005c828cc2739f557f37e99c0d09371d476a11b4" translate="yes" xml:space="preserve">
          <source>Constructs a new tree set containing the elements in the specified collection, sorted according to the</source>
          <target state="translated">지정된 컬렉션의 요소를 포함하여 새 트리 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="d628bbaf2658b47c86e634efd6b750e4b0d13490" translate="yes" xml:space="preserve">
          <source>Constructs a new tree set containing the same elements and using the same ordering as the specified sorted set.</source>
          <target state="translated">동일한 요소를 포함하고 지정된 정렬 된 세트와 동일한 순서를 사용하여 새 트리 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="ec357a682a535bc069c317aaa2b65fca337de8ae" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty &lt;code&gt;WeakHashMap&lt;/code&gt; with the default initial capacity (16) and load factor (0.75).</source>
          <target state="translated">기본 초기 용량 (16)과로드 팩터 (0.75)를 사용하여 비어있는 새 &lt;code&gt;WeakHashMap&lt;/code&gt; 을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="65b860ce535bc67d15c61bd1405c59626141ed47" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty &lt;code&gt;WeakHashMap&lt;/code&gt; with the given initial capacity and the default load factor (0.75).</source>
          <target state="translated">지정된 초기 용량과 디폴트의 부하 계수 (0.75)로 비어있는 새로운 &lt;code&gt;WeakHashMap&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="f0bc4bb1058a3581720ae3343e67fcc0bde5a697" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty &lt;code&gt;WeakHashMap&lt;/code&gt; with the given initial capacity and the given load factor.</source>
          <target state="translated">지정된 초기 용량과 지정된 부하 계수로 비어있는 새로운 &lt;code&gt;WeakHashMap&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="5e7609732a8c65ab7ee46093eb6ecb536980addb" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty Attributes object with default size.</source>
          <target state="translated">기본 크기로 비어있는 새 Attributes 객체를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="a31eb68e50cc71a99a31af9a1ed3fecb99a765fe" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty Attributes object with the specified initial size.</source>
          <target state="translated">지정된 초기 사이즈로 비어있는 새로운 Attributes 객체를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="50b53161e9172b2a1522fbebff76113e6c461215" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty Manifest.</source>
          <target state="translated">비어있는 새 매니페스트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5b80c45b07707ed90761db291f51be33b00da6e0" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty hashtable with a default initial capacity (11) and load factor (0.75).</source>
          <target state="translated">기본 초기 용량 (11)과로드 팩터 (0.75)를 사용하여 비어있는 새 해시 테이블을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="258a22669ef3b42f6f8d492403b86b5dc002d815" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty hashtable with the specified initial capacity and default load factor (0.75).</source>
          <target state="translated">지정된 초기 용량과 기본로드 팩터 (0.75)를 사용하여 비어있는 새 해시 테이블을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="096dd7e4f93a70f2cee6c3055c0d4eb8741e1eb1" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty hashtable with the specified initial capacity and the specified load factor.</source>
          <target state="translated">지정된 초기 용량과 지정된 부하 계수로 비어있는 새로운 해시 테이블을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="0e7fc405c8cca1f6abbc945a383b9f2093ca1034" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty identity hash map with a default expected maximum size (21).</source>
          <target state="translated">기본 예상 최대 크기 (21)로 비어있는 새 ID 해시 맵을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="2b0fd1034c73eee57f156e507f96eeb1a9c42451" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty linked hash set with the default initial capacity (16) and load factor (0.75).</source>
          <target state="translated">기본 초기 용량 (16)과로드 팩터 (0.75)를 사용하여 비어있는 새 링크 해시 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="9b51cd382918bf9e70526ec8d3141fd117d28810" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty linked hash set with the specified initial capacity and load factor.</source>
          <target state="translated">지정된 초기 용량 및 부하 계수로 비어있는 새로운 링크 해시 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="993ec1526b6ff2b1f808bc454d09a803349d444e" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty linked hash set with the specified initial capacity and the default load factor (0.75).</source>
          <target state="translated">지정된 초기 용량과 기본로드 팩터 (0.75)로 비어있는 새 링크 해시 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="2a2059ea742b7c60b4ab5fac6a61f16dc77f7e02" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty map with the specified expected maximum size. Putting more than the expected number of key-value mappings into the map may cause the internal data structure to grow, which may be somewhat time-consuming.</source>
          <target state="translated">지정된 최대 예상 크기로 비어있는 새 맵을 구성합니다. 키-값 매핑의 예상 개수보다 많은 수를 맵에 넣으면 내부 데이터 구조가 커져서 다소 시간이 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e08d098506af8780d4a6dc731b695ce2ff07d3c" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty map, sorted according to the &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of the keys.</source>
          <target state="translated">키 의 &lt;a href=&quot;../../lang/comparable&quot;&gt;자연스러운 순서&lt;/a&gt; 에 따라 정렬 된 새로운 빈 맵을 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="4124ff525d9cae589c153c92ae765936aa455d72" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty map, sorted according to the specified comparator.</source>
          <target state="translated">지정된 비교 자에 따라 새로운 비어있는 맵을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="33adaf8d4038da66a6872a1db530626978e5866f" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty set that orders its elements according to the specified comparator.</source>
          <target state="translated">지정된 비교 자에 따라 요소를 순서대로 배열하는 비어있는 새로운 세트를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="31842b4ff0a7188ce4821a328de51fbd0a7b8a37" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty set that orders its elements according to their &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 따라 요소를 정렬 하는 비어있는 새 세트를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="d63413286f83ebeffc2bae4da537898f098b28eb" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty set; the backing &lt;code&gt;HashMap&lt;/code&gt; instance has default initial capacity (16) and load factor (0.75).</source>
          <target state="translated">비어있는 새로운 세트를 구축합니다. 백업 &lt;code&gt;HashMap&lt;/code&gt; 인스턴스에는 기본 초기 용량 (16)과로드 팩터 (0.75)가 있습니다.</target>
        </trans-unit>
        <trans-unit id="510ba6fc7e73d87439f75c622645a1bb26c214dc" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty set; the backing &lt;code&gt;HashMap&lt;/code&gt; instance has the specified initial capacity and default load factor (0.75).</source>
          <target state="translated">비어있는 새로운 세트를 구축합니다. 백업 &lt;code&gt;HashMap&lt;/code&gt; 인스턴스에는 지정된 초기 용량과 기본로드 팩터 (0.75)가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe71464c58a756f1f34b61257a1acdabb8ed4e10" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty set; the backing &lt;code&gt;HashMap&lt;/code&gt; instance has the specified initial capacity and the specified load factor.</source>
          <target state="translated">비어있는 새로운 세트를 구축합니다. 백업 &lt;code&gt;HashMap&lt;/code&gt; 인스턴스에는 지정된 초기 용량과 지정된로드 팩터가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd00454f8c3657de0ed2b196175c85fb113e8b5e" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty tree map, ordered according to the given comparator. All keys inserted into the map must be &lt;em&gt;mutually comparable&lt;/em&gt; by the given comparator: &lt;code&gt;comparator.compare(k1,
 k2)&lt;/code&gt; must not throw a &lt;code&gt;ClassCastException&lt;/code&gt; for any keys &lt;code&gt;k1&lt;/code&gt; and &lt;code&gt;k2&lt;/code&gt; in the map. If the user attempts to put a key into the map that violates this constraint, the &lt;code&gt;put(Object
 key, Object value)&lt;/code&gt; call will throw a &lt;code&gt;ClassCastException&lt;/code&gt;.</source>
          <target state="translated">주어진 비교기에 따라 순서가 지정된 새로운 빈 트리 맵을 구성합니다. 맵에 삽입 된 모든 키 는 지정된 비교기에서 &lt;em&gt;서로 비교할&lt;/em&gt; 수 있어야합니다 . &lt;code&gt;comparator.compare(k1, k2)&lt;/code&gt; 는 맵의 모든 키 &lt;code&gt;k1&lt;/code&gt; 및 &lt;code&gt;k2&lt;/code&gt; 에 대해 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생시키지 않아야합니다 . 사용자가이 제약 조건을 위반하는 키를 맵에 &lt;code&gt;put(Object key, Object value)&lt;/code&gt; 하면 put (Object key, Object value) 호출에서 &lt;code&gt;ClassCastException&lt;/code&gt; 이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="99e298e94781eac3390698767eef9e7cb53f6c71" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty tree map, using the natural ordering of its keys. All keys inserted into the map must implement the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface. Furthermore, all such keys must be &lt;em&gt;mutually comparable&lt;/em&gt;: &lt;code&gt;k1.compareTo(k2)&lt;/code&gt; must not throw a &lt;code&gt;ClassCastException&lt;/code&gt; for any keys &lt;code&gt;k1&lt;/code&gt; and &lt;code&gt;k2&lt;/code&gt; in the map. If the user attempts to put a key into the map that violates this constraint (for example, the user attempts to put a string key into a map whose keys are integers), the &lt;code&gt;put(Object key, Object value)&lt;/code&gt; call will throw a &lt;code&gt;ClassCastException&lt;/code&gt;.</source>
          <target state="translated">키의 자연스러운 순서를 사용하여 빈 트리 맵을 새로 만듭니다. 맵에 삽입 된 모든 키는 &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현해야합니다 . 또한 이러한 모든 키는 &lt;em&gt;서로 비교 가능&lt;/em&gt; 해야합니다 . &lt;code&gt;k1.compareTo(k2)&lt;/code&gt; 는 맵의 모든 키 &lt;code&gt;k1&lt;/code&gt; 및 &lt;code&gt;k2&lt;/code&gt; 에 대해 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생시키지 않아야합니다 . 사용자가이 제약 조건을 위반하는 키를 맵에 넣으려고하면 (예를 들어, 사용자가 키가 정수인 맵에 문자열 키를 넣으려고하면) &lt;code&gt;put(Object key, Object value)&lt;/code&gt; 호출은 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생시킵니다. .</target>
        </trans-unit>
        <trans-unit id="1d369c1a8a8b94d2904453d68bb38c4bb8726887" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty tree set, sorted according to the natural ordering of its elements. All elements inserted into the set must implement the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface. Furthermore, all such elements must be</source>
          <target state="translated">요소의 자연 순서에 따라 정렬 된 새로운 빈 트리 세트를 구성합니다. 세트에 삽입 된 모든 요소는 &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현해야합니다 . 또한 이러한 모든 요소는</target>
        </trans-unit>
        <trans-unit id="11d5b6ee2a5c1085a460371fc92bf72d6e178f70" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty tree set, sorted according to the specified comparator. All elements inserted into the set must be</source>
          <target state="translated">지정된 비교 자에 따라 새로운 빈 트리 세트를 생성합니다. 세트에 삽입 된 모든 요소는</target>
        </trans-unit>
        <trans-unit id="b42890f6b882a148756dbfd0054ad4760cd4ca94" translate="yes" xml:space="preserve">
          <source>Constructs a newline number input stream that reads its input from the specified input stream.</source>
          <target state="translated">지정된 입력 스트림로부터 입력을 읽어들이는 개행 번호 입력 스트림을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="f9ab05584e3a8febaa30e4067d1e26749d2782ab" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Byte&lt;/code&gt; object that represents the &lt;code&gt;byte&lt;/code&gt; value indicated by the &lt;code&gt;String&lt;/code&gt; parameter. The string is converted to a &lt;code&gt;byte&lt;/code&gt; value in exactly the manner used by the &lt;code&gt;parseByte&lt;/code&gt; method for radix 10.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 매개 변수로 표시되는 &lt;code&gt;byte&lt;/code&gt; 값 을 나타내는 새로 할당 된 &lt;code&gt;Byte&lt;/code&gt; 객체를 구성합니다 . 문자열은 기수 10 에 대한 &lt;code&gt;parseByte&lt;/code&gt; 메소드에서 사용되는 방식으로 &lt;code&gt;byte&lt;/code&gt; 값으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b2d01c207739ab7d3ff8e3339efd0d1de0177311" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Byte&lt;/code&gt; object that represents the specified &lt;code&gt;byte&lt;/code&gt; value.</source>
          <target state="translated">지정된 &lt;code&gt;byte&lt;/code&gt; 값 을 나타내는 새로 할당 된 &lt;code&gt;Byte&lt;/code&gt; 객체를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="99d1672710fc5c75a829730fed8fca9bc1a76314" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Character&lt;/code&gt; object that represents the specified &lt;code&gt;char&lt;/code&gt; value.</source>
          <target state="translated">지정된 &lt;code&gt;char&lt;/code&gt; 값 을 나타내는 새로 할당 된 &lt;code&gt;Character&lt;/code&gt; 객체를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="91cf392959fc369763511c5159eea59cdb5ee0d3" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Double&lt;/code&gt; object that represents the floating-point value of type &lt;code&gt;double&lt;/code&gt; represented by the string. The string is converted to a &lt;code&gt;double&lt;/code&gt; value as if by the &lt;code&gt;valueOf&lt;/code&gt; method.</source>
          <target state="translated">문자열이 나타내는 &lt;code&gt;double&lt;/code&gt; 유형의 부동 소수점 값을 나타내는 새로 할당 된 &lt;code&gt;Double&lt;/code&gt; 객체를 구성 합니다. 문자열은 &lt;code&gt;valueOf&lt;/code&gt; 메소드에 의해 &lt;code&gt;double&lt;/code&gt; 값으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="a7bbe773c6fbf669a1a2c30ed9a0e8ac67372cc6" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Double&lt;/code&gt; object that represents the primitive &lt;code&gt;double&lt;/code&gt; argument.</source>
          <target state="translated">프리미티브 &lt;code&gt;double&lt;/code&gt; 인수 를 나타내는 새로 할당 된 &lt;code&gt;Double&lt;/code&gt; 객체를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="1ff5351d1ede69197074258a3897b626b4710611" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Float&lt;/code&gt; object that represents the argument converted to type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 유형으로 변환 된 인수를 나타내는 새로 할당 된 &lt;code&gt;Float&lt;/code&gt; 객체를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="d3356322e47a6cc4f11416aad78d0677c0cbad9a" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Float&lt;/code&gt; object that represents the floating-point value of type &lt;code&gt;float&lt;/code&gt; represented by the string. The string is converted to a &lt;code&gt;float&lt;/code&gt; value as if by the &lt;code&gt;valueOf&lt;/code&gt; method.</source>
          <target state="translated">문자열이 나타내는 &lt;code&gt;float&lt;/code&gt; 유형의 부동 소수점 값을 나타내는 새로 할당 된 &lt;code&gt;Float&lt;/code&gt; 객체를 구성 합니다. 문자열은 &lt;code&gt;valueOf&lt;/code&gt; 메소드에 의한 것처럼 &lt;code&gt;float&lt;/code&gt; 값으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5b94abd77a6162ee181fe56178d11564470c3af" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Float&lt;/code&gt; object that represents the primitive &lt;code&gt;float&lt;/code&gt; argument.</source>
          <target state="translated">프리미티브 &lt;code&gt;float&lt;/code&gt; 인수 를 나타내는 새로 할당 된 &lt;code&gt;Float&lt;/code&gt; 객체를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="999969f0c8f435be2254c8600890d9d48c0120cf" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Integer&lt;/code&gt; object that represents the &lt;code&gt;int&lt;/code&gt; value indicated by the &lt;code&gt;String&lt;/code&gt; parameter. The string is converted to an &lt;code&gt;int&lt;/code&gt; value in exactly the manner used by the &lt;code&gt;parseInt&lt;/code&gt; method for radix 10.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 매개 변수가 나타내는 &lt;code&gt;int&lt;/code&gt; 값 을 나타내는 새로 할당 된 &lt;code&gt;Integer&lt;/code&gt; 오브젝트를 구성합니다 . 문자열은 기수 10 에 대한 &lt;code&gt;parseInt&lt;/code&gt; 메소드에서 사용되는 방식으로 정확하게 &lt;code&gt;int&lt;/code&gt; 값으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="c5a5967cc6cc97bac5af8e6a308cb3462128c67a" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Integer&lt;/code&gt; object that represents the specified &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">지정된 &lt;code&gt;int&lt;/code&gt; 값 을 나타내는 새로 할당 된 &lt;code&gt;Integer&lt;/code&gt; 객체를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="714bb0e59b08af8a4a826b8804f2140853730d25" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Long&lt;/code&gt; object that represents the &lt;code&gt;long&lt;/code&gt; value indicated by the &lt;code&gt;String&lt;/code&gt; parameter. The string is converted to a &lt;code&gt;long&lt;/code&gt; value in exactly the manner used by the &lt;code&gt;parseLong&lt;/code&gt; method for radix 10.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 매개 변수가 나타내는 &lt;code&gt;long&lt;/code&gt; 값 을 나타내는 새로 할당 된 &lt;code&gt;Long&lt;/code&gt; 오브젝트를 구성합니다 . 문자열은 기수 10 에 대한 &lt;code&gt;parseLong&lt;/code&gt; 메소드에서 사용되는 방식으로 &lt;code&gt;long&lt;/code&gt; 값으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="727a2085e6a4a494e9d1fce1c6a8cfff2e2415f7" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Long&lt;/code&gt; object that represents the specified &lt;code&gt;long&lt;/code&gt; argument.</source>
          <target state="translated">지정된 &lt;code&gt;long&lt;/code&gt; 인수 를 나타내는 새로 할당 된 &lt;code&gt;Long&lt;/code&gt; 객체를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="fe916a6fc5fd6a137eaf469c5d55f810dbf9257c" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Short&lt;/code&gt; object that represents the &lt;code&gt;short&lt;/code&gt; value indicated by the &lt;code&gt;String&lt;/code&gt; parameter. The string is converted to a &lt;code&gt;short&lt;/code&gt; value in exactly the manner used by the &lt;code&gt;parseShort&lt;/code&gt; method for radix 10.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 매개 변수가 나타내는 &lt;code&gt;short&lt;/code&gt; 값 을 나타내는 새로 할당 된 &lt;code&gt;Short&lt;/code&gt; 객체를 구성합니다 . 문자열은 기수 10 에 대한 &lt;code&gt;parseShort&lt;/code&gt; 메소드에서 사용되는 방식으로 &lt;code&gt;short&lt;/code&gt; 값으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="7c1ab68686f308c0abc4430c2ea86a180bd9df25" translate="yes" xml:space="preserve">
          <source>Constructs a newly allocated &lt;code&gt;Short&lt;/code&gt; object that represents the specified &lt;code&gt;short&lt;/code&gt; value.</source>
          <target state="translated">지정된 &lt;code&gt;short&lt;/code&gt; 값 을 나타내는 새로 할당 된 &lt;code&gt;Short&lt;/code&gt; 객체를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="36b79229c4e6dd91e3634027f45bd3d98d56dac1" translate="yes" xml:space="preserve">
          <source>Constructs a non-critical control.</source>
          <target state="translated">중요하지 않은 컨트롤을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="774b0a12769d7afb6be23a8dd1e723d18cd1b1c5" translate="yes" xml:space="preserve">
          <source>Constructs a notification query result.</source>
          <target state="translated">알림 쿼리 결과를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="96e6b794a8e210e186c8a63101ddde9e0bec8b0a" translate="yes" xml:space="preserve">
          <source>Constructs a paged-results response control.</source>
          <target state="translated">페이징 된 결과 응답 제어를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="3fb4f4c8a0f9cf40f2e355ad65e1261b9cf46b6b" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for Diffie-Hellman, using a prime modulus &lt;code&gt;p&lt;/code&gt; and a base generator &lt;code&gt;g&lt;/code&gt;.</source>
          <target state="translated">소수 계수 &lt;code&gt;p&lt;/code&gt; 및 기본 생성기 &lt;code&gt;g&lt;/code&gt; 를 사용하여 Diffie-Hellman에 대한 매개 변수 세트를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="2b3cc0613c681d4a53d6d4bd0664dc9b08d148ea" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for Diffie-Hellman, using a prime modulus &lt;code&gt;p&lt;/code&gt;, a base generator &lt;code&gt;g&lt;/code&gt;, and the size in bits, &lt;code&gt;l&lt;/code&gt;, of the random exponent (private value).</source>
          <target state="translated">소수 계수 &lt;code&gt;p&lt;/code&gt; , 기본 생성기 &lt;code&gt;g&lt;/code&gt; , 및 랜덤 지수 (비공개 값)의 비트 단위 &lt;code&gt;l&lt;/code&gt; 을 사용하여 Diffie-Hellman에 대한 매개 변수 세트를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="ae44c116d551da6f2010e261c946b6bd1ba3f458" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for OAEP padding as defined in the PKCS #1 standard using the specified message digest algorithm &lt;code&gt;mdName&lt;/code&gt;, mask generation function algorithm &lt;code&gt;mgfName&lt;/code&gt;, parameters for the mask generation function &lt;code&gt;mgfSpec&lt;/code&gt;, and source of the encoding input P &lt;code&gt;pSrc&lt;/code&gt;.</source>
          <target state="translated">지정된 메시지 요약 알고리즘 &lt;code&gt;mdName&lt;/code&gt; , 마스크 생성 함수 알고리즘 &lt;code&gt;mgfName&lt;/code&gt; , 마스크 생성 함수 &lt;code&gt;mgfSpec&lt;/code&gt; 의 매개 변수 및 인코딩 입력 P &lt;code&gt;pSrc&lt;/code&gt; 의 소스를 사용하여 PKCS # 1 표준에 정의 된 OAEP 패딩에 대한 매개 변수 세트를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="9847bcd5134dddb309cb4e150ca120ae13dea699" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for RC2 from the given effective key size (in bits) and IV.</source>
          <target state="translated">주어진 유효 키 크기 (비트) 및 IV에서 RC2에 대한 매개 변수 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="365c12804156ae0875e8a778a2267bd15a129ffa" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for RC2 from the given effective key size (in bits) and an 8-byte IV.</source>
          <target state="translated">주어진 유효 키 크기 (비트)와 8 바이트 IV로 RC2에 대한 매개 변수 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="dd150c73d563a00ab62e862ef6a5b4a8eb368b61" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for RC2 from the given effective key size (in bits).</source>
          <target state="translated">주어진 유효 키 크기 (비트)로 RC2에 대한 매개 변수 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="7483a4c2674f5c2f0d11bef86a50f8be544e83e7" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for RC5 from the given version, number of rounds and word size (in bits).</source>
          <target state="translated">주어진 버전, 라운드 수 및 워드 크기 (비트)로 RC5에 대한 매개 변수 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="9c3b06a3a0f4a82f2b20e446932f81fff1f9fa24" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for RC5 from the given version, number of rounds, word size (in bits), and IV.</source>
          <target state="translated">주어진 버전, 라운드 수, 워드 크기 (비트) 및 IV에서 RC5에 대한 매개 변수 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="3642c86fc3fc0c16147ad5484110de45e248cfd1" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for mask generation function MGF1 as defined in the PKCS #1 standard.</source>
          <target state="translated">PKCS # 1 표준에서 정의 된 마스크 생성 함수 MGF1에 대한 매개 변수 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="362fe7f93f04690baca16e6c35c50df59cf86ded" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for password-based encryption as defined in the PKCS #5 standard.</source>
          <target state="translated">PKCS # 5 표준에 정의 된 비밀번호 기반 암호화에 대한 매개 변수 세트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="15eff5ad7a2eff096bcd4768ebcaac01dd572831" translate="yes" xml:space="preserve">
          <source>Constructs a parameter set for the generation of Diffie-Hellman (system) parameters. The constructed parameter set can be used to initialize an &lt;a href=&quot;../../../java/security/algorithmparametergenerator&quot;&gt;&lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt;&lt;/a&gt; object for the generation of Diffie-Hellman parameters.</source>
          <target state="translated">Diffie-Hellman (시스템) 매개 변수 생성을위한 매개 변수 세트를 구성합니다. 구성된 매개 변수 세트를 사용하여 Diffie-Hellman 매개 변수 생성을위한 &lt;a href=&quot;../../../java/security/algorithmparametergenerator&quot;&gt; &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; &lt;/a&gt; 오브젝트 를 초기화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="154ec4873a4195769a84408de5b0c8ee0ac65f8e" translate="yes" xml:space="preserve">
          <source>Constructs a permission with the specified name.</source>
          <target state="translated">지정된 이름으로 권한을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="6443993f9e377d06a32434e1d75634efcc87c6f7" translate="yes" xml:space="preserve">
          <source>Constructs a port's info object from the information given. This constructor is typically used by an implementation of Java Sound to describe a supported line.</source>
          <target state="translated">주어진 정보로부터 포트의 정보 객체를 구축합니다. 이 생성자는 일반적으로 지원되는 회선을 설명하기 위해 Java Sound 구현에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6db723fa7b89be8d9e278aeb60efb2aa13e2c3b3" translate="yes" xml:space="preserve">
          <source>Constructs a process builder with the specified operating system program and arguments. This constructor does</source>
          <target state="translated">지정된 운영 체제 프로그램 및 인수로 프로세스 빌더를 구성합니다. 이 생성자는</target>
        </trans-unit>
        <trans-unit id="15de4f575d334de112958d70ee59fa5473c8d9ef" translate="yes" xml:space="preserve">
          <source>Constructs a process builder with the specified operating system program and arguments. This is a convenience constructor that sets the process builder's command to a string list containing the same strings as the &lt;code&gt;command&lt;/code&gt; array, in the same order. It is not checked whether &lt;code&gt;command&lt;/code&gt; corresponds to a valid operating system command.</source>
          <target state="translated">지정된 운영 체제 프로그램 및 인수로 프로세스 빌더를 구성합니다. 이는 프로세스 빌더의 명령을 &lt;code&gt;command&lt;/code&gt; 배열 과 동일한 문자열을 동일한 순서 로 포함하는 문자열 목록으로 설정하는 편의 생성자입니다 . &lt;code&gt;command&lt;/code&gt; 이 유효한 운영 체제 명령에 해당 하는지 여부는 확인되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9471e04948237d7862bb49389b9527703f73e285" translate="yes" xml:space="preserve">
          <source>Constructs a prototypical Event.</source>
          <target state="translated">프로토 타입 이벤트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="7771a730521831ce2de8989b4c4a3c9e317f51d4" translate="yes" xml:space="preserve">
          <source>Constructs a provider with the specified name, version number, and information.</source>
          <target state="translated">지정된 이름, 버젼 번호 및 정보를 사용해 프로 바이더를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="799250afd94508c73d6015a329a4d6cd1b82691a" translate="yes" xml:space="preserve">
          <source>Constructs a quantization table from the argument, which must contain 64 elements in natural order (not zig-zag order). A copy is made of the the input array.</source>
          <target state="translated">인수에서 양자화 테이블을 구성합니다. 인수는 64 개의 요소를 자연 순서 (지그재그 순서가 아님)로 포함해야합니다. 입력 배열로 사본이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="5a3401a5eeb7e63827dd729fba8ddd7103d4415d" translate="yes" xml:space="preserve">
          <source>Constructs a randomly generated BigInteger, uniformly distributed over the range 0 to (2&lt;sup&gt;&lt;code&gt;numBits&lt;/code&gt;&lt;/sup&gt; - 1), inclusive. The uniformity of the distribution assumes that a fair source of random bits is provided in &lt;code&gt;rnd&lt;/code&gt;. Note that this constructor always constructs a non-negative BigInteger.</source>
          <target state="translated">무작위로 생성 된 BigInteger를 구성하고, 0에서 (2 &lt;sup&gt; &lt;code&gt;numBits&lt;/code&gt; &lt;/sup&gt; -1) 범위로 균일하게 분포 합니다. 분포의 균일 성은 임의의 비트의 공정한 소스가 &lt;code&gt;rnd&lt;/code&gt; 로 제공된다고 가정합니다 . 이 생성자는 항상 음이 아닌 BigInteger를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="07da8c4152358c723533a72889d7ce40290d674f" translate="yes" xml:space="preserve">
          <source>Constructs a randomly generated positive BigInteger that is probably prime, with the specified bitLength.</source>
          <target state="translated">지정된 bitLength로 소수 일 가능성이있는 임의의 양의 BigInteger를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e5a338b5dd7f367bf0eb199f4cead2795287b5b9" translate="yes" xml:space="preserve">
          <source>Constructs a reader that decodes bytes from the given channel according to the named charset.</source>
          <target state="translated">지정된 캐릭터 세트에 따라 지정된 채널로부터 바이트를 디코드하는 리더를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="e866a34aafa2fc3fe227d7e9f5aaeadf3153e0aa" translate="yes" xml:space="preserve">
          <source>Constructs a reader that decodes bytes from the given channel using the given decoder.</source>
          <target state="translated">지정된 디코더를 사용해, 지정된 채널로부터 바이트를 디코드하는 리더를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="77711d8b35ebe4fbdd021983c8939fa0e1360a48" translate="yes" xml:space="preserve">
          <source>Constructs a relative path between this path and a given path.</source>
          <target state="translated">이 패스와 지정된 패스의 상대 패스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="8a8d80db7562e9386e7b3333c4902a71920d2481" translate="yes" xml:space="preserve">
          <source>Constructs a search constraints using arguments.</source>
          <target state="translated">인수를 사용하여 검색 제한 조건을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="ac8ca5c9dc11e2ebb64a66694f104ec0191b8cfd" translate="yes" xml:space="preserve">
          <source>Constructs a search constraints using defaults.</source>
          <target state="translated">기본값을 사용하여 검색 제한 조건을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="77a20bbed53ea7af3bdf8426c81e06097c22367a" translate="yes" xml:space="preserve">
          <source>Constructs a search result using the result's name, its bound object, and its attributes, and whether the name is relative.</source>
          <target state="translated">결과 이름, 바인드 된 오브젝트 및 해당 속성과 이름이 상대적인지 여부를 사용하여 검색 결과를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="2ff51cc0d8354bca54b3beb4fe2c97fd5bf2fc31" translate="yes" xml:space="preserve">
          <source>Constructs a search result using the result's name, its bound object, and its attributes.</source>
          <target state="translated">결과 이름, 바인딩 된 객체 및 속성을 사용하여 검색 결과를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="95f05b570cbf350da4f905a512495df6f622e44f" translate="yes" xml:space="preserve">
          <source>Constructs a search result using the result's name, its class name, its bound object, and its attributes.</source>
          <target state="translated">결과 이름, 클래스 이름, 바인딩 된 객체 및 속성을 사용하여 검색 결과를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="228ccd58cb2a8544ecb33933708fe85650622d13" translate="yes" xml:space="preserve">
          <source>Constructs a search result using the result's name, its class name, its bound object, its attributes, and whether the name is relative.</source>
          <target state="translated">결과 이름, 클래스 이름, 바인딩 된 객체, 속성 및 이름이 상대적인지 여부를 사용하여 검색 결과를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="3841dbbbe25a01ec471589a45833b27a02fdd65a" translate="yes" xml:space="preserve">
          <source>Constructs a secret key from the given byte array, using the first &lt;code&gt;len&lt;/code&gt; bytes of &lt;code&gt;key&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt; inclusive.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 부터 시작하여 &lt;code&gt;key&lt;/code&gt; 의 첫 번째 &lt;code&gt;len&lt;/code&gt; 바이트를 사용하여 지정된 바이트 배열에서 비밀 키를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="4f2a1ab717d2cac725ae69801a521a72e9b47ef4" translate="yes" xml:space="preserve">
          <source>Constructs a secret key from the given byte array.</source>
          <target state="translated">지정된 바이트 배열로부터 비밀 키를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="f368e54b5f21879663a2bed3d9781688e1c0af97" translate="yes" xml:space="preserve">
          <source>Constructs a secure random number generator (RNG) implementing the default random number algorithm.</source>
          <target state="translated">기본 난수 알고리즘을 구현하는 보안 난수 생성기 (RNG)를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="fcb28dfd445c08a7432e1e7013f8db003182d3e0" translate="yes" xml:space="preserve">
          <source>Constructs a secure random number generator (RNG) implementing the default random number algorithm. The SecureRandom instance is seeded with the specified seed bytes.</source>
          <target state="translated">기본 난수 알고리즘을 구현하는 보안 난수 생성기 (RNG)를 구성합니다. SecureRandom 인스턴스는 지정된 시드 바이트로 시드됩니다.</target>
        </trans-unit>
        <trans-unit id="12e338ea6b90061450d3f69f8540cbdd7a7e6bab" translate="yes" xml:space="preserve">
          <source>Constructs a sorted map from canonical charset names to charset objects.</source>
          <target state="translated">표준 문자셋 이름에서 문자셋 객체로 정렬 된 맵을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5e78fedd1eaa8e7a035474f653cde4ea37ebd3f5" translate="yes" xml:space="preserve">
          <source>Constructs a source of the encoding input P for OAEP padding as defined in the PKCS #1 standard using the specified PSource algorithm.</source>
          <target state="translated">지정된 PSource 알고리즘을 사용하여 PKCS # 1 표준에 정의 된대로 OAEP 패딩을위한 인코딩 입력 P의 소스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="a21b01f2a62e6e0b1d923bab5bcfd635f4c2cfe8" translate="yes" xml:space="preserve">
          <source>Constructs a stream that reads bytes from the given channel.</source>
          <target state="translated">주어진 채널에서 바이트를 읽는 스트림을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="cb7782956c8de65cde9ae6fc8b7b2a55d6c5810f" translate="yes" xml:space="preserve">
          <source>Constructs a stream that writes bytes to the given channel.</source>
          <target state="translated">지정된 채널에 바이트를 기록하는 스트림을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="73d0d0ae006fb3ae344c6353dd1e7d99659c7319" translate="yes" xml:space="preserve">
          <source>Constructs a string buffer initialized to the contents of the specified string. The initial capacity of the string buffer is &lt;code&gt;16&lt;/code&gt; plus the length of the string argument.</source>
          <target state="translated">지정된 문자열의 내용으로 초기화 된 문자열 버퍼를 구성합니다. 문자열 버퍼의 초기 용량은 &lt;code&gt;16&lt;/code&gt; 에 문자열 인수의 길이를 더한 값입니다.</target>
        </trans-unit>
        <trans-unit id="97264061c6f1b97bf03c2144ff3829b37d9127fa" translate="yes" xml:space="preserve">
          <source>Constructs a string buffer that contains the same characters as the specified &lt;code&gt;CharSequence&lt;/code&gt;. The initial capacity of the string buffer is &lt;code&gt;16&lt;/code&gt; plus the length of the &lt;code&gt;CharSequence&lt;/code&gt; argument.</source>
          <target state="translated">지정된 &lt;code&gt;CharSequence&lt;/code&gt; 와 같은 문자를 포함한 캐릭터 라인 버퍼를 구축합니다 . 문자열 버퍼의 초기 용량은 &lt;code&gt;16&lt;/code&gt; 에 &lt;code&gt;CharSequence&lt;/code&gt; 인수 의 길이를 더한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="95559b6384931262a36756c496dc5b14a174819f" translate="yes" xml:space="preserve">
          <source>Constructs a string buffer with no characters in it and an initial capacity of 16 characters.</source>
          <target state="translated">문자가없고 초기 용량이 16자인 문자열 버퍼를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="93af5a0ec70bcd02436b87b9a351c41f206aef7d" translate="yes" xml:space="preserve">
          <source>Constructs a string buffer with no characters in it and the specified initial capacity.</source>
          <target state="translated">문자가없고 지정된 초기 용량으로 문자열 버퍼를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="869d9b7a807d96ea011335095d014ceb7be72ff4" translate="yes" xml:space="preserve">
          <source>Constructs a string builder initialized to the contents of the specified string. The initial capacity of the string builder is &lt;code&gt;16&lt;/code&gt; plus the length of the string argument.</source>
          <target state="translated">지정된 문자열의 내용으로 초기화 된 문자열 작성기를 구성합니다. 문자열 빌더의 초기 용량은 &lt;code&gt;16&lt;/code&gt; 에 문자열 인수의 길이를 더한 값입니다.</target>
        </trans-unit>
        <trans-unit id="82c2ca3c0c4d52f03e0142c529db31aa38aac7cc" translate="yes" xml:space="preserve">
          <source>Constructs a string builder that contains the same characters as the specified &lt;code&gt;CharSequence&lt;/code&gt;. The initial capacity of the string builder is &lt;code&gt;16&lt;/code&gt; plus the length of the &lt;code&gt;CharSequence&lt;/code&gt; argument.</source>
          <target state="translated">지정된 &lt;code&gt;CharSequence&lt;/code&gt; 와 동일한 문자를 포함하는 문자열 빌더를 구성합니다 . 문자열 빌더의 초기 용량은 &lt;code&gt;16&lt;/code&gt; 에 &lt;code&gt;CharSequence&lt;/code&gt; 인수 의 길이를 더한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="93e5778a1b4ed94f988360e2799378cb69826ad3" translate="yes" xml:space="preserve">
          <source>Constructs a string builder with no characters in it and an initial capacity of 16 characters.</source>
          <target state="translated">문자가없고 초기 용량이 16자인 문자열 빌더를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5279e898097cd819b3d679f7d27b641de98e9c5a" translate="yes" xml:space="preserve">
          <source>Constructs a string builder with no characters in it and an initial capacity specified by the &lt;code&gt;capacity&lt;/code&gt; argument.</source>
          <target state="translated">문자가없고 &lt;code&gt;capacity&lt;/code&gt; 인수로 지정된 초기 용량으로 문자열 빌더를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="f75c75eaf5e8e0960fef17d4e72877b40a4d609e" translate="yes" xml:space="preserve">
          <source>Constructs a string describing this object.</source>
          <target state="translated">이 객체를 기술하는 캐릭터 라인을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="837211582184539bdcd27a12eda686ee8d95e872" translate="yes" xml:space="preserve">
          <source>Constructs a string representation of this &lt;code&gt;URL&lt;/code&gt;. The string is created by calling the &lt;code&gt;toExternalForm&lt;/code&gt; method of the stream protocol handler for this object.</source>
          <target state="translated">이 &lt;code&gt;URL&lt;/code&gt; 캐릭터 라인 표현을 구축합니다 . 문자열은 이 객체에 대한 스트림 프로토콜 핸들러 의 &lt;code&gt;toExternalForm&lt;/code&gt; 메소드를 호출하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="64c8907db06d8b53bbbbd68fb5b1ea2ade4d636b" translate="yes" xml:space="preserve">
          <source>Constructs a string representation of this InetSocketAddress. This String is constructed by calling toString() on the InetAddress and concatenating the port number (with a colon). If the address is unresolved then the part before the colon will only contain the hostname.</source>
          <target state="translated">이 InetSocketAddress 캐릭터 라인 표현을 구축합니다. 이 문자열은 InetAddress에서 toString ()을 호출하고 포트 번호 (콜론으로)를 연결하여 구성됩니다. 주소가 확인되지 않으면 콜론 앞 부분에는 호스트 이름 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1d1156f3431c5e642af05721f59d596fa5f717b2" translate="yes" xml:space="preserve">
          <source>Constructs a string representation of this Proxy. This String is constructed by calling toString() on its type and concatenating &quot; @ &quot; and the toString() result from its address if its type is not &lt;code&gt;DIRECT&lt;/code&gt;.</source>
          <target state="translated">이 프록시의 캐릭터 라인 표현을 구축합니다. 이 문자열은 해당 유형에서 toString ()을 호출하고 해당 유형이 &lt;code&gt;DIRECT&lt;/code&gt; 가 아닌 경우 주소에서 &quot;@&quot;및 toString () 결과를 연결하여 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="6ffa5579dbf8009b82e2ed4859f535c87dceeed3" translate="yes" xml:space="preserve">
          <source>Constructs a string tokenizer for the specified string. All characters in the &lt;code&gt;delim&lt;/code&gt; argument are the delimiters for separating tokens.</source>
          <target state="translated">지정된 문자열에 대한 문자열 토크 나이저를 구성합니다. &lt;code&gt;delim&lt;/code&gt; 인수의 모든 문자는 토큰 분리를위한 분리 문자입니다.</target>
        </trans-unit>
        <trans-unit id="b7cd9db6d5097a96813ce8f624c6341028a95185" translate="yes" xml:space="preserve">
          <source>Constructs a string tokenizer for the specified string. The characters in the &lt;code&gt;delim&lt;/code&gt; argument are the delimiters for separating tokens. Delimiter characters themselves will not be treated as tokens.</source>
          <target state="translated">지정된 문자열에 대한 문자열 토크 나이저를 구성합니다. 의 문자 &lt;code&gt;delim&lt;/code&gt; 인수는 토큰을 나누는 단락 문자입니다. 분리 문자 자체는 토큰으로 취급되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3ea6c4305daf04638d64cdfe9ddd4bd51588b20b" translate="yes" xml:space="preserve">
          <source>Constructs a string tokenizer for the specified string. The tokenizer uses the default delimiter set, which is &lt;code&gt;&quot;&amp;nbsp;\t\n\r\f&quot;&lt;/code&gt;: the space character, the tab character, the newline character, the carriage-return character, and the form-feed character. Delimiter characters themselves will not be treated as tokens.</source>
          <target state="translated">지정된 문자열에 대한 문자열 토크 나이저를 구성합니다. 토크 나이 저는 기본 분리 문자 세트 인 &lt;code&gt;&quot;&amp;nbsp;\t\n\r\f&quot;&lt;/code&gt; 공백 문자, 탭 문자, 개행 문자, 캐리지 리턴 문자 및 용지 공급 문자)를 사용합니다. 분리 문자 자체는 토큰으로 취급되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="23dcc3b6da8661b367a2c3957599f6d9ef7df58d" translate="yes" xml:space="preserve">
          <source>Constructs a synchronization mode.</source>
          <target state="translated">동기화 모드를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="46ea5ef2c1541b009fc164808eb16ba54968826e" translate="yes" xml:space="preserve">
          <source>Constructs a unidimensional &lt;code&gt;ArrayType&lt;/code&gt; instance for the supplied &lt;code&gt;SimpleType&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;SimpleType&lt;/code&gt; 에 대한 일차원 &lt;code&gt;ArrayType&lt;/code&gt; 인스턴스를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="cc336676c7199f62535df2dbd10553a68529b448" translate="yes" xml:space="preserve">
          <source>Constructs a vector containing the elements of the specified collection, in the order they are returned by the collection's iterator.</source>
          <target state="translated">지정된 컬렉션의 요소를 포함한 벡터를 컬렉션의 반복자에 의해 돌려 주어지는 순서로 구축합니다.</target>
        </trans-unit>
        <trans-unit id="c3936ff554c4aea01042526b67e6a060852bdc96" translate="yes" xml:space="preserve">
          <source>Constructs a writer that encodes characters according to the named charset and writes the resulting bytes to the given channel.</source>
          <target state="translated">지정된 캐릭터 세트에 따라 문자를 encode 해, 결과의 바이트를 지정된 채널에 기입하는 라이터를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="0d17e56bffa591bd05a4b1b845b647d282551dc1" translate="yes" xml:space="preserve">
          <source>Constructs a writer that encodes characters using the given encoder and writes the resulting bytes to the given channel.</source>
          <target state="translated">주어진 인코더를 사용하여 문자를 인코딩하고 결과 바이트를 주어진 채널에 쓰는 라이터를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="b6b4d47158fe4942563c4c60aa6c082613b2f62e" translate="yes" xml:space="preserve">
          <source>Constructs an (invalid) FileDescriptor object.</source>
          <target state="translated">(잘못된) FileDescriptor 객체를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="fcb6bb6253f844ad6ab358487cf29868a5254963" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;a href=&quot;aclentry&quot;&gt;&lt;code&gt;AclEntry&lt;/code&gt;&lt;/a&gt; from the components of this builder. The type and who components are required to have been set in order to construct an &lt;code&gt;AclEntry&lt;/code&gt;.</source>
          <target state="translated">구축 &lt;a href=&quot;aclentry&quot;&gt; &lt;code&gt;AclEntry&lt;/code&gt; &lt;/a&gt; 이 빌더의 구성 요소에서합니다. &lt;code&gt;AclEntry&lt;/code&gt; 를 구성하기 위해 유형 및 구성 요소를 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4dcbce460324d9039ef7c64954dc8b2c97111bf6" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;AbstractMethodError&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;AbstractMethodError&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="c2604a9224b0f110abc8a08968cb343496d0c01e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;AbstractMethodError&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;AbstractMethodError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="513e225bee05931121bd41c489fc50a37115e649" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;AccessControlException&lt;/code&gt; with the specified, detailed message, and the requested permission that caused the exception.</source>
          <target state="translated">지정된 상세한 메시지와 예외를 발생시킨 요청 된 권한 으로 &lt;code&gt;AccessControlException&lt;/code&gt; 을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="79d66d3b8bd601b827b3ed2c14f780be2daf7365" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;AccessControlException&lt;/code&gt; with the specified, detailed message.</source>
          <target state="translated">지정된 상세한 메시지 로 &lt;code&gt;AccessControlException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="b62b1dcbd990207a402641f03769104367617655" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ArithmeticException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;ArithmeticException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="3837fa987ab29133612d905df053e3e7f913a0b8" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ArithmeticException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;ArithmeticException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="f6ff3907962a0aab17384d87691a222e861b8f1f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; class with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 클래스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="c50681406a5aeab84212c1d0dd5ed5e6cb04b1a8" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="cb057f951687dab85e100ffc2e0545fded3a0d0b" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ArrayStoreException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;ArrayStoreException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="4f8cc2f2dd7836b7f827da1a5020c089dd7f3236" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ArrayStoreException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;ArrayStoreException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="9428c12e1397ee6ff36a04f968a88215073c29bc" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ArrayType&lt;/code&gt; instance describing</source>
          <target state="translated">설명 하는 &lt;code&gt;ArrayType&lt;/code&gt; 인스턴스를 생성합니다</target>
        </trans-unit>
        <trans-unit id="d2844ebadf8f294c2077b7309fb3cfd7a16e229f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Attribute&lt;/code&gt; with the given name.</source>
          <target state="translated">구축 &lt;code&gt;Attribute&lt;/code&gt; 지정된 이름을.</target>
        </trans-unit>
        <trans-unit id="2b7564391ea6285873a7128ed537de962b9a7042" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;AttributeList&lt;/code&gt; containing the elements of the &lt;code&gt;AttributeList&lt;/code&gt; specified, in the order in which they are returned by the &lt;code&gt;AttributeList&lt;/code&gt;'s iterator. The &lt;code&gt;AttributeList&lt;/code&gt; instance has an initial capacity of 110% of the size of the &lt;code&gt;AttributeList&lt;/code&gt; specified.</source>
          <target state="translated">지정된 &lt;code&gt;AttributeList&lt;/code&gt; 요소를 포함 하는 &lt;code&gt;AttributeList&lt;/code&gt; 를 &lt;code&gt;AttributeList&lt;/code&gt; 의 반복자 가 돌려주는 순서로 구축 합니다. &lt;code&gt;AttributeList&lt;/code&gt; 인스턴스는 크기의 110 %의 초기 용량을 갖고 &lt;code&gt;AttributeList&lt;/code&gt; 지정한다.</target>
        </trans-unit>
        <trans-unit id="9836b2b8d89db79348e9ebe6d81c07f920150221" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;AttributeList&lt;/code&gt; containing the elements of the &lt;code&gt;List&lt;/code&gt; specified, in the order in which they are returned by the &lt;code&gt;List&lt;/code&gt;'s iterator.</source>
          <target state="translated">구축 &lt;code&gt;AttributeList&lt;/code&gt; 의 요소를 포함하는 &lt;code&gt;List&lt;/code&gt; 그들이에 의해 반환되는 순서로 지정, &lt;code&gt;List&lt;/code&gt; 반복자 합니다.</target>
        </trans-unit>
        <trans-unit id="ee49feec63b24403b39c58dc993ea723bb6fe6f2" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;AudioFormat&lt;/code&gt; with a linear PCM encoding and the given parameters. The frame size is set to the number of bytes required to contain one sample from each channel, and the frame rate is set to the sample rate.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; 을 구축선형 PCM 인코딩 및 지정된 매개 변수를 사용 을 구성합니다. 프레임 크기는 각 채널에서 하나의 샘플을 포함하는 데 필요한 바이트 수로 설정되며 프레임 속도는 샘플 속도로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9ab60f6d670d2200b075c4cc567410a5b349ff29" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;AudioFormat&lt;/code&gt; with the given parameters. The encoding specifies the convention used to represent the data. The other parameters are further explained in the &lt;a href=&quot;audioformat&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 파라미터 로 &lt;code&gt;AudioFormat&lt;/code&gt; 를 구축합니다 . 인코딩은 데이터를 나타내는 데 사용되는 규칙을 지정합니다. 다른 매개 변수는 &lt;a href=&quot;audioformat&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt; 자세히 설명되어 있습니다. 있습니다.</target>
        </trans-unit>
        <trans-unit id="8261dbb0f00c2a41276a8c7d27dd9bcf7bb9a08f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;BMPImageWriteParam&lt;/code&gt; object with default values for all parameters and a &lt;code&gt;null&lt;/code&gt;&lt;code&gt;Locale&lt;/code&gt;.</source>
          <target state="translated">구축 &lt;code&gt;BMPImageWriteParam&lt;/code&gt; 를의 모든 매개 변수와 디폴트 값을 가진 개체 &lt;code&gt;null&lt;/code&gt; &lt;code&gt;Locale&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd3a414303d6654783308d713d464db1b1a9022f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;EOFException&lt;/code&gt; with &lt;code&gt;null&lt;/code&gt; as its error detail message.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 을 가지는 &lt;code&gt;EOFException&lt;/code&gt; 을 구축에러 상세 메세지로서 를 가지는 .</target>
        </trans-unit>
        <trans-unit id="4347d4d1433d776db2a47b8343baf60cb95bfa1f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;EOFException&lt;/code&gt; with the specified detail message. The string &lt;code&gt;s&lt;/code&gt; may later be retrieved by the &lt;code&gt;&lt;a href=&quot;../lang/throwable#getMessage--&quot;&gt;&lt;code&gt;Throwable.getMessage()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of class &lt;code&gt;java.lang.Throwable&lt;/code&gt;.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;EOFException&lt;/code&gt; 을 구축합니다 . 문자열 &lt;code&gt;s&lt;/code&gt; 는 나중에 &lt;code&gt;java.lang.Throwable&lt;/code&gt; 클래스 의 &lt;code&gt;&lt;a href=&quot;../lang/throwable#getMessage--&quot;&gt;&lt;code&gt;Throwable.getMessage()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드에 의해 검색 될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="471c5dbafdccadfc48a049488f46091074ab309f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; from the encryption algorithm name and the encrypted data.</source>
          <target state="translated">&lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; 를 구축합니다암호화 알고리즘 명과 암호화 된 데이터로부터 를 .</target>
        </trans-unit>
        <trans-unit id="3ffadc2cde20cbfe32323daf99c67cade8087224" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; from the encryption algorithm parameters and the encrypted data.</source>
          <target state="translated">암호화 알고리즘 파라미터 및 암호화 된 데이터로부터 &lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="df7845c4b9243cd9c47139dc563eaf3e7dec8a13" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;EnumConstantNotPresentException&lt;/code&gt; for the specified constant.</source>
          <target state="translated">지정된 정수 의 &lt;code&gt;EnumConstantNotPresentException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="d24230f8c6d32ebc54fda04daad742565b478c5f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ExceptionInInitializerError&lt;/code&gt; with &lt;code&gt;null&lt;/code&gt; as its detail message string and with no saved throwable object. A detail message is a String that describes this particular exception.</source>
          <target state="translated">상세 메세지 캐릭터 라인으로서 &lt;code&gt;null&lt;/code&gt; 를 포함 해, Throw 가능한 객체가 포함되지 않는 &lt;code&gt;ExceptionInInitializerError&lt;/code&gt; 를 구축 합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="4d117ef1f429d637e90e8a9278e13a5be840848c" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ExecutionException&lt;/code&gt; with no detail message. The cause is not initialized, and may subsequently be initialized by a call to &lt;a href=&quot;../../lang/throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구축 &lt;code&gt;ExecutionException&lt;/code&gt; 상세 메세지를. 원인은 초기화되지 않았으므로 &lt;a href=&quot;../../lang/throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause&lt;/code&gt; &lt;/a&gt; 호출로 초기화 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33071873e22d69a315d5b04feb9070f5f16d4b22" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ExecutionException&lt;/code&gt; with the specified cause. The detail message is set to &lt;code&gt;(cause == null ? null :
 cause.toString())&lt;/code&gt; (which typically contains the class and detail message of &lt;code&gt;cause&lt;/code&gt;).</source>
          <target state="translated">지정된 원인으로 &lt;code&gt;ExecutionException&lt;/code&gt; 을 구축합니다 . 세부 메시지는 &lt;code&gt;(cause == null ? null : cause.toString())&lt;/code&gt; 으로 설정됩니다 ( 일반적으로 cause 의 클래스 및 세부 메시지가 &lt;code&gt;cause&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="13b6fcc96fb7de45479a17fac42d6c6a7cc692db" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ExecutionException&lt;/code&gt; with the specified detail message and cause.</source>
          <target state="translated">지정된 상세 메세지 및 원인을 사용해 &lt;code&gt;ExecutionException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="2fc0d439a9472a18f711ea296d6075e2420f96cf" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ExecutionException&lt;/code&gt; with the specified detail message. The cause is not initialized, and may subsequently be initialized by a call to &lt;a href=&quot;../../lang/throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;ExecutionException&lt;/code&gt; 을 구축합니다 . 원인은 초기화되지 않았으므로 &lt;a href=&quot;../../lang/throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause&lt;/code&gt; &lt;/a&gt; 호출로 초기화 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e65d79d5b303afbf6e43e1c9451686eefae6f2cb" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOByteBuffer&lt;/code&gt; that references a given byte array, offset, and length.</source>
          <target state="translated">&lt;code&gt;IIOByteBuffer&lt;/code&gt; 를 구축지정된 바이트 배열, 오프셋 및 길이를 참조 를 .</target>
        </trans-unit>
        <trans-unit id="d4cd6c00679bbca424562c079bd230a2865c903e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOException&lt;/code&gt; with a given message &lt;code&gt;String&lt;/code&gt; and a &lt;code&gt;Throwable&lt;/code&gt; that was its underlying cause.</source>
          <target state="translated">지정된 메세지 &lt;code&gt;String&lt;/code&gt; 및 &lt;code&gt;Throwable&lt;/code&gt; 로 &lt;code&gt;IIOException&lt;/code&gt; 를 구축합니다 그 원인이되는 를 .</target>
        </trans-unit>
        <trans-unit id="99819a0c34b8f50f0a0b47a222d32c0f0c815182" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOException&lt;/code&gt; with a given message &lt;code&gt;String&lt;/code&gt;. No underlying cause is set; &lt;code&gt;getCause&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">지정된 메세지 &lt;code&gt;String&lt;/code&gt; 로 &lt;code&gt;IIOException&lt;/code&gt; 를 구축합니다 . 근본 원인이 설정되지 않았습니다. &lt;code&gt;getCause&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d6a52df9327bdb203252d5bbb4871d4feb30b088" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOImage&lt;/code&gt; containing a &lt;code&gt;Raster&lt;/code&gt;, and thumbnails and metadata associated with it.</source>
          <target state="translated">&lt;code&gt;Raster&lt;/code&gt; 를 포함 하는 &lt;code&gt;IIOImage&lt;/code&gt; 및 이와 관련된 축소판 및 메타 데이터를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="fa2b12f827525e5c4ee7dfc9bcdb36cee5fd6592" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOImage&lt;/code&gt; containing a &lt;code&gt;RenderedImage&lt;/code&gt;, and thumbnails and metadata associated with it.</source>
          <target state="translated">&lt;code&gt;RenderedImage&lt;/code&gt; 를 포함 하는 &lt;code&gt;IIOImage&lt;/code&gt; 와 이와 관련된 썸네일 및 메타 데이터를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="1ed6f60db5d8eee481e3a759dd9055ce869ee3f1" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOInvalidTreeException&lt;/code&gt; with a message string and a reference to the &lt;code&gt;Node&lt;/code&gt; that caused the parsing error.</source>
          <target state="translated">구축 &lt;code&gt;IIOInvalidTreeException&lt;/code&gt; 메시지 문자열과 함께 참조 &lt;code&gt;Node&lt;/code&gt; 파싱 에러 발생.</target>
        </trans-unit>
        <trans-unit id="334abf67c0037a9992aa149a6f05e7e1a33b63f2" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOInvalidTreeException&lt;/code&gt; with a message string, a reference to an exception that caused this exception, and a reference to the &lt;code&gt;Node&lt;/code&gt; that caused the parsing error.</source>
          <target state="translated">구축 &lt;code&gt;IIOInvalidTreeException&lt;/code&gt; 메시지 문자열이 예외를 발생하는 예외에 대한 참조를, 상기 참조 &lt;code&gt;Node&lt;/code&gt; 파싱 에러 발생.</target>
        </trans-unit>
        <trans-unit id="d4cad9a5a0ee97fa1a3242438b8297aa445a1c1a" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOMetadata&lt;/code&gt; object with the given format names and format class names, as well as a boolean indicating whether the standard format is supported.</source>
          <target state="translated">지정된 형식 명, 형식 클래스 명, 및 표준 형식이 지원 될지 어떨지를 나타내는 boolean를 사용해 &lt;code&gt;IIOMetadata&lt;/code&gt; 객체를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="cce72ba43ac4b42659826721c87bb5c53e3cba69" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOMetadataNode&lt;/code&gt; with a given node name.</source>
          <target state="translated">구축 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 를 지정된 노드 이름을.</target>
        </trans-unit>
        <trans-unit id="d009ba4d9e038f880669b6ed34b4916d67462ea0" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IIOServiceProvider&lt;/code&gt; with a given vendor name and version identifier.</source>
          <target state="translated">주어진 벤더 이름과 버전 식별자 로 &lt;code&gt;IIOServiceProvider&lt;/code&gt; 를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="c5d28b6dec197df753a78cc264f186c7fa9a9b6c" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IOException&lt;/code&gt; with &lt;code&gt;null&lt;/code&gt; as its error detail message.</source>
          <target state="translated">에러 상세 메세지로서 &lt;code&gt;null&lt;/code&gt; 를 &lt;code&gt;IOException&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="af5c4138c0e0008824cdfdb47fa15b51cd2f6bfa" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IOException&lt;/code&gt; with the specified cause and a detail message of &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (which typically contains the class and detail message of &lt;code&gt;cause&lt;/code&gt;). This constructor is useful for IO exceptions that are little more than wrappers for other throwables.</source>
          <target state="translated">지정된 원인과 세부 정보 메시지 &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; 로 &lt;code&gt;IOException&lt;/code&gt; 을 구성 합니다 ( 일반적으로 &lt;code&gt;cause&lt;/code&gt; 의 클래스 및 세부 정보 메시지가 포함됨) ). 이 생성자는 다른 Throwable에 대한 래퍼보다 작은 IO 예외에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fc9e2ff789da14b3248b916e1a430ef3f9451ed1" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IOException&lt;/code&gt; with the specified detail message and cause.</source>
          <target state="translated">지정된 상세 메세지 및 원인으로 &lt;code&gt;IOException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="c2879504b2dd7fc1e552762bb15098f7608258b8" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IOException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;IOException&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="8b68c70c4be14d58b6312c27ca3972ed60b54a6c" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalAccessError&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;IllegalAccessError&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="0b0fe1e9846f49cc1d49a18c1a254ba3df327184" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalAccessError&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;IllegalAccessError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="de5a4d1e6af0efc5e357e62981476101dad4d6db" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalAccessException&lt;/code&gt; with a detail message.</source>
          <target state="translated">세부 메시지가 있는 &lt;code&gt;IllegalAccessException&lt;/code&gt; 을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="32112e2ffd1987bc5b0350a9aa0a05355de0dbc4" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalAccessException&lt;/code&gt; without a detail message.</source>
          <target state="translated">&lt;code&gt;IllegalAccessException&lt;/code&gt; 을 구축합니다 상세 메세지를하지 않고 있습니다.</target>
        </trans-unit>
        <trans-unit id="db8af8b74071d6a76e43035f42b94ecf4aaa4f00" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalArgumentException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="77c75556b05bd51fa1ac3d85f8b48565ab9180e2" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalArgumentException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="bca0192a3099b8d5b5844c3f7f062b8fbf348b4d" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalClassFormatException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;IllegalClassFormatException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="5aa56ace40b6ed603dd2e5c9b424da854a23aed3" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalClassFormatException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;IllegalClassFormatException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="3000a762ee64415745b5fdbbbc51f6c1e8ff219b" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="514af566ba301a0da64c0575b9b4df517371bfb9" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="388904e6bc3c571ef432239ca049a7dc85fe8a32" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalThreadStateException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;IllegalThreadStateException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="2964a5d50fe4e208559f76d6e1533b042a16c329" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IllegalThreadStateException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;IllegalThreadStateException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="9eb24670fd7025590745ae7403f0c3466f69e65a" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageInputStreamImpl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageInputStreamImpl&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="91e161ca22b5ce0be7bd568f76f3f728e9f3dd62" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageInputStreamSpi&lt;/code&gt; with a given set of values.</source>
          <target state="translated">지정된 값 세트로 &lt;code&gt;ImageInputStreamSpi&lt;/code&gt; 를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="46f71769a0bb096dec00c531b5b8d0de73c54c81" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageOutputStreamImpl&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="87d9160bcc94b0684abaec7cb3864f264fce8567" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageOutputStreamSpi&lt;/code&gt; with a given set of values.</source>
          <target state="translated">지정된 값 세트로 &lt;code&gt;ImageOutputStreamSpi&lt;/code&gt; 를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="ab57cd828f26b4a9205a70ecae67fb30eadd54d9" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageReadParam&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReadParam&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="cfca832c3ddade130381961fe44e2216f02236bf" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageReader&lt;/code&gt; and sets its &lt;code&gt;originatingProvider&lt;/code&gt; field to the supplied value.</source>
          <target state="translated">구축 &lt;code&gt;ImageReader&lt;/code&gt; 그 설정 &lt;code&gt;originatingProvider&lt;/code&gt; 에 제공된 값으로 필드.</target>
        </trans-unit>
        <trans-unit id="e127992b8865aa97001601ca2dd2458bdcee7851" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageReaderSpi&lt;/code&gt; with a given set of values.</source>
          <target state="translated">지정된 값 세트로 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="362e123b7b40fa8e3630bcbf1cca2acc853f2203" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageReaderWriterSpi&lt;/code&gt; with a given set of values.</source>
          <target state="translated">지정된 값 세트로 &lt;code&gt;ImageReaderWriterSpi&lt;/code&gt; 를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="7ff552d35f00aab3a46f26688caa3941d9dde76b" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageTranscoderSpi&lt;/code&gt; with a given set of values.</source>
          <target state="translated">&lt;code&gt;ImageTranscoderSpi&lt;/code&gt; 를 구축합니다지정된 값 세트로 를 합니다.</target>
        </trans-unit>
        <trans-unit id="965cdf6b5fc70aad4c18908e7226855827dd351f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; directly from a &lt;code&gt;ColorModel&lt;/code&gt; and a &lt;code&gt;SampleModel&lt;/code&gt;. It is the caller's responsibility to supply compatible parameters.</source>
          <target state="translated">&lt;code&gt;ColorModel&lt;/code&gt; 및 &lt;code&gt;SampleModel&lt;/code&gt; 로부터 직접 &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; 를 구축합니다 . 호환 가능한 매개 변수를 제공하는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="4ce111cd486f7ca2e4be5cf6911e9160ce36a9e4" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; from a &lt;code&gt;RenderedImage&lt;/code&gt;. If a &lt;code&gt;BufferedImage&lt;/code&gt; is being used, one of the factory methods &lt;code&gt;createFromRenderedImage&lt;/code&gt; or &lt;code&gt;createFromBufferedImageType&lt;/code&gt; should be used instead in order to get a more accurate result.</source>
          <target state="translated">&lt;code&gt;RenderedImage&lt;/code&gt; 로부터 &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; 를 구축합니다 . 경우 &lt;code&gt;BufferedImage&lt;/code&gt; 사용하고, 공장 방법 중 하나 &lt;code&gt;createFromRenderedImage&lt;/code&gt; 또는 &lt;code&gt;createFromBufferedImageType&lt;/code&gt; 은 보다 정확한 결과를 얻기 위해 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fad9a5319bfa69d5a792245d2ac6a27b86c31d48" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageWriteParam&lt;/code&gt; set to use a given &lt;code&gt;Locale&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Locale&lt;/code&gt; 를 사용 하도록 &lt;code&gt;ImageWriteParam&lt;/code&gt; 세트를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="268b527c87c5b77e797a81f075598692b33defc6" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageWriter&lt;/code&gt; and sets its &lt;code&gt;originatingProvider&lt;/code&gt; instance variable to the supplied value.</source>
          <target state="translated">구축 &lt;code&gt;ImageWriter&lt;/code&gt; 그 설정 &lt;code&gt;originatingProvider&lt;/code&gt; 에 제공된 값으로 인스턴스 변수.</target>
        </trans-unit>
        <trans-unit id="c41813d92dd8fab16fbccba474e1257c22c3aebd" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;ImageWriterSpi&lt;/code&gt; with a given set of values.</source>
          <target state="translated">지정된 값 세트로 &lt;code&gt;ImageWriterSpi&lt;/code&gt; 를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="c7799da478aca1bde62fecf54c8ff053ebdfcdfa" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IncompatibleClassChangeError&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;IncompatibleClassChangeError&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="6e7c01f9b1aa511df38194c932f98b19e2af1357" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IncompatibleClassChangeError&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 사용해 &lt;code&gt;IncompatibleClassChangeError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="1bc30462b4746533fc5d8dc868900be75f75c5c6" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 가 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="2811ae288a52a3ce1d43eece93397ed87e85d4af" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="ab2d651be39a988956a3ac9aea30e21ca61b6a90" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InputMismatchException&lt;/code&gt; with &lt;code&gt;null&lt;/code&gt; as its error message string.</source>
          <target state="translated">에러 메세지 캐릭터 라인으로서 &lt;code&gt;null&lt;/code&gt; 를 가지는 &lt;code&gt;InputMismatchException&lt;/code&gt; 를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="b172945f1332e8e93686998d505ba1041d12efab" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InputMismatchException&lt;/code&gt;, saving a reference to the error message string &lt;code&gt;s&lt;/code&gt; for later retrieval by the &lt;code&gt;getMessage&lt;/code&gt; method.</source>
          <target state="translated">구축 &lt;code&gt;InputMismatchException&lt;/code&gt; 를 참조를 저장하는 에러 메시지 문자열 &lt;code&gt;s&lt;/code&gt; 바이 나중에 검색 용 &lt;code&gt;getMessage&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="4546bf9981338bb6a5c8fd937ffb4721dc6272b1" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InstantiationError&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;InstantiationError&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="cb13634d97538ea1aa0ac145e39946dd45713255" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InstantiationError&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;InstantiationError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="12349616e4b7b0027055aa79b0a401b2e5bf86c2" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InstantiationException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;InstantiationException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="0419ca21ea07d83f96673bea942c793524b2da0b" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InstantiationException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;InstantiationException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="9528fd68a7758138411123d7cce57283e85eaa5f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InternalError&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;InternalError&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="99d5e50563385cd240db7eba5b3cb158eb1e0b95" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InternalError&lt;/code&gt; with the specified cause and a detail message of &lt;code&gt;(cause==null ? null :
 cause.toString())&lt;/code&gt; (which typically contains the class and detail message of &lt;code&gt;cause&lt;/code&gt;).</source>
          <target state="translated">구축 &lt;code&gt;InternalError&lt;/code&gt; 지정된 원인의 상세 메세지 &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (보통의 클래스와 상세 메세지 포함하는 &lt;code&gt;cause&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ce173c1bc7c32244c9508083b74eb33e04338468" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InternalError&lt;/code&gt; with the specified detail message and cause.</source>
          <target state="translated">지정된 상세 메세지 및 원인으로 &lt;code&gt;InternalError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="93be5d590ca40fdf4e47cf472b8d7a68f2026a79" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InternalError&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;InternalError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="555ec9d800202cd4bddd181d6d1452243cf858d6" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InterruptedException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;InterruptedException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="95c261a2ea174d604280006486b65cba4e4a1e84" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InterruptedException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;InterruptedException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="c3da20870f34c6bb92c4a23e9b624135667358e9" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InterruptedIOException&lt;/code&gt; with &lt;code&gt;null&lt;/code&gt; as its error detail message.</source>
          <target state="translated">에러 상세 메세지로서 &lt;code&gt;null&lt;/code&gt; 를 가지는 &lt;code&gt;InterruptedIOException&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="13e97135c6a8d063ebe59b8a835b38ab67575f45" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InterruptedIOException&lt;/code&gt; with the specified detail message. The string &lt;code&gt;s&lt;/code&gt; can be retrieved later by the &lt;code&gt;&lt;a href=&quot;../lang/throwable#getMessage--&quot;&gt;&lt;code&gt;Throwable.getMessage()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of class &lt;code&gt;java.lang.Throwable&lt;/code&gt;.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;InterruptedIOException&lt;/code&gt; 을 구축합니다 . 문자열 &lt;code&gt;s&lt;/code&gt; 는 나중에 &lt;code&gt;java.lang.Throwable&lt;/code&gt; 클래스 의 &lt;code&gt;&lt;a href=&quot;../lang/throwable#getMessage--&quot;&gt;&lt;code&gt;Throwable.getMessage()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드 로 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8b9f4a2ead33d5c52463c379e1c34de4d6e73ae7" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;IntrospectionException&lt;/code&gt; with a detailed message.</source>
          <target state="translated">상세한 메세지를 가지는 &lt;code&gt;IntrospectionException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="88ec28484830b8a512f3bab5d55c7f26b2b18671" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InvalidApplicationException&lt;/code&gt; with the specified &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Object&lt;/code&gt; 로 &lt;code&gt;InvalidApplicationException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="0edf1c1044153069ce830f9dcf7a18dc895ab99e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InvalidMidiDataException&lt;/code&gt; with &lt;code&gt;null&lt;/code&gt; for its error detail message.</source>
          <target state="translated">에러 상세 메세지에 대해 &lt;code&gt;null&lt;/code&gt; 를 가지는 &lt;code&gt;InvalidMidiDataException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="f92ebb4882369a80882001fc0df651ea83327d64" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InvalidMidiDataException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;InvalidMidiDataException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="15acb36583693587e75bbbbc2197487be7d5c43b" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InvalidObjectException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InvalidObjectException&lt;/code&gt; 을 구축 합니다 .</target>
        </trans-unit>
        <trans-unit id="281eb440605d594b03d364640cadfb6e66fb67a3" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;InvocationTargetException&lt;/code&gt; with &lt;code&gt;null&lt;/code&gt; as the target exception.</source>
          <target state="translated">대상 예외 가 &lt;code&gt;null&lt;/code&gt; 인 &lt;code&gt;InvocationTargetException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="b06675de888362b901cc5cb127ff1d98077d578d" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 객체를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="c34f8f9edd036987d46d3b277a5b9a611f6517e5" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;MBeanConstructorInfo&lt;/code&gt; 객체를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="253b92090c9b21349ce1296f66555ee133d7e7b6" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; object. The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; of the constructed object will include fields contributed by any annotations on the &lt;code&gt;Constructor&lt;/code&gt; object that contain the &lt;a href=&quot;descriptorkey&quot;&gt;&lt;code&gt;DescriptorKey&lt;/code&gt;&lt;/a&gt; meta-annotation.</source>
          <target state="translated">&lt;code&gt;MBeanConstructorInfo&lt;/code&gt; 객체를 구축 합니다. &lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt; 구축 된 개체의은에 어떤 주석으로 기여 필드가 포함됩니다 &lt;code&gt;Constructor&lt;/code&gt; 포함 개체 &lt;a href=&quot;descriptorkey&quot;&gt; &lt;code&gt;DescriptorKey&lt;/code&gt; 를의&lt;/a&gt; 메타 주석을.</target>
        </trans-unit>
        <trans-unit id="480e63c2fb11040ade9e0a83dedfdf28a8a9c093" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanFeatureInfo&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;MBeanFeatureInfo&lt;/code&gt; 객체를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="ee17e73d54543cf62564ca637a96fd1c599cbb35" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanFeatureInfo&lt;/code&gt; object. This constructor is equivalent to &lt;code&gt;MBeanFeatureInfo(name,
 description, (Descriptor) null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MBeanFeatureInfo&lt;/code&gt; 객체를 구축 합니다. 이 생성자는 &lt;code&gt;MBeanFeatureInfo(name, description, (Descriptor) null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="baa21aa96a9f61f5c8e167645c8cbcac5bdd3af5" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanInfo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MBeanInfo&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="a1d77278eb2749440584e3e12178112dc36c2eb9" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 객체를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="d99d8d9beb1828156b082719cf3c467979b04bc1" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanOperationInfo&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;MBeanOperationInfo&lt;/code&gt; 객체를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="5e1d6254d21bc8a6dd449b82eaded8c139408a72" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanOperationInfo&lt;/code&gt; object. The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; of the constructed object will include fields contributed by any annotations on the &lt;code&gt;Method&lt;/code&gt; object that contain the &lt;a href=&quot;descriptorkey&quot;&gt;&lt;code&gt;DescriptorKey&lt;/code&gt;&lt;/a&gt; meta-annotation.</source>
          <target state="translated">&lt;code&gt;MBeanOperationInfo&lt;/code&gt; 객체를 구축 합니다. &lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt; 구축 된 개체의은에 어떤 주석으로 기여 필드가 포함됩니다 &lt;code&gt;Method&lt;/code&gt; 포함 개체 &lt;a href=&quot;descriptorkey&quot;&gt; &lt;code&gt;DescriptorKey&lt;/code&gt; 를의&lt;/a&gt; 메타 주석을.</target>
        </trans-unit>
        <trans-unit id="8e3290043b8102330a4da1b693285a07b62f2e41" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MBeanParameterInfo&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;MBeanParameterInfo&lt;/code&gt; 객체를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="c2471d83acd4781485100d547d34a0c33069bf2c" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;MalformedInputException&lt;/code&gt; with the given length.</source>
          <target state="translated">지정된 길이 로 &lt;code&gt;MalformedInputException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="8dba9a033e21b3c5170bb35555a160012d733880" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance, which describes the attribute of an open MBean with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt;, and the specified read/write access properties.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; 및 &lt;code&gt;description&lt;/code&gt; 및 지정된 읽기 / 쓰기 액세스 특성을 가진 열린 MBean의 속성을 설명 하는 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="2d745cc5333073b3d0449e9a4405ea8c8df8ed39" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance, which describes the attribute of an open MBean with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;defaultValue&lt;/code&gt;, and the specified read/write access properties.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; 및 &lt;code&gt;defaultValue&lt;/code&gt; 및 지정된 읽기 / 쓰기 액세스 특성을 가진 열린 MBean의 속성을 설명 하는 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="3b6c7a4468eb89cf67abb4efa0839a84c08d96cb" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance, which describes the attribute of an open MBean with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;defaultValue&lt;/code&gt; and &lt;code&gt;legalValues&lt;/code&gt;, and the specified read/write access properties.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , &lt;code&gt;defaultValue&lt;/code&gt; 및 &lt;code&gt;legalValues&lt;/code&gt; 및 지정된 읽기 / 쓰기 액세스 특성을 가진 열린 MBean의 속성을 설명 하는 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="3b3bfa1db480c582afb837fe4f1c597ccdf6c725" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance, which describes the attribute of an open MBean with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, read/write access properties, and &lt;code&gt;Descriptor&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , read / write access properties 및 &lt;code&gt;Descriptor&lt;/code&gt; 를 가지는 공개 MBean의 속성을 기술 하는 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="25c4b9b2abf4a8248eda97134d72044f03a94d3a" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance, which describes the attribute of an open MBean, with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt; and &lt;code&gt;maxValue&lt;/code&gt;. It is possible to specify minimal and maximal values only for an open type whose values are &lt;code&gt;Comparable&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , &lt;code&gt;defaultValue&lt;/code&gt; , &lt;code&gt;minValue&lt;/code&gt; 및 &lt;code&gt;maxValue&lt;/code&gt; 로 , 공개 MBean 속성을 기술 하는 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스를 구축합니다 . 값이 &lt;code&gt;Comparable&lt;/code&gt; 인 열린 유형에 대해서만 최소값과 최대 값을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="015960f0a192a3ad4ab0f49c74e770314fd96a67" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instance, which describes the constructor of a class of open MBeans with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;signature&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; 및 &lt;code&gt;signature&lt;/code&gt; 를 가지는 공개 MBean 클래스의 생성자를 기술 하는 &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="69dc10fb87049acdc978c8dcee742a8049c14b74" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instance, which describes the constructor of a class of open MBeans with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;signature&lt;/code&gt;, and &lt;code&gt;descriptor&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , &lt;code&gt;signature&lt;/code&gt; 및 &lt;code&gt;descriptor&lt;/code&gt; 를 가지는 공개 MBean 클래스의 생성자를 기술 하는 &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="12f0e0fd37b42ac2bf2482090222cb140738de3d" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instance, which describes a class of open MBeans with the specified &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;openAttributes&lt;/code&gt;, &lt;code&gt;openConstructors&lt;/code&gt; , &lt;code&gt;openOperations&lt;/code&gt; and &lt;code&gt;notifications&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;className&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , &lt;code&gt;openAttributes&lt;/code&gt; , &lt;code&gt;openConstructors&lt;/code&gt; , &lt;code&gt;openOperations&lt;/code&gt; 및 &lt;code&gt;notifications&lt;/code&gt; 를 사용하여 열린 MBean 클래스를 설명 하는 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 인스턴스를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="2e9b2ff161ed4c26f8e572e3d01c4bd2932c3e27" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instance, which describes a class of open MBeans with the specified &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;openAttributes&lt;/code&gt;, &lt;code&gt;openConstructors&lt;/code&gt; , &lt;code&gt;openOperations&lt;/code&gt;, &lt;code&gt;notifications&lt;/code&gt;, and &lt;code&gt;descriptor&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;className&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , &lt;code&gt;openAttributes&lt;/code&gt; , &lt;code&gt;openConstructors&lt;/code&gt; , &lt;code&gt;openOperations&lt;/code&gt; , &lt;code&gt;notifications&lt;/code&gt; 및 &lt;code&gt;descriptor&lt;/code&gt; 로 지정된 MBean 클래스를 기술 하는 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="f9d7b1a5988fa6783ddec94787ffa6ecd36bc467" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instance, which describes the operation of a class of open MBeans, with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;signature&lt;/code&gt;, &lt;code&gt;returnOpenType&lt;/code&gt; and &lt;code&gt;impact&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , &lt;code&gt;signature&lt;/code&gt; , &lt;code&gt;returnOpenType&lt;/code&gt; 및 &lt;code&gt;impact&lt;/code&gt; 로 , 공개 MBean 클래스의 오퍼레이션을 기술 하는 &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="e4d98f9ac7bd3d5d3b6ac8d701c0d246db4a1d5e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instance, which describes the operation of a class of open MBeans, with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;signature&lt;/code&gt;, &lt;code&gt;returnOpenType&lt;/code&gt;, &lt;code&gt;impact&lt;/code&gt;, and &lt;code&gt;descriptor&lt;/code&gt;.</source>
          <target state="translated">구축 &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; 의 지정과, 공개 MBean의 클래스의 동작을 설명 인스턴스 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , &lt;code&gt;signature&lt;/code&gt; , &lt;code&gt;returnOpenType&lt;/code&gt; , &lt;code&gt;impact&lt;/code&gt; 및 &lt;code&gt;descriptor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e089f6eefe8be69b68fac0d7028a3bd362a66ed1" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt;.</source>
          <target state="translated">구축 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 의 지정된으로, 하나 개 이상의 동작 또는 공개 MBean 클래스의 생성자에 사용되는 파라미터를 설명 인스턴스 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; 에 및 &lt;code&gt;description&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42c255fcf3df97c82495f62bb7090b2dcf7e2f95" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;defaultValue&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; 및 &lt;code&gt;defaultValue&lt;/code&gt; 와 함께 열린 MBean 클래스의 하나 이상의 오퍼레이션 또는 생성자에 사용되는 매개 변수를 설명 하는 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 인스턴스를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="01d3aa4673a31616ae5cc9639a078f9a2ec1fa4c" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;defaultValue&lt;/code&gt; and &lt;code&gt;legalValues&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , &lt;code&gt;defaultValue&lt;/code&gt; 및 &lt;code&gt;legalValues&lt;/code&gt; 로 , 공개 MBean 클래스의 하나 이상의 오퍼레이션 또는 생성자에 사용되는 파라미터를 기술 하는 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="ce2efda98e7d24892d5b24ebe816dfa3f27ecd9d" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt; and &lt;code&gt;maxValue&lt;/code&gt;. It is possible to specify minimal and maximal values only for an open type whose values are &lt;code&gt;Comparable&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; , &lt;code&gt;defaultValue&lt;/code&gt; , &lt;code&gt;minValue&lt;/code&gt; 및 &lt;code&gt;maxValue&lt;/code&gt; 와 함께 열린 MBean 클래스의 하나 이상의 오퍼레이션 또는 생성자에 사용되는 매개 변수를 설명 하는 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 인스턴스를 구성합니다 . 값이 &lt;code&gt;Comparable&lt;/code&gt; 인 열린 유형에 대해서만 최소값과 최대 값을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af073e76d5cd1c514ae4ab91905e6a768c7363eb" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;openType&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, and &lt;code&gt;descriptor&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;openType&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; 및 &lt;code&gt;descriptor&lt;/code&gt; 를 사용하여 공개 MBean 클래스의 하나 이상의 오퍼레이션 또는 생성자에 사용되는 매개 변수를 설명 하는 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 인스턴스를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="1824a94c4081a79b65588b98b0f70a6bc0951efc" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OpenType&lt;/code&gt; instance (actually a subclass instance as &lt;code&gt;OpenType&lt;/code&gt; is abstract), checking for the validity of the given parameters. The validity constraints are described below for each parameter.</source>
          <target state="translated">주어진 매개 변수의 유효성을 검사 하여 &lt;code&gt;OpenType&lt;/code&gt; 인스턴스 (실제로 &lt;code&gt;OpenType&lt;/code&gt; 이 추상이므로 서브 클래스 인스턴스 )를 구성합니다. 각 매개 변수에 대한 유효성 제한 조건이 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd4a985cb360d4ea0a9a9a8a6b481d9b9c465e89" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OutOfMemoryError&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;OutOfMemoryError&lt;/code&gt; 를 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="cb601be23a855330d0878390667454dc2d00dae3" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OutOfMemoryError&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 사용해 &lt;code&gt;OutOfMemoryError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="a7edbd9a9432a5f5cdde46fb429910e19aa16220" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;RMIConnector&lt;/code&gt; that will connect the RMI connector server with the given address.</source>
          <target state="translated">지정된 주소로 RMI 연결기 서버를 접속 하는 &lt;code&gt;RMIConnector&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="237d08e77d78ff6439cad1288251d200980f97fb" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;RMIConnector&lt;/code&gt; using the given RMI stub.</source>
          <target state="translated">지정된 RMI 스텁을 사용해 &lt;code&gt;RMIConnector&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="6dbfcb4fa76afcda1838e625594baf3eb3d7fcd8" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;RequiredModelMBean&lt;/code&gt; with an empty ModelMBeanInfo.</source>
          <target state="translated">빈 ModelMBeanInfo 로 &lt;code&gt;RequiredModelMBean&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="735bb3618e57ad33bf24107cd2d23b8c6e3a9dd7" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; with the specified &lt;code&gt;Throwable&lt;/code&gt; and a detail message.</source>
          <target state="translated">지정된 &lt;code&gt;Throwable&lt;/code&gt; 및 상세 메세지 를 사용해 &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="866e7110df0c5ebc6436810f12622c7f2e79f377" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; with the specified &lt;code&gt;Throwable&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Throwable&lt;/code&gt; 로 &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="e5da049375dea0bb2ef82dc7065b5f7e439c1154" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;UnknownError&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;UnknownError&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="015ce884c78ee234556f892cbbc906fff236bd4e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;UnknownError&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;UnknownError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="ed4f59849e4014fa4065a24b0068c04e4300028b" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;UnmappableCharacterException&lt;/code&gt; with the given length.</source>
          <target state="translated">주어진 길이 로 &lt;code&gt;UnmappableCharacterException&lt;/code&gt; 을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="b4d7988b5e8873ea498f1f02e1a70cd59d207cd2" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;UnmodifiableClassException&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;UnmodifiableClassException&lt;/code&gt; 상세 메세지를.</target>
        </trans-unit>
        <trans-unit id="cf4437f4f44e36d6a0cfce719c13a7e3bbb39a54" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;UnmodifiableClassException&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;UnmodifiableClassException&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="975026d6c9efe1571b35fa3ed0ae87d4142cf23f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;UnsatisfiedLinkError&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;UnsatisfiedLinkError&lt;/code&gt; 를이 상세 메세지와 함께.</target>
        </trans-unit>
        <trans-unit id="0ba5289e069c3112ad8b90cbab5e571d8396c74f" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;UnsatisfiedLinkError&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;UnsatisfiedLinkError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="3ecbf7b4eec3b3bbfebb571b46b85774e4df0286" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;VerifyError&lt;/code&gt; with no detail message.</source>
          <target state="translated">구축 &lt;code&gt;VerifyError&lt;/code&gt; 를이 상세 메세지와 함께.</target>
        </trans-unit>
        <trans-unit id="28880b751815a32e8b2ef574542fd3fa86198bc3" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;VerifyError&lt;/code&gt; with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 &lt;code&gt;VerifyError&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="968e56b6a76f1e73a3cb4ba136a152d4d6f93283" translate="yes" xml:space="preserve">
          <source>Constructs an AclNotFoundException.</source>
          <target state="translated">AclNotFoundException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="0b412c27a510ebff5a433df232ae70bfb8d32adb" translate="yes" xml:space="preserve">
          <source>Constructs an AnnotationTypeMismatchException for the specified annotation type element and found data type.</source>
          <target state="translated">지정된 주석 형 요소 및 발견 된 데이터 형에 대한 AnnotationTypeMismatchException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="18e9e30c4a15067e1861b3f1f96989bad5ccf86b" translate="yes" xml:space="preserve">
          <source>Constructs an AssertionError with its detail message derived from the specified &lt;code&gt;boolean&lt;/code&gt;, which is converted to a string as defined in section 15.18.1.1 of</source>
          <target state="translated">지정된 &lt;code&gt;boolean&lt;/code&gt; 에서 파생 된 세부 메시지를 사용하여 AssertionError를 구성합니다.이 메시지 는 섹션 15.18.1.1에 정의 된 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="d0dfc7ed22e51eeb3694bf1c1658a9d0940ccfb0" translate="yes" xml:space="preserve">
          <source>Constructs an AssertionError with its detail message derived from the specified &lt;code&gt;char&lt;/code&gt;, which is converted to a string as defined in section 15.18.1.1 of</source>
          <target state="translated">지정된 &lt;code&gt;char&lt;/code&gt; 에서 파생 된 세부 메시지를 사용하여 AssertionError를 구성합니다.이 메시지 는 섹션 15.18.1.1에 정의 된 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="d7c880a1c020c2b490b50ebfd83789b2c8fd947c" translate="yes" xml:space="preserve">
          <source>Constructs an AssertionError with its detail message derived from the specified &lt;code&gt;double&lt;/code&gt;, which is converted to a string as defined in section 15.18.1.1 of</source>
          <target state="translated">지정된 &lt;code&gt;double&lt;/code&gt; 에서 파생 된 세부 메시지를 사용하여 AssertionError를 구성합니다.이 메시지 는 섹션 15.18.1.1에 정의 된 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="3c11132621d00715e62f92304e63ef77b3c8706d" translate="yes" xml:space="preserve">
          <source>Constructs an AssertionError with its detail message derived from the specified &lt;code&gt;float&lt;/code&gt;, which is converted to a string as defined in section 15.18.1.1 of</source>
          <target state="translated">지정된 &lt;code&gt;float&lt;/code&gt; 에서 파생 된 세부 메시지를 사용하여 AssertionError를 구성합니다.이 메시지 는 섹션 15.18.1.1에 정의 된 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="61abb3d1e9ac35ef0f3edd0e6b22e8cc298faf6e" translate="yes" xml:space="preserve">
          <source>Constructs an AssertionError with its detail message derived from the specified &lt;code&gt;int&lt;/code&gt;, which is converted to a string as defined in section 15.18.1.1 of</source>
          <target state="translated">지정된 &lt;code&gt;int&lt;/code&gt; 에서 파생 된 세부 메시지를 사용하여 AssertionError를 구성합니다.이 메시지 는 섹션 15.18.1.1에 정의 된 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="585441ff6db14f5bffdd31f55a7597a3c8511e68" translate="yes" xml:space="preserve">
          <source>Constructs an AssertionError with its detail message derived from the specified &lt;code&gt;long&lt;/code&gt;, which is converted to a string as defined in section 15.18.1.1 of</source>
          <target state="translated">지정된 &lt;code&gt;long&lt;/code&gt; 에서 파생 된 세부 메시지를 사용하여 AssertionError를 구성합니다.이 메시지 는 섹션 15.18.1.1에 정의 된대로 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="438c591bcd578d0dfd3c742dc18a28bd1b6a97e0" translate="yes" xml:space="preserve">
          <source>Constructs an AssertionError with its detail message derived from the specified object, which is converted to a string as defined in section 15.18.1.1 of</source>
          <target state="translated">지정된 객체에서 파생 된 세부 메시지를 사용하여 AssertionError를 구성합니다.이 메시지는 섹션 15.18.1.1에 정의 된 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="93c03b2c6f79e1bd9978ec3c39c123952f9e9bfb" translate="yes" xml:space="preserve">
          <source>Constructs an AssertionError with no detail message.</source>
          <target state="translated">세부 메시지가없는 AssertionError를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="8070e05d27d90909fb219775e60d7d085d696a61" translate="yes" xml:space="preserve">
          <source>Constructs an Attribute object which associates the given attribute name with the given value.</source>
          <target state="translated">지정된 속성 명과 지정된 값을 관련 짓는 Attribute 객체를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="0a791ee12fb83b11af7c76faf958f31118a9757c" translate="yes" xml:space="preserve">
          <source>Constructs an AttributedString instance with the given attributed text represented by AttributedCharacterIterator.</source>
          <target state="translated">AttributedCharacterIterator로 표시되는 지정된 텍스트를 사용해 AttributedString 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="3e45037d6d116ddd3b56dd438e09dc5b3c8b8f51" translate="yes" xml:space="preserve">
          <source>Constructs an AttributedString instance with the given text and attributes.</source>
          <target state="translated">주어진 텍스트와 속성으로 AttributedString 인스턴스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f053bf0df7fecf317352b520f35bd0d57c58e69a" translate="yes" xml:space="preserve">
          <source>Constructs an AttributedString instance with the given text.</source>
          <target state="translated">주어진 텍스트로 AttributedString 인스턴스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3b2aa813e1fbb259379dac96c9c8f1fd0f41bb04" translate="yes" xml:space="preserve">
          <source>Constructs an AttributedString instance with the subrange of the given attributed text represented by AttributedCharacterIterator. If the given range produces an empty text, all attributes will be discarded. Note that any attributes wrapped by an Annotation object are discarded for a subrange of the original attribute range.</source>
          <target state="translated">AttributedCharacterIterator로 표시되는 지정된 텍스트의 부분 범위를 가지는 AttributedString 인스턴스를 구축합니다. 주어진 범위가 빈 텍스트를 생성하면 모든 속성이 삭제됩니다. Annotation 객체로 래핑 된 속성은 원래 속성 범위의 하위 범위에 대해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c22fa4883db41bf71a509a85b4c64244fe887fc9" translate="yes" xml:space="preserve">
          <source>Constructs an AttributedString instance with the subrange of the given attributed text represented by AttributedCharacterIterator. Only attributes that match the given attributes will be incorporated into the instance. If the given range produces an empty text, all attributes will be discarded. Note that any attributes wrapped by an Annotation object are discarded for a subrange of the original attribute range.</source>
          <target state="translated">AttributedCharacterIterator로 표시되는 지정된 텍스트의 부분 범위를 가지는 AttributedString 인스턴스를 구축합니다. 주어진 속성과 일치하는 속성 만 인스턴스에 통합됩니다. 주어진 범위가 빈 텍스트를 생성하면 모든 속성이 삭제됩니다. Annotation 객체로 래핑 된 속성은 원래 속성 범위의 하위 범위에 대해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f1bb4e8b29e2266fadb4fbce2ff8f0aa48ec3b08" translate="yes" xml:space="preserve">
          <source>Constructs an ExceptionInInitializerError with the specified detail message string. A detail message is a String that describes this particular exception. The detail message string is saved for later retrieval by the &lt;a href=&quot;throwable#getMessage--&quot;&gt;&lt;code&gt;Throwable.getMessage()&lt;/code&gt;&lt;/a&gt; method. There is no saved throwable object.</source>
          <target state="translated">지정된 상세 메세지 캐릭터 라인을 사용해 ExceptionInInitializerError를 구축합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다. 세부 메시지 문자열은 나중에 &lt;a href=&quot;throwable#getMessage--&quot;&gt; &lt;code&gt;Throwable.getMessage()&lt;/code&gt; &lt;/a&gt; 메소드로 검색 할 수 있도록 저장됩니다 . 저장된 던질 수있는 객체가 없습니다.</target>
        </trans-unit>
        <trans-unit id="620929b885a81e9c762c477a48b96a5b0c1cdbc4" translate="yes" xml:space="preserve">
          <source>Constructs an IllegalBlockSizeException with no detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">세부 메시지가없는 IllegalBlockSizeException을 구성합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8938ec5a43567ee1facbcb8f53c10010c7bf879d" translate="yes" xml:space="preserve">
          <source>Constructs an IllegalBlockSizeException with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 IllegalBlockSizeException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="70e6ae8d3a54bcc863bbe21bb827a1f492ed8cf9" translate="yes" xml:space="preserve">
          <source>Constructs an IllegalStateException with no detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">세부 메시지가없는 IllegalStateException을 구성합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c439f694291c4219fa1aa0fa0ddd6aaa3f9e1d79" translate="yes" xml:space="preserve">
          <source>Constructs an IllegalStateException with the specified detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">지정된 상세 메세지를 가지는 IllegalStateException을 구축합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="cfa030ad757af1baf75678b3b2ccf488fd518cfc" translate="yes" xml:space="preserve">
          <source>Constructs an IncompleteAnnotationException to indicate that the named element was missing from the specified annotation type.</source>
          <target state="translated">이름 첨부 요소가 지정된 주석 형에서 누락 된 것을 나타내는 IncompleteAnnotationException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="13a7ab9d1ae53a6f613c5cc315c0e321597ba0a8" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidAlgorithmParameterException with no detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">세부 메시지가없는 InvalidAlgorithmParameterException을 구성합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="a0ca2885588999ad43a3f67bcd5ce39629247d77" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidAlgorithmParameterException with the specified detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">지정된 상세 메세지를 가지는 InvalidAlgorithmParameterException을 구축합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c3589bea4d21aed52082a9df6ce4b4bb4a5c2474" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidClassException object.</source>
          <target state="translated">InvalidClassException 객체를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="ce3cf317ae8c3c0c44961b1672be70ce82a564eb" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidKeyException with no detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">세부 메시지가없는 InvalidKeyException을 구성합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e7fd79546c0d113625f429da50b6eba3fd68a09a" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidKeyException with the specified detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">지정된 상세 메세지를 가지는 InvalidKeyException을 구축합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="f6064bcd74d8f77ea922063bd1678a120bf5df1b" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidKeySpecException with no detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">세부 메시지가없는 InvalidKeySpecException을 구성합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="4b6439061f5125b7a92987ecdd3a985034eca0dd" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidKeySpecException with the specified detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">지정된 상세 메세지를 가지는 InvalidKeySpecException을 구축합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="db4a7c45202c9c60db9503598d5f036dd5c1f12e" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidParameterException with no detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">세부 메시지가없는 InvalidParameterException을 구성합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c66f9b4363e48cb682b98df151b26df9183d289d" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidParameterException with the specified detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">지정된 상세 메세지를 가지는 InvalidParameterException을 구축합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="75d0f7411160ef34408e37061dbdc1e09b833ae0" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidParameterSpecException with no detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">세부 메시지가없는 InvalidParameterSpecException을 구성합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="d3bf68ab96d62957b4866f22cd2d45718ae6f2f6" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidParameterSpecException with the specified detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">지정된 상세 메세지를 가지는 InvalidParameterSpecException을 구축합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c81ba0ea939215f8c939eac3be5cc656ec3f8cfb" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidPreferencesFormatException with the specified cause.</source>
          <target state="translated">지정된 원인으로 InvalidPreferencesFormatException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="629aa0c511a95698e18ecc8e387b0b4fcfb2c668" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidPreferencesFormatException with the specified detail message and cause.</source>
          <target state="translated">지정된 상세 메세지 및 원인으로 InvalidPreferencesFormatException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="31795600a6927ffe06dada3565ef7c37997fca46" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidPreferencesFormatException with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 InvalidPreferencesFormatException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="a5151f7ce5802049b705f46bb88c7c08c62e13f3" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidPropertiesFormatException with the specified cause.</source>
          <target state="translated">지정된 원인으로 InvalidPropertiesFormatException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="b410e3c16293dc472001c13d6ceb2bfdef495624" translate="yes" xml:space="preserve">
          <source>Constructs an InvalidPropertiesFormatException with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 InvalidPropertiesFormatException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="94787987d4f101e4af915f1dcedd1ee72db75565" translate="yes" xml:space="preserve">
          <source>Constructs an LDAP name from the given distinguished name.</source>
          <target state="translated">지정된 식별 명으로부터 LDAP 이름을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="719a41f848dbd63db90335e0de3b4b55aba0b711" translate="yes" xml:space="preserve">
          <source>Constructs an LDAP name given its parsed RDN components.</source>
          <target state="translated">구문 분석 된 RDN 구성 요소가 제공된 LDAP 이름을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="4f76db83f81c2f00866adc6d740216e2a04de083" translate="yes" xml:space="preserve">
          <source>Constructs an Rdn from the given &lt;code&gt;rdn&lt;/code&gt;. The contents of the &lt;code&gt;rdn&lt;/code&gt; are simply copied into the newly created Rdn.</source>
          <target state="translated">지정된 &lt;code&gt;rdn&lt;/code&gt; 로부터 Rdn를 구축합니다 . &lt;code&gt;rdn&lt;/code&gt; 의 내용은 새로 작성된 Rdn으로 간단히 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="a06844a9324262a0fe22c380c4cc5c48511b19e2" translate="yes" xml:space="preserve">
          <source>Constructs an Rdn from the given attribute set. See &lt;a href=&quot;../directory/attributes&quot;&gt;&lt;code&gt;Attributes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 속성 세트로부터 Rdn을 구축합니다. &lt;a href=&quot;../directory/attributes&quot;&gt; &lt;code&gt;Attributes&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1741849428bd2e0e201ea2cc7bd53bef3cc8ba46" translate="yes" xml:space="preserve">
          <source>Constructs an Rdn from the given attribute type and value. The string attribute values are not interpreted as &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; formatted RDN strings. That is, the values are used literally (not parsed) and assumed to be unescaped.</source>
          <target state="translated">주어진 속성 유형과 값으로 Rdn을 생성합니다. 문자열 속성 값은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; 형식의 RDN 문자열 로 해석되지 않습니다 . 즉, 값은 문자 그대로 (구문 분석되지 않음) 사용되며 이스케이프 처리되지 않은 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="4e8628e0ef2b6808254e714d923ac61dc90d71ad" translate="yes" xml:space="preserve">
          <source>Constructs an Rdn from the given string. This constructor takes a string formatted according to the rules defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; and described in the class description for &lt;a href=&quot;ldapname&quot;&gt;&lt;code&gt;LdapName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 문자열에서 Rdn을 생성합니다. 이 생성자는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 정의되고 &lt;a href=&quot;ldapname&quot;&gt; &lt;code&gt;LdapName&lt;/code&gt; &lt;/a&gt; 에 대한 클래스 설명에 설명 된 규칙에 따라 형식화 된 문자열을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="33eef4b77a13af8377cd3ac2759c4630c54b648d" translate="yes" xml:space="preserve">
          <source>Constructs an SyncFailedException with a detail message. A detail message is a String that describes this particular exception.</source>
          <target state="translated">세부 메시지가있는 SyncFailedException을 구성합니다. 세부 메시지는이 특정 예외를 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="d1bbdca624262acd497acb2ba85ffd650ad287a8" translate="yes" xml:space="preserve">
          <source>Constructs an UnmodifiableSetException with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 UnmodifiableSetException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="116a05d035fb727a9821a669a978838ee6ede74f" translate="yes" xml:space="preserve">
          <source>Constructs an UnrecoverableEntryException with no detail message.</source>
          <target state="translated">세부 메시지가없는 UnrecoverableEntryException을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="8b3dc6cb57b36b71c7e6b87a83540fddac503f0f" translate="yes" xml:space="preserve">
          <source>Constructs an UnrecoverableEntryException with the specified detail message, which provides more information about why this exception has been thrown.</source>
          <target state="translated">지정된 상세 메세지를 가지는 UnrecoverableEntryException을 구축합니다.이 예외가 발생한 이유에 관한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5f4b24da27bdd5a75739b0f7c414f296629e8f3a" translate="yes" xml:space="preserve">
          <source>Constructs an UnrecoverableKeyException with no detail message.</source>
          <target state="translated">세부 메시지가없는 UnrecoverableKeyException을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="efbe737b422d075d17f76406112dcea23049683e" translate="yes" xml:space="preserve">
          <source>Constructs an UnrecoverableKeyException with the specified detail message, which provides more information about why this exception has been thrown.</source>
          <target state="translated">지정된 상세 메세지를 가지는 UnrecoverableKeyException을 구축합니다.이 예외가 발생한 이유에 관한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="473f1bb79a5f8b9e6d96811854c5482527a34537" translate="yes" xml:space="preserve">
          <source>Constructs an UnsupportedEncodingException with a detail message.</source>
          <target state="translated">상세 메세지를 가지는 UnsupportedEncodingException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="4837e8501afa628a85134249e71e9c1668a329bf" translate="yes" xml:space="preserve">
          <source>Constructs an UnsupportedEncodingException without a detail message.</source>
          <target state="translated">세부 메시지가없는 UnsupportedEncodingException을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="fc80886738eda409dedd2cbd305075e3414ed0e5" translate="yes" xml:space="preserve">
          <source>Constructs an UnsupportedOperationException with no detail message.</source>
          <target state="translated">세부 메시지가없는 UnsupportedOperationException을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a1fc1e6cb588ea0cc83ee38f779f81955c41be33" translate="yes" xml:space="preserve">
          <source>Constructs an UnsupportedOperationException with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 가지는 UnsupportedOperationException을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="85b37e5229626d9a75cf7009d2618259eafdc8fd" translate="yes" xml:space="preserve">
          <source>Constructs an a &lt;code&gt;VirtualMachineError&lt;/code&gt; with the specified cause and a detail message of &lt;code&gt;(cause==null ? null :
 cause.toString())&lt;/code&gt; (which typically contains the class and detail message of &lt;code&gt;cause&lt;/code&gt;).</source>
          <target state="translated">구축하는 A &lt;code&gt;VirtualMachineError&lt;/code&gt; 지정된 원인의 상세 메세지 &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (보통의 클래스와 상세 메세지 포함하는 &lt;code&gt;cause&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f036d17a752460077ab3d4cc151ee55047e75f22" translate="yes" xml:space="preserve">
          <source>Constructs an annotation record with the given value, which may be null.</source>
          <target state="translated">지정된 값으로 주석 레코드를 작성합니다. null의 경우도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f729b251ffa631ca4408cc4d6397f1fa6644f27" translate="yes" xml:space="preserve">
          <source>Constructs an attribute change notification object. In addition to the information common to all notification, the caller must supply the name and type of the attribute, as well as its old and new values.</source>
          <target state="translated">속성 변경 통지 오브젝트를 구축합니다. 모든 알림에 공통적 인 정보 외에도 호출자는 속성의 이름과 유형뿐만 아니라 이전 값과 새 값을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="06a9131a8901756818ea60a509b7d07b01fb7a16" translate="yes" xml:space="preserve">
          <source>Constructs an audio file format object. This protected constructor is intended for use by providers of file-reading services when returning information about an audio file or about supported audio file formats.</source>
          <target state="translated">오디오 파일 형식 객체를 구성합니다. 이 보호 된 생성자는 오디오 파일 또는 지원되는 오디오 파일 형식에 대한 정보를 반환 할 때 파일 읽기 서비스 공급자가 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="fa54ded5e6e877af881afd54be78178a02f9d219" translate="yes" xml:space="preserve">
          <source>Constructs an audio file format object. This public constructor may be used by applications to describe the properties of a requested audio file.</source>
          <target state="translated">오디오 파일 형식 객체를 구성합니다. 이 공용 생성자는 응용 프로그램에서 요청 된 오디오 파일의 속성을 설명하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f2a847b3be68998fba7983611dc7f8b24adeabb" translate="yes" xml:space="preserve">
          <source>Constructs an audio input stream that has the requested format and length in sample frames, using audio data from the specified input stream.</source>
          <target state="translated">지정된 입력 스트림의 오디오 데이터를 사용하여 샘플 프레임으로 요청 된 형식과 길이를 가진 오디오 입력 스트림을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="aebdcb1b3a3ecad43d6bb70cfe90876697ebfdf2" translate="yes" xml:space="preserve">
          <source>Constructs an audio input stream that reads its data from the target data line indicated. The format of the stream is the same as that of the target data line, and the length is AudioSystem#NOT_SPECIFIED.</source>
          <target state="translated">표시된 대상 데이터 라인에서 데이터를 읽는 오디오 입력 스트림을 구성합니다. 스트림의 형식은 대상 데이터 라인의 형식과 동일하며 길이는 AudioSystem # NOT_SPECIFIED입니다.</target>
        </trans-unit>
        <trans-unit id="7d54fb62f2173cc4f57a4eaa95a8f225a8b7f89b" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;AttributeList&lt;/code&gt; with the initial capacity specified.</source>
          <target state="translated">지정된 초기 용량으로 비어있는 &lt;code&gt;AttributeList&lt;/code&gt; 를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="17de9447d66659a340d4e9e41d4d019898a76378" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;AttributeList&lt;/code&gt;.</source>
          <target state="translated">빈 &lt;code&gt;AttributeList&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="afeeb8f1db268cd9aa3ab19b30bdcbde2f553bcf" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;HashMap&lt;/code&gt; with the default initial capacity (16) and the default load factor (0.75).</source>
          <target state="translated">기본 초기 용량 (16) 및 기본로드 팩터 (0.75)를 사용 하여 빈 &lt;code&gt;HashMap&lt;/code&gt; 을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="b53d85ac0f5d731b3d486e5ca3e3f1b7dcd909eb" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;HashMap&lt;/code&gt; with the specified initial capacity and load factor.</source>
          <target state="translated">지정된 초기 용량과 부하 계수 로 비어있는 &lt;code&gt;HashMap&lt;/code&gt; 을 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="d2e9a29d8197149c45708af091ba25b8c924ec98" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;HashMap&lt;/code&gt; with the specified initial capacity and the default load factor (0.75).</source>
          <target state="translated">지정된 초기 용량과 기본 부하 계수 (0.75) 로 빈 &lt;code&gt;HashMap&lt;/code&gt; 을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="e40aad7405a287d7db7cedb0139dc13a31f9c044" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;IIOMetadata&lt;/code&gt; object. The subclass is responsible for supplying values for all protected instance variables that will allow any non-overridden default implementations of methods to satisfy their contracts. For example, &lt;code&gt;extraMetadataFormatNames&lt;/code&gt; should not have length 0.</source>
          <target state="translated">빈 &lt;code&gt;IIOMetadata&lt;/code&gt; 객체를 생성합니다. 서브 클래스는 재정의되지 않은 기본 메소드 구현이 계약을 충족시킬 수 있도록 모든 보호 된 인스턴스 변수에 값을 제공해야합니다. 예를 들어 &lt;code&gt;extraMetadataFormatNames&lt;/code&gt; 의 길이는 0이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="59735954f42095c6b13c340eae6b4213fa1af746" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;IIOMetadataNode&lt;/code&gt;.</source>
          <target state="translated">빈 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="45152300419ed36803d2297b107e920374064363" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;ImageWriteParam&lt;/code&gt;. It is up to the subclass to set up the instance variables properly.</source>
          <target state="translated">빈 &lt;code&gt;ImageWriteParam&lt;/code&gt; 를 구축합니다 . 인스턴스 변수를 올바르게 설정하는 것은 서브 클래스에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb854ec224ff9b88d1e9197bc982c9bd27220f7b" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;LinkedHashMap&lt;/code&gt; instance with the specified initial capacity, load factor and ordering mode.</source>
          <target state="translated">지정된 초기 용량,로드 팩터 및 순서 모드를 사용 하여 빈 &lt;code&gt;LinkedHashMap&lt;/code&gt; 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="250602ece0fe5ce49729d62483c775e5dc7e80b5" translate="yes" xml:space="preserve">
          <source>Constructs an empty Builder. The default value of all fields, extensions, and private use information is the empty string.</source>
          <target state="translated">빈 빌더를 구성합니다. 모든 필드, 확장명 및 개인용 정보의 기본값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="5b3ad4993197133686e45e84ca5b8a22c9bf657e" translate="yes" xml:space="preserve">
          <source>Constructs an empty RoleList with the initial capacity specified.</source>
          <target state="translated">초기 용량이 지정된 비어있는 RoleList를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="2e2c69f5ffd77c3f54eb3fa7729babc932d05551" translate="yes" xml:space="preserve">
          <source>Constructs an empty RoleList.</source>
          <target state="translated">빈 RoleList를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="391c8aec84711fc93ef3f388ec8fe37272100611" translate="yes" xml:space="preserve">
          <source>Constructs an empty RoleUnresolvedList with the initial capacity specified.</source>
          <target state="translated">초기 용량이 지정된 비어있는 RoleUnresolvedList를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="a68b19bbe8e1be40b503f35321c702bae539cc11" translate="yes" xml:space="preserve">
          <source>Constructs an empty RoleUnresolvedList.</source>
          <target state="translated">빈 RoleUnresolvedList를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="e78770eb87d41f4060fd64f7302d9582e1bbea93" translate="yes" xml:space="preserve">
          <source>Constructs an empty array deque with an initial capacity sufficient to hold 16 elements.</source>
          <target state="translated">16 개의 요소를 보유하기에 충분한 초기 용량으로 빈 배열 deque를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="44940dadf1973d71d535b930b8cb4423d6642aa7" translate="yes" xml:space="preserve">
          <source>Constructs an empty array deque with an initial capacity sufficient to hold the specified number of elements.</source>
          <target state="translated">지정된 수의 요소를 보유하기에 충분한 초기 용량으로 빈 배열 deque를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="3de5a835be5f46923e5c2a50b54f6bd03d34f76e" translate="yes" xml:space="preserve">
          <source>Constructs an empty deque.</source>
          <target state="translated">빈 deque를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="4d1386d5da5d51a7d121fa172a3cdbc6ddb44ccf" translate="yes" xml:space="preserve">
          <source>Constructs an empty insertion-ordered &lt;code&gt;LinkedHashMap&lt;/code&gt; instance with the default initial capacity (16) and load factor (0.75).</source>
          <target state="translated">기본 초기 용량 (16) 및로드 팩터 (0.75)를 사용 하여 빈 삽입 순서의 &lt;code&gt;LinkedHashMap&lt;/code&gt; 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="11726bda5c83e5f03ad052e68e9842974b9c6923" translate="yes" xml:space="preserve">
          <source>Constructs an empty insertion-ordered &lt;code&gt;LinkedHashMap&lt;/code&gt; instance with the specified initial capacity and a default load factor (0.75).</source>
          <target state="translated">지정된 초기 용량과 기본로드 팩터 (0.75)를 사용 하여 빈 삽입 순서의 &lt;code&gt;LinkedHashMap&lt;/code&gt; 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="e2361b036aad63b729a40d6dcbb6c8ee1d82e3df" translate="yes" xml:space="preserve">
          <source>Constructs an empty insertion-ordered &lt;code&gt;LinkedHashMap&lt;/code&gt; instance with the specified initial capacity and load factor.</source>
          <target state="translated">지정된 초기 용량 및로드 팩터 로 비어있는 삽입 순서의 &lt;code&gt;LinkedHashMap&lt;/code&gt; 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="ed4bf66ae42998afaf9f335d65e7e4365534d544" translate="yes" xml:space="preserve">
          <source>Constructs an empty list with an initial capacity of ten.</source>
          <target state="translated">초기 용량이 10 인 빈 목록을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="75c94198bdf80077b1149030c1bb246dd822d617" translate="yes" xml:space="preserve">
          <source>Constructs an empty list with the specified initial capacity.</source>
          <target state="translated">지정된 초기 용량으로 비어있는리스트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="c1c6777e6077f2c6d52283026b40c2c26a8d854f" translate="yes" xml:space="preserve">
          <source>Constructs an empty list.</source>
          <target state="translated">빈리스트를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="0622bc8a55135700dfdc6aea4f5713f07af6704d" translate="yes" xml:space="preserve">
          <source>Constructs an empty vector so that its internal data array has size &lt;code&gt;10&lt;/code&gt; and its standard capacity increment is zero.</source>
          <target state="translated">내부 데이터 배열의 크기가 &lt;code&gt;10&lt;/code&gt; 이고 표준 용량 증분이 0이 되도록 빈 벡터를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="b099610794cab84ab3ce642fc8f312e6a857e965" translate="yes" xml:space="preserve">
          <source>Constructs an empty vector with the specified initial capacity and capacity increment.</source>
          <target state="translated">지정된 초기 용량 및 용량 증분으로 빈 벡터를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="3da3713472c2b2dd6a8c8d33e869870b903b508e" translate="yes" xml:space="preserve">
          <source>Constructs an empty vector with the specified initial capacity and with its capacity increment equal to zero.</source>
          <target state="translated">지정된 초기 용량과 용량 증분이 0 인 빈 벡터를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="178c44cb12ed9ec8639504170ed00a41181835e6" translate="yes" xml:space="preserve">
          <source>Constructs an exception reporting a key management error found by an SSL subsystem.</source>
          <target state="translated">SSL 서브 시스템이 발견 한 키 관리 오류를보고하는 예외를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="68e3576f25c019a0ec5871bd7a084149fdb1bb5c" translate="yes" xml:space="preserve">
          <source>Constructs an exception reporting an SSL protocol error detected by an SSL subsystem.</source>
          <target state="translated">SSL 서브 시스템이 감지 한 SSL 프로토콜 오류를보고하는 예외를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="c046f2d355d0c60b1286c87612d4f4b47631e526" translate="yes" xml:space="preserve">
          <source>Constructs an exception reporting an error found by an SSL subsystem during handshaking.</source>
          <target state="translated">핸드 쉐이킹 중 SSL 서브 시스템이 발견 한 오류를보고하는 예외를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="ca17a174f6f64b6847f4db85cb6784818d062d43" translate="yes" xml:space="preserve">
          <source>Constructs an exception reporting an error found by an SSL subsystem.</source>
          <target state="translated">SSL 서브 시스템이 발견 한 오류를보고하는 예외를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="aaff1679b5fd8b9537fd6c050affb829bf306963" translate="yes" xml:space="preserve">
          <source>Constructs an exception reporting that the SSL peer's identity has not been verified.</source>
          <target state="translated">SSL 피어의 신원이 확인되지 않았 음을보고하는 예외를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="6c9d3b0f2af2cca4fba078d15c3ddec185cb65fe" translate="yes" xml:space="preserve">
          <source>Constructs an exception with the specified detail message.</source>
          <target state="translated">지정된 상세 메세지를 사용해 예외를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="442d3bb222b0d30f21fa859562df371a5b75e6c7" translate="yes" xml:space="preserve">
          <source>Constructs an identity with the specified name and no scope.</source>
          <target state="translated">지정된 이름으로 범위가없는 아이디를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="7e446f01259b73f71ea1f3d1cf4214d736c7f64b" translate="yes" xml:space="preserve">
          <source>Constructs an identity with the specified name and scope.</source>
          <target state="translated">지정된 이름과 범위로 아이덴티티를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="25264653a2763a48e49704ac1b1aba16bdde92bf" translate="yes" xml:space="preserve">
          <source>Constructs an info object that describes a line of the specified class. This constructor is typically used by an application to describe a desired line.</source>
          <target state="translated">지정된 클래스의 라인을 기술하는 정보 객체를 구축합니다. 이 생성자는 일반적으로 응용 프로그램에서 원하는 행을 설명하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cb12399d9e1dabf9f40a3d26704e49efbe7818f3" translate="yes" xml:space="preserve">
          <source>Constructs an initial DirContext using the supplied environment. Environment properties are discussed in the &lt;code&gt;javax.naming.InitialContext&lt;/code&gt; class description.</source>
          <target state="translated">제공된 환경을 사용하여 초기 DirContext를 구성합니다. 환경 속성은 &lt;code&gt;javax.naming.InitialContext&lt;/code&gt; 클래스 설명에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="3ce89c962d2596782d2f4074d00c414591f63e8a" translate="yes" xml:space="preserve">
          <source>Constructs an initial DirContext with the option of not initializing it. This may be used by a constructor in a subclass when the value of the environment parameter is not yet known at the time the &lt;code&gt;InitialDirContext&lt;/code&gt; constructor is called. The subclass's constructor will call this constructor, compute the value of the environment, and then call &lt;code&gt;init()&lt;/code&gt; before returning.</source>
          <target state="translated">초기화하지 않는 옵션으로 초기 DirContext를 구축합니다. &lt;code&gt;InitialDirContext&lt;/code&gt; 생성자가 호출 될 때 환경 매개 변수의 값이 아직 알려지지 않은 경우 서브 클래스의 생성자가이를 사용할 수 있습니다 . 서브 클래스의 생성자는이 생성자를 호출하고 환경 값을 계산 한 다음 반환하기 전에 &lt;code&gt;init()&lt;/code&gt; 를 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="a18e2eabf73c40adbad5c371dbbe59bb38b5cb35" translate="yes" xml:space="preserve">
          <source>Constructs an initial DirContext. No environment properties are supplied. Equivalent to &lt;code&gt;new InitialDirContext(null)&lt;/code&gt;.</source>
          <target state="translated">초기 DirContext를 구축합니다. 환경 속성이 제공되지 않습니다. &lt;code&gt;new InitialDirContext(null)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3f0af091c4848669ad54c1c3bf3968b6d95e72a0" translate="yes" xml:space="preserve">
          <source>Constructs an initial context using environment properties and connection request controls. See &lt;code&gt;javax.naming.InitialContext&lt;/code&gt; for a discussion of environment properties.</source>
          <target state="translated">환경 속성 및 연결 요청 컨트롤을 사용하여 초기 컨텍스트를 구성합니다. 환경 속성에 대한 설명은 &lt;code&gt;javax.naming.InitialContext&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e25d804d1b5b211028b98923c214212660e58f3c" translate="yes" xml:space="preserve">
          <source>Constructs an initial context using no environment properties or connection request controls. Equivalent to &lt;code&gt;new InitialLdapContext(null, null)&lt;/code&gt;.</source>
          <target state="translated">환경 속성이나 연결 요청 컨트롤을 사용하지 않고 초기 컨텍스트를 구성합니다. &lt;code&gt;new InitialLdapContext(null, null)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="99f9a52b040401cd117c721b934a83c5dddd303b" translate="yes" xml:space="preserve">
          <source>Constructs an initial context using the supplied environment. Environment properties are discussed in the class description.</source>
          <target state="translated">제공된 환경을 사용하여 초기 컨텍스트를 구성합니다. 환경 속성은 클래스 설명에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b58cc4247e28d1bf57db72072447751d60b7a33b" translate="yes" xml:space="preserve">
          <source>Constructs an initial context with the option of not initializing it. This may be used by a constructor in a subclass when the value of the environment parameter is not yet known at the time the &lt;code&gt;InitialContext&lt;/code&gt; constructor is called. The subclass's constructor will call this constructor, compute the value of the environment, and then call &lt;code&gt;init()&lt;/code&gt; before returning.</source>
          <target state="translated">초기 컨텍스트를 초기화하지 않는 옵션으로 초기 컨텍스트를 구성합니다. &lt;code&gt;InitialContext&lt;/code&gt; 생성자가 호출 될 때 환경 매개 변수의 값이 아직 알려지지 않은 경우 서브 클래스의 생성자가이를 사용할 수 있습니다 . 서브 클래스의 생성자는이 생성자를 호출하고 환경 값을 계산 한 다음 반환하기 전에 &lt;code&gt;init()&lt;/code&gt; 를 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="94212492bc1ad562a14f376a79669a3ace311924" translate="yes" xml:space="preserve">
          <source>Constructs an initial context. No environment properties are supplied. Equivalent to &lt;code&gt;new InitialContext(null)&lt;/code&gt;.</source>
          <target state="translated">초기 문맥을 구축합니다. 환경 속성이 제공되지 않습니다. &lt;code&gt;new InitialContext(null)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="89bd3e1d8034349ffd6f3560cf7e79ef34b85e60" translate="yes" xml:space="preserve">
          <source>Constructs an insertion-ordered &lt;code&gt;LinkedHashMap&lt;/code&gt; instance with the same mappings as the specified map. The &lt;code&gt;LinkedHashMap&lt;/code&gt; instance is created with a default load factor (0.75) and an initial capacity sufficient to hold the mappings in the specified map.</source>
          <target state="translated">지정된 맵과 같은 매핑으로 삽입 순서의 &lt;code&gt;LinkedHashMap&lt;/code&gt; 인스턴스를 구축합니다 . &lt;code&gt;LinkedHashMap&lt;/code&gt; 인스턴스는 기본 부하 계수 (0.75) 및 지정된 맵에 매핑을 유지하기에 충분한 초기 용량을 생성한다.</target>
        </trans-unit>
        <trans-unit id="b973a9d09a4d918f3aa46100ebcd682c2a97003b" translate="yes" xml:space="preserve">
          <source>Constructs an instance from the given input string and reason. The resulting object will have an error index of &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">주어진 입력 문자열과 이유에서 인스턴스를 구성합니다. 결과 객체의 오류 인덱스는 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6e503d2c6b877637baa8e696383e95aaca4b982b" translate="yes" xml:space="preserve">
          <source>Constructs an instance from the given input string, reason, and error index.</source>
          <target state="translated">주어진 입력 문자열, 이유 및 오류 인덱스에서 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="6090116c62a38127236b7e0a510ecffbcda62034" translate="yes" xml:space="preserve">
          <source>Constructs an instance of &lt;code&gt;AuthorizeCallback&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AuthorizeCallback&lt;/code&gt; 의 인스턴스를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="4cde742ce84828cef077b28bebeb037d44dbb4ad" translate="yes" xml:space="preserve">
          <source>Constructs an instance of &lt;code&gt;NamingEvent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NamingEvent&lt;/code&gt; 의 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="09ce9d34f2a6ce0fe7c116c8c0f692d1e22fe326" translate="yes" xml:space="preserve">
          <source>Constructs an instance of &lt;code&gt;NamingExceptionEvent&lt;/code&gt; using the context in which the &lt;code&gt;NamingException&lt;/code&gt; was thrown and the exception that was thrown.</source>
          <target state="translated">인스턴스 구축 &lt;code&gt;NamingExceptionEvent&lt;/code&gt; 가 컨텍스트 사용 &lt;code&gt;NamingException&lt;/code&gt; 발생하고, 발생 된 예외.</target>
        </trans-unit>
        <trans-unit id="e009f56570432719c7a0f3401105279dd85a8b15" translate="yes" xml:space="preserve">
          <source>Constructs an instance of InterruptedNamingException using an explanation of the problem. All name resolution-related fields are initialized to null.</source>
          <target state="translated">문제의 설명을 사용해 InterruptedNamingException 인스턴스를 구축합니다. 모든 이름 확인 관련 필드는 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="91b6aac31b7a5bdcae7e9951a36650fa90eadf00" translate="yes" xml:space="preserve">
          <source>Constructs an instance of InterruptedNamingException with all name resolution fields and explanation initialized to null.</source>
          <target state="translated">이름 해석 필드 및 설명이 모두 null에 초기화 된, InterruptedNamingException의 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="601ffa98d4ea34001d9ab4c46b893b7458c65afc" translate="yes" xml:space="preserve">
          <source>Constructs an instance of InvalidNameException using an explanation of the problem. All other fields are initialized to null.</source>
          <target state="translated">문제의 설명을 사용해 InvalidNameException 인스턴스를 구축합니다. 다른 모든 필드는 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="58205fa87a04994c36647a5b58752f497303291d" translate="yes" xml:space="preserve">
          <source>Constructs an instance of InvalidNameException with all fields set to null.</source>
          <target state="translated">모든 필드가 null로 설정되어 InvalidNameException 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="859f37e9caf01492b4441c8dca2b4bfc666ac849" translate="yes" xml:space="preserve">
          <source>Constructs an instance of NoInitialContextException with an explanation. All other fields are initialized to null.</source>
          <target state="translated">설명과 함께 NoInitialContextException의 인스턴스를 구성합니다. 다른 모든 필드는 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="3b34e0d7c07b6e21024311d7056588fd113fe696" translate="yes" xml:space="preserve">
          <source>Constructs an instance of NoInitialContextException. All fields are initialized to null.</source>
          <target state="translated">NoInitialContextException의 인스턴스를 구성합니다. 모든 필드는 null로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="0a36df750d71e76ac9fa21d4bac01e1543c4a589" translate="yes" xml:space="preserve">
          <source>Constructs an instance of ResolveResult with the resolved object and remaining name both initialized to null.</source>
          <target state="translated">확인 된 객체와 나머지 이름이 모두 null로 초기화 된 ResolveResult 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="7335f2e9214103e1a39f7fb33300663bc090f975" translate="yes" xml:space="preserve">
          <source>Constructs an instance of Result.</source>
          <target state="translated">결과의 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="ee3a8c67f37816db04405b716cfed1f2dc2d2bf4" translate="yes" xml:space="preserve">
          <source>Constructs an instance of a Binding given its name and object.</source>
          <target state="translated">이름과 객체가 지정된 Binding 인스턴스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5302a13f4f980e27356ed5153a63e415d4176b2b" translate="yes" xml:space="preserve">
          <source>Constructs an instance of a Binding given its name, class name, and object.</source>
          <target state="translated">이름, 클래스 이름 및 객체가 지정된 Binding 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="575770991bde333b81b3143ddaf609355c522b31" translate="yes" xml:space="preserve">
          <source>Constructs an instance of a Binding given its name, class name, object, and whether the name is relative.</source>
          <target state="translated">이름, 클래스 이름, 객체 및 이름이 상대적인지 여부를 고려하여 Binding의 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5376d0cd331eb039c9dd88a3e1a59df6af0147a1" translate="yes" xml:space="preserve">
          <source>Constructs an instance of a Binding given its name, object, and whether the name is relative.</source>
          <target state="translated">이름, 객체 및 이름이 상대적인지 여부를 지정해 Binding 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="d8a3c3c19df4af6e80722856f387d94dbe5b3369" translate="yes" xml:space="preserve">
          <source>Constructs an instance of a NameClassPair given its name and class name.</source>
          <target state="translated">이름과 클래스 명이 지정된 NameClassPair의 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="55c2191c963a67a4b13ba1d01d1c7a825f7cbe7e" translate="yes" xml:space="preserve">
          <source>Constructs an instance of a NameClassPair given its name, class name, and whether it is relative to the listing context.</source>
          <target state="translated">이름, 클래스 이름 및 목록 컨텍스트와 관련된 여부를 고려하여 NameClassPair의 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="e5c58ee4cf593616544f93cc9ea6b4c40eee39d3" translate="yes" xml:space="preserve">
          <source>Constructs an instance of a property editor using the current property editor class.</source>
          <target state="translated">현재의 프로퍼티 에디터 클래스를 사용해 프로퍼티 에디터의 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="fa3b5eb7e6b21205e7617fd24a24bff31fd2db36" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class with the mismatched conversion and the corresponding argument class.</source>
          <target state="translated">일치하지 않는 변환 및 해당 인수 클래스를 사용하여이 클래스의 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="4f985edb60f57a356bbd0df8074a61709fcfefcb" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class with the specified flag and conversion.</source>
          <target state="translated">지정된 플래그와 변환을 사용해이 클래스의 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="d9b0272e57e6b3e5f6cceaa3a2b0c0fd8ad0afa9" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class with the specified flags.</source>
          <target state="translated">지정된 플래그를 사용해이 클래스의 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="12b16408b7be7f55d397615cb6d2cef1d6e9a1c6" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class with the specified format specifier.</source>
          <target state="translated">지정된 형식 지정자를 사용해이 클래스의 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="1bdab796fa2bf2827e606344e2e01dc21382dcf9" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class with the specified illegal code point as defined by &lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt;&lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt; &lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt; &lt;/a&gt; 의해 정의 된 지정된 무효 코드 포인트를 사용해이 클래스의 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="8697d61d845798d9a5c7b039177b4a62629270bb" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class with the specified precision.</source>
          <target state="translated">지정된 정밀도로이 클래스의 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="c4fd9d42b3e124ce96aab17cf4aca5609573202c" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class with the specified width.</source>
          <target state="translated">지정된 폭으로이 클래스의 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6c364b040f724d3e50338f5c3cece56ebdf153aa" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class with the unknown conversion.</source>
          <target state="translated">변환을 알 수없는이 클래스의 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="98ca5e657166dfd769ec2606ed4c3e17674e77b3" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class with the unmatched format specifier.</source>
          <target state="translated">일치하지 않는 형식 지정자를 사용하여이 클래스의 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="086956e0a145ec976e1b35a383465b8102417b27" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class.</source>
          <target state="translated">이 클래스의 인스턴스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="dc30294b49198bad3494698a5f395a45f739f83d" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class. This constructor should be used when an operation involving one file fails and there isn't any additional information to explain the reason.</source>
          <target state="translated">이 클래스의 인스턴스를 구축합니다. 하나의 파일과 관련된 작업이 실패하고 그 이유를 설명하는 추가 정보가없는 경우이 생성자를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9fe57bc779705891fea0d2628f48e9bb125d9b96" translate="yes" xml:space="preserve">
          <source>Constructs an instance of this class. This constructor should be used when an operation involving two files fails, or there is additional information to explain the reason.</source>
          <target state="translated">이 클래스의 인스턴스를 구축합니다. 이 생성자는 두 파일이 관련된 조작이 실패하거나 이유를 설명하는 추가 정보가있는 경우에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f9e5281fb75e50ff57ee9ffadfa0343f74ffc733" translate="yes" xml:space="preserve">
          <source>Constructs an iterator over the given range of the given string, with the index set at the specified position.</source>
          <target state="translated">지정된 위치에 인덱스를 설정해, 지정된 캐릭터 라인의 지정된 범위에 걸쳐 반복자를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="3808be09999af1f27d5497ce738567cd2ae6cd0c" translate="yes" xml:space="preserve">
          <source>Constructs an iterator with an initial index of 0.</source>
          <target state="translated">초기 인덱스가 0 인 반복자를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="0c4bd57705ad3942069257dacd8422b6ceb1dffe" translate="yes" xml:space="preserve">
          <source>Constructs an iterator with the specified initial index.</source>
          <target state="translated">지정된 초기 색인으로 반복자를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="f18b26e47e21aa7311638e2ff256e0f93c12796c" translate="yes" xml:space="preserve">
          <source>Constructs and returns a new SplittableRandom instance that shares no mutable state with this instance. However, with very high probability, the set of values collectively generated by the two objects has the same statistical properties as if the same quantity of values were generated by a single thread using a single SplittableRandom object. Either or both of the two objects may be further split using the &lt;code&gt;split()&lt;/code&gt; method, and the same expected statistical properties apply to the entire set of generators constructed by such recursive splitting.</source>
          <target state="translated">이 인스턴스와 변경 가능한 상태를 공유하지 않는 새로운 SplittableRandom 인스턴스를 구성하고 반환합니다. 그러나 매우 높은 확률로 두 개체에서 집합 적으로 생성 된 값 집합은 단일 SplittableRandom 개체를 사용하여 단일 스레드에서 같은 양의 값을 생성 한 것과 동일한 통계적 속성을 갖습니다. 두 객체 중 하나 또는 둘 다 &lt;code&gt;split()&lt;/code&gt; 메서드를 사용하여 추가로 분할 할 수 있으며 이러한 재귀 분할에 의해 생성 된 전체 생성기 집합에 동일한 예상 통계 속성이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c14ddda450464281bf2e044210f8071d3d0f4702" translate="yes" xml:space="preserve">
          <source>Constructs cookies from set-cookie or set-cookie2 header string. RFC 2965 section 3.2.2 set-cookie2 syntax indicates that one header line may contain more than one cookie definitions, so this is a static utility method instead of another constructor.</source>
          <target state="translated">set-cookie 또는 set-cookie2 헤더 문자열에서 쿠키를 구성합니다. RFC 2965 섹션 3.2.2 set-cookie2 구문은 하나의 헤더 행에 둘 이상의 쿠키 정의가 포함될 수 있으므로 다른 생성자 대신 정적 유틸리티 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="c109a9db6bd55b6adf1ce9ee9efdfb277e582fa6" translate="yes" xml:space="preserve">
          <source>Constructs query object constraints.</source>
          <target state="translated">쿼리 개체 제약 조건을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="3b41713b17ee8a0d7b1254f274252999ad15d8e9" translate="yes" xml:space="preserve">
          <source>Constructs supported by this class but not by Perl:</source>
          <target state="translated">이 클래스가 지원하지만 Perl이 지원하지 않는 구성 :</target>
        </trans-unit>
        <trans-unit id="18f034f50e0814348438d4db235de4d49052b5a5" translate="yes" xml:space="preserve">
          <source>Constructs the source explicitly with the specified value &lt;code&gt;p&lt;/code&gt; as the encoding input P. Note:</source>
          <target state="translated">인코딩 입력 P로 지정된 값 &lt;code&gt;p&lt;/code&gt; 를 사용하여 소스를 명시 적으로 구성합니다 . 참고 :</target>
        </trans-unit>
        <trans-unit id="2d7bf27192f83231f538cc0142cc4216eb272133" translate="yes" xml:space="preserve">
          <source>Constructs with limits and corresponding formats based on the pattern.</source>
          <target state="translated">패턴을 기반으로 한 제한 및 해당 형식으로 구성합니다.</target>
        </trans-unit>
        <trans-unit id="c4c14b3f62da4e6b63c42603573bd4800a6f1015" translate="yes" xml:space="preserve">
          <source>Constructs with the limits and the corresponding formats.</source>
          <target state="translated">한계와 해당 형식으로 구성합니다.</target>
        </trans-unit>
        <trans-unit id="ed725f71fa29b3a78f6ff0c8789241097424b2d0" translate="yes" xml:space="preserve">
          <source>Consult RFC 2965 (available on the Internet) for more information on setting path names for cookies.</source>
          <target state="translated">쿠키의 경로 이름 설정에 대한 자세한 내용은 RFC 2965 (인터넷에서 사용 가능)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d6cb8690f5be390e5de17c85b5e4108544917613" translate="yes" xml:space="preserve">
          <source>Consumable. The elements of a stream are only visited once during the life of a stream. Like an &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, a new stream must be generated to revisit the same elements of the source.</source>
          <target state="translated">소모품. 스트림의 요소는 스트림 수명 동안 한 번만 방문합니다. &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 소스의 동일한 요소를 다시 방문하려면 새 스트림을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c707f2781a489cf7e4ea7d11c190f8dfe3a0bf0" translate="yes" xml:space="preserve">
          <source>Consumer</source>
          <target state="translated">Consumer</target>
        </trans-unit>
        <trans-unit id="13d8a058654098730192eec3aabb7d8120b24419" translate="yes" xml:space="preserve">
          <source>Consumer.accept()</source>
          <target state="translated">Consumer.accept()</target>
        </trans-unit>
        <trans-unit id="b5adea6f772aa5244e3f22f473d0d81260ee7626" translate="yes" xml:space="preserve">
          <source>Consumer.andThen()</source>
          <target state="translated">Consumer.andThen()</target>
        </trans-unit>
        <trans-unit id="3de954e0bd84ae3afda8b2c411644fc247573159" translate="yes" xml:space="preserve">
          <source>Contains class and interfaces for supporting SASL.</source>
          <target state="translated">SASL을 지원하기위한 클래스와 인터페이스를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="5c80a0c54a9e89e3402d6049cc21acd54633a7a1" translate="yes" xml:space="preserve">
          <source>Contains class and interfaces for supporting SASL. This package defines classes and interfaces for SASL mechanisms. It is used by developers to add authentication support for connection-based protocols that use SASL.</source>
          <target state="translated">SASL을 지원하기위한 클래스와 인터페이스를 포함합니다. 이 패키지는 SASL 메커니즘에 대한 클래스와 인터페이스를 정의합니다. SASL을 사용하는 연결 기반 프로토콜에 대한 인증 지원을 추가하기 위해 개발자가 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ac085ca3a3e1c40f8f89681e2f0c3b4ddbb144c1" translate="yes" xml:space="preserve">
          <source>Contains classes related to developing &lt;em&gt;beans&lt;/em&gt; -- components based on the JavaBeans&amp;trade; architecture.</source>
          <target state="translated">JavaBeans &amp;trade; 아키텍처 기반의 컴포넌트 인 &lt;em&gt;Bean&lt;/em&gt; 개발과 관련된 클래스를 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="c344f14c4fe1e749ce7eddc0121d6084c30e203f" translate="yes" xml:space="preserve">
          <source>Contains classes related to developing &lt;em&gt;beans&lt;/em&gt; -- components based on the JavaBeans&amp;trade; architecture. A few of the classes are used by beans while they run in an application. For example, the event classes are used by beans that fire property and vetoable change events (see &lt;a href=&quot;propertychangeevent&quot;&gt;&lt;code&gt;PropertyChangeEvent&lt;/code&gt;&lt;/a&gt;). However, most of the classes in this package are meant to be used by a bean editor (that is, a development environment for customizing and putting together beans to create an application). In particular, these classes help the bean editor create a user interface that the user can use to customize the bean. For example, a bean may contain a property of a special type that a bean editor may not know how to handle. By using the &lt;code&gt;PropertyEditor&lt;/code&gt; interface, a bean developer can provide an editor for this special type.</source>
          <target state="translated">JavaBeans &amp;trade; 아키텍처 기반의 컴포넌트 인 &lt;em&gt;Bean&lt;/em&gt; 개발과 관련된 클래스를 포함 합니다. 응용 프로그램에서 실행될 때 Bean에서 몇 가지 클래스를 사용합니다. 예를 들어, 이벤트 클래스는 특성 및 거부 가능한 변경 이벤트를 발생시키는 Bean에서 사용됩니다 ( &lt;a href=&quot;propertychangeevent&quot;&gt; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; &lt;/a&gt; 참조 ). 그러나이 패키지의 대부분의 클래스는 Bean 편집기 (즉, Bean을 사용자 정의하고 조합하여 애플리케이션을 작성하기위한 개발 환경)에서 사용하도록되어 있습니다. 특히,이 클래스는 Bean 편집기가 사용자가 Bean을 사용자 정의하는 데 사용할 수있는 사용자 인터페이스를 작성하도록 도와줍니다. 예를 들어, Bean에는 Bean 편집기가 처리 방법을 모르는 특수 유형의 특성이 포함될 수 있습니다. 사용하여 &lt;code&gt;PropertyEditor&lt;/code&gt; Bean 개발자는이 특수 유형에 대한 편집기를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="716ea3ea47eeca98dd8d982a93d5d8d0cacd6f44" translate="yes" xml:space="preserve">
          <source>Contains information about the change that generated this event.</source>
          <target state="translated">이 이벤트를 생성 한 변경에 대한 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="845c4e44db084f50fc086e01ed1d72ff8345af4e" translate="yes" xml:space="preserve">
          <source>Contains information about the object after the change.</source>
          <target state="translated">변경 후 객체에 대한 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="cf7a05bc910359766446932b7c3358b47491dec6" translate="yes" xml:space="preserve">
          <source>Contains information about the object before the change.</source>
          <target state="translated">변경 전 객체에 대한 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="500b665fb0c323de6d741dc01fd28f8b53261fea" translate="yes" xml:space="preserve">
          <source>Contains methods for registering listeners to be notified of events fired when objects named in a directory context changes.</source>
          <target state="translated">디렉토리 컨텍스트에서 이름이 지정된 오브젝트가 변경 될 때 발생하는 이벤트를 통지 할 리스너를 등록하는 메소드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="413d4cb045cd9f34f509fc3c120a09330b72c3ff" translate="yes" xml:space="preserve">
          <source>Contains methods for registering/deregistering listeners to be notified of events fired when objects named in a context changes.</source>
          <target state="translated">컨텍스트에 이름이 지정된 오브젝트가 변경 될 때 발생하는 이벤트에 대해 통지 할 리스너를 등록 / 등록 취소하는 메소드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="345ce4510197c60bd120a3eaf6c113494fd1774d" translate="yes" xml:space="preserve">
          <source>Contains the addresses contained in this Reference. Initialized by constructor.</source>
          <target state="translated">이 참조에 포함 된 주소를 포함합니다. 생성자에 의해 초기화되었습니다.</target>
        </trans-unit>
        <trans-unit id="27f50f10fd1877756f56ed5f4de805786c5c332c" translate="yes" xml:space="preserve">
          <source>Contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array).</source>
          <target state="translated">콜렉션 프레임 워크, 레거시 콜렉션 클래스, 이벤트 모델, 날짜 및 시간 기능, 국제화 및 기타 유틸리티 클래스 (문자열 토큰 화기, 난수 생성기 및 비트 배열)를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="83ffe0297436278a6b882223909f493edc2e4e18" translate="yes" xml:space="preserve">
          <source>Contains the context relative to which &lt;code&gt;altName&lt;/code&gt; is specified. If null, then the default initial context is implied. See the &lt;code&gt;javax.naming.spi.ObjectFactory.getObjectInstance&lt;/code&gt; method for details on how this is used.</source>
          <target state="translated">&lt;code&gt;altName&lt;/code&gt; 이 지정된 컨텍스트를 포함 합니다. null의 경우, 디폴트의 초기 문맥이 포함됩니다. 사용 방법에 대한 자세한 내용은 &lt;code&gt;javax.naming.spi.ObjectFactory.getObjectInstance&lt;/code&gt; 메소드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebb544173d608a19a72ded61bef29f0c80241ad3" translate="yes" xml:space="preserve">
          <source>Contains the environment relevant for the Context or DirContext method that cannot proceed.</source>
          <target state="translated">진행할 수없는 Context 또는 DirContext 메소드와 관련된 환경을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="7fab2c103de27eb77684f2157dbd9fc0b44c8a4c" translate="yes" xml:space="preserve">
          <source>Contains the exception of why resolution of the link failed. Can be null. This field is initialized by the constructors. You should access and manipulate this field through its get and set methods.</source>
          <target state="translated">링크 분석이 실패한 이유를 제외합니다. null 일 수 있습니다. 이 필드는 생성자에 의해 초기화됩니다. get 및 set 메소드를 통해이 필드에 액세스하고 조작해야합니다.</target>
        </trans-unit>
        <trans-unit id="3a1ec2e463affecc90f18e0a94b90bd39908e5b8" translate="yes" xml:space="preserve">
          <source>Contains the fully-qualified name of the class of the object to which this Reference refers.</source>
          <target state="translated">이 참조가 참조하는 객체 클래스의 정규화 된 이름을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="efd492e13d5d4ce7f0ce13c97d81a5cdb3c251fa" translate="yes" xml:space="preserve">
          <source>Contains the location of the factory class. Initialized to null.</source>
          <target state="translated">팩토리 클래스의 위치를 ​​포함합니다. null로 초기화되었습니다.</target>
        </trans-unit>
        <trans-unit id="6992820de55b91aef95b4f9f3af5790f3bf6a704" translate="yes" xml:space="preserve">
          <source>Contains the name of the factory class for creating an instance of the object to which this Reference refers. Initialized to null.</source>
          <target state="translated">이 참조가 참조하는 객체의 인스턴스를 만들기위한 팩토리 클래스의 이름을 포함합니다. null로 초기화되었습니다.</target>
        </trans-unit>
        <trans-unit id="994a70e2fefb453a97aa271f7ff2ccb47666ba21" translate="yes" xml:space="preserve">
          <source>Contains the name of the resolved object, relative to the context &lt;code&gt;altNameCtx&lt;/code&gt;. It is a composite name. If null, then no name is specified. See the &lt;code&gt;javax.naming.spi.ObjectFactory.getObjectInstance&lt;/code&gt; method for details on how this is used.</source>
          <target state="translated">컨텍스트 &lt;code&gt;altNameCtx&lt;/code&gt; 에 상대적인 해결 된 오브젝트의 이름을 포함합니다 . 합성 이름입니다. null의 경우는 이름이 지정되지 않는다 사용 방법에 대한 자세한 내용은 &lt;code&gt;javax.naming.spi.ObjectFactory.getObjectInstance&lt;/code&gt; 메소드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d9dc79e2a652ac8ab9cf64d7e1461022c6cf104" translate="yes" xml:space="preserve">
          <source>Contains the object to which resolution of the part of the link was successful. Can be null. This field is initialized by the constructors. You should access and manipulate this field through its get and set methods.</source>
          <target state="translated">링크 부분의 분석에 성공한 오브젝트를 포함합니다. null 일 수 있습니다. 이 필드는 생성자에 의해 초기화됩니다. get 및 set 메소드를 통해이 필드에 액세스하고 조작해야합니다.</target>
        </trans-unit>
        <trans-unit id="057fddb9967ddc14afe1f7539ed2c6afe45a1020" translate="yes" xml:space="preserve">
          <source>Contains the object to which resolution of the part of the name was successful. Can be null. This field is initialized by the constructors. You should access and manipulate this field through its get and set methods.</source>
          <target state="translated">이름 부분의 분석에 성공한 오브젝트를 포함합니다. null 일 수 있습니다. 이 필드는 생성자에 의해 초기화됩니다. get 및 set 메소드를 통해이 필드에 액세스하고 조작해야합니다.</target>
        </trans-unit>
        <trans-unit id="33551093ca2097c6d14844e0ce9c7a4ff3d3569f" translate="yes" xml:space="preserve">
          <source>Contains the original exception that caused this NamingException to be thrown. This field is set if there is additional information that could be obtained from the original exception, or if the original exception could not be mapped to a subclass of NamingException. Can be null.</source>
          <target state="translated">이 NamingException을 발생시키는 원인이 된 최초의 예외를 포함합니다. 이 필드는 원래 예외에서 얻을 수있는 추가 정보가 있거나 원래 예외를 NamingException의 서브 클래스에 맵핑 할 수없는 경우에 설정됩니다. null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89bce986bfcf7b544a30588872a9838babc5b41f" translate="yes" xml:space="preserve">
          <source>Contains the part of the link that has been successfully resolved. It is a composite name and can be null. This field is initialized by the constructors. You should access and manipulate this field through its get and set methods.</source>
          <target state="translated">성공적으로 해결 된 링크 부분을 포함합니다. 복합 이름이며 널이 될 수 있습니다. 이 필드는 생성자에 의해 초기화됩니다. get 및 set 메소드를 통해이 필드에 액세스하고 조작해야합니다.</target>
        </trans-unit>
        <trans-unit id="486760cfef0dd7722600a5a24d5ca1142271d8ec" translate="yes" xml:space="preserve">
          <source>Contains the part of the name that has been successfully resolved. It is a composite name and can be null. This field is initialized by the constructors. You should access and manipulate this field through its get and set methods.</source>
          <target state="translated">성공적으로 해결 된 이름 부분을 포함합니다. 복합 이름이며 널이 될 수 있습니다. 이 필드는 생성자에 의해 초기화됩니다. get 및 set 메소드를 통해이 필드에 액세스하고 조작해야합니다.</target>
        </trans-unit>
        <trans-unit id="f8d7bff0d1419bdcb95d6f72fc1868be7d93e659" translate="yes" xml:space="preserve">
          <source>Contains the remaining link name that has not been resolved yet. It is a composite name and can be null. This field is initialized by the constructors. You should access and manipulate this field through its get and set methods.</source>
          <target state="translated">아직 해결되지 않은 나머지 링크 이름을 포함합니다. 복합 이름이며 널이 될 수 있습니다. 이 필드는 생성자에 의해 초기화됩니다. get 및 set 메소드를 통해이 필드에 액세스하고 조작해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf3c3d33113c9c7559e7b481a71e3c9f9d67c1b0" translate="yes" xml:space="preserve">
          <source>Contains the remaining name that has not been resolved yet. It is a composite name and can be null. This field is initialized by the constructors. You should access and manipulate this field through its get, set, &quot;append&quot; methods.</source>
          <target state="translated">아직 확인되지 않은 나머지 이름을 포함합니다. 복합 이름이며 널이 될 수 있습니다. 이 필드는 생성자에 의해 초기화됩니다. get, set, &quot;append&quot;메소드를 통해이 필드에 액세스하고 조작해야합니다.</target>
        </trans-unit>
        <trans-unit id="faa6a39c64fcd8f0ccd7a8bc8ebeca003af6cabe" translate="yes" xml:space="preserve">
          <source>Contains the remaining unresolved part of the second &quot;name&quot; argument to Context.rename(). This information necessary for continuing the Context.rename() operation.</source>
          <target state="translated">Context.rename ()에 대한 두 번째 &quot;name&quot;인수의 나머지 해결되지 않은 부분을 포함합니다. 이 정보는 Context.rename () 조작을 계속하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="7b23daf59b83e0943b34e017ba8cd2199997bc4d" translate="yes" xml:space="preserve">
          <source>Contains the type of this address.</source>
          <target state="translated">이 주소의 유형을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="ea16be52f157f04fa53467c7040cdda90536848a" translate="yes" xml:space="preserve">
          <source>Contains the type of this event.</source>
          <target state="translated">이 이벤트의 타입을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="ac24a3f1c125d3cb157c5d651bf144fa28d308ae" translate="yes" xml:space="preserve">
          <source>Contains zero or more --</source>
          <target state="translated">0 개 이상 포함</target>
        </trans-unit>
        <trans-unit id="caaf28ddbc2e4fb862a1e7c8bca5c3af2327ee49" translate="yes" xml:space="preserve">
          <source>ContentHandler</source>
          <target state="translated">ContentHandler</target>
        </trans-unit>
        <trans-unit id="9254cd9d1514d60b98ef81c042363f1e1012ceaf" translate="yes" xml:space="preserve">
          <source>ContentHandler.getContent()</source>
          <target state="translated">ContentHandler.getContent()</target>
        </trans-unit>
        <trans-unit id="aae6937adf2ada9daddd3e25a670dddc2364ef8d" translate="yes" xml:space="preserve">
          <source>ContentHandlerFactory</source>
          <target state="translated">ContentHandlerFactory</target>
        </trans-unit>
        <trans-unit id="1c091dd4363d0cf5366ab6bbaf30b31efe5e1100" translate="yes" xml:space="preserve">
          <source>ContentHandlerFactory.createContentHandler()</source>
          <target state="translated">ContentHandlerFactory.createContentHandler()</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="5a40885b767705aa6b3cecffab5a3f4e8cc99096" translate="yes" xml:space="preserve">
          <source>Context Request Controls</source>
          <target state="translated">상황 요청 제어</target>
        </trans-unit>
        <trans-unit id="ab8a06c9924418ef67ad88ea27bb63a09a6b03f4" translate="yes" xml:space="preserve">
          <source>Context.addToEnvironment()</source>
          <target state="translated">Context.addToEnvironment()</target>
        </trans-unit>
        <trans-unit id="32c1eaaedc5627484910b798602fa9e6a61ba9a6" translate="yes" xml:space="preserve">
          <source>Context.bind()</source>
          <target state="translated">Context.bind()</target>
        </trans-unit>
        <trans-unit id="c92f3a3b2689ab0434639c0c9b4e615fb1010679" translate="yes" xml:space="preserve">
          <source>Context.close()</source>
          <target state="translated">Context.close()</target>
        </trans-unit>
        <trans-unit id="6ea8f5169eeb95fd2fd29b2a399dfbd00607c4d8" translate="yes" xml:space="preserve">
          <source>Context.composeName()</source>
          <target state="translated">Context.composeName()</target>
        </trans-unit>
        <trans-unit id="2febe0a0cfa93a0885af6ded70f548b7dfd3c987" translate="yes" xml:space="preserve">
          <source>Context.createSubcontext()</source>
          <target state="translated">Context.createSubcontext()</target>
        </trans-unit>
        <trans-unit id="745ba31ab0fe8a26f3ff54d3912468b1472e7b8e" translate="yes" xml:space="preserve">
          <source>Context.destroySubcontext()</source>
          <target state="translated">Context.destroySubcontext()</target>
        </trans-unit>
        <trans-unit id="71956a2cf49ea4ea5614637e06969d81bae4a3b9" translate="yes" xml:space="preserve">
          <source>Context.getEnvironment()</source>
          <target state="translated">Context.getEnvironment()</target>
        </trans-unit>
        <trans-unit id="eccdf78aadd3e2c30441d95d4fd90eb5fecad93c" translate="yes" xml:space="preserve">
          <source>Context.getNameInNamespace()</source>
          <target state="translated">Context.getNameInNamespace()</target>
        </trans-unit>
        <trans-unit id="a18e8b8c13a534e57796f91622b65eeadd69320e" translate="yes" xml:space="preserve">
          <source>Context.getNameParser()</source>
          <target state="translated">Context.getNameParser()</target>
        </trans-unit>
        <trans-unit id="cd9614cecb81c7fa1ca91e0df5e02e9eae810521" translate="yes" xml:space="preserve">
          <source>Context.list()</source>
          <target state="translated">Context.list()</target>
        </trans-unit>
        <trans-unit id="d1bf119250275a9b52e461b5a34483f5c3014eee" translate="yes" xml:space="preserve">
          <source>Context.listBindings()</source>
          <target state="translated">Context.listBindings()</target>
        </trans-unit>
        <trans-unit id="7f96dd12e9285bffc3deeacbdda487764632ab7c" translate="yes" xml:space="preserve">
          <source>Context.lookup()</source>
          <target state="translated">Context.lookup()</target>
        </trans-unit>
        <trans-unit id="7beb8238c8fcb99aed86980f3e99db7650f20b3c" translate="yes" xml:space="preserve">
          <source>Context.lookupLink()</source>
          <target state="translated">Context.lookupLink()</target>
        </trans-unit>
        <trans-unit id="21eafddbe4af2774632509d8d05fb0f60ef604b9" translate="yes" xml:space="preserve">
          <source>Context.rebind()</source>
          <target state="translated">Context.rebind()</target>
        </trans-unit>
        <trans-unit id="2570d632f1c2dee99caf6f8db288a3077da94a3f" translate="yes" xml:space="preserve">
          <source>Context.removeFromEnvironment()</source>
          <target state="translated">Context.removeFromEnvironment()</target>
        </trans-unit>
        <trans-unit id="9f40879e75076b8cb9f747d6935f0262ffbe84f5" translate="yes" xml:space="preserve">
          <source>Context.rename()</source>
          <target state="translated">Context.rename()</target>
        </trans-unit>
        <trans-unit id="6604487e7e2f15f76139f7021f998d321bd6f7dd" translate="yes" xml:space="preserve">
          <source>Context.unbind()</source>
          <target state="translated">Context.unbind()</target>
        </trans-unit>
        <trans-unit id="8ea2369d691a7d60ff7579637b2681177ee829be" translate="yes" xml:space="preserve">
          <source>ContextNotEmptyException</source>
          <target state="translated">ContextNotEmptyException</target>
        </trans-unit>
        <trans-unit id="5b1b1abb6a05a4cfe8b81d1e4ca8c23327cfa935" translate="yes" xml:space="preserve">
          <source>Continue without visiting the &lt;em&gt;siblings&lt;/em&gt; of this file or directory. If returned from the &lt;a href=&quot;filevisitor#preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;preVisitDirectory&lt;/code&gt;&lt;/a&gt; method then the entries in the directory are also skipped and the &lt;a href=&quot;filevisitor#postVisitDirectory-T-java.io.IOException-&quot;&gt;&lt;code&gt;postVisitDirectory&lt;/code&gt;&lt;/a&gt; method is not invoked.</source>
          <target state="translated">이 파일 또는 디렉토리 의 &lt;em&gt;형제&lt;/em&gt; 를 방문하지 않고 계속 하십시오. &lt;a href=&quot;filevisitor#preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;preVisitDirectory&lt;/code&gt; &lt;/a&gt; 메소드 에서 리턴 된 경우 디렉토리의 항목도 건너 뛰고 &lt;a href=&quot;filevisitor#postVisitDirectory-T-java.io.IOException-&quot;&gt; &lt;code&gt;postVisitDirectory&lt;/code&gt; &lt;/a&gt; 메소드가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="539ab754a14f1e02bc35f2d46a54c7a6530c6343" translate="yes" xml:space="preserve">
          <source>Continue without visiting the entries in this directory. This result is only meaningful when returned from the &lt;a href=&quot;filevisitor#preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;preVisitDirectory&lt;/code&gt;&lt;/a&gt; method; otherwise this result type is the same as returning &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 디렉토리의 항목을 방문하지 않고 계속하십시오. 이 결과는 &lt;a href=&quot;filevisitor#preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;preVisitDirectory&lt;/code&gt; &lt;/a&gt; 메소드 에서 리턴 된 경우에만 의미가 있습니다 . 그렇지 않으면이 결과 유형은 &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt; &lt;code&gt;CONTINUE&lt;/code&gt; &lt;/a&gt; 반환과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="584f94a2ed9694747ed618d67a669d4ee849de8c" translate="yes" xml:space="preserve">
          <source>Continue. When returned from a &lt;a href=&quot;filevisitor#preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;preVisitDirectory&lt;/code&gt;&lt;/a&gt; method then the entries in the directory should also be visited.</source>
          <target state="translated">계속하다. &lt;a href=&quot;filevisitor#preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;preVisitDirectory&lt;/code&gt; &lt;/a&gt; 메소드 에서 리턴되면 디렉토리의 항목도 방문해야합니다.</target>
        </trans-unit>
        <trans-unit id="cbf4a239b2ca65d49d42d168c3f3d2d5d1536801" translate="yes" xml:space="preserve">
          <source>Continues a multi-part update of the Additional Authentication Data (AAD), using a subset of the provided buffer.</source>
          <target state="translated">제공된 버퍼의 서브 세트를 사용하여 AAD (Additional Authentication Data)의 다중 파트 업데이트를 계속합니다.</target>
        </trans-unit>
        <trans-unit id="4f1c0cfe4045afcc2d8110917caef36bb4d4d9ba" translate="yes" xml:space="preserve">
          <source>Continues a multi-part update of the Additional Authentication Data (AAD).</source>
          <target state="translated">AAD (추가 인증 데이터)의 다중 부분 업데이트를 계속합니다.</target>
        </trans-unit>
        <trans-unit id="f336f62502d2d5aab06e0b35eb4c382e08ea5397" translate="yes" xml:space="preserve">
          <source>Continues a multiple-part encryption or decryption operation (depending on how this cipher was initialized), processing another data part.</source>
          <target state="translated">다른 데이터 부분을 처리하면서 (이 암호가 초기화 된 방법에 따라) 다중 부분 암호화 또는 암호 해독 작업을 계속합니다.</target>
        </trans-unit>
        <trans-unit id="ea1d3df298ca84104dbf8b2f6f916c02f6f77c6e" translate="yes" xml:space="preserve">
          <source>Control</source>
          <target state="translated">Control</target>
        </trans-unit>
        <trans-unit id="485a0eecf48659fee5f413f35cd710266a6d7581" translate="yes" xml:space="preserve">
          <source>Control.Type</source>
          <target state="translated">Control.Type</target>
        </trans-unit>
        <trans-unit id="9c7b06c5024c6576e7be5c3246455a17e0d0226f" translate="yes" xml:space="preserve">
          <source>Control.Type.equals()</source>
          <target state="translated">Control.Type.equals()</target>
        </trans-unit>
        <trans-unit id="9d0c2d6b6659a08276760019555b617ef898f089" translate="yes" xml:space="preserve">
          <source>Control.Type.hashCode()</source>
          <target state="translated">Control.Type.hashCode()</target>
        </trans-unit>
        <trans-unit id="7fc77f4ac3ec31c7427ac224ef93e0ae6d22ee14" translate="yes" xml:space="preserve">
          <source>Control.Type.toString()</source>
          <target state="translated">Control.Type.toString()</target>
        </trans-unit>
        <trans-unit id="c7d9cad664f5aa1969e1c089e3d60715821daa97" translate="yes" xml:space="preserve">
          <source>Control.getEncodedValue()</source>
          <target state="translated">Control.getEncodedValue()</target>
        </trans-unit>
        <trans-unit id="cbcf9afdd8af6c8a5cf9ff11360b904d2f75a7aa" translate="yes" xml:space="preserve">
          <source>Control.getID()</source>
          <target state="translated">Control.getID()</target>
        </trans-unit>
        <trans-unit id="8783082dfd6ae8200c2a621c094d21613e07b666" translate="yes" xml:space="preserve">
          <source>Control.getType()</source>
          <target state="translated">Control.getType()</target>
        </trans-unit>
        <trans-unit id="0c77a45f14d9f1e9d360dbaf0a19d72ee5d5df83" translate="yes" xml:space="preserve">
          <source>Control.isCritical()</source>
          <target state="translated">Control.isCritical()</target>
        </trans-unit>
        <trans-unit id="63bd919ac29184097c521a8e6b31d6612056fe95" translate="yes" xml:space="preserve">
          <source>Control.toString()</source>
          <target state="translated">Control.toString()</target>
        </trans-unit>
        <trans-unit id="6ebc55e26db62d121bed3524dd39adabd0dfad82" translate="yes" xml:space="preserve">
          <source>ControlFactory</source>
          <target state="translated">ControlFactory</target>
        </trans-unit>
        <trans-unit id="92b303e4ac5c67b0f313087b30f80f19e37f65b4" translate="yes" xml:space="preserve">
          <source>ControlFactory.getControlInstance()</source>
          <target state="translated">ControlFactory.getControlInstance()</target>
        </trans-unit>
        <trans-unit id="e4ed8cf81bb9bad59829015534ae5e3137ae1be7" translate="yes" xml:space="preserve">
          <source>ControllerEventListener</source>
          <target state="translated">ControllerEventListener</target>
        </trans-unit>
        <trans-unit id="1ef003fa6e1766f4e0127eb7eab90842d03e3776" translate="yes" xml:space="preserve">
          <source>ControllerEventListener.controlChange()</source>
          <target state="translated">ControllerEventListener.controlChange()</target>
        </trans-unit>
        <trans-unit id="186ec0d6250ec41b40404be8268857fbbc72acd7" translate="yes" xml:space="preserve">
          <source>Controllers 64 through 95 (0x40 - 0x5F) allow 7-bit precision. The value of a 7-bit controller is set completely by the &lt;code&gt;value&lt;/code&gt; argument. An additional set of controllers provide 14-bit precision by using two controller numbers, one for the most significant 7 bits and another for the least significant 7 bits. Controller numbers 0 through 31 (0x00 - 0x1F) control the most significant 7 bits of 14-bit controllers; controller numbers 32 through 63 (0x20 - 0x3F) control the least significant 7 bits of these controllers. For example, controller number 7 (0x07) controls the upper 7 bits of the channel volume controller, and controller number 39 (0x27) controls the lower 7 bits. The value of a 14-bit controller is determined by the interaction of the two halves. When the most significant 7 bits of a controller are set (using controller numbers 0 through 31), the lower 7 bits are automatically set to 0. The corresponding controller number for the lower 7 bits may then be used to further modulate the controller value. It is possible that the underlying synthesizer does not support a specific controller message. In order to verify that a call to &lt;code&gt;controlChange&lt;/code&gt; was successful, use &lt;code&gt;getController&lt;/code&gt;.</source>
          <target state="translated">컨트롤러 64 ~ 95 (0x40-0x5F)는 7 비트 정밀도를 허용합니다. 7 비트 컨트롤러의 값은 &lt;code&gt;value&lt;/code&gt; 논의. 추가 컨트롤러 세트는 두 개의 컨트롤러 번호 (하나는 최상위 7 비트 용이고 다른 하나는 최하위 7 비트 용)를 사용하여 14 비트 정밀도를 제공합니다. 제어기 번호 0-31 (0x00-0x1F)은 14 비트 제어기의 최상위 7 비트를 제어합니다. 제어기 번호 32-63 (0x20-0x3F)은이 제어기의 최하위 7 비트를 제어합니다. 예를 들어 컨트롤러 번호 7 (0x07)은 채널 볼륨 컨트롤러의 상위 7 비트를 제어하고 컨트롤러 번호 39 (0x27)는 하위 7 비트를 제어합니다. 14 비트 컨트롤러의 값은 두 반쪽의 상호 작용에 의해 결정됩니다. 제어기의 최상위 7 비트가 설정되면 (제어기 번호 0-31 사용) 하위 7 비트는 자동으로 0으로 설정됩니다.하위 7 비트에 대한 대응하는 제어기 번호는 제어기 값을 추가로 변조하는데 사용될 수있다. 기본 신디사이저가 특정 컨트롤러 메시지를 지원하지 않을 수 있습니다. 전화를 확인하기 위해 &lt;code&gt;controlChange&lt;/code&gt; 가 성공했습니다 . &lt;code&gt;getController&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bee75ca77f753e4846b455441733f6641c4bf287" translate="yes" xml:space="preserve">
          <source>Controls</source>
          <target state="translated">Controls</target>
        </trans-unit>
        <trans-unit id="0025c5d832f8e8e928f7c504190f9c12475ac00e" translate="yes" xml:space="preserve">
          <source>Controls that provide a choice between only two settings can often be implemented instead as a &lt;code&gt;&lt;a href=&quot;booleancontrol&quot;&gt;&lt;code&gt;BooleanControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, and controls that provide a set of values along some quantifiable dimension might be implemented instead as a &lt;code&gt;FloatControl&lt;/code&gt; with a coarse resolution. However, a key feature of &lt;code&gt;EnumControl&lt;/code&gt; is that the returned values are arbitrary objects, rather than numerical or boolean values. This means that each returned object can provide further information. As an example, the settings of a &lt;code&gt;&lt;a href=&quot;enumcontrol.type#REVERB&quot;&gt;&lt;code&gt;REVERB&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; control are instances of &lt;code&gt;&lt;a href=&quot;reverbtype&quot;&gt;&lt;code&gt;ReverbType&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; that can be queried for the parameter values used for each setting.</source>
          <target state="translated">두 설정 중 하나만 선택할 수있는 컨트롤은 종종 &lt;code&gt;&lt;a href=&quot;booleancontrol&quot;&gt;&lt;code&gt;BooleanControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 로 구현 될 수 있으며, 수량화 가능한 일부 차원을 따라 값 집합을 제공하는 &lt;code&gt;FloatControl&lt;/code&gt; 은 대략적인 해상도 의 FloatControl 로 구현 될 수 있습니다 . 그러나 &lt;code&gt;EnumControl&lt;/code&gt; 의 주요 기능은 반환 값이 숫자 또는 부울 값이 아닌 임의의 개체라는 것입니다. 이는 반환 된 각 개체가 추가 정보를 제공 할 수 있음을 의미합니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;enumcontrol.type#REVERB&quot;&gt;&lt;code&gt;REVERB&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 컨트롤 의 설정은 각 설정에 사용 된 파라미터 값을 쿼리 할 수있는 &lt;code&gt;&lt;a href=&quot;reverbtype&quot;&gt;&lt;code&gt;ReverbType&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="e204cabd16716b74339a72d23f90a6e3e1d37cc2" translate="yes" xml:space="preserve">
          <source>Controls whether &lt;code&gt;accept&lt;/code&gt;ed server-mode &lt;code&gt;SSLSockets&lt;/code&gt; will be initially configured to</source>
          <target state="translated">&lt;code&gt;accept&lt;/code&gt; 서버 모드 &lt;code&gt;SSLSockets&lt;/code&gt; 을 처음에 구성 할 것인지 여부 를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="bce577691625d9148703cc6ba631863ce0f9b1b0" translate="yes" xml:space="preserve">
          <source>Controls whether accepted connections are in the (default) SSL server mode, or the SSL client mode.</source>
          <target state="translated">허용 된 연결이 (기본) SSL 서버 모드인지 또는 SSL 클라이언트 모드인지를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="3197ac2de2f709082b4f0e4a59446b36b168da0c" translate="yes" xml:space="preserve">
          <source>Controls whether new SSL sessions may be established by the sockets which are created from this server socket.</source>
          <target state="translated">이 서버 소켓에서 작성된 소켓으로 새 SSL 세션을 설정할 수 있는지 여부를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="22513baec219231e0e00391b1e250b94fec82f5a" translate="yes" xml:space="preserve">
          <source>Controls whether new SSL sessions may be established by this engine. If session creations are not allowed, and there are no existing sessions to resume, there will be no successful handshaking.</source>
          <target state="translated">이 엔진이 새 SSL 세션을 설정할 수 있는지 여부를 제어합니다. 세션 생성이 허용되지 않고 재개 할 기존 세션이없는 경우 핸드 셰이 킹이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="485b85f3b3fdba849ff4d5779bcc269d1491534a" translate="yes" xml:space="preserve">
          <source>Controls whether new SSL sessions may be established by this socket. If session creations are not allowed, and there are no existing sessions to resume, there will be no successful handshaking.</source>
          <target state="translated">이 소켓에 의해 새로운 SSL 세션이 확립 될지 어떨지를 제어합니다. 세션 생성이 허용되지 않고 재개 할 기존 세션이없는 경우 핸드 셰이 킹이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="935f7041dcc537bc14f12cfd39bafdcc0747ed36" translate="yes" xml:space="preserve">
          <source>Controls which particular protocols are enabled for use by accepted connections.</source>
          <target state="translated">허용 된 연결에서 사용할 수있는 특정 프로토콜을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="495b75d0fc22b349cb95053134562a775cd344f4" translate="yes" xml:space="preserve">
          <source>Contruct a BeanContextEvent</source>
          <target state="translated">BeanContextEvent 구성</target>
        </trans-unit>
        <trans-unit id="fd7975df072cd682b95d227c1880808923592bf5" translate="yes" xml:space="preserve">
          <source>Contruct a BeanContextMembershipEvent</source>
          <target state="translated">BeanContext 구성 멤버 이벤트</target>
        </trans-unit>
        <trans-unit id="ce2a64b52253199a10eba9917943de647ea0d69e" translate="yes" xml:space="preserve">
          <source>Convenience class for reading character files.</source>
          <target state="translated">문자 파일을 읽기위한 편의 클래스</target>
        </trans-unit>
        <trans-unit id="5b194c2bdde143cf90d11883df56517c9e63effb" translate="yes" xml:space="preserve">
          <source>Convenience class for reading character files. The constructors of this class assume that the default character encoding and the default byte-buffer size are appropriate. To specify these values yourself, construct an InputStreamReader on a FileInputStream.</source>
          <target state="translated">문자 파일을 읽기위한 편의 클래스 이 클래스의 생성자는 기본 문자 인코딩과 기본 바이트 버퍼 크기가 적절하다고 가정합니다. 이러한 값을 직접 지정하려면 FileInputStream에서 InputStreamReader를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="c2bbfc5fedfbf01a382244e630f73c2bccab4882" translate="yes" xml:space="preserve">
          <source>Convenience class for writing character files.</source>
          <target state="translated">문자 파일 작성을위한 편의 클래스</target>
        </trans-unit>
        <trans-unit id="695bb45564b0409a86b17edc6658d0e23c2eacf5" translate="yes" xml:space="preserve">
          <source>Convenience class for writing character files. The constructors of this class assume that the default character encoding and the default byte-buffer size are acceptable. To specify these values yourself, construct an OutputStreamWriter on a FileOutputStream.</source>
          <target state="translated">문자 파일 작성을위한 편의 클래스 이 클래스의 생성자는 기본 문자 인코딩과 기본 바이트 버퍼 크기를 사용할 수 있다고 가정합니다. 이러한 값을 직접 지정하려면 FileOutputStream에 OutputStreamWriter를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="a6f759d9e082fca45a14fd47ee42af950e1d4d28" translate="yes" xml:space="preserve">
          <source>Convenience method equivalent to &lt;code&gt;v.scan(e, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.scan(e, null)&lt;/code&gt; 와 동일한 편의 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="2785b8c1802fd78cc7ba394d0dcb868da4bdd75f" translate="yes" xml:space="preserve">
          <source>Convenience method for comparing the equality of two strings based on this Collator's collation rules.</source>
          <target state="translated">이 Collator의 조합 규칙에 따라 두 문자열의 동등성을 비교하는 편의 방법입니다.</target>
        </trans-unit>
        <trans-unit id="f65106082bcff98208dae5640542d99deb658558" translate="yes" xml:space="preserve">
          <source>Convenience method that decodes bytes in this charset into Unicode characters.</source>
          <target state="translated">이 캐릭터 세트의 바이트를 Unicode 문자로 디코드하는 간이 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="f25030feaed31c3a741f07822ee138e6e8a672cb" translate="yes" xml:space="preserve">
          <source>Convenience method that decodes the remaining content of a single input byte buffer into a newly-allocated character buffer.</source>
          <target state="translated">단일 입력 바이트 버퍼의 나머지 내용을 새로 할당 된 문자 버퍼로 디코딩하는 편의 방법입니다.</target>
        </trans-unit>
        <trans-unit id="719205da0a21dcc1ae1190988595612ae29b5a11" translate="yes" xml:space="preserve">
          <source>Convenience method that encodes Unicode characters into bytes in this charset.</source>
          <target state="translated">이 문자 세트에서 유니 코드 문자를 바이트로 인코딩하는 편의 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="0aaa87bc417ec3c9d2977425b3412bfb601d28c4" translate="yes" xml:space="preserve">
          <source>Convenience method that encodes a string into bytes in this charset.</source>
          <target state="translated">이 캐릭터 세트로 캐릭터 라인을 바이트로 encode하는 간이 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="b70a9dfa1a51c3afc2213f2421140af0df0b01b6" translate="yes" xml:space="preserve">
          <source>Convenience method that encodes the remaining content of a single input character buffer into a newly-allocated byte buffer.</source>
          <target state="translated">단일 입력 문자 버퍼의 나머지 내용을 새로 할당 된 바이트 버퍼로 인코딩하는 편의 방법입니다.</target>
        </trans-unit>
        <trans-unit id="8f0f1610dc11d946e4933c4e651aeca1827b34e4" translate="yes" xml:space="preserve">
          <source>Convenience method that returns &lt;a href=&quot;spliterator#estimateSize--&quot;&gt;&lt;code&gt;estimateSize()&lt;/code&gt;&lt;/a&gt; if this Spliterator is &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, else &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">편리한 메소드가 리턴 &lt;a href=&quot;spliterator#estimateSize--&quot;&gt; &lt;code&gt;estimateSize()&lt;/code&gt; &lt;/a&gt; 이 Spliterator이 경우 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt; , 다른 &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8b8729b425df94be29fcea1c51fbf77050b1141" translate="yes" xml:space="preserve">
          <source>Convenience method to return an Enumeration with all or a subset of the InetAddresses bound to this network interface.</source>
          <target state="translated">이 네트워크 인터페이스에 바인드 된 InetAddresses의 전부 또는 일부를 가지는 열거를 돌려주는 간이 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="81a6cdd2f8d3d8493cfda33f9d781a81ec2eb9b8" translate="yes" xml:space="preserve">
          <source>Convenience method to search for a network interface that has the specified Internet Protocol (IP) address bound to it.</source>
          <target state="translated">지정된 인터넷 프로토콜 (IP) 주소가 바인딩 된 네트워크 인터페이스를 검색하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="6fefb9b5ac8adf425f975d1fedbedd50cc3f14c9" translate="yes" xml:space="preserve">
          <source>Convenience method to set the &lt;code&gt;accessible&lt;/code&gt; flag for an array of objects with a single security check (for efficiency).</source>
          <target state="translated">단일 보안 검사 (효율성)로 객체 배열에 &lt;code&gt;accessible&lt;/code&gt; 플래그 를 설정하는 편의 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="1502a97445e5007c9c51a97e2559602514ee1313" translate="yes" xml:space="preserve">
          <source>Convenience methods for common formatting requests exist as illustrated by the following invocations:</source>
          <target state="translated">일반적인 형식 지정 요청에 대한 편의 방법은 다음 호출에서 설명하는 것처럼 존재합니다.</target>
        </trans-unit>
        <trans-unit id="9151f8433f795cb0f0b5b6743aeb7de77ec49f00" translate="yes" xml:space="preserve">
          <source>Conversion</source>
          <target state="translated">Conversion</target>
        </trans-unit>
        <trans-unit id="c71bb607144a31e273bc0663e8a89ff76429687e" translate="yes" xml:space="preserve">
          <source>Conversion from a coarser granularity that would numerically overflow saturate to &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; if negative or &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; if positive.</source>
          <target state="translated">음수이면 오버플로로 포화되는 더 세분화 된 세분성에서 음수이면 &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; 로 , 양수 이면 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="dcb5bb559ece4f2ed5b7ae6ae1053627c3759b74" translate="yes" xml:space="preserve">
          <source>Conversion from instant to date or time uses the &lt;a href=&quot;zoneoffset#UTC&quot;&gt;UTC time-zone&lt;/a&gt;.</source>
          <target state="translated">인스턴트에서 날짜 또는 시간으로의 변환은 &lt;a href=&quot;zoneoffset#UTC&quot;&gt;UTC 시간대를&lt;/a&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="39d5630b3e510a543c024c0264491f8387aab806" translate="yes" xml:space="preserve">
          <source>Conversion from instant to date or time uses the specified time-zone.</source>
          <target state="translated">순간에서 날짜 또는 시간으로의 변환은 지정된 시간대를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b08eaadf77cfdba7944ddcaf69eee5a983b74af3" translate="yes" xml:space="preserve">
          <source>Conversions</source>
          <target state="translated">Conversions</target>
        </trans-unit>
        <trans-unit id="b9408b4e4b20ae15eb55c73e13f376d58d9e1ef6" translate="yes" xml:space="preserve">
          <source>Conversions are divided into the following categories:</source>
          <target state="translated">전환은 다음과 같은 범주로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="5461c9355a27ef06572b3a7f71782ff093a44c42" translate="yes" xml:space="preserve">
          <source>Conversions denoted by an upper-case character (i.e. &lt;code&gt;'B'&lt;/code&gt;, &lt;code&gt;'H'&lt;/code&gt;, &lt;code&gt;'S'&lt;/code&gt;, &lt;code&gt;'C'&lt;/code&gt;, &lt;code&gt;'X'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, &lt;code&gt;'G'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;, and &lt;code&gt;'T'&lt;/code&gt;) are the same as those for the corresponding lower-case conversion characters except that the result is converted to upper case according to the rules of the prevailing &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;. The result is equivalent to the following invocation of &lt;a href=&quot;../lang/string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">대문자로 표시된 변환 (예 : &lt;code&gt;'B'&lt;/code&gt; , &lt;code&gt;'H'&lt;/code&gt; , &lt;code&gt;'S'&lt;/code&gt; , &lt;code&gt;'C'&lt;/code&gt; , &lt;code&gt;'X'&lt;/code&gt; , &lt;code&gt;'E'&lt;/code&gt; , &lt;code&gt;'G'&lt;/code&gt; , &lt;code&gt;'A'&lt;/code&gt; 및 &lt;code&gt;'T'&lt;/code&gt; )은 동일합니다 결과가 일반적인 &lt;a href=&quot;locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 규칙에 따라 대문자로 변환된다는 점을 제외하고 해당하는 소문자 변환 문자의 경우와 같습니다 . 결과는 다음 &lt;a href=&quot;../lang/string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt; 호출과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5a96169f0bdaa8602b892424366e0dcab7eaab98" translate="yes" xml:space="preserve">
          <source>Convert a ProtectionDomain to a String.</source>
          <target state="translated">ProtectionDomain을 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="32965f0ff6738956891899ad8b0b901cb78e3c4c" translate="yes" xml:space="preserve">
          <source>Convert any result returned by the original method handle to the return type of new method handle.</source>
          <target state="translated">원래 메소드 핸들이 리턴 한 결과를 새 유형 핸들의 리턴 유형으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="f581115f231d584540528a3474a8351a9eb5e47a" translate="yes" xml:space="preserve">
          <source>Convert the ISO &lt;code&gt;LocalDate&lt;/code&gt; to and from the user's preferred calendar system during printing and parsing</source>
          <target state="translated">인쇄 및 구문 분석 중에 ISO &lt;code&gt;LocalDate&lt;/code&gt; 를 사용자가 선호하는 캘린더 시스템과 변환</target>
        </trans-unit>
        <trans-unit id="a905ffb5573f5be972737ac24f5ea833624a1962" translate="yes" xml:space="preserve">
          <source>Convert the incoming argument list to match the original method handle's argument list.</source>
          <target state="translated">원래 인수 핸들의 인수 목록과 일치하도록 수신 인수 목록을 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="3eef6f62a77a3973f7ffad30e7dbab6f2c409680" translate="yes" xml:space="preserve">
          <source>Converting an instant to a zoned date-time is simple as there is only one valid offset for each instant.</source>
          <target state="translated">각 인스턴트에 대해 유효한 오프셋이 하나만 있으므로 인스턴트를 존 날짜 / 시간으로 변환하는 것은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="03a1389223973b4533ee969be9ead3bae4760688" translate="yes" xml:space="preserve">
          <source>Converting an instant to a zoned date-time is simple as there is only one valid offset for each instant. If the valid offset is different to the offset specified, then the date-time and offset of the zoned date-time will differ from those specified.</source>
          <target state="translated">각 인스턴트에 대해 유효한 오프셋이 하나만 있으므로 인스턴트를 존 날짜 / 시간으로 변환하는 것은 간단합니다. 유효한 오프셋이 지정된 오프셋과 다르면 존 날짜 / 시간의 날짜-시간 및 오프셋이 지정된 것과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d656d334dd28e14033534b2fc488b412b3827875" translate="yes" xml:space="preserve">
          <source>Converting between the two time-lines involves calculating the offset using the &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; accessed from the &lt;code&gt;ZoneId&lt;/code&gt;. Obtaining the offset for an instant is simple, as there is exactly one valid offset for each instant. By contrast, obtaining the offset for a local date-time is not straightforward. There are three cases:</source>
          <target state="translated">두 타임 라인 사이를 변환 하려면 &lt;code&gt;ZoneId&lt;/code&gt; 에서 액세스 한 &lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt; 사용하여 오프셋을 계산해야합니다 . 각 인스턴트에 대해 정확히 하나의 유효한 오프셋이 있으므로 인스턴트에 대한 오프셋을 얻는 것은 간단합니다. 반대로, 현지 날짜-시간에 대한 오프셋을 얻는 것은 간단하지 않습니다. 세 가지 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="09ada3c984ab851bf79fe9cdf7a645817a1c58e4" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../nio/bytebuffer&quot;&gt;&lt;code&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; into an instance of class &lt;code&gt;Class&lt;/code&gt;, with an optional &lt;code&gt;ProtectionDomain&lt;/code&gt;. If the domain is &lt;code&gt;null&lt;/code&gt;, then a default domain will be assigned to the class as specified in the documentation for &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt;&lt;code&gt;defineClass(String, byte[],
 int, int)&lt;/code&gt;&lt;/a&gt;. Before the class can be used it must be resolved.</source>
          <target state="translated">선택 사항 인 &lt;code&gt;ProtectionDomain&lt;/code&gt; 을 사용 하여 &lt;a href=&quot;../nio/bytebuffer&quot;&gt; &lt;code&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;Class&lt;/code&gt; 클래스 의 인스턴스로 변환합니다 . 도메인이 &lt;code&gt;null&lt;/code&gt; 의 경우, 디폴트 클래스는 &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt; &lt;code&gt;defineClass(String, byte[], int, int)&lt;/code&gt; &lt;/a&gt; 의 문서에 지정된대로 클래스에 할당됩니다 . 클래스를 사용하려면 먼저 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="94a5bb6dd3572c3d044bc58efe3b7487ac0d8d2f" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; into an instance of class &lt;code&gt;Class&lt;/code&gt;, with an optional CodeSource. Before the class can be used it must be resolved.</source>
          <target state="translated">선택적 CodeSource를 사용 하여 &lt;a href=&quot;../nio/bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;Class&lt;/code&gt; 클래스 의 인스턴스로 변환합니다 . 클래스를 사용하려면 먼저 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="d8716623eb0f804d5c6b6353b10d36c9774d7a27" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;URL&lt;/code&gt; of a specific protocol to a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">특정 프로토콜 의 &lt;code&gt;URL&lt;/code&gt; 을 &lt;code&gt;String&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="cff96005c0c1b39ed9c33c6cb31b8e52feb82e30" translate="yes" xml:space="preserve">
          <source>Converts a given path string to a &lt;code&gt;Path&lt;/code&gt; and resolves it against this &lt;code&gt;Path&lt;/code&gt; in exactly the manner specified by the &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; method. For example, suppose that the name separator is &quot;&lt;code&gt;/&lt;/code&gt;&quot; and a path represents &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot;, then invoking this method with the path string &quot;&lt;code&gt;gus&lt;/code&gt;&quot; will result in the &lt;code&gt;Path&lt;/code&gt; &quot;&lt;code&gt;foo/bar/gus&lt;/code&gt;&quot;.</source>
          <target state="translated">A와 지정된 경로 문자열로 변환 &lt;code&gt;Path&lt;/code&gt; 이 대한과 결의를 &lt;code&gt;Path&lt;/code&gt; 에 의해 지정된 완전히 같은 방법으로 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; 하는 방법. 예를 들어, 이름 구분 기호가 &quot; &lt;code&gt;/&lt;/code&gt; &quot;이고 경로가 &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot;를 나타내는 경우 경로 문자열 &quot; &lt;code&gt;gus&lt;/code&gt; &quot; 로이 메소드를 호출 하면 &lt;code&gt;Path&lt;/code&gt; &quot; &lt;code&gt;foo/bar/gus&lt;/code&gt; &quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="06ba2ee6a330681d946ec30fc382b964f42eca72" translate="yes" xml:space="preserve">
          <source>Converts a given path string to a &lt;code&gt;Path&lt;/code&gt; and resolves it against this path's &lt;a href=&quot;path#getParent--&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt; path in exactly the manner specified by the &lt;a href=&quot;path#resolveSibling-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolveSibling&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">주어진 경로 문자열을 &lt;code&gt;Path&lt;/code&gt; 로 변환 하고 &lt;a href=&quot;path#resolveSibling-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolveSibling&lt;/code&gt; &lt;/a&gt; 메소드에 의해 지정된 방식 으로이 경로의 &lt;a href=&quot;path#getParent--&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt; 경로에 대해 해석합니다 .</target>
        </trans-unit>
        <trans-unit id="b7cd11f9ecd59ddecb81e06bab1cd9a1bb994e87" translate="yes" xml:space="preserve">
          <source>Converts a path string, or a sequence of strings that when joined form a path string, to a &lt;code&gt;Path&lt;/code&gt;. If &lt;code&gt;more&lt;/code&gt; does not specify any elements then the value of the &lt;code&gt;first&lt;/code&gt; parameter is the path string to convert. If &lt;code&gt;more&lt;/code&gt; specifies one or more elements then each non-empty string, including &lt;code&gt;first&lt;/code&gt;, is considered to be a sequence of name elements (see &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;) and is joined to form a path string. The details as to how the Strings are joined is provider specific but typically they will be joined using the &lt;a href=&quot;filesystem#getSeparator--&quot;&gt;&lt;code&gt;name-separator&lt;/code&gt;&lt;/a&gt; as the separator. For example, if the name separator is &quot;&lt;code&gt;/&lt;/code&gt;&quot; and &lt;code&gt;getPath(&quot;/foo&quot;,&quot;bar&quot;,&quot;gus&quot;)&lt;/code&gt; is invoked, then the path string &lt;code&gt;&quot;/foo/bar/gus&quot;&lt;/code&gt; is converted to a &lt;code&gt;Path&lt;/code&gt;. A &lt;code&gt;Path&lt;/code&gt; representing an empty path is returned if &lt;code&gt;first&lt;/code&gt; is the empty string and &lt;code&gt;more&lt;/code&gt; does not contain any non-empty strings.</source>
          <target state="translated">패스 문자열 또는 패스 문자열에서 결합 될 때 사용되는 문자열 시퀀스를 &lt;code&gt;Path&lt;/code&gt; 로 변환 합니다. 경우 &lt;code&gt;more&lt;/code&gt; 어떤 요소를 지정하지 않는 다음의 값 &lt;code&gt;first&lt;/code&gt; 매개 변수는 변환 할 수있는 경로 문자열입니다. &lt;code&gt;more&lt;/code&gt; 가 하나 이상의 요소를 지정 하면 &lt;code&gt;first&lt;/code&gt; 를 포함하여 비어 있지 않은 각 문자열 은 일련의 이름 요소로 간주되며 ( &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 참조 ) 경로 문자열을 형성하기 위해 결합됩니다. 문자열이 결합되는 방법에 대한 자세한 내용은 공급자마다 다르지만 일반적으로 &lt;a href=&quot;filesystem#getSeparator--&quot;&gt; &lt;code&gt;name-separator&lt;/code&gt; &lt;/a&gt; 를 구분 기호 로 사용하여 결합됩니다 . 예를 들어 이름 구분 기호가 &quot; &lt;code&gt;/&lt;/code&gt; &quot;이고 &lt;code&gt;getPath(&quot;/foo&quot;,&quot;bar&quot;,&quot;gus&quot;)&lt;/code&gt; 호출 된 경우 경로 문자열 &lt;code&gt;&quot;/foo/bar/gus&quot;&lt;/code&gt; 는 &lt;code&gt;Path&lt;/code&gt; 로 변환됩니다 . &lt;code&gt;Path&lt;/code&gt; 경우는, 하늘의 패스를 나타내는 반환되는 &lt;code&gt;first&lt;/code&gt; 빈 문자열이고 &lt;code&gt;more&lt;/code&gt; 비어 있지 않은 문자열을 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c699c944eeb8246534fb47aff60fde0f250b3117" translate="yes" xml:space="preserve">
          <source>Converts all of the characters in this &lt;code&gt;String&lt;/code&gt; to lower case using the rules of the default locale. This is equivalent to calling &lt;code&gt;toLowerCase(Locale.getDefault())&lt;/code&gt;.</source>
          <target state="translated">기본 로케일 규칙을 사용 하여이 &lt;code&gt;String&lt;/code&gt; 의 모든 문자 를 소문자로 변환합니다 . 이것은 &lt;code&gt;toLowerCase(Locale.getDefault())&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="96084953975a4c40c8ebc4b2298bbcd8ccdf1279" translate="yes" xml:space="preserve">
          <source>Converts all of the characters in this &lt;code&gt;String&lt;/code&gt; to lower case using the rules of the given &lt;code&gt;Locale&lt;/code&gt;. Case mapping is based on the Unicode Standard version specified by the &lt;a href=&quot;character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; class. Since case mappings are not always 1:1 char mappings, the resulting &lt;code&gt;String&lt;/code&gt; may be a different length than the original &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Locale&lt;/code&gt; 규칙을 사용 하여이 &lt;code&gt;String&lt;/code&gt; 의 모든 문자 를 소문자로 변환합니다 . 대소 &lt;a href=&quot;character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt; 매핑은 Character 클래스에서 지정한 유니 코드 표준 버전을 기반으로합니다 . 대소 문자 매핑이 항상 1 : 1 문자 매핑이 아니기 때문에 결과 &lt;code&gt;String&lt;/code&gt; 은 원래 &lt;code&gt;String&lt;/code&gt; 과 길이가 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="116b727b3df0b8b6b6ea39e58ca7667b947c9a0f" translate="yes" xml:space="preserve">
          <source>Converts all of the characters in this &lt;code&gt;String&lt;/code&gt; to upper case using the rules of the default locale. This method is equivalent to &lt;code&gt;toUpperCase(Locale.getDefault())&lt;/code&gt;.</source>
          <target state="translated">기본 로케일 규칙을 사용 하여이 &lt;code&gt;String&lt;/code&gt; 의 모든 문자 를 대문자로 변환합니다 . 이 메소드는 &lt;code&gt;toUpperCase(Locale.getDefault())&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="376bdf20b5a65adf497002b76d57a1fb6aa3648e" translate="yes" xml:space="preserve">
          <source>Converts all of the characters in this &lt;code&gt;String&lt;/code&gt; to upper case using the rules of the given &lt;code&gt;Locale&lt;/code&gt;. Case mapping is based on the Unicode Standard version specified by the &lt;a href=&quot;character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; class. Since case mappings are not always 1:1 char mappings, the resulting &lt;code&gt;String&lt;/code&gt; may be a different length than the original &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Locale&lt;/code&gt; 규칙을 사용 하여이 &lt;code&gt;String&lt;/code&gt; 의 모든 문자 를 대문자로 변환합니다 . 대소 &lt;a href=&quot;character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt; 매핑은 Character 클래스에서 지정한 유니 코드 표준 버전을 기반으로합니다 . 대소 문자 매핑이 항상 1 : 1 문자 매핑이 아니기 때문에 결과 &lt;code&gt;String&lt;/code&gt; 은 원래 &lt;code&gt;String&lt;/code&gt; 과 길이가 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0b53b55a9afcabbfd4b652709ece96d2b39e454" translate="yes" xml:space="preserve">
          <source>Converts all primitive types to their corresponding wrapper types. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All reference types (including wrapper types) will remain unchanged. A &lt;code&gt;void&lt;/code&gt; return type is changed to the type &lt;code&gt;java.lang.Void&lt;/code&gt;. The expression &lt;code&gt;type.wrap().erase()&lt;/code&gt; produces the same value as &lt;code&gt;type.generic()&lt;/code&gt;.</source>
          <target state="translated">모든 기본 유형을 해당 랩퍼 유형으로 변환합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 . 모든 참조 유형 (래퍼 유형 포함)은 변경되지 않습니다. &lt;code&gt;void&lt;/code&gt; 반환 형식 유형으로 변경됩니다 &lt;code&gt;java.lang.Void&lt;/code&gt; . 발현 &lt;code&gt;type.wrap().erase()&lt;/code&gt; 와 같은 값 생성 &lt;code&gt;type.generic()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="faa04edf05e405a75c85d4d2dc4a66dc0b232bce" translate="yes" xml:space="preserve">
          <source>Converts all types, both reference and primitive, to &lt;code&gt;Object&lt;/code&gt;. Convenience method for &lt;a href=&quot;methodtype#genericMethodType-int-&quot;&gt;&lt;code&gt;genericMethodType&lt;/code&gt;&lt;/a&gt;. The expression &lt;code&gt;type.wrap().erase()&lt;/code&gt; produces the same value as &lt;code&gt;type.generic()&lt;/code&gt;.</source>
          <target state="translated">참조 및 프리미티브의 모든 유형을 &lt;code&gt;Object&lt;/code&gt; 로 변환합니다 . &lt;a href=&quot;methodtype#genericMethodType-int-&quot;&gt; &lt;code&gt;genericMethodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 . 발현 &lt;code&gt;type.wrap().erase()&lt;/code&gt; 와 같은 값 생성 &lt;code&gt;type.generic()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f68ccde024125302cd9596a59c3f491907d297a6" translate="yes" xml:space="preserve">
          <source>Converts all wrapper types to their corresponding primitive types. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All primitive types (including &lt;code&gt;void&lt;/code&gt;) will remain unchanged. A return type of &lt;code&gt;java.lang.Void&lt;/code&gt; is changed to &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">모든 랩퍼 유형을 해당 기본 유형으로 변환합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 . 모든 기본 유형 ( &lt;code&gt;void&lt;/code&gt; 포함 )은 변경되지 않습니다. &lt;code&gt;java.lang.Void&lt;/code&gt; 의 리턴 유형이 &lt;code&gt;void&lt;/code&gt; 로 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="defd16762a7fc838e51be7421f1d62cb9260b1ab" translate="yes" xml:space="preserve">
          <source>Converts an angle measured in degrees to an approximately equivalent angle measured in radians. The conversion from degrees to radians is generally inexact.</source>
          <target state="translated">도 단위로 측정 된 각도를 라디안 단위로 측정 된 대략 동등한 각도로 변환합니다. 도에서 라디안으로의 변환은 일반적으로 정확하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="54a44848bec847985394bfe69f8b0bebe0971c41" translate="yes" xml:space="preserve">
          <source>Converts an angle measured in radians to an approximately equivalent angle measured in degrees. The conversion from radians to degrees is generally inexact; users should</source>
          <target state="translated">라디안 단위로 측정 된 각도를도 단위로 측정 된 대략 동등한 각도로 변환합니다. 라디안에서 각도로의 변환은 일반적으로 정확하지 않습니다. 사용자는</target>
        </trans-unit>
        <trans-unit id="1ab3cf47b485d14011411e4512b92fb1d02c13f9" translate="yes" xml:space="preserve">
          <source>Converts an array of bytes into an instance of class &lt;code&gt;Class&lt;/code&gt;, with an optional &lt;code&gt;ProtectionDomain&lt;/code&gt;. If the domain is &lt;code&gt;null&lt;/code&gt;, then a default domain will be assigned to the class as specified in the documentation for &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt;&lt;code&gt;defineClass(String, byte[],
 int, int)&lt;/code&gt;&lt;/a&gt;. Before the class can be used it must be resolved.</source>
          <target state="translated">선택적인 &lt;code&gt;ProtectionDomain&lt;/code&gt; 을 사용하여 바이트 배열을 &lt;code&gt;Class&lt;/code&gt; 클래스 의 인스턴스로 변환합니다 . 도메인이 &lt;code&gt;null&lt;/code&gt; 의 경우, 디폴트 클래스는 &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt; &lt;code&gt;defineClass(String, byte[], int, int)&lt;/code&gt; &lt;/a&gt; 의 문서에 지정된대로 클래스에 할당됩니다 . 클래스를 사용하려면 먼저 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="ccf778daaba7240ea81e3954f5a45b9d0dd35992" translate="yes" xml:space="preserve">
          <source>Converts an array of bytes into an instance of class &lt;code&gt;Class&lt;/code&gt;. Before the &lt;code&gt;Class&lt;/code&gt; can be used it must be resolved.</source>
          <target state="translated">바이트 배열을 &lt;code&gt;Class&lt;/code&gt; 클래스 의 인스턴스로 변환합니다 . 전과 &lt;code&gt;Class&lt;/code&gt; 사용할 수 있습니다 그것은 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="a6e4c26c8da45d46fa31243dccc0bf0be9bfcf6d" translate="yes" xml:space="preserve">
          <source>Converts an array of bytes into an instance of class &lt;code&gt;Class&lt;/code&gt;. Before the &lt;code&gt;Class&lt;/code&gt; can be used it must be resolved. This method is deprecated in favor of the version that takes a &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; as its first argument, and is more secure.</source>
          <target state="translated">바이트 배열을 &lt;code&gt;Class&lt;/code&gt; 클래스 의 인스턴스로 변환 . 전과 &lt;code&gt;Class&lt;/code&gt; 사용할 수 있습니다 그것은 해결해야합니다. 이 방법은 &lt;a href=&quot;#name&quot;&gt;이진 이름&lt;/a&gt; 을 첫 번째 인수로 사용하고보다 안전한 버전을 위해 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="536a4ca25e28065d6e7593c57a58d37d10d903b6" translate="yes" xml:space="preserve">
          <source>Converts an array of bytes into an instance of class Class, with an optional CodeSource. Before the class can be used it must be resolved.</source>
          <target state="translated">선택적 CodeSource를 사용하여 바이트 배열을 Class 클래스의 인스턴스로 변환합니다. 클래스를 사용하려면 먼저 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="4607dcaacbe305a4d7af666d232ac7fde875bf81" translate="yes" xml:space="preserve">
          <source>Converts calendar field values to the time value (millisecond offset from the &lt;a href=&quot;calendar#Epoch&quot;&gt;Epoch&lt;/a&gt;).</source>
          <target state="translated">달력 필드 값을 시간 값으로 변환합니다. &lt;a href=&quot;calendar#Epoch&quot;&gt; Epoch&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b0fbe60161c7c04758c76200db9ce1abcdc6d9bd" translate="yes" xml:space="preserve">
          <source>Converts input data to a string.</source>
          <target state="translated">입력 데이터를 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="10ff78a013aeaa2c8bea6fa6a52efe38497e806c" translate="yes" xml:space="preserve">
          <source>Converts the CollationKey to a sequence of bits. If two CollationKeys could be legitimately compared, then one could compare the byte arrays for each of those keys to obtain the same result. Byte arrays are organized most significant byte first.</source>
          <target state="translated">CollationKey를 일련의 비트로 변환합니다. 두 개의 CollationKey를 합법적으로 비교할 수 있다면, 각각의 해당 키에 대한 바이트 배열을 비교하여 동일한 결과를 얻을 수 있습니다. 바이트 배열은 가장 중요한 바이트부터 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="fb710076f29225dd18d47be15dff6cef9a1715f8" translate="yes" xml:space="preserve">
          <source>Converts the argument to a &lt;code&gt;long&lt;/code&gt; by an unsigned conversion. In an unsigned conversion to a &lt;code&gt;long&lt;/code&gt;, the high-order 32 bits of the &lt;code&gt;long&lt;/code&gt; are zero and the low-order 32 bits are equal to the bits of the integer argument. Consequently, zero and positive &lt;code&gt;int&lt;/code&gt; values are mapped to a numerically equal &lt;code&gt;long&lt;/code&gt; value and negative &lt;code&gt;int&lt;/code&gt; values are mapped to a &lt;code&gt;long&lt;/code&gt; value equal to the input plus 2&lt;sup&gt;32&lt;/sup&gt;.</source>
          <target state="translated">부호없는 변환으로 인수를 &lt;code&gt;long&lt;/code&gt; 으로 변환합니다. (A)에 부호 전환 &lt;code&gt;long&lt;/code&gt; 상기의 상위 32 비트는 &lt;code&gt;long&lt;/code&gt; 제로이며, 하위 32 비트는 정수 인수의 비트와 동일하다. 결과적으로, 0 및 양의 &lt;code&gt;int&lt;/code&gt; 값은 숫자 적으로 동일한 &lt;code&gt;long&lt;/code&gt; 값에 매핑 되고 음의 &lt;code&gt;int&lt;/code&gt; 값은 입력에 2 &lt;sup&gt;32를&lt;/sup&gt; 더한 &lt;code&gt;long&lt;/code&gt; 값에 매핑됩니다 .&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="614bb6d956401e9ff928d8fce1d92838dbcba2d9" translate="yes" xml:space="preserve">
          <source>Converts the argument to a &lt;code&gt;long&lt;/code&gt; by an unsigned conversion. In an unsigned conversion to a &lt;code&gt;long&lt;/code&gt;, the high-order 48 bits of the &lt;code&gt;long&lt;/code&gt; are zero and the low-order 16 bits are equal to the bits of the &lt;code&gt;short&lt;/code&gt; argument. Consequently, zero and positive &lt;code&gt;short&lt;/code&gt; values are mapped to a numerically equal &lt;code&gt;long&lt;/code&gt; value and negative &lt;code&gt;short&lt;/code&gt; values are mapped to a &lt;code&gt;long&lt;/code&gt; value equal to the input plus 2&lt;sup&gt;16&lt;/sup&gt;.</source>
          <target state="translated">부호없는 변환으로 인수를 &lt;code&gt;long&lt;/code&gt; 으로 변환합니다. (A)에 부호 전환 &lt;code&gt;long&lt;/code&gt; 상기의 상위 48 비트는 &lt;code&gt;long&lt;/code&gt; 제로이며, 하위 16 비트의 비트와 동일하다 &lt;code&gt;short&lt;/code&gt; 인수. 결과적으로, 0과 양의 &lt;code&gt;short&lt;/code&gt; 값은 숫자 적으로 동일한 &lt;code&gt;long&lt;/code&gt; 값에 매핑 되고 음의 &lt;code&gt;short&lt;/code&gt; 값은 입력에 2 &lt;sup&gt;16을&lt;/sup&gt; 더한 &lt;code&gt;long&lt;/code&gt; 값에 매핑됩니다 .&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e5bfa2c7d79d9ce9d93378db2fa5daee7da50375" translate="yes" xml:space="preserve">
          <source>Converts the argument to a &lt;code&gt;long&lt;/code&gt; by an unsigned conversion. In an unsigned conversion to a &lt;code&gt;long&lt;/code&gt;, the high-order 56 bits of the &lt;code&gt;long&lt;/code&gt; are zero and the low-order 8 bits are equal to the bits of the &lt;code&gt;byte&lt;/code&gt; argument. Consequently, zero and positive &lt;code&gt;byte&lt;/code&gt; values are mapped to a numerically equal &lt;code&gt;long&lt;/code&gt; value and negative &lt;code&gt;byte&lt;/code&gt; values are mapped to a &lt;code&gt;long&lt;/code&gt; value equal to the input plus 2&lt;sup&gt;8&lt;/sup&gt;.</source>
          <target state="translated">부호없는 변환으로 인수를 &lt;code&gt;long&lt;/code&gt; 으로 변환합니다. (A)에 부호 전환 &lt;code&gt;long&lt;/code&gt; 상기의 상위 56 비트는 &lt;code&gt;long&lt;/code&gt; 제로이며, 하위 8 비트는 비트의 동일한 &lt;code&gt;byte&lt;/code&gt; 인수. 결과적으로 0과 양의 &lt;code&gt;byte&lt;/code&gt; 값은 숫자 적으로 동일한 &lt;code&gt;long&lt;/code&gt; 값에 매핑 되고 음의 &lt;code&gt;byte&lt;/code&gt; 값은 입력에 2 &lt;sup&gt;8을&lt;/sup&gt; 더한 &lt;code&gt;long&lt;/code&gt; 값에 매핑됩니다.&lt;sup&gt;&lt;/sup&gt; .</target>
        </trans-unit>
        <trans-unit id="ff9bc0d6413ec8053b8bf80c696cc5c46e0ceac3" translate="yes" xml:space="preserve">
          <source>Converts the argument to an &lt;code&gt;int&lt;/code&gt; by an unsigned conversion. In an unsigned conversion to an &lt;code&gt;int&lt;/code&gt;, the high-order 16 bits of the &lt;code&gt;int&lt;/code&gt; are zero and the low-order 16 bits are equal to the bits of the &lt;code&gt;short&lt;/code&gt; argument. Consequently, zero and positive &lt;code&gt;short&lt;/code&gt; values are mapped to a numerically equal &lt;code&gt;int&lt;/code&gt; value and negative &lt;code&gt;short&lt;/code&gt; values are mapped to an &lt;code&gt;int&lt;/code&gt; value equal to the input plus 2&lt;sup&gt;16&lt;/sup&gt;.</source>
          <target state="translated">부호없는 변환에 의해 인수를 &lt;code&gt;int&lt;/code&gt; 로 변환합니다. 내지 An 부호 전환 &lt;code&gt;int&lt;/code&gt; 상기의 상위 16 비트 &lt;code&gt;int&lt;/code&gt; 제로이며, 하위 16 비트의 비트와 동일하다 &lt;code&gt;short&lt;/code&gt; 인수. 결과적으로, 0 및 양의 &lt;code&gt;short&lt;/code&gt; 값은 숫자 적으로 동일한 &lt;code&gt;int&lt;/code&gt; 값에 매핑 되고 음의 &lt;code&gt;short&lt;/code&gt; 값은 입력에 2 &lt;sup&gt;16을&lt;/sup&gt; 더한 &lt;code&gt;int&lt;/code&gt; 값에 매핑됩니다 .&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0c78bbda299a8a5204116b31d8ec9f2c862d6ee5" translate="yes" xml:space="preserve">
          <source>Converts the argument to an &lt;code&gt;int&lt;/code&gt; by an unsigned conversion. In an unsigned conversion to an &lt;code&gt;int&lt;/code&gt;, the high-order 24 bits of the &lt;code&gt;int&lt;/code&gt; are zero and the low-order 8 bits are equal to the bits of the &lt;code&gt;byte&lt;/code&gt; argument. Consequently, zero and positive &lt;code&gt;byte&lt;/code&gt; values are mapped to a numerically equal &lt;code&gt;int&lt;/code&gt; value and negative &lt;code&gt;byte&lt;/code&gt; values are mapped to an &lt;code&gt;int&lt;/code&gt; value equal to the input plus 2&lt;sup&gt;8&lt;/sup&gt;.</source>
          <target state="translated">부호없는 변환에 의해 인수를 &lt;code&gt;int&lt;/code&gt; 로 변환합니다. 내지 An 부호 전환 &lt;code&gt;int&lt;/code&gt; 상기의 상위 24 비트 &lt;code&gt;int&lt;/code&gt; 제로이며, 하위 8 비트는 비트의 동일한 &lt;code&gt;byte&lt;/code&gt; 인수. 결과적으로 0과 양의 &lt;code&gt;byte&lt;/code&gt; 값은 숫자 적으로 동일한 &lt;code&gt;int&lt;/code&gt; 값에 매핑 되고 음의 &lt;code&gt;byte&lt;/code&gt; 값은 입력에 2를 더한 &lt;code&gt;int&lt;/code&gt; 값에 매핑됩니다 2 &lt;sup&gt;8&lt;/sup&gt; .</target>
        </trans-unit>
        <trans-unit id="2650524da03e35c576fba303704d18ec92719b41" translate="yes" xml:space="preserve">
          <source>Converts the buffer's contents into a string by decoding the bytes using the named &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;. The length of the new &lt;code&gt;String&lt;/code&gt; is a function of the charset, and hence may not be equal to the length of the byte array.</source>
          <target state="translated">명명 된 &lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; 을&lt;/a&gt; 사용하여 바이트를 디코딩하여 버퍼의 내용을 문자열로 변환합니다 . 새 &lt;code&gt;String&lt;/code&gt; 의 길이 문자 집합의 함수이므로 바이트 배열의 길이와 같지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="546962ad13987783846473e67a26197161f90b6a" translate="yes" xml:space="preserve">
          <source>Converts the buffer's contents into a string decoding bytes using the platform's default character set. The length of the new &lt;code&gt;String&lt;/code&gt; is a function of the character set, and hence may not be equal to the size of the buffer.</source>
          <target state="translated">플랫폼의 기본 문자 집합을 사용하여 버퍼 내용을 문자열 디코딩 바이트로 변환합니다. 새 &lt;code&gt;String&lt;/code&gt; 의 길이는 문자 집합의 함수이므로 버퍼 크기와 같지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7226626a6ab73690f92996e3a6532d5ed6231eb8" translate="yes" xml:space="preserve">
          <source>Converts the character (Unicode code point) argument to lowercase using case mapping information from the UnicodeData file.</source>
          <target state="translated">UnicodeData 파일의 대소 문자 매핑 정보를 사용하여 문자 (유니 코드 코드 포인트) 인수를 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="5f0178c4e768de72629845305b7b8c2cb3441fa7" translate="yes" xml:space="preserve">
          <source>Converts the character (Unicode code point) argument to titlecase using case mapping information from the UnicodeData file. If a character has no explicit titlecase mapping and is not itself a titlecase char according to UnicodeData, then the uppercase mapping is returned as an equivalent titlecase mapping. If the character argument is already a titlecase character, the same character value will be returned.</source>
          <target state="translated">UnicodeData 파일의 대소 문자 맵핑 정보를 사용하여 문자 (유니 코드 코드 포인트) 인수를 제목 케이스로 변환합니다. 문자에 명시적인 제목 케이스 맵핑이없고 UnicodeData에 따라 제목 케이스 문자가 아닌 경우 대문자 맵핑은 동등한 제목 케이스 맵핑으로 리턴됩니다. 문자 인수가 이미 타이틀 케이스 문자 인 경우 동일한 문자 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="74a99a64f5a9e2869666ad7f23588d10fa636906" translate="yes" xml:space="preserve">
          <source>Converts the character (Unicode code point) argument to uppercase using case mapping information from the UnicodeData file.</source>
          <target state="translated">UnicodeData 파일의 대소 문자 매핑 정보를 사용하여 문자 (유니 코드 코드 포인트) 인수를 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="60b17e973793b77b1be863a417cac6223d6fe2dc" translate="yes" xml:space="preserve">
          <source>Converts the character argument to lowercase using case mapping information from the UnicodeData file.</source>
          <target state="translated">UnicodeData 파일의 대소 문자 매핑 정보를 사용하여 문자 인수를 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="855327fdd23b615c65a11c5acca5928475a00bb4" translate="yes" xml:space="preserve">
          <source>Converts the character argument to titlecase using case mapping information from the UnicodeData file. If a character has no explicit titlecase mapping and is not itself a titlecase char according to UnicodeData, then the uppercase mapping is returned as an equivalent titlecase mapping. If the &lt;code&gt;char&lt;/code&gt; argument is already a titlecase &lt;code&gt;char&lt;/code&gt;, the same &lt;code&gt;char&lt;/code&gt; value will be returned.</source>
          <target state="translated">UnicodeData 파일의 대소 문자 맵핑 정보를 사용하여 문자 인수를 제목 케이스로 변환합니다. 문자에 명시적인 제목 케이스 맵핑이없고 UnicodeData에 따라 제목 케이스 문자가 아닌 경우 대문자 맵핑은 동등한 제목 케이스 맵핑으로 리턴됩니다. 경우 &lt;code&gt;char&lt;/code&gt; 인수는 이미 타이틀 케이스입니다 &lt;code&gt;char&lt;/code&gt; , 같은 &lt;code&gt;char&lt;/code&gt; 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e41d12609bd02797155d104b01968a822d8f1229" translate="yes" xml:space="preserve">
          <source>Converts the character argument to uppercase using case mapping information from the UnicodeData file.</source>
          <target state="translated">UnicodeData 파일의 대소 문자 매핑 정보를 사용하여 문자 인수를 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="296389f80975bbf770839bd6e4c6eb5a709e57be" translate="yes" xml:space="preserve">
          <source>Converts the current calendar field values in &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;fields[]&lt;/code&gt;&lt;/a&gt; to the millisecond time value &lt;a href=&quot;calendar#time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;fields[]&lt;/code&gt; &lt;/a&gt; 의 현재 달력 필드 값을 밀리 초 시간 값 &lt;a href=&quot;calendar#time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 으로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6f076fa3053a811af1d59866ab4672afa8844ffe" translate="yes" xml:space="preserve">
          <source>Converts the current millisecond time value &lt;a href=&quot;calendar#time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; to calendar field values in &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;fields[]&lt;/code&gt;&lt;/a&gt;. This allows you to sync up the calendar field values with a new time that is set for the calendar. The time is &lt;em&gt;not&lt;/em&gt; recomputed first; to recompute the time, then the fields, call the &lt;a href=&quot;calendar#complete--&quot;&gt;&lt;code&gt;complete()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">현재 밀리 초 시간 값 &lt;a href=&quot;calendar#time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;fields[]&lt;/code&gt; &lt;/a&gt; 달력 필드 값으로 변환합니다 . 그러면 캘린더 필드 값을 캘린더에 설정된 새로운 시간과 동기화 할 수 있습니다. 시간은 먼저 다시 계산 &lt;em&gt;되지 않습니다&lt;/em&gt; . 시간을 재 계산하려면 필드를 &lt;a href=&quot;calendar#complete--&quot;&gt; &lt;code&gt;complete()&lt;/code&gt; &lt;/a&gt; 한 다음 complete () 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="0539001c91402191b6de92f17658c4b8c62af913" translate="yes" xml:space="preserve">
          <source>Converts the double argument to a &lt;code&gt;long&lt;/code&gt; using the &lt;code&gt;doubleToLongBits&lt;/code&gt; method in class &lt;code&gt;Double&lt;/code&gt;, and then writes that &lt;code&gt;long&lt;/code&gt; value to the file as an eight-byte quantity, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; 클래스 의 &lt;code&gt;doubleToLongBits&lt;/code&gt; 메서드를 사용하여 double 인수를 &lt;code&gt;long&lt;/code&gt; 으로 변환 한 다음 해당 &lt;code&gt;long&lt;/code&gt; 값을 8 바이트 수량의 상위 바이트부터 파일에 씁니다 . 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="3752b31cd76c3623a8878bd07d3a9e0ee5582574" translate="yes" xml:space="preserve">
          <source>Converts the double argument to a &lt;code&gt;long&lt;/code&gt; using the &lt;code&gt;doubleToLongBits&lt;/code&gt; method in class &lt;code&gt;Double&lt;/code&gt;, and then writes that &lt;code&gt;long&lt;/code&gt; value to the underlying output stream as an 8-byte quantity, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; 클래스 의 &lt;code&gt;doubleToLongBits&lt;/code&gt; 메서드를 사용하여 double 인수를 &lt;code&gt;long&lt;/code&gt; 으로 변환 한 다음 해당 &lt;code&gt;long&lt;/code&gt; 값을 8 바이트 수량의 상위 바이트부터 기본 출력 스트림에 씁니다 . 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;8&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="cdf8b94735d8e1fd3fe13e68420f824332671d03" translate="yes" xml:space="preserve">
          <source>Converts the float argument to an &lt;code&gt;int&lt;/code&gt; using the &lt;code&gt;floatToIntBits&lt;/code&gt; method in class &lt;code&gt;Float&lt;/code&gt;, and then writes that &lt;code&gt;int&lt;/code&gt; value to the file as a four-byte quantity, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 클래스 의 &lt;code&gt;floatToIntBits&lt;/code&gt; 메서드를 사용하여 float 인수를 &lt;code&gt;int&lt;/code&gt; 로 변환 한 다음 해당 &lt;code&gt;int&lt;/code&gt; 값을 4 바이트 수량의 상위 바이트부터 파일에 씁니다 . 쓰기는 파일 포인터의 현재 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="4eeec30483e4ccf1ca51cd6e8d83eea9324f1a6a" translate="yes" xml:space="preserve">
          <source>Converts the float argument to an &lt;code&gt;int&lt;/code&gt; using the &lt;code&gt;floatToIntBits&lt;/code&gt; method in class &lt;code&gt;Float&lt;/code&gt;, and then writes that &lt;code&gt;int&lt;/code&gt; value to the underlying output stream as a 4-byte quantity, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 클래스 의 &lt;code&gt;floatToIntBits&lt;/code&gt; 메서드를 사용하여 float 인수를 &lt;code&gt;int&lt;/code&gt; 로 변환 한 다음 해당 &lt;code&gt;int&lt;/code&gt; 값을 4 바이트 수량의 높은 바이트부터 기본 출력 스트림에 씁니다 . 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 &lt;code&gt;4&lt;/code&gt; 씩 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="564d9d964d862324557652a16c20d3eca876b004" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;baseName&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; to the bundle name. This method is called from the default implementation of the &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;newBundle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt;&lt;code&gt;needsReload&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">지정된 &lt;code&gt;baseName&lt;/code&gt; 및 &lt;code&gt;locale&lt;/code&gt; 을 번들 이름으로 변환합니다 . 이 메소드는 &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt; &lt;code&gt;newBundle&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt; &lt;code&gt;needsReload&lt;/code&gt; &lt;/a&gt; 메소드 의 기본 구현에서 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="10bbc0e258abe18c9ae6c81fd11a3650abdcbe96" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;bundleName&lt;/code&gt; to the form required by the &lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getResource&lt;/code&gt;&lt;/a&gt; method by replacing all occurrences of &lt;code&gt;'.'&lt;/code&gt; in &lt;code&gt;bundleName&lt;/code&gt; with &lt;code&gt;'/'&lt;/code&gt; and appending a &lt;code&gt;'.'&lt;/code&gt; and the given file &lt;code&gt;suffix&lt;/code&gt;. For example, if &lt;code&gt;bundleName&lt;/code&gt; is &lt;code&gt;&quot;foo.bar.MyResources_ja_JP&quot;&lt;/code&gt; and &lt;code&gt;suffix&lt;/code&gt; is &lt;code&gt;&quot;properties&quot;&lt;/code&gt;, then &lt;code&gt;&quot;foo/bar/MyResources_ja_JP.properties&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">발생하는 모든 &lt;code&gt;'.'&lt;/code&gt; 를 바꾸어 지정된 &lt;code&gt;bundleName&lt;/code&gt; 을 &lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getResource&lt;/code&gt; &lt;/a&gt; 메소드에 필요한 양식으로 변환합니다 . 의 &lt;code&gt;bundleName&lt;/code&gt; 와 &lt;code&gt;'/'&lt;/code&gt; 와 추기 &lt;code&gt;'.'&lt;/code&gt; 그리고 주어진 파일 &lt;code&gt;suffix&lt;/code&gt; . 예를 들어 &lt;code&gt;bundleName&lt;/code&gt; 이 &lt;code&gt;&quot;foo.bar.MyResources_ja_JP&quot;&lt;/code&gt; 이고 &lt;code&gt;suffix&lt;/code&gt; 가 &lt;code&gt;&quot;properties&quot;&lt;/code&gt; 이면 &lt;code&gt;&quot;foo/bar/MyResources_ja_JP.properties&quot;&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="15293ce87c77174bff4415d284229b578712b5b0" translate="yes" xml:space="preserve">
          <source>Converts the given URI to a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">지정된 URI를 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 객체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="838be88aed34c671f9cce3a74df0da3cd7a4182f" translate="yes" xml:space="preserve">
          <source>Converts the given time duration in the given unit to this unit. Conversions from finer to coarser granularities truncate, so lose precision. For example, converting &lt;code&gt;999&lt;/code&gt; milliseconds to seconds results in &lt;code&gt;0&lt;/code&gt;. Conversions from coarser to finer granularities with arguments that would numerically overflow saturate to &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; if negative or &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; if positive.</source>
          <target state="translated">주어진 단위의 주어진 시간을이 단위로 변환합니다. 미세한 입자에서 거친 입자로의 변환은 잘 리므로 정밀도가 떨어집니다. 예를 들어, &lt;code&gt;999&lt;/code&gt; 밀리 초를 초로 변환 하면 &lt;code&gt;0&lt;/code&gt; 이 됩니다. 음수이면 &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; , 양수 이면 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; 로 포화되는 인수를 사용하여 더 세밀한 단위로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="5383111059cb1a2d094b26bad100ea4c68fdda12" translate="yes" xml:space="preserve">
          <source>Converts the object to a string. The string representation is the string &quot;class&quot; or &quot;interface&quot;, followed by a space, and then by the fully qualified name of the class in the format returned by &lt;code&gt;getName&lt;/code&gt;. If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type, this method returns the name of the primitive type. If this &lt;code&gt;Class&lt;/code&gt; object represents void this method returns &quot;void&quot;.</source>
          <target state="translated">객체를 문자열로 변환합니다. 문자열 표현은 문자열 &quot;class&quot;또는 &quot;interface&quot;다음에 공백이오고 &lt;code&gt;getName&lt;/code&gt; 이 리턴 한 형식으로 클래스의 완전한 이름이 뒤에옵니다 . 이 &lt;code&gt;Class&lt;/code&gt; 객체가 원시 형을 나타내는 경우 ,이 메소드는 원시 형의 이름을 돌려줍니다. 이 &lt;code&gt;Class&lt;/code&gt; 객체가 void를 나타내는 경우,이 메소드는 &quot;void&quot;를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="4f6585b85571782490e1dcf1842f6bc0542c9891" translate="yes" xml:space="preserve">
          <source>Converts the output to upper case according to the rules of the &lt;a href=&quot;locale&quot;&gt;locale&lt;/a&gt; given during creation of the &lt;code&gt;formatter&lt;/code&gt; argument of the &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt;&lt;code&gt;formatTo()&lt;/code&gt;&lt;/a&gt; method. The output should be equivalent the following invocation of &lt;a href=&quot;../lang/string#toUpperCase-java.util.Locale-&quot;&gt;&lt;code&gt;String.toUpperCase(java.util.Locale)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt; &lt;code&gt;formatTo()&lt;/code&gt; &lt;/a&gt; 메소드 의 &lt;code&gt;formatter&lt;/code&gt; 인수 작성 중 제공된 &lt;a href=&quot;locale&quot;&gt;로케일&lt;/a&gt; 규칙에 따라 출력을 대문자로 변환합니다 . 출력은 다음 &lt;a href=&quot;../lang/string#toUpperCase-java.util.Locale-&quot;&gt; &lt;code&gt;String.toUpperCase(java.util.Locale)&lt;/code&gt; &lt;/a&gt; 호출과 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="842ac4983b50777b5a39a97adbc74dcaa1ecea9a" translate="yes" xml:space="preserve">
          <source>Converts the specified character (Unicode code point) to its UTF-16 representation stored in a &lt;code&gt;char&lt;/code&gt; array. If the specified code point is a BMP (Basic Multilingual Plane or Plane 0) value, the resulting &lt;code&gt;char&lt;/code&gt; array has the same value as &lt;code&gt;codePoint&lt;/code&gt;. If the specified code point is a supplementary code point, the resulting &lt;code&gt;char&lt;/code&gt; array has the corresponding surrogate pair.</source>
          <target state="translated">지정된 문자 (유니 코드 코드 포인트)를 &lt;code&gt;char&lt;/code&gt; 배열에 저장된 UTF-16 표현으로 변환합니다 . 지정된 코드 포인트가 BMP (Basic Multilingual Plane 또는 Plane 0) 값인 경우 결과 &lt;code&gt;char&lt;/code&gt; 배열의 값은 &lt;code&gt;codePoint&lt;/code&gt; 와 같습니다 . 지정된 코드 포인트가 보충 코드 포인트 인 경우 결과 &lt;code&gt;char&lt;/code&gt; 배열에는 해당 대리 쌍이 있습니다.</target>
        </trans-unit>
        <trans-unit id="052f4b40500ed86c1f30d19fd2b5b692b4689f93" translate="yes" xml:space="preserve">
          <source>Converts the specified character (Unicode code point) to its UTF-16 representation. If the specified code point is a BMP (Basic Multilingual Plane or Plane 0) value, the same value is stored in &lt;code&gt;dst[dstIndex]&lt;/code&gt;, and 1 is returned. If the specified code point is a supplementary character, its surrogate values are stored in &lt;code&gt;dst[dstIndex]&lt;/code&gt; (high-surrogate) and &lt;code&gt;dst[dstIndex+1]&lt;/code&gt; (low-surrogate), and 2 is returned.</source>
          <target state="translated">지정된 문자 (유니 코드 코드 포인트)를 UTF-16 표현으로 변환합니다. 지정된 코드 포인트가 BMP (Basic Multilingual Plane 또는 Plane 0) 값인 경우 동일한 값이 &lt;code&gt;dst[dstIndex]&lt;/code&gt; 저장 되고 1이 리턴됩니다. 지정된 코드 포인트가 보충 문자 인 경우 해당 대리 값은 &lt;code&gt;dst[dstIndex]&lt;/code&gt; (높은 대리) 및 &lt;code&gt;dst[dstIndex+1]&lt;/code&gt; (낮은 대리)에 저장되고 2가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b8fee608ca86852374baeff742ce0fb61b69b149" translate="yes" xml:space="preserve">
          <source>Converts the specified local date-time to the local date-time actually seen on a wall clock.</source>
          <target state="translated">지정된 현지 날짜-시간을 벽시계에서 실제로 본 현지 날짜-시간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="9f254797c6b63436d3e5c20947cc8b57d9425d3c" translate="yes" xml:space="preserve">
          <source>Converts the specified surrogate pair to its supplementary code point value. This method does not validate the specified surrogate pair. The caller must validate it using &lt;a href=&quot;character#isSurrogatePair-char-char-&quot;&gt;&lt;code&gt;isSurrogatePair&lt;/code&gt;&lt;/a&gt; if necessary.</source>
          <target state="translated">지정된 대리 쌍을 보충 코드 포인트 값으로 변환합니다. 이 방법은 지정된 대리 쌍을 확인하지 않습니다. 필요한 경우 호출자는 &lt;a href=&quot;character#isSurrogatePair-char-char-&quot;&gt; &lt;code&gt;isSurrogatePair&lt;/code&gt; 를&lt;/a&gt; 사용하여 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cf45a96b0477e9af715392fc0bb15898a1b66454" translate="yes" xml:space="preserve">
          <source>Converts the time value (millisecond offset from the &lt;a href=&quot;calendar#Epoch&quot;&gt;Epoch&lt;/a&gt;) to calendar field values. The time is &lt;em&gt;not&lt;/em&gt; recomputed first; to recompute the time, then the fields, call the &lt;code&gt;complete&lt;/code&gt; method.</source>
          <target state="translated">시간 값 ( &lt;a href=&quot;calendar#Epoch&quot;&gt;Epoch&lt;/a&gt; 에서 밀리 초 오프셋 )을 달력 필드 값으로 변환합니다. 시간은 먼저 다시 계산 &lt;em&gt;되지 않습니다&lt;/em&gt; . 시간을 계산 한 다음 필드를 &lt;code&gt;complete&lt;/code&gt; 하려면 complete 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e7335ab3f24677d6ccad265eaeb62e48e2421ba" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;BigInteger&lt;/code&gt;, checking for lost information. An exception is thrown if this &lt;code&gt;BigDecimal&lt;/code&gt; has a nonzero fractional part.</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 을 &lt;code&gt;BigInteger&lt;/code&gt; 로 변환 해 , 정보의 유실을 확인합니다. 이 &lt;code&gt;BigDecimal&lt;/code&gt; 에 0이 아닌 소수 부분 이 있으면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="fd5f844157e79623d740e67e48c63041dbdf9cbc" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;BigInteger&lt;/code&gt;. This conversion is analogous to the</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 를 &lt;code&gt;BigInteger&lt;/code&gt; 로 변환합니다 . 이 변환은</target>
        </trans-unit>
        <trans-unit id="964350ed3bf4e9f9950baf696463ff585de26953" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;byte&lt;/code&gt;, checking for lost information. If this &lt;code&gt;BigDecimal&lt;/code&gt; has a nonzero fractional part or is out of the possible range for a &lt;code&gt;byte&lt;/code&gt; result then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 를 &lt;code&gt;byte&lt;/code&gt; 로 변환 해 , 정보의 유실을 확인합니다. 이 &lt;code&gt;BigDecimal&lt;/code&gt; 에 0이 아닌 소수 부분이 있거나 &lt;code&gt;byte&lt;/code&gt; 결과 의 가능한 범위를 벗어나면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cd2ce45998ec3a1fc4f4904c88a2b54bc4b7d281" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;double&lt;/code&gt;. This conversion is similar to the</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 를 &lt;code&gt;double&lt;/code&gt; 로 변환합니다 . 이 변환은</target>
        </trans-unit>
        <trans-unit id="2fac3daa338aea23938d2f38ba5b06749b463610" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;float&lt;/code&gt;. This conversion is similar to the</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 를 &lt;code&gt;float&lt;/code&gt; 로 변환합니다 . 이 변환은</target>
        </trans-unit>
        <trans-unit id="10f9098942a171c878e54510f3ba3e578f6d6d5d" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;long&lt;/code&gt;, checking for lost information. If this &lt;code&gt;BigDecimal&lt;/code&gt; has a nonzero fractional part or is out of the possible range for a &lt;code&gt;long&lt;/code&gt; result then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 을 &lt;code&gt;long&lt;/code&gt; 로 변환 해 정보의 유실을 확인합니다. 이 &lt;code&gt;BigDecimal&lt;/code&gt; 에 0이 아닌 소수 부분이 있거나 &lt;code&gt;long&lt;/code&gt; 결과 의 가능한 범위를 벗어나면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b3ff40d50c26b239a10392be3fbfa3dfb0cd7c53" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;long&lt;/code&gt;. This conversion is analogous to the</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 를 &lt;code&gt;long&lt;/code&gt; 로 변환합니다 . 이 변환은</target>
        </trans-unit>
        <trans-unit id="010f47e62f7b96b8fd8e3b62c9616eb9a892a38c" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;short&lt;/code&gt;, checking for lost information. If this &lt;code&gt;BigDecimal&lt;/code&gt; has a nonzero fractional part or is out of the possible range for a &lt;code&gt;short&lt;/code&gt; result then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 를 &lt;code&gt;short&lt;/code&gt; 로 변환 해 , 정보의 유실을 확인합니다. 이 &lt;code&gt;BigDecimal&lt;/code&gt; 에 0이 아닌 소수 부분이 있거나 &lt;code&gt;short&lt;/code&gt; 결과 의 가능한 범위를 벗어나면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="314ad7498a665f0fb9ac948ccac6216feec8c7f8" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to an &lt;code&gt;int&lt;/code&gt;, checking for lost information. If this &lt;code&gt;BigDecimal&lt;/code&gt; has a nonzero fractional part or is out of the possible range for an &lt;code&gt;int&lt;/code&gt; result then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 를 &lt;code&gt;int&lt;/code&gt; 로 변환 해 , 정보의 유실을 확인합니다. 이 &lt;code&gt;BigDecimal&lt;/code&gt; 가 0이 아닌 소수 부분을 가지거나 &lt;code&gt;int&lt;/code&gt; 결과 의 가능한 범위를 벗어나면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ec8823c3ec49cc11142907d4cb4222f92e67ea4" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to an &lt;code&gt;int&lt;/code&gt;. This conversion is analogous to the</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 를 &lt;code&gt;int&lt;/code&gt; 로 변환합니다 . 이 변환은</target>
        </trans-unit>
        <trans-unit id="2848716990aeffb78ef499623268c09ebe48737d" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigInteger&lt;/code&gt; to a &lt;code&gt;byte&lt;/code&gt;, checking for lost information. If the value of this &lt;code&gt;BigInteger&lt;/code&gt; is out of the range of the &lt;code&gt;byte&lt;/code&gt; type, then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 &lt;code&gt;BigInteger&lt;/code&gt; 를 &lt;code&gt;byte&lt;/code&gt; 로 변환 해 , 정보의 유실을 확인합니다. 이 &lt;code&gt;BigInteger&lt;/code&gt; 의 값이 &lt;code&gt;byte&lt;/code&gt; 유형 의 범위를 벗어나면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8e8f53ba11cf90ea8ba72674bd08c88aa2eb6651" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigInteger&lt;/code&gt; to a &lt;code&gt;long&lt;/code&gt;, checking for lost information. If the value of this &lt;code&gt;BigInteger&lt;/code&gt; is out of the range of the &lt;code&gt;long&lt;/code&gt; type, then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 &lt;code&gt;BigInteger&lt;/code&gt; 를 &lt;code&gt;long&lt;/code&gt; 로 변환 하여 손실 된 정보를 확인합니다. 이 &lt;code&gt;BigInteger&lt;/code&gt; 의 값이 &lt;code&gt;long&lt;/code&gt; 유형 의 범위를 벗어나면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9c41a0af3a580b825047dbefecd130d79a745077" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigInteger&lt;/code&gt; to a &lt;code&gt;short&lt;/code&gt;, checking for lost information. If the value of this &lt;code&gt;BigInteger&lt;/code&gt; is out of the range of the &lt;code&gt;short&lt;/code&gt; type, then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 &lt;code&gt;BigInteger&lt;/code&gt; 를 &lt;code&gt;short&lt;/code&gt; 로 변환 하여 손실 된 정보를 확인합니다. 이 &lt;code&gt;BigInteger&lt;/code&gt; 의 값이 &lt;code&gt;short&lt;/code&gt; 타입 의 범위를 벗어나면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="430859788122fd595c1878021f13ab9b74a6d8f1" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigInteger&lt;/code&gt; to an &lt;code&gt;int&lt;/code&gt;, checking for lost information. If the value of this &lt;code&gt;BigInteger&lt;/code&gt; is out of the range of the &lt;code&gt;int&lt;/code&gt; type, then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 &lt;code&gt;BigInteger&lt;/code&gt; 를 &lt;code&gt;int&lt;/code&gt; 로 변환 해 , 정보의 유실을 확인합니다. 이 &lt;code&gt;BigInteger&lt;/code&gt; 의 값이 &lt;code&gt;int&lt;/code&gt; 유형 의 범위를 벗어나면 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="db3b17302a790cac1c75e95c8e5696da0df198f2" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;Date&lt;/code&gt; object to a &lt;code&gt;String&lt;/code&gt; of the form:</source>
          <target state="translated">이 &lt;code&gt;Date&lt;/code&gt; 객체를 다음 형식 의 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9426c9abb7a5d8f53c108dfdc4599f4e6a38a6f4" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;Date&lt;/code&gt; object to an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Date&lt;/code&gt; 객체를 &lt;code&gt;Instant&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="723fee33732c570b871bdc3bf3024a92ed7dbaaf" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;DocFlavor&lt;/code&gt; to a string.</source>
          <target state="translated">이 &lt;code&gt;DocFlavor&lt;/code&gt; 를 캐릭터 라인으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="7fc7e32c48cbfbf24662096bca9b5b3664415cb9" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;FileTime&lt;/code&gt; object to an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;FileTime&lt;/code&gt; 객체를 &lt;code&gt;Instant&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f863e96c81d3cb62897a71e6076e0b84c00329bc" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;TimeZone&lt;/code&gt; object to a &lt;code&gt;ZoneId&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;TimeZone&lt;/code&gt; 객체를 &lt;code&gt;ZoneId&lt;/code&gt; 로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="fd6f23064d7e90413a42faea6ca710790488e1de" translate="yes" xml:space="preserve">
          <source>Converts this BigInteger to a &lt;code&gt;double&lt;/code&gt;. This conversion is similar to the</source>
          <target state="translated">이 BigInteger를 &lt;code&gt;double&lt;/code&gt; 로 변환합니다 . 이 변환은</target>
        </trans-unit>
        <trans-unit id="fb8d2efdef5e3b91b3660e1d5cf3ea65fa520de1" translate="yes" xml:space="preserve">
          <source>Converts this BigInteger to a &lt;code&gt;float&lt;/code&gt;. This conversion is similar to the</source>
          <target state="translated">이 BigInteger를 &lt;code&gt;float&lt;/code&gt; 로 변환합니다 . 이 변환은</target>
        </trans-unit>
        <trans-unit id="c69f48ac827092c4b0edd587be3827e8bd32a58a" translate="yes" xml:space="preserve">
          <source>Converts this BigInteger to a &lt;code&gt;long&lt;/code&gt;. This conversion is analogous to a</source>
          <target state="translated">이 BigInteger를 &lt;code&gt;long&lt;/code&gt; 로 변환합니다 . 이 변환은</target>
        </trans-unit>
        <trans-unit id="79b8915f0750b28670c58dd3d216aea0de0123a8" translate="yes" xml:space="preserve">
          <source>Converts this BigInteger to an &lt;code&gt;int&lt;/code&gt;. This conversion is analogous to a</source>
          <target state="translated">이 BigInteger를 &lt;code&gt;int&lt;/code&gt; 로 변환합니다 . 이 변환은</target>
        </trans-unit>
        <trans-unit id="847b3fef1c9beb9e572f76a60be26030d9972a4c" translate="yes" xml:space="preserve">
          <source>Converts this IP address to a &lt;code&gt;String&lt;/code&gt;. The string returned is of the form: hostname / literal IP address. If the host name is unresolved, no reverse name service lookup is performed. The hostname part will be represented by an empty string.</source>
          <target state="translated">이 IP 주소를 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 . 반환 된 문자열은 hostname / literal IP address 형식입니다. 호스트 이름이 확인되지 않으면 리버스 이름 서비스 조회가 수행되지 않습니다. 호스트 이름 부분은 빈 문자열로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="078fece09a321e309e5a9e39efc4c7f2fb2eaf72" translate="yes" xml:space="preserve">
          <source>Converts this Interface address to a &lt;code&gt;String&lt;/code&gt;. The string returned is of the form: InetAddress / prefix length [ broadcast address ].</source>
          <target state="translated">이 인터페이스 주소를 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 . 반환 된 문자열은 InetAddress / prefix length [broadcast address] 형식입니다.</target>
        </trans-unit>
        <trans-unit id="87c7ea68583b9279028dc2dc7fd15add8a29c188" translate="yes" xml:space="preserve">
          <source>Converts this abstract pathname into a &lt;code&gt;file:&lt;/code&gt; URL. The exact form of the URL is system-dependent. If it can be determined that the file denoted by this abstract pathname is a directory, then the resulting URL will end with a slash.</source>
          <target state="translated">이 추상 경로명을 &lt;code&gt;file:&lt;/code&gt; URL 로 변환합니다 . URL의 정확한 형식은 시스템에 따라 다릅니다. 이 추상 경로명으로 표시된 파일이 디렉토리 인 것으로 판별 될 경우 결과 URL은 슬래시로 끝납니다.</target>
        </trans-unit>
        <trans-unit id="b2285fa6d7b74f2ce358386864bca5db4af63f87" translate="yes" xml:space="preserve">
          <source>Converts this abstract pathname into a pathname string. The resulting string uses the &lt;a href=&quot;file#separator&quot;&gt;&lt;code&gt;default name-separator character&lt;/code&gt;&lt;/a&gt; to separate the names in the name sequence.</source>
          <target state="translated">이 추상 경로명을 경로명 문자열로 변환합니다. 결과 문자열은 &lt;a href=&quot;file#separator&quot;&gt; &lt;code&gt;default name-separator character&lt;/code&gt; &lt;/a&gt; 를 사용하여 이름 순서에서 이름을 구분합니다.</target>
        </trans-unit>
        <trans-unit id="817a83fb25ba192b6596a3859178b01c270f0728" translate="yes" xml:space="preserve">
          <source>Converts this date to the Epoch Day.</source>
          <target state="translated">이 날짜를 Epoch Day로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2a7141e822191037931feafc8884eb60c80a009e" translate="yes" xml:space="preserve">
          <source>Converts this date-time to a &lt;code&gt;ZonedDateTime&lt;/code&gt; using the offset as the zone ID.</source>
          <target state="translated">오프셋을 영역 ID로 사용 하여이 날짜-시간을 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c09dd1197723bad8df24c6676d17f8d955275cc3" translate="yes" xml:space="preserve">
          <source>Converts this date-time to an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">이 날짜-시간을 &lt;code&gt;Instant&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6cc71bc814ce0400890f48b8099bcb2111106c09" translate="yes" xml:space="preserve">
          <source>Converts this date-time to an &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">이 날짜-시간을 &lt;code&gt;OffsetDateTime&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="be91df241b45189c920bf429d75d383746480e57" translate="yes" xml:space="preserve">
          <source>Converts this date-time to an &lt;code&gt;OffsetTime&lt;/code&gt;.</source>
          <target state="translated">이 날짜-시간을 &lt;code&gt;OffsetTime&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b55943e3914432b568fbec04b0a9b7df034eb012" translate="yes" xml:space="preserve">
          <source>Converts this date-time to the number of seconds from the epoch of 1970-01-01T00:00:00Z.</source>
          <target state="translated">이 날짜-시간을 1970-01-01T00 : 00 : 00Z의 에포크에서 초 단위로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="9391cbaa46ee0a932eee5977244ed87307865858" translate="yes" xml:space="preserve">
          <source>Converts this duration to the total length in milliseconds.</source>
          <target state="translated">이 지속 시간을 총 길이 (밀리 초)로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2cd793d32f3d7e14b7f7223ba22bf7a8aee91efe" translate="yes" xml:space="preserve">
          <source>Converts this duration to the total length in nanoseconds expressed as a &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">이 지속 시간을 &lt;code&gt;long&lt;/code&gt; 으로 표현 된 총 길이 (나노초)로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4fd3e98710a9886b9e7b69907ef019734ebf5b91" translate="yes" xml:space="preserve">
          <source>Converts this instant to the number of milliseconds from the epoch of 1970-01-01T00:00:00Z.</source>
          <target state="translated">이 순간을 1970-01-01T00 : 00 : 00Z의 신기원에서 밀리 초 수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="7aef32e882e2c55bbf07fd077ea8bd4a9ff0b62e" translate="yes" xml:space="preserve">
          <source>Converts this object to a &lt;code&gt;ZonedDateTime&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">이 객체를 타임 라인에서이 &lt;code&gt;GregorianCalendar&lt;/code&gt; 와 동일한 지점을 나타내는 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="eb9f85cfdfb059793a8140988ec56ea7c1cabcab" translate="yes" xml:space="preserve">
          <source>Converts this object to an &lt;a href=&quot;../time/instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 객체를 &lt;a href=&quot;../time/instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; 로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2df7536f08994783c27860b48e7ef66b278dd986" translate="yes" xml:space="preserve">
          <source>Converts this socket to a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">이 소켓을 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a78f2f437d2ce9b1467ad841014ef4092af4aefd" translate="yes" xml:space="preserve">
          <source>Converts this string to a new character array.</source>
          <target state="translated">이 캐릭터 라인을 새로운 문자형 배열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="3e05e31f5f06af89e7bcab183520c2ebd9cfe780" translate="yes" xml:space="preserve">
          <source>CookieHandler</source>
          <target state="translated">CookieHandler</target>
        </trans-unit>
        <trans-unit id="da60863ae945c790482c38a94df28f63fb1def4f" translate="yes" xml:space="preserve">
          <source>CookieHandler is at the core of cookie management. User can call CookieHandler.setDefault to set a concrete CookieHanlder implementation to be used.</source>
          <target state="translated">CookieHandler는 쿠키 관리의 핵심입니다. 사용자는 CookieHandler.setDefault를 호출하여 사용할 구체적인 CookieHanlder 구현을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="488d84f7381e3300ab98ec753c6e5487de45e1f2" translate="yes" xml:space="preserve">
          <source>CookieHandler.get()</source>
          <target state="translated">CookieHandler.get()</target>
        </trans-unit>
        <trans-unit id="7df3b2bcf3ee700a3f529cf673121355315915b8" translate="yes" xml:space="preserve">
          <source>CookieHandler.getDefault()</source>
          <target state="translated">CookieHandler.getDefault()</target>
        </trans-unit>
        <trans-unit id="cdc53f6760e045d2fd018bb5b46ab30c6ea2ef65" translate="yes" xml:space="preserve">
          <source>CookieHandler.put()</source>
          <target state="translated">CookieHandler.put()</target>
        </trans-unit>
        <trans-unit id="e7010a81211ae355e4b734277e207dc593960dae" translate="yes" xml:space="preserve">
          <source>CookieHandler.setDefault()</source>
          <target state="translated">CookieHandler.setDefault()</target>
        </trans-unit>
        <trans-unit id="88b926654c86edd70ca09473195675c927655d72" translate="yes" xml:space="preserve">
          <source>CookieManager</source>
          <target state="translated">CookieManager</target>
        </trans-unit>
        <trans-unit id="6e9713c9401cc9927c260aaf90e0dca066e1ccb9" translate="yes" xml:space="preserve">
          <source>CookieManager provides a concrete implementation of &lt;a href=&quot;cookiehandler&quot;&gt;&lt;code&gt;CookieHandler&lt;/code&gt;&lt;/a&gt;, which separates the storage of cookies from the policy surrounding accepting and rejecting cookies.</source>
          <target state="translated">CookieManager는 &lt;a href=&quot;cookiehandler&quot;&gt; &lt;code&gt;CookieHandler&lt;/code&gt; &lt;/a&gt; 의 구체적 구현을 ​​제공 합니다. 쿠키 처리기는 쿠키 수용 및 거부와 관련된 정책과 쿠키 스토리지를 분리합니다.</target>
        </trans-unit>
        <trans-unit id="0ea574011be3727210e6103388df76f66996153c" translate="yes" xml:space="preserve">
          <source>CookieManager provides a concrete implementation of &lt;a href=&quot;cookiehandler&quot;&gt;&lt;code&gt;CookieHandler&lt;/code&gt;&lt;/a&gt;, which separates the storage of cookies from the policy surrounding accepting and rejecting cookies. A CookieManager is initialized with a &lt;a href=&quot;cookiestore&quot;&gt;&lt;code&gt;CookieStore&lt;/code&gt;&lt;/a&gt; which manages storage, and a &lt;a href=&quot;cookiepolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; object, which makes policy decisions on cookie acceptance/rejection.</source>
          <target state="translated">CookieManager는 &lt;a href=&quot;cookiehandler&quot;&gt; &lt;code&gt;CookieHandler&lt;/code&gt; &lt;/a&gt; 의 구체적 구현을 ​​제공 합니다. 쿠키 처리기는 쿠키 수용 및 거부와 관련된 정책과 쿠키 스토리지를 분리합니다. CookieManager는 스토리지를 관리 하는 &lt;a href=&quot;cookiestore&quot;&gt; &lt;code&gt;CookieStore&lt;/code&gt; &lt;/a&gt; 와 쿠키 수락 / 거부에 대한 정책 결정을 하는 &lt;a href=&quot;cookiepolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt; 객체 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="7fa73d79c3a93518b1086e1a17261f9e44541ce4" translate="yes" xml:space="preserve">
          <source>CookieManager.get()</source>
          <target state="translated">CookieManager.get()</target>
        </trans-unit>
        <trans-unit id="1153b0b9965e3bef7e089c4556428bcd017695ad" translate="yes" xml:space="preserve">
          <source>CookieManager.getCookieStore()</source>
          <target state="translated">CookieManager.getCookieStore()</target>
        </trans-unit>
        <trans-unit id="ae3527b89477e844b0496a8d996e1bb304444f94" translate="yes" xml:space="preserve">
          <source>CookieManager.put()</source>
          <target state="translated">CookieManager.put()</target>
        </trans-unit>
        <trans-unit id="4f2b75d290a69ab85b3bc00c3fd610a8d0492ce8" translate="yes" xml:space="preserve">
          <source>CookieManager.setCookiePolicy()</source>
          <target state="translated">CookieManager.setCookiePolicy()</target>
        </trans-unit>
        <trans-unit id="63414c2e9f06a57e078f733891b31b1d79632b49" translate="yes" xml:space="preserve">
          <source>CookiePolicy</source>
          <target state="translated">CookiePolicy</target>
        </trans-unit>
        <trans-unit id="59d711726a5fabace31e9fa0bd2ea0e47eb47027" translate="yes" xml:space="preserve">
          <source>CookiePolicy implementations decide which cookies should be accepted and which should be rejected.</source>
          <target state="translated">CookiePolicy 구현은 어떤 쿠키를 허용하고 어떤 쿠키를 거부해야하는지 결정합니다.</target>
        </trans-unit>
        <trans-unit id="8c86a56dfb07446ee20517cf4b39b867dcace8fa" translate="yes" xml:space="preserve">
          <source>CookiePolicy implementations decide which cookies should be accepted and which should be rejected. Three pre-defined policy implementations are provided, namely ACCEPT_ALL, ACCEPT_NONE and ACCEPT_ORIGINAL_SERVER.</source>
          <target state="translated">CookiePolicy 구현은 어떤 쿠키를 허용하고 어떤 쿠키를 거부해야하는지 결정합니다. ACCEPT_ALL, ACCEPT_NONE 및 ACCEPT_ORIGINAL_SERVER의 세 가지 사전 정의 된 정책 구현이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9963f34f7d1abbc0f65b6f471f1198cf08abc9ac" translate="yes" xml:space="preserve">
          <source>CookiePolicy.shouldAccept will be called by CookieManager.put to see whether or not one cookie should be accepted and put into cookie store. User can use any of three pre-defined CookiePolicy, namely ACCEPT_ALL, ACCEPT_NONE and ACCEPT_ORIGINAL_SERVER, or user can define his own CookiePolicy implementation and tell CookieManager to use it.</source>
          <target state="translated">CookiePolicy.shouldAccept는 CookieManager.put에 의해 호출되어 하나의 쿠키가 수락되어 쿠키 저장소에 저장되어야하는지 여부를 확인합니다. 사용자는 세 가지 사전 정의 된 CookiePolicy (ACCEPT_ALL, ACCEPT_NONE 및 ACCEPT_ORIGINAL_SERVER) 중 하나를 사용하거나 자신의 CookiePolicy 구현을 정의하고 CookieManager에게이를 사용하도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e19ce439eb327be9e87ea7a5736f71eebf7e4bf9" translate="yes" xml:space="preserve">
          <source>CookiePolicy.shouldAccept()</source>
          <target state="translated">CookiePolicy.shouldAccept()</target>
        </trans-unit>
        <trans-unit id="276b3e8038df17c6140b4554202d64698b0e8514" translate="yes" xml:space="preserve">
          <source>CookieStore</source>
          <target state="translated">CookieStore</target>
        </trans-unit>
        <trans-unit id="e6b59dbedf6bdf6d8ec47561e0e280aa6472008a" translate="yes" xml:space="preserve">
          <source>CookieStore is the place where any accepted HTTP cookie is stored in. If not specified when created, a CookieManager instance will use an internal in-memory implementation. Or user can implements one and tell CookieManager to use it.</source>
          <target state="translated">CookieStore는 승인 된 HTTP 쿠키가 저장되는 장소입니다. 생성시 지정하지 않으면 CookieManager 인스턴스는 내부 메모리 내 구현을 사용합니다. 또는 사용자가 하나를 구현하고 CookieManager에이를 사용하도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57a87bf124b45854e93a77723f7f51815c562f07" translate="yes" xml:space="preserve">
          <source>CookieStore.add()</source>
          <target state="translated">CookieStore.add()</target>
        </trans-unit>
        <trans-unit id="7a8cd1230c949240728e16b3834740330f313b0b" translate="yes" xml:space="preserve">
          <source>CookieStore.get()</source>
          <target state="translated">CookieStore.get()</target>
        </trans-unit>
        <trans-unit id="1ce1a7d31c246b49c7582894fb806872b2a236e2" translate="yes" xml:space="preserve">
          <source>CookieStore.getCookies()</source>
          <target state="translated">CookieStore.getCookies()</target>
        </trans-unit>
        <trans-unit id="51a063c2ec07ac9ce183e27434b3215b39314776" translate="yes" xml:space="preserve">
          <source>CookieStore.getURIs()</source>
          <target state="translated">CookieStore.getURIs()</target>
        </trans-unit>
        <trans-unit id="87b0b1c349b6fe6ff8268f0b927042bb8a0a5914" translate="yes" xml:space="preserve">
          <source>CookieStore.remove()</source>
          <target state="translated">CookieStore.remove()</target>
        </trans-unit>
        <trans-unit id="d3138b4cabdf9fc9b199be36661b9c4bfe138f2f" translate="yes" xml:space="preserve">
          <source>CookieStore.removeAll()</source>
          <target state="translated">CookieStore.removeAll()</target>
        </trans-unit>
        <trans-unit id="58d744ee4c8e624609f2dc12ad716e0da28c0ab7" translate="yes" xml:space="preserve">
          <source>Copies</source>
          <target state="translated">Copies</target>
        </trans-unit>
        <trans-unit id="03de7525524b9ccc3a65585a71d3cb81fb338208" translate="yes" xml:space="preserve">
          <source>Copies all bytes from a file to an output stream.</source>
          <target state="translated">파일에서 출력 스트림으로 모든 바이트를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="e3f72c9ebfd49b215548c0ddbf55376818b28904" translate="yes" xml:space="preserve">
          <source>Copies all bytes from an input stream to a file. On return, the input stream will be at end of stream.</source>
          <target state="translated">입력 스트림의 모든 바이트를 파일로 복사합니다. 돌아 왔을 때, 입력 스트림은 스트림의 끝이됩니다.</target>
        </trans-unit>
        <trans-unit id="4c4a1d81e8029e53259ef9dc43eef38a22e042ef" translate="yes" xml:space="preserve">
          <source>Copies all of the attribute name-value mappings from the specified Attributes to this Map. Duplicate mappings will be replaced.</source>
          <target state="translated">지정된 속성에서이 속성으로 모든 속성 이름-값 매핑을 복사합니다. 중복 매핑이 교체됩니다.</target>
        </trans-unit>
        <trans-unit id="6bd7a3dcc35821a8b99022bca13b123a3f08c2dd" translate="yes" xml:space="preserve">
          <source>Copies all of the elements from one list into another. After the operation, the index of each copied element in the destination list will be identical to its index in the source list. The destination list must be at least as long as the source list. If it is longer, the remaining elements in the destination list are unaffected.</source>
          <target state="translated">한 목록에서 다른 목록으로 모든 요소를 ​​복사합니다. 작업 후 대상 목록의 복사 된 각 요소의 색인은 소스 목록의 색인과 동일합니다. 대상 목록은 소스 목록보다 길어야합니다. 더 길면 대상 목록의 나머지 요소는 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f91f76d1d3df10141c7f06bdee8770abd14e7547" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified Map to this provider. These mappings will replace any properties that this provider had for any of the keys currently in the specified Map.</source>
          <target state="translated">지정된 맵에서이 제공자로 모든 맵핑을 복사합니다. 이러한 매핑은이 공급자가 현재 지정된 맵에있는 키에 대해 가진 모든 속성을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="819243f5f54b1035ebf390fc9ec8ae6f371fbd3f" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified map to this hashtable. These mappings will replace any mappings that this hashtable had for any of the keys currently in the specified map.</source>
          <target state="translated">지정된 맵에서이 해시 테이블로 모든 맵핑을 복사합니다. 이러한 매핑은이 해시 테이블이 현재 지정된 맵에있는 모든 키에 대해 가지고있는 모든 매핑을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="272711ea3c3c3caef56e04f33d8e7d9ceda611b9" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified map to this map (optional operation). The effect of this call is equivalent to that of calling &lt;a href=&quot;map#put-K-V-&quot;&gt;&lt;code&gt;put(k, v)&lt;/code&gt;&lt;/a&gt; on this map once for each mapping from key &lt;code&gt;k&lt;/code&gt; to value &lt;code&gt;v&lt;/code&gt; in the specified map. The behavior of this operation is undefined if the specified map is modified while the operation is in progress.</source>
          <target state="translated">지정된 맵에서이 맵으로 모든 맵핑을 복사합니다 (선택적 조작). 이 호출의 효과 는 지정된 맵의 키 &lt;code&gt;k&lt;/code&gt; 에서 값 &lt;code&gt;v&lt;/code&gt; 로의 각 맵핑에 대해이 맵에서 &lt;a href=&quot;map#put-K-V-&quot;&gt; &lt;code&gt;put(k, v)&lt;/code&gt; &lt;/a&gt; 을 한 번 호출하는 것과 같습니다 . 작업이 진행되는 동안 지정된 맵을 수정하면이 작업의 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4bf2393905a049eeb2b33110fead24924f95ff94" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified map to this map. These mappings replace any mappings that this map had for any of the keys currently in the specified map.</source>
          <target state="translated">지정된 맵에서이 맵으로 모든 맵핑을 복사합니다. 이 맵핑은 현재 지정된 맵에있는 키에 대해이 맵에있는 모든 맵핑을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="245e7438e72523173ab78708154847987d1e04ea" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified map to this map. These mappings will replace any mappings that this map had for any of the keys currently in the specified map.</source>
          <target state="translated">지정된 맵에서이 맵으로 모든 맵핑을 복사합니다. 이러한 매핑은 현재 지정된 맵에있는 모든 키에 대해이 맵에 있던 모든 매핑을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="863cb16ae68a89a029e1f03e2733f5e1d3bfe398" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified map to this one. These mappings replace any mappings that this map had for any of the keys currently in the specified map.</source>
          <target state="translated">지정된 맵에서이 맵핑으로 모든 맵핑을 복사합니다. 이 맵핑은 현재 지정된 맵에있는 키에 대해이 맵에있는 모든 맵핑을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="a4d6dfc6f0ddff377f6b5527f26e21058f6ebdc6" translate="yes" xml:space="preserve">
          <source>Copies an array from the specified source array, beginning at the specified position, to the specified position of the destination array. A subsequence of array components are copied from the source array referenced by &lt;code&gt;src&lt;/code&gt; to the destination array referenced by &lt;code&gt;dest&lt;/code&gt;. The number of components copied is equal to the &lt;code&gt;length&lt;/code&gt; argument. The components at positions &lt;code&gt;srcPos&lt;/code&gt; through &lt;code&gt;srcPos+length-1&lt;/code&gt; in the source array are copied into positions &lt;code&gt;destPos&lt;/code&gt; through &lt;code&gt;destPos+length-1&lt;/code&gt;, respectively, of the destination array.</source>
          <target state="translated">지정된 위치에서 시작하여 지정된 소스 배열에서 대상 배열의 지정된 위치로 배열을 복사합니다. 배열 구성 요소의 하위 시퀀스는 &lt;code&gt;src&lt;/code&gt; 가 참조하는 소스 배열에서 &lt;code&gt;dest&lt;/code&gt; 가 참조하는 대상 배열 로 복사됩니다 . 복사 된 구성 요소의 수는 &lt;code&gt;length&lt;/code&gt; 인수와 같습니다. 포지션에서의 컴포넌트 &lt;code&gt;srcPos&lt;/code&gt; 통해 &lt;code&gt;srcPos+length-1&lt;/code&gt; 소스 배열은 포지션에 복사 &lt;code&gt;destPos&lt;/code&gt; 가 통해 &lt;code&gt;destPos+length-1&lt;/code&gt; 목적지 어레이, 각각.</target>
        </trans-unit>
        <trans-unit id="3756743240cb278243246711c35aad95e5efad44" translate="yes" xml:space="preserve">
          <source>Copies characters from this string into the destination byte array. Each byte receives the 8 low-order bits of the corresponding character. The eight high-order bits of each character are not copied and do not participate in the transfer in any way.</source>
          <target state="translated">이 문자열의 문자를 대상 바이트 배열로 복사합니다. 각 바이트는 해당 문자의 하위 8 비트를받습니다. 각 문자의 상위 8 비트 비트는 복사되지 않으며 어떤 식 으로든 전송에 참여하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4607877f582665487b7d8d954a443c2a1b726bd2" translate="yes" xml:space="preserve">
          <source>Copies characters from this string into the destination character array.</source>
          <target state="translated">이 문자열의 문자를 대상 문자 배열로 복사합니다.</target>
        </trans-unit>
        <trans-unit id="55f0cb06119b9fa4c4f1d4205c38b6dfd073e866" translate="yes" xml:space="preserve">
          <source>Copies into the specified array every active thread in the current thread's thread group and its subgroups. This method simply invokes the &lt;a href=&quot;threadgroup#enumerate-java.lang.Thread:A-&quot;&gt;&lt;code&gt;ThreadGroup.enumerate(Thread[])&lt;/code&gt;&lt;/a&gt; method of the current thread's thread group.</source>
          <target state="translated">현재 스레드의 스레드 그룹과 해당 하위 그룹에있는 모든 활성 스레드를 지정된 배열에 복사합니다. 이 메소드는 단순히 현재 스레드 스레드 그룹 의 &lt;a href=&quot;threadgroup#enumerate-java.lang.Thread:A-&quot;&gt; &lt;code&gt;ThreadGroup.enumerate(Thread[])&lt;/code&gt; &lt;/a&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="f9497f2125035387af7b1b8e2173b865f89ae560" translate="yes" xml:space="preserve">
          <source>Copies into the specified array every active thread in this thread group and its subgroups.</source>
          <target state="translated">이 스레드 그룹 및 해당 하위 그룹의 모든 활성 스레드를 지정된 배열에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="94117a2adf0dfe12c3cf4cbaf4d2dac62e3ac3a2" translate="yes" xml:space="preserve">
          <source>Copies into the specified array every active thread in this thread group. If &lt;code&gt;recurse&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, this method recursively enumerates all subgroups of this thread group and references to every active thread in these subgroups are also included. If the array is too short to hold all the threads, the extra threads are silently ignored.</source>
          <target state="translated">이 스레드 그룹의 모든 활성 스레드를 지정된 배열에 복사합니다. 경우 &lt;code&gt;recurse&lt;/code&gt; 있다 &lt;code&gt;true&lt;/code&gt; ,이 방법은 재귀 적으로이 thread 그룹이 하위 그룹에있는 모든 활성 스레드를 참조 모든 하위 그룹도 포함되어 있습니다 열거합니다. 배열이 모든 스레드를 보유하기에 너무 짧은 경우 추가 스레드는 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3af1b49cfd4438530b3066130ce22701dada8b9c" translate="yes" xml:space="preserve">
          <source>Copies into the specified array references to every active subgroup in this thread group and its subgroups.</source>
          <target state="translated">이 스레드 그룹 및 해당 하위 그룹의 모든 활성 하위 그룹에 지정된 배열 참조로 복사합니다.</target>
        </trans-unit>
        <trans-unit id="097bca6ed73fa3307348d2d12abbc93cb230a5ce" translate="yes" xml:space="preserve">
          <source>Copies into the specified array references to every active subgroup in this thread group. If &lt;code&gt;recurse&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, this method recursively enumerates all subgroups of this thread group and references to every active thread group in these subgroups are also included.</source>
          <target state="translated">이 스레드 그룹의 모든 활성 하위 그룹에 지정된 배열 참조로 복사합니다. 경우 &lt;code&gt;recurse&lt;/code&gt; 있다 &lt;code&gt;true&lt;/code&gt; ,이 방법은 재귀 적으로이 하위 그룹에있는 모든 활성 스레드 그룹이 스레드 그룹과 참조의 모든 하위 그룹도 포함되어 있습니다 열거합니다.</target>
        </trans-unit>
        <trans-unit id="ad8ba26cd3de553d653c61eea59970c318099825" translate="yes" xml:space="preserve">
          <source>Copies the components of this vector into the specified array. The item at index &lt;code&gt;k&lt;/code&gt; in this vector is copied into component &lt;code&gt;k&lt;/code&gt; of &lt;code&gt;anArray&lt;/code&gt;.</source>
          <target state="translated">이 벡터의 구성 요소를 지정된 배열로 복사합니다. 이 벡터의 인덱스 &lt;code&gt;k&lt;/code&gt; 에 있는 항목 은 &lt;code&gt;anArray&lt;/code&gt; 의 구성 요소 &lt;code&gt;k&lt;/code&gt; 에 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="85850586b65d0c104ac5b96edc729bc8274cdacb" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with &lt;code&gt;false&lt;/code&gt; (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;false&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array.</source>
          <target state="translated">복사가 지정된 길이를 갖도록 지정된 배열을 잘라내거나 &lt;code&gt;false&lt;/code&gt; (필요한 경우)로 채 웁니다. 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;false&lt;/code&gt; 가 포함 됩니다. 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="2b0353ee1a72ab5cc1b30c1ce2ad83616848b721" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with null characters (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;'\\u000'&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array.</source>
          <target state="translated">지정된 배열을 복사하여 널 문자 (필요한 경우)로 잘라내거나 채워서 사본의 길이가 지정되도록합니다. 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;'\\u000'&lt;/code&gt; 이 포함됩니다 . 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="e295a28a9cefdfc83d27e4c65703ef46e8612142" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with nulls (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;null&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array. The resulting array is of exactly the same class as the original array.</source>
          <target state="translated">사본이 지정된 길이를 갖도록 지정된 배열을 복사하거나 널 (필요한 경우)로 채워서 복사합니다. 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;null&lt;/code&gt; 이 포함 됩니다. 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다. 결과 배열은 원래 배열과 정확히 같은 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="e1c358e449aa37c49606e5fc9968679cc240ae3c" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with nulls (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;null&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array. The resulting array is of the class &lt;code&gt;newType&lt;/code&gt;.</source>
          <target state="translated">사본이 지정된 길이를 갖도록 지정된 배열을 복사하거나 널 (필요한 경우)로 채워서 복사합니다. 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;null&lt;/code&gt; 이 포함 됩니다. 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다. 결과 배열은 클래스 &lt;code&gt;newType&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fc57af580227bd7b2889614b0a5ef96e98d30c4e" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;(byte)0&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array.</source>
          <target state="translated">사본이 지정된 길이를 갖도록 지정된 배열을 잘라내거나 0으로 채 웁니다 (필요한 경우). 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;(byte)0&lt;/code&gt; 이 포함됩니다 . 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="a8e3d076949ca64dce5ab4d88bfd69d51f5b54c2" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;(short)0&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array.</source>
          <target state="translated">사본이 지정된 길이를 갖도록 지정된 배열을 잘라내거나 0으로 채 웁니다 (필요한 경우). 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;(short)0&lt;/code&gt; 이 포함됩니다 . 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="39199c76b4867923548f9828d9ab71ebbf8e4be1" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;0&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array.</source>
          <target state="translated">사본이 지정된 길이를 갖도록 지정된 배열을 잘라내거나 0으로 채 웁니다 (필요한 경우). 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;0&lt;/code&gt; 이 포함 됩니다. 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="097c9049d684f1849e0603f3687cb90ef2863960" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;0L&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array.</source>
          <target state="translated">사본이 지정된 길이를 갖도록 지정된 배열을 잘라내거나 0으로 채 웁니다 (필요한 경우). 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;0L&lt;/code&gt; 이 포함 됩니다. 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="3503986c0a75493a674d6de187a845c23dd5bd9b" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;0d&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array.</source>
          <target state="translated">사본이 지정된 길이를 갖도록 지정된 배열을 잘라내거나 0으로 채 웁니다 (필요한 경우). 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;0d&lt;/code&gt; 가 포함 됩니다. 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="2a7755a5ab0ea1d319b80792c8f69ce391a3b35f" translate="yes" xml:space="preserve">
          <source>Copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain &lt;code&gt;0f&lt;/code&gt;. Such indices will exist if and only if the specified length is greater than that of the original array.</source>
          <target state="translated">사본이 지정된 길이를 갖도록 지정된 배열을 잘라내거나 0으로 채 웁니다 (필요한 경우). 원본 배열과 복사본 모두에 유효한 모든 인덱스의 경우 두 배열에 동일한 값이 포함됩니다. 사본에서 유효하지만 원본에서는 유효하지 않은 색인의 경우 사본에는 &lt;code&gt;0f&lt;/code&gt; 가 포함 됩니다. 이러한 길이는 지정된 길이가 원래 배열의 길이보다 큰 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="9c8032ea0ef4531027d1153e461ec6ddb8a73e65" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;'\\u000'&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; ( 보다 크거나 같아야하는) 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 색인은 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 &lt;code&gt;'\\u000'&lt;/code&gt; 은 색인보다 크거나 같은 사본의 모든 요소에 배치됩니다. 동일 &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2a0b7cf46dfbcd3c43e17754b55c1401eb1b7b1" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;(byte)0&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; 보다 크거나 같아야 하는 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 인덱스는 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 &lt;code&gt;(byte)0&lt;/code&gt; 은 인덱스가 크거나 같은 사본의 모든 요소에 배치됩니다. 에 &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c871ba7419cb70dc7cbab761a2a25d812ba823cc" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;(short)0&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; 보다 크거나 같아야 하는 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 인덱스는 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 &lt;code&gt;(short)0&lt;/code&gt; 은 인덱스가 크거나 같은 사본의 모든 요소에 배치됩니다. 에 &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1997e9be6723b48afc8f3ce856113317902d15a1" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;0&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; ( 보다 크거나 같아야하는) 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 인덱스는 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 인덱스가 크거나 같은 복사본의 모든 요소에 &lt;code&gt;0&lt;/code&gt; 이 배치됩니다. &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4fbd1f2169a8029d7ed107fb550db665dd07837" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;0L&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; ( 보다 크거나 같아야하는) 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 인덱스는 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 &lt;code&gt;0L&lt;/code&gt; 은 인덱스가 크거나 같은 복사본의 모든 요소에 배치됩니다. &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81d7f6e6db63f90e5dc9ad26e2779f169dd5d824" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;0d&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; ( 보다 크거나 같아야하는) 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 인덱스는 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 &lt;code&gt;0d&lt;/code&gt; 는 인덱스가 크거나 같은 복사본의 모든 요소에 배치됩니다. &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11a578a23605a95df6617db39dc4d89e8dfd2f34" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;0f&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; 보다 크거나 같아야 하는 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 인덱스는 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 &lt;code&gt;0f&lt;/code&gt; 는 인덱스가 크거나 같은 복사본의 모든 요소에 배치됩니다. &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="607a37f7d6ba5a542ec0a4c21743a1f6ca76164e" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;false&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; ( 보다 크거나 같아야하는) 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 색인은 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 색인이 색인보다 크거나 같은 사본의 모든 요소에 &lt;code&gt;false&lt;/code&gt; 가 배치됩니다. &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7afd092bdf1e1c59c90d254e151edf89120ec9be" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;null&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; ( 보다 크거나 같아야하는) 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 인덱스는 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 인덱스가 크거나 같은 복사본의 모든 요소에 &lt;code&gt;null&lt;/code&gt; 이 배치됩니다. &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33ed8446dc28ec987672b327002b2fd87049a3a8" translate="yes" xml:space="preserve">
          <source>Copies the specified range of the specified array into a new array. The initial index of the range (&lt;code&gt;from&lt;/code&gt;) must lie between zero and &lt;code&gt;original.length&lt;/code&gt;, inclusive. The value at &lt;code&gt;original[from]&lt;/code&gt; is placed into the initial element of the copy (unless &lt;code&gt;from == original.length&lt;/code&gt; or &lt;code&gt;from == to&lt;/code&gt;). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (&lt;code&gt;to&lt;/code&gt;), which must be greater than or equal to &lt;code&gt;from&lt;/code&gt;, may be greater than &lt;code&gt;original.length&lt;/code&gt;, in which case &lt;code&gt;null&lt;/code&gt; is placed in all elements of the copy whose index is greater than or equal to &lt;code&gt;original.length - from&lt;/code&gt;. The length of the returned array will be &lt;code&gt;to - from&lt;/code&gt;. The resulting array is of the class &lt;code&gt;newType&lt;/code&gt;.</source>
          <target state="translated">지정된 배열의 지정된 범위를 새 배열로 복사합니다. ( &lt;code&gt;from&lt;/code&gt; ) 범위의 초기 색인은 0에서 &lt;code&gt;original.length&lt;/code&gt; 사이 여야 합니다. &lt;code&gt;original[from]&lt;/code&gt; 의 값 은 사본의 초기 요소에 배치됩니다 ( &lt;code&gt;from == original.length&lt;/code&gt; 또는 &lt;code&gt;from == to&lt;/code&gt; ). 원래 배열의 후속 요소 값은 사본의 후속 요소에 배치됩니다. &lt;code&gt;from&lt;/code&gt; ( 보다 크거나 같아야하는) 범위 ( &lt;code&gt;to&lt;/code&gt; ) 의 최종 인덱스는 &lt;code&gt;original.length&lt;/code&gt; 보다 클 수 있습니다 .이 경우 인덱스가 크거나 같은 복사본의 모든 요소에 &lt;code&gt;null&lt;/code&gt; 이 배치됩니다. &lt;code&gt;original.length - from&lt;/code&gt; . 반환 된 배열의 길이는 시작부터 끝까지 &lt;code&gt;to - from&lt;/code&gt; . 결과 배열은 클래스 &lt;code&gt;newType&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fdf5a9aff0a6bb4aec9aa7c2ea32363b987f8cbc" translate="yes" xml:space="preserve">
          <source>Copies.equals()</source>
          <target state="translated">Copies.equals()</target>
        </trans-unit>
        <trans-unit id="97ccf686bab4a76e3d80f522bf2c150236ad6507" translate="yes" xml:space="preserve">
          <source>Copies.getCategory()</source>
          <target state="translated">Copies.getCategory()</target>
        </trans-unit>
        <trans-unit id="dfb40361152816dc03f0803650d8d5c75ae3c83b" translate="yes" xml:space="preserve">
          <source>Copies.getName()</source>
          <target state="translated">Copies.getName()</target>
        </trans-unit>
        <trans-unit id="21545425a1c4391a4f8e296052fb10db7cdab61d" translate="yes" xml:space="preserve">
          <source>CopiesSupported</source>
          <target state="translated">CopiesSupported</target>
        </trans-unit>
        <trans-unit id="4ccaae5cbb2cde1fd60f5cbdad50016cf1e9e8b1" translate="yes" xml:space="preserve">
          <source>CopiesSupported.equals()</source>
          <target state="translated">CopiesSupported.equals()</target>
        </trans-unit>
        <trans-unit id="b4b5029348db47b4a5d66b7be547e032208b4fb3" translate="yes" xml:space="preserve">
          <source>CopiesSupported.getCategory()</source>
          <target state="translated">CopiesSupported.getCategory()</target>
        </trans-unit>
        <trans-unit id="b8b85eaa748b5b28e4098c111e0ce4f9ce6485de" translate="yes" xml:space="preserve">
          <source>CopiesSupported.getName()</source>
          <target state="translated">CopiesSupported.getName()</target>
        </trans-unit>
        <trans-unit id="d536ea3b43de2069660ceb4ae268be7fdd716eef" translate="yes" xml:space="preserve">
          <source>Copy a file to a target file.</source>
          <target state="translated">파일을 대상 파일로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="ce27ea8e287361e1f8d39a0f5f648db801e97025" translate="yes" xml:space="preserve">
          <source>Copy a file to a target file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#copy-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt;&lt;code&gt;Files.copy(Path,Path,CopyOption[])&lt;/code&gt;&lt;/a&gt; method except that both the source and target paths must be associated with this provider.</source>
          <target state="translated">파일을 대상 파일로 복사하십시오. 이 메소드 는 소스 및 대상 경로가이 제공자와 연관되어야한다는 점을 제외하고 &lt;a href=&quot;../files#copy-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt; &lt;code&gt;Files.copy(Path,Path,CopyOption[])&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 정확하게 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="f28510dabb61d9b8ce4665c2e272d1a3ebba3de3" translate="yes" xml:space="preserve">
          <source>Copy attributes to the new file.</source>
          <target state="translated">새 파일에 속성을 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="be3d5eee5f662fb4404c9f7b2c65e3b2b5c9fcca" translate="yes" xml:space="preserve">
          <source>Copy constructor.</source>
          <target state="translated">생성자를 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="511d81be74f7f7f26885834acccbb12285e9f492" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList</source>
          <target state="translated">CopyOnWriteArrayList</target>
        </trans-unit>
        <trans-unit id="172ac877a0390c5fc29286e27df0ade009583427" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.add()</source>
          <target state="translated">CopyOnWriteArrayList.add()</target>
        </trans-unit>
        <trans-unit id="47f0e068ff15950377a3cb504b89cd8fa6ba2aac" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.addAll()</source>
          <target state="translated">CopyOnWriteArrayList.addAll()</target>
        </trans-unit>
        <trans-unit id="2fec17b3571df4d344868dfd325a40c7e5c49c17" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.addAllAbsent()</source>
          <target state="translated">CopyOnWriteArrayList.addAllAbsent()</target>
        </trans-unit>
        <trans-unit id="730f250a14164d009850178905e2a920a6252139" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.addIfAbsent()</source>
          <target state="translated">CopyOnWriteArrayList.addIfAbsent()</target>
        </trans-unit>
        <trans-unit id="608a68d1764ef25d923acee56d9ae5cdd4074128" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.clear()</source>
          <target state="translated">CopyOnWriteArrayList.clear()</target>
        </trans-unit>
        <trans-unit id="76c329466cf61302133759b8db92bd4724c7a584" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.clone()</source>
          <target state="translated">CopyOnWriteArrayList.clone()</target>
        </trans-unit>
        <trans-unit id="1fa39a57626e16c343db67d63e236be704f28d64" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.contains()</source>
          <target state="translated">CopyOnWriteArrayList.contains()</target>
        </trans-unit>
        <trans-unit id="1548e6aedaa505a8cf09513611332f1bf68b123d" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.containsAll()</source>
          <target state="translated">CopyOnWriteArrayList.containsAll()</target>
        </trans-unit>
        <trans-unit id="6ad1a42a441038ad7b288b903f7c25544e923fa9" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.equals()</source>
          <target state="translated">CopyOnWriteArrayList.equals()</target>
        </trans-unit>
        <trans-unit id="7f928b42f995e0676501e65d162823fc3a5cc31b" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.forEach()</source>
          <target state="translated">CopyOnWriteArrayList.forEach()</target>
        </trans-unit>
        <trans-unit id="cef1e21e08a2ad587aebba0cd736e0cb2b06377f" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.get()</source>
          <target state="translated">CopyOnWriteArrayList.get()</target>
        </trans-unit>
        <trans-unit id="1cb886866a3ee2f548b7e7e2e5108a979dba28b5" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.hashCode()</source>
          <target state="translated">CopyOnWriteArrayList.hashCode()</target>
        </trans-unit>
        <trans-unit id="eeefb29b79ed194a322d01e89bd3e16b77328e4c" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.indexOf()</source>
          <target state="translated">CopyOnWriteArrayList.indexOf()</target>
        </trans-unit>
        <trans-unit id="bd0c20e4d03051332b45a7d66121eec4aacdfe83" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.isEmpty()</source>
          <target state="translated">CopyOnWriteArrayList.isEmpty()</target>
        </trans-unit>
        <trans-unit id="da8d75fd045935846d0eb6531b54c55e6bd6bce4" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.iterator()</source>
          <target state="translated">CopyOnWriteArrayList.iterator()</target>
        </trans-unit>
        <trans-unit id="3ee9936f69d29df0e82600cb7e5b2513da2b5bf6" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.lastIndexOf()</source>
          <target state="translated">CopyOnWriteArrayList.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="159f0409eb86429b7fcd44cbf1ae4c6c618cbd58" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.listIterator()</source>
          <target state="translated">CopyOnWriteArrayList.listIterator()</target>
        </trans-unit>
        <trans-unit id="e50dd9df115c68ab68a12991dcdf8565800ba3f0" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.remove()</source>
          <target state="translated">CopyOnWriteArrayList.remove()</target>
        </trans-unit>
        <trans-unit id="be8d9697f610494878298f330335a5b86d9a2215" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.removeAll()</source>
          <target state="translated">CopyOnWriteArrayList.removeAll()</target>
        </trans-unit>
        <trans-unit id="47316c960a9900d4f877d5ec2e9ce44034b391d4" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.removeIf()</source>
          <target state="translated">CopyOnWriteArrayList.removeIf()</target>
        </trans-unit>
        <trans-unit id="6b32a42553a683aca0606d8eeeb557ff18045be8" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.replaceAll()</source>
          <target state="translated">CopyOnWriteArrayList.replaceAll()</target>
        </trans-unit>
        <trans-unit id="4e0daf994555cd6a3df9a8b1da334c490f337972" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.retainAll()</source>
          <target state="translated">CopyOnWriteArrayList.retainAll()</target>
        </trans-unit>
        <trans-unit id="d8072c4b0513dc3044cd9a9dcd8ef9f0a1bb0ae7" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.set()</source>
          <target state="translated">CopyOnWriteArrayList.set()</target>
        </trans-unit>
        <trans-unit id="03870ed541164f09473583bef188ebb66497be41" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.size()</source>
          <target state="translated">CopyOnWriteArrayList.size()</target>
        </trans-unit>
        <trans-unit id="9cb0b4b398fce646aaf7713a9b380fda12b9184d" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.sort()</source>
          <target state="translated">CopyOnWriteArrayList.sort()</target>
        </trans-unit>
        <trans-unit id="6e96283d11ca0be6fbc2a2f09b33056c2dd0b122" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.spliterator()</source>
          <target state="translated">CopyOnWriteArrayList.spliterator()</target>
        </trans-unit>
        <trans-unit id="5b7fce814afb710c02418420f3cde810abf9216e" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.subList()</source>
          <target state="translated">CopyOnWriteArrayList.subList()</target>
        </trans-unit>
        <trans-unit id="e24ee5532705cbe6f142611d0368fe9c015050a9" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.toArray()</source>
          <target state="translated">CopyOnWriteArrayList.toArray()</target>
        </trans-unit>
        <trans-unit id="3e3a5d011ea8a1791baa57e10e43c5d51fc78827" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArrayList.toString()</source>
          <target state="translated">CopyOnWriteArrayList.toString()</target>
        </trans-unit>
        <trans-unit id="aeed5b741c059090ed923a02b0a7ce79e61b8fed" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet</source>
          <target state="translated">CopyOnWriteArraySet</target>
        </trans-unit>
        <trans-unit id="0dc4354297e1f4cee4b8b2b22386ff68d9df4487" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.add()</source>
          <target state="translated">CopyOnWriteArraySet.add()</target>
        </trans-unit>
        <trans-unit id="288d02f15b1e5d3e1f9811d78ff6f020ad3d7902" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.addAll()</source>
          <target state="translated">CopyOnWriteArraySet.addAll()</target>
        </trans-unit>
        <trans-unit id="127c3800ab0445b14f49ad036085c655d86aeb26" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.clear()</source>
          <target state="translated">CopyOnWriteArraySet.clear()</target>
        </trans-unit>
        <trans-unit id="efffb4a7380bcfc64aa817fd2b52293210350110" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.contains()</source>
          <target state="translated">CopyOnWriteArraySet.contains()</target>
        </trans-unit>
        <trans-unit id="4cc4d49cf709ba426b08b12a794ee2d77402fb5b" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.containsAll()</source>
          <target state="translated">CopyOnWriteArraySet.containsAll()</target>
        </trans-unit>
        <trans-unit id="0c29fc46665be2f4f2db06f285cf4cd3c01a2f17" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.equals()</source>
          <target state="translated">CopyOnWriteArraySet.equals()</target>
        </trans-unit>
        <trans-unit id="d9b9f040f7fc7fa844533233b76b80eef1abc346" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.forEach()</source>
          <target state="translated">CopyOnWriteArraySet.forEach()</target>
        </trans-unit>
        <trans-unit id="69a3e971ada6d2895050d3e1c848b94243b2cecf" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.isEmpty()</source>
          <target state="translated">CopyOnWriteArraySet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="40a69892b49f9fe79e29f981901cc00aaded280a" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.iterator()</source>
          <target state="translated">CopyOnWriteArraySet.iterator()</target>
        </trans-unit>
        <trans-unit id="4e4f025f5e3dce0473ebdaf61963f33ac590487a" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.remove()</source>
          <target state="translated">CopyOnWriteArraySet.remove()</target>
        </trans-unit>
        <trans-unit id="46b1a7aa27e732383246960e8f6e4e3def214579" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.removeAll()</source>
          <target state="translated">CopyOnWriteArraySet.removeAll()</target>
        </trans-unit>
        <trans-unit id="341d53a514d7b15dd17108e39af31d3504db5e90" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.removeIf()</source>
          <target state="translated">CopyOnWriteArraySet.removeIf()</target>
        </trans-unit>
        <trans-unit id="71288cd8ed25df17ee8014c3bf5dbe83e859b313" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.retainAll()</source>
          <target state="translated">CopyOnWriteArraySet.retainAll()</target>
        </trans-unit>
        <trans-unit id="d76e732fc2853c7692c9853caa9e3b49eb8e4cb6" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.size()</source>
          <target state="translated">CopyOnWriteArraySet.size()</target>
        </trans-unit>
        <trans-unit id="1d4f684dc3b244446054ff1865e20daf6377f720" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.spliterator()</source>
          <target state="translated">CopyOnWriteArraySet.spliterator()</target>
        </trans-unit>
        <trans-unit id="7ed2c9fe047daa967bd4798cef2cfd9b76c23568" translate="yes" xml:space="preserve">
          <source>CopyOnWriteArraySet.toArray()</source>
          <target state="translated">CopyOnWriteArraySet.toArray()</target>
        </trans-unit>
        <trans-unit id="8f2136fe74ee83c730bd1615afbb1434b7673863" translate="yes" xml:space="preserve">
          <source>CopyOption</source>
          <target state="translated">CopyOption</target>
        </trans-unit>
        <trans-unit id="0820b5bf4d542741d9626cf5674451527e4f9f09" translate="yes" xml:space="preserve">
          <source>Copying a file is not an atomic operation. If an &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; is thrown, then it is possible that the target file is incomplete or some of its file attributes have not been copied from the source file. When the &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; option is specified and the target file exists, then the target file is replaced. The check for the existence of the file and the creation of the new file may not be atomic with respect to other file system activities.</source>
          <target state="translated">파일 복사는 원 자성 작업이 아닙니다. 경우 &lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; 이가&lt;/a&gt; 발생합니다, 대상 파일이 불완전하거나 파일 특성 중 일부는 소스 파일에서 복사되지 않은 가능성이 있습니다. 때 &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; 의 옵션을 지정하고 대상 파일이 존재하고, 다음 대상 파일이 대체됩니다. 파일 존재 여부 확인 및 새 파일 작성은 다른 파일 시스템 활동과 관련하여 원 자성이 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7d4633aee4ae518d76dd4da88a61209afcf13cc" translate="yes" xml:space="preserve">
          <source>Core and maximum pool sizes</source>
          <target state="translated">코어 및 최대 풀 크기</target>
        </trans-unit>
        <trans-unit id="db4996f9ae9c29330c3412f9761e1b9fdc3379ae" translate="yes" xml:space="preserve">
          <source>Corresponding methods are defined for the types &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt;. The index parameters of the absolute</source>
          <target state="translated">해당 메소드는 &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; 및 &lt;code&gt;double&lt;/code&gt; 유형에 대해 정의됩니다 . 절대의 인덱스 매개 변수</target>
        </trans-unit>
        <trans-unit id="c4883bbc7fe95329ff64d8824281b98a2eb7e505" translate="yes" xml:space="preserve">
          <source>Corresponding to each &lt;code&gt;Timer&lt;/code&gt; object is a single background thread that is used to execute all of the timer's tasks, sequentially. Timer tasks should complete quickly. If a timer task takes excessive time to complete, it &quot;hogs&quot; the timer's task execution thread. This can, in turn, delay the execution of subsequent tasks, which may &quot;bunch up&quot; and execute in rapid succession when (and if) the offending task finally completes.</source>
          <target state="translated">각 &lt;code&gt;Timer&lt;/code&gt; 객체에 해당하는 모든 타이머 작업을 순차적으로 실행하는 데 사용되는 단일 백그라운드 스레드입니다. 타이머 작업이 빠르게 완료되어야합니다. 타이머 작업을 완료하는 데 시간이 오래 걸리면 타이머 작업 실행 스레드를 &quot;호그&quot;합니다. 결과적으로 후속 작업의 실행이 지연 될 수 있으며, 이로 인해 문제가 발생한 작업이 마지막으로 완료 될 때 &quot;집중&quot;하고 빠르게 연속적으로 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14c37dc95cc3eb45775f7eed32930da9d30ca9c3" translate="yes" xml:space="preserve">
          <source>CountDownLatch</source>
          <target state="translated">CountDownLatch</target>
        </trans-unit>
        <trans-unit id="665adbb091105dad179b2dae27ec3fbcc6f37ff9" translate="yes" xml:space="preserve">
          <source>CountDownLatch.await()</source>
          <target state="translated">CountDownLatch.await()</target>
        </trans-unit>
        <trans-unit id="f1cc061016c8af407cc3ddd658f42404d7af6947" translate="yes" xml:space="preserve">
          <source>CountDownLatch.countDown()</source>
          <target state="translated">CountDownLatch.countDown()</target>
        </trans-unit>
        <trans-unit id="f734068b8539c0ceb2ea4cf715b3bd1184875c06" translate="yes" xml:space="preserve">
          <source>CountDownLatch.getCount()</source>
          <target state="translated">CountDownLatch.getCount()</target>
        </trans-unit>
        <trans-unit id="ff4a9b8caa1428e9f0cc430beed991c7c6043970" translate="yes" xml:space="preserve">
          <source>CountDownLatch.toString()</source>
          <target state="translated">CountDownLatch.toString()</target>
        </trans-unit>
        <trans-unit id="9bcf68d544830f482b0e3cdd380f70e79e73b0a5" translate="yes" xml:space="preserve">
          <source>CountedCompleter</source>
          <target state="translated">CountedCompleter</target>
        </trans-unit>
        <trans-unit id="9b55e1039db0ea2e5909f881130220105ac44416" translate="yes" xml:space="preserve">
          <source>CountedCompleter.addToPendingCount()</source>
          <target state="translated">CountedCompleter.addToPendingCount()</target>
        </trans-unit>
        <trans-unit id="f2f03ba7ca9799e94b7f2f0dd7063634bdba41a8" translate="yes" xml:space="preserve">
          <source>CountedCompleter.compareAndSetPendingCount()</source>
          <target state="translated">CountedCompleter.compareAndSetPendingCount()</target>
        </trans-unit>
        <trans-unit id="6f7f4bb9202621817a0009f3c6c3a1abb1486e98" translate="yes" xml:space="preserve">
          <source>CountedCompleter.complete()</source>
          <target state="translated">CountedCompleter.complete()</target>
        </trans-unit>
        <trans-unit id="536f4bf9bf5a2971f43ac37e56edb2994311804a" translate="yes" xml:space="preserve">
          <source>CountedCompleter.compute()</source>
          <target state="translated">CountedCompleter.compute()</target>
        </trans-unit>
        <trans-unit id="e9a4a601cba805bee40a892a82ef2516e04be2ee" translate="yes" xml:space="preserve">
          <source>CountedCompleter.decrementPendingCountUnlessZero()</source>
          <target state="translated">CountedCompleter.decrementPendingCountUnlessZero()</target>
        </trans-unit>
        <trans-unit id="9910440af93476ca9c6768edc2d99f0f0e7db5d0" translate="yes" xml:space="preserve">
          <source>CountedCompleter.exec()</source>
          <target state="translated">CountedCompleter.exec()</target>
        </trans-unit>
        <trans-unit id="4dc692edad0bf4579729cdf03154317465bee7ba" translate="yes" xml:space="preserve">
          <source>CountedCompleter.firstComplete()</source>
          <target state="translated">CountedCompleter.firstComplete()</target>
        </trans-unit>
        <trans-unit id="fc93e723a35078ff00ca893b841229c53d99a1d3" translate="yes" xml:space="preserve">
          <source>CountedCompleter.getCompleter()</source>
          <target state="translated">CountedCompleter.getCompleter()</target>
        </trans-unit>
        <trans-unit id="a5fa0ec04e16d9d2940abecdb6ee0ec0ed9f1e44" translate="yes" xml:space="preserve">
          <source>CountedCompleter.getPendingCount()</source>
          <target state="translated">CountedCompleter.getPendingCount()</target>
        </trans-unit>
        <trans-unit id="ea06fd12bda5521cfe67a80fb67792198037397b" translate="yes" xml:space="preserve">
          <source>CountedCompleter.getRawResult()</source>
          <target state="translated">CountedCompleter.getRawResult()</target>
        </trans-unit>
        <trans-unit id="5c7b2288cc6c4f798c9462f5894d042b34f86326" translate="yes" xml:space="preserve">
          <source>CountedCompleter.getRoot()</source>
          <target state="translated">CountedCompleter.getRoot()</target>
        </trans-unit>
        <trans-unit id="3770d775cd54ede2432ef4a547fa02fec714f86a" translate="yes" xml:space="preserve">
          <source>CountedCompleter.helpComplete()</source>
          <target state="translated">CountedCompleter.helpComplete()</target>
        </trans-unit>
        <trans-unit id="3efce4011f1cd0e2b4670ba59cd259aa4035d3f0" translate="yes" xml:space="preserve">
          <source>CountedCompleter.nextComplete()</source>
          <target state="translated">CountedCompleter.nextComplete()</target>
        </trans-unit>
        <trans-unit id="bb81e89f36ff0976bde495c1ba08e8956007b3f9" translate="yes" xml:space="preserve">
          <source>CountedCompleter.onCompletion()</source>
          <target state="translated">CountedCompleter.onCompletion()</target>
        </trans-unit>
        <trans-unit id="129a7d91772ec5a65832f20c1e41cc9a7745c79a" translate="yes" xml:space="preserve">
          <source>CountedCompleter.onExceptionalCompletion()</source>
          <target state="translated">CountedCompleter.onExceptionalCompletion()</target>
        </trans-unit>
        <trans-unit id="2e37557ced06af67119305ec647ee9c6c04897b7" translate="yes" xml:space="preserve">
          <source>CountedCompleter.propagateCompletion()</source>
          <target state="translated">CountedCompleter.propagateCompletion()</target>
        </trans-unit>
        <trans-unit id="b7bf188b159d190bd8924e93eaaaaa1cf9fbcb61" translate="yes" xml:space="preserve">
          <source>CountedCompleter.quietlyCompleteRoot()</source>
          <target state="translated">CountedCompleter.quietlyCompleteRoot()</target>
        </trans-unit>
        <trans-unit id="356ab6eb032dc6077bd9a4733d13d474ae7100b3" translate="yes" xml:space="preserve">
          <source>CountedCompleter.setPendingCount()</source>
          <target state="translated">CountedCompleter.setPendingCount()</target>
        </trans-unit>
        <trans-unit id="16c7ac67ec718791fe25d9229289de241b0ecd05" translate="yes" xml:space="preserve">
          <source>CountedCompleter.setRawResult()</source>
          <target state="translated">CountedCompleter.setRawResult()</target>
        </trans-unit>
        <trans-unit id="014dbae4b4942a619b3b860e337b2e934f03625e" translate="yes" xml:space="preserve">
          <source>CountedCompleter.tryComplete()</source>
          <target state="translated">CountedCompleter.tryComplete()</target>
        </trans-unit>
        <trans-unit id="db7948c8834593e3efaf2518d3b5ace03f6e53d8" translate="yes" xml:space="preserve">
          <source>CountedCompleters most often do not bear results, in which case they are normally declared as &lt;code&gt;CountedCompleter&amp;lt;Void&amp;gt;&lt;/code&gt;, and will always return &lt;code&gt;null&lt;/code&gt; as a result value. In other cases, you should override method &lt;a href=&quot;countedcompleter#getRawResult--&quot;&gt;&lt;code&gt;getRawResult()&lt;/code&gt;&lt;/a&gt; to provide a result from &lt;code&gt;join(), invoke()&lt;/code&gt;, and related methods. In general, this method should return the value of a field (or a function of one or more fields) of the CountedCompleter object that holds the result upon completion. Method &lt;a href=&quot;countedcompleter#setRawResult-T-&quot;&gt;&lt;code&gt;setRawResult(T)&lt;/code&gt;&lt;/a&gt; by default plays no role in CountedCompleters. It is possible, but rarely applicable, to override this method to maintain other objects or fields holding result data.</source>
          <target state="translated">CountedCompleters는 대개 결과를 나타내지 않으며,이 경우 일반적으로 &lt;code&gt;CountedCompleter&amp;lt;Void&amp;gt;&lt;/code&gt; 로 선언되며 항상 결과 값으로 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다. 다른 경우에는 &lt;a href=&quot;countedcompleter#getRawResult--&quot;&gt; &lt;code&gt;getRawResult()&lt;/code&gt; &lt;/a&gt; 메소드를 대체 하여 &lt;code&gt;join(), invoke()&lt;/code&gt; 및 관련 메소드 의 결과를 제공 해야 합니다. 일반적으로이 메소드는 완료시 결과를 보유하는 CountedCompleter 오브젝트의 필드 값 (또는 하나 이상의 필드 함수)을 리턴해야합니다. 기본적으로 &lt;a href=&quot;countedcompleter#setRawResult-T-&quot;&gt; &lt;code&gt;setRawResult(T)&lt;/code&gt; &lt;/a&gt; 메소드는 CountedCompleters 에서 역할을 수행하지 않습니다. 결과 데이터를 보유하는 다른 객체 또는 필드를 유지하기 위해이 방법을 재정의하는 것이 가능하지만 거의 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d79d5f3e1139e1e8141876eb230625a84892fa51" translate="yes" xml:space="preserve">
          <source>Counter monitors only:</source>
          <target state="translated">카운터 모니터 만 :</target>
        </trans-unit>
        <trans-unit id="2f75536c365d07976f4543dd0a0ff10cd5bfce4e" translate="yes" xml:space="preserve">
          <source>CounterMonitor</source>
          <target state="translated">CounterMonitor</target>
        </trans-unit>
        <trans-unit id="edf08e3bde7f46d77ab4a56d0f120f3fc0f9adb6" translate="yes" xml:space="preserve">
          <source>CounterMonitor.getDerivedGauge()</source>
          <target state="translated">CounterMonitor.getDerivedGauge()</target>
        </trans-unit>
        <trans-unit id="2fecc0101bf2530c0c9aa36f22e402a617771fb7" translate="yes" xml:space="preserve">
          <source>CounterMonitor.getDerivedGaugeTimeStamp()</source>
          <target state="translated">CounterMonitor.getDerivedGaugeTimeStamp()</target>
        </trans-unit>
        <trans-unit id="273e13beac648fd27dca0cee68bf7a307641d991" translate="yes" xml:space="preserve">
          <source>CounterMonitor.getDifferenceMode()</source>
          <target state="translated">CounterMonitor.getDifferenceMode()</target>
        </trans-unit>
        <trans-unit id="8617ba2198d4a6718c49b8ae5e67761e477e0873" translate="yes" xml:space="preserve">
          <source>CounterMonitor.getInitThreshold()</source>
          <target state="translated">CounterMonitor.getInitThreshold()</target>
        </trans-unit>
        <trans-unit id="d7f7571be9e8bbc975fc0b203b1e61a25e0b0f4a" translate="yes" xml:space="preserve">
          <source>CounterMonitor.getModulus()</source>
          <target state="translated">CounterMonitor.getModulus()</target>
        </trans-unit>
        <trans-unit id="639dd64278dcbc54941e41c84da3ebff9372fe23" translate="yes" xml:space="preserve">
          <source>CounterMonitor.getNotificationInfo()</source>
          <target state="translated">CounterMonitor.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="477352cafa4e5da6d93bc78443633137501cde31" translate="yes" xml:space="preserve">
          <source>CounterMonitor.getNotify()</source>
          <target state="translated">CounterMonitor.getNotify()</target>
        </trans-unit>
        <trans-unit id="97c1a6e00e53cd076aa747193c51bb098dd4eddc" translate="yes" xml:space="preserve">
          <source>CounterMonitor.getOffset()</source>
          <target state="translated">CounterMonitor.getOffset()</target>
        </trans-unit>
        <trans-unit id="1380d1fb02d5f81909a5e3c10de4aa4eb67b3c7b" translate="yes" xml:space="preserve">
          <source>CounterMonitor.getThreshold()</source>
          <target state="translated">CounterMonitor.getThreshold()</target>
        </trans-unit>
        <trans-unit id="797c7c4744b537b96ffdfee48b34fe1998968e51" translate="yes" xml:space="preserve">
          <source>CounterMonitor.setDifferenceMode()</source>
          <target state="translated">CounterMonitor.setDifferenceMode()</target>
        </trans-unit>
        <trans-unit id="ae18a0767e66bd8a53842f6c4e823d076bc83840" translate="yes" xml:space="preserve">
          <source>CounterMonitor.setInitThreshold()</source>
          <target state="translated">CounterMonitor.setInitThreshold()</target>
        </trans-unit>
        <trans-unit id="55c4d4720077b097da1f36bdc8f383c37e88932a" translate="yes" xml:space="preserve">
          <source>CounterMonitor.setModulus()</source>
          <target state="translated">CounterMonitor.setModulus()</target>
        </trans-unit>
        <trans-unit id="97127b2fe5d165308ed728a4de1559f9a0834456" translate="yes" xml:space="preserve">
          <source>CounterMonitor.setNotify()</source>
          <target state="translated">CounterMonitor.setNotify()</target>
        </trans-unit>
        <trans-unit id="ee2bc17659fcc098405816e9d883e94b408f8c17" translate="yes" xml:space="preserve">
          <source>CounterMonitor.setOffset()</source>
          <target state="translated">CounterMonitor.setOffset()</target>
        </trans-unit>
        <trans-unit id="56fd8648dbde35d77e68ecc53d2cf310d00c722e" translate="yes" xml:space="preserve">
          <source>CounterMonitor.setThreshold()</source>
          <target state="translated">CounterMonitor.setThreshold()</target>
        </trans-unit>
        <trans-unit id="473197bcb5b64c2bb13587431eed145cfc831c51" translate="yes" xml:space="preserve">
          <source>CounterMonitor.start()</source>
          <target state="translated">CounterMonitor.start()</target>
        </trans-unit>
        <trans-unit id="bfc39075a934c5cbc7dc0b54ab8a59a53b6b1e89" translate="yes" xml:space="preserve">
          <source>CounterMonitor.stop()</source>
          <target state="translated">CounterMonitor.stop()</target>
        </trans-unit>
        <trans-unit id="2701c213ba24b4101f14c0739a0b9f6257eba9ca" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean</source>
          <target state="translated">CounterMonitorMBean</target>
        </trans-unit>
        <trans-unit id="d60c68006137f16cf0489c5f17fee3e5dd879ee7" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.getDerivedGauge()</source>
          <target state="translated">CounterMonitorMBean.getDerivedGauge()</target>
        </trans-unit>
        <trans-unit id="2db7ff0ac2afb7973f08da060318f0af97b23d8a" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.getDerivedGaugeTimeStamp()</source>
          <target state="translated">CounterMonitorMBean.getDerivedGaugeTimeStamp()</target>
        </trans-unit>
        <trans-unit id="52f4b9e91ae859e4bbf2d4f3bf32acbecb199934" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.getDifferenceMode()</source>
          <target state="translated">CounterMonitorMBean.getDifferenceMode()</target>
        </trans-unit>
        <trans-unit id="38dd2673ee903a9e215b008fab3b8352cb3a0bee" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.getInitThreshold()</source>
          <target state="translated">CounterMonitorMBean.getInitThreshold()</target>
        </trans-unit>
        <trans-unit id="c3592d8b68d06cf52d3a74f0b17488c62ce2bebb" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.getModulus()</source>
          <target state="translated">CounterMonitorMBean.getModulus()</target>
        </trans-unit>
        <trans-unit id="6b8750639e709834a333cadf452568838c552578" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.getNotify()</source>
          <target state="translated">CounterMonitorMBean.getNotify()</target>
        </trans-unit>
        <trans-unit id="cac22f9f4f79ebee7583310a6284673745ad1861" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.getOffset()</source>
          <target state="translated">CounterMonitorMBean.getOffset()</target>
        </trans-unit>
        <trans-unit id="4519cb9d2ba5f0f42fa25ec9258694d0874ff874" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.getThreshold()</source>
          <target state="translated">CounterMonitorMBean.getThreshold()</target>
        </trans-unit>
        <trans-unit id="8623b510396a90ebf6282457f60a56ae01c2d80f" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.setDifferenceMode()</source>
          <target state="translated">CounterMonitorMBean.setDifferenceMode()</target>
        </trans-unit>
        <trans-unit id="ca6694b17f33b882399d7bcfa8826796bd86e6bd" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.setInitThreshold()</source>
          <target state="translated">CounterMonitorMBean.setInitThreshold()</target>
        </trans-unit>
        <trans-unit id="e8406eaf04d9c3a8518043bc69fae4ce028e7a66" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.setModulus()</source>
          <target state="translated">CounterMonitorMBean.setModulus()</target>
        </trans-unit>
        <trans-unit id="c8f492d0752d511749979676fa7868e2f2675b17" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.setNotify()</source>
          <target state="translated">CounterMonitorMBean.setNotify()</target>
        </trans-unit>
        <trans-unit id="3944912bfc0c3cdb5b23764cac593f39ac360c5f" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.setOffset()</source>
          <target state="translated">CounterMonitorMBean.setOffset()</target>
        </trans-unit>
        <trans-unit id="ea68dc80161e5d56143f9b510bfbfcea4e746c6a" translate="yes" xml:space="preserve">
          <source>CounterMonitorMBean.setThreshold()</source>
          <target state="translated">CounterMonitorMBean.setThreshold()</target>
        </trans-unit>
        <trans-unit id="cb17f88167f56497121f47ea1ad00d14d67da805" translate="yes" xml:space="preserve">
          <source>Counts the number of stack frames in this thread. The thread must be suspended.</source>
          <target state="translated">이 스레드의 스택 프레임 수를 계산합니다. 스레드가 일시 중단되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9ab65628c43af38ced588d25eb71fc97a408065a" translate="yes" xml:space="preserve">
          <source>Cracks a &lt;a href=&quot;methodhandleinfo#directmh&quot;&gt;direct method handle&lt;/a&gt; created by this lookup object or a similar one. Security and access checks are performed to ensure that this lookup object is capable of reproducing the target method handle. This means that the cracking may fail if target is a direct method handle but was created by an unrelated lookup object. This can happen if the method handle is &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;caller sensitive&lt;/a&gt; and was created by a lookup object for a different class.</source>
          <target state="translated">이 조회 객체 또는 유사한 객체로 작성된 &lt;a href=&quot;methodhandleinfo#directmh&quot;&gt;직접 메서드 핸들을&lt;/a&gt; 크랙합니다 . 이 조회 오브젝트가 대상 메소드 핸들을 재생할 수 있는지 확인하기 위해 보안 및 액세스 점검이 수행됩니다. 즉, 대상이 직접 메서드 핸들이지만 관련되지 않은 조회 객체에 의해 생성 된 경우 크래킹이 실패 할 수 있습니다. 메소드 핸들이 &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;호출자에 민감&lt;/a&gt; 하고 다른 클래스의 검색 오브젝트에 의해 작성된 경우에 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22fd661b702fdf28e9b3674cf1a41235ff8a12f5" translate="yes" xml:space="preserve">
          <source>Create Bidi from the given paragraph of text and base direction.</source>
          <target state="translated">주어진 텍스트 단락과 기본 방향에서 Bidi를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4d789c154fa51d52c517fad17630c00f2e3d59d4" translate="yes" xml:space="preserve">
          <source>Create Bidi from the given paragraph of text.</source>
          <target state="translated">주어진 텍스트 단락에서 Bidi를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="91f90eb833a0d260e36d010ce795332a786e2f07" translate="yes" xml:space="preserve">
          <source>Create Bidi from the given text, embedding, and direction information. The embeddings array may be null. If present, the values represent embedding level information. Negative values from -1 to -61 indicate overrides at the absolute value of the level. Positive values from 1 to 61 indicate embeddings. Where values are zero, the base embedding level as determined by the base direction is assumed.</source>
          <target state="translated">주어진 텍스트, 삽입 및 방향 정보에서 Bidi를 만듭니다. 임베딩 배열은 null 일 수 있습니다. 있는 경우 값은 포함 레벨 정보를 나타냅니다. -1에서 -61 사이의 음수 값은 레벨의 절대 값에서 재정의를 나타냅니다. 1에서 61 사이의 양수 값은 임베딩을 나타냅니다. 값이 0 인 경우 기본 방향으로 결정된 기본 포함 수준이 가정됩니다.</target>
        </trans-unit>
        <trans-unit id="37696e0d8f6ccf79f2c492f8b68e639879eb60d0" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;ConsoleHandler&lt;/code&gt; for &lt;code&gt;System.err&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;System.err&lt;/code&gt; 용 &lt;code&gt;ConsoleHandler&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9ff18567a8666c66a9d07613f65f82778e251ca" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;MalformedParametersException&lt;/code&gt; with an empty reason.</source>
          <target state="translated">빈 이유가 있는 &lt;code&gt;MalformedParametersException&lt;/code&gt; 을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="da2ef3b8470cd5a750ad76efb1464c968eeded43" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;MalformedParametersException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MalformedParametersException&lt;/code&gt; 을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="20114a561f69cc65bb026e913e4932c9734683f9" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;MemoryHandler&lt;/code&gt; and configure it based on &lt;code&gt;LogManager&lt;/code&gt; configuration properties.</source>
          <target state="translated">&lt;code&gt;MemoryHandler&lt;/code&gt; 를 작성하고 &lt;code&gt;LogManager&lt;/code&gt; 구성 특성을 기반으로 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e11a3d81de6c41e4529dfa60c9a04707792f34b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;MemoryHandler&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MemoryHandler&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="f46405ceb8718dadc0a238a45458da399f0b2da2" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;SerializedLambda&lt;/code&gt; from the low-level information present at the lambda factory site.</source>
          <target state="translated">lambda 팩토리 사이트에있는 하위 레벨 정보에서 &lt;code&gt;SerializedLambda&lt;/code&gt; 를 작성 하십시오.</target>
        </trans-unit>
        <trans-unit id="855afa90a97598383957d933f9a7d57b5f974997" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;SimpleScriptContext&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleScriptContext&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="0cf22a5956906a3e7d72f90a47f4198d9c149871" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;SocketHandler&lt;/code&gt;, using only &lt;code&gt;LogManager&lt;/code&gt; properties (or their defaults).</source>
          <target state="translated">&lt;code&gt;LogManager&lt;/code&gt; 속성 만 (또는 기본값)을 사용하여 &lt;code&gt;SocketHandler&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a79e1ee55833cd9b5bb0e04bccd85e6cd915eb05" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;StreamHandler&lt;/code&gt; with a given &lt;code&gt;Formatter&lt;/code&gt; and output stream.</source>
          <target state="translated">지정된 &lt;code&gt;Formatter&lt;/code&gt; 및 출력 스트림을 사용해 &lt;code&gt;StreamHandler&lt;/code&gt; 를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="bb78eb935fa8d2e65102e391ac4587ee7465e1b7" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;StreamHandler&lt;/code&gt;, with no current output stream.</source>
          <target state="translated">현재의 출력 스트림이없는 &lt;code&gt;StreamHandler&lt;/code&gt; 를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="c2c44b4879ade2f1f8f02210f7f2a3ce54db94c7" translate="yes" xml:space="preserve">
          <source>Create a BeanDescriptor for a bean that doesn't have a customizer.</source>
          <target state="translated">커 스터 마이저가없는 Bean에 대한 BeanDescriptor를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="181f504e6fe7858ec2c80d3183dc4433c972f408" translate="yes" xml:space="preserve">
          <source>Create a BeanDescriptor for a bean that has a customizer.</source>
          <target state="translated">커 스터 마이저가있는 Bean의 BeanDescriptor를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="ec2edd6de6ab7a71ff783ce0728ae878d183743e" translate="yes" xml:space="preserve">
          <source>Create a Bidi object representing the bidi information on a line of text within the paragraph represented by the current Bidi. This call is not required if the entire paragraph fits on one line.</source>
          <target state="translated">현재 Bidi가 나타내는 단락 내에서 텍스트 행에 대한 bidi 정보를 나타내는 Bidi 오브젝트를 작성하십시오. 전체 단락이 한 줄에 맞는 경우이 호출이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9052d33b17d3a4c3a86377644a5ed2023d8a0974" translate="yes" xml:space="preserve">
          <source>Create a DecimalFormatSymbols object for the default &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; locale. This constructor can only construct instances for the locales supported by the Java runtime environment, not for those supported by installed &lt;a href=&quot;spi/decimalformatsymbolsprovider&quot;&gt;&lt;code&gt;DecimalFormatSymbolsProvider&lt;/code&gt;&lt;/a&gt; implementations. For full locale coverage, use the &lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getInstance&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">기본 &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; &lt;/a&gt; 로캘에 대한 DecimalFormatSymbols 객체를 만듭니다 . 이 생성자는 설치된 &lt;a href=&quot;spi/decimalformatsymbolsprovider&quot;&gt; &lt;code&gt;DecimalFormatSymbolsProvider&lt;/code&gt; &lt;/a&gt; 구현 이 지원하지 않는 Java 런타임 환경이 지원하는 로케일에 대해서만 인스턴스를 구성 할 수 있습니다 . 전체 로케일 범위를 보려면 &lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getInstance&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="11a3e42bad095135a3fbccc3f2290e6c307b98e1" translate="yes" xml:space="preserve">
          <source>Create a DecimalFormatSymbols object for the given locale. This constructor can only construct instances for the locales supported by the Java runtime environment, not for those supported by installed &lt;a href=&quot;spi/decimalformatsymbolsprovider&quot;&gt;&lt;code&gt;DecimalFormatSymbolsProvider&lt;/code&gt;&lt;/a&gt; implementations. For full locale coverage, use the &lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getInstance&lt;/code&gt;&lt;/a&gt; method. If the specified locale contains the &lt;a href=&quot;../util/locale#UNICODE_LOCALE_EXTENSION&quot;&gt;&lt;code&gt;Locale.UNICODE_LOCALE_EXTENSION&lt;/code&gt;&lt;/a&gt; for the numbering system, the instance is initialized with the specified numbering system if the JRE implementation supports it. For example,</source>
          <target state="translated">지정된 로캘에 대한 DecimalFormatSymbols 객체를 만듭니다. 이 생성자는 설치된 &lt;a href=&quot;spi/decimalformatsymbolsprovider&quot;&gt; &lt;code&gt;DecimalFormatSymbolsProvider&lt;/code&gt; &lt;/a&gt; 구현 이 지원하지 않는 Java 런타임 환경이 지원하는 로케일에 대해서만 인스턴스를 구성 할 수 있습니다 . 전체 로케일 범위를 보려면 &lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getInstance&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 . 지정된 로케일 에 번호 시스템에 대한 &lt;a href=&quot;../util/locale#UNICODE_LOCALE_EXTENSION&quot;&gt; &lt;code&gt;Locale.UNICODE_LOCALE_EXTENSION&lt;/code&gt; 이&lt;/a&gt; 포함 된 경우, JRE 구현이이를 지원하는 경우 인스턴스는 지정된 번호 시스템으로 초기화됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="ab6f992a7cfca7b845e8762cfdaac2f903ac974f" translate="yes" xml:space="preserve">
          <source>Create a MBeanServerDelegate object.</source>
          <target state="translated">MBeanServerDelegate 오브젝트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="453c6df3d7370c2df1ffff0f855bd5fd343b1ee0" translate="yes" xml:space="preserve">
          <source>Create a MulticastSocket bound to the specified socket address.</source>
          <target state="translated">지정된 소켓 주소에 바인딩 된 MulticastSocket을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3624f664c07bf7ab6b5ea0063a75868d9739bf9a" translate="yes" xml:space="preserve">
          <source>Create a Serializable field with the specified type. This field should be documented with a &lt;code&gt;serialField&lt;/code&gt; tag.</source>
          <target state="translated">지정된 유형으로 직렬화 가능 필드를 작성하십시오. 이 필드는 &lt;code&gt;serialField&lt;/code&gt; 태그 와 함께 문서화되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="94b6ac6d01df6b17190274569410c8c2ec93090e" translate="yes" xml:space="preserve">
          <source>Create a StreamCorruptedException and list a reason why thrown.</source>
          <target state="translated">StreamCorruptedException을 작성하고 발생한 이유를 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="a5d38fbc09c32e980ec732295f00f8d22f548a1e" translate="yes" xml:space="preserve">
          <source>Create a StreamCorruptedException and list no reason why thrown.</source>
          <target state="translated">StreamCorruptedException을 작성하고 이유가없는 이유를 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="fda606954ad0f14223575a0684daf893c925d9bf" translate="yes" xml:space="preserve">
          <source>Create a TCP server socket on a port, using the default authentication context and a specified backlog of connections as well as a particular specified network interface. This constructor is used on multihomed hosts, such as those used for firewalls or as routers, to control through which interface a network service is provided.</source>
          <target state="translated">기본 인증 컨텍스트와 지정된 연결 백 로그 및 특정 네트워크 인터페이스를 사용하여 포트에 TCP 서버 소켓을 작성하십시오. 이 생성자는 네트워크 서비스가 제공되는 인터페이스를 제어하기 위해 방화벽이나 라우터와 같은 멀티 홈 호스트에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ee2eaecaff3786a92da94063f54cf2e315c23f4f" translate="yes" xml:space="preserve">
          <source>Create a TCP server socket on a port, using the default authentication context and a specified backlog of connections.</source>
          <target state="translated">기본 인증 컨텍스트 및 지정된 연결 백 로그를 사용하여 포트에 TCP 서버 소켓을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="026aa81b3d5aa2e737a66ffb598b4db2cc185671" translate="yes" xml:space="preserve">
          <source>Create a TCP server socket on a port, using the default authentication context. The connection backlog defaults to fifty connections queued up before the system starts to reject new connection requests.</source>
          <target state="translated">기본 인증 컨텍스트를 사용하여 포트에 TCP 서버 소켓을 작성하십시오. 연결 백로 그는 시스템이 새 연결 요청을 거부하기 전에 대기중인 연결 수를 50으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6f220e8b715a9e065e585e8bf0763be5121e9eba" translate="yes" xml:space="preserve">
          <source>Create a copy of this iterator</source>
          <target state="translated">이 이터레이터의 복사본을 만듭니다</target>
        </trans-unit>
        <trans-unit id="7271de21caca2c79d440927551f79b8f7d1ea662" translate="yes" xml:space="preserve">
          <source>Create a job which can print a multiDoc.</source>
          <target state="translated">multiDoc을 인쇄 할 수있는 작업을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="97bdf8288841ff800a8d4451b9d7fa354f0941ae" translate="yes" xml:space="preserve">
          <source>Create a multicast socket and bind it to a specific port.</source>
          <target state="translated">멀티 캐스트 소켓을 작성하여 특정 포트에 바인드하십시오.</target>
        </trans-unit>
        <trans-unit id="c435f90f4f29ab51f621f8844fbbdd0e793b45a5" translate="yes" xml:space="preserve">
          <source>Create a multicast socket.</source>
          <target state="translated">멀티 캐스트 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="64c0f6566a6bcb04ab7842f9169775e9b6c81510" translate="yes" xml:space="preserve">
          <source>Create a named Level with a given integer value and a given localization resource name.</source>
          <target state="translated">지정된 정수 값과 지정된 현지화 리소스 이름으로 명명 된 Level을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d8bc62c151be76ebc8612416efdf1ed7f03c2e6c" translate="yes" xml:space="preserve">
          <source>Create a named Level with a given integer value.</source>
          <target state="translated">주어진 정수 값으로 명명 된 Level을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d7540ac83fa0ec0513ce927515a841e4f65d3a42" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;AccessControlContext&lt;/code&gt; with the given &lt;code&gt;AccessControlContext&lt;/code&gt; and &lt;code&gt;DomainCombiner&lt;/code&gt;. This constructor associates the provided &lt;code&gt;DomainCombiner&lt;/code&gt; with the provided &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;AccessControlContext&lt;/code&gt; 및 &lt;code&gt;DomainCombiner&lt;/code&gt; 로 새 &lt;code&gt;AccessControlContext&lt;/code&gt; 를 작성하십시오 . 이 생성자는 제공된 &lt;code&gt;DomainCombiner&lt;/code&gt; 를 제공된 &lt;code&gt;AccessControlContext&lt;/code&gt; 와 연관 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="7f882a128fe0aabe8b2d45e30c26685ab3265e86" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;DelegationPermission&lt;/code&gt; with the specified subordinate and target principals.</source>
          <target state="translated">지정된 하위 및 대상 주체 로 새 &lt;code&gt;DelegationPermission&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1e9adf3d3944851d6058fec3f542fd77d4d10b8b" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;ServicePermission&lt;/code&gt; with the specified &lt;code&gt;servicePrincipal&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;servicePrincipal&lt;/code&gt; 및 &lt;code&gt;action&lt;/code&gt; 을 사용하여 새 &lt;code&gt;ServicePermission&lt;/code&gt; 을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f2b9372c01e546c8941a78094947cd268658e8f" translate="yes" xml:space="preserve">
          <source>Create a new MBeanPermission object with the specified target name (class name, member, object name) and actions.</source>
          <target state="translated">지정된 대상 이름 (클래스 이름, 멤버, 오브젝트 이름) 및 조치로 새 MBeanPermission 오브젝트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="8c8f96889eb5f408d9f9e025810a854a2c9d09b8" translate="yes" xml:space="preserve">
          <source>Create a new MBeanPermission object with the specified target name and actions.</source>
          <target state="translated">지정된 대상 이름 및 조치를 사용하여 새 MBeanPermission 오브젝트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="48d7637108cec56d2828b41b2e6b2140cc7b59dd" translate="yes" xml:space="preserve">
          <source>Create a new MBeanServer object using the method &lt;a href=&quot;mbeanserverfactory#createMBeanServer--&quot;&gt;&lt;code&gt;MBeanServerFactory.createMBeanServer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserverfactory#createMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.createMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverfactory#createMBeanServer--&quot;&gt; &lt;code&gt;MBeanServerFactory.createMBeanServer()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;mbeanserverfactory#createMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.createMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 새 MBeanServer 오브젝트를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c21c8d57243a5e3261628cd3c4e038097ff8d44" translate="yes" xml:space="preserve">
          <source>Create a new MBeanServer object without keeping a reference to it, using the method &lt;a href=&quot;mbeanserverfactory#newMBeanServer--&quot;&gt;&lt;code&gt;MBeanServerFactory.newMBeanServer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserverfactory#newMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.newMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverfactory#newMBeanServer--&quot;&gt; &lt;code&gt;MBeanServerFactory.newMBeanServer()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;mbeanserverfactory#newMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.newMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 참조를 유지하지 않고 새 MBeanServer 오브젝트를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="0af4a05e09b5d0727266aed1fcc9a24272807a80" translate="yes" xml:space="preserve">
          <source>Create a new MBeanServerPermission with the given name.</source>
          <target state="translated">주어진 이름으로 새로운 MBeanServerPermission을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="466139706e7975395ab7cc92ede457d93c1d6ea9" translate="yes" xml:space="preserve">
          <source>Create a new MBeanTrustPermission with the given name.</source>
          <target state="translated">주어진 이름으로 새로운 MBeanTrustPermission을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="eebb971a6f5655038a2874771f92025d6abe5c08" translate="yes" xml:space="preserve">
          <source>Create a new ParsePosition with the given initial index.</source>
          <target state="translated">주어진 초기 색인으로 새 ParsePosition을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="e4229df6bc3f9deba51a6fbdc0953db5ab8e5181" translate="yes" xml:space="preserve">
          <source>Create a new cookie manager with specified cookie store and cookie policy.</source>
          <target state="translated">지정된 쿠키 저장소 및 쿠키 정책으로 새 쿠키 관리자를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="585dbf6aa46d7f7b4d009935545d42ba15cea960" translate="yes" xml:space="preserve">
          <source>Create a new cookie manager.</source>
          <target state="translated">새로운 쿠키 관리자를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e6b0990d7fb3b2cfe67a0b0471f3eb1f58511947" translate="yes" xml:space="preserve">
          <source>Create a new date format.</source>
          <target state="translated">새로운 날짜 형식을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9de060862b0adfc933e8344738fd06cbafc5f6ab" translate="yes" xml:space="preserve">
          <source>Create a new file if it does not exist. This option is ignored if the &lt;a href=&quot;standardopenoption#CREATE_NEW&quot;&gt;&lt;code&gt;CREATE_NEW&lt;/code&gt;&lt;/a&gt; option is also set. The check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations.</source>
          <target state="translated">존재하지 않는 경우 새 파일을 작성하십시오. &lt;a href=&quot;standardopenoption#CREATE_NEW&quot;&gt; &lt;code&gt;CREATE_NEW&lt;/code&gt; &lt;/a&gt; 옵션도 설정된 경우이 옵션은 무시됩니다 . 파일이 있는지 확인하고 파일이 존재하지 않는 경우 파일을 작성하는 것은 다른 파일 시스템 조작과 관련하여 원 자성입니다.</target>
        </trans-unit>
        <trans-unit id="30882f7f636623f30d06b7b2b3085c4e3cf615f4" translate="yes" xml:space="preserve">
          <source>Create a new file, failing if the file already exists. The check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations.</source>
          <target state="translated">파일이 이미 존재하지 않으면 새 파일을 작성하십시오. 파일이 있는지 확인하고 파일이 존재하지 않는 경우 파일을 작성하는 것은 다른 파일 시스템 조작과 관련하여 원 자성입니다.</target>
        </trans-unit>
        <trans-unit id="efa906874cb1f20d9e3334dae725b0f75208c04a" translate="yes" xml:space="preserve">
          <source>Create a new filtered writer.</source>
          <target state="translated">필터링 된 새 라이터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="287fb9258a41502ee83064baffa3c7728faf26c0" translate="yes" xml:space="preserve">
          <source>Create a new line-numbering reader, reading characters into a buffer of the given size.</source>
          <target state="translated">주어진 크기의 버퍼로 문자를 읽어 새로운 줄 번호 매기기 리더를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f264b1e2afb57385a9d022f3a94158abe070d1dc" translate="yes" xml:space="preserve">
          <source>Create a new line-numbering reader, using the default input-buffer size.</source>
          <target state="translated">기본 입력 버퍼 크기를 사용하여 새 줄 번호 매기기 리더를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d849ab4cc72d8df4e559ed8416e4f12b010a7a0b" translate="yes" xml:space="preserve">
          <source>Create a new string writer using the default initial string-buffer size.</source>
          <target state="translated">기본 초기 문자열 버퍼 크기를 사용하여 새 문자열 작성기를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="fa71298a1a5b26178e0de7e4d15e0815cc2632c4" translate="yes" xml:space="preserve">
          <source>Create a new string writer using the specified initial string-buffer size.</source>
          <target state="translated">지정된 초기 문자열 버퍼 크기를 사용하여 새 문자열 작성기를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="fc1e395d55fd98df886a37ec85c9ef0a36698845" translate="yes" xml:space="preserve">
          <source>Create a server with the specified port, listen backlog, and local IP address to bind to. The</source>
          <target state="translated">지정된 포트, 청취 백 로그 및 바인딩 할 로컬 IP 주소로 서버를 작성하십시오. 그만큼</target>
        </trans-unit>
        <trans-unit id="ff2255d2c5ee833d8c82544c5c755090b51de27e" translate="yes" xml:space="preserve">
          <source>Create a tokenizer that parses the given character stream.</source>
          <target state="translated">주어진 문자 스트림을 구문 분석하는 토크 나이저를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="cfed6aba28eed9243c4653ad52ac0506e55eb86b" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;ArrayType&lt;/code&gt; instance in a type-safe manner.</source>
          <target state="translated">형식이 안전한 방식으로 &lt;code&gt;ArrayType&lt;/code&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f7db6f3b378f83b652acb20d2baa884971759d57" translate="yes" xml:space="preserve">
          <source>Create an AccessControlContext with the given array of ProtectionDomains. Context must not be null. Duplicate domains will be removed from the context.</source>
          <target state="translated">지정된 ProtectionDomain 배열로 AccessControlContext를 작성합니다. 컨텍스트는 null이 아니어야합니다. 중복 도메인이 컨텍스트에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="9bdfe0282d16815f9fd356be8ff5dd73d02692c2" translate="yes" xml:space="preserve">
          <source>Create an Inet6Address in the exact manner of &lt;a href=&quot;inetaddress#getByAddress-java.lang.String-byte:A-&quot;&gt;&lt;code&gt;InetAddress.getByAddress(String,byte[])&lt;/code&gt;&lt;/a&gt; except that the IPv6 scope_id is set to the given numeric value. The scope_id is not checked to determine if it corresponds to any interface on the system. See &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt; for a description of IPv6 scoped addresses.</source>
          <target state="translated">IPv6 scope_id가 지정된 숫자 값으로 설정되는 것을 제외하고 &lt;a href=&quot;inetaddress#getByAddress-java.lang.String-byte:A-&quot;&gt; &lt;code&gt;InetAddress.getByAddress(String,byte[])&lt;/code&gt; &lt;/a&gt; 와 동일한 방식으로 Inet6Address를 작성하십시오. scope_id는 시스템의 인터페이스에 해당하는지 여부를 확인하지 않습니다. IPv6 범위 주소에 대한 설명은 &lt;a href=&quot;inet6address#scoped&quot;&gt;여기&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2059ba466259a8f50ea2fef8d0d466c2e47b2331" translate="yes" xml:space="preserve">
          <source>Create an Inet6Address in the exact manner of &lt;a href=&quot;inetaddress#getByAddress-java.lang.String-byte:A-&quot;&gt;&lt;code&gt;InetAddress.getByAddress(String,byte[])&lt;/code&gt;&lt;/a&gt; except that the IPv6 scope_id is set to the value corresponding to the given interface for the address type specified in &lt;code&gt;addr&lt;/code&gt;. The call will fail with an UnknownHostException if the given interface does not have a numeric scope_id assigned for the given address type (eg. link-local or site-local). See &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt; for a description of IPv6 scoped addresses.</source>
          <target state="translated">IPv6 scope_id가 &lt;code&gt;addr&lt;/code&gt; 에 지정된 주소 유형에 대해 지정된 인터페이스에 해당하는 값으로 설정되는 것을 제외하고 는 &lt;a href=&quot;inetaddress#getByAddress-java.lang.String-byte:A-&quot;&gt; &lt;code&gt;InetAddress.getByAddress(String,byte[])&lt;/code&gt; &lt;/a&gt; 와 동일한 방식으로 Inet6Address를 작성하십시오 . 지정된 인터페이스에 지정된 주소 유형 (예 : 링크 로컬 또는 사이트 로컬)에 할당 된 숫자 scope_id가없는 경우 UnknownHostException과 함께 호출이 실패합니다. IPv6 범위 주소에 대한 설명은 &lt;a href=&quot;inet6address#scoped&quot;&gt;여기&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="94c70668c07257661b851c6762a12c362b3741f4" translate="yes" xml:space="preserve">
          <source>Create an ObjectStreamException with the specified argument.</source>
          <target state="translated">지정된 인수를 사용하여 ObjectStreamException을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="fd6c969913c6a4507208020fdcdd82536c3fb26d" translate="yes" xml:space="preserve">
          <source>Create an ObjectStreamException.</source>
          <target state="translated">ObjectStreamException을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="8b64e1bb74c1356cc97ff45f043796974778b62d" translate="yes" xml:space="preserve">
          <source>Create an anonymous Logger. The newly created Logger is not registered in the LogManager namespace. There will be no access checks on updates to the logger.</source>
          <target state="translated">익명 로거를 만듭니다. 새로 작성된 로거는 LogManager 네임 스페이스에 등록되지 않습니다. 로거 업데이트에 대한 액세스 점검이 없습니다.</target>
        </trans-unit>
        <trans-unit id="cf50657f883769fc08c7d960550c088c9ed491d9" translate="yes" xml:space="preserve">
          <source>Create an instance of a &lt;code&gt;Subject&lt;/code&gt; with Principals and credentials.</source>
          <target state="translated">프린시 펄 및 신임 정보 가있는 &lt;code&gt;Subject&lt;/code&gt; 의 인스턴스를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="bdcde7c81535b10c9dd05a25701f84f9b86d5250" translate="yes" xml:space="preserve">
          <source>Create an instance of a &lt;code&gt;Subject&lt;/code&gt; with an empty &lt;code&gt;Set&lt;/code&gt; of Principals and empty Sets of public and private credentials.</source>
          <target state="translated">(A)의 인스턴스 만들기 &lt;code&gt;Subject&lt;/code&gt; 빈으로 &lt;code&gt;Set&lt;/code&gt; Principal와 공공 및 민간 자격의 비어있는 세트를.</target>
        </trans-unit>
        <trans-unit id="24c7eea4f5dbec405720d44cae496dcfb4620ecc" translate="yes" xml:space="preserve">
          <source>Create an instance that is not a delegate of another object</source>
          <target state="translated">다른 객체의 대리자가 아닌 인스턴스 만들기</target>
        </trans-unit>
        <trans-unit id="4d324270900f4c88bdbccd1d367385d18d024857" translate="yes" xml:space="preserve">
          <source>Create an instance using the specified Locale and design mode.</source>
          <target state="translated">지정된 로캘 및 디자인 모드를 사용하여 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="165fafaef67aba061a4b54d2f546644bbc6d7a7c" translate="yes" xml:space="preserve">
          <source>Create an instance using the specified locale</source>
          <target state="translated">지정된 로케일을 사용하여 인스턴스 작성</target>
        </trans-unit>
        <trans-unit id="927f1c02def772097f4dc33141cc56637d7a8258" translate="yes" xml:space="preserve">
          <source>Create an instance using with a default locale</source>
          <target state="translated">기본 로캘을 사용하여 인스턴스 만들기</target>
        </trans-unit>
        <trans-unit id="464fdfc5f7ace501981b37d0eb64e3e44c915b27" translate="yes" xml:space="preserve">
          <source>Create an instance with a peer</source>
          <target state="translated">피어가있는 인스턴스 만들기</target>
        </trans-unit>
        <trans-unit id="af7977b6e30e2e5131c342f1e4b85de92bbee62b" translate="yes" xml:space="preserve">
          <source>Create an unbound TCP server socket using the default authentication context.</source>
          <target state="translated">기본 인증 컨텍스트를 사용하여 언 바운드 TCP 서버 소켓을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="7551a1cabc3de1c220f4763981114c850871fff5" translate="yes" xml:space="preserve">
          <source>Create and return a copy of this object.</source>
          <target state="translated">이 객체의 복사본을 만들어 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9fdf6ac2c3f76be3911da39734e855259427bb59" translate="yes" xml:space="preserve">
          <source>Creates &lt;code&gt;ByteArrayInputStream&lt;/code&gt; that uses &lt;code&gt;buf&lt;/code&gt; as its buffer array. The initial value of &lt;code&gt;pos&lt;/code&gt; is &lt;code&gt;offset&lt;/code&gt; and the initial value of &lt;code&gt;count&lt;/code&gt; is the minimum of &lt;code&gt;offset+length&lt;/code&gt; and &lt;code&gt;buf.length&lt;/code&gt;. The buffer array is not copied. The buffer's mark is set to the specified offset.</source>
          <target state="translated">생성 &lt;code&gt;ByteArrayInputStream&lt;/code&gt; 용도가 &lt;code&gt;buf&lt;/code&gt; 버퍼 배열로한다. &lt;code&gt;pos&lt;/code&gt; 의 초기 값 은 &lt;code&gt;offset&lt;/code&gt; 이고 &lt;code&gt;count&lt;/code&gt; 의 초기 값 은 &lt;code&gt;offset+length&lt;/code&gt; 및 &lt;code&gt;buf.length&lt;/code&gt; 의 최소값입니다 . 버퍼 배열은 복사되지 않습니다. 버퍼 마크가 지정된 오프셋으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4d0dcec9ee78621a3344007c2c026455b4f92014" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../util/spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; over the elements described by this &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">작성 &lt;a href=&quot;../util/spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt; 이 설명의 요소 &lt;code&gt;Iterable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93f141edbe5896a6b476f9fdc031643bfcc00776" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;doc&quot;&gt;&lt;code&gt;Doc&lt;/code&gt;&lt;/a&gt; object encapsulating the &lt;code&gt;DocFlavor&lt;/code&gt; and the actual print data, which can take many forms including: a Postscript file, a JPEG image, a URL, or plain text.</source>
          <target state="translated">&lt;code&gt;DocFlavor&lt;/code&gt; 및 실제 인쇄 데이터를 캡슐화 하는 &lt;a href=&quot;doc&quot;&gt; &lt;code&gt;Doc&lt;/code&gt; &lt;/a&gt; 객체 를 작성합니다. Postscript 파일, JPEG 이미지, URL 또는 일반 텍스트 등 다양한 형식을 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a53f6116a328aee1ddef083f06b78543c30dfa8" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;fileattribute&quot;&gt;&lt;code&gt;FileAttribute&lt;/code&gt;&lt;/a&gt;, encapsulating a copy of the given file permissions, suitable for passing to the &lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createFile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createDirectory&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createFile&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createDirectory&lt;/code&gt; &lt;/a&gt; 메소드 에 전달하기에 적합한 지정된 파일 권한의 사본을 캡슐화 하여 &lt;a href=&quot;fileattribute&quot;&gt; &lt;code&gt;FileAttribute&lt;/code&gt; &lt;/a&gt; 를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="e7840377bc24eb3948a87c523757c42da9b26c0a" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; over the elements in this collection. Implementations should document characteristic values reported by the spliterator. Such characteristic values are not required to be reported if the spliterator reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and this collection contains no elements.</source>
          <target state="translated">이 컬렉션의 요소 위에 &lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt; 를 만듭니다 . 구현시 스플리터가보고 한 특성 값을 문서화해야합니다. 스플리터가 Spliterator.SIZED를보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 콜렉션에 요소가없는 경우 이러한 특성 값을보고하지 않아도됩니다 .</target>
        </trans-unit>
        <trans-unit id="dbc51f2eef87de9efb0f726744825fd69481f3af" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; over the elements in this list.</source>
          <target state="translated">작성 &lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt; 이리스트 내의 요소를.</target>
        </trans-unit>
        <trans-unit id="7a576cf2f545e4ff47702f227a60b3b60c9bc8c6" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;BufferedImage&lt;/code&gt; with a given width and height according to the specification embodied in this object.</source>
          <target state="translated">이 객체로 구현 된 사양에 따라, 지정된 폭과 높이 로 &lt;code&gt;BufferedImage&lt;/code&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="b6d9e61e9333ea46a728dbad8369a156d680a348" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;BufferedInputStream&lt;/code&gt; and saves its argument, the input stream &lt;code&gt;in&lt;/code&gt;, for later use. An internal buffer array is created and stored in &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">작성 &lt;code&gt;BufferedInputStream&lt;/code&gt; 을을 하고, 그 인수 인 입력 스트림 저장 &lt;code&gt;in&lt;/code&gt; 나중에 사용할 수를. 내부 버퍼 배열이 생성되어 &lt;code&gt;buf&lt;/code&gt; 에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="4fb2796a01f892d47f6d95033e4e912b0e5c7de0" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;BufferedInputStream&lt;/code&gt; with the specified buffer size, and saves its argument, the input stream &lt;code&gt;in&lt;/code&gt;, for later use. An internal buffer array of length &lt;code&gt;size&lt;/code&gt; is created and stored in &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">지정된 버퍼 크기 로 &lt;code&gt;BufferedInputStream&lt;/code&gt; 을 작성하고 나중에 사용할 수 있도록 인수 인 입력 스트림을 &lt;code&gt;in&lt;/code&gt; 저장 합니다. 길이 &lt;code&gt;size&lt;/code&gt; 의 내부 버퍼 배열 이 작성되어 &lt;code&gt;buf&lt;/code&gt; 에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b0456bc0c083c056bf5a9e67bbed9965a8dd32d" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;ByteArrayInputStream&lt;/code&gt; so that it uses &lt;code&gt;buf&lt;/code&gt; as its buffer array. The buffer array is not copied. The initial value of &lt;code&gt;pos&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; and the initial value of &lt;code&gt;count&lt;/code&gt; is the length of &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">작성 &lt;code&gt;ByteArrayInputStream&lt;/code&gt; 이 사용되도록 &lt;code&gt;buf&lt;/code&gt; 를 버퍼 배열로서. 버퍼 배열은 복사되지 않습니다. &lt;code&gt;pos&lt;/code&gt; 의 초기 값 은 &lt;code&gt;0&lt;/code&gt; 이고 &lt;code&gt;count&lt;/code&gt; 의 초기 값 은 &lt;code&gt;buf&lt;/code&gt; 의 길이입니다 .</target>
        </trans-unit>
        <trans-unit id="f751d108fc2ae5a13cdeacb8b1b4f71274450fea" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;CRLException&lt;/code&gt; with the specified cause and a detail message of &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (which typically contains the class and detail message of &lt;code&gt;cause&lt;/code&gt;).</source>
          <target state="translated">작성 &lt;code&gt;CRLException&lt;/code&gt; 지정된 원인과 함께 상세 메세지 &lt;code&gt;(cause==null ? null : cause.toString())&lt;/code&gt; (보통의 클래스와 상세 메세지 포함하는 &lt;code&gt;cause&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0a90f5e43d5445400696bc4d2fb4a401402b4541" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;CRLException&lt;/code&gt; with the specified detail message and cause.</source>
          <target state="translated">지정된 상세 메세지 및 원인 으로 &lt;code&gt;CRLException&lt;/code&gt; 을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="e67526aa518cd1d5cb680c3b3e9ab5f69be2c27a" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;CallerRunsPolicy&lt;/code&gt;.</source>
          <target state="translated">생성 &lt;code&gt;CallerRunsPolicy&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="76737df2ce8953522c261740cd90febbf762de0f" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;CertPath&lt;/code&gt; of the specified type.</source>
          <target state="translated">지정된 형식 의 &lt;code&gt;CertPath&lt;/code&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="1ce378248942f096a844e10807cced763e3977d8" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;CertPathBuilder&lt;/code&gt; object of the given algorithm, and encapsulates the given provider implementation (SPI object) in it.</source>
          <target state="translated">지정된 알고리즘 의 &lt;code&gt;CertPathBuilder&lt;/code&gt; 객체를 작성해 , 지정된 프로 바이더 구현 (SPI 객체)을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="86c7af773846641791c404179e585ca7c251a287" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;CertPathBuilderException&lt;/code&gt; that wraps the specified throwable. This allows any exception to be converted into a &lt;code&gt;CertPathBuilderException&lt;/code&gt;, while retaining information about the wrapped exception, which may be useful for debugging. The detail message is set to (&lt;code&gt;cause==null ? null : cause.toString()&lt;/code&gt;) (which typically contains the class and detail message of cause).</source>
          <target state="translated">지정된 Throwable을 랩 하는 &lt;code&gt;CertPathBuilderException&lt;/code&gt; 을 작성합니다. 이를 통해 모든 예외를 &lt;code&gt;CertPathBuilderException&lt;/code&gt; 으로 변환 할 수 있습니다. 랩핑 된 예외에 대한 정보를 유지하면서 할 수 있습니다. 이는 디버깅에 유용 할 수 있습니다. 세부 사항 메시지는 ( &lt;code&gt;cause==null ? null : cause.toString()&lt;/code&gt; ) (일반적으로 원인의 클래스 및 세부 사항 메시지를 포함 함)으로 설정됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
