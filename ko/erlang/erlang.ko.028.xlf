<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="d864b4aeaa7386e89e67b9ae63cd819d9f41a6d4" translate="yes" xml:space="preserve">
          <source>Returns the name of the application to which the process &lt;code&gt;Pid&lt;/code&gt; or the module &lt;code&gt;Module&lt;/code&gt; belongs. Providing no argument is the same as calling &lt;code&gt;get_application(self())&lt;/code&gt;.</source>
          <target state="translated">프로세스 &lt;code&gt;Pid&lt;/code&gt; 또는 모듈 &lt;code&gt;Module&lt;/code&gt; 이 속한 응용 프로그램의 이름을 반환합니다 . 인수를 제공하지 않는 것은 &lt;code&gt;get_application(self())&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7d62b642c52c728d5bcbfefe5f52c72ec31e0471" translate="yes" xml:space="preserve">
          <source>Returns the name of the current node. Allowed in guards.</source>
          <target state="translated">현재 노드의 이름을 반환합니다. 경비원에서 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="8510c7c82ca88f84b7575435a166132cfbf338a7" translate="yes" xml:space="preserve">
          <source>Returns the name of the escript that is executed. If the function is invoked outside the context of an escript, the behavior is undefined.</source>
          <target state="translated">실행되는 escript의 이름을 리턴합니다. 함수가 escript 컨텍스트 외부에서 호출되면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e96e3414a1d1fc235f3ea83919b8dc8eb1d909d" translate="yes" xml:space="preserve">
          <source>Returns the name of the local host. If Erlang was started with command-line flag &lt;code&gt;-name&lt;/code&gt;, &lt;code&gt;Name&lt;/code&gt; is the fully qualified name.</source>
          <target state="translated">로컬 호스트의 이름을 반환합니다. 얼랑 명령 줄 플래그로 시작 된 경우 &lt;code&gt;-name&lt;/code&gt; , &lt;code&gt;Name&lt;/code&gt; 정규화 된 이름입니다.</target>
        </trans-unit>
        <trans-unit id="fcafb7c7fbc116067a03b38cd1217a58db1c7164" translate="yes" xml:space="preserve">
          <source>Returns the name of the local node. If the node is not alive, &lt;code&gt;nonode@nohost&lt;/code&gt; is returned instead.</source>
          <target state="translated">로컬 노드의 이름을 반환합니다. 노드가 &lt;code&gt;nonode@nohost&lt;/code&gt; 가 아닌 경우 nonode @ nohost 가 대신 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="30fc380ea808fa5540bd8e951118112f9a14a296" translate="yes" xml:space="preserve">
          <source>Returns the name of the log file &lt;code&gt;Filename&lt;/code&gt;, or &lt;code&gt;{error, no_log_file}&lt;/code&gt; if logging to file is not enabled.</source>
          <target state="translated">파일에 로깅이 사용 가능하지 않은 경우 로그 파일 &lt;code&gt;Filename&lt;/code&gt; 또는 &lt;code&gt;{error, no_log_file}&lt;/code&gt; 의 이름을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0429924e574032bfd549705fe083c8cf1e3e8649" translate="yes" xml:space="preserve">
          <source>Returns the name of the target that the specified connection belongs to.</source>
          <target state="translated">지정된 연결이 속한 대상의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="756be78b2bbf2ca59e105d611595048a3b7d839a" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;constraint&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;constraint&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="76e04edf05ecf5a831fbb2d6cd173266764050b7" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;function&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4e36136e160d0bafbfea7b1da9ae279b456db37c" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;macro&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="900862649122a3fce897e03938145bae5fea2a14" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_field_assoc&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_field_assoc&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e6145ffbc27bfd93b80822f15197a8ad0c91d15f" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_field_exact&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_field_exact&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f77498fc989ea746382c2a0ca52346c58677e618" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_type_assoc&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_type_assoc&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="835380ba3e2354bc2f27660f60c502c0253db616" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_type_exact&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_type_exact&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2d3d12a21c3442ab392d04173e9f7f33171ceb03" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;named_fun_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;named_fun_expr&lt;/code&gt; 노드 의 이름 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="939901a31fe919b4a471f4f2c4baff1efb974c5c" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;record_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_field&lt;/code&gt; 노드 의 이름 하위 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6b38accc8373842fde8d529c0026aaae246c6a8b" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;record_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_type&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a52bf5aa1c91ec8283732decefec61991879b4e6" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;record_type_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_type_field&lt;/code&gt; 노드 의 이름 하위 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f72ea48a2fdac3d8bc5650288a263570fc636215" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an &lt;code&gt;annotated_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;annotated_type&lt;/code&gt; 노드 의 이름 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="96db8060ebdf0b56f7be23a01dabf76c6f3eef30" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an &lt;code&gt;attribute&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6e947c02a1a2057175521e6dc318ab909ac5926d" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an &lt;code&gt;implicit_fun&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;implicit_fun&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="36b7655180fcc8ac1bc7f1f07959643f308992b5" translate="yes" xml:space="preserve">
          <source>Returns the names of all group nodes, regardless of their current status.</source>
          <target state="translated">현재 상태에 관계없이 모든 그룹 노드의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4517f549ce5eaa64742e0071f4faa17896e3b860" translate="yes" xml:space="preserve">
          <source>Returns the names of the disk logs accessible on the current node. The first list contains local disk logs and the second list contains distributed disk logs.</source>
          <target state="translated">현재 노드에서 액세스 할 수있는 디스크 로그 이름을 반환합니다. 첫 번째 목록에는 로컬 디스크 로그가 포함되고 두 번째 목록에는 분산 디스크 로그가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="66d609ac0ad975e923b6e0e753ec884c92a29456" translate="yes" xml:space="preserve">
          <source>Returns the names of variables occurring in a syntax tree, The result is a set of variable names represented by atoms. Macro names are not included.</source>
          <target state="translated">구문 트리에서 발생하는 변수 이름을 리턴합니다. 결과는 원자로 표시되는 변수 이름 세트입니다. 매크로 이름은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ef6e7858a7f9f0a1946d1d2e810bbafb986782b" translate="yes" xml:space="preserve">
          <source>Returns the next Erlang form from the opened Erlang source file. Tuple &lt;code&gt;{eof, Line}&lt;/code&gt; is returned at the end of the file. The first form corresponds to an implicit attribute &lt;code&gt;-file(File,1).&lt;/code&gt;, where &lt;code&gt;File&lt;/code&gt; is the file name.</source>
          <target state="translated">열린 Erlang 소스 파일에서 다음 Erlang 양식을 리턴합니다. 튜플 &lt;code&gt;{eof, Line}&lt;/code&gt; 은 파일 끝에서 반환됩니다. 첫 번째 양식은 내재적 속성 &lt;code&gt;-file(File,1).&lt;/code&gt; 여기서 &lt;code&gt;File&lt;/code&gt; 은 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f39c3c02ac7fc307b241a77b655c2418ea9279ce" translate="yes" xml:space="preserve">
          <source>Returns the next key &lt;code&gt;Key2&lt;/code&gt;, following key &lt;code&gt;Key1&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;. For table type &lt;code&gt;ordered_set&lt;/code&gt;, the next key in Erlang term order is returned. For other table types, the next key according to the internal order of the table is returned. If no next key exists, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 의 키 &lt;code&gt;Key1&lt;/code&gt; 다음에 다음 키 &lt;code&gt;Key2&lt;/code&gt; 를 리턴합니다 . &lt;code&gt;ordered_set&lt;/code&gt; 테이블 유형의 경우 Erlang 용어 순서의 다음 키가 리턴됩니다. 다른 테이블 유형의 경우 테이블의 내부 순서에 따라 다음 키가 리턴됩니다. 다음 키가 없으면 &lt;code&gt;'$end_of_table'&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cf3072514589e15b52d21f7b73a490cfc41586aa" translate="yes" xml:space="preserve">
          <source>Returns the next key-value association in &lt;code&gt;Iterator&lt;/code&gt; and a new iterator for the remaining associations in the iterator.</source>
          <target state="translated">에서 다음 키 - 값 협회 반환 &lt;code&gt;Iterator&lt;/code&gt; 와 반복자에 남아있는 협회를위한 새로운 반복자를.</target>
        </trans-unit>
        <trans-unit id="e8ac983f9489351b9b3974c653fe958f0feac7d7" translate="yes" xml:space="preserve">
          <source>Returns the next row of the result set relative the current cursor position and positions the cursor at this row. If the cursor is positioned at the last row of the result set when this function is called the returned value will be &lt;code&gt;{selected, ColNames,[]}&lt;/code&gt; e.i. the list of row values is empty indicating that there is no more data to fetch.</source>
          <target state="translated">현재 커서 위치를 기준으로 결과 집합의 다음 행을 반환하고 커서를이 행에 놓습니다. 이 함수가 호출 될 때 커서가 결과 세트의 마지막 행에 위치한 경우, 리턴 된 값은 &lt;code&gt;{selected, ColNames,[]}&lt;/code&gt; ei 행 값 목록이 비어 있으면 더 이상 가져올 데이터가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2a3cc80198ccf8a2422cb88e06be84c0d2ec7f1e" translate="yes" xml:space="preserve">
          <source>Returns the node where &lt;code&gt;Arg&lt;/code&gt; originates. &lt;code&gt;Arg&lt;/code&gt; can be a process identifier, a reference, or a port. If the local node is not alive, &lt;code&gt;nonode@nohost&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Arg&lt;/code&gt; 가 시작된 노드를 반환합니다 . &lt;code&gt;Arg&lt;/code&gt; 는 프로세스 식별자, 참조 또는 포트 일 수 있습니다. 로컬 노드가 &lt;code&gt;nonode@nohost&lt;/code&gt; 가 아닌 경우 nonode @ nohost 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7c4ff193cb26f222d298407efeb61e630c79c97f" translate="yes" xml:space="preserve">
          <source>Returns the node where &lt;code&gt;Arg&lt;/code&gt;, a pid, reference, or port, is located.</source>
          <target state="translated">pid, 참조 또는 포트 인 &lt;code&gt;Arg&lt;/code&gt; 가 있는 노드를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cdb939066b84f045a8eb1bbcb3b1492ceaddc96d" translate="yes" xml:space="preserve">
          <source>Returns the node with the expected lowest future load.</source>
          <target state="translated">가장 낮은 미래로드가 예상되는 노드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="20e0e84ddb30606ecca97ce2dbf6dbaf1fa1c9f6" translate="yes" xml:space="preserve">
          <source>Returns the number of ETS tables currently existing at the local node.</source>
          <target state="translated">로컬 노드에 현재 존재하는 ETS 테이블 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cd9adff4dac1e4dbde3c24ac92ca38ebe99be758" translate="yes" xml:space="preserve">
          <source>Returns the number of UNIX processes running on this machine. This is a crude way of measuring the system load, but it may be of interest in some cases.</source>
          <target state="translated">이 머신에서 실행중인 UNIX 프로세스 수를 리턴합니다. 이는 시스템로드를 측정하는 조잡한 방법이지만 경우에 따라 관심이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68195efba97e00bb80a72e998c3ce9768deb6dcd" translate="yes" xml:space="preserve">
          <source>Returns the number of async threads in the async thread pool used for asynchronous driver calls (&lt;code&gt;erl_driver:driver_async()&lt;/code&gt;). The value is given as an integer.</source>
          <target state="translated">비동기 드라이버 호출에 사용되는 비동기 스레드 풀의 비동기 스레드 수 ( &lt;code&gt;erl_driver:driver_async()&lt;/code&gt; )를 리턴 합니다. 값은 정수로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="de16206d78e81676063deda742f4bdf29ddc346f" translate="yes" xml:space="preserve">
          <source>Returns the number of atoms currently existing at the local node. The value is given as an integer.</source>
          <target state="translated">로컬 노드에 현재 존재하는 원자 수를 반환합니다. 값은 정수로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="289e5e258e74d38d0c7744ab02085a55d74045f9" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes currently in the driver queue.</source>
          <target state="translated">현재 드라이버 큐에있는 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9685234297aa62c4ec6b93c2f5203975bb333255" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes remaining in the queue on success, otherwise &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">성공시 큐에 남아있는 바이트 수를 리턴하고, 그렇지 않으면 &lt;code&gt;-1&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e1989ed9742c3110fc080b47dde3c3f316aead1d" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes written (including terminating &lt;code&gt;NULL&lt;/code&gt; character) or &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an atom with maximum length of &lt;code&gt;size-1&lt;/code&gt;.</source>
          <target state="translated">쓴 바이트 수 ( &lt;code&gt;NULL&lt;/code&gt; 문자 종료 포함)를 반환 하거나 &lt;code&gt;term&lt;/code&gt; 이 최대 길이가 &lt;code&gt;size-1&lt;/code&gt; 인 아톰이 아닌 경우 &lt;code&gt;0&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="28e2238e73b47b77e05ca2933c0cce9ea32e5cd7" translate="yes" xml:space="preserve">
          <source>Returns the number of characters in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 의 문자 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ab7c66f6c0ae44a560915366f99ad2d69ccd8be7" translate="yes" xml:space="preserve">
          <source>Returns the number of characters that have been scanned up to that point, including whitespace characters.</source>
          <target state="translated">공백 문자를 포함하여 해당 지점까지 스캔 된 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b9a65fbe0ac8aee32e97b5e854b44d3ce3c467ce" translate="yes" xml:space="preserve">
          <source>Returns the number of characters written on success, otherwise a negative value.</source>
          <target state="translated">성공시 쓰여진 문자 수를 반환하고, 그렇지 않으면 음수 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b625423ddef94067248deca4c04683f8e549d739" translate="yes" xml:space="preserve">
          <source>Returns the number of dirty CPU scheduler threads used by the emulator. Dirty CPU schedulers execute CPU-bound native functions, such as NIFs, linked-in driver code, and BIFs that cannot be managed cleanly by the normal emulator schedulers.</source>
          <target state="translated">에뮬레이터에서 사용하는 더티 CPU 스케줄러 스레드 수를 리턴합니다. 더티 CPU 스케줄러는 일반 에뮬레이터 스케줄러에서 깔끔하게 관리 할 수없는 NIF, 링크 된 드라이버 코드 및 BIF와 같은 CPU 바인딩 기본 기능을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7f256108e8868ab847f1eff7205badbf224a1696" translate="yes" xml:space="preserve">
          <source>Returns the number of dirty CPU schedulers online. The return value satisfies &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the smallest of the return values of &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; and &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt;.</source>
          <target state="translated">더티 CPU 스케줄러의 온라인 수를 리턴합니다. 리턴 값은 &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt; 만족합니다 . 여기서 &lt;code&gt;N&lt;/code&gt; 은 &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; 및 &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt; 의 리턴 값 중 가장 작은 값입니다 .</target>
        </trans-unit>
        <trans-unit id="972b6b25e8bef227b0888f4e0ec09a488a7fd291" translate="yes" xml:space="preserve">
          <source>Returns the number of dirty I/O schedulers as an integer. Dirty I/O schedulers execute I/O-bound native functions, such as NIFs and linked-in driver code, which cannot be managed cleanly by the normal emulator schedulers.</source>
          <target state="translated">더티 I / O 스케줄러 수를 정수로 리턴합니다. 더티 I / O 스케줄러는 일반 에뮬레이터 스케줄러에서 깔끔하게 관리 할 수없는 NIF 및 링크 된 드라이버 코드와 같은 I / O 바인딩 기본 기능을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f2cecf2f2587c973d7ba7749223e67ce5bcd9288" translate="yes" xml:space="preserve">
          <source>Returns the number of edges of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">그래프 &lt;code&gt;G&lt;/code&gt; 의 모서리 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7e0fe1fbaca57f92941dbf5961b597f892cbcbf3" translate="yes" xml:space="preserve">
          <source>Returns the number of element subtrees of a list skeleton. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt;&quot;, then &lt;code&gt;list_length(Node)&lt;/code&gt; returns the integer 6.</source>
          <target state="translated">리스트 스켈레톤의 요소 서브 트리 수를 리턴합니다. &lt;code&gt;Node&lt;/code&gt; 는 적절한 목록을 나타내야합니다. 예를 들어, &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt; &quot;을 &lt;code&gt;list_length(Node)&lt;/code&gt; 경우 list_length (Node) 는 정수 6을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ad586e32862b432a0a41088a52255a88a289ea6d" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in &lt;code&gt;Ordset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ordset&lt;/code&gt; 의 요소 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7bceeed5f3c9033126d8483cf01a323f732e14be" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 의 요소 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="27741694d88ef2b8c9cd98a9ef33f42ed7c245ca" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in a tuple or the number of bytes in a binary or bitstring, for example:</source>
          <target state="translated">튜플의 요소 수 또는 이진 또는 비트 열의 바이트 수를 반환합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c968d21c414055b6f6881cf8f979d52fd5e70356" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in an &lt;code&gt;Orddict&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Orddict&lt;/code&gt; 의 요소 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0347b9e4b937d3628927c5a51702f2b0a337c4e1" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in an encoded term.</source>
          <target state="translated">인코딩 된 용어의 요소 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cbb04a338deacffc9cdd45a081bac00c58279528" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in dictionary &lt;code&gt;Dict&lt;/code&gt;.</source>
          <target state="translated">사전 &lt;code&gt;Dict&lt;/code&gt; 의 요소 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bc78430436d67ee43831124b6a2d7e6df88457ce" translate="yes" xml:space="preserve">
          <source>Returns the number of elements of a &lt;code&gt;tuple&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;tuple&lt;/code&gt; 노드 의 요소 수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="5d26e03c95e98c9b4ddb07abeb329de06ac539a0" translate="yes" xml:space="preserve">
          <source>Returns the number of elements of the ordered or unordered set &lt;code&gt;ASet&lt;/code&gt;.</source>
          <target state="translated">정렬되거나 정렬되지 않은 세트 &lt;code&gt;ASet&lt;/code&gt; 의 요소 수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c225130ea4a23823ec37a6247fe9d56da5d6dc0c" translate="yes" xml:space="preserve">
          <source>Returns the number of exact reductions.</source>
          <target state="translated">정확한 축소 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="27414b5e7862e995bd023cb7aba132000145e35e" translate="yes" xml:space="preserve">
          <source>Returns the number of functions matching argument &lt;code&gt;MFA&lt;/code&gt;. This is zero if none matched.</source>
          <target state="translated">인수 &lt;code&gt;MFA&lt;/code&gt; 와 일치하는 함수 수를 리턴합니다 . 일치하는 것이 없으면 0입니다.</target>
        </trans-unit>
        <trans-unit id="3eab28eed3d513f19bc8be9e90ec8f8a9c40eae5" translate="yes" xml:space="preserve">
          <source>Returns the number of grapheme clusters in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 의 그래 핀 군집 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="875852e065bfcab09f0d2f2e878c3b2d86af0d05" translate="yes" xml:space="preserve">
          <source>Returns the number of key-value associations in &lt;code&gt;Map&lt;/code&gt;. This operation occurs in constant time.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 의 키-값 연관 수를 리턴합니다 . 이 작업은 일정한 시간에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ab99794bdead76dd1c19e887d93d13e246ef599e" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Hours + Minutes + Seconds&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Hours + Minutes + Seconds&lt;/code&gt; 단위로 밀리 초 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e21598081417b439b5643f4da2844b6f5db7888" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Hours&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Hours&lt;/code&gt; 밀리 초)을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="edd8dc1060ce206d5c2e4bc39fe2bfe625eb43a8" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Minutes&lt;/code&gt;.</source>
          <target state="translated">밀리 초 수를 &lt;code&gt;Minutes&lt;/code&gt; 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="12c8b32a329885d598a6369eb66f2e456bac0905" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Seconds&lt;/code&gt;.</source>
          <target state="translated">에서 밀리 초 단위로 반환합니다 &lt;code&gt;Seconds&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e37ee5b1b74524e5d5bf9ae8b42b650f5310f0ee" translate="yes" xml:space="preserve">
          <source>Returns the number of nodes in &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 의 노드 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bc9a93bc0d77c37498540b62ea2586ca944319bd" translate="yes" xml:space="preserve">
          <source>Returns the number of objects in the table, a non-negative integer.</source>
          <target state="translated">음수가 아닌 정수인 테이블의 개체 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ddd7d03445c2ab56bf345eadf4a78c17fe249214" translate="yes" xml:space="preserve">
          <source>Returns the number of ports (an &lt;code&gt;integer() &amp;gt;= 0&lt;/code&gt;) using the driver.</source>
          <target state="translated">드라이버를 사용하여 포트 수 ( &lt;code&gt;integer() &amp;gt;= 0&lt;/code&gt; )를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="491d9bc6df2db855e8c29dbad2bf37402fcc8564" translate="yes" xml:space="preserve">
          <source>Returns the number of ports currently existing at the local node. The value is given as an integer. This is the same value as returned by &lt;code&gt;length(erlang:ports())&lt;/code&gt;, but more efficient.</source>
          <target state="translated">로컬 노드에 현재 존재하는 포트 수를 반환합니다. 값은 정수로 제공됩니다. &lt;code&gt;length(erlang:ports())&lt;/code&gt; 에서 반환 한 값과 같지만 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="583d57fb0564ec0306d359b8d46a2530b90a86d0" translate="yes" xml:space="preserve">
          <source>Returns the number of processes currently existing at the local node. The value is given as an integer. This is the same value as returned by &lt;code&gt;length(processes())&lt;/code&gt;, but more efficient.</source>
          <target state="translated">로컬 노드에 현재 존재하는 프로세스 수를 리턴합니다. 값은 정수로 제공됩니다. &lt;code&gt;length(processes())&lt;/code&gt; 에서 반환 한 값과 같지만 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="785f587d2a9ba00ce2609c7ff903f6c1bb1110ac" translate="yes" xml:space="preserve">
          <source>Returns the number of scheduler threads used by the emulator. Scheduler threads online schedules Erlang processes and Erlang ports, and execute Erlang code and Erlang linked-in driver code.</source>
          <target state="translated">에뮬레이터에서 사용하는 스케줄러 스레드 수를 반환합니다. 스케줄러는 온라인으로 Erlang 프로세스 및 Erlang 포트를 예약하고 Erlang 코드 및 Erlang 링크 된 드라이버 코드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6402e69f258c1835a9c52804476542b4c976434e" translate="yes" xml:space="preserve">
          <source>Returns the number of schedulers online. The scheduler identifiers of schedulers online satisfy the relationship &lt;code&gt;1 &amp;lt;= SchedulerId &amp;lt;= erlang:system_info(schedulers_online)&lt;/code&gt;.</source>
          <target state="translated">온라인 스케줄러 수를 리턴합니다. 온라인 스케줄러의 스케줄러 식별자는 &lt;code&gt;1 &amp;lt;= SchedulerId &amp;lt;= erlang:system_info(schedulers_online)&lt;/code&gt; 관계를 충족시킵니다 .</target>
        </trans-unit>
        <trans-unit id="e5b2848fc2497fdc525632a37ac35933549746cc" translate="yes" xml:space="preserve">
          <source>Returns the number of seconds since midnight up to the specified time.</source>
          <target state="translated">자정 이후 지정된 시간까지 초 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ffbc86e2482f174303a71199a1f5608893d1ed2d" translate="yes" xml:space="preserve">
          <source>Returns the number of sessions in the cache. If size exceeds the maximum number of sessions, the current cache entries will be invalidated regardless of their remaining lifetime. Is to be callable from any process.</source>
          <target state="translated">캐시의 세션 수를 반환합니다. 크기가 최대 세션 수를 초과하면 남은 수명에 관계없이 현재 캐시 항목이 무효화됩니다. 모든 프로세스에서 호출 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="16ddf2387fd04809ee8daa453a0efa12e73e124b" translate="yes" xml:space="preserve">
          <source>Returns the number of start bits, &lt;code&gt;M&lt;/code&gt;, of a &lt;code&gt;bitstring_type&lt;/code&gt; node.</source>
          <target state="translated">시작 비트의 수를 돌려 &lt;code&gt;M&lt;/code&gt; (A)의, &lt;code&gt;bitstring_type&lt;/code&gt; 의 노드를.</target>
        </trans-unit>
        <trans-unit id="36ef3e0a5dbdeac871ee3e6f8d38ff39927bfb55" translate="yes" xml:space="preserve">
          <source>Returns the number of vertices of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 의 꼭짓점 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7c7b135d5b9e3c6434f3fc9376651b53ae756d53" translate="yes" xml:space="preserve">
          <source>Returns the number of words in &lt;code&gt;String&lt;/code&gt;, separated by blanks or &lt;code&gt;Character&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 에서 단어 수를 공백 또는 &lt;code&gt;Character&lt;/code&gt; 구분하여 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="816478c4d0ecefe3cc8fa0901f0b437027d2fe17" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by a &lt;code&gt;float&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 노드가 나타내는 숫자 문자열을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a586d3cb678be1749add7a5da87769e378a20dec" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by an &lt;code&gt;integer&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;integer&lt;/code&gt; 노드로 표시되는 숫자 문자열을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="7c5f0cb49feee55aa2ec12d1aa9ff79a709d0ef3" translate="yes" xml:space="preserve">
          <source>Returns the object code file extension corresponding to the Erlang machine used, namely &lt;code&gt;.beam&lt;/code&gt;.</source>
          <target state="translated">사용 된 Erlang 기계에 해당하는 오브젝트 코드 파일 확장자, 즉 &lt;code&gt;.beam&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="6a87f473568302f6f0157e494cb4551c83562306" translate="yes" xml:space="preserve">
          <source>Returns the official name of &lt;code&gt;Host&lt;/code&gt;, or &lt;code&gt;{error, Host}&lt;/code&gt; if no such name is found. See also &lt;code&gt;&lt;a href=&quot;inet&quot;&gt;inet(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; 의 공식 이름 또는 해당 이름이 없으면 &lt;code&gt;{error, Host}&lt;/code&gt; 반환합니다. &lt;code&gt;&lt;a href=&quot;inet&quot;&gt;inet(3)&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f362a3afc2fafb536dcb997b8b99e94c30dbe125" translate="yes" xml:space="preserve">
          <source>Returns the old state identifier, that is:</source>
          <target state="translated">이전 상태 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c212b94b18e6ce7fb278680ccf26e904eae63ef1" translate="yes" xml:space="preserve">
          <source>Returns the old value of the flag.</source>
          <target state="translated">플래그의 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a4d5cbf7a554387015c97a39e626461ec015fa1e" translate="yes" xml:space="preserve">
          <source>Returns the operator precedence field of the prettyprinter context.</source>
          <target state="translated">prettyprinter 컨텍스트의 연산자 우선 순위 필드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e8704fd8ab7a384142305a1b7f6f1d6978057230" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of a &lt;code&gt;prefix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;prefix_expr&lt;/code&gt; 노드 의 연산자 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c27d9b6065ec14668d370cca91d5666dafc230f9" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of an &lt;code&gt;application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;application&lt;/code&gt; 노드 의 연산자 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9731910832b6b164f42fcebed8fdf99171fbd591" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of an &lt;code&gt;infix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;infix_expr&lt;/code&gt; 노드 의 연산자 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="85b33ca2308142d2f8f7b80f3de5d0e5583d8d1d" translate="yes" xml:space="preserve">
          <source>Returns the pair &lt;code&gt;{node, Node}&lt;/code&gt;, describing the chunk continuation returned by &lt;code&gt;chunk/2,3&lt;/code&gt;, &lt;code&gt;bchunk/2,3&lt;/code&gt;, or &lt;code&gt;chunk_step/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chunk/2,3&lt;/code&gt; , &lt;code&gt;bchunk/2,3&lt;/code&gt; 또는 &lt;code&gt;chunk_step/3&lt;/code&gt; 에서 리턴 한 청크 연속을 설명하는 &lt;code&gt;{node, Node}&lt;/code&gt; 쌍을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="90a0aac47f2a74669c81ad36eebc01a1652c9cd2" translate="yes" xml:space="preserve">
          <source>Returns the paper widh field of the prettyprinter context.</source>
          <target state="translated">prettyprinter 컨텍스트의 paper widh 필드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="02537d119ef2252eea478fd30ef841670ba037d6" translate="yes" xml:space="preserve">
          <source>Returns the path for the &quot;library directory&quot;, the top directory, for an application &lt;code&gt;Name&lt;/code&gt; located under &lt;code&gt;$OTPROOT/lib&lt;/code&gt; or on a directory referred to with environment variable &lt;code&gt;ERL_LIBS&lt;/code&gt;.</source>
          <target state="translated">반환 응용 프로그램의 &quot;라이브러리 디렉토리&quot;, 상단 디렉토리에 대한 경로 &lt;code&gt;Name&lt;/code&gt; 아래에 &lt;code&gt;$OTPROOT/lib&lt;/code&gt; 또는 디렉토리에 환경 변수로 언급 &lt;code&gt;ERL_LIBS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9f65ccd60013371b1b2ad8467610f0efc52e1f6" translate="yes" xml:space="preserve">
          <source>Returns the path to a subdirectory directly under the top directory of an application. Normally the subdirectories reside under the top directory for the application, but when applications at least partly resides in an archive, the situation is different. Some of the subdirectories can reside as regular directories while other reside in an archive file. It is not checked whether this directory exists.</source>
          <target state="translated">응용 프로그램의 최상위 디렉토리 바로 아래에있는 하위 디렉토리의 경로를 반환합니다. 일반적으로 서브 디렉토리는 애플리케이션의 최상위 디렉토리에 상주하지만 애플리케이션이 최소한 부분적으로 아카이브에 상주하는 경우 상황이 다릅니다. 일부 서브 디렉토리는 일반 디렉토리로 상주하고 다른 디렉토리는 아카이브 파일에 상주 할 수 있습니다. 이 디렉토리가 존재하는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="321113d5c8b9ba5a1634dc932451dd1414a4ed08" translate="yes" xml:space="preserve">
          <source>Returns the path to the &lt;code&gt;priv&lt;/code&gt; directory in an application. Equivalent to &lt;code&gt;code:lib_dir(Name, priv)&lt;/code&gt;.</source>
          <target state="translated">받는 경로 반환 &lt;code&gt;priv&lt;/code&gt; 응용 프로그램에서 디렉토리를. 상당 &lt;code&gt;code:lib_dir(Name, priv)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49f8d3a368e0189cd9b4ee8bb0935ede3e6cc08e" translate="yes" xml:space="preserve">
          <source>Returns the path to the current key. This is the equivalent of &lt;code&gt;pwd&lt;/code&gt;.</source>
          <target state="translated">현재 키의 경로를 반환합니다. 이것은 &lt;code&gt;pwd&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="006ce942b88e0ca111302602b61535fbad8bbc68" translate="yes" xml:space="preserve">
          <source>Returns the path type, which is one of the following:</source>
          <target state="translated">다음 중 하나 인 경로 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="84ce7f7e9dd661fabc914f1faef4348283166ea4" translate="yes" xml:space="preserve">
          <source>Returns the pattern subtree of a &lt;code&gt;generator&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; 노드 의 패턴 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="153c3ae9cc171eb05251aa0aba53e1cb2111fa80" translate="yes" xml:space="preserve">
          <source>Returns the pattern subtree of a &lt;code&gt;match_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;match_expr&lt;/code&gt; 노드 의 패턴 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4631b360f167d661d505445df0774472e0ea03e9" translate="yes" xml:space="preserve">
          <source>Returns the pid registered under &lt;code&gt;Name&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt;if the name is not registered.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 아래에 등록 된 pid를 반환 하거나 이름이 등록 &lt;code&gt;undefined&lt;/code&gt; 경우 undefined를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="324e95de400a41779998513f2bd89025046048e0" translate="yes" xml:space="preserve">
          <source>Returns the pid with the globally registered name &lt;code&gt;Name&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt; if the name is not globally registered.</source>
          <target state="translated">전역 적으로 등록 된 이름 &lt;code&gt;Name&lt;/code&gt; 을 가진 pid를 반환합니다 . 이름이 전체적으로 등록 &lt;code&gt;undefined&lt;/code&gt; 경우 undefined를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8236434e0b154933eee5239693c72e6b1e2140d0" translate="yes" xml:space="preserve">
          <source>Returns the pid, port identifier or tracer module of the current system tracer or &lt;code&gt;false&lt;/code&gt; if no system tracer is activated.</source>
          <target state="translated">현재 시스템 추적 프로그램의 pid, 포트 식별자 또는 추적 프로그램 모듈을 반환하거나 시스템 추적 프로그램이 활성화되어 있지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="92f35027bcaad43876596a88a76aeeb303390618" translate="yes" xml:space="preserve">
          <source>Returns the pointer to the private data that was set by &lt;code&gt;&lt;a href=&quot;#load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#upgrade&quot;&gt;upgrade&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#upgrade&quot;&gt;upgrade&lt;/a&gt;&lt;/code&gt; 로 설정된 개인 데이터에 대한 포인터를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="546c6ad3a07fa0ce8c58312141c49c8103a49fd9" translate="yes" xml:space="preserve">
          <source>Returns the port owner process.</source>
          <target state="translated">포트 소유자 프로세스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="dd3ec286f3fd13578531ca16ade1edd5c47afaf4" translate="yes" xml:space="preserve">
          <source>Returns the position information associated with &lt;code&gt;Node&lt;/code&gt;. This is usually a nonnegative integer (indicating the source code line number), but may be any term. By default, all new tree nodes have their associated position information set to the integer zero.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 와 관련된 위치 정보를 반환합니다 . 일반적으로 음수가 아닌 정수 (소스 코드 행 번호를 나타냄)이지만 임의의 용어 일 수 있습니다. 기본적으로 모든 새 트리 노드에는 연관된 위치 정보가 정수 0으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="15bf9a5ff537a8ff48b2248c819f055824722f30" translate="yes" xml:space="preserve">
          <source>Returns the position of the table key, a positive integer.</source>
          <target state="translated">테이블 키의 위치를 ​​양의 정수로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="80d1c70786cedec3b8802fd4a00934131cb78803" translate="yes" xml:space="preserve">
          <source>Returns the position where the first occurrence of &lt;code&gt;SubString&lt;/code&gt; begins in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;SubString&lt;/code&gt; does not exist in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SubString&lt;/code&gt; 의 첫 항목이 &lt;code&gt;String&lt;/code&gt; 에서 시작 되는 위치를 리턴합니다 . 반환 &lt;code&gt;0&lt;/code&gt; 경우 &lt;code&gt;SubString&lt;/code&gt; 존재하지 않는 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b92023841df981fc854cd6c21086b8c99e997ed" translate="yes" xml:space="preserve">
          <source>Returns the position where the last occurrence of &lt;code&gt;SubString&lt;/code&gt; begins in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;SubString&lt;/code&gt; does not exist in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SubString&lt;/code&gt; 이 마지막으로 나타나는 위치 를 &lt;code&gt;String&lt;/code&gt; 에서 반환합니다 . 반환 &lt;code&gt;0&lt;/code&gt; 경우 &lt;code&gt;SubString&lt;/code&gt; 존재하지 않는 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a573b144d2932c1f987d4fafd6cad9f79955e6d8" translate="yes" xml:space="preserve">
          <source>Returns the prefix element subtrees of a &lt;code&gt;list&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[E1, ..., En]&lt;/code&gt;&quot; or &quot;&lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt;&quot;, the returned value is &lt;code&gt;[E1, ..., En]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 노드 의 접두사 요소 서브 트리를 리턴 합니다. 경우 &lt;code&gt;Node&lt;/code&gt; 나타내는 &quot; &lt;code&gt;[E1, ..., En]&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt; &quot;반환 된 값은 &lt;code&gt;[E1, ..., En]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d39efa51d78c02315f14baedf1490bdc2478b33" translate="yes" xml:space="preserve">
          <source>Returns the previous key &lt;code&gt;Key2&lt;/code&gt;, preceding key &lt;code&gt;Key1&lt;/code&gt; according to Erlang term order in table &lt;code&gt;Tab&lt;/code&gt; of type &lt;code&gt;ordered_set&lt;/code&gt;. For other table types, the function is synonymous to &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt;. If no previous key exists, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">반환 값은 이전 키 &lt;code&gt;Key2&lt;/code&gt; 키 위의 &lt;code&gt;Key1&lt;/code&gt; 테이블에 얼랑 용어 순서에 따라 &lt;code&gt;Tab&lt;/code&gt; 형식의 &lt;code&gt;ordered_set&lt;/code&gt; . 다른 테이블 유형의 경우 함수는 &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; 와 동의어 입니다. 이전 키가 없으면 &lt;code&gt;'$end_of_table'&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c8d4ae737b4db2c67bfe04ef9c377e7e5e6e3dbd" translate="yes" xml:space="preserve">
          <source>Returns the previous row of the result set relative the current cursor position and positions the cursor at this row.</source>
          <target state="translated">현재 커서 위치를 기준으로 결과 집합의 이전 행을 반환하고 커서를이 행에 놓습니다.</target>
        </trans-unit>
        <trans-unit id="79429747a01ca62392853f8ded40b70de6e8ccea" translate="yes" xml:space="preserve">
          <source>Returns the previous system monitor settings just like &lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt;erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt;erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt; 과 같은 이전 시스템 모니터 설정을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cac41fdf6cb77bccdde51e850b532f7064f9c74d" translate="yes" xml:space="preserve">
          <source>Returns the previous value of the trace token.</source>
          <target state="translated">추적 토큰의 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b2ce30a9003a3dcc5bfa6f287e1ba4c1a86e09dc" translate="yes" xml:space="preserve">
          <source>Returns the printname of an &lt;code&gt;atom&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; 노드 의 인쇄 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c09417a2f782c732ace352e8c361babceffd6222" translate="yes" xml:space="preserve">
          <source>Returns the process ID associated with a living monitor. It can be used in the &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt;process_exit&lt;/a&gt;&lt;/code&gt; callback to get the process identification for the exiting process.</source>
          <target state="translated">리빙 모니터와 연관된 프로세스 ID를 리턴합니다. 프로세스 종료 프로세스에 대한 프로세스 식별을 얻기 위해 &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt;process_exit&lt;/a&gt;&lt;/code&gt; 콜백 에서 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f70d0ce41a4f881616a60ac88b11968ce5d22b0" translate="yes" xml:space="preserve">
          <source>Returns the process ID of the process that made the current call to the driver. The process ID can be used with &lt;code&gt;&lt;a href=&quot;#driver_send_term&quot;&gt;driver_send_term&lt;/a&gt;&lt;/code&gt; to send back data to the caller. &lt;code&gt;driver_caller&lt;/code&gt; only returns valid data when currently executing in one of the following driver callbacks:</source>
          <target state="translated">드라이버를 현재 호출 한 프로세스의 프로세스 ID를 반환합니다. 프로세스 ID는 &lt;code&gt;&lt;a href=&quot;#driver_send_term&quot;&gt;driver_send_term&lt;/a&gt;&lt;/code&gt; 과 함께 사용 하여 호출자에게 데이터를 다시 보낼 수 있습니다 . &lt;code&gt;driver_caller&lt;/code&gt; 는 현재 다음 드라이버 콜백 중 하나에서 실행될 때 유효한 데이터 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="01f1399ec4848c924251bf599db1e66546a717fe" translate="yes" xml:space="preserve">
          <source>Returns the process dictionary and deletes it, for example:</source>
          <target state="translated">프로세스 사전을 리턴하고 삭제합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="a2e0820a69de06d02f05f63a54b009bfff38ba5e" translate="yes" xml:space="preserve">
          <source>Returns the process dictionary as a list of &lt;code&gt;{Key, Val}&lt;/code&gt; tuples, for example:</source>
          <target state="translated">프로세스 사전을 &lt;code&gt;{Key, Val}&lt;/code&gt; 튜플 목록으로 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="807e6d59f8272dfb2df4ddaa7f2cb965c1c9b897" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 의 응용 프로그램으로 시작한 새 프로세스의 프로세스 식별자 (pid) 를 &lt;code&gt;Node&lt;/code&gt; 의 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 호출 프로세스와 새 프로세스간에 원자 적으로 링크가 작성됩니다. 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID를 반환하고, 이유와 출구 신호 &lt;code&gt;noconnection&lt;/code&gt; 는 호출 프로세스로 전송됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="5b805e859795d47f79c78974d6d3bf3de04d9de9" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 의 응용 프로그램으로 시작한 새 프로세스의 프로세스 식별자 (pid) 를 &lt;code&gt;Node&lt;/code&gt; 의 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID가 반환됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="1651cff75e71bc3cca74deea905d1f150b6a5fa1" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 을 적용하여 시작한 새 프로세스의 프로세스 식별자 (pid)를 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="65c181b527326b49f0ac827a0e921c9415e9d4dd" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 에 의해 시작된 새 프로세스의 프로세스 식별자 (pid)를 리턴합니다 . 호출 프로세스와 새 프로세스간에 원자 적으로 링크가 작성됩니다. 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID를 반환하고, 이유와 출구 신호 &lt;code&gt;noconnection&lt;/code&gt; 는 호출 프로세스로 전송됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="c3a0803f013a3f94e9d9aa95cf9347116b949810" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 에 의해 시작된 새 프로세스의 프로세스 식별자 (pid)를 리턴합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID가 반환됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="54fa4c4d9fa8b92ec1113f462f90e3f78e85dcfc" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 에 의해 시작된 새 프로세스의 프로세스 식별자 (pid)를 리턴합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID가 반환됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="b7f404866224f71a3e58de3b96014164fefc80b8" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 의 응용 프로그램으로 시작한 새 프로세스의 프로세스 식별자 를 &lt;code&gt;Node&lt;/code&gt; 의 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID가 반환됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="1fed894a1512ce46a2a275ccfd62d287023c4f84" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;. A link is created between the calling process and the new process, atomically. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 을 적용하여 시작한 새 프로세스의 프로세스 식별자를 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 호출 프로세스와 새 프로세스간에 원자 적으로 링크가 작성됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="af6d8e47602ea5bce18d73a9ce0ed0ceabcf5d9a" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 을 적용하여 시작한 새 프로세스의 프로세스 식별자를 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="fa0e7a06fec50492dfee2ff7bf1d4a8a811eb517" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 의 응용 프로그램으로 시작된 새 프로세스의 프로세스 식별자를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1399dccf65e4176de1759161036d154a0c401255" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;. A link is created between the calling process and the new process, atomically. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 의 응용 프로그램으로 시작된 새 프로세스의 프로세스 식별자를 반환합니다 . 호출 프로세스와 새 프로세스간에 원자 적으로 링크가 작성됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="6bd62b70a6cb87542c88c34c5500d5087ac288c7" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process, started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;, and a reference for a monitor created to the new process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 &lt;code&gt;Fun&lt;/code&gt; 을 적용하여 시작한 새 프로세스의 프로세스 식별자와 새 프로세스에 대해 생성 된 모니터에 대한 참조를 반환합니다 . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="55c30a325ce59bc5c22a7ad0509019e23da0eb3f" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the calling process, for example:</source>
          <target state="translated">호출 프로세스의 프로세스 식별자를 반환합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="87465ac9469d5adad8a1f34c987e678f8f5c4742" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the current Erlang emulator in the format most commonly used by the OS environment. Returns &lt;code&gt;Value&lt;/code&gt; as a string containing the (usually) numerical identifier for a process. On Unix, this is typically the return value of the &lt;code&gt;getpid()&lt;/code&gt; system call. On Windows, the process id as returned by the &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; system call is used.</source>
          <target state="translated">OS 환경에서 가장 일반적으로 사용되는 형식으로 현재 Erlang 에뮬레이터의 프로세스 식별자를 반환합니다. 프로세스의 (일반적으로) 숫자 식별자를 포함하는 문자열로 &lt;code&gt;Value&lt;/code&gt; 를 반환 합니다. 유닉스에서 이것은 일반적으로 &lt;code&gt;getpid()&lt;/code&gt; 시스템 호출 의 반환 값입니다 . Windows에서는 &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; 시스템 호출에 의해 리턴 된 프로세스 ID 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f141a72600726122755cdbd5a26145ed550e1567" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the group leader for the process evaluating the function.</source>
          <target state="translated">함수를 평가하는 프로세스에 대한 그룹 리더의 프로세스 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d1b6bc3db8dba2bad54d7202a8f3ea45429a7ace" translate="yes" xml:space="preserve">
          <source>Returns the process identifier or port identifier with the registered name &lt;code&gt;RegName&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt; if the name is not registered. Example:</source>
          <target state="translated">등록 된 이름이 &lt;code&gt;RegName&lt;/code&gt; 인 프로세스 식별자 또는 포트 식별자를 반환합니다 . 이름이 등록 &lt;code&gt;undefined&lt;/code&gt; 경우 undefined를 반환합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="ecb395b84c751bcedee93e1b2d5e6863abd7cc75" translate="yes" xml:space="preserve">
          <source>Returns the process, port or tracer module to which all trace messages are sent.</source>
          <target state="translated">모든 추적 메시지가 전송되는 프로세스, 포트 또는 추적 프로그램 모듈을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cf05e569cedcd2f699b774279737522a264abe22" translate="yes" xml:space="preserve">
          <source>Returns the promised answer from a previous &lt;code&gt;&lt;a href=&quot;#async_call-4&quot;&gt;async_call/4&lt;/a&gt;&lt;/code&gt;. If the answer is available, it is returned immediately. Otherwise, the calling process is suspended until the answer arrives from &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">이전 &lt;code&gt;&lt;a href=&quot;#async_call-4&quot;&gt;async_call/4&lt;/a&gt;&lt;/code&gt; 에서 약속 된 답변을 반환합니다 . 답변을 사용할 수 있으면 즉시 답변이 반환됩니다. 그렇지 않으면 응답이 &lt;code&gt;Node&lt;/code&gt; 에서 도착할 때까지 호출 프로세스가 일시 중단 됩니다.</target>
        </trans-unit>
        <trans-unit id="910d9c8f6c605e2ebc36d8399a34502b524de425" translate="yes" xml:space="preserve">
          <source>Returns the protocol negotiated through ALPN or NPN extensions.</source>
          <target state="translated">ALPN 또는 NPN 확장을 통해 협상 된 프로토콜을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b755e387a12dca07a6c933ca60eadca3fe83ccc1" translate="yes" xml:space="preserve">
          <source>Returns the random number generator state in an external format. To be used with &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">난수 생성기 상태를 외부 형식으로 반환합니다. &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt; 과 함께 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="3590809b8ac9f39c04bb9426b56ed391a2bbe418" translate="yes" xml:space="preserve">
          <source>Returns the random number state in an external format. To be used with &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">난수 상태를 외부 형식으로 반환합니다. &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt; 과 함께 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="b7b10a6898add1d6fde81dfb4f349332aaad68f9" translate="yes" xml:space="preserve">
          <source>Returns the read encoding, or &lt;code&gt;none&lt;/code&gt; if no valid encoding is found.</source>
          <target state="translated">읽기 인코딩을 반환하거나 유효한 인코딩이 없으면 &lt;code&gt;none&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="be675b48eb569f66a276c6f1557deff36ab74c40" translate="yes" xml:space="preserve">
          <source>Returns the record name and field name/names of a record expression. If &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;record_expr&lt;/code&gt;, &lt;code&gt;record_index_expr&lt;/code&gt; or &lt;code&gt;record_access&lt;/code&gt;, a pair &lt;code&gt;{Type, Info}&lt;/code&gt; is returned, otherwise an atom &lt;code&gt;Type&lt;/code&gt; is returned. &lt;code&gt;Type&lt;/code&gt; is the node type of &lt;code&gt;Node&lt;/code&gt;, and &lt;code&gt;Info&lt;/code&gt; depends on &lt;code&gt;Type&lt;/code&gt;, as follows:</source>
          <target state="translated">레코드 이름 및 레코드 이름의 필드 이름 / 이름을 반환합니다. &lt;code&gt;Node&lt;/code&gt; 에 &lt;code&gt;record_expr&lt;/code&gt; , &lt;code&gt;record_index_expr&lt;/code&gt; 또는 &lt;code&gt;record_access&lt;/code&gt; 유형이 있으면 &lt;code&gt;{Type, Info}&lt;/code&gt; 쌍이 리턴되고, 그렇지 않으면 아톰 &lt;code&gt;Type&lt;/code&gt; 이 리턴됩니다. &lt;code&gt;Type&lt;/code&gt; 은 &lt;code&gt;Node&lt;/code&gt; 의 노드 유형 이며 &lt;code&gt;Info&lt;/code&gt; 는 다음과 같이 &lt;code&gt;Type&lt;/code&gt; 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="e1c83086703974239395b7bb9dc744f602eb77a1" translate="yes" xml:space="preserve">
          <source>Returns the requested information items about the connection, if they are defined.</source>
          <target state="translated">요청 된 연결에 대한 정보 항목이 정의 된 경우이를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="18d7bc4d6909e7f0305f443f69d1f98beb0f9733" translate="yes" xml:space="preserve">
          <source>Returns the resized driver binary on success. Returns &lt;code&gt;NULL&lt;/code&gt; on failure (out of memory).</source>
          <target state="translated">성공시 크기 조정 된 드라이버 바이너리를 반환합니다. 실패시 (메모리 부족) &lt;code&gt;NULL&lt;/code&gt; 을 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="802f3ed0058e0984ef41ca351845339e93fd6d3f" translate="yes" xml:space="preserve">
          <source>Returns the result of applying &lt;code&gt;Function&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;. The applied function must be exported from &lt;code&gt;Module&lt;/code&gt;. The arity of the function is the length of &lt;code&gt;Args&lt;/code&gt;. Example:</source>
          <target state="translated">적용한 결과 반환 &lt;code&gt;Function&lt;/code&gt; 의 &lt;code&gt;Module&lt;/code&gt; 에 &lt;code&gt;Args&lt;/code&gt; . 적용된 기능은 &lt;code&gt;Module&lt;/code&gt; 에서 내 보내야합니다 . 함수의 arity는 &lt;code&gt;Args&lt;/code&gt; 의 길이입니다 . 예:</target>
        </trans-unit>
        <trans-unit id="5a8b030da557ad21c5d956f96aea50c6ccb4a8b5" translate="yes" xml:space="preserve">
          <source>Returns the result of the latest disk check. &lt;code&gt;Id&lt;/code&gt; is a string that identifies the disk or partition. &lt;code&gt;KByte&lt;/code&gt; is the total size of the disk or partition in kbytes. &lt;code&gt;Capacity&lt;/code&gt; is the percentage of disk space used.</source>
          <target state="translated">최신 디스크 검사 결과를 반환합니다. &lt;code&gt;Id&lt;/code&gt; 는 디스크 또는 파티션을 식별하는 문자열입니다. &lt;code&gt;KByte&lt;/code&gt; 는 디스크 또는 파티션의 전체 크기 ( KB) 입니다. &lt;code&gt;Capacity&lt;/code&gt; 은 사용 된 디스크 공간의 백분율입니다.</target>
        </trans-unit>
        <trans-unit id="08fb64d1fcca474be353d73ce71ec40d76145dbb" translate="yes" xml:space="preserve">
          <source>Returns the result of the latest memory check, where &lt;code&gt;Total&lt;/code&gt; is the total memory size and &lt;code&gt;Allocated&lt;/code&gt; the allocated memory size, in bytes.</source>
          <target state="translated">최신 메모리 검사의 결과를 돌려 &lt;code&gt;Total&lt;/code&gt; 총 메모리 크기와 &lt;code&gt;Allocated&lt;/code&gt; 바이트, 할당 된 메모리 크기를.</target>
        </trans-unit>
        <trans-unit id="b00ec42ba8237ebfadd6315ade14b35bfd08f9e2" translate="yes" xml:space="preserve">
          <source>Returns the results of applying match specification &lt;code&gt;MatchSpec&lt;/code&gt; to all or some objects stored in table &lt;code&gt;Name&lt;/code&gt;. The order of the objects is not specified. For a description of match specifications, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Name&lt;/code&gt; 에 저장된 모든 또는 일부 오브젝트에 일치 스펙 &lt;code&gt;MatchSpec&lt;/code&gt; 을 적용한 결과를 리턴합니다 . 개체의 순서가 지정되지 않았습니다. 일치 스펙에 대한 설명은 &lt;code&gt;ERTS User's Guide&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6efe4481e69930df81a4ee722df788d22bd00f95" translate="yes" xml:space="preserve">
          <source>Returns the results of applying match specification &lt;code&gt;MatchSpec&lt;/code&gt; to some or all objects stored in table &lt;code&gt;Name&lt;/code&gt;. The order of the objects is not specified. For a description of match specifications, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;.</source>
          <target state="translated">일치 스펙 &lt;code&gt;MatchSpec&lt;/code&gt; 을 테이블 &lt;code&gt;Name&lt;/code&gt; 에 저장된 일부 또는 모든 오브젝트 에 적용한 결과를 리턴합니다 . 개체의 순서가 지정되지 않았습니다. 일치 스펙에 대한 설명은 &lt;code&gt;ERTS User's Guide&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a69f43778418dcd230b6c80b662a5cf2771aac1f" translate="yes" xml:space="preserve">
          <source>Returns the return type subtrees of a &lt;code&gt;function_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;function_type&lt;/code&gt; 노드 의 리턴 유형 서브 트리를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="cb40bb7ee217b76d4a18e20b3dd0e03ef80b7a49" translate="yes" xml:space="preserve">
          <source>Returns the reverse list of the grapheme clusters in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Grapheme 클러스터의 역 목록을 &lt;code&gt;String&lt;/code&gt; 으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="26c1c1e09a3dec81e00b7ab0615665b9c61ea7da" translate="yes" xml:space="preserve">
          <source>Returns the right argument subtree of an &lt;code&gt;infix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;infix_expr&lt;/code&gt; 노드 의 오른쪽 인수 서브 트리를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="2909c7e522ae9809a8df41fb7c2e41c21a5a6b38" translate="yes" xml:space="preserve">
          <source>Returns the root directory of Erlang/OTP, which is the directory where it is installed.</source>
          <target state="translated">Erlang / OTP의 루트 디렉토리 (설치된 디렉토리)를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="57a6be5187b200e40ad83a3043f2547d87d24e56" translate="yes" xml:space="preserve">
          <source>Returns the same as &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release/1&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Descr&lt;/code&gt; defaults to &quot;&quot; if no &lt;code&gt;relup&lt;/code&gt; file is found.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release/1&lt;/a&gt;&lt;/code&gt; 과 동일을 리턴합니다 . &lt;code&gt;relup&lt;/code&gt; 파일이 없으면 &lt;code&gt;Descr&lt;/code&gt; 의 기본값은 &quot;&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="8a0ee679826b9f7a02ecdd35a6da0c12ecf155ad" translate="yes" xml:space="preserve">
          <source>Returns the same as &lt;code&gt;&lt;a href=&quot;#statistics_active_tasks_all&quot;&gt;statistics(active_tasks_all)&lt;/a&gt;&lt;/code&gt; with the exception that no information about the dirty IO run queue and its associated schedulers is part of the result. That is, only tasks that are expected to be CPU bound are part of the result.</source>
          <target state="translated">더티 IO 실행 큐 및 연관된 스케줄러에 대한 정보가 결과의 일부가 아니라는 점을 제외하고 는 &lt;code&gt;&lt;a href=&quot;#statistics_active_tasks_all&quot;&gt;statistics(active_tasks_all)&lt;/a&gt;&lt;/code&gt; 와 동일을 리턴합니다 . 즉, CPU 바인딩 된 작업 만 결과의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="73095b9cdee05f87955590bd940b641f95999f74" translate="yes" xml:space="preserve">
          <source>Returns the same as &lt;code&gt;&lt;a href=&quot;#statistics_run_queue_lengths_all&quot;&gt;statistics(run_queue_lengths_all)&lt;/a&gt;&lt;/code&gt; with the exception that no information about the dirty IO run queue is part of the result. That is, only run queues with work that is expected to be CPU bound is part of the result.</source>
          <target state="translated">더티 IO 실행 큐에 대한 정보가 결과의 일부가 아니라는 점을 제외하고 는 &lt;code&gt;&lt;a href=&quot;#statistics_run_queue_lengths_all&quot;&gt;statistics(run_queue_lengths_all)&lt;/a&gt;&lt;/code&gt; 와 동일을 리턴합니다 . 즉, CPU 바운드가 예상되는 작업으로 만 큐를 실행하는 것이 결과의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="7adf8ca0c05d8b9d94d2c389f6852fbb7fea87b0" translate="yes" xml:space="preserve">
          <source>Returns the scheduler ID (&lt;code&gt;SchedulerId&lt;/code&gt;) of the scheduler thread that the calling process is executing on. &lt;code&gt;SchedulerId&lt;/code&gt; is a positive integer, where &lt;code&gt;1 &amp;lt;= SchedulerId &amp;lt;= erlang:system_info(schedulers)&lt;/code&gt;.</source>
          <target state="translated">호출 프로세스가 실행중인 스케줄러 스레드 의 스케줄러 ID ( &lt;code&gt;SchedulerId&lt;/code&gt; )를 리턴합니다 . &lt;code&gt;SchedulerId&lt;/code&gt; 는 양의 정수이며 여기서 &lt;code&gt;1 &amp;lt;= SchedulerId &amp;lt;= erlang:system_info(schedulers)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="780bee34146bcf9ab982542718af08afb736cf50" translate="yes" xml:space="preserve">
          <source>Returns the segment size, &lt;code&gt;N&lt;/code&gt;, of a &lt;code&gt;bitstring_type&lt;/code&gt; node.</source>
          <target state="translated">세그먼트 크기, 반환 &lt;code&gt;N&lt;/code&gt; (A)의, &lt;code&gt;bitstring_type&lt;/code&gt; 의 노드를.</target>
        </trans-unit>
        <trans-unit id="46ad03ed6148caacf44c0f4b523a62b321428e5a" translate="yes" xml:space="preserve">
          <source>Returns the server side capabilities.</source>
          <target state="translated">서버 측 기능을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c2f1a5ba39a2e7b4068910c1bb6caeeb974dd11c" translate="yes" xml:space="preserve">
          <source>Returns the session Id associated with the specified client.</source>
          <target state="translated">지정된 클라이언트와 관련된 세션 ID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6e921783d58b927ff52ece1e3e85e2180a90df3b" translate="yes" xml:space="preserve">
          <source>Returns the set containing every element of &lt;code&gt;Set1&lt;/code&gt; for which &lt;code&gt;Fun&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;Fun&lt;/code&gt; is a tuple &lt;code&gt;{external,&amp;nbsp;Fun2}&lt;/code&gt;, &lt;code&gt;Fun2&lt;/code&gt; is applied to the &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; of each element, otherwise &lt;code&gt;Fun&lt;/code&gt; is applied to each element.</source>
          <target state="translated">반환의 모든 요소가 포함 된 세트 &lt;code&gt;Set1&lt;/code&gt; 과 하는 &lt;code&gt;Fun&lt;/code&gt; 반환 &lt;code&gt;true&lt;/code&gt; . 경우 &lt;code&gt;Fun&lt;/code&gt; 튜플 &lt;code&gt;{external,&amp;nbsp;Fun2}&lt;/code&gt; , &lt;code&gt;Fun2&lt;/code&gt; 에가 에인가되는 &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; 달리, 각 요소의 &lt;code&gt;Fun&lt;/code&gt; 각 소자에인가된다.</target>
        </trans-unit>
        <trans-unit id="0d5f31d90967e40c5ae27dfd3a109d9bc4f795cf" translate="yes" xml:space="preserve">
          <source>Returns the set created by substituting each element of &lt;code&gt;Set1&lt;/code&gt; by the result of applying &lt;code&gt;SetFun&lt;/code&gt; to the element.</source>
          <target state="translated">&lt;code&gt;SetFun&lt;/code&gt; 을 요소 에 적용한 결과로 &lt;code&gt;Set1&lt;/code&gt; 의 각 요소를 대체하여 생성 된 집합을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4ded4e61ebd959681abc1bef70b7bab70b7a34bd" translate="yes" xml:space="preserve">
          <source>Returns the size in bytes.</source>
          <target state="translated">크기를 바이트 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1adc649b70ff13b980748d4c9f615f74d5455c86" translate="yes" xml:space="preserve">
          <source>Returns the size of &lt;code&gt;term&lt;/code&gt; as described above, or &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not one of the two supported types.</source>
          <target state="translated">위에서 설명한대로 &lt;code&gt;term&lt;/code&gt; 의 크기를 반환 하거나 &lt;code&gt;term&lt;/code&gt; 이 지원되는 두 가지 유형 중 하나가 아닌 경우 &lt;code&gt;-1&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3c45cc695875ddb6cc7f2b1189f1a8231fd11eca" translate="yes" xml:space="preserve">
          <source>Returns the size of Erlang term words in bytes as an integer, that is, 4 is returned on a 32-bit architecture, and 8 is returned on a pure 64-bit architecture. On a halfword 64-bit emulator, 4 is returned, as the Erlang terms are stored using a virtual word size of half the system word size.</source>
          <target state="translated">Erlang 용어 단어의 크기를 바이트 단위로 정수로 리턴합니다. 즉, 4는 32 비트 아키텍처에서 리턴되고 8은 순수한 64 비트 아키텍처에서 리턴됩니다. 하프 워드 64 비트 에뮬레이터에서는 시스템 단어 크기의 절반 인 가상 단어 크기를 사용하여 Erlang 용어가 저장되므로 4가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="173e120f4e5cd9244f2955137adf9c7a8ef7b49d" translate="yes" xml:space="preserve">
          <source>Returns the size of the specified file.</source>
          <target state="translated">지정된 파일의 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="857d23a2fb916d0ae37006037d6bfb9ec4c0e412" translate="yes" xml:space="preserve">
          <source>Returns the size specifier subtree of a &lt;code&gt;binary_field&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Body:Size&lt;/code&gt;&quot; or &quot;&lt;code&gt;Body:Size/T1, ..., Tn&lt;/code&gt;&quot;, the result is &lt;code&gt;Size&lt;/code&gt;, otherwise &lt;code&gt;none&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;binary_field&lt;/code&gt; 노드 의 크기 지정자 서브 트리를 리턴합니다 (있는 경우). 경우 &lt;code&gt;Node&lt;/code&gt; &quot;대표 &lt;code&gt;Body:Size&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;Body:Size/T1, ..., Tn&lt;/code&gt; &quot;, 결과는 &lt;code&gt;Size&lt;/code&gt; , 그렇지 않으면, &lt;code&gt;none&lt;/code&gt; 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d004ab489dea2f0aeeb593b488f4b582a8939a7" translate="yes" xml:space="preserve">
          <source>Returns the smallest element in &lt;code&gt;Set&lt;/code&gt;. Assumes that &lt;code&gt;Set&lt;/code&gt; is not empty.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 에서 가장 작은 요소를 반환합니다 . &lt;code&gt;Set&lt;/code&gt; 이 비어 있지 않은 것으로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="1c3abbe75aad34bafe5d6034ad043ee5afb7c6d9" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer not less than &lt;code&gt;Number&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 보다 작은 최소 정수를 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2948d91a206f06005062ef227c23cefac3420207" translate="yes" xml:space="preserve">
          <source>Returns the smallest of &lt;code&gt;Term1&lt;/code&gt; and &lt;code&gt;Term2&lt;/code&gt;. If the terms are equal, &lt;code&gt;Term1&lt;/code&gt; is returned.</source>
          <target state="translated">가장 작은 &lt;code&gt;Term1&lt;/code&gt; 및 &lt;code&gt;Term2&lt;/code&gt; 를 리턴합니다 . 용어가 같으면 &lt;code&gt;Term1&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f5d58a58073d02cbf34112fb08db1c69ff4a64f2" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging &lt;code&gt;List1&lt;/code&gt; and &lt;code&gt;List2&lt;/code&gt;. Both &lt;code&gt;List1&lt;/code&gt; and &lt;code&gt;List2&lt;/code&gt; must be sorted according to the &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Fun&lt;/code&gt; and contain no duplicates before evaluating this function. &lt;code&gt;Fun(A, B)&lt;/code&gt; is to return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; compares less than or equal to &lt;code&gt;B&lt;/code&gt; in the ordering, otherwise &lt;code&gt;false&lt;/code&gt;. When two elements compare equal, the element from &lt;code&gt;List1&lt;/code&gt; is picked and the one from &lt;code&gt;List2&lt;/code&gt; is deleted.</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; 과 &lt;code&gt;List2&lt;/code&gt; 를 병합하여 정렬 된 목록을 반환합니다 . 두 &lt;code&gt;List1&lt;/code&gt; 및 &lt;code&gt;List2&lt;/code&gt; 받는 사람에 따라 정렬되어야 &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Fun&lt;/code&gt; 와이 기능을 평가하기 전에 더 중복 포함하지 않는다. &lt;code&gt;Fun(A, B)&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; 가 순서에서 &lt;code&gt;B&lt;/code&gt; 보다 작거나 같은 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 하고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 두 요소는 동일한 비교할 때, 요소의 &lt;code&gt;List1&lt;/code&gt; 포착되고 하나의 &lt;code&gt;List2&lt;/code&gt; 삭제된다.</target>
        </trans-unit>
        <trans-unit id="b4bc34f84f1721dfad3a40b09431d6dce1538763" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging &lt;code&gt;List1&lt;/code&gt; and &lt;code&gt;List2&lt;/code&gt;. Both &lt;code&gt;List1&lt;/code&gt; and &lt;code&gt;List2&lt;/code&gt; must be sorted according to the &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Fun&lt;/code&gt; before evaluating this function. &lt;code&gt;Fun(A, B)&lt;/code&gt; is to return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; compares less than or equal to &lt;code&gt;B&lt;/code&gt; in the ordering, otherwise &lt;code&gt;false&lt;/code&gt;. When two elements compare equal, the element from &lt;code&gt;List1&lt;/code&gt; is picked before the element from &lt;code&gt;List2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; 과 &lt;code&gt;List2&lt;/code&gt; 를 병합하여 정렬 된 목록을 반환합니다 . 두 &lt;code&gt;List1&lt;/code&gt; 및 &lt;code&gt;List2&lt;/code&gt; 받는 사람에 따라 정렬되어야 &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Fun&lt;/code&gt; 이 기능을 평가하기 전에. &lt;code&gt;Fun(A, B)&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; 가 순서에서 &lt;code&gt;B&lt;/code&gt; 보다 작거나 같은 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 하고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 두 요소가 동일하게 비교되면 &lt;code&gt;List1&lt;/code&gt; 의 요소가 &lt;code&gt;List2&lt;/code&gt; 의 요소보다 먼저 선택 됩니다.</target>
        </trans-unit>
        <trans-unit id="c45b6ecbaeb894a156cc753d39e654c7c473eaec" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging &lt;code&gt;List1&lt;/code&gt; and &lt;code&gt;List2&lt;/code&gt;. Both &lt;code&gt;List1&lt;/code&gt; and &lt;code&gt;List2&lt;/code&gt; must be sorted and contain no duplicates before evaluating this function. When two elements compare equal, the element from &lt;code&gt;List1&lt;/code&gt; is picked and the one from &lt;code&gt;List2&lt;/code&gt; is deleted.</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; 과 &lt;code&gt;List2&lt;/code&gt; 를 병합하여 정렬 된 목록을 반환합니다 . 두 &lt;code&gt;List1&lt;/code&gt; 및 &lt;code&gt;List2&lt;/code&gt; 정렬하고이 기능을 평가하기 전에 더 중복을 포함해야합니다. 두 요소는 동일한 비교할 때, 요소의 &lt;code&gt;List1&lt;/code&gt; 포착되고 하나의 &lt;code&gt;List2&lt;/code&gt; 삭제된다.</target>
        </trans-unit>
        <trans-unit id="a23e9497c72c0f553533a9282871c96987a1a719" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging &lt;code&gt;List1&lt;/code&gt; and &lt;code&gt;List2&lt;/code&gt;. Both &lt;code&gt;List1&lt;/code&gt; and &lt;code&gt;List2&lt;/code&gt; must be sorted before evaluating this function. When two elements compare equal, the element from &lt;code&gt;List1&lt;/code&gt; is picked before the element from &lt;code&gt;List2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; 과 &lt;code&gt;List2&lt;/code&gt; 를 병합하여 정렬 된 목록을 반환합니다 . 두 &lt;code&gt;List1&lt;/code&gt; 및 &lt;code&gt;List2&lt;/code&gt; 이 기능을 평가하기 전에 정렬해야합니다. 두 요소가 동일하게 비교되면 &lt;code&gt;List1&lt;/code&gt; 의 요소가 &lt;code&gt;List2&lt;/code&gt; 의 요소보다 먼저 선택 됩니다.</target>
        </trans-unit>
        <trans-unit id="ca737eaac75acf4ab6de86d9c54c86d30ff95c2b" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging &lt;code&gt;List1&lt;/code&gt;, &lt;code&gt;List2&lt;/code&gt;, and &lt;code&gt;List3&lt;/code&gt;. All of &lt;code&gt;List1&lt;/code&gt;, &lt;code&gt;List2&lt;/code&gt;, and &lt;code&gt;List3&lt;/code&gt; must be sorted and contain no duplicates before evaluating this function. When two elements compare equal, the element from &lt;code&gt;List1&lt;/code&gt; is picked if there is such an element, otherwise the element from &lt;code&gt;List2&lt;/code&gt; is picked, and the other is deleted.</source>
          <target state="translated">합병에 의해 형성되는 정렬 된 목록 반환 &lt;code&gt;List1&lt;/code&gt; , &lt;code&gt;List2&lt;/code&gt; 와 &lt;code&gt;List3&lt;/code&gt; . 모든 &lt;code&gt;List1&lt;/code&gt; , &lt;code&gt;List2&lt;/code&gt; 와 &lt;code&gt;List3&lt;/code&gt; 정렬이 기능을 평가하기 전에 더 중복이 포함되어야합니다. 두 요소가 동일하게 비교 될 때 이러한 요소 가 있으면 &lt;code&gt;List1&lt;/code&gt; 의 요소 가 선택되고, 그렇지 않으면 &lt;code&gt;List2&lt;/code&gt; 의 요소 가 선택되고 다른 요소는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="071798d5abcaa1f58a1732a79199253471093fff" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging &lt;code&gt;List1&lt;/code&gt;, &lt;code&gt;List2&lt;/code&gt;, and &lt;code&gt;List3&lt;/code&gt;. All of &lt;code&gt;List1&lt;/code&gt;, &lt;code&gt;List2&lt;/code&gt;, and &lt;code&gt;List3&lt;/code&gt; must be sorted before evaluating this function. When two elements compare equal, the element from &lt;code&gt;List1&lt;/code&gt;, if there is such an element, is picked before the other element, otherwise the element from &lt;code&gt;List2&lt;/code&gt; is picked before the element from &lt;code&gt;List3&lt;/code&gt;.</source>
          <target state="translated">합병에 의해 형성되는 정렬 된 목록 반환 &lt;code&gt;List1&lt;/code&gt; , &lt;code&gt;List2&lt;/code&gt; 와 &lt;code&gt;List3&lt;/code&gt; . 모든 &lt;code&gt;List1&lt;/code&gt; , &lt;code&gt;List2&lt;/code&gt; 와 &lt;code&gt;List3&lt;/code&gt; 이 기능을 평가하기 전에 정렬해야합니다. 두 요소는 동일한 비교할 때, 요소의 &lt;code&gt;List1&lt;/code&gt; 그러한 요소가 있다면, 그렇지 않은 경우의 요소는 다른 요소를 이전에 포착되는 &lt;code&gt;List2&lt;/code&gt; 발 소자 전에 촬상되는 &lt;code&gt;List3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="194eeeb70df71ff573647efa6359e64712b0609f" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging &lt;code&gt;TupleList1&lt;/code&gt; and &lt;code&gt;TupleList2&lt;/code&gt;. The merge is performed on the &lt;code&gt;N&lt;/code&gt;th element of each tuple. Both &lt;code&gt;TupleList1&lt;/code&gt; and &lt;code&gt;TupleList2&lt;/code&gt; must be key-sorted before evaluating this function. When two tuples compare equal, the tuple from &lt;code&gt;TupleList1&lt;/code&gt; is picked before the tuple from &lt;code&gt;TupleList2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TupleList1&lt;/code&gt; 과 &lt;code&gt;TupleList2&lt;/code&gt; 를 병합하여 정렬 된 목록을 리턴합니다 . 병합은 각 튜플 의 &lt;code&gt;N&lt;/code&gt; 번째 요소에서 수행됩니다 . 두 &lt;code&gt;TupleList1&lt;/code&gt; 및 &lt;code&gt;TupleList2&lt;/code&gt; 는 키 분류이 기능을 평가하기 전에해야합니다. 두 개의 튜플이 동일하게 비교되면 &lt;code&gt;TupleList1&lt;/code&gt; 의 튜플이 &lt;code&gt;TupleList2&lt;/code&gt; 의 튜플보다 먼저 선택 됩니다.</target>
        </trans-unit>
        <trans-unit id="135679759f284a03c2774505813cb2950fb15c18" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging &lt;code&gt;TupleList1&lt;/code&gt; and &lt;code&gt;TupleList2&lt;/code&gt;. The merge is performed on the &lt;code&gt;N&lt;/code&gt;th element of each tuple. Both &lt;code&gt;TupleList1&lt;/code&gt; and &lt;code&gt;TupleList2&lt;/code&gt; must be key-sorted without duplicates before evaluating this function. When two tuples compare equal, the tuple from &lt;code&gt;TupleList1&lt;/code&gt; is picked and the one from &lt;code&gt;TupleList2&lt;/code&gt; is deleted.</source>
          <target state="translated">&lt;code&gt;TupleList1&lt;/code&gt; 과 &lt;code&gt;TupleList2&lt;/code&gt; 를 병합하여 정렬 된 목록을 리턴합니다 . 병합은 각 튜플 의 &lt;code&gt;N&lt;/code&gt; 번째 요소에서 수행됩니다 . 두 &lt;code&gt;TupleList1&lt;/code&gt; 및 &lt;code&gt;TupleList2&lt;/code&gt; 는 키 분류이 기능을 평가하기 전에 중복없이해야합니다. 두 튜플 동등 비교하면에서 튜플 &lt;code&gt;TupleList1&lt;/code&gt; 이 촬상되고 중 하나 &lt;code&gt;TupleList2&lt;/code&gt; 가 삭제된다.</target>
        </trans-unit>
        <trans-unit id="25b82a9aec3e3fa8f001f15f7b3cb95224735088" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging all the sublists of &lt;code&gt;ListOfLists&lt;/code&gt;. All sublists must be sorted and contain no duplicates before evaluating this function. When two elements compare equal, the element from the sublist with the lowest position in &lt;code&gt;ListOfLists&lt;/code&gt; is picked and the other is deleted.</source>
          <target state="translated">&lt;code&gt;ListOfLists&lt;/code&gt; 의 모든 하위 목록을 병합하여 정렬 된 목록을 반환합니다 . 이 기능을 평가하기 전에 모든 하위 목록을 정렬하고 중복 항목을 포함하지 않아야합니다. 두 요소가 동일하게 비교되면 &lt;code&gt;ListOfLists&lt;/code&gt; 에서 위치가 가장 낮은 하위 목록의 요소 가 선택되고 다른 요소는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="83c7fa0708d976a393f5fc46e8fcaf4b68902cd2" translate="yes" xml:space="preserve">
          <source>Returns the sorted list formed by merging all the sublists of &lt;code&gt;ListOfLists&lt;/code&gt;. All sublists must be sorted before evaluating this function. When two elements compare equal, the element from the sublist with the lowest position in &lt;code&gt;ListOfLists&lt;/code&gt; is picked before the other element.</source>
          <target state="translated">&lt;code&gt;ListOfLists&lt;/code&gt; 의 모든 하위 목록을 병합하여 정렬 된 목록을 반환합니다 . 이 기능을 평가하기 전에 모든 하위 목록을 정렬해야합니다. 두 요소가 동일하게 비교되면 &lt;code&gt;ListOfLists&lt;/code&gt; 에서 가장 낮은 위치를 가진 하위 목록의 요소 가 다른 요소보다 먼저 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="74e490ce784707a3304c0f81811df03cb1ddf1c4" translate="yes" xml:space="preserve">
          <source>Returns the source code filename &lt;code&gt;File&lt;/code&gt; for an interpreted module &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">해석 된 모듈 &lt;code&gt;Module&lt;/code&gt; 의 소스 코드 파일 이름 &lt;code&gt;File&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="daa8c08bee9c1911d1f65225fd779676b05b7864" translate="yes" xml:space="preserve">
          <source>Returns the stacktrace subtree of a &lt;code&gt;class_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;class_qualifier&lt;/code&gt; 노드 의 스택 추적 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e4a4fe658b36b58467feee7899c77ae90b783dc5" translate="yes" xml:space="preserve">
          <source>Returns the state after performing jump calculation to the given state.</source>
          <target state="translated">주어진 상태로 점프 계산을 수행 한 후 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ea9423f566c3e54edc79bd440d2f7be4eb5a0ea7" translate="yes" xml:space="preserve">
          <source>Returns the state after performing jump calculation to the state in the process dictionary.</source>
          <target state="translated">프로세스 사전의 상태로 점프 계산을 수행 한 후 상태를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="45cc9b4d42e68e53f146e1d0a44565cefa2394b9" translate="yes" xml:space="preserve">
          <source>Returns the state of the &lt;code&gt;Inet&lt;/code&gt; configuration database in form of a list of recorded configuration parameters. For more information, see &lt;code&gt;ERTS User's Guide: Inet Configuration&lt;/code&gt;.</source>
          <target state="translated">기록 된 구성 매개 변수 목록 형식으로 &lt;code&gt;Inet&lt;/code&gt; 구성 데이터베이스 의 상태를 리턴합니다 . 자세한 내용은 &lt;code&gt;ERTS User's Guide: Inet Configuration&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f6e941665e0e311151432958f8b3403a46e5859" translate="yes" xml:space="preserve">
          <source>Returns the state of the time offset:</source>
          <target state="translated">시간 오프셋의 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="01f52e95249407b99d14346db6d580e7a7494620" translate="yes" xml:space="preserve">
          <source>Returns the string representation of a cipher suite.</source>
          <target state="translated">암호 제품군의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="81d1abc59505c58d5af050b82d0b437739658327" translate="yes" xml:space="preserve">
          <source>Returns the sublist of &lt;code&gt;List1&lt;/code&gt; starting at &lt;code&gt;Start&lt;/code&gt; and with (maximum) &lt;code&gt;Len&lt;/code&gt; elements. It is not an error for &lt;code&gt;Start+Len&lt;/code&gt; to exceed the length of the list.</source>
          <target state="translated">&lt;code&gt;Start&lt;/code&gt; 에서 시작 하여 &lt;code&gt;Len&lt;/code&gt; 요소 로 시작 하여 &lt;code&gt;List1&lt;/code&gt; 의 하위 목록을 반환합니다 . &lt;code&gt;Start+Len&lt;/code&gt; 이 목록의 길이를 초과하는 것은 오류가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="b471fbdc972845960290923ec2e902d57ff94b89" translate="yes" xml:space="preserve">
          <source>Returns the sublist of &lt;code&gt;List1&lt;/code&gt; starting at position 1 and with (maximum) &lt;code&gt;Len&lt;/code&gt; elements. It is not an error for &lt;code&gt;Len&lt;/code&gt; to exceed the length of the list, in that case the whole list is returned.</source>
          <target state="translated">위치 1에서 시작하여 최대 &lt;code&gt;Len&lt;/code&gt; 요소 로 &lt;code&gt;List1&lt;/code&gt; 의 하위 목록을 반환합니다 . &lt;code&gt;Len&lt;/code&gt; 이 목록의 길이를 초과하는 것은 오류가 아니며 ,이 경우 전체 목록이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="94709293140b89b7c6153b9c4a9b7815ee2ae2c4" translate="yes" xml:space="preserve">
          <source>Returns the suffix subtree of a &lt;code&gt;list&lt;/code&gt; node, if one exists. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt;&quot;, the returned value is &lt;code&gt;Tail&lt;/code&gt;, otherwise, i.e., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[E1, ..., En]&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 노드 의 접미사 서브 트리가있는 경우이를 리턴 합니다. 경우 &lt;code&gt;Node&lt;/code&gt; 나타내는 &quot; &lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt; &quot;반환 된 값은 &lt;code&gt;Tail&lt;/code&gt; 경우, 즉, 그렇지 않으면, &lt;code&gt;Node&lt;/code&gt; &quot;대표 &lt;code&gt;[E1, ..., En]&lt;/code&gt; &quot; &lt;code&gt;none&lt;/code&gt; 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e57309fced1ccb9bdea2a2297ce18b7904f23b1b" translate="yes" xml:space="preserve">
          <source>Returns the sum of the elements in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 의 요소 합계를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a7ab9c6285ee37c8277f4c3b0e70eeb26bcfc8e4" translate="yes" xml:space="preserve">
          <source>Returns the symbol of &lt;code&gt;Token&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; 의 기호를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="70d0fea6a1182cd003abf417eeba54f240eeb6df" translate="yes" xml:space="preserve">
          <source>Returns the syntax tree corresponding to an Erlang term. &lt;code&gt;Term&lt;/code&gt; must be a literal term, i.e., one that can be represented as a source code literal. Thus, it may not contain a process identifier, port, reference, binary or function value as a subterm. The function recognises printable strings, in order to get a compact and readable representation. Evaluation fails with reason &lt;code&gt;badarg&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is not a literal term.</source>
          <target state="translated">Erlang 용어에 해당하는 구문 트리를 반환합니다. &lt;code&gt;Term&lt;/code&gt; 는 리터럴 용어, 즉 소스 코드 리터럴로 표현 될 수있는 용어 여야합니다. 따라서 하위 용어로 프로세스 식별자, 포트, 참조, 이진 또는 함수 값을 포함하지 않을 수 있습니다. 이 함수는 작고 읽기 쉬운 표현을 얻기 위해 인쇄 가능한 문자열을 인식합니다. &lt;code&gt;Term&lt;/code&gt; 가 리터럴 용어가 아닌 경우 이유 &lt;code&gt;badarg&lt;/code&gt; 로 평가에 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="50fb82953f52339845abc2f3f78334ad2e7e97bc" translate="yes" xml:space="preserve">
          <source>Returns the system time for the given microstate statistics values. System time is the accumulated time of all threads.</source>
          <target state="translated">주어진 마이크로 스테이트 통계 값에 대한 시스템 시간을 리턴합니다. 시스템 시간은 모든 스레드의 누적 시간입니다.</target>
        </trans-unit>
        <trans-unit id="fe7fd1188dd96e73eb0aaa4b2265f6582f44a9fe" translate="yes" xml:space="preserve">
          <source>Returns the table name given the pid of a process that handles requests to a table, or &lt;code&gt;undefined&lt;/code&gt; if there is no such table.</source>
          <target state="translated">테이블에 대한 요청을 처리하는 프로세스의 pid가 주어진 테이블 이름을 리턴하거나 테이블 이없는 경우 &lt;code&gt;undefined&lt;/code&gt; 테이블 이름을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="ff01cbee5610eef3d4c5958a49ffb84c3226804e" translate="yes" xml:space="preserve">
          <source>Returns the tail item of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">큐 &lt;code&gt;Q&lt;/code&gt; 의 테일 항목을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="35fb2a31a736d5558d700fac8784dda909dbc4f3" translate="yes" xml:space="preserve">
          <source>Returns the tail of &lt;code&gt;List&lt;/code&gt;, that is, the list minus the first element, for example:</source>
          <target state="translated">의 꼬리를 돌려 &lt;code&gt;List&lt;/code&gt; , 예를 들어 목록을 뺀 첫 번째 요소입니다 :</target>
        </trans-unit>
        <trans-unit id="ebe12ec4aaa17b0c03548cd50bf2124a30a8e8ee" translate="yes" xml:space="preserve">
          <source>Returns the tail of a &lt;code&gt;list&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents a single-element list &quot;&lt;code&gt;[E]&lt;/code&gt;&quot;, then the result has type &lt;code&gt;nil&lt;/code&gt;, representing &quot;&lt;code&gt;[]&lt;/code&gt;&quot;. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[E1, E2 ...]&lt;/code&gt;&quot;, the result will represent &quot;&lt;code&gt;[E2 ...]&lt;/code&gt;&quot;, and if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[Head | Tail]&lt;/code&gt;&quot;, the result will represent &quot;&lt;code&gt;Tail&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 노드 의 꼬리를 반환합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 단일 요소리스트 &quot;나타냄 &lt;code&gt;[E]&lt;/code&gt; 를 &quot;, 결과는 입력 갖는 &lt;code&gt;nil&lt;/code&gt; &quot;를 나타내는, &lt;code&gt;[]&lt;/code&gt; &quot;. 경우 &lt;code&gt;Node&lt;/code&gt; &quot;대표 &lt;code&gt;[E1, E2 ...]&lt;/code&gt; &quot;, 결과는 &quot;대표 할 것이다 &lt;code&gt;[E2 ...]&lt;/code&gt; 를 &quot;, 그리고 경우에 &lt;code&gt;Node&lt;/code&gt; 나타내는 &quot; &lt;code&gt;[Head | Tail]&lt;/code&gt; &quot;결과는 &quot;나타냅니다 &lt;code&gt;Tail&lt;/code&gt; .&quot;</target>
        </trans-unit>
        <trans-unit id="0a12237222166853b5a89a818940e6ff2351dfb0" translate="yes" xml:space="preserve">
          <source>Returns the template subtree of a &lt;code&gt;binary_comp&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;binary_comp&lt;/code&gt; 노드 의 템플릿 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="702601c07dc86b3fe8bf7ac761650d5ee0da52a5" translate="yes" xml:space="preserve">
          <source>Returns the template subtree of a &lt;code&gt;list_comp&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;list_comp&lt;/code&gt; 노드 의 템플릿 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="af59153dd7b8a2925ae917296e7c18925b8e42f4" translate="yes" xml:space="preserve">
          <source>Returns the term representing the annotations Anno.</source>
          <target state="translated">주석 Anno를 나타내는 용어를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="78e5298912f43d506098d5b46ce2fd5c0c00dcf3" translate="yes" xml:space="preserve">
          <source>Returns the text of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations. If there is no text, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; 의 주석 모음 텍스트를 반환합니다 . 텍스트가 없으면 &lt;code&gt;undefined&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e69d9974999864fcec84e59f03592afb1942d0a2" translate="yes" xml:space="preserve">
          <source>Returns the text of the annotations Anno. If there is no text, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">주석 Anno의 텍스트를 반환합니다. 텍스트가 없으면 &lt;code&gt;undefined&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1c9bd8912d68f35f0850f6c3b07bc2f2f6446279" translate="yes" xml:space="preserve">
          <source>Returns the thread identifier of the calling thread.</source>
          <target state="translated">호출 스레드의 스레드 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="adcd2659c875474f03b91215729a762c89a2e131" translate="yes" xml:space="preserve">
          <source>Returns the thread-specific data associated with &lt;code&gt;key&lt;/code&gt; for the calling thread.</source>
          <target state="translated">호출 스레드의 &lt;code&gt;key&lt;/code&gt; 와 연관된 스레드 특정 데이터를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6184cb7e14a5a39a89d9598d187ddd4ab847612c" translate="yes" xml:space="preserve">
          <source>Returns the threshold, in percent, for disk space utilization.</source>
          <target state="translated">디스크 공간 활용에 대한 임계 값을 백분율로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a209af4cfa580ae9dec072cb95ff5a144fe5d535" translate="yes" xml:space="preserve">
          <source>Returns the threshold, in percent, for process memory allocation.</source>
          <target state="translated">프로세스 메모리 할당에 대한 임계 값을 백분율로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2e8ae8b80f44941f0354f35e30e56e3591321a4a" translate="yes" xml:space="preserve">
          <source>Returns the threshold, in percent, for system memory allocation.</source>
          <target state="translated">시스템 메모리 할당에 대한 임계 값을 백분율로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3ba592a137450a6e0a1d92d9452782523d93985a" translate="yes" xml:space="preserve">
          <source>Returns the time interval, in milliseconds, for the periodic disk space check.</source>
          <target state="translated">주기적 디스크 공간 확인을위한 시간 간격 (밀리 초)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7a4c2ff583079c4223a48598e353333c4ad87fa6" translate="yes" xml:space="preserve">
          <source>Returns the time interval, in milliseconds, for the periodic memory check.</source>
          <target state="translated">주기적 메모리 점검을위한 시간 간격 (밀리 초)을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e50c10f066dec803f4d572a77aee91c9ed6468ab" translate="yes" xml:space="preserve">
          <source>Returns the timeout subtree of a &lt;code&gt;receive_expr&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;receive C1; ...; Cn end&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;receive C1; ...; Cn after Timeout -&amp;gt; ... end&lt;/code&gt;&quot;, &lt;code&gt;Timeout&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;receive_expr&lt;/code&gt; 노드 의 시간 종료 서브 트리를 리턴합니다 (있는 경우). &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;receive C1; ...; Cn end&lt;/code&gt; &quot;를 나타내는 경우 , &lt;code&gt;none&lt;/code&gt; 리턴 되지 않습니다 . 그렇지 않으면 &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;receive C1; ...; Cn after Timeout -&amp;gt; ... end&lt;/code&gt; &quot;를 나타내는 경우 &lt;code&gt;Timeout&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="d850c03018530c822424cd693ecfaf95779ec430" translate="yes" xml:space="preserve">
          <source>Returns the timeout value, in seconds, for memory checks.</source>
          <target state="translated">메모리 검사에 대한 시간 초과 값을 초 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="167c82d47833e8f23a46777124537484c1351c54" translate="yes" xml:space="preserve">
          <source>Returns the total length of all normal run-queues. That is, the number of processes and ports that are ready to run on all available normal run-queues. Dirty run queues are not part of the result. The information is gathered atomically. That is, the result is a consistent snapshot of the state, but this operation is much more expensive compared to &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths&quot;&gt;statistics(total_run_queue_lengths)&lt;/a&gt;&lt;/code&gt;, especially when a large amount of schedulers is used.</source>
          <target state="translated">모든 일반 런 큐의 총 길이를 반환합니다. 즉, 사용 가능한 모든 정상 실행 큐에서 실행할 준비가 된 프로세스 및 포트 수입니다. 더티 런 큐는 결과의 일부가 아닙니다. 정보는 원자 적으로 수집됩니다. 즉, 결과는 일관된 상태에 대한 스냅 샷이지만 &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths&quot;&gt;statistics(total_run_queue_lengths)&lt;/a&gt;&lt;/code&gt; 이 많은 ( 특히, 대량의 스케줄러가 사용되는 경우 ) 통계 (total_run_queue_lengths)에 비해 훨씬 비쌉니다 .</target>
        </trans-unit>
        <trans-unit id="5c8ac34a4b5eb236b000a43ba0070200b935ddec" translate="yes" xml:space="preserve">
          <source>Returns the total number of context switches since the system started.</source>
          <target state="translated">시스템이 시작된 이후 총 컨텍스트 전환 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9e96ff772be734fb7f3182c7a36622aa62d9bec1" translate="yes" xml:space="preserve">
          <source>Returns the true word size of the emulator, that is, the size of a pointer. The value is given in bytes as an integer. On a pure 32-bit architecture, 4 is returned. On both a half word and on a pure 64-bit architecture, 8 is returned.</source>
          <target state="translated">에뮬레이터의 실제 단어 크기, 즉 포인터 크기를 반환합니다. 값은 바이트 단위의 정수로 제공됩니다. 순수한 32 비트 아키텍처에서는 4가 반환됩니다. 하프 워드와 순수한 64 비트 아키텍처 모두에서 8이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="29e01dd29e4b8eeec8d00b21b1460a67b0b44cda" translate="yes" xml:space="preserve">
          <source>Returns the tuple &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt;, which is the elapsed time since 00:00 GMT, January 1, 1970 (zero hour), if provided by the underlying OS. Otherwise some other point in time is chosen. It is also guaranteed that the following calls to this BIF return continuously increasing values. Hence, the return value from &lt;code&gt;erlang:now/0&lt;/code&gt; can be used to generate unique time stamps. If it is called in a tight loop on a fast machine, the time of the node can become skewed.</source>
          <target state="translated">튜플 &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt; 반환합니다 . 기본 OS에서 제공하는 경우 1970 년 1 월 1 일 00:00 GMT (제로 시간) 이후 경과 시간입니다. 그렇지 않으면 다른 시점이 선택됩니다. 이 BIF에 대한 다음 호출이 지속적으로 증가하는 값을 리턴 함을 보장합니다. 따라서 &lt;code&gt;erlang:now/0&lt;/code&gt; 의 반환 값을 사용하여 고유 한 타임 스탬프를 생성 할 수 있습니다. 빠른 기계에서 단단한 루프로 호출되면 노드 시간이 왜곡 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3b1463267f5ac12ebebbdedde26d3ceb89f3b4f" translate="yes" xml:space="preserve">
          <source>Returns the type in &lt;code&gt;type&lt;/code&gt; and size in &lt;code&gt;size&lt;/code&gt; of the encoded term. For strings and atoms, size is the number of characters &lt;strong&gt;not&lt;/strong&gt; including the terminating &lt;code&gt;NULL&lt;/code&gt;. For binaries, &lt;code&gt;size&lt;/code&gt; is the number of bytes. For lists and tuples, &lt;code&gt;size&lt;/code&gt; is the arity of the object. For other types, &lt;code&gt;size&lt;/code&gt; is 0. In all cases, &lt;code&gt;index&lt;/code&gt; is left unchanged.</source>
          <target state="translated">인코딩 된 용어의 &lt;code&gt;size&lt;/code&gt; 및 유형으로 &lt;code&gt;type&lt;/code&gt; 반환합니다 . 문자열 및 원자의 경우 size는 종료 &lt;code&gt;NULL&lt;/code&gt; 을 포함 &lt;strong&gt;하지 않는&lt;/strong&gt; 문자 수입니다 . 이진의 경우 &lt;code&gt;size&lt;/code&gt; 는 바이트 수입니다. 리스트와 튜플의 경우 &lt;code&gt;size&lt;/code&gt; 는 객체의 arity입니다. 다른 유형의 경우 &lt;code&gt;size&lt;/code&gt; 는 0입니다. 모든 경우에 &lt;code&gt;index&lt;/code&gt; 은 변경되지 않습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21792a3be5babae0742d56a77d6c8f495c3e19fc" translate="yes" xml:space="preserve">
          <source>Returns the type name represented by a syntax tree. If &lt;code&gt;Node&lt;/code&gt; represents a type name, such as &quot;&lt;code&gt;foo/1&lt;/code&gt;&quot; or &quot;&lt;code&gt;bloggs:fred/2&lt;/code&gt;&quot;, a uniform representation of that name is returned.</source>
          <target state="translated">구문 트리로 표시되는 형식 이름을 반환합니다. &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;foo/1&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;bloggs:fred/2&lt;/code&gt; &quot; 와 같은 유형 이름을 나타내는 경우 해당 이름의 균일 한 표현이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="757ea4569eecfd721e40ee334b7cc5bd590a9145" translate="yes" xml:space="preserve">
          <source>Returns the type name subtree of a &lt;code&gt;type_application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;type_application&lt;/code&gt; 노드 의 유형 이름 서브 트리를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="5aa1aa28205106c9a4ac4677c88b7b4ccbf4d535" translate="yes" xml:space="preserve">
          <source>Returns the type name subtree of a &lt;code&gt;user_type_application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;user_type_application&lt;/code&gt; 노드 의 유형 이름 서브 트리를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="62e8123a5a03ab2b32e61b35a2f49fa2694bda29" translate="yes" xml:space="preserve">
          <source>Returns the type subtree of a &lt;code&gt;constraint&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;constraint&lt;/code&gt; 노드 의 유형 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="978c543d42f9ef63c36f1862c593509b66fdea23" translate="yes" xml:space="preserve">
          <source>Returns the type subtree of a &lt;code&gt;record_access&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_access&lt;/code&gt; 노드 의 유형 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="00bf21f219f9e8f05946d45cb6dfc24b2732e459" translate="yes" xml:space="preserve">
          <source>Returns the type subtree of a &lt;code&gt;record_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_expr&lt;/code&gt; 노드 의 유형 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="79aa10b0c557c6961d2b51ea21cd6870f9144d9b" translate="yes" xml:space="preserve">
          <source>Returns the type subtree of a &lt;code&gt;record_index_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_index_expr&lt;/code&gt; 노드 의 유형 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4ce99c0c61b3a85779ae8992f587b73884d52696" translate="yes" xml:space="preserve">
          <source>Returns the type subtree of a &lt;code&gt;record_type_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_type_field&lt;/code&gt; 노드 의 유형 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c3d4a847d9cf70a24f55316522a38ebf149b79c6" translate="yes" xml:space="preserve">
          <source>Returns the type subtree of a &lt;code&gt;typed_record_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;typed_record_field&lt;/code&gt; 노드 의 유형 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7901930da33e332b2ee06c5de0da706ef6e09093" translate="yes" xml:space="preserve">
          <source>Returns the type subtrees of an &lt;code&gt;annotated_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;annotated_type&lt;/code&gt; 노드 의 유형 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="20f0c13c6c7cb9c5f011c9633ecaa65f8e458b56" translate="yes" xml:space="preserve">
          <source>Returns the type tag of &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not represent a syntax tree, evaluation fails with reason &lt;code&gt;badarg&lt;/code&gt;. Node types currently defined by this module are:</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 의 유형 태그를 반환합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 구문 트리를 나타내지 않는, 평가는 이유와 함께 실패 &lt;code&gt;badarg&lt;/code&gt; . 이 모듈에서 현재 정의 된 노드 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab05a0870c26b1d3bf389e2db4653215dd39b032" translate="yes" xml:space="preserve">
          <source>Returns the union of &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; 의 조합을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c6b6c7dbfbfc74f5bed95635c3bb646dc7c206f5" translate="yes" xml:space="preserve">
          <source>Returns the user data field of the prettyprinter context.</source>
          <target state="translated">prettyprinter 컨텍스트의 사용자 데이터 필드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2d8750d3ac3c66af020e922f090401daa74a6520" translate="yes" xml:space="preserve">
          <source>Returns the user-defined &lt;code&gt;CpuTopology&lt;/code&gt;. For more information, see command-line flag &lt;code&gt;+sct&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt; and argument &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 &lt;code&gt;CpuTopology&lt;/code&gt; 를 리턴합니다 . 자세한 내용 은 &lt;code&gt;erl(1)&lt;/code&gt; 명령 줄 플래그 &lt;code&gt;+sct&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt; 인수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ed56f1858caf089a9f3b3aa3f1ea877f33d025d" translate="yes" xml:space="preserve">
          <source>Returns the user-requested range of printable Unicode characters.</source>
          <target state="translated">인쇄 가능한 유니 코드 문자의 사용자 요청 범위를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="03f2cf42009c8c0edb185a60f659ed6a3d808867" translate="yes" xml:space="preserve">
          <source>Returns the value &lt;code&gt;Val&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; and deletes it from the process dictionary. Returns &lt;code&gt;undefined&lt;/code&gt; if no value is associated with &lt;code&gt;Key&lt;/code&gt;. Example:</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; 와 연관된 &lt;code&gt;Val&lt;/code&gt; 값을 리턴하고 이를 프로세스 사전에서 삭제합니다. &lt;code&gt;Key&lt;/code&gt; 와 연관된 값이 없으면 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="41db4c68dfafc264a56e886445af020d82871e70" translate="yes" xml:space="preserve">
          <source>Returns the value &lt;code&gt;Val&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; in the process dictionary, or &lt;code&gt;undefined&lt;/code&gt; if &lt;code&gt;Key&lt;/code&gt; does not exist. Example:</source>
          <target state="translated">값 반환 &lt;code&gt;Val&lt;/code&gt; 과 관련된 &lt;code&gt;Key&lt;/code&gt; 프로세스 사전에, 또는 &lt;code&gt;undefined&lt;/code&gt; 경우 &lt;code&gt;Key&lt;/code&gt; 존재하지 않습니다. 예:</target>
        </trans-unit>
        <trans-unit id="ed030a8a9f75437f0b768bda478aef8688420131" translate="yes" xml:space="preserve">
          <source>Returns the value associated with &lt;code&gt;Key&lt;/code&gt; in dictionary &lt;code&gt;Dict&lt;/code&gt;. This function assumes that &lt;code&gt;Key&lt;/code&gt; is present in dictionary &lt;code&gt;Dict&lt;/code&gt;, and an exception is generated if &lt;code&gt;Key&lt;/code&gt; is not in the dictionary.</source>
          <target state="translated">사전 &lt;code&gt;Dict&lt;/code&gt; 의 &lt;code&gt;Key&lt;/code&gt; 와 관련된 값을 반환합니다 . 이 함수는 것으로 가정 &lt;code&gt;Key&lt;/code&gt; 사전에 존재하는 &lt;code&gt;Dict&lt;/code&gt; 한 경우 예외가 발생 &lt;code&gt;Key&lt;/code&gt; 사전에 아니다.</target>
        </trans-unit>
        <trans-unit id="55177b57e303c78e9bd839726c17cb3fa4de2bf1" translate="yes" xml:space="preserve">
          <source>Returns the value associated with &lt;code&gt;Key&lt;/code&gt; in dictionary &lt;code&gt;Orddict&lt;/code&gt;. This function assumes that the &lt;code&gt;Key&lt;/code&gt; is present in the dictionary. An exception is generated if &lt;code&gt;Key&lt;/code&gt; is not in the dictionary.</source>
          <target state="translated">사전 &lt;code&gt;Orddict&lt;/code&gt; 의 &lt;code&gt;Key&lt;/code&gt; 와 관련된 값을 반환합니다 . 이 함수는 &lt;code&gt;Key&lt;/code&gt; 가 사전에 있다고 가정합니다 . &lt;code&gt;Key&lt;/code&gt; 가 사전에 없으면 예외가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="3f882d2ee71a239bcd46aedfcb1ac615abdbfd00" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;code&gt;Expr&lt;/code&gt; unless an exception occurs during the evaluation. In that case, the exception is caught.</source>
          <target state="translated">평가 중에 예외가 발생하지 않는 한 &lt;code&gt;Expr&lt;/code&gt; 값을 반환합니다 . 이 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b75af0fec495df73f6712ca6c82252f8e8d9c7f4" translate="yes" xml:space="preserve">
          <source>Returns the value of a boolean key/value option. If &lt;code&gt;lookup(Key, List)&lt;/code&gt; would yield &lt;code&gt;{Key, true}&lt;/code&gt;, this function returns &lt;code&gt;true&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">부울 키 / 값 옵션의 값을 반환합니다. 경우 &lt;code&gt;lookup(Key, List)&lt;/code&gt; 얻을 것이다 &lt;code&gt;{Key, true}&lt;/code&gt; ,이 함수는 반환 &lt;code&gt;true&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8caefa51cfa4175d485e7aae2ed341cbb9ef6e0a" translate="yes" xml:space="preserve">
          <source>Returns the value of a simple key/value property in &lt;code&gt;List&lt;/code&gt;. If &lt;code&gt;lookup(Key, List)&lt;/code&gt; would yield &lt;code&gt;{Key, Value}&lt;/code&gt;, this function returns the corresponding &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;Default&lt;/code&gt;.</source>
          <target state="translated">반환에서 간단한 키 / 값 속성 값 &lt;code&gt;List&lt;/code&gt; . 경우 &lt;code&gt;lookup(Key, List)&lt;/code&gt; 얻을 것이다 &lt;code&gt;{Key, Value}&lt;/code&gt; 이 함수는 해당 반환 &lt;code&gt;Value&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;Default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77b31e20072788b4084ffefe0bbcff0d45c99ec0" translate="yes" xml:space="preserve">
          <source>Returns the value of configuration parameter &lt;code&gt;Par&lt;/code&gt; for &lt;code&gt;Application&lt;/code&gt;. If the application argument is omitted, it defaults to the application of the calling process.</source>
          <target state="translated">반환 구성 매개 변수의 값 &lt;code&gt;Par&lt;/code&gt; 에 대한 &lt;code&gt;Application&lt;/code&gt; . application 인수가 생략되면 기본값은 호출 프로세스의 응용 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="955814289b232b69c373c8821bd5c59da5d6cb27" translate="yes" xml:space="preserve">
          <source>Returns the value of the application specification key &lt;code&gt;Key&lt;/code&gt; for &lt;code&gt;Application&lt;/code&gt;. If the application argument is omitted, it defaults to the application of the calling process.</source>
          <target state="translated">반환 응용 프로그램 사양 키의 값 &lt;code&gt;Key&lt;/code&gt; 에 대한 &lt;code&gt;Application&lt;/code&gt; . application 인수가 생략되면 기본값은 호출 프로세스의 응용 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="634c0d60d18f033fec209251d155d41259e07b31" translate="yes" xml:space="preserve">
          <source>Returns the value of the distribution buffer busy limit in bytes. This limit can be set at startup by passing command-line flag &lt;code&gt;+zdbbl&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">분산 버퍼 사용 제한의 값을 바이트 단위로 반환합니다. 이 한계는 시작시 명령 행 플래그 &lt;code&gt;+zdbbl&lt;/code&gt; 을 &lt;code&gt;erl(1)&lt;/code&gt; 에 전달하여 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0eb3e7701e036a7d403ede72138bcba17df42f01" translate="yes" xml:space="preserve">
          <source>Returns the value of the node trace control word. For more information, see function &lt;code&gt;get_tcw&lt;/code&gt; in section &lt;code&gt;Match Specifications in Erlang&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">노드 추적 제어 단어의 값을 리턴합니다. 자세한 정보 는 사용자 안내서의 &lt;code&gt;Match Specifications in Erlang&lt;/code&gt; 섹션에서 &lt;code&gt;get_tcw&lt;/code&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ded240c002a09350f53a8729d590d762d3ee47e4" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified field. &lt;code&gt;Expr&lt;/code&gt; is to evaluate to a &lt;code&gt;Name&lt;/code&gt; record.</source>
          <target state="translated">지정된 필드의 값을 반환합니다. &lt;code&gt;Expr&lt;/code&gt; 은 &lt;code&gt;Name&lt;/code&gt; 레코드 로 평가합니다 .</target>
        </trans-unit>
        <trans-unit id="2849f358fccd53e44d05408055c7ef85c684746f" translate="yes" xml:space="preserve">
          <source>Returns the value of the trace token component &lt;code&gt;Component&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#set_token-2&quot;&gt;set_token/2&lt;/a&gt;&lt;/code&gt; for possible values of &lt;code&gt;Component&lt;/code&gt; and &lt;code&gt;Val&lt;/code&gt;.</source>
          <target state="translated">추적 토큰 구성 &lt;code&gt;Component&lt;/code&gt; 의 값을 리턴합니다 . &lt;code&gt;Component&lt;/code&gt; 및 &lt;code&gt;Val&lt;/code&gt; 의 가능한 값은 &lt;code&gt;&lt;a href=&quot;#set_token-2&quot;&gt;set_token/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef30ad6f787b85b6fb364a945ae11b060cb51f2a" translate="yes" xml:space="preserve">
          <source>Returns the value of the trace token for the calling process. If &lt;code&gt;[]&lt;/code&gt; is returned, it means that tracing is not active. Any other value returned is the value of an active trace token. The value returned can be used as input to the &lt;code&gt;set_token/1&lt;/code&gt; function.</source>
          <target state="translated">호출 프로세스의 추적 토큰 값을 리턴합니다. 경우 &lt;code&gt;[]&lt;/code&gt; 가 반환, 그 추적이 활성화되지 않은 것을 의미한다. 리턴 된 다른 값은 활성 추적 토큰의 값입니다. 리턴 된 값은 &lt;code&gt;set_token/1&lt;/code&gt; 함수 에 대한 입력으로 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87b814efe5ca2a647359df8aeda57aaf79221836" translate="yes" xml:space="preserve">
          <source>Returns the value represented by a &lt;code&gt;char&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 노드가 나타내는 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="66832a02f940bd12036a3ca8c2571d013a49737f" translate="yes" xml:space="preserve">
          <source>Returns the value represented by a &lt;code&gt;float&lt;/code&gt; node. Note that floating-point values should usually not be compared for equality.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 노드가 나타내는 값을 반환합니다 . 부동 소수점 값은 일반적으로 동일한 지 비교하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="06f801ac06085c006d3d04ffdc8d748babc9682e" translate="yes" xml:space="preserve">
          <source>Returns the value represented by a &lt;code&gt;string&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 노드가 나타내는 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="64c3a0f24044cbe3db4f0eaa74543faa40b4bee4" translate="yes" xml:space="preserve">
          <source>Returns the value represented by an &lt;code&gt;atom&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; 노드가 나타내는 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ab17e34c22dd24ebeefc9f6075c664a8402bcaa7" translate="yes" xml:space="preserve">
          <source>Returns the value represented by an &lt;code&gt;integer&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;integer&lt;/code&gt; 노드가 나타내는 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b9111c4ad7df62da6d214702e35e9cc2322ac509" translate="yes" xml:space="preserve">
          <source>Returns the value subtree of a &lt;code&gt;map_field_assoc&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_field_assoc&lt;/code&gt; 노드 의 값 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="49df505bf0f7c6ed58cf973492ea6121f71c7a9e" translate="yes" xml:space="preserve">
          <source>Returns the value subtree of a &lt;code&gt;map_field_exact&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_field_exact&lt;/code&gt; 노드 의 값 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="8b7c5bc71fc8b6851b20cdaf1a1545ba9f30cdc0" translate="yes" xml:space="preserve">
          <source>Returns the value subtree of a &lt;code&gt;map_type_assoc&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_type_assoc&lt;/code&gt; 노드 의 값 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="513d21161e71a09439c4af7027cce01c53838343" translate="yes" xml:space="preserve">
          <source>Returns the value subtree of a &lt;code&gt;map_type_exact&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_type_exact&lt;/code&gt; 노드 의 값 하위 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="af5c38d04cd3ae45b989d3cbab44301109c9484c" translate="yes" xml:space="preserve">
          <source>Returns the value subtree of a &lt;code&gt;record_field&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Name&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Name = Value&lt;/code&gt;&quot;, &lt;code&gt;Value&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;record_field&lt;/code&gt; 노드 의 값 하위 트리를 리턴합니다 (있는 경우). 경우 &lt;code&gt;Node&lt;/code&gt; &quot;대표 &lt;code&gt;Name&lt;/code&gt; &quot; &lt;code&gt;none&lt;/code&gt; 반환되지 않습니다. 그렇지 않으면 &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;Name = Value&lt;/code&gt; &quot;를 나타내는 경우 &lt;code&gt;Value&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1dd0752cdc2d2b90abfa32987400ac894a7a2514" translate="yes" xml:space="preserve">
          <source>Returns the values in &lt;code&gt;Tree&lt;/code&gt; as an ordered list, sorted by their corresponding keys. Duplicates are not removed.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 의 값을 해당 키를 기준으로 정렬 된 순서대로 반환합니다 . 중복은 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31f4438c716033cacd5245f5cfd716c36e7802ff" translate="yes" xml:space="preserve">
          <source>Returns the word in position &lt;code&gt;Number&lt;/code&gt; of &lt;code&gt;String&lt;/code&gt;. Words are separated by blanks or &lt;code&gt;Character&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; of &lt;code&gt;String&lt;/code&gt; 위치의 단어를 반환합니다 . 단어는 공백 또는 &lt;code&gt;Character&lt;/code&gt; 로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="abac93bf004b0965cd5015ea0434b42154f78064" translate="yes" xml:space="preserve">
          <source>Returns the wordsize of the current running operating system.</source>
          <target state="translated">현재 실행중인 운영 체제의 단어 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="42f2c634e41c1da2dc74d92751117e907f687245" translate="yes" xml:space="preserve">
          <source>Returns trace information about a port, process, function, or event.</source>
          <target state="translated">포트, 프로세스, 함수 또는 이벤트에 대한 추적 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5b6a4e65c9fa99fbfb8b96ea6fe2058e5f1dc776" translate="yes" xml:space="preserve">
          <source>Returns tuple &lt;code&gt;{Year, WeekNum}&lt;/code&gt; representing the ISO week number for the actual date. To determine the actual date, use function &lt;code&gt;&lt;a href=&quot;#local_time-0&quot;&gt;local_time/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">실제 날짜의 ISO 주 번호를 나타내는 튜플 &lt;code&gt;{Year, WeekNum}&lt;/code&gt; 반환 합니다. 실제 날짜를 확인하려면 &lt;code&gt;&lt;a href=&quot;#local_time-0&quot;&gt;local_time/0&lt;/a&gt;&lt;/code&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="2926e156c155bd5bfa0192ed13c36784e6f7a90a" translate="yes" xml:space="preserve">
          <source>Returns tuple &lt;code&gt;{Year, WeekNum}&lt;/code&gt; representing the ISO week number for the specified date.</source>
          <target state="translated">지정된 날짜의 ISO 주 번호를 나타내는 튜플 &lt;code&gt;{Year, WeekNum}&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="69a425051497dbd187b03c22a9bf6f3ff070e1f1" translate="yes" xml:space="preserve">
          <source>Returns tuple &lt;code&gt;{value, Item}&lt;/code&gt;, where &lt;code&gt;Item&lt;/code&gt; is the front item of &lt;code&gt;Q&lt;/code&gt;, or &lt;code&gt;empty&lt;/code&gt; if &lt;code&gt;Q&lt;/code&gt; is empty.</source>
          <target state="translated">반환 튜플 &lt;code&gt;{value, Item}&lt;/code&gt; , &lt;code&gt;Item&lt;/code&gt; 의 전면 항목이다 &lt;code&gt;Q&lt;/code&gt; , 또는 &lt;code&gt;empty&lt;/code&gt; 경우 &lt;code&gt;Q&lt;/code&gt; 가 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2550c92332703892aac08ce92d6026e52ccd6a9c" translate="yes" xml:space="preserve">
          <source>Returns tuple &lt;code&gt;{value, Item}&lt;/code&gt;, where &lt;code&gt;Item&lt;/code&gt; is the rear item of &lt;code&gt;Q&lt;/code&gt;, or &lt;code&gt;empty&lt;/code&gt; if &lt;code&gt;Q&lt;/code&gt; is empty.</source>
          <target state="translated">반환 튜플 &lt;code&gt;{value, Item}&lt;/code&gt; , &lt;code&gt;Item&lt;/code&gt; 의 후면 항목이다 &lt;code&gt;Q&lt;/code&gt; , 또는 &lt;code&gt;empty&lt;/code&gt; 경우 &lt;code&gt;Q&lt;/code&gt; 가 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="dac3a4f15f99db3c559c34e1d439820e4aa3194e" translate="yes" xml:space="preserve">
          <source>Returns universal time.</source>
          <target state="translated">표준시를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="676c9c8a46b55f8965fbae23783f28aa6929e226" translate="yes" xml:space="preserve">
          <source>Returns value &lt;code&gt;Value&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; if &lt;code&gt;Map&lt;/code&gt; contains &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">반환 값 &lt;code&gt;Value&lt;/code&gt; 과 관련된 &lt;code&gt;Key&lt;/code&gt; 하면 &lt;code&gt;Map&lt;/code&gt; 포함 &lt;code&gt;Key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f16e6454471f02a3105c6575390604d806bb79be" translate="yes" xml:space="preserve">
          <source>Returns value &lt;code&gt;Value&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; if &lt;code&gt;Map&lt;/code&gt; contains &lt;code&gt;Key&lt;/code&gt;. If no value is associated with &lt;code&gt;Key&lt;/code&gt;, &lt;code&gt;Default&lt;/code&gt; is returned.</source>
          <target state="translated">반환 값 &lt;code&gt;Value&lt;/code&gt; 과 관련된 &lt;code&gt;Key&lt;/code&gt; 하면 &lt;code&gt;Map&lt;/code&gt; 포함 &lt;code&gt;Key&lt;/code&gt; . 값이 연결되지 않은 경우 &lt;code&gt;Key&lt;/code&gt; , &lt;code&gt;Default&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="327dcfad01c02f664d090797461b2c4b5d200450" translate="yes" xml:space="preserve">
          <source>Returns various information about the CPU topology of the current system (emulator) as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 에 지정된대로 현재 시스템 (에뮬레이터)의 CPU 토폴로지에 대한 다양한 정보를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f97791973bd10137f0988036eb3daaa34e7923ab" translate="yes" xml:space="preserve">
          <source>Returns various information about the current system (emulator) as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 에 지정된 현재 시스템 (에뮬레이터)에 대한 다양한 정보를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="02d678a7f13af056931d2fd9ae1d3a18df36e587" translate="yes" xml:space="preserve">
          <source>Returns various information about the memory allocators of the current system (emulator) as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 에 지정된대로 현재 시스템 (에뮬레이터)의 메모리 할당 자에 대한 다양한 정보를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="920b965264fc8144c1459cb81f45b6be27f48555" translate="yes" xml:space="preserve">
          <source>Returns various size information for the specified allocator. The information returned is a subset of the information returned by &lt;code&gt;&lt;a href=&quot;#system_info_allocator_tuple&quot;&gt;erlang:system_info({allocator,Alloc})&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지정된 할당 자에 대한 다양한 크기 정보를 반환합니다. 리턴 된 정보는 &lt;code&gt;&lt;a href=&quot;#system_info_allocator_tuple&quot;&gt;erlang:system_info({allocator,Alloc})&lt;/a&gt;&lt;/code&gt; 리턴 한 정보의 서브 세트입니다 .</target>
        </trans-unit>
        <trans-unit id="35b858d62e34ca9b4660f2de438c5544952ac6d6" translate="yes" xml:space="preserve">
          <source>Returns version information relevant for the SSL application.</source>
          <target state="translated">SSL 애플리케이션과 관련된 버전 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6fef46e61417b264c84e1c555b8e9471825dd807" translate="yes" xml:space="preserve">
          <source>Returns whether a pre ERTS 7.0 backwards compatible compensation for sudden changes of system time is &lt;code&gt;enabled&lt;/code&gt; or &lt;code&gt;disabled&lt;/code&gt;. Such compensation is &lt;code&gt;enabled&lt;/code&gt; when the &lt;code&gt;&lt;a href=&quot;#system_info_time_offset&quot;&gt;time offset&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;final&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_info_time_correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; is enabled.</source>
          <target state="translated">사전은 시스템 시간의 급격한 변화 7.0 호환 보상을 ERTS 여부를 반환한다 &lt;code&gt;enabled&lt;/code&gt; 또는 &lt;code&gt;disabled&lt;/code&gt; . 이러한 &lt;code&gt;&lt;a href=&quot;#system_info_time_offset&quot;&gt;time offset&lt;/a&gt;&lt;/code&gt; 은 시간 오프셋 이 &lt;code&gt;final&lt;/code&gt; 때 &lt;code&gt;enabled&lt;/code&gt; 되고 &lt;code&gt;&lt;a href=&quot;#system_info_time_correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; 이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="a2b25f4736af030f87f74a893289b202f7597747" translate="yes" xml:space="preserve">
          <source>Returns with the value &lt;code&gt;ok&lt;/code&gt; if the options are valid.</source>
          <target state="translated">옵션이 유효한 경우 값 &lt;code&gt;ok&lt;/code&gt; 와 함께 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="885109308f59dce2ace32bd7715b6191340e687f" translate="yes" xml:space="preserve">
          <source>Returns, for a specified integer &lt;code&gt;N &amp;gt;= 1&lt;/code&gt; and a state, a random integer uniformly distributed between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt;, and a new state.</source>
          <target state="translated">지정된 정수 &lt;code&gt;N &amp;gt;= 1&lt;/code&gt; 및 상태에 대해 &lt;code&gt;1&lt;/code&gt; 과 &lt;code&gt;N&lt;/code&gt; 사이에 균일하게 분포 된 임의의 정수 와 새로운 상태를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="18c661c27d91a252ce51618caaac85fd39582cd6" translate="yes" xml:space="preserve">
          <source>Returns, for a specified integer &lt;code&gt;N &amp;gt;= 1&lt;/code&gt; and a state, a random integer uniformly distributed in the value range &lt;code&gt;1 =&amp;lt; X =&amp;lt; N&lt;/code&gt; and a new state.</source>
          <target state="translated">지정된 정수 &lt;code&gt;N &amp;gt;= 1&lt;/code&gt; 및 상태에 대해 &lt;code&gt;1 =&amp;lt; X =&amp;lt; N&lt;/code&gt; 값 범위에 균일하게 분포 된 임의의 정수 와 새로운 상태를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="60af098607721def829aa51896988af5891c8230" translate="yes" xml:space="preserve">
          <source>Returns, for a specified integer &lt;code&gt;N &amp;gt;= 1&lt;/code&gt;, a random integer uniformly distributed between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt;, updating the state in the process dictionary.</source>
          <target state="translated">지정된 정수 &lt;code&gt;N &amp;gt;= 1&lt;/code&gt; 에 대해 &lt;code&gt;1&lt;/code&gt; 과 &lt;code&gt;N&lt;/code&gt; 사이에 균일하게 분포 된 임의의 정수를 반환 하여 프로세스 사전의 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="8d9c04c1eee8e0a0bca34ea18f5067893cf35e6f" translate="yes" xml:space="preserve">
          <source>Returns, for a specified integer &lt;code&gt;N &amp;gt;= 1&lt;/code&gt;, a random integer uniformly distributed in the value range &lt;code&gt;1 =&amp;lt; X =&amp;lt; N&lt;/code&gt; and updates the state in the process dictionary.</source>
          <target state="translated">지정된 정수 &lt;code&gt;N &amp;gt;= 1&lt;/code&gt; 에 대해 값 범위 &lt;code&gt;1 =&amp;lt; X =&amp;lt; N&lt;/code&gt; 균일하게 분포 된 임의의 정수를 반환 하고 프로세스 사전의 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="bbcfa3dc2d34ccce087381c5585ed8fdf48089e5" translate="yes" xml:space="preserve">
          <source>Returns, for a specified state, a normal N(Mean, Variance) deviate float and a new state.</source>
          <target state="translated">지정된 상태에 대해 정규 N (Mean, Variance)이 float 및 새로운 상태를 벗어나게합니다.</target>
        </trans-unit>
        <trans-unit id="1deb2beab285581a3c0925f2f1e4b26e6a38414f" translate="yes" xml:space="preserve">
          <source>Returns, for a specified state, a random float uniformly distributed between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;, and a new state.</source>
          <target state="translated">지정된 상태에 대해 &lt;code&gt;0.0&lt;/code&gt; 과 &lt;code&gt;1.0&lt;/code&gt; 사이에 균일하게 분포 된 임의의 부동 소수점 과 새로운 상태를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="30b7e5fe62c0a0ab1e3fdfb3d7a3c56207be6478" translate="yes" xml:space="preserve">
          <source>Returns, for a specified state, a random float uniformly distributed in the value range &lt;code&gt;DBL_MIN =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; and updates the state in the process dictionary.</source>
          <target state="translated">지정된 상태에 대해 값 범위 &lt;code&gt;DBL_MIN =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; 균일하게 분포 된 임의의 부동 소수점을 리턴 하고 프로세스 사전의 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="5b826637733d7f20ce6edf693ab33145ebc7a48c" translate="yes" xml:space="preserve">
          <source>Returns, for a specified state, a standard normal deviate float (that is, the mean is 0 and the standard deviation is 1) and a new state.</source>
          <target state="translated">지정된 상태에 대해 표준 정규 이탈 플로트 (즉, 평균은 0이고 표준 편차는 1)와 새로운 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="72bd5c6f2819386a209ff84880f2a62eeaf4236d" translate="yes" xml:space="preserve">
          <source>Returns, for a specified state, random float uniformly distributed in the value range &lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; and a new state.</source>
          <target state="translated">지정된 상태에 대해 &lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; 의 값 범위 와 새로운 상태로 균일하게 분포 된 임의의 부동 소수점을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="a1eb108727e00e327c5484880d7254c2295b3ab6" translate="yes" xml:space="preserve">
          <source>Reuses the same log file (&amp;lt;servicename&amp;gt;&lt;code&gt;.debug&lt;/code&gt;).</source>
          <target state="translated">동일한 로그 파일 (&amp;lt;servicename&amp;gt; &lt;code&gt;.debug&lt;/code&gt; )을 재사용 합니다.</target>
        </trans-unit>
        <trans-unit id="2ec723a8f19b7419581ec5cc36a18090f6a35314" translate="yes" xml:space="preserve">
          <source>Reverses the order of sorting.</source>
          <target state="translated">정렬 순서를 반대로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="d9d0d547d679f3956b67c106d58febf07db9f4e5" translate="yes" xml:space="preserve">
          <source>Revert a template to a normal syntax tree. Any remaining metavariables are turned into &lt;code&gt;@&lt;/code&gt;-prefixed atoms or &lt;code&gt;909&lt;/code&gt;-prefixed integers.</source>
          <target state="translated">템플릿을 일반 구문 트리로 되돌립니다. 나머지 모든 메타 변수는 &lt;code&gt;@&lt;/code&gt; 접두사 원자 또는 &lt;code&gt;909&lt;/code&gt; 접두사 정수로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="8fc19b29e4123014da09f3411a9d1901987ac9ab" translate="yes" xml:space="preserve">
          <source>Reverts a sequence of Erlang source code forms. The sequence can be given either as a &lt;code&gt;form_list&lt;/code&gt; syntax tree (possibly nested), or as a list of &quot;program form&quot; syntax trees. If successful, the corresponding flat list of &lt;code&gt;erl_parse&lt;/code&gt;-compatible syntax trees is returned (see &lt;code&gt;&lt;a href=&quot;#revert-1&quot;&gt;revert/1&lt;/a&gt;&lt;/code&gt;). If some program form could not be reverted, &lt;code&gt;{error, Form}&lt;/code&gt; is thrown. Standalone comments in the form sequence are discarded.</source>
          <target state="translated">Erlang 소스 코드 형식의 순서를 되돌립니다. 시퀀스는 &lt;code&gt;form_list&lt;/code&gt; 구문 트리 (아마도 중첩) 또는 &quot;프로그램 양식&quot;구문 트리 목록 으로 제공 될 수 있습니다 . 성공하면 &lt;code&gt;erl_parse&lt;/code&gt; 호환 구문 트리 의 해당 플랫 목록 이 리턴됩니다 ( &lt;code&gt;&lt;a href=&quot;#revert-1&quot;&gt;revert/1&lt;/a&gt;&lt;/code&gt; 참조 ). 일부 프로그램 양식을 되돌릴 수 없으면 &lt;code&gt;{error, Form}&lt;/code&gt; 이 발생합니다. 양식 순서의 독립형 주석은 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="08f4e0da4db860d3e8099fff0c2cea4899816eca" translate="yes" xml:space="preserve">
          <source>Rewrite driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; to use return type &lt;code&gt;ErlDrvSSizeT&lt;/code&gt; instead of &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 대신 반환 유형 &lt;code&gt;ErlDrvSSizeT&lt;/code&gt; 를 사용하도록 드라이버 콜백 &lt;code&gt;&lt;a href=&quot;driver_entry#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; 을 다시 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="52d760c88631397147aff49059fd5367643e1da5" translate="yes" xml:space="preserve">
          <source>Rewrite driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; to use return type &lt;code&gt;ErlDrvSSizeT&lt;/code&gt; instead of &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 대신 반환 유형 &lt;code&gt;ErlDrvSSizeT&lt;/code&gt; 를 사용하도록 드라이버 콜백 &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; 을 다시 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a85c6b9f36917f54d6b17eee239aec002ea9628" translate="yes" xml:space="preserve">
          <source>Rewriting Erlang code to a NIF to make it faster should be seen as a last resort. It is only guaranteed to be dangerous, but not guaranteed to speed up the program.</source>
          <target state="translated">Erlang 코드를 NIF로 다시 작성하면 더 빠른 방법으로 사용할 수 있습니다. 위험하다는 보장은 있지만 프로그램 속도를 보장하는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="df7d8b6ab4a42ce2feec9f6b5ee6fa7fa6694d14" translate="yes" xml:space="preserve">
          <source>Rewriting the previous example to use a named subpattern gives:</source>
          <target state="translated">명명 된 하위 패턴을 사용하기 위해 이전 예제를 다시 작성하면 다음이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3ef2742a2798d5d7152db606c2154e30ed6efa66" translate="yes" xml:space="preserve">
          <source>Rewriting to either:</source>
          <target state="translated">다음 중 하나로 다시 쓰기 :</target>
        </trans-unit>
        <trans-unit id="89f73fa1a3b0891815cc801682b905540d98d3ce" translate="yes" xml:space="preserve">
          <source>Richard Carlsson carlsson.richard@gmail.com</source>
          <target state="translated">Richard Carlsson carlsson.richard@gmail.com</target>
        </trans-unit>
        <trans-unit id="5dc9f0c8ad0959fcead5dfc388c11b74c6ad4aac" translate="yes" xml:space="preserve">
          <source>Richard M. Stallman. GNU Emacs Manual, chapter &quot;Editing Programs&quot;, section &quot;Tag Tables&quot;. Free Software Foundation, 1995.</source>
          <target state="translated">리차드 엠 스톨만 GNU Emacs 매뉴얼, &quot;프로그램 편집&quot;장, &quot;태그 테이블&quot;섹션. 자유 소프트웨어 재단, 1995.</target>
        </trans-unit>
        <trans-unit id="707e1417965eb6d7f66ebc16b61c40257b9973db" translate="yes" xml:space="preserve">
          <source>Right associative</source>
          <target state="translated">올바른 연관성</target>
        </trans-unit>
        <trans-unit id="eaa221fb8bf3a05a23cedef67c6712a2c1d375dc" translate="yes" xml:space="preserve">
          <source>Right-click the &lt;strong&gt;Module&lt;/strong&gt; entry to open a popup menu from which the appropriate module can be selected.</source>
          <target state="translated">&lt;strong&gt;모듈&lt;/strong&gt; 항목을 마우스 오른쪽 버튼으로 클릭하여 적절한 모듈을 선택할 수있는 팝업 메뉴를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="21d8a282c7c75beefbcdafd84c07a3cffde84717" translate="yes" xml:space="preserve">
          <source>Role of Diameter Agents</source>
          <target state="translated">직경 에이전트의 역할</target>
        </trans-unit>
        <trans-unit id="1642cb84c0f7917268df780b07a17a3bcc6f4011" translate="yes" xml:space="preserve">
          <source>RootAttributes = [Attributes]</source>
          <target state="translated">RootAttributes = [속성]</target>
        </trans-unit>
        <trans-unit id="3d392c4734568e1b91dcf893a88181e33c4e3376" translate="yes" xml:space="preserve">
          <source>Route-Record AVP</source>
          <target state="translated">경로 기록 AVP</target>
        </trans-unit>
        <trans-unit id="926324a25686e1ddb917fe5cbd66c9d4db2543c6" translate="yes" xml:space="preserve">
          <source>Routines for handling the Erlang binary term format.</source>
          <target state="translated">Erlang 이진 용어 형식을 처리하기위한 루틴.</target>
        </trans-unit>
        <trans-unit id="5490c5f5a7a8f8c4451bbc5cc103c3a57f07ae42" translate="yes" xml:space="preserve">
          <source>Routing AVPs</source>
          <target state="translated">AVP 라우팅</target>
        </trans-unit>
        <trans-unit id="66a2226658426a8293b746322aa3991829c35cc2" translate="yes" xml:space="preserve">
          <source>Routing Table</source>
          <target state="translated">라우팅 테이블</target>
        </trans-unit>
        <trans-unit id="67cc3fb636189b50eff9cb0a09f402975ccb13c8" translate="yes" xml:space="preserve">
          <source>Routing is implemented by the user in callbacks documented in &lt;code&gt;diameter_app(3)&lt;/code&gt;. A peer table of the documented form is not exposed to the user.</source>
          <target state="translated">라우팅은 &lt;code&gt;diameter_app(3)&lt;/code&gt; 문서화 된 콜백에서 사용자에 의해 구현됩니다 . 문서화 된 양식의 피어 테이블은 사용자에게 노출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="65f6e0c1ec349144754cd7e11d35e658fbaf3de1" translate="yes" xml:space="preserve">
          <source>Routing is performed by the user. A callback from diameter provides a list of available suitable peer connections.</source>
          <target state="translated">라우팅은 사용자에 의해 수행됩니다. 직경의 콜백은 사용 가능한 적합한 피어 연결 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ed6629617204a4aeec96788fa353a252e859516e" translate="yes" xml:space="preserve">
          <source>Rules :: [&lt;code&gt;&lt;a href=&quot;#type-find_file_rule&quot;&gt;find_file_rule()&lt;/a&gt;&lt;/code&gt;]) -&amp;gt;</source>
          <target state="translated">규칙 :: [ &lt;code&gt;&lt;a href=&quot;#type-find_file_rule&quot;&gt;find_file_rule()&lt;/a&gt;&lt;/code&gt; ])-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a141c60619c1bb28b30f6157d66d3adf09b97132" translate="yes" xml:space="preserve">
          <source>Rules :: [&lt;code&gt;&lt;a href=&quot;#type-find_source_rule&quot;&gt;find_source_rule()&lt;/a&gt;&lt;/code&gt;]) -&amp;gt;</source>
          <target state="translated">규칙 :: [ &lt;code&gt;&lt;a href=&quot;#type-find_source_rule&quot;&gt;find_source_rule()&lt;/a&gt;&lt;/code&gt; ])-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7b7100b7faa89f2043330a00e4f65e01cec5d8c7" translate="yes" xml:space="preserve">
          <source>Rules have the following format:</source>
          <target state="translated">규칙의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0b3427ba94c1ebefdd3b60e285798a49fd68f2ac" translate="yes" xml:space="preserve">
          <source>Run Observer from a standalone node to minimize the impact of the system being observed.</source>
          <target state="translated">독립형 노드에서 관찰자를 실행하여 관찰중인 시스템의 영향을 최소화하십시오.</target>
        </trans-unit>
        <trans-unit id="47818a765b203acb4f951c215e2862920adca10f" translate="yes" xml:space="preserve">
          <source>Run the Erlang emulator as a service on Windows</source>
          <target state="translated">Windows에서 Erlang 에뮬레이터를 서비스로 실행</target>
        </trans-unit>
        <trans-unit id="37458e7bb4bd4c9f8696d88a3ab53b63271f9607" translate="yes" xml:space="preserve">
          <source>Run the MIB together with the association file through the MIB compiler.</source>
          <target state="translated">MIB 컴파일러를 통해 연관 파일과 함께 MIB를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="dde52dc73c4bdf2b95fa333034952129efe04384" translate="yes" xml:space="preserve">
          <source>Run the OpenSSH SFTP client:</source>
          <target state="translated">OpenSSH SFTP 클라이언트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="4c5a45b06e509e0e39842156cd762e64e63bc84a" translate="yes" xml:space="preserve">
          <source>Run the following commands to configure the build:</source>
          <target state="translated">다음 명령을 실행하여 빌드를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="e0d6adcef632fe4169f8b949a9f232d2663f6b14" translate="yes" xml:space="preserve">
          <source>Run this function once before the first test.</source>
          <target state="translated">첫 번째 테스트 전에이 기능을 한 번 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c49502470fe3929860d88bcb512bc229f6e9d124" translate="yes" xml:space="preserve">
          <source>Run your applications with different scenarios (the more the better) and save information about each scenario by calling &lt;code&gt;&lt;a href=&quot;#save_scenario-0&quot;&gt;save_scenario/0&lt;/a&gt;&lt;/code&gt;. It may be hard to know when the applications are at an (for &lt;code&gt;erts_alloc_config&lt;/code&gt;) important runtime scenario. A good approach may therefore be to call &lt;code&gt;&lt;a href=&quot;#save_scenario-0&quot;&gt;save_scenario/0&lt;/a&gt;&lt;/code&gt; repeatedly, e.g. once every tenth second. Note that it is important that your applications reach the runtime scenarios that are important for &lt;code&gt;erts_alloc_config&lt;/code&gt; when you are saving scenarios; otherwise, the configuration may perform bad.</source>
          <target state="translated">서로 다른 시나리오로 애플리케이션을 실행하고 (더 좋을수록) &lt;code&gt;&lt;a href=&quot;#save_scenario-0&quot;&gt;save_scenario/0&lt;/a&gt;&lt;/code&gt; 을 호출하여 각 시나리오에 대한 정보를 저장하십시오 . 애플리케이션이 언제 중요한 런타임 시나리오 &lt;code&gt;erts_alloc_config&lt;/code&gt; ( erts_alloc_config의 경우 ) 알기 어려울 수 있습니다 . 따라서 &lt;code&gt;&lt;a href=&quot;#save_scenario-0&quot;&gt;save_scenario/0&lt;/a&gt;&lt;/code&gt; 을 반복적으로 (예 : 10 초마다 한 번씩) 호출하는 것이 좋습니다 . 시나리오를 &lt;code&gt;erts_alloc_config&lt;/code&gt; 때 응용 프로그램이 erts_alloc_config에 중요한 런타임 시나리오에 도달하는 것이 중요합니다 . 그렇지 않으면 구성이 제대로 수행되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64019ba28d0e036675edec4a8b851b5976d583ad" translate="yes" xml:space="preserve">
          <source>Run-time error, for example, &lt;code&gt;1+a&lt;/code&gt;, or the process called &lt;code&gt;erlang:error/1,2&lt;/code&gt;</source>
          <target state="translated">런타임 오류 (예 : &lt;code&gt;1+a&lt;/code&gt; ) 또는 &lt;code&gt;erlang:error/1,2&lt;/code&gt; 프로세스</target>
        </trans-unit>
        <trans-unit id="e6171821850b105e890bfe0e16761f7ff43321fa" translate="yes" xml:space="preserve">
          <source>Run-time errors</source>
          <target state="translated">런타임 오류</target>
        </trans-unit>
        <trans-unit id="10edb70120d58b585eb716dac04179f10c05bfdd" translate="yes" xml:space="preserve">
          <source>Runic</source>
          <target state="translated">Runic</target>
        </trans-unit>
        <trans-unit id="6eb40d328c18ae6f8a27c758ff42996f3f660ee2" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;./otp_build autoconf&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; needed when building an unmodified version of the released source.</source>
          <target state="translated">릴리스 된 소스의 수정되지 않은 버전을 빌드 할 때는 &lt;code&gt;./otp_build autoconf&lt;/code&gt; 를 실행할 필요 가 &lt;strong&gt;없습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5553e6d2ad2c9f99e1580ceb4c9ed28166d9d92b" translate="yes" xml:space="preserve">
          <source>Running Unix commands through &lt;code&gt;os:cmd&lt;/code&gt; are likely not to work on non-Unix platforms.</source>
          <target state="translated">&lt;code&gt;os:cmd&lt;/code&gt; 를 통해 Unix 명령을 실행하면 Unix 이외의 플랫폼에서는 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61f11ff9c8eb1525ce8c1d60bb7f1bfa14d70aa3" translate="yes" xml:space="preserve">
          <source>Running a set of tests after making changes to a program, to check that the program behaves as it did before the changes (except, of course, for any intentional changes in behaviour). Unit tests are important as regression tests, but regression testing can involve more than just unit testing, and may also test behaviour that might not be part of the normal specification (such as bug-for-bug-compatibility).</source>
          <target state="translated">프로그램을 변경 한 후 일련의 테스트를 실행하여 프로그램이 변경 이전과 똑같이 동작하는지 확인합니다 (물론 의도적 인 동작 변경은 제외). 단위 테스트는 회귀 테스트로 중요하지만 회귀 테스트에는 단위 테스트뿐만 아니라 일반 사양에 포함되지 않은 동작 (예 : 버그-버그 호환성)도 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e5f1d89753ad2de28b06b552ccb6023a60e0138" translate="yes" xml:space="preserve">
          <source>Running an installation script</source>
          <target state="translated">설치 스크립트 실행</target>
        </trans-unit>
        <trans-unit id="ab141718d00143ceedad0e578ee108f4b199c56f" translate="yes" xml:space="preserve">
          <source>Running through the above, the most important points are:</source>
          <target state="translated">위의 과정을 통해 가장 중요한 점은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d6c921099867a9f40ae5f73659d8630bd372c2c0" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;CommandString&lt;/code&gt; as an external command, if testing is enabled. Unless the output produced by the command exactly matches the specified string &lt;code&gt;Text&lt;/code&gt;, an informative exception will be generated. (Note that the output is normalized to use a single LF character as line break on all platforms.) If there is no exception, the result of the macro expression is the atom &lt;code&gt;ok&lt;/code&gt;. If testing is disabled, the macro will not generate any code except the atom &lt;code&gt;ok&lt;/code&gt;, and the command will not be executed.</source>
          <target state="translated">테스트가 사용 가능한 경우 &lt;code&gt;CommandString&lt;/code&gt; 을 외부 명령으로 실행 합니다. 명령으로 작성된 출력이 지정된 문자열 &lt;code&gt;Text&lt;/code&gt; 와 정확히 일치하지 않으면 유익한 예외가 생성됩니다. (출력은 모든 플랫폼 개행 같은 단일 LF 문자를 사용하여 정규화되어 있습니다.) 예외가없는 경우는, 매크로 식의 결과는 원자 인 &lt;code&gt;ok&lt;/code&gt; . 테스트가 비활성화되면 매크로는 atom &lt;code&gt;ok&lt;/code&gt; 이외의 코드를 생성하지 않으며 명령이 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="130205f8ca8f83e6a9c4c0dd251be0f5d9d01a28" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;CommandString&lt;/code&gt; as an external command, if testing is enabled. Unless the returned status value is 0, an informative exception will be generated. If there is no exception, the result of the macro expression is the atom &lt;code&gt;ok&lt;/code&gt;. If testing is disabled, the macro will not generate any code except the atom &lt;code&gt;ok&lt;/code&gt;, and the command will not be executed.</source>
          <target state="translated">테스트가 사용 가능한 경우 &lt;code&gt;CommandString&lt;/code&gt; 을 외부 명령으로 실행 합니다. 반환 된 상태 값이 0이 아닌 경우 유익한 예외가 생성됩니다. 예외가없는 경우 매크로 표현식의 결과는 atom &lt;code&gt;ok&lt;/code&gt; 입니다. 테스트가 비활성화되면 매크로는 atom &lt;code&gt;ok&lt;/code&gt; 이외의 코드를 생성하지 않으며 명령이 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4d6a8b86170112503b16d3c0779bb87837e56fe" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;CommandString&lt;/code&gt; as an external command. Unless the returned status value is 0 (indicating success), an informative exception will be generated; otherwise, the result of the macro expression is the output produced by the command, as a flat string. The output is normalized to use a single LF character as line break on all platforms.</source>
          <target state="translated">외부 명령으로 &lt;code&gt;CommandString&lt;/code&gt; 을 실행합니다 . 반환 된 상태 값이 0 (성공을 나타냄)이 아닌 경우 유익한 예외가 생성됩니다. 그렇지 않으면 매크로 표현식의 결과는 명령에 의해 생성 된 출력 (플랫 문자열)입니다. 모든 플랫폼에서 단일 LF 문자를 줄 바꿈으로 사용하도록 출력이 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="85180867c26674bd1b359b04e5c13e1a89921c99" translate="yes" xml:space="preserve">
          <source>Runs a pseudo server. This function never returns any value and the process that executes the function receives messages. All messages received are simply passed on to &lt;code&gt;Pid&lt;/code&gt;.</source>
          <target state="translated">의사 서버를 실행합니다. 이 함수는 값을 반환하지 않으며 함수를 실행하는 프로세스가 메시지를받습니다. 수신 된 모든 메시지는 단순히 &lt;code&gt;Pid&lt;/code&gt; 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="6206d63a4f3ab80691b6cd43064a5099ce167842" translate="yes" xml:space="preserve">
          <source>Runs a set of tests. The format of &lt;code&gt;Tests&lt;/code&gt; is described in the section &lt;code&gt;&lt;a href=&quot;chapter#EUnit_test_representation&quot;&gt;EUnit test representation&lt;/a&gt;&lt;/code&gt; of the overview.</source>
          <target state="translated">일련의 테스트를 실행합니다. &lt;code&gt;Tests&lt;/code&gt; 형식은 개요의 &lt;code&gt;&lt;a href=&quot;chapter#EUnit_test_representation&quot;&gt;EUnit test representation&lt;/a&gt;&lt;/code&gt; 섹션에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9bd4e95a4a09c855144d4a32b18c4c5072d528c" translate="yes" xml:space="preserve">
          <source>Runs a test specified by &lt;code&gt;TestSpec&lt;/code&gt;. The same terms are used as in test specification files.</source>
          <target state="translated">&lt;code&gt;TestSpec&lt;/code&gt; 에 의해 지정된 테스트를 실행합니다 . 테스트 스펙 파일에서와 동일한 용어가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9ab9c397b60eb6fa0a462bfbbc27eb1b669affa8" translate="yes" xml:space="preserve">
          <source>Runs all test cases in all suites in the specified directories.</source>
          <target state="translated">지정된 디렉토리의 모든 스위트에서 모든 테스트 케이스를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ba3e20a0b6fc8c44c68fce2c57a107e8fe3a9e84" translate="yes" xml:space="preserve">
          <source>Runs all test cases in the specified suite.</source>
          <target state="translated">지정된 제품군에서 모든 테스트 사례를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="cad12a0c54fee129b8917ef845d42271840aefb0" translate="yes" xml:space="preserve">
          <source>Runs tests as specified by the combination of options in &lt;code&gt;Opts&lt;/code&gt;. The options are the same as those used with program &lt;code&gt;ct_run&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;ct_run#ct_run&quot;&gt;Run Tests from Command Line&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;ct_run&lt;/code&gt; manual page.</source>
          <target state="translated">&lt;code&gt;Opts&lt;/code&gt; 의 옵션 조합으로 지정된대로 테스트를 실행 합니다 . 옵션은 프로그램 &lt;code&gt;ct_run&lt;/code&gt; 과 함께 사용되는 옵션과 동일 합니다. &lt;code&gt;ct_run&lt;/code&gt; 매뉴얼 페이지 의 &lt;code&gt;&lt;a href=&quot;ct_run#ct_run&quot;&gt;Run Tests from Command Line&lt;/a&gt;&lt;/code&gt; 에서 테스트 실행을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="72a1044c5f39512730908351c9f5c1eb5f7c8873" translate="yes" xml:space="preserve">
          <source>Runs the code to be profiled.</source>
          <target state="translated">프로파일 링 할 코드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="d094c7ec350acc41f3218859bbc0ba1524792de4" translate="yes" xml:space="preserve">
          <source>Runs the specified test cases.</source>
          <target state="translated">지정된 테스트 사례를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7035262c09a08ced11bb73ebb5c68ea34d697a7d" translate="yes" xml:space="preserve">
          <source>Runs the specified tests in a separate subprocess, while the current test process waits for it to finish. This is useful for tests that need a fresh, isolated process state. (Note that EUnit always starts at least one such a subprocess automatically; tests are never executed by the caller's own process.)</source>
          <target state="translated">지정된 테스트를 별도의 하위 프로세스에서 실행하고 현재 테스트 프로세스는 완료 될 때까지 기다립니다. 이것은 신선하고 고립 된 프로세스 상태가 필요한 테스트에 유용합니다. (EUnit은 항상 하나 이상의 이러한 하위 프로세스를 자동으로 시작합니다. 테스트는 호출자의 자체 프로세스에 의해 실행되지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="2ed45933984066f3d5894427cf4cbca1e042c8ea" translate="yes" xml:space="preserve">
          <source>Runs the specified tests in parallel (if possible). Also see &lt;code&gt;{inorder, Tests}&lt;/code&gt;.</source>
          <target state="translated">지정된 테스트를 병렬로 실행합니다 (가능한 경우). &lt;code&gt;{inorder, Tests}&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd4b73449b1a076e441225865124ae1edef54dce" translate="yes" xml:space="preserve">
          <source>Runs the specified tests in strict order. Also see &lt;code&gt;{inparallel, Tests}&lt;/code&gt;. By default, tests are neither marked as &lt;code&gt;inorder&lt;/code&gt; or &lt;code&gt;inparallel&lt;/code&gt;, but may be executed as the test framework chooses.</source>
          <target state="translated">지정된 테스트를 엄격한 순서로 실행합니다. &lt;code&gt;{inparallel, Tests}&lt;/code&gt; 도 참조하십시오 . 기본적으로 테스트는 &lt;code&gt;inorder&lt;/code&gt; 또는 &lt;code&gt;inparallel&lt;/code&gt; 로 표시되지 않지만 테스트 프레임 워크가 선택한대로 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8a7ea651917286f6ec61ebc0f7dedee862e09cc" translate="yes" xml:space="preserve">
          <source>Runs the specified tests under the given timeout. Time is in seconds; e.g., 60 means one minute and 0.1 means 1/10th of a second. If the timeout is exceeded, the unfinished tests will be forced to terminate. Note that if a timeout is set around a fixture, it includes the time for setup and cleanup, and if the timeout is triggered, the entire fixture is abruptly terminated (without running the cleanup). The default timeout for an individual test is 5 seconds.</source>
          <target state="translated">지정된 시간 초과로 지정된 테스트를 실행합니다. 시간은 초입니다. 예를 들어 60은 1 분을 의미하고 0.1은 1/10 초를 의미합니다. 시간 초과가 초과되면 완료되지 않은 테스트가 강제 종료됩니다. 조명기 주위에 타임 아웃이 설정되면 셋업 및 클린업 시간이 포함되며 타임 아웃이 트리거되면 전체 조명기가 갑자기 종료됩니다 (클린업을 실행하지 않고). 개별 테스트의 기본 시간 초과는 5 초입니다.</target>
        </trans-unit>
        <trans-unit id="74893379624a477a3e838e377f002fd948707e5d" translate="yes" xml:space="preserve">
          <source>Runtime functions used by the generated code.</source>
          <target state="translated">생성 된 코드에서 사용하는 런타임 함수</target>
        </trans-unit>
        <trans-unit id="7f8e6a09edc7b1c2df516ef9d014c803ee8c0764" translate="yes" xml:space="preserve">
          <source>S-NAPTR Parameters</source>
          <target state="translated">S-NAPTR 매개 변수</target>
        </trans-unit>
        <trans-unit id="1297100119d26a5f29d832123821e9caee5bc1b5" translate="yes" xml:space="preserve">
          <source>SCTP Guidelines</source>
          <target state="translated">SCTP 지침</target>
        </trans-unit>
        <trans-unit id="676601f9f77d1e37c63d9d61c9bbb24d80705711" translate="yes" xml:space="preserve">
          <source>SCTP Payload Protocol Identifiers</source>
          <target state="translated">SCTP 페이로드 프로토콜 식별자</target>
        </trans-unit>
        <trans-unit id="631d887d8373df5135ef93cb41731f4bef4b8a67" translate="yes" xml:space="preserve">
          <source>SFTP client.</source>
          <target state="translated">SFTP 클라이언트.</target>
        </trans-unit>
        <trans-unit id="827c3533136de1de87d51499f6e754827d833d89" translate="yes" xml:space="preserve">
          <source>SIP and H.323 are peer-to-peer protocols for call control (valid only for some of the protocols within H.323), or more generally multi-media session protocols. They both operate at a different level (call control) from Megaco in a decomposed network, and are therefor not aware of whether or not Megaco is being used underneath.</source>
          <target state="translated">SIP 및 H.323은 통화 제어 (H.323 내의 일부 프로토콜에만 유효) 또는보다 일반적으로 멀티미디어 세션 프로토콜을위한 피어 투 피어 프로토콜입니다. 둘 다 분해 된 네트워크에서 Megaco와 다른 수준 (호출 제어)으로 작동하므로 Megaco가 그 아래에서 사용되고 있는지 여부를 알지 못합니다.</target>
        </trans-unit>
        <trans-unit id="9aa33d88a1471f2971d2c19bd9931f13a70dea23" translate="yes" xml:space="preserve">
          <source>SNMP</source>
          <target state="translated">SNMP</target>
        </trans-unit>
        <trans-unit id="f6fb5e8840c0a4fe9ad735cdcce93466932c7060" translate="yes" xml:space="preserve">
          <source>SNMP relies on the three basic operations: get (object), set (object, value) and get-next (object).</source>
          <target state="translated">SNMP는 세 가지 기본 작업 인 get (개체), set (개체, 값) 및 get-next (개체)에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="59e4f9bfceab3c7b34faf2f3a6a8070e6ffff629" translate="yes" xml:space="preserve">
          <source>SNMP traps, inform, and report messages are handled by the user callback module. For details, see the &lt;code&gt;SNMP&lt;/code&gt; application.</source>
          <target state="translated">SNMP 트랩, 알림 및 보고서 메시지는 사용자 콜백 모듈에서 처리합니다. 자세한 내용은 &lt;code&gt;SNMP&lt;/code&gt; 응용 프로그램을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c23f5f5e608b93974fca0f5069cf52ed99f5cbb4" translate="yes" xml:space="preserve">
          <source>SNMP-COMMUNITY-MIB, which defines managed objects for coexistence of SNMPv1 and SNMPv2c with SNMPv3. This MIB is only useful if SNMPv1 or SNMPv2c is used, possibly in combination with SNMPv3.</source>
          <target state="translated">SNMPv1 및 SNMPv2c와 SNMPv3의 공존을 위해 관리 객체를 정의하는 SNMP-COMMUNITY-MIB. 이 MIB는 SNMPv1 또는 SNMPv2c를 SNMPv3과 함께 사용하는 경우에만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fd5cf6628b3aa95776b36bcd76aa175198391633" translate="yes" xml:space="preserve">
          <source>SNMP-TARGET-MIB and SNMP-NOTIFICATION-MIB, which defines managed objects for configuration of management targets, i.e. receivers of notifications (traps and informs). These MIBs can be used with any SNMP version.</source>
          <target state="translated">SNMP-TARGET-MIB 및 SNMP-NOTIFICATION-MIB-관리 대상 구성, 즉 알림 수신자 (트랩 및 알림)의 구성을위한 관리 대상 객체를 정의합니다. 이러한 MIB는 모든 SNMP 버전과 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="527b8bbcc3efbef8772cb581e008ae74fe63c87b" translate="yes" xml:space="preserve">
          <source>SNMP-USER-BASED-SM-MIB, which defines managed objects for authentication and privacy. This MIB is only useful with SNMPv3.</source>
          <target state="translated">SNMP-USER-BASED-SM-MIB-인증 및 개인 정보 보호를위한 관리 대상 개체를 정의합니다. 이 MIB는 SNMPv3에서만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="bfedca9ad3eda9c7732b18cf9baf35d52e5c2b1d" translate="yes" xml:space="preserve">
          <source>SNMP-VIEW-BASED-ACM-MIB, which defined managed objects for access control. This MIB can be used with any SNMP version.</source>
          <target state="translated">액세스 제어를위한 관리 대상 객체를 정의한 SNMP-VIEW-BASED-ACM-MIB. 이 MIB는 모든 SNMP 버전과 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11affa9fef124df5d5c5df1a55c3694b81dba8d1" translate="yes" xml:space="preserve">
          <source>SNMPv1 RFC 1555, 1157 1212, 1213 and 1215</source>
          <target state="translated">SNMPv1 RFC 1555, 1157 1212, 1213 및 1215</target>
        </trans-unit>
        <trans-unit id="4ccd88f9255589f559b656aaf1d3fd1cdfb87726" translate="yes" xml:space="preserve">
          <source>SNMPv1 message</source>
          <target state="translated">SNMPv1 메시지</target>
        </trans-unit>
        <trans-unit id="701e19e4f06d9fc1db37c5617d953393b45ff609" translate="yes" xml:space="preserve">
          <source>SNMPv2 RFC 1902 - 1907</source>
          <target state="translated">SNMPv2 RFC 1902-1907</target>
        </trans-unit>
        <trans-unit id="b05b9a3e120051304785f5f473209ce888eb736d" translate="yes" xml:space="preserve">
          <source>SNMPv2 message</source>
          <target state="translated">SNMPv2 메시지</target>
        </trans-unit>
        <trans-unit id="b409ac27d68aba6833b39be4fc72a1d8edeaea74" translate="yes" xml:space="preserve">
          <source>SNMPv3 RFC 2570 - 2575</source>
          <target state="translated">SNMPv3 RFC 2570-2575</target>
        </trans-unit>
        <trans-unit id="e0e3916f101774e9e7651776131dbc153e5454b1" translate="yes" xml:space="preserve">
          <source>SPARC: All UltraSPARC processors running 32-bit user code should work.</source>
          <target state="translated">SPARC : 32 비트 사용자 코드를 실행하는 모든 UltraSPARC 프로세서가 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="18c77f2979ff22f390614981fb20dc7ebf023d7c" translate="yes" xml:space="preserve">
          <source>SPARC: Linux</source>
          <target state="translated">SPARC : 리눅스</target>
        </trans-unit>
        <trans-unit id="fff63a3c6042808b29bc482afa1dc6ad0ce3b3bd" translate="yes" xml:space="preserve">
          <source>SQL SELECT query.</source>
          <target state="translated">SQL SELECT 쿼리</target>
        </trans-unit>
        <trans-unit id="0458407ce742c4a4d4efdedf26b6defcd1c895f6" translate="yes" xml:space="preserve">
          <source>SQL_BINARY</source>
          <target state="translated">SQL_BINARY</target>
        </trans-unit>
        <trans-unit id="e2be2f17803c714ed858ddc740db39707ea08146" translate="yes" xml:space="preserve">
          <source>SQL_BIT</source>
          <target state="translated">SQL_BIT</target>
        </trans-unit>
        <trans-unit id="3e44acd37e5d9357a8f141e0533e0bf307ad9b72" translate="yes" xml:space="preserve">
          <source>SQL_CHAR(size)</source>
          <target state="translated">SQL_CHAR(size)</target>
        </trans-unit>
        <trans-unit id="d27892fb96dfb0d94b9aa4b3e2addf76ad17c06e" translate="yes" xml:space="preserve">
          <source>SQL_DECIMAL(p,s)</source>
          <target state="translated">SQL_DECIMAL(p,s)</target>
        </trans-unit>
        <trans-unit id="8a803e9069dda7a23e44ec07039e70572d4d88c4" translate="yes" xml:space="preserve">
          <source>SQL_DOUBLE</source>
          <target state="translated">SQL_DOUBLE</target>
        </trans-unit>
        <trans-unit id="f8fc7650208993259c2f5799269a77f7e0637e54" translate="yes" xml:space="preserve">
          <source>SQL_FLOAT</source>
          <target state="translated">SQL_FLOAT</target>
        </trans-unit>
        <trans-unit id="08b7a42a53a5720199970ec3fa4cf025bf5b22c8" translate="yes" xml:space="preserve">
          <source>SQL_INTEGER</source>
          <target state="translated">SQL_INTEGER</target>
        </trans-unit>
        <trans-unit id="7e00ace12d676fb74d7845d5d1d35952116513a4" translate="yes" xml:space="preserve">
          <source>SQL_LONGVARBINARY</source>
          <target state="translated">SQL_LONGVARBINARY</target>
        </trans-unit>
        <trans-unit id="ed88654b9a438ae53a8175f6179c83251064c775" translate="yes" xml:space="preserve">
          <source>SQL_LONGVARCHAR</source>
          <target state="translated">SQL_LONGVARCHAR</target>
        </trans-unit>
        <trans-unit id="c6c75c3802ed117f59969011b9edbe9412a86707" translate="yes" xml:space="preserve">
          <source>SQL_NUMERIC(p,s)</source>
          <target state="translated">SQL_NUMERIC(p,s)</target>
        </trans-unit>
        <trans-unit id="dcaa7de75f3489f9f028a78a3cd5b80cf2030584" translate="yes" xml:space="preserve">
          <source>SQL_REAL</source>
          <target state="translated">SQL_REAL</target>
        </trans-unit>
        <trans-unit id="1ca91ce05ccfddc420769fd4ca63f3d3dccdbc8b" translate="yes" xml:space="preserve">
          <source>SQL_SMALLINT</source>
          <target state="translated">SQL_SMALLINT</target>
        </trans-unit>
        <trans-unit id="bfb9edcb9b435728c68e579b981b6fa9470ccd90" translate="yes" xml:space="preserve">
          <source>SQL_TINYINT</source>
          <target state="translated">SQL_TINYINT</target>
        </trans-unit>
        <trans-unit id="58db8959343e3d85b6d284af9db1407bc23387e8" translate="yes" xml:space="preserve">
          <source>SQL_TYPE_DATE</source>
          <target state="translated">SQL_TYPE_DATE</target>
        </trans-unit>
        <trans-unit id="e7034fb809e7ef09b73e5eb35a62ea327a63ae1f" translate="yes" xml:space="preserve">
          <source>SQL_TYPE_TIME</source>
          <target state="translated">SQL_TYPE_TIME</target>
        </trans-unit>
        <trans-unit id="8c9291b6f7b7ee986fa9faf1798585a1bd425773" translate="yes" xml:space="preserve">
          <source>SQL_TYPE_TIMESTAMP</source>
          <target state="translated">SQL_TYPE_TIMESTAMP</target>
        </trans-unit>
        <trans-unit id="225f62b38aff4513b16c0f244be8949d8a05f239" translate="yes" xml:space="preserve">
          <source>SQL_VARBINARY</source>
          <target state="translated">SQL_VARBINARY</target>
        </trans-unit>
        <trans-unit id="f8235faff3a0368099d6acfbe6c632e9fb30e43c" translate="yes" xml:space="preserve">
          <source>SQL_VARCHAR(size)</source>
          <target state="translated">SQL_VARCHAR(size)</target>
        </trans-unit>
        <trans-unit id="988fbc81d6b32171a1735bcd3572fc39dd318506" translate="yes" xml:space="preserve">
          <source>SQL_WCHAR(size)</source>
          <target state="translated">SQL_WCHAR(size)</target>
        </trans-unit>
        <trans-unit id="e4de9a32bd061a4b696621aa782c8916bbd60262" translate="yes" xml:space="preserve">
          <source>SQL_WLONGVARCHAR(size)</source>
          <target state="translated">SQL_WLONGVARCHAR(size)</target>
        </trans-unit>
        <trans-unit id="d7ee01e61597138df24af0de2bca67b7fc882af4" translate="yes" xml:space="preserve">
          <source>SQL_WVARCHAR(size)</source>
          <target state="translated">SQL_WVARCHAR(size)</target>
        </trans-unit>
        <trans-unit id="9cb2df3efbeaf92a30cf83171ac61c0430f70d58" translate="yes" xml:space="preserve">
          <source>SSH is a protocol for secure remote logon and other secure network services over an insecure network.</source>
          <target state="translated">SSH는 안전하지 않은 네트워크를 통한 보안 원격 로그온 및 기타 보안 네트워크 서비스를위한 프로토콜입니다.</target>
        </trans-unit>
        <trans-unit id="0afdc1a4bf6f1e9406ef90a1c1cf19d59ec1d196" translate="yes" xml:space="preserve">
          <source>SSH provides a single, full-duplex, and byte-oriented connection between client and server. The protocol also provides privacy, integrity, server authentication, and man-in-the-middle protection.</source>
          <target state="translated">SSH는 클라이언트와 서버간에 단일 전이중 및 바이트 지향 연결을 제공합니다. 이 프로토콜은 개인 정보 보호, 무결성, 서버 인증 및 MITM (Man-in-the-Middle) 보호도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7d06230740600d652783522966c6d51e1f556521" translate="yes" xml:space="preserve">
          <source>SSH services (clients and servers) are implemented as channels that are multiplexed over an SSH connection and communicates over the &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4254.txt&quot;&gt; SSH Connection Protocol&lt;/a&gt;&lt;/code&gt;. This module provides a callback API that takes care of generic channel aspects for clients, such as flow control and close messages. It lets the callback functions take care of the service (application) specific parts. This behavior also ensures that the channel process honors the principal of an OTP-process so that it can be part of a supervisor tree. This is a requirement of channel processes implementing a subsystem that will be added to the &lt;code&gt;ssh&lt;/code&gt; applications supervisor tree.</source>
          <target state="translated">SSH 서비스 (클라이언트 및 서버)는 SSH 연결을 통해 다중화되고 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4254.txt&quot;&gt; SSH Connection Protocol&lt;/a&gt;&lt;/code&gt; 통해 통신하는 채널로 구현됩니다 . 이 모듈은 흐름 제어 및 메시지 닫기와 같은 클라이언트의 일반 채널 측면을 처리하는 콜백 API를 제공합니다. 콜백 함수가 서비스 (응용 프로그램) 특정 부분을 처리하도록합니다. 이 동작은 또한 채널 프로세스가 OTP 프로세스의 주체를 존중하여 감독자 트리의 일부가 될 수 있도록합니다. 이것은 &lt;code&gt;ssh&lt;/code&gt; 응용 프로그램 감독자 트리에 추가 될 서브 시스템을 구현하는 채널 프로세스의 요구 사항입니다 .</target>
        </trans-unit>
        <trans-unit id="c44f0a794b41e42ac3afccf3d74e2813853224f4" translate="yes" xml:space="preserve">
          <source>SSH services (clients and servers) are implemented as channels that are multiplexed over an SSH connection and communicates over the &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4254.txt&quot;&gt; SSH Connection Protocol&lt;/a&gt;&lt;/code&gt;. This module provides a callback API that takes care of generic channel aspects for daemons, such as flow control and close messages. It lets the callback functions take care of the service (application) specific parts. This behavior also ensures that the channel process honors the principal of an OTP-process so that it can be part of a supervisor tree. This is a requirement of channel processes implementing a subsystem that will be added to the &lt;code&gt;ssh&lt;/code&gt; applications supervisor tree.</source>
          <target state="translated">SSH 서비스 (클라이언트 및 서버)는 SSH 연결을 통해 다중화되고 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4254.txt&quot;&gt; SSH Connection Protocol&lt;/a&gt;&lt;/code&gt; 통해 통신하는 채널로 구현됩니다 . 이 모듈은 흐름 제어 및 닫기 메시지와 같은 데몬의 일반 채널 측면을 처리하는 콜백 API를 제공합니다. 콜백 함수가 서비스 (응용 프로그램) 특정 부분을 처리하도록합니다. 이 동작은 또한 채널 프로세스가 OTP 프로세스의 주체를 존중하여 감독자 트리의 일부가 될 수 있도록합니다. 이것은 &lt;code&gt;ssh&lt;/code&gt; 응용 프로그램 감독자 트리에 추가 될 서브 시스템을 구현하는 채널 프로세스의 요구 사항입니다 .</target>
        </trans-unit>
        <trans-unit id="868eaf3f9ddf20e3b783bebac368d4b70ff8d20b" translate="yes" xml:space="preserve">
          <source>SSH typically uses PEM files for private keys but has its own file format for storing public keys. The &lt;code&gt;public_key&lt;/code&gt; application can be used to parse the content of SSH public-key files.</source>
          <target state="translated">SSH는 일반적으로 개인 키에 PEM ​​파일을 사용하지만 공개 키를 저장하기위한 자체 파일 형식을 가지고 있습니다. &lt;code&gt;public_key&lt;/code&gt; 응용 프로그램은 SSH 공개 키 파일의 내용을 분석하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0ea5120429512251b27539ccf110c1cc61bd8e3" translate="yes" xml:space="preserve">
          <source>SSH uses different sets of algorithms in different phases of a session. Which algorithms to use is negotiated by the client and the server at the beginning of a session. See &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4253&quot;&gt;RFC 4253&lt;/a&gt;&lt;/code&gt;, &quot;The Secure Shell (SSH) Transport Layer Protocol&quot; for details.</source>
          <target state="translated">SSH는 세션의 여러 단계에서 서로 다른 알고리즘 세트를 사용합니다. 사용할 알고리즘은 세션 시작시 클라이언트와 서버가 협상합니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4253&quot;&gt;RFC 4253&lt;/a&gt;&lt;/code&gt; , &quot;SSH (Secure Shell) 전송 계층 프로토콜&quot;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9754aba35f53e50126fc4abbaa19e6601a497bd7" translate="yes" xml:space="preserve">
          <source>SSH/SFTP client module.</source>
          <target state="translated">SSH / SFTP 클라이언트 모듈.</target>
        </trans-unit>
        <trans-unit id="1fa34e007a28bf94570fdaba75d92f19d2c16e66" translate="yes" xml:space="preserve">
          <source>SSL/TLS versions supported by default. Overridden by a version option on &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt;connect/[2,3,4]&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt;. For the negotiated SSL/TLS version, see &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기본적으로 SSL / TLS 버전이 지원됩니다. &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt;connect/[2,3,4]&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt; 의 버전 옵션으로 대체되었습니다 . 협상 된 SSL / TLS 버전은 &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e2b5c424944d51bd6968ff14d4718ab9b354721" translate="yes" xml:space="preserve">
          <source>STDLIB - Erlang standard libraries</source>
          <target state="translated">STDLIB-Erlang 표준 라이브러리</target>
        </trans-unit>
        <trans-unit id="69e2873f2dfa8dcbd99f348069284d097a2607b7" translate="yes" xml:space="preserve">
          <source>STREAM or DGRAM or SEQPACKET.</source>
          <target state="translated">스트림 또는 DGRAM 또는 SEQPACKET.</target>
        </trans-unit>
        <trans-unit id="6a40f01423e27c9b280a4da863ae7bcc065c82b9" translate="yes" xml:space="preserve">
          <source>SUSE Linux Enterprise Server 10 (x86_64) kernel 2.6.16.27-0.6-smp, with lksctp-tools-1.0.6</source>
          <target state="translated">SUSE Linux Enterprise Server 10 (x86_64) 커널 2.6.16.27-0.6-smp 및 lksctp-tools-1.0.6</target>
        </trans-unit>
        <trans-unit id="843d609a23d6c5a9ca3937e6a7c627bf14be2fea" translate="yes" xml:space="preserve">
          <source>SUSE Linux Enterprise Server 10 Service Pack 1 (x86_64) kernel 2.6.16.54-0.2.3-smp with lksctp-tools-1.0.7</source>
          <target state="translated">lksctp-tools-1.0.7을 사용하는 SUSE Linux Enterprise Server 10 서비스 팩 1 (x86_64) 커널 2.6.16.54-0.2.3-smp</target>
        </trans-unit>
        <trans-unit id="b5666ba4ff9ee05db0c478f56571ac6677e83dab" translate="yes" xml:space="preserve">
          <source>Samaritan</source>
          <target state="translated">Samaritan</target>
        </trans-unit>
        <trans-unit id="5d5d2205fdee47aac9c3c84e0db0e63d6eb80714" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-M -MF &amp;lt;File&amp;gt;.Pbeam&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-M -MF &amp;lt;File&amp;gt;.Pbeam&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="1dd52fa4c04fd1b24e1292547cc0b757af8d8409" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-W1&lt;/code&gt;. Default.</source>
          <target state="translated">동일 &lt;code&gt;-W1&lt;/code&gt; . 기본.</target>
        </trans-unit>
        <trans-unit id="eaec33fe88c4cba5e426dfdfa48523c8b72c7802" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#SMALL_BIG_EXT&quot;&gt;SMALL_BIG_EXT&lt;/a&gt;&lt;/code&gt; except that the length field is an unsigned 4 byte integer.</source>
          <target state="translated">길이 필드가 부호없는 4 바이트 정수라는 점을 제외하고 &lt;code&gt;&lt;a href=&quot;#SMALL_BIG_EXT&quot;&gt;SMALL_BIG_EXT&lt;/a&gt;&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="091a3e8f0c7a4bf0be2ff4ea6acca1bd54bd0708" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#SMALL_TUPLE_EXT&quot;&gt;SMALL_TUPLE_EXT&lt;/a&gt;&lt;/code&gt; except that &lt;code&gt;Arity&lt;/code&gt; is an unsigned 4 byte integer in big-endian format.</source>
          <target state="translated">동일 &lt;code&gt;&lt;a href=&quot;#SMALL_TUPLE_EXT&quot;&gt;SMALL_TUPLE_EXT&lt;/a&gt;&lt;/code&gt; 것을 제외하고 &lt;code&gt;Arity&lt;/code&gt; 빅 엔디안 형식의 부호없는 4 바이트 정수입니다.</target>
        </trans-unit>
        <trans-unit id="1d6b682e4b75303ae3931aeb0787900cb01a8336" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#absname-1&quot;&gt;absname/1&lt;/a&gt;&lt;/code&gt;, except that the directory to which the filename is to be made relative is specified in argument &lt;code&gt;Dir&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;&lt;a href=&quot;#absname-1&quot;&gt;absname/1&lt;/a&gt;&lt;/code&gt; 파일 이름은 상대가 인수에 지정된 만들 수되는 디렉토리 것을 제외하고, &lt;code&gt;Dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbdc21b245a6d44ad2d381c2c3e1ce2136a87054" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#app_node-2&quot;&gt;ct_rpc:app_node/2&lt;/a&gt;&lt;/code&gt;, except that argument &lt;code&gt;FailOnBadRPC&lt;/code&gt; determines if the search for a candidate node is to stop if &lt;code&gt;badrpc&lt;/code&gt; is received at some point.</source>
          <target state="translated">동일 &lt;code&gt;&lt;a href=&quot;#app_node-2&quot;&gt;ct_rpc:app_node/2&lt;/a&gt;&lt;/code&gt; 그 인수를 제외하고, &lt;code&gt;FailOnBadRPC&lt;/code&gt; 이 후보 노드에 대한 검색이 경우 중지하는 것입니다 여부를 결정 &lt;code&gt;badrpc&lt;/code&gt; 가 어느 시점에서 수신된다.</target>
        </trans-unit>
        <trans-unit id="925d59bf510477bde4edc3303dc391801fc91fde" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#block_call-4&quot;&gt;block_call/4&lt;/a&gt;&lt;/code&gt;, but with a time-out value in the same manner as &lt;code&gt;&lt;a href=&quot;#call-5&quot;&gt;call/5&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#block_call-4&quot;&gt;block_call/4&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 &lt;code&gt;&lt;a href=&quot;#call-5&quot;&gt;call/5&lt;/a&gt;&lt;/code&gt; 와 동일한 방식으로 시간 종료 값을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="bc542637333dfecfdef1d83e1143023f6956bba6" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt;, but the RPC server at &lt;code&gt;Node&lt;/code&gt; does not create a separate process to handle the call. Thus, this function can be used if the intention of the call is to block the RPC server from any other incoming requests until the request has been handled. The function can also be used for efficiency reasons when very small fast functions are evaluated, for example, BIFs that are guaranteed not to suspend.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 &lt;code&gt;Node&lt;/code&gt; 의 RPC 서버 는 호출을 처리하기위한 별도의 프로세스를 생성하지 않습니다. 따라서이 함수는 호출이 요청이 처리 될 때까지 다른 들어오는 요청으로부터 RPC 서버를 차단하려는 경우에 사용할 수 있습니다. 이 기능은 매우 작은 빠른 기능 (예 : 일시 중단되지 않는 BIF)을 평가할 때 효율성을 위해 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3c75f20579c35f73b846a50992733e855ab6388" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#enif_open_resource_type&quot;&gt;enif_open_resource_type&lt;/a&gt;&lt;/code&gt; except it accepts additional callback functions for resource types that are used together with &lt;code&gt;&lt;a href=&quot;#enif_select&quot;&gt;enif_select&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;&lt;a href=&quot;#enif_open_resource_type&quot;&gt;enif_open_resource_type&lt;/a&gt;&lt;/code&gt; 그것을 제외하고는 함께 사용되는 자원 유형에 대한 추가 콜백 함수 받아 &lt;code&gt;&lt;a href=&quot;#enif_select&quot;&gt;enif_select&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="7b90f96df2e09f3cc92aed22fe0ac3626f5e88da" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#form-1&quot;&gt;form/1,2&lt;/a&gt;&lt;/code&gt;, but only for attribute &lt;code&gt;Attribute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#form-1&quot;&gt;form/1,2&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 &lt;code&gt;Attribute&lt;/code&gt; 속성 에만 해당됩니다 .</target>
        </trans-unit>
        <trans-unit id="a911e96402229b1eb1f2b33fc5d2b9472024369f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#form-1&quot;&gt;form/1,2&lt;/a&gt;&lt;/code&gt;, but only for function &lt;code&gt;Function&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#form-1&quot;&gt;form/1,2&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 &lt;code&gt;Function&lt;/code&gt; 함수 에만 해당됩니다 .</target>
        </trans-unit>
        <trans-unit id="d1729acaf17691621de03baf6be64add5272b4c5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#form-1&quot;&gt;form/1,2&lt;/a&gt;&lt;/code&gt;, but only for the guard test &lt;code&gt;Guard&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#form-1&quot;&gt;form/1,2&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 guard test &lt;code&gt;Guard&lt;/code&gt; 에만 해당됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b52ca4aacf3e4d19c3eb65a3de49b2b2a600e47" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#form-1&quot;&gt;form/1,2&lt;/a&gt;&lt;/code&gt;, but only for the sequence of expressions in &lt;code&gt;Expressions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#form-1&quot;&gt;form/1,2&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 &lt;code&gt;Expressions&lt;/code&gt; 의 표현식 시퀀스에만 해당됩니다 .</target>
        </trans-unit>
        <trans-unit id="8110668a5e4240f01d8e0a47a7689d8a8c543d67" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#insert-2&quot;&gt;insert/2&lt;/a&gt;&lt;/code&gt; except that instead of overwriting objects with the same key (for &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;ordered_set&lt;/code&gt;) or adding more objects with keys already existing in the table (for &lt;code&gt;bag&lt;/code&gt; and &lt;code&gt;duplicate_bag&lt;/code&gt;), &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">동일 &lt;code&gt;&lt;a href=&quot;#insert-2&quot;&gt;insert/2&lt;/a&gt;&lt;/code&gt; 대신 (에 대해 동일한 키를 덮어 객체의 제외 &lt;code&gt;set&lt;/code&gt; 또는 &lt;code&gt;ordered_set&lt;/code&gt; 또는 키가 이미 (대한 테이블에 기존과 더 많은 개체 추가) &lt;code&gt;bag&lt;/code&gt; 및 &lt;code&gt;duplicate_bag&lt;/code&gt; 을 ), &lt;code&gt;false&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="afbd41f7e300185de78f9907a01ef2cf24dd1629" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;microsecond&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;microsecond&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="334964d9a9214d6e8091380042206337269e14ef" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;millisecond&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;millisecond&lt;/a&gt;&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="1125cbef217a880467e0a353d66ea64385ec357d" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;nanosecond&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;nanosecond&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9d36f7b62e20c1d5679703b1a4d5929976c5c26c" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;second&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;second&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="3c825cce3133631c41448572f2ff0ec61f069432" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#wildcard-1&quot;&gt;wildcard/1&lt;/a&gt;&lt;/code&gt;, except that &lt;code&gt;Cwd&lt;/code&gt; is used instead of the working directory.</source>
          <target state="translated">동일 &lt;code&gt;&lt;a href=&quot;#wildcard-1&quot;&gt;wildcard/1&lt;/a&gt;&lt;/code&gt; 것을 제외하고, &lt;code&gt;Cwd&lt;/code&gt; 대신 작업 디렉토리로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d1b737b965f0744f35cea4edccc54c8a290a31c2" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#world-1&quot;&gt;world/0,1&lt;/a&gt;&lt;/code&gt;, but the hosts are specified as argument instead of being read from &lt;code&gt;.hosts.erlang&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#world-1&quot;&gt;world/0,1&lt;/a&gt;&lt;/code&gt; 과 동일 하지만 호스트는 &lt;code&gt;.hosts.erlang&lt;/code&gt; 에서 읽지 않고 인수로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="64f274ec2ad6d3c5f7480a8e8cdc63f692557a04" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#driver_system_info&quot;&gt;driver_system_info&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#driver_system_info&quot;&gt;driver_system_info&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="95ffc3a63bd55f27e3ffeee3f05f693a3614f680" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_broadcast&quot;&gt;erl_drv_cond_broadcast&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_broadcast&quot;&gt;erl_drv_cond_broadcast&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d02c7b88b7bfea5d9fbd19057b1a49df2a834acb" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_create&quot;&gt;erl_drv_cond_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_create&quot;&gt;erl_drv_cond_create&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="1e6781420817b1ccf7616ffdbe005005b3392791" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_destroy&quot;&gt;erl_drv_cond_destroy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_destroy&quot;&gt;erl_drv_cond_destroy&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0b681e8e4942ae7a1721bcff3a3d05bec6c5db0e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_name&quot;&gt;erl_drv_cond_name&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_name&quot;&gt;erl_drv_cond_name&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="19fa4e9faf50dd3654128a028f5333d8a6ee5c13" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_signal&quot;&gt;erl_drv_cond_signal&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_signal&quot;&gt;erl_drv_cond_signal&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="a893044914db8f33ae3f2d8c24995ac40d12f729" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_wait&quot;&gt;erl_drv_cond_wait&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_cond_wait&quot;&gt;erl_drv_cond_wait&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="2e19b0af10fe5be0891377ae70afff6cadba12c5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_equal_tids&quot;&gt;erl_drv_equal_tids&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_equal_tids&quot;&gt;erl_drv_equal_tids&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="2066a306f2ba40cb24d4815a3233c3c40e17c33b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_getenv&quot;&gt;erl_drv_getenv&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_getenv&quot;&gt;erl_drv_getenv&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b70693115c4f746f6db922a2418014023917166e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_create&quot;&gt;erl_drv_mutex_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_create&quot;&gt;erl_drv_mutex_create&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="cb0da5ca0f54c349e7ebc3ceacb6551b9f742bbe" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_destroy&quot;&gt;erl_drv_mutex_destroy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_destroy&quot;&gt;erl_drv_mutex_destroy&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="35e1b91b64d720ec037db9e75bfca1a21c40c0af" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_lock&quot;&gt;erl_drv_mutex_lock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_lock&quot;&gt;erl_drv_mutex_lock&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9ce3d3049107483231786ea3cbd07466650da046" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_name&quot;&gt;erl_drv_mutex_name&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_name&quot;&gt;erl_drv_mutex_name&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b2458e8be4395cadbef560c6cc16ab4eafbe85f7" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_trylock&quot;&gt;erl_drv_mutex_trylock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_trylock&quot;&gt;erl_drv_mutex_trylock&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="497eedbe9dd5315b181a85aad3b7107fb9ad17c5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_unlock&quot;&gt;erl_drv_mutex_unlock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_mutex_unlock&quot;&gt;erl_drv_mutex_unlock&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="43879bb7ccb7b7a31ebbaf920bf2afa08800ec6e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_create&quot;&gt;erl_drv_rwlock_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_create&quot;&gt;erl_drv_rwlock_create&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="37d42aaf26b94e276d1d4532a8fb38279f113bf8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_destroy&quot;&gt;erl_drv_rwlock_destroy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_destroy&quot;&gt;erl_drv_rwlock_destroy&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b2a1dc9d42a408ffa30c4a32d7f8137158b17050" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_name&quot;&gt;erl_drv_rwlock_name&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_name&quot;&gt;erl_drv_rwlock_name&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f29ea873b376759b9a84c12d2670b51b712e4013" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_rlock&quot;&gt;erl_drv_rwlock_rlock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_rlock&quot;&gt;erl_drv_rwlock_rlock&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7c3e1e5b576192717a941ffdf550c61d53f6cc14" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_runlock&quot;&gt;erl_drv_rwlock_runlock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_runlock&quot;&gt;erl_drv_rwlock_runlock&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="248f66e3d17f474b58ab9f5fbee4754c36233ec5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_rwlock&quot;&gt;erl_drv_rwlock_rwlock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_rwlock&quot;&gt;erl_drv_rwlock_rwlock&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="257bfbd75d2d2c7bf066069d5d92751af44ada3f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_rwunlock&quot;&gt;erl_drv_rwlock_rwunlock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_rwunlock&quot;&gt;erl_drv_rwlock_rwunlock&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="bbe9467d1ecc8b67893d7e8af6608111d23ffea1" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_tryrlock&quot;&gt;erl_drv_rwlock_tryrlock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_tryrlock&quot;&gt;erl_drv_rwlock_tryrlock&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ed9242a2fc3ad7464924602399b9a878a2f9dbb9" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_tryrwlock&quot;&gt;erl_drv_rwlock_tryrwlock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_rwlock_tryrwlock&quot;&gt;erl_drv_rwlock_tryrwlock&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="19d5e3f5496aac113066107515037aca34f618aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="feb505d35ed75bfa89c6dd28fd85c6541a29c91a" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_exit&quot;&gt;erl_drv_thread_exit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_exit&quot;&gt;erl_drv_thread_exit&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="fa96aa2b4dbbc50e3e6da5b6410d987f79f06114" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_join&quot;&gt;erl_drv_thread_join&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_join&quot;&gt;erl_drv_thread_join&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="944bbca4ff8d4b5fc5ed9354f23a731361cb3f24" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_name&quot;&gt;erl_drv_thread_name&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_name&quot;&gt;erl_drv_thread_name&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ee8ff31b78246ba33351bf3f5c1758656e78deeb" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="adab41065a97ca054b069bb28f129bc167ea4cf7" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_opts_destroy&quot;&gt;erl_drv_thread_opts_destroy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_opts_destroy&quot;&gt;erl_drv_thread_opts_destroy&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="00f0db56e7122d399c99c616abf4fb565ca8cabb" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_self&quot;&gt;erl_drv_thread_self&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_thread_self&quot;&gt;erl_drv_thread_self&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="76efeffdbc52cf14a49c91e7ceb8d6b6bed0aba3" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_tsd_get&quot;&gt;erl_drv_tsd_get&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_tsd_get&quot;&gt;erl_drv_tsd_get&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="422b6a51c975bfadf4ddf0cb80b70ad55ec8b393" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_tsd_key_create&quot;&gt;erl_drv_tsd_key_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_tsd_key_create&quot;&gt;erl_drv_tsd_key_create&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="763247405749e1337cb9f65f115ebc41f2ac8b14" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_tsd_key_destroy&quot;&gt;erl_drv_tsd_key_destroy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_tsd_key_destroy&quot;&gt;erl_drv_tsd_key_destroy&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="5bbf9fd122155e01c4402bf9e53cf6a9e8ce68df" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_tsd_set&quot;&gt;erl_drv_tsd_set&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_tsd_set&quot;&gt;erl_drv_tsd_set&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="36f293f613cd9faa848c6985a32d15f4598a0086" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;analyse([OptionName])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;analyse([OptionName])&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="97f5770180a86d9a4c1908cfabdc027536945f63" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;analyse([])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;analyse([])&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="6c9a5bd0a24b5295b0157f6bea6adab68fabbf11" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;analyse([{OptionName, OptionValue}])&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;analyse([{OptionName, OptionValue}])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5080909be352aacd3fa4030c1b710f3bc5526fe4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;apply(Fun, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;apply(Fun, [])&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0c3bb0a13c0e2ffa65f898d04ad5b33b3309ab49" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;apply(Func, Args, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;apply(Func, Args, [])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="bac76c21d72ff88a1ba2a044e4cd9ce234b388e2" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;apply(Module, Function, Args)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;apply(Module, Function, Args)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="be49b27fab6d230dcbd0e03a6ace7da39351daf8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;apply({Module, Function}, Args, OptionList)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;apply({Module, Function}, Args, OptionList)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="e489f5b29041343d5c787d7b6c707dd8084e5254" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;apply({Module, Function}, Args, [])&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;apply({Module, Function}, Args, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa5b47ca348473ad5e5254505aeee5b54a64de48" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;bin_to_list(Subject, {0,byte_size(Subject)})&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;bin_to_list(Subject, {0,byte_size(Subject)})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d91919acb5b90645501b571083ac218fd8213318" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;call(Node, Module, Function, Args, infinity)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;call(Node, Module, Function, Args, infinity)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="22053479b2e9e9db7691e5e80f6986b076f2839d" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;characters_to_binary(Data, InEncoding, unicode)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;characters_to_binary(Data, InEncoding, unicode)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="c47a1378fd09bb5ebb2d845631aea1f107ac79bd" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;characters_to_binary(Data, unicode, unicode)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;characters_to_binary(Data, unicode, unicode)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="646909bbb6c17888c1ba5b20d1c1bd7961377c3a" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;characters_to_list(Data, unicode)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;characters_to_list(Data, unicode)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="dc622c0588d189ecce8811fe8ffadf9ff73a15e2" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;clear(node())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;clear(node())&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="088a2664ef443564f8534bc4c55a089842e91bfb" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;collect(node())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collect(node())&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="aa121e38aab0a8ea5852c4f21e9886e6ad3630b8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;compose_query/1&lt;/code&gt; but with an additional &lt;code&gt;Options&lt;/code&gt; parameter, that controls the encoding (&quot;charset&quot;) used by the encoding algorithm. There are two supported encodings: &lt;code&gt;utf8&lt;/code&gt; (or &lt;code&gt;unicode&lt;/code&gt;) and &lt;code&gt;latin1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;compose_query/1&lt;/code&gt; 과 동일 하지만 추가 &lt;code&gt;Options&lt;/code&gt; 매개 변수가 있으며 인코딩 알고리즘에서 사용하는 인코딩 ( &quot;charset&quot;)을 제어합니다. 지원되는 인코딩은 &lt;code&gt;utf8&lt;/code&gt; (또는 &lt;code&gt;unicode&lt;/code&gt; )과 &lt;code&gt;latin1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b839fa71882a3f5ae99af0cd3d831883a6e7dff4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;conflicts([])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;conflicts([])&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b1343905d9147f0b26371aa06b54c213a9d3daf2" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;connect(Socket, Addr, Port, Opts, infinity)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;connect(Socket, Addr, Port, Opts, infinity)&lt;/code&gt; 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="4ad056b80c2691b43a1a46485f9a77aee0311eeb" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;connect_init(Socket, Addr, Port, Opts, infinity)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;connect_init(Socket, Addr, Port, Opts, infinity)&lt;/code&gt; 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="f2571e51da8e9a84acf34e4cc29f132c026dd187" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;copy(Subject, 1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;copy(Subject, 1)&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="42ac1d2385795afa0dd88ae4d6519ff798f29727" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;decode_unsigned(Subject, big)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;decode_unsigned(Subject, big)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9bd8bf4620887f6b82e06ec97f816875ab360af0" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;deflate(Z, Data, none)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;deflate(Z, Data, none)&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="49cbbc854b16fa9b6dd37f5e1430481b6be93ada" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;encode_unsigned(Unsigned, big)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;encode_unsigned(Unsigned, big)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f4eaaca79f40ade8f6ff4e0c3ed3f79748dff1d7" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;files_or_dirs&lt;/code&gt;, but the specified directories are searched recursively for subdirectories containing &lt;code&gt;.erl&lt;/code&gt; or &lt;code&gt;.beam&lt;/code&gt; files in them, depending on the type of analysis.</source>
          <target state="translated">&lt;code&gt;files_or_dirs&lt;/code&gt; 와 동일 하지만 분석 유형에 따라 지정된 디렉토리에서 &lt;code&gt;.erl&lt;/code&gt; 또는 &lt;code&gt;.beam&lt;/code&gt; 파일을 포함하는 서브 디렉토리를 재귀 적으로 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="fbe1dc00f2509cac562fc7e6f650e34a40c85737" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;ia(Pid)&lt;/code&gt;, where &lt;code&gt;Pid&lt;/code&gt; is the result of calling the shell function &lt;code&gt;pid(X,Y,Z)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ia(Pid)&lt;/code&gt; 와 동일합니다 . 여기서 &lt;code&gt;Pid&lt;/code&gt; 는 쉘 함수 &lt;code&gt;pid(X,Y,Z)&lt;/code&gt; 를 호출 한 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="f0be418e30659da22522593d3a2cfd4aece0d73f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;ia(Pid, Function)&lt;/code&gt;, where &lt;code&gt;Pid&lt;/code&gt; is the result of calling the shell function &lt;code&gt;pid(X,Y,Z)&lt;/code&gt;. An attached process is expected to call the unofficial function &lt;code&gt;int:attached(Pid)&lt;/code&gt; and to be able to handle messages from the interpreter. For an example, see &lt;code&gt;dbg_wx_trace.erl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ia(Pid, Function)&lt;/code&gt; 과 동일합니다 . 여기서 &lt;code&gt;Pid&lt;/code&gt; 는 쉘 함수 &lt;code&gt;pid(X,Y,Z)&lt;/code&gt; 를 호출 한 결과입니다 . 첨부 된 프로세스는 비공식 함수 &lt;code&gt;int:attached(Pid)&lt;/code&gt; 를 호출 하고 인터프리터의 메시지를 처리 ​​할 수 ​​있어야합니다. 예는 &lt;code&gt;dbg_wx_trace.erl&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4bdbdce416d8e80cf3644dccc5dce0908ff66f4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;inspect(Lock, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inspect(Lock, [])&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e4a6f82bc6ffb1d45c5b5d1654c14a792c25e536" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;iodata()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iodata()&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="4dbdc2afd9d15a11d5e6374f0140f7f950272fdc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;iolist()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iolist()&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="73aa6241086aba51a1d60600df29090cbb48dd82" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;load_file(Module)&lt;/code&gt;, but &lt;code&gt;Filename&lt;/code&gt; is an absolute or relative filename. The code path is not searched. It returns a value in the same way as &lt;code&gt;&lt;a href=&quot;#load_file-1&quot;&gt;load_file/1&lt;/a&gt;&lt;/code&gt;. Notice that &lt;code&gt;Filename&lt;/code&gt; must not contain the extension (for example, &lt;code&gt;.beam&lt;/code&gt;) because &lt;code&gt;load_abs/1&lt;/code&gt; adds the correct extension.</source>
          <target state="translated">&lt;code&gt;load_file(Module)&lt;/code&gt; 과 동일 하지만 &lt;code&gt;Filename&lt;/code&gt; 은 절대 또는 상대 파일 이름입니다. 코드 경로가 검색되지 않습니다. &lt;code&gt;&lt;a href=&quot;#load_file-1&quot;&gt;load_file/1&lt;/a&gt;&lt;/code&gt; 과 같은 방식으로 값을 리턴합니다 . 통지 &lt;code&gt;Filename&lt;/code&gt; (예를 들어, 확장 포함 할 수 없습니다 &lt;code&gt;.beam&lt;/code&gt; 을 하기 때문에) &lt;code&gt;load_abs/1&lt;/code&gt; 올바른 확장자를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="90c68999d5be593fcb51decf2e32aca5517013bb" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;locations([])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;locations([])&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="806497262888ad7c2782b723e556c575cf78b849" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;match(Subject, Pattern, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;match(Subject, Pattern, [])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="80e58fd3e67753d68f2cf4c5334e1313acb3ee70" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;matches(Subject, Pattern, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;matches(Subject, Pattern, [])&lt;/code&gt; 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="5ab2c8c4b85cd803a1fb8e9d8e126533ba05fd5e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;normalize/1&lt;/code&gt; but with an additional &lt;code&gt;Options&lt;/code&gt; parameter, that controls if the normalized URI shall be returned as an uri_map(). There is one supported option: &lt;code&gt;return_map&lt;/code&gt;.</source>
          <target state="translated">표준화 된 URI가 uri_map ()으로 리턴되는지 여부를 제어 하는 추가 &lt;code&gt;Options&lt;/code&gt; 매개 변수 가있는 &lt;code&gt;normalize/1&lt;/code&gt; 과 동일 합니다. 지원되는 옵션은 &lt;code&gt;return_map&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="178898a80da1160f835a6eeba0e98d140e34ad4c" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;part(Subject, {Pos, Len})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;part(Subject, {Pos, Len})&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="7668f9d11d5fd527d0df5dba836de32e1473fa9a" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;pid(node(), Id, Serial)&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;pid(node(), Id, Serial)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa153255a5c21285ccfc682a80d4d1104f680c34" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;port(node(), Id)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;port(node(), Id)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="488dc429e235dd3e75cae4894be13fa35cf67a1e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;print/1&lt;/code&gt; with the additional condition that &lt;code&gt;TraceInfo&lt;/code&gt; is output only if &lt;code&gt;Label&lt;/code&gt; is equal to the label component of the trace token.</source>
          <target state="translated">동일 &lt;code&gt;print/1&lt;/code&gt; 이라는 추가적인 조건 &lt;code&gt;TraceInfo&lt;/code&gt; 이 경우에만 출력 &lt;code&gt;Label&lt;/code&gt; 추적 토큰의 라벨 컴포넌트 같다.</target>
        </trans-unit>
        <trans-unit id="f4b2641c297e0c9739bbbc7591c9d1cd668182d4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;profile([OptionName])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;profile([OptionName])&lt;/code&gt; 과 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="5a311d4cc5a46f838c5cbb35b88daaf767ab3aab" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;profile([])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;profile([])&lt;/code&gt; 과 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="f080c04f74921907f6f31ad55bf9755738d0f038" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;profile([{OptionName, OptionValue}])&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;profile([{OptionName, OptionValue}])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a3ec251c121d79112df8c414ae6360d0fa11c32" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;replace(Subject, Pattern, Replacement,[])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;replace(Subject, Pattern, Replacement,[])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="535b4ebd4f2e369822c08fa8d8efca2f78720f3c" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;replace(Subject, RE, Replacement, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;replace(Subject, RE, Replacement, [])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="4f105df83861c653861dfdaa3bca3c498a9d8d95" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;rt_clear(node())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rt_clear(node())&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="331aaa785d602438659682f39c81cfd6e5163572" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;rt_collect(node())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rt_collect(node())&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b449446d9dfae57b152a55bf345c08d74c48b621" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;rt_mask(node())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rt_mask(node())&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="3bb7c6d76bde84ea2c7c9963a6e77367de45e00b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;rt_mask(node(), Categories)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rt_mask(node(), Categories)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="5b090940386c665e70b3f569e4d65da42e9d3249" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;rt_opt(node(), {Type, Opt})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rt_opt(node(), {Type, Opt})&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="52309103792533fa7557691e50778c75c6c25e8d" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;run(Subject,RE,[])&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;run(Subject,RE,[])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d350045c90af802ece93e262150806760a7e2c4c" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;send_after(Time, self(), Message)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;send_after(Time, self(), Message)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="a2abbf2cc6a9952c0e2e7a90014430cce1cb68ff" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;send_interval(Time, self(), Message)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;send_interval(Time, self(), Message)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="b9a714fd3eece6bf8c66229cea3f1674aeb6f80d" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;seq_trace:get_token/0&lt;/code&gt; and only allowed in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">&lt;code&gt;seq_trace:get_token/0&lt;/code&gt; 과 동일하며 추적시 &lt;code&gt;MatchBody&lt;/code&gt; 부분 에서만 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="cf6d85011094a626e10da3c29d5eca90ef102798" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;split(Subject, Pattern, [])&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;split(Subject, Pattern, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e79584f05a65c6666ecca9fd71cc5778b3a8f1a5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;split(Subject, RE, [])&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;split(Subject, RE, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b73be31584f64b18c19141c6b1fe83aa2ec02c2b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;stop(normal)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stop(normal)&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="bc5ffb9e0c1cb6487dc43c1c6dc922ac81b03a84" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;trace([OptionName])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;trace([OptionName])&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9b5eefe616bd9b8558eead207242b89ea7d13817" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;trace([start, verbose, {file, Filename}])&lt;/code&gt;.</source>
          <target state="translated">동일로 &lt;code&gt;trace([start, verbose, {file, Filename}])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33edeaaa8ffe14e80651505a214bec75a42c1352" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;trace([start, verbose])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;trace([start, verbose])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="aa45a6df991d017a673d913e12261220224e9a1b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;trace([start, {file, Filename}])&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;trace([start, {file, Filename}])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f56bdd0adfbf76b498b79e43e8ac5c2a7a75db3d" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;trace([{OptionName, OptionValue}])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;trace([{OptionName, OptionValue}])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="01d6ed4dacf4a98da30782897c5b98598d0ae5a8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;write_file/2&lt;/code&gt;, but takes a third argument &lt;code&gt;Modes&lt;/code&gt;, a list of possible modes, see &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt;. The mode flags &lt;code&gt;binary&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; are implicit, so they are not to be used.</source>
          <target state="translated">&lt;code&gt;write_file/2&lt;/code&gt; 와 동일 하지만 가능한 모드 목록 인 세 번째 인수 &lt;code&gt;Modes&lt;/code&gt; 를 사용합니다 ( &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; 참조) . &lt;code&gt;binary&lt;/code&gt; 및 &lt;code&gt;write&lt;/code&gt; 모드 플래그 는 암시 적이므로 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="92fbedcdc3e536b8bcd45edbc163212b8ea6eb16" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;zlib:deflateInit(Z, default)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;zlib:deflateInit(Z, default)&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="5ecb4cc185a93ca3951dc57ee4d9e14281c3f33f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;{ip, Address}&lt;/code&gt;. If the host has many network interfaces, this option specifies which one to use.</source>
          <target state="translated">&lt;code&gt;{ip, Address}&lt;/code&gt; 와 동일합니다 . 호스트에 많은 네트워크 인터페이스가있는 경우이 옵션은 사용할 인터페이스를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="601b1ebe860ca80c48ed994604d47fee8939cd52" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;{wordsize, internal}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{wordsize, internal}&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="cc1cef99bf509e1b811bf28e8efe1f6c886b3b9e" translate="yes" xml:space="preserve">
          <source>Same as above except that memory was reallocated instead of allocated when the system ran out of memory.</source>
          <target state="translated">시스템 메모리가 부족할 때 메모리가 할당되지 않고 재 할당된다는 점을 제외하면 위와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e489f529f4e8f8a8d111987da5f1258c6c3dd890" translate="yes" xml:space="preserve">
          <source>Same as calling &lt;code&gt;&lt;a href=&quot;#convert_time_unit-3&quot;&gt;erlang:convert_time_unit&lt;/a&gt;&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#monotonic_time-0&quot;&gt;erlang:monotonic_time()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;, native, Unit)&lt;/code&gt;, however optimized for commonly used &lt;code&gt;Unit&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#convert_time_unit-3&quot;&gt;erlang:convert_time_unit&lt;/a&gt;&lt;/code&gt; &lt;code&gt;(&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#monotonic_time-0&quot;&gt;erlang:monotonic_time()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;, native, Unit)&lt;/code&gt; 호출과 동일 하지만 일반적으로 사용되는 &lt;code&gt;Unit&lt;/code&gt; 에 최적화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="52cbf5d13926854c5722e1230349b894899f1cb5" translate="yes" xml:space="preserve">
          <source>Same as calling &lt;code&gt;&lt;a href=&quot;#convert_time_unit-3&quot;&gt;erlang:convert_time_unit&lt;/a&gt;&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#time_offset-0&quot;&gt;erlang:time_offset()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;, native, Unit)&lt;/code&gt; however optimized for commonly used &lt;code&gt;Unit&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#convert_time_unit-3&quot;&gt;erlang:convert_time_unit&lt;/a&gt;&lt;/code&gt; &lt;code&gt;(&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#time_offset-0&quot;&gt;erlang:time_offset()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;, native, Unit)&lt;/code&gt; 호출과 동일 하지만 일반적으로 사용되는 &lt;code&gt;Unit&lt;/code&gt; 에 최적화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6585ac9d63f5e12f5eaea3761040279fbd18f312" translate="yes" xml:space="preserve">
          <source>Same as calling &lt;code&gt;erlang:set_cookie(node(), Cookie)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erlang:set_cookie(node(), Cookie)&lt;/code&gt; 호출과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="e982c07a62af0abf3e0f564524867b4a6ca5679c" translate="yes" xml:space="preserve">
          <source>Same as command-line argument &lt;code&gt;+sbt db&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">명령 줄 인수와 동일 &lt;code&gt;+sbt db&lt;/code&gt; 의 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77ed8f24c1a7079fd5489ce99dfd4fd88c6f00d9" translate="yes" xml:space="preserve">
          <source>Same as command-line argument &lt;code&gt;+sbt nnps&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">명령 줄 인수와 동일 &lt;code&gt;+sbt nnps&lt;/code&gt; 의 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bae6fd1f10042d4e99d0ee170c57fbb4c848cfc" translate="yes" xml:space="preserve">
          <source>Same as command-line argument &lt;code&gt;+sbt nnts&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">명령 줄 인수와 동일 &lt;code&gt;+sbt nnts&lt;/code&gt; 의 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e6e2d8e160350451f08a525cb183906b5b91942" translate="yes" xml:space="preserve">
          <source>Same as command-line argument &lt;code&gt;+sbt ns&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">커맨드 라인 인수 동일 &lt;code&gt;+sbt ns&lt;/code&gt; 의 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e2c41bee91cf6ab982d18ef0ef454091c4fb822" translate="yes" xml:space="preserve">
          <source>Same as command-line argument &lt;code&gt;+sbt ps&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">명령 줄 인수와 동일 &lt;code&gt;+sbt ps&lt;/code&gt; 의 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85d1373fbf634c33cd41a09234c6206120eb55a8" translate="yes" xml:space="preserve">
          <source>Same as command-line argument &lt;code&gt;+sbt s&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">명령 줄 인수와 동일 &lt;code&gt;+sbt s&lt;/code&gt; 에서 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fcdbebe32be1a19079e7549cbaeeb081ff15974" translate="yes" xml:space="preserve">
          <source>Same as command-line argument &lt;code&gt;+sbt tnnps&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">명령 줄 인수와 동일 &lt;code&gt;+sbt tnnps&lt;/code&gt; 의 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dc28257a7cd67e26f894f99a440cf4b4653cc44" translate="yes" xml:space="preserve">
          <source>Same as command-line argument &lt;code&gt;+sbt ts&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">명령 줄 인수와 동일 &lt;code&gt;+sbt ts&lt;/code&gt; 의 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b0aee52d5b582fc05fee7c4b03a3c8e534a06ab" translate="yes" xml:space="preserve">
          <source>Same as command-line argument &lt;code&gt;+sbt u&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">명령 줄 인수와 동일 &lt;code&gt;+sbt u&lt;/code&gt; 에 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6143dd11d410bcf1c73de8bf37dc85e7c0e7020f" translate="yes" xml:space="preserve">
          <source>Same as ctp({'_', '_', '_'})</source>
          <target state="translated">ctp ({ '_', '_', '_'})와 동일</target>
        </trans-unit>
        <trans-unit id="c807e8ad501b346ab5e774e7d94b9324510592e8" translate="yes" xml:space="preserve">
          <source>Same as ctp({Module, '_', '_'})</source>
          <target state="translated">ctp ({모듈, '_', '_'})와 동일</target>
        </trans-unit>
        <trans-unit id="adf384ad563f90a24d61d50979b687d9c231da37" translate="yes" xml:space="preserve">
          <source>Same as ctp({Module, Function, '_'})</source>
          <target state="translated">ctp ({모듈, 함수, '_'})와 동일</target>
        </trans-unit>
        <trans-unit id="0287a7297a0c2f3c9c493cd1005f68e80eb79ac9" translate="yes" xml:space="preserve">
          <source>Same as ctp({Module, Function, Arity})</source>
          <target state="translated">ctp ({Module, Function, Arity})와 동일</target>
        </trans-unit>
        <trans-unit id="c83a0c65d1d474089d1143975a2381c580181b18" translate="yes" xml:space="preserve">
          <source>Same as ctpg({'_', '_', '_'})</source>
          <target state="translated">ctpg ({ '_', '_', '_'})와 동일</target>
        </trans-unit>
        <trans-unit id="d81e81490bccbe77425debc50fb7e929ee95b3ac" translate="yes" xml:space="preserve">
          <source>Same as ctpg({Module, '_', '_'})</source>
          <target state="translated">ctpg ({모듈, '_', '_'})와 동일</target>
        </trans-unit>
        <trans-unit id="8945d350191d853553595b14470832e94cf45bfc" translate="yes" xml:space="preserve">
          <source>Same as ctpg({Module, Function, '_'})</source>
          <target state="translated">ctpg ({모듈, 함수, '_'})와 동일</target>
        </trans-unit>
        <trans-unit id="1d975a19a23cef57b5b6842342bb58917b709e48" translate="yes" xml:space="preserve">
          <source>Same as ctpg({Module, Function, Arity})</source>
          <target state="translated">ctpg ({모듈, 함수, Arity})와 동일</target>
        </trans-unit>
        <trans-unit id="af269ca206be75d9000da5e41d92c8e4b66ee71f" translate="yes" xml:space="preserve">
          <source>Same as ctpl({'_', '_', '_'})</source>
          <target state="translated">ctpl ({ '_', '_', '_'})과 동일</target>
        </trans-unit>
        <trans-unit id="107104aec9dd4d03f5a872b83323c19ee5060d8b" translate="yes" xml:space="preserve">
          <source>Same as ctpl({Module, '_', '_'})</source>
          <target state="translated">ctpl ({모듈, '_', '_'})과 동일</target>
        </trans-unit>
        <trans-unit id="054b8329b097693524494ce8c3ea144eee34e0f7" translate="yes" xml:space="preserve">
          <source>Same as ctpl({Module, Function, '_'})</source>
          <target state="translated">ctpl ({모듈, 함수, '_'})과 동일</target>
        </trans-unit>
        <trans-unit id="c788bc2020aafb69aeb37134628c162504d34062" translate="yes" xml:space="preserve">
          <source>Same as ctpl({Module, Function, Arity})</source>
          <target state="translated">ctpl ({Module, Function, Arity})과 동일</target>
        </trans-unit>
        <trans-unit id="ee36578c52283ef8e8b6278a9664fe3e630e840b" translate="yes" xml:space="preserve">
          <source>Same as directive &lt;code&gt;AuthName&lt;/code&gt; for the server configuration file.</source>
          <target state="translated">서버 구성 파일의 지시문 &lt;code&gt;AuthName&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="61e4a4cfa51ce3663927b04c3ccbfc5363e4880f" translate="yes" xml:space="preserve">
          <source>Same as directive &lt;code&gt;allow&lt;/code&gt; for the server configuration file.</source>
          <target state="translated">지시어와 동일하게 서버 구성 파일을 &lt;code&gt;allow&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f592040dcc149c0cd9ca20dda40ce41f67ad248c" translate="yes" xml:space="preserve">
          <source>Same as directive &lt;code&gt;deny&lt;/code&gt; for the server configuration file.</source>
          <target state="translated">서버 구성 파일에 대한 지시문 &lt;code&gt;deny&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="8865634beaaab34ecd0aca7cd89c36b4dbcb8afc" translate="yes" xml:space="preserve">
          <source>Same as functions &lt;code&gt;&lt;a href=&quot;#list-0&quot;&gt;list/0&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#list-1&quot;&gt;list/1&lt;/a&gt;&lt;/code&gt;, but the result is printed to a log file, if set; otherwise to &lt;code&gt;standard_io&lt;/code&gt;.</source>
          <target state="translated">함수 &lt;code&gt;&lt;a href=&quot;#list-0&quot;&gt;list/0&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#list-1&quot;&gt;list/1&lt;/a&gt;&lt;/code&gt; 과 동일하지만 설정된 경우 결과는 로그 파일로 인쇄됩니다. 그렇지 않으면 &lt;code&gt;standard_io&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="76b603fba226b69c5785991920ccfd7d14cc6bc3" translate="yes" xml:space="preserve">
          <source>Same as in the &lt;code&gt;&lt;a href=&quot;#monitor&quot;&gt;Monitor window&lt;/a&gt;&lt;/code&gt;, but only affects the debugged process the window is attached to.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#monitor&quot;&gt;Monitor window&lt;/a&gt;&lt;/code&gt; 동일 하지만 창이 연결된 디버그 된 프로세스에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="fdd548b11ec8748ef02aa8227cc3177dc6fd9be8" translate="yes" xml:space="preserve">
          <source>Same as start_tls(Handle, Options, infinity)</source>
          <target state="translated">start_tls와 동일 (핸들, 옵션, 무한대)</target>
        </trans-unit>
        <trans-unit id="d83647dfe16050cc3517748b5bbed7f72524dfb6" translate="yes" xml:space="preserve">
          <source>Same as state2file(State,SchemaName)</source>
          <target state="translated">state2file과 동일 (State, SchemaName)</target>
        </trans-unit>
        <trans-unit id="398ceab74845d76f63ecacb8fdaf503c2540eb55" translate="yes" xml:space="preserve">
          <source>Same as stop/0, but also clears all trace patterns on global functions calls.</source>
          <target state="translated">stop / 0과 동일하지만 전역 함수 호출에서 모든 추적 패턴을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="075ebfc6ba9994b46885c066e107dd39a5fa6044" translate="yes" xml:space="preserve">
          <source>Same as the &lt;code&gt;keep_state&lt;/code&gt; or &lt;code&gt;keep_state_and_data&lt;/code&gt; values, and if &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Calls&quot;&gt;State Enter Calls&lt;/a&gt;&lt;/code&gt; are enabled, repeat the state enter call as if this state was entered again.</source>
          <target state="translated">&lt;code&gt;keep_state&lt;/code&gt; 또는 &lt;code&gt;keep_state_and_data&lt;/code&gt; 값과 동일하며 &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Calls&quot;&gt;State Enter Calls&lt;/a&gt;&lt;/code&gt; 가 사용 가능한 경우이 상태가 다시 입력 된 것처럼 상태 입력 호출을 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="bde4ea4e783d404d0ab39b1d42f43c95dc9c991d" translate="yes" xml:space="preserve">
          <source>Same as the &lt;code&gt;keep_state&lt;/code&gt; values with &lt;code&gt;NextData =:= Data&lt;/code&gt;, that is, no change in server data.</source>
          <target state="translated">&lt;code&gt;NextData =:= Data&lt;/code&gt; 의 &lt;code&gt;keep_state&lt;/code&gt; 값과 동일합니다. 즉 , 서버 데이터가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eeca5df13dffd526480d14954f26d3c88af5b08e" translate="yes" xml:space="preserve">
          <source>Same as the &lt;code&gt;next_state&lt;/code&gt; values with &lt;code&gt;NextState =:= State&lt;/code&gt;, that is, no state change.</source>
          <target state="translated">&lt;code&gt;NextState =:= State&lt;/code&gt; 인 &lt;code&gt;next_state&lt;/code&gt; 값과 동일합니다 . 즉, 상태 변경이 없습니다.</target>
        </trans-unit>
        <trans-unit id="3a8adbfc1b2c0bdb615919fcafe1a9609d8288ad" translate="yes" xml:space="preserve">
          <source>Same as the &lt;code&gt;stop&lt;/code&gt; values, but first execute the given state transition actions that may only be reply actions.</source>
          <target state="translated">&lt;code&gt;stop&lt;/code&gt; 값과 동일 하지만 먼저 응답 조치 일 수있는 주어진 상태 전이 조치를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="e6755caa342a8c55bac06fc47f6f396b1fbfc0e0" translate="yes" xml:space="preserve">
          <source>Same as the corresponding Erlang BIFs (or operators). In case of bad arguments, the result depends on the context. In the &lt;code&gt;MatchConditions&lt;/code&gt; part of the expression, the test fails immediately (like in an Erlang guard). In the &lt;code&gt;MatchBody&lt;/code&gt; part, exceptions are implicitly caught and the call results in the atom &lt;code&gt;'EXIT'&lt;/code&gt;.</source>
          <target state="translated">해당 Erlang BIF (또는 연산자)와 동일합니다. 잘못된 주장의 경우 결과는 상황에 따라 다릅니다. 표현식 의 &lt;code&gt;MatchConditions&lt;/code&gt; 부분에서 테스트는 즉시 실패합니다 (Erlang 가드에서와 같이). 에서 &lt;code&gt;MatchBody&lt;/code&gt; 의 일부, 예외는 암시 적으로 붙잡고 원자의 호출 결과된다 &lt;code&gt;'EXIT'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="debf477b7871dea8f8061cba4dec70ae53714783" translate="yes" xml:space="preserve">
          <source>Same as the corresponding guard tests in Erlang, return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Erlang의 해당 가드 테스트와 동일하며 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d7f1f5cce4a81e4c4f7a6a4665a40d63941a5c4f" translate="yes" xml:space="preserve">
          <source>Same as tp({Module, '_', '_'}, MatchSpec)</source>
          <target state="translated">tp ({모듈, '_', '_'}, MatchSpec)와 동일</target>
        </trans-unit>
        <trans-unit id="852411c85ce8ad7d488e9436530cefbcf9730fba" translate="yes" xml:space="preserve">
          <source>Same as tp({Module, Function, '_'}, MatchSpec)</source>
          <target state="translated">tp ({모듈, 함수, '_'}, MatchSpec)와 동일</target>
        </trans-unit>
        <trans-unit id="433cafbf494a1e18b410e8d1653d690e8ce00423" translate="yes" xml:space="preserve">
          <source>Same as tp({Module, Function, Arity}, MatchSpec)</source>
          <target state="translated">tp ({Module, Function, Arity}, MatchSpec)와 동일</target>
        </trans-unit>
        <trans-unit id="babf906b4b41e74dec5e1e11158db61bc8fb62af" translate="yes" xml:space="preserve">
          <source>Same as tpl({Module, '_', '_'}, MatchSpec)</source>
          <target state="translated">tpl ({Module, '_', '_'}, MatchSpec)과 동일</target>
        </trans-unit>
        <trans-unit id="7f619b24482d6eae3b3000b231d2e76a058300fe" translate="yes" xml:space="preserve">
          <source>Same as tpl({Module, Function, '_'}, MatchSpec)</source>
          <target state="translated">tpl ({모듈, 함수, '_'}, MatchSpec)과 동일</target>
        </trans-unit>
        <trans-unit id="7cb0c689581b648f776a9ff1bb989356dfae4c88" translate="yes" xml:space="preserve">
          <source>Same as tpl({Module, Function, Arity}, MatchSpec)</source>
          <target state="translated">tpl ({Module, Function, Arity}, MatchSpec)과 동일</target>
        </trans-unit>
        <trans-unit id="7c23e5e81d9146d189fcd288e0b1ae0eb4cf2339" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;bin_to_list(Subject, {Pos, Len})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bin_to_list(Subject, {Pos, Len})&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="6ede5bdf093be2e5388482effd3b1df7b14b368a" translate="yes" xml:space="preserve">
          <source>Same interpretation as last expression.</source>
          <target state="translated">마지막 표현과 같은 해석.</target>
        </trans-unit>
        <trans-unit id="83cf826a30bbb4295fc85fc38024b85231469348" translate="yes" xml:space="preserve">
          <source>Sane compiler's calling conventions probably make these changes necessary only for a driver to handle data chunks that require 64-bit size fields (mostly larger than 2 GB, as that is what an &lt;code&gt;int&lt;/code&gt; of 32 bits can hold). But it is possible to think of non-sane calling conventions that would make the driver callbacks mix up the arguments causing malfunction.</source>
          <target state="translated">Sane 컴파일러의 호출 규칙은 드라이버가 64 비트 크기 필드를 필요로하는 데이터 청크 (대개 2GB보다 큰 32 비트 &lt;code&gt;int&lt;/code&gt; 를 처리 할 수있는 크기)를 처리하기 위해 이러한 변경을 필요로 할 수 있습니다. 그러나 드라이버 콜백이 오작동을 유발하는 인수를 혼합하게하는 정상이 아닌 호출 규칙을 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7ae9e8b274050efa47834909472ff78860e765b" translate="yes" xml:space="preserve">
          <source>Sanitizes the relative path by eliminating &quot;..&quot; and &quot;.&quot; components to protect against directory traversal attacks. Either returns the sanitized path name, or the atom &lt;code&gt;unsafe&lt;/code&gt; if the path is unsafe. The path is considered unsafe in the following circumstances:</source>
          <target state="translated">&quot;..&quot;및 &quot;.&quot;를 제거하여 상대 경로를 삭제합니다. 디렉토리 탐색 공격으로부터 보호하는 구성 요소. 소독 된 경로 이름을 반환하거나 경로가 안전하지 &lt;code&gt;unsafe&lt;/code&gt; 경우 원자 는 안전하지 않습니다. 다음과 같은 상황에서는 경로가 안전하지 않은 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="c04544993d1d8f789981802f89231df026eb2cfc" translate="yes" xml:space="preserve">
          <source>Saurashtra</source>
          <target state="translated">Saurashtra</target>
        </trans-unit>
        <trans-unit id="0248eb2642279b752987c40b7241ff123fef9c33" translate="yes" xml:space="preserve">
          <source>Save information about all current calls, that is, function calls that have not yet returned a value.</source>
          <target state="translated">모든 현재 호출, 즉 아직 값을 반환하지 않은 함수 호출에 대한 정보를 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="45d3a45c9f32315d040530e95acd9b0bca14efda" translate="yes" xml:space="preserve">
          <source>Save information about current calls, but discard previous information when a tail recursive call is made. This option consumes less memory and can be necessary to use for processes with long lifetimes and many tail recursive calls. This is the default.</source>
          <target state="translated">현재 통화에 대한 정보를 저장하되 꼬리 재귀 통화를 할 때는 이전 정보를 버립니다. 이 옵션은 메모리를 덜 사용하며 수명이 길고 꼬리 재귀 호출이 많은 프로세스에 사용하는 데 필요할 수 있습니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="1ea07e88fce4cdb4a04bcc1ee43d32e67b97b426" translate="yes" xml:space="preserve">
          <source>Save no information about currentcalls.</source>
          <target state="translated">현재 통화에 대한 정보를 저장하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="6c2453a145de0eb5a864964041a86673625fa7bd" translate="yes" xml:space="preserve">
          <source>Save the events to a file.</source>
          <target state="translated">이벤트를 파일에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="b749c9619a06e3f5059b645f5b8fb806477c8b87" translate="yes" xml:space="preserve">
          <source>Saves Debugger settings to a file. The settings include the set of interpreted files, breakpoints, and the selected options. The settings can be restored in a later Debugger session using &lt;strong&gt;Load Settings...&lt;/strong&gt; (see above). Any errors are silently ignored.</source>
          <target state="translated">디버거 설정을 파일에 저장합니다. 설정에는 해석 된 파일 세트, 중단 점 및 선택한 옵션이 포함됩니다. &lt;strong&gt;Load Settings ...&lt;/strong&gt; (위 참조)를 사용하여 이후 디버거 세션에서 설정을 복원 할 수 있습니다 . 모든 오류는 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ae49a45ffccd115676774d720804cdf0acd7154a" translate="yes" xml:space="preserve">
          <source>Saves the collected data to file.</source>
          <target state="translated">수집 된 데이터를 파일로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="7a3395904167bbedf06311ff9a51376f667913a9" translate="yes" xml:space="preserve">
          <source>Saves the cookies defined in &lt;code&gt;SetCookieHeaders&lt;/code&gt; in the client profile cookie database. Call this function if option &lt;code&gt;cookies&lt;/code&gt; is set to &lt;code&gt;verify&lt;/code&gt;. If no profile is specified, the default profile is used.</source>
          <target state="translated">클라이언트 프로파일 쿠키 데이터베이스의 &lt;code&gt;SetCookieHeaders&lt;/code&gt; 에 정의 된 쿠키를 저장 합니다. 옵션 &lt;code&gt;cookies&lt;/code&gt; 가 &lt;code&gt;verify&lt;/code&gt; 로 설정된 경우이 기능을 호출하십시오 . 프로파일을 지정하지 않으면 기본 프로파일이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e0e80f8ace04633fa5ce10096e815b22ef9df4b6" translate="yes" xml:space="preserve">
          <source>Saves the schema state with all information of the processed schema in a file. You can provide the file name for the saved state. FileName is saved with the &lt;code&gt;.xss&lt;/code&gt; extension added.</source>
          <target state="translated">처리 된 스키마의 모든 정보와 함께 스키마 상태를 파일로 저장합니다. 저장된 상태의 파일 이름을 제공 할 수 있습니다. FileName은 &lt;code&gt;.xss&lt;/code&gt; 확장자가 추가 된 상태로 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="f3a1234a47f5d91d672464845040c6dd550ba656" translate="yes" xml:space="preserve">
          <source>Say you have a state machine specification that uses state enter actions. Allthough you can code this using inserted events (described in the next section), especially if just one or a few states has got state enter actions, this is a perfect use case for the built in &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Calls&quot;&gt;State Enter Calls&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">상태 입력 조치를 사용하는 상태 머신 스펙이 있다고 가정하십시오. 삽입 된 이벤트 (다음 섹션에서 설명)를 사용하여이를 코딩 할 수 있지만, 특히 하나 또는 몇 개의 상태 만 상태 입력 작업을 수행하는 경우 내장 &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Calls&quot;&gt;State Enter Calls&lt;/a&gt;&lt;/code&gt; 에 대한 완벽한 사용 사례입니다 .</target>
        </trans-unit>
        <trans-unit id="b6ce82510fe0fb5b5a3ea78e78d40fcc5021b97b" translate="yes" xml:space="preserve">
          <source>Scans &lt;code&gt;String&lt;/code&gt; and returns all the tokens in it, or an error.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 스캔 하고 그 안에있는 모든 토큰 또는 오류를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1f76690cba8d112fdb509b9c7ffea35282bd1146" translate="yes" xml:space="preserve">
          <source>Scans a megaco message and generates a token list to be passed on the parser.</source>
          <target state="translated">megaco 메시지를 스캔하고 파서에 전달할 토큰 목록을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b6555d73c4f6f351410bf1da94499e65a3243223" translate="yes" xml:space="preserve">
          <source>Scans, parses, and evaluates an arbitrary expression &lt;code&gt;Expr&lt;/code&gt; during system initialization. If any of these steps fail (syntax error, parse error, or exception during evaluation), Erlang stops with an error message. In the following example Erlang is used as a hexadecimal calculator:</source>
          <target state="translated">시스템 초기화 중 임의 표현식 &lt;code&gt;Expr&lt;/code&gt; 을 스캔, 구문 분석 및 평가합니다 . 이러한 단계 중 하나라도 실패하면 (구문 오류, 구문 분석 오류 또는 평가 중 예외) Erlang이 오류 메시지와 함께 중지됩니다. 다음 예에서 Erlang은 16 진 계산기로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="63f5d1d0766a357b96e9b901ec7c0c95400f122b" translate="yes" xml:space="preserve">
          <source>Scheduler utilization of a dirty-cpu scheduler with number &lt;code&gt;SchedulerId&lt;/code&gt;.</source>
          <target state="translated">번호가 &lt;code&gt;SchedulerId&lt;/code&gt; 인 더티 CPU 스케줄러의 스케줄러 활용 .</target>
        </trans-unit>
        <trans-unit id="d20d850d9e68885000bea16dcd795fa21b298bc4" translate="yes" xml:space="preserve">
          <source>Scheduler utilization of a dirty-io scheduler with number &lt;code&gt;SchedulerId&lt;/code&gt;. This tuple will only exist if both samples were taken with &lt;code&gt;&lt;a href=&quot;#sample_all-0&quot;&gt;sample_all/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">번호가 &lt;code&gt;SchedulerId&lt;/code&gt; 인 더티 IO 스케줄러의 스케줄러 활용 . 이 튜플은 두 샘플이 모두 &lt;code&gt;&lt;a href=&quot;#sample_all-0&quot;&gt;sample_all/0&lt;/a&gt;&lt;/code&gt; 으로 찍은 경우에만 존재합니다 .</target>
        </trans-unit>
        <trans-unit id="5764e8480abc5e8afc0a9545c14150b95344f8bb" translate="yes" xml:space="preserve">
          <source>Scheduler utilization of a normal scheduler with number &lt;code&gt;SchedulerId&lt;/code&gt;.</source>
          <target state="translated">번호가 &lt;code&gt;SchedulerId&lt;/code&gt; 인 일반 스케줄러의 스케줄러 활용 .</target>
        </trans-unit>
        <trans-unit id="473b79deaf7867675a932aed3690cdeb53c969eb" translate="yes" xml:space="preserve">
          <source>SchedulerId :: integer() &amp;gt;= 1</source>
          <target state="translated">SchedulerId :: 정수 ()&amp;gt; = 1</target>
        </trans-unit>
        <trans-unit id="6ded1bc21670f0e8dfcf01b6ca10fec0e892ed73" translate="yes" xml:space="preserve">
          <source>Schedulers can also be bound using flag &lt;code&gt;&lt;a href=&quot;#+stbt&quot;&gt;+stbt&lt;/a&gt;&lt;/code&gt;. The only difference between these two flags is how the following errors are handled:</source>
          <target state="translated">플래그 &lt;code&gt;&lt;a href=&quot;#+stbt&quot;&gt;+stbt&lt;/a&gt;&lt;/code&gt; 를 사용하여 스케줄러를 바인딩 할 수도 있습니다 . 이 두 플래그의 유일한 차이점은 다음 오류가 처리되는 방식입니다.</target>
        </trans-unit>
        <trans-unit id="1b67f60a3fc377797be9afe25f8c4c94b9d90159" translate="yes" xml:space="preserve">
          <source>Schedulers can be bound in different ways. Argument &lt;code&gt;How&lt;/code&gt; determines how schedulers are bound and can be any of the following:</source>
          <target state="translated">스케줄러는 다른 방식으로 바인딩 될 수 있습니다. 인수 &lt;code&gt;How&lt;/code&gt; 은 스케줄러의 바인딩 방법을 결정하며 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b9db586b21cf54d2a3cbd0c8e8bcd26e7c7a573" translate="yes" xml:space="preserve">
          <source>Schedulers can be bound on newer Linux, Solaris, FreeBSD, and Windows systems, but more systems will be supported in future releases.</source>
          <target state="translated">스케줄러는 최신 Linux, Solaris, FreeBSD 및 Windows 시스템에서 바인딩 될 수 있지만 향후 릴리스에서는 더 많은 시스템이 지원 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="ecb3ed8ac3677258699c01c40137ea82a088f450" translate="yes" xml:space="preserve">
          <source>Schedules NIF &lt;code&gt;fp&lt;/code&gt; to execute. This function allows an application to break up long-running work into multiple regular NIF calls or to schedule a &lt;code&gt;&lt;a href=&quot;#dirty_nifs&quot;&gt;dirty NIF&lt;/a&gt;&lt;/code&gt; to execute on a dirty scheduler thread.</source>
          <target state="translated">NIF &lt;code&gt;fp&lt;/code&gt; 가 실행되도록 예약합니다 . 이 기능을 사용하면 어플리케이션이 장기 실행 작업을 여러 개의 일반 NIF 호출로 분할하거나 &lt;code&gt;&lt;a href=&quot;#dirty_nifs&quot;&gt;dirty NIF&lt;/a&gt;&lt;/code&gt; 가 더티 스케줄러 스레드에서 실행 되도록 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a32a269c3d1a2f9bd0eab0c915de479be5153c7e" translate="yes" xml:space="preserve">
          <source>Scheduling is pre-emptive. Regardless of priority, a process is pre-empted when it has consumed more than a certain number of reductions since the last time it was selected for execution.</source>
          <target state="translated">스케줄링은 선제 적입니다. 우선 순위에 관계없이 프로세스는 마지막으로 실행을 선택한 이후 일정 횟수 이상의 감소를 사용했을 때 선점됩니다.</target>
        </trans-unit>
        <trans-unit id="4e1656b571bc0b1ddc95954d773982d7fc6ff69e" translate="yes" xml:space="preserve">
          <source>Scheduling specific flags.</source>
          <target state="translated">특정 플래그 예약</target>
        </trans-unit>
        <trans-unit id="84e6b5c719a107d66b120c1c85383e1ee0594e91" translate="yes" xml:space="preserve">
          <source>Schema manipulation routines. The DBMS can be reconfigured at runtime without stopping the system.</source>
          <target state="translated">스키마 조작 루틴. 시스템을 중지하지 않고 런타임에 DBMS를 재구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7aff056aa968ffa0d1ce6f558288ad82a09a5801" translate="yes" xml:space="preserve">
          <source>Schematically, the following occurs for each type in the module:</source>
          <target state="translated">개략적으로, 모듈의 각 유형에 대해 다음이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="655c5b0a153c20167134b78b87a8565754e65cd2" translate="yes" xml:space="preserve">
          <source>Scheme validation fun is to be defined as follows:</source>
          <target state="translated">체계 검증 재미는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="2cb01fe0f1b9f2c17ef7c7f4f69e3c4393ea0793" translate="yes" xml:space="preserve">
          <source>Script file. It generates a boot file.</source>
          <target state="translated">스크립트 파일. 부팅 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="bbdeb7f46396a7dc9fc77deb2d243fd58b38c393" translate="yes" xml:space="preserve">
          <source>Scrollable cursors are nice but causes some overhead. For some connections speed might be more important than flexible data access and then you can disable scrollable cursor for a connection, limiting the API but gaining speed.</source>
          <target state="translated">스크롤 가능한 커서는 훌륭하지만 약간의 오버 헤드가 발생합니다. 일부 연결의 경우 유연한 데이터 액세스보다 속도가 더 중요 할 수 있으며 연결을 위해 스크롤 가능한 커서를 비활성화하여 API를 제한하지만 속도를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4958f5c6be362f40b3930a046e8af9f0c4983b5" translate="yes" xml:space="preserve">
          <source>Search &lt;code&gt;PathList&lt;/code&gt; and load &lt;code&gt;.erlang&lt;/code&gt; resource file if found.</source>
          <target state="translated">&lt;code&gt;PathList&lt;/code&gt; 를 검색 하고 &lt;code&gt;.erlang&lt;/code&gt; 리소스 파일이 있으면 로드 하십시오.</target>
        </trans-unit>
        <trans-unit id="23b4aaf7fe8a0cc64148b94484980676108c2ce3" translate="yes" xml:space="preserve">
          <source>Search baseobject only.</source>
          <target state="translated">기본 개체 만 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="da70dd6d02c9a9517bb759ded2fb59d147cecb35" translate="yes" xml:space="preserve">
          <source>Search domains</source>
          <target state="translated">검색 도메인</target>
        </trans-unit>
        <trans-unit id="c047219af835566fb931db03ee631269a68b222e" translate="yes" xml:space="preserve">
          <source>Search menu:</source>
          <target state="translated">검색 메뉴 :</target>
        </trans-unit>
        <trans-unit id="f49060612b11d45652595e4750be8875a021ba34" translate="yes" xml:space="preserve">
          <source>Search the directory with the supplied the SearchOptions. The base and filter options must be supplied. Default values: scope is &lt;code&gt;wholeSubtree()&lt;/code&gt;, deref is &lt;code&gt;derefAlways()&lt;/code&gt;, types_only is &lt;code&gt;false&lt;/code&gt; and timeout is &lt;code&gt;0&lt;/code&gt; (meaning infinity).</source>
          <target state="translated">제공된 SearchOptions를 사용하여 디렉토리를 검색하십시오. 기본 및 필터 옵션을 제공해야합니다. 기본값 : scope는 &lt;code&gt;wholeSubtree()&lt;/code&gt; , deref는 &lt;code&gt;derefAlways()&lt;/code&gt; , types_only는 &lt;code&gt;false&lt;/code&gt; 이고 시간 초과는 &lt;code&gt;0&lt;/code&gt; (무한대 의미)입니다.</target>
        </trans-unit>
        <trans-unit id="45d8ade2024f93dafe86e81a38185632259c2273" translate="yes" xml:space="preserve">
          <source>Search the entire subtree.</source>
          <target state="translated">전체 하위 트리를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="dbbcd0829e7a1e9f3ba68179d47e992efce8a814" translate="yes" xml:space="preserve">
          <source>Search the mib-storage table for record that match the specified pattern and then delete them. The records deleted are also returned.</source>
          <target state="translated">지정된 패턴과 일치하는 레코드를 mib-storage 테이블에서 검색 한 후 삭제하십시오. 삭제 된 레코드도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="549bbdb9aba8e104c0881f8477c8b74445ab61ff" translate="yes" xml:space="preserve">
          <source>Search the mib-storage table for record that match the specified pattern.</source>
          <target state="translated">지정된 패턴과 일치하는 레코드를 mib-storage 테이블에서 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="d06d25d0d76487fc0329892d623e359b77f067ed" translate="yes" xml:space="preserve">
          <source>Search the specified level only, i.e. do not recurse.</source>
          <target state="translated">지정된 레벨 만 검색하십시오. 즉, 재귀하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9ab1d40f49e21b5e760f07c0d0d811e9e43b4a15" translate="yes" xml:space="preserve">
          <source>Searches all directories in the code path for module names with identical names and writes a report to &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">동일한 이름의 모듈 이름에 대한 코드 경로의 모든 디렉토리를 검색하고 &lt;code&gt;stdout&lt;/code&gt; 에 보고서를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="dd8cb9f9daa7a54388f0d11d73ff6be4c5575a33" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;Name&lt;/code&gt;, globally registered on the specified node or in the specified global group, or (if argument &lt;code&gt;Where&lt;/code&gt; is not provided) in any global group. The global groups are searched in the order that they appear in the value of configuration parameter &lt;code&gt;global_groups&lt;/code&gt;.</source>
          <target state="translated">에 대한 검색 &lt;code&gt;Name&lt;/code&gt; , 전 세계적으로 지정된 노드 또는 지정된 글로벌 그룹에 등록, 또는 (만약 인수 가 제공되지 않음) 어떤 글로벌 그룹에. 글로벌 그룹은 구성 매개 변수 &lt;code&gt;global_groups&lt;/code&gt; 의 값에 나타나는 순서대로 검색됩니다 . &lt;code&gt;Where&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4413fc911624a0d10838d9445538b7f5467f14a8" translate="yes" xml:space="preserve">
          <source>Searches for a key in a dictionary. Returns &lt;code&gt;{ok, Value}&lt;/code&gt;, where &lt;code&gt;Value&lt;/code&gt; is the value associated with &lt;code&gt;Key&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt; if the key is not present in the dictionary.</source>
          <target state="translated">사전에서 키를 검색합니다. &lt;code&gt;{ok, Value}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Value&lt;/code&gt; 는 &lt;code&gt;Key&lt;/code&gt; 와 연관된 값 이거나 키가 사전에없는 경우 &lt;code&gt;error&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f7f815494fb49a987fd50a2baa92e5d0e32e35dd" translate="yes" xml:space="preserve">
          <source>Searches for a key in dictionary &lt;code&gt;Dict&lt;/code&gt;. Returns &lt;code&gt;{ok, Value}&lt;/code&gt;, where &lt;code&gt;Value&lt;/code&gt; is the value associated with &lt;code&gt;Key&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt; if the key is not present in the dictionary.</source>
          <target state="translated">사전 &lt;code&gt;Dict&lt;/code&gt; 에서 키를 검색합니다 . &lt;code&gt;{ok, Value}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Value&lt;/code&gt; 는 &lt;code&gt;Key&lt;/code&gt; 와 연관된 값 이거나 키가 사전에없는 경우 &lt;code&gt;error&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="259d5c7ec3632ec17013d74534c7cf8688e8eb1f" translate="yes" xml:space="preserve">
          <source>Searches for a specified string.</source>
          <target state="translated">지정된 문자열을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="f8e1d553934b21b6f21c9a7f729e6a8a8c991b75" translate="yes" xml:space="preserve">
          <source>Searches for the first occurrence of &lt;code&gt;Pattern&lt;/code&gt; in &lt;code&gt;Subject&lt;/code&gt; and returns the position and length.</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; 에서 처음 나타나는 &lt;code&gt;Pattern&lt;/code&gt; 을 검색 하고 위치와 길이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="05702fc5f5d3175794bc0eac26f1c2217dc3e6a2" translate="yes" xml:space="preserve">
          <source>Searches the code path for &lt;code&gt;Filename&lt;/code&gt;, a file of arbitrary type. If found, the full name is returned. &lt;code&gt;non_existing&lt;/code&gt; is returned if the file cannot be found. The function can be useful, for example, to locate application resource files.</source>
          <target state="translated">임의 유형의 파일 인 &lt;code&gt;Filename&lt;/code&gt; 의 코드 경로를 검색합니다 . 발견되면 전체 이름이 반환됩니다. 파일을 찾을 수 없으면 &lt;code&gt;non_existing&lt;/code&gt; 이 반환됩니다. 이 기능은 예를 들어 응용 프로그램 자원 파일을 찾는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="409514b48349e7cefc639b1024416be77ab73236" translate="yes" xml:space="preserve">
          <source>Searches the code path for the object code of module &lt;code&gt;Module&lt;/code&gt;. Returns &lt;code&gt;{Module, Binary, Filename}&lt;/code&gt; if successful, otherwise &lt;code&gt;error&lt;/code&gt;. &lt;code&gt;Binary&lt;/code&gt; is a binary data object, which contains the object code for the module. This can be useful if code is to be loaded on a remote node in a distributed system. For example, loading module &lt;code&gt;Module&lt;/code&gt; on a node &lt;code&gt;Node&lt;/code&gt; is done as follows:</source>
          <target state="translated">모듈 &lt;code&gt;Module&lt;/code&gt; 의 객체 코드에 대한 코드 경로를 검색합니다 . 반환 &lt;code&gt;{Module, Binary, Filename}&lt;/code&gt; 성공하는 경우, 그렇지 않으면 &lt;code&gt;error&lt;/code&gt; . &lt;code&gt;Binary&lt;/code&gt; 은 이진 데이터 객체이며 모듈의 객체 코드를 포함합니다. 이것은 분산 시스템의 원격 노드에 코드를로드 할 때 유용합니다. 예를 들어, 노드 &lt;code&gt;Node&lt;/code&gt; 에 모듈 &lt;code&gt;Module&lt;/code&gt; 로드 는 다음과 같이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="f73969248a04bb76f329a7ae399701c5d7409bf6" translate="yes" xml:space="preserve">
          <source>Searches the list of tuples &lt;code&gt;TupleList1&lt;/code&gt; for a tuple whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt;. Returns &lt;code&gt;{value, Tuple, TupleList2}&lt;/code&gt; if such a tuple is found, otherwise &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;TupleList2&lt;/code&gt; is a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of &lt;code&gt;Tuple&lt;/code&gt; has been removed.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 번째 요소가 &lt;code&gt;Key&lt;/code&gt; 와 동일한 튜플에 대한 튜플 목록 &lt;code&gt;TupleList1&lt;/code&gt; 을 검색합니다 . 반환 &lt;code&gt;{value, Tuple, TupleList2}&lt;/code&gt; 같은 튜플이 발견되는 경우는 true, 그렇지 않은 경우 &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;TupleList2&lt;/code&gt; 는 &lt;code&gt;Tuple&lt;/code&gt; 의 첫 번째 항목 이 제거 된 &lt;code&gt;TupleList1&lt;/code&gt; 의 사본입니다 .</target>
        </trans-unit>
        <trans-unit id="89dd5027372425c2195f6be0d27f84c2d203ddab" translate="yes" xml:space="preserve">
          <source>Searches the list of tuples &lt;code&gt;TupleList&lt;/code&gt; for a tuple whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt;. Returns &lt;code&gt;Tuple&lt;/code&gt; if such a tuple is found, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 번째 요소가 &lt;code&gt;Key&lt;/code&gt; 와 동일한 튜플에 대한 튜플 목록 &lt;code&gt;TupleList&lt;/code&gt; 를 검색합니다 . 그러한 튜플이 발견되면 &lt;code&gt;Tuple&lt;/code&gt; 을 리턴 하고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="059a4b94c07956be794b9f8ff1e1903b0c363636" translate="yes" xml:space="preserve">
          <source>Searches the list of tuples &lt;code&gt;TupleList&lt;/code&gt; for a tuple whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt;. Returns &lt;code&gt;{value, Tuple}&lt;/code&gt; if such a tuple is found, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 번째 요소가 &lt;code&gt;Key&lt;/code&gt; 와 동일한 튜플에 대한 튜플 목록 &lt;code&gt;TupleList&lt;/code&gt; 를 검색합니다 . 이러한 튜플이 발견되면 &lt;code&gt;{value, Tuple}&lt;/code&gt; 반환하고 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="be3c53a74161d73d6ae3f29cd5e7ce372492c7fe" translate="yes" xml:space="preserve">
          <source>Searches the path &lt;code&gt;Path&lt;/code&gt; (a list of directory names) until the file &lt;code&gt;Filename&lt;/code&gt; is found. If &lt;code&gt;Filename&lt;/code&gt; is an absolute filename, &lt;code&gt;Path&lt;/code&gt; is ignored. Then opens the file in the mode determined by &lt;code&gt;Modes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 파일 을 찾을 때까지 경로 &lt;code&gt;Path&lt;/code&gt; (디렉토리 이름 목록)를 검색합니다 . 경우 &lt;code&gt;Filename&lt;/code&gt; 절대 파일 이름입니다, &lt;code&gt;Path&lt;/code&gt; 무시됩니다. 그런 다음 &lt;code&gt;Modes&lt;/code&gt; 에 의해 결정된 모드에서 파일을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="87de36e2c1470f0514d08f8b05938a43fa5ed6ad" translate="yes" xml:space="preserve">
          <source>Searches the path &lt;code&gt;Path&lt;/code&gt; (a list of directory names) until the file &lt;code&gt;Filename&lt;/code&gt; is found. If &lt;code&gt;Filename&lt;/code&gt; is an absolute filename, &lt;code&gt;Path&lt;/code&gt; is ignored. Then reads Erlang terms, separated by '.', from the file.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 파일 을 찾을 때까지 경로 &lt;code&gt;Path&lt;/code&gt; (디렉토리 이름 목록)를 검색합니다 . 경우 &lt;code&gt;Filename&lt;/code&gt; 절대 파일 이름입니다, &lt;code&gt;Path&lt;/code&gt; 무시됩니다. 그런 다음 파일에서 '.'으로 구분 된 Erlang 용어를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="9c77b64107c05e58f79347459a9e1783d06a3dd6" translate="yes" xml:space="preserve">
          <source>Searches the path &lt;code&gt;Path&lt;/code&gt; (a list of directory names) until the file &lt;code&gt;Filename&lt;/code&gt; is found. If &lt;code&gt;Filename&lt;/code&gt; is an absolute filename, &lt;code&gt;Path&lt;/code&gt; is ignored. Then reads and evaluates Erlang expressions, separated by '.' (or ',', a sequence of expressions is also an expression), from the file.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 파일 을 찾을 때까지 경로 &lt;code&gt;Path&lt;/code&gt; (디렉토리 이름 목록)를 검색합니다 . 경우 &lt;code&gt;Filename&lt;/code&gt; 절대 파일 이름입니다, &lt;code&gt;Path&lt;/code&gt; 무시됩니다. 그런 다음 '.'으로 구분 된 Erlang 표현식을 읽고 평가합니다. (또는 ',', 일련의 표현식은 표현식이기도합니다).</target>
        </trans-unit>
        <trans-unit id="3a1b215f6ba2b979239638f9c752617d1bda0a3a" translate="yes" xml:space="preserve">
          <source>Searches the path &lt;code&gt;Path&lt;/code&gt; (a list of directory names) until the file &lt;code&gt;Filename&lt;/code&gt; is found. If &lt;code&gt;Filename&lt;/code&gt; is an absolute filename, &lt;code&gt;Path&lt;/code&gt; is ignored. Then reads and evaluates Erlang expressions, separated by '.' (or ',', a sequence of expressions is also an expression), from the file. The result of evaluation is not returned; any expression sequence in the file must be there for its side effect.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 파일 을 찾을 때까지 경로 &lt;code&gt;Path&lt;/code&gt; (디렉토리 이름 목록)를 검색합니다 . 경우 &lt;code&gt;Filename&lt;/code&gt; 절대 파일 이름입니다, &lt;code&gt;Path&lt;/code&gt; 무시됩니다. 그런 다음 '.'으로 구분 된 Erlang 표현식을 읽고 평가합니다. (또는 ',', 일련의 표현식은 표현식이기도합니다). 평가 결과는 반환되지 않습니다. 파일의 모든 표현식 순서는 부작용이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a8aeb69385d892b0e11a8c12588948c0c1556341" translate="yes" xml:space="preserve">
          <source>Second, you need to consider the sustained failure rate, if crashes keep happening but not often enough to make the supervisor give up. If you set intensity to 10 and set the period as low as 1, the supervisor will allow child processes to keep restarting up to 10 times per second, forever, filling your logs with crash reports until someone intervenes manually.</source>
          <target state="translated">둘째, 충돌이 계속 발생하지만 감독자가 포기하기에 충분하지 않은 경우 지속 고장률을 고려해야합니다. 강도를 10으로 설정하고 기간을 1로 낮게 설정하면 수퍼바이저는 하위 프로세스가 초당 최대 10 회까지 계속 다시 시작되도록하여 누군가가 수동으로 개입 할 때까지 충돌 보고서로 로그를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="30939018f4619823758ee32aa18374dc4e9ef5d5" translate="yes" xml:space="preserve">
          <source>Secondly you might need to set environment variables and paths to appropriate values. This may differ a lot between different os's, databases and ODBC drivers. This is a configuration problem related to the third party product and hence we can not give you a standard solution in this guide.</source>
          <target state="translated">둘째, 환경 변수와 경로를 적절한 값으로 설정해야 할 수도 있습니다. 이것은 운영 체제, 데이터베이스 및 ODBC 드라이버마다 크게 다를 수 있습니다. 이는 타사 제품과 관련된 구성 문제이므로이 안내서에서 표준 솔루션을 제공 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5fb1db527825d2996e37c655e5dec49d4da80c09" translate="yes" xml:space="preserve">
          <source>Seconds</source>
          <target state="translated">Seconds</target>
        </trans-unit>
        <trans-unit id="13737e9a296bfc888f4a208f28b3aad6dd888ced" translate="yes" xml:space="preserve">
          <source>Section &lt;code&gt;&lt;a href=&quot;error_logging&quot;&gt;SASL Error Logging&lt;/a&gt;&lt;/code&gt; describes the error handler that produces the supervisor, progress, and crash reports, which can be written to screen or to a specified file. It also describes the Report Browser (RB).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;error_logging&quot;&gt;SASL Error Logging&lt;/a&gt;&lt;/code&gt; 섹션 에서는 화면 또는 지정된 파일에 기록 할 수있는 감독자, 진행률 및 충돌 보고서를 생성하는 오류 처리기에 대해 설명합니다. 보고서 브라우저 (RB)에 대해서도 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a15579ba87f7d4b584dd45dc8dcd6afa07fcc947" translate="yes" xml:space="preserve">
          <source>Section &lt;code&gt;&lt;a href=&quot;logger#handler_callback_functions&quot;&gt;Handler Callback Functions&lt;/a&gt;&lt;/code&gt; in the logger(3) manual page describes the callback functions that can be implemented for a Logger handler.</source>
          <target state="translated">logger (3) 매뉴얼 페이지의 섹션 &lt;code&gt;&lt;a href=&quot;logger#handler_callback_functions&quot;&gt;Handler Callback Functions&lt;/a&gt;&lt;/code&gt; 는 로거 핸들러에 대해 구현할 수있는 콜백 함수를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="518976b15705b741df4409094ec5d7ab384e0ccf" translate="yes" xml:space="preserve">
          <source>Section &lt;code&gt;The Abstract Format&lt;/code&gt; in ERTS User's Guide.</source>
          <target state="translated">ERTS 사용 설명서의 &lt;code&gt;The Abstract Format&lt;/code&gt; 섹션 .</target>
        </trans-unit>
        <trans-unit id="d610c96ac4d86eb8ce37da025079f141e5fec529" translate="yes" xml:space="preserve">
          <source>Secure Sockets Layer (SSL)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5c5eed8c612e8bc5e6e8ec729f3b643ed192d8" translate="yes" xml:space="preserve">
          <source>Securing Diameter Messages</source>
          <target state="translated">직경 메시지 보안</target>
        </trans-unit>
        <trans-unit id="fb4ce2ecc0eaaf43843bb70652421109f1c5bfb4" translate="yes" xml:space="preserve">
          <source>Security Audit and Trailing Functionality</source>
          <target state="translated">보안 감사 및 후행 기능</target>
        </trans-unit>
        <trans-unit id="402cc3b6686cd294cb10dd3f5bccbebd0edd8a9b" translate="yes" xml:space="preserve">
          <source>Security Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77439eba920dc158455bdd8da24edd5d78fb2c1" translate="yes" xml:space="preserve">
          <source>See 2.1.</source>
          <target state="translated">2.1을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="74344b0a40bd5c57f2a83cdd40c1ec7fc92be0ef" translate="yes" xml:space="preserve">
          <source>See 2.6.</source>
          <target state="translated">2.6을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8d18aeeb077aa584dc90be758c4aae8039295518" translate="yes" xml:space="preserve">
          <source>See 2.6. A routing table of the documented form is not exposed to the user.</source>
          <target state="translated">2.6을 참조하십시오. 문서화 된 양식의 라우팅 테이블은 사용자에게 노출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="be27c6d16d32aa77feb496cc5eeb299aed78ddda" translate="yes" xml:space="preserve">
          <source>See 2.7.</source>
          <target state="translated">2.7을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9e09c2eb779ee256a4ffacd89342709a75e46a8d" translate="yes" xml:space="preserve">
          <source>See 6.1.3.</source>
          <target state="translated">6.1.3을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6a53b815fb58bef4fc201bc5f145d8df1d9062d3" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#Compilation_control_macros&quot;&gt;Compilation control macros&lt;/a&gt;&lt;/code&gt; for details about these macros.</source>
          <target state="translated">이러한 매크로에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#Compilation_control_macros&quot;&gt;Compilation control macros&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="94a272c25bcb86672fad447b99208a34c80e0a57" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#EUnit_test_representation&quot;&gt;EUnit test representation&lt;/a&gt;&lt;/code&gt; for a full list of all the ways you can specify test sets in EUnit.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#EUnit_test_representation&quot;&gt;EUnit test representation&lt;/a&gt;&lt;/code&gt; 에서 테스트 세트를 지정할 수있는 모든 방법의 전체 목록은 EUnit 테스트 표시 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc4831066f1133c9408c434d5109670c82ef8e32" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#REFERENCE_EXT&quot;&gt;REFERENCE_EXT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#REFERENCE_EXT&quot;&gt;REFERENCE_EXT&lt;/a&gt;&lt;/code&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2870eca4800347e33fdd4125add4f36485ce4291" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#baseObject-0&quot;&gt;baseObject/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#singleLevel-0&quot;&gt;singleLevel/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#wholeSubtree-0&quot;&gt;wholeSubtree/0&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#baseObject-0&quot;&gt;baseObject/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#singleLevel-0&quot;&gt;singleLevel/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#wholeSubtree-0&quot;&gt;wholeSubtree/0&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7054960ce58ea97ea6ee0f98f76cae0aced3602a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#compile_options&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#compile_options&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c38022f6304268858b1d69d681cd03b0069bace0" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; above about the &lt;code&gt;Extra&lt;/code&gt; argument in &lt;code&gt;handle_message_error/4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_message_error/4&lt;/code&gt; 의 &lt;code&gt;Extra&lt;/code&gt; 인수에 대해서는 위의 참고 &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f206b595620687ada6cc75ee26a240dd4250a949" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; above about the &lt;code&gt;Extra&lt;/code&gt; argument in &lt;code&gt;handle_segment_reply/6&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_segment_reply/6&lt;/code&gt; 의 &lt;code&gt;Extra&lt;/code&gt; 인수에 대해서는 위의 참고 &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b0ce1e9bc5428a643735e0846d7a9a663ee03ab" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; above about the &lt;code&gt;Extra&lt;/code&gt; argument in &lt;code&gt;handle_syntax_error/4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_syntax_error/4&lt;/code&gt; 의 &lt;code&gt;Extra&lt;/code&gt; 인수에 대해서는 위의 참고 &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4910f2e04ceadfdf32b5015ea82bed8b384c98f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; above about the &lt;code&gt;Extra&lt;/code&gt; argument in &lt;code&gt;handle_trans_ack/5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_trans_ack/5&lt;/code&gt; 의 &lt;code&gt;Extra&lt;/code&gt; 인수에 대해서는 위의 참고 &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac6e5cb77aa36b3f6f091a6414fcbd354a731ecc" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; above about the &lt;code&gt;Extra&lt;/code&gt; argument in &lt;code&gt;handle_trans_long_request/4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_trans_long_request/4&lt;/code&gt; 의 &lt;code&gt;Extra&lt;/code&gt; 인수에 대해서는 위의 참고 &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5af98728d52e727b75fbd837a040105c83fa590" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; above about the &lt;code&gt;Extra&lt;/code&gt; argument in &lt;code&gt;handle_trans_reply/5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_trans_reply/5&lt;/code&gt; 의 &lt;code&gt;Extra&lt;/code&gt; 인수에 대해서는 위의 참고 &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c8ff2e5d4629cf85ef48ca0a3a7629f86f6fcc5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; above about the &lt;code&gt;Extra&lt;/code&gt; argument in &lt;code&gt;handle_trans_request/4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_trans_request/4&lt;/code&gt; 의 &lt;code&gt;Extra&lt;/code&gt; 인수에 대해서는 위의 참고 &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e5c7fe88b98fd23620332d83492669cd23febea" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; above about the &lt;code&gt;Extra&lt;/code&gt; argument in &lt;code&gt;handle_trans_request_abort/5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_trans_request_abort/5&lt;/code&gt; 의 &lt;code&gt;Extra&lt;/code&gt; 인수에 대해서는 위의 참고 &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="53736b51046fedf02334cf87688a5aa150052f69" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; above about the &lt;code&gt;Extra&lt;/code&gt; argument in &lt;code&gt;handle_unexpected_trans/4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_unexpected_trans/4&lt;/code&gt; 의 &lt;code&gt;Extra&lt;/code&gt; 인수에 대해서는 위의 참고 &lt;code&gt;&lt;a href=&quot;#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8212b3c7c699ec13ecca3b5eea3a89ba2b56d999" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; for more detailed information.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7363545e5371926b5ccca02e04f6f1be42e81143" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#fun_info-1&quot;&gt;erlang:fun_info/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#fun_info-1&quot;&gt;erlang:fun_info/1&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9dd2af4fa4009db17543487a5964a4ed4fc00e5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#inflate-2&quot;&gt;inflate/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#inflate-2&quot;&gt;inflate/2&lt;/a&gt;&lt;/code&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="63294b9c3d30f0cbbdf1f5fa1f961401ea5e26cf" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#mod_add-2&quot;&gt;mod_add/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mod_delete-2&quot;&gt;mod_delete/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mod_replace-2&quot;&gt;mod_replace/2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#mod_add-2&quot;&gt;mod_add/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mod_delete-2&quot;&gt;mod_delete/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mod_replace-2&quot;&gt;mod_replace/2&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c1446a9cae297393dbd0f9a5178eeba5048c73b" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#neverDerefAliases-0&quot;&gt;neverDerefAliases/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#derefInSearching-0&quot;&gt;derefInSearching/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#derefFindingBaseObj-0&quot;&gt;derefFindingBaseObj/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#derefAlways-0&quot;&gt;derefAlways/0&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#neverDerefAliases-0&quot;&gt;neverDerefAliases/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#derefInSearching-0&quot;&gt;derefInSearching/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#derefFindingBaseObj-0&quot;&gt;derefFindingBaseObj/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#derefAlways-0&quot;&gt;derefAlways/0&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d79f28c0b3b99400a0fbd22c066468cea5220b32" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#pkix_verify_hostname-3&quot;&gt;pkix_verify_hostname/3&lt;/a&gt;&lt;/code&gt;.  See &lt;code&gt;&lt;a href=&quot;#pkix_verify_hostname-3&quot;&gt;pkix_verify_hostname/3&lt;/a&gt;&lt;/code&gt;.  See &lt;code&gt;&lt;a href=&quot;#pkix_verify_hostname-3&quot;&gt;pkix_verify_hostname/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#pkix_verify_hostname-3&quot;&gt;pkix_verify_hostname/3&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#pkix_verify_hostname-3&quot;&gt;pkix_verify_hostname/3&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#pkix_verify_hostname-3&quot;&gt;pkix_verify_hostname/3&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b126e093feb48c531247cbb609ad0aca22031afe" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#pkix_verify_hostname_match_fun-1&quot;&gt;pkix_verify_hostname_match_fun/1&lt;/a&gt;&lt;/code&gt; for a function that takes a protocol name as argument and returns a &lt;code&gt;fun/2&lt;/code&gt; suitable for this option and &lt;code&gt;&lt;a href=&quot;using_public_key#redefining_match_op&quot;&gt;Re-defining the match operation&lt;/a&gt;&lt;/code&gt; in the User's Guide for an example.</source>
          <target state="translated">프로토콜 이름을 인수 로 사용하고이 옵션에 적합한 &lt;code&gt;fun/2&lt;/code&gt; 를 반환 하고 예제를 보려면 사용자 안내서에서 &lt;code&gt;&lt;a href=&quot;using_public_key#redefining_match_op&quot;&gt;Re-defining the match operation&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#pkix_verify_hostname_match_fun-1&quot;&gt;pkix_verify_hostname_match_fun/1&lt;/a&gt;&lt;/code&gt; 하는 함수에 대해서는 pkix_verify_hostname_match_fun / 1 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="edf097391523ef62399126f8370bac7b99a5683e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#present-1&quot;&gt;present/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#substrings-2&quot;&gt;substrings/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#equalityMatch-2&quot;&gt;equalityMatch/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#greaterOrEqual-2&quot;&gt;greaterOrEqual/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#lessOrEqual-2&quot;&gt;lessOrEqual/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#approxMatch-2&quot;&gt;approxMatch/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#extensibleMatch-2&quot;&gt;extensibleMatch/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#'and'-1&quot;&gt;'and'/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#'or'-1&quot;&gt;'or'/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#'not'-1&quot;&gt;'not'/1&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#present-1&quot;&gt;present/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#substrings-2&quot;&gt;substrings/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#equalityMatch-2&quot;&gt;equalityMatch/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#greaterOrEqual-2&quot;&gt;greaterOrEqual/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#lessOrEqual-2&quot;&gt;lessOrEqual/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#approxMatch-2&quot;&gt;approxMatch/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#extensibleMatch-2&quot;&gt;extensibleMatch/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#'and'-1&quot;&gt;'and'/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#'or'-1&quot;&gt;'or'/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#'not'-1&quot;&gt;'not'/1&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a6ac6024bd757d3797bd5af28dfa912ecb63c20" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2773bdc5273e8305b5d72f460bf3a4867a78c365" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#simple&quot;&gt;simple-one-for-one supervisors&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#simple&quot;&gt;simple-one-for-one supervisors&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="42f3b27d921ad430cac0145b8b1a05fbece3168f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#timestamp-0&quot;&gt;erlang:timestamp/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#timestamp-0&quot;&gt;erlang:timestamp/0&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a982671e6886676715787bbdceb4d6ff51195bc" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#uniform_real_s-1&quot;&gt;uniform_real_s/1&lt;/a&gt;&lt;/code&gt; for more explanation.</source>
          <target state="translated">자세한 설명 은 &lt;code&gt;&lt;a href=&quot;#uniform_real_s-1&quot;&gt;uniform_real_s/1&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bfe5660190802a7fbee325008cfc497a67745026" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;#upgrade_script-2&quot;&gt;upgrade_script/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#downgrade_script-3&quot;&gt;downgrade_script/3&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#upgrade_script-2&quot;&gt;upgrade_script/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#downgrade_script-3&quot;&gt;downgrade_script/3&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e394b724b32d1dd8314c8a8946e943dd57574b9" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;file_sorter&quot;&gt;file_sorter(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;file_sorter&quot;&gt;file_sorter(3)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb3edc306ea4aea81fe2c5a897f389ffeefb5c19" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;gen_tcp#type-socket&quot;&gt;gen_tcp:type-socket&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;gen_udp#type-socket&quot;&gt;gen_udp:type-socket&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;gen_tcp#type-socket&quot;&gt;gen_tcp:type-socket&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;gen_udp#type-socket&quot;&gt;gen_udp:type-socket&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fba83474d3b6fea13d2ab007b1da5a104f607e71" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;http://lttng.org/docs/#doc-installing-lttng&quot;&gt;Installing LTTng&lt;/a&gt;&lt;/code&gt; for more information on how to install LTTng on your system.</source>
          <target state="translated">시스템에 LTTng을 설치하는 방법에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;http://lttng.org/docs/#doc-installing-lttng&quot;&gt;Installing LTTng&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fff42c8fd8754f934bb6ff8c758ca041e8e604b6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; for the function of the Max and Min values.</source>
          <target state="translated">최대 값과 최소값의 기능에 대해서는 &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88018f5261ced516717a4d2ea4763650f1fcbd17" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc6125&quot;&gt;RFC 6125&lt;/a&gt;&lt;/code&gt; for detailed information about hostname verification. The &lt;code&gt;&lt;a href=&quot;using_public_key#verify_hostname&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;using_public_key#verify_hostname_examples&quot;&gt;code examples&lt;/a&gt;&lt;/code&gt; describes this function more detailed.</source>
          <target state="translated">호스트 이름 확인에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc6125&quot;&gt;RFC 6125&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;&lt;a href=&quot;using_public_key#verify_hostname&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;using_public_key#verify_hostname_examples&quot;&gt;code examples&lt;/a&gt;&lt;/code&gt; 이 기능을 더 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="7a058319fc9548af1087424f5bec2063eb922d63" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;inet#setopts-2&quot;&gt;inet:setopts/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;inet#setopts-2&quot;&gt;inet:setopts/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fac7d0e3e292a018bbcc17b47e6c0690b514867" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;logger(3)&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;logger_chapter&quot;&gt;Logging&lt;/a&gt;&lt;/code&gt; chapter in the User's Guide for more information.</source>
          <target state="translated">자세한 내용은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;logger(3)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;logger_chapter&quot;&gt;Logging&lt;/a&gt;&lt;/code&gt; 장을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bdce3e30c911f84ff81382cb4bf609ea41feed29" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; for an example implementation. &lt;code&gt;logger_formatter&lt;/code&gt; is the default formatter used by Logger.</source>
          <target state="translated">구현 예는 &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;logger_formatter&lt;/code&gt; 는 로거에서 사용하는 기본 포맷터입니다.</target>
        </trans-unit>
        <trans-unit id="6d7f32ae5f44843b45bb95e8c9a403f7edca80f1" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;megaco#enable_trace&quot;&gt;enable_trace&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;megaco#disable_trace&quot;&gt;disable_trace&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;megaco#set_trace&quot;&gt;set_trace&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;megaco#enable_trace&quot;&gt;enable_trace&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;megaco#disable_trace&quot;&gt;disable_trace&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;megaco#set_trace&quot;&gt;set_trace&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="92fb3292a83524aa572546cc84df8437d47c3e48" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;megaco_user#segment_reply&quot;&gt;handle_segment_reply&lt;/a&gt;&lt;/code&gt; callback function for more information.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;megaco_user#segment_reply&quot;&gt;handle_segment_reply&lt;/a&gt;&lt;/code&gt; 콜백 함수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9cbcdd4bdc8f0145024f6ed32a41e9b2377dd874" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp#log_to_io&quot;&gt;snmp:log_to_io&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmp#log_to_io&quot;&gt;snmp:log_to_io&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8e68564f04a5252b236089803a37f6f231b4e62a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp#log_to_txt&quot;&gt;snmp:log_to_txt&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;snmp#log_to_txt&quot;&gt;snmp:log_to_txt&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ea72f9b6dff71db0a3d370806b730e78aeb961eb" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#agent_information&quot;&gt;Agent Information&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#agent_information&quot;&gt;Agent Information&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ece4cb6a93db6bd3afa2c2f97cf8cb8358ce66f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#community&quot;&gt;Communities&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#community&quot;&gt;Communities&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb0c7685bf9a37af1821365ad03f205eef0df926" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#community&quot;&gt;Community&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#community&quot;&gt;Community&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e84c5b481a605a9810e5ee796fa7396d5b820f9e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#context&quot;&gt;Contexts&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#context&quot;&gt;Contexts&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="094d720a9e6bc542032f49664f0dbb5ad227ccf9" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#notify&quot;&gt;Notify Definitions&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#notify&quot;&gt;Notify Definitions&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e1424c2a59ec5335db9913f72cfe2b63d0e978cd" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#system_information&quot;&gt;System Information&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#system_information&quot;&gt;System Information&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9bdc1a440ab1731f9d248896efa955deba556524" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#target_addr&quot;&gt;Target Address Definitions&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#target_addr&quot;&gt;Target Address Definitions&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="85b9e0e0b9c1c83344b5932b248bec3530bf681a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#target_params&quot;&gt;Target Parameters Definitions&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#target_params&quot;&gt;Target Parameters Definitions&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0caa5152cd888543066c627cf89e93083b907a2d" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#usm&quot;&gt;Security data for USM&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#usm&quot;&gt;Security data for USM&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="25b23ed2b2719981425cc67440257a42dfaa1afa" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#vacm&quot;&gt;MIB Views for VACM&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#vacm&quot;&gt;MIB Views for VACM&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a67581b11f24851720026029e73e58a2f29a2af" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_config&quot;&gt;snmp config&lt;/a&gt;&lt;/code&gt; for a description of the options.</source>
          <target state="translated">옵션에 대한 설명은 &lt;code&gt;&lt;a href=&quot;snmp_config&quot;&gt;snmp config&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d6213867de69e089340fee16e1200824c760a60" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_config#configuration_params&quot;&gt;configuration parameters&lt;/a&gt;&lt;/code&gt; for a description of the options.</source>
          <target state="translated">옵션에 대한 설명은 &lt;code&gt;&lt;a href=&quot;snmp_config#configuration_params&quot;&gt;configuration parameters&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a2324b03a22e8e73c4c3c82f4d59ac0a1be798c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#agents&quot;&gt;Agents&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#agents&quot;&gt;Agents&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a33065ce91e37d3bdfc2a4eeb2d203c64d9ad895" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#manager_information&quot;&gt;Manager Information&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#manager_information&quot;&gt;Manager Information&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="156aee70dd3749029d2f3fde637c75460cbf9f86" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#users&quot;&gt;Users&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#users&quot;&gt;Users&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1998afa1695cda02849f428f5eefff3188ce32e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#usm&quot;&gt;Security data for USM&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#usm&quot;&gt;Security data for USM&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="19e86b1c85a5d24bfc30b550e3c6b88a2e8bee22" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmpa#print_mib_info&quot;&gt;print_mib_info/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpa#print_mib_tables&quot;&gt;print_mib_tables/0&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;snmpa#print_mib_variables&quot;&gt;print_mib_variables/0&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmpa#print_mib_info&quot;&gt;print_mib_info/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpa#print_mib_tables&quot;&gt;print_mib_tables/0&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;snmpa#print_mib_variables&quot;&gt;print_mib_variables/0&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="869b5f71c80937b848228230b74a7feb5c627b71" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmpa#set_log_type&quot;&gt;set_log_type&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmpa#set_log_type&quot;&gt;set_log_type&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2384b3499b226d4c82f41e19cddd2996418d6d60" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmpm#set_log_type&quot;&gt;set_log_type&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmpm#set_log_type&quot;&gt;set_log_type&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="04d3fb30d06ae94ceacb2c17794d9e2cae35eba7" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;snmpm_network_interface&quot;&gt;snmpm_network_interface&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm_user&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmp_manager_netif&quot;&gt;definition of the manager net if&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmpm_network_interface&quot;&gt;snmpm_network_interface&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm_user&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;snmp_manager_netif&quot;&gt;definition of the manager net if&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="deb38ac0dfa147f9bb1772fd1092de647edfe520" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Allocated Areas&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Allocated Areas&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b84a195cefded85cb5381be2578986f3b0565970" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Memory Information&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Memory Information&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aef3869720a0af1f410f59f7f64c9d5bd1d32ed2" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;OTP Design Principles&lt;/code&gt; for more information about OTP supervision trees, which use this feature.</source>
          <target state="translated">참조 &lt;code&gt;OTP Design Principles&lt;/code&gt; 이 기능을 사용 OTP 감독의 나무에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="46542880376b783c2368cd4d93cef2e26159c41b" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;application&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;application&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8861332117ee456797826857fc917000621f3781" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;calendar&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;calendar&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="876288b6e8a33f4ba850bf548b3fe658c6110b38" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;compile:file/2.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;compile:file/2.&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c44b1ae7a13045e73a588cdd05d14f3d51bae17" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;compile_module/1,2&lt;/code&gt;   See &lt;code&gt;compile_module/1,2&lt;/code&gt;</source>
          <target state="translated">참조 &lt;code&gt;compile_module/1,2&lt;/code&gt; 참조 &lt;code&gt;compile_module/1,2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f434f4656ac8e122178bdf6a7321448aa75db266" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;config(4)&lt;/code&gt; for information about how to change the value of configuration parameters.</source>
          <target state="translated">구성 매개 변수의 값을 변경하는 방법에 대한 정보는 &lt;code&gt;config(4)&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed85bab26fa4f4b782b93eb8d7dcb652ba1cb5d4" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;dbg&lt;/code&gt; for further information.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;dbg&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0f3e7deee3ed271bb0f57da2d905395b21cf597" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;erlang:process_flag(max_heap_size, MaxHeapSize)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erlang:process_flag(max_heap_size, MaxHeapSize)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ea1981d6ca5bdc3a867e4228fa1a49a4c62d7f8" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;erlang:spawn_opt/2,3,4,5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erlang:spawn_opt/2,3,4,5&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7dca770dc84845c4e83bf717d81f26a232b20a6e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;erlang:trace/3&lt;/code&gt; for more info about the semantics of the trace data.</source>
          <target state="translated">추적 데이터의 의미에 대한 자세한 정보는 &lt;code&gt;erlang:trace/3&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a597cf7a4786921d6fb2e215351e44da0fff5ce" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;et:trace_me/4&lt;/code&gt;and &lt;code&gt;et:trace_me/5&lt;/code&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;et:trace_me/4&lt;/code&gt; 및 &lt;code&gt;et:trace_me/5&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="32db7eb55b44d75a7f88626f45f2688d2938ead4" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;export/3&lt;/code&gt; for details on the callback module and the root attributes. The XML-data is always converted to normal form before being passed to the callback module.</source>
          <target state="translated">콜백 모듈 및 루트 속성에 대한 자세한 내용 은 &lt;code&gt;export/3&lt;/code&gt; 를 참조하십시오 . XML 데이터는 콜백 모듈에 전달되기 전에 항상 일반 형식으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="1ad33cd2f884cd6bcec92c49e5c1f01c8733b2ac" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;gen_server&lt;/code&gt; for more info regarding the &lt;code&gt;Vsn&lt;/code&gt; and &lt;code&gt;Extra&lt;/code&gt; arguments.</source>
          <target state="translated">&lt;code&gt;Vsn&lt;/code&gt; 및 &lt;code&gt;Extra&lt;/code&gt; 인수 에 대한 자세한 내용은 &lt;code&gt;gen_server&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="df1f07252f98be49fd65fa94a7513ab9f0daaca1" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;gui/0,1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gui/0,1&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52112d81da164c54157bdb141a56d5261acf7a83" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;merge/3&lt;/code&gt; for details on these options.</source>
          <target state="translated">이 옵션에 대한 자세한 내용 은 &lt;code&gt;merge/3&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="695c585f5e00b718616f0fd288ee4908265c7e24" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;merge_files/4&lt;/code&gt; for details on these options.</source>
          <target state="translated">이러한 옵션에 대한 자세한 내용 은 &lt;code&gt;merge_files/4&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4676c2fde83116e888a6de8cc918185a6fbe8284" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;merge_files/4&lt;/code&gt; for further options.</source>
          <target state="translated">추가 옵션 은 &lt;code&gt;merge_files/4&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f0fdfc45de88a091db08c7da9f78a5c6e6ce650" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;merge_files/4&lt;/code&gt; for further options. Note, however, that some options are preset by this function and cannot be overridden by the user; in particular, all cosmetic features are turned off, for efficiency. Preprocessing is turned on.</source>
          <target state="translated">추가 옵션 은 &lt;code&gt;merge_files/4&lt;/code&gt; 를 참조하십시오 . 그러나 일부 옵션은이 기능에 의해 사전 설정되며 사용자가 재정의 할 수 없습니다. 특히 효율성을 위해 모든 미용 기능이 꺼져 있습니다. 전처리가 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="02eea958ed7b3b2394e21efad6a59ce9420a6b69" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;merge_sources/3&lt;/code&gt; for further options.</source>
          <target state="translated">추가 옵션 은 &lt;code&gt;merge_sources/3&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="86f4f54324639845938e63fb91cd6ed46c6cf18a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;run/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;run/1&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f91738461e728aba8811ec7d4ca340782127c5da" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;ssl(3)&lt;/code&gt; for information about &lt;code&gt;SSL&lt;/code&gt; options (&lt;code&gt;ssloptions()&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;SSL&lt;/code&gt; 옵션 ( &lt;code&gt;ssloptions()&lt;/code&gt; ) 에 대한 정보는 &lt;code&gt;ssl(3)&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d516c35c11923c9804c0ef193923f8bc765e5213" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;supervisor&lt;/code&gt; documentation for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;supervisor&lt;/code&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="0e383ff22ade866c0cb27b21e69c65c1cfcefe12" translate="yes" xml:space="preserve">
          <source>See also &quot;System Flags Effecting erts_alloc&quot; in &lt;code&gt;erts_alloc(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erts_alloc(3)&lt;/code&gt; &quot; erts_alloc 에 영향을 주는 시스템 플래그&quot;도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="70ac8cae86bbaa64f012d6596f5ffae022390925" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#ErlDrvTime&quot;&gt;ErlDrvTime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ErlDrvTimeUnit&quot;&gt;ErlDrvTimeUnit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ErlDrvTime&quot;&gt;ErlDrvTime&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#ErlDrvTimeUnit&quot;&gt;ErlDrvTimeUnit&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fae065b99b96760dd0e23f389542dab5cadcbc61" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#ErlNifBinaryToTerm&quot;&gt;ErlNifBinaryToTerm&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt;erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#enif_term_to_binary&quot;&gt;enif_term_to_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ErlNifBinaryToTerm&quot;&gt;ErlNifBinaryToTerm&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt;erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#enif_term_to_binary&quot;&gt;enif_term_to_binary&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b37a51c554a945990fdafb427417a47a97488d0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#ErlNifTime&quot;&gt;ErlNifTime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ErlNifTimeUnit&quot;&gt;ErlNifTimeUnit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ErlNifTime&quot;&gt;ErlNifTime&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#ErlNifTimeUnit&quot;&gt;ErlNifTimeUnit&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4152cebdf2dcd601613c013c72044161c65c0310" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#ErlNifUniqueInteger&quot;&gt;ErlNifUniqueInteger&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ErlNifUniqueInteger&quot;&gt;ErlNifUniqueInteger&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e7bc0c0c49670d564275025acc945e87de572d0d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#Information%20Object&quot;&gt;Information object&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#Information%20Object&quot;&gt;Information object&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb99f1ba3d136a45c4d24b803bc1424763bbe9d8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#M_acul&quot;&gt;acul&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#M_acul&quot;&gt;acul&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="17ea80dd7e7deaccbbfdd9b2d4d70bd43d1c5c1d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#binary_to_term-1&quot;&gt;binary_to_term/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#binary_to_term-1&quot;&gt;binary_to_term/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dfe8b0c75bfaa06986c05b180fd537f07262484d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#capture_get-1&quot;&gt;ct:capture_get/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#capture_start-0&quot;&gt;ct:capture_start/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#capture_get-1&quot;&gt;ct:capture_get/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#capture_start-0&quot;&gt;ct:capture_start/0&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="889d3abdfae2e209fc3c931da713fa58391c9b1b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#capture_get-1&quot;&gt;ct:capture_get/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#capture_stop-0&quot;&gt;ct:capture_stop/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#capture_get-1&quot;&gt;ct:capture_get/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#capture_stop-0&quot;&gt;ct:capture_stop/0&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1bfd64bc77244c42fc4e0f8a9c0d682f12f81680" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#capture_start-0&quot;&gt;ct:capture_start/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#capture_stop-0&quot;&gt;ct:capture_stop/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#log-3&quot;&gt;ct:log/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 : &lt;code&gt;&lt;a href=&quot;#capture_start-0&quot;&gt;ct:capture_start/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#capture_stop-0&quot;&gt;ct:capture_stop/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#log-3&quot;&gt;ct:log/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8645278403fdd4e1ea2864c48f44ac94315af142" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#enif_get_local_port&quot;&gt;enif_get_local_port&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_get_local_port&quot;&gt;enif_get_local_port&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2fd0fc365297116ab0be768bdaf7301be9d43739" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#enif_has_pending_exception&quot;&gt;enif_has_pending_exception&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_has_pending_exception&quot;&gt;enif_has_pending_exception&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="692895f21d3ead2f1727655a4f52a08bb204a683" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#enif_has_pending_exception&quot;&gt;enif_has_pending_exception&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#enif_raise_exception&quot;&gt;enif_raise_exception&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_has_pending_exception&quot;&gt;enif_has_pending_exception&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#enif_raise_exception&quot;&gt;enif_raise_exception&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c0a49c69d684b8a1c843913701ad1055c6b9b22" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#enif_raise_exception&quot;&gt;enif_raise_exception&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#enif_raise_exception&quot;&gt;enif_raise_exception&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b634b027fa349facc5b77157daf02df0a41c390d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#enif_open_resource_type_x&quot;&gt;enif_open_resource_type_x&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_open_resource_type_x&quot;&gt;enif_open_resource_type_x&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3edb7e0327bd1544faa22bcfe9548d97ddb54b42" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_create&quot;&gt;erl_drv_cond_create&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_destroy&quot;&gt;erl_drv_cond_destroy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_signal&quot;&gt;erl_drv_cond_signal&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_broadcast&quot;&gt;erl_drv_cond_broadcast&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_wait&quot;&gt;erl_drv_cond_wait&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#erl_drv_cond_create&quot;&gt;erl_drv_cond_create&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_destroy&quot;&gt;erl_drv_cond_destroy&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_signal&quot;&gt;erl_drv_cond_signal&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_broadcast&quot;&gt;erl_drv_cond_broadcast&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_wait&quot;&gt;erl_drv_cond_wait&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="99f58306083dc166c6e28d432f4e49e3937b8e35" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_create&quot;&gt;erl_drv_mutex_create&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_destroy&quot;&gt;erl_drv_mutex_destroy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_lock&quot;&gt;erl_drv_mutex_lock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_trylock&quot;&gt;erl_drv_mutex_trylock&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_unlock&quot;&gt;erl_drv_mutex_unlock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_create&quot;&gt;erl_drv_mutex_create&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_destroy&quot;&gt;erl_drv_mutex_destroy&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_lock&quot;&gt;erl_drv_mutex_lock&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_trylock&quot;&gt;erl_drv_mutex_trylock&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_unlock&quot;&gt;erl_drv_mutex_unlock&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d6d607ba88bea4a13409892868d9256bb1e418a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_create&quot;&gt;erl_drv_rwlock_create&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_destroy&quot;&gt;erl_drv_rwlock_destroy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_rlock&quot;&gt;erl_drv_rwlock_rlock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_tryrlock&quot;&gt;erl_drv_rwlock_tryrlock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_runlock&quot;&gt;erl_drv_rwlock_runlock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_rwlock&quot;&gt;erl_drv_rwlock_rwlock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_tryrwlock&quot;&gt;erl_drv_rwlock_tryrwlock&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_rwunlock&quot;&gt;erl_drv_rwlock_rwunlock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_create&quot;&gt;erl_drv_rwlock_create&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_destroy&quot;&gt;erl_drv_rwlock_destroy&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_rlock&quot;&gt;erl_drv_rwlock_rlock&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_tryrlock&quot;&gt;erl_drv_rwlock_tryrlock&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_runlock&quot;&gt;erl_drv_rwlock_runlock&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_rwlock&quot;&gt;erl_drv_rwlock_rwlock&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_tryrwlock&quot;&gt;erl_drv_rwlock_tryrwlock&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_rwunlock&quot;&gt;erl_drv_rwlock_rwunlock&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="0c4a1987a98df21ddbde119634f56a0ca91d882c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_exit&quot;&gt;erl_drv_thread_exit&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_join&quot;&gt;erl_drv_thread_join&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_self&quot;&gt;erl_drv_thread_self&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#erl_drv_equal_tids&quot;&gt;erl_drv_equal_tids&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_exit&quot;&gt;erl_drv_thread_exit&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_join&quot;&gt;erl_drv_thread_join&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_self&quot;&gt;erl_drv_thread_self&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#erl_drv_equal_tids&quot;&gt;erl_drv_equal_tids&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="552349012516d17d647f80ffa45dd06098310929" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_destroy&quot;&gt;erl_drv_thread_opts_destroy&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_destroy&quot;&gt;erl_drv_thread_opts_destroy&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="676a73373c69f8a83c063a7c0ebf34094acc876a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_key_create&quot;&gt;erl_drv_tsd_key_create&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_key_destroy&quot;&gt;erl_drv_tsd_key_destroy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_set&quot;&gt;erl_drv_tsd_set&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_get&quot;&gt;erl_drv_tsd_get&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_key_create&quot;&gt;erl_drv_tsd_key_create&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_key_destroy&quot;&gt;erl_drv_tsd_key_destroy&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_set&quot;&gt;erl_drv_tsd_set&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_get&quot;&gt;erl_drv_tsd_get&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d13d67491c08f1cc239b09680b7d9badc0242f1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#error-1&quot;&gt;error/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#error-2&quot;&gt;error/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#error-1&quot;&gt;error/1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#error-2&quot;&gt;error/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c6c4d23d599e7f460c944b53e69de528adece807" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#exit-2&quot;&gt;exit/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#exit-2&quot;&gt;exit/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="192bf79f9798f91dbe6304376f4732123cae1793" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#fix-1&quot;&gt;fix/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#from_list-2&quot;&gt;from_list/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#get-2&quot;&gt;get/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#new-0&quot;&gt;new/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">도 참조 &lt;code&gt;&lt;a href=&quot;#fix-1&quot;&gt;fix/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#from_list-2&quot;&gt;from_list/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#get-2&quot;&gt;get/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#new-0&quot;&gt;new/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d3408450f3110dd7705a1a39030f29358685caf" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#fix-1&quot;&gt;fix/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#fix-1&quot;&gt;fix/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf19580eb67993b4bf981ae977978f54f29167b7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#foldl-3&quot;&gt;foldl/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#foldr-3&quot;&gt;foldr/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sparse_map-2&quot;&gt;sparse_map/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#foldl-3&quot;&gt;foldl/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#foldr-3&quot;&gt;foldr/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#sparse_map-2&quot;&gt;sparse_map/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c36970056536e1fdcaa026ea857e933becd297c7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#foldl-3&quot;&gt;foldl/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#map-2&quot;&gt;map/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#foldl-3&quot;&gt;foldl/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#map-2&quot;&gt;map/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7752cef6f68fb8f4ad440c0afc4968d81daac748" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#foldl-3&quot;&gt;foldl/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sparse_foldr-3&quot;&gt;sparse_foldr/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#foldl-3&quot;&gt;foldl/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#sparse_foldr-3&quot;&gt;sparse_foldr/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d50c215dbb8da2f71ef17e9cbbcab39664571052" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#foldr-3&quot;&gt;foldr/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#map-2&quot;&gt;map/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sparse_foldl-3&quot;&gt;sparse_foldl/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#foldr-3&quot;&gt;foldr/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#map-2&quot;&gt;map/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#sparse_foldl-3&quot;&gt;sparse_foldl/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d320f7a7c4ecc03ecff1613b4179bbd236473f7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#foldr-3&quot;&gt;foldr/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sparse_foldl-3&quot;&gt;sparse_foldl/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#foldr-3&quot;&gt;foldr/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#sparse_foldl-3&quot;&gt;sparse_foldl/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="271a7f7ac9cf8709fbed879901527dc4c83ff035" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#from_list-2&quot;&gt;from_list/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sparse_to_list-1&quot;&gt;sparse_to_list/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#from_list-2&quot;&gt;from_list/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#sparse_to_list-1&quot;&gt;sparse_to_list/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="011d688bd7c43895a85ac6363bbe2b814a93d6b8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#from_orddict-2&quot;&gt;from_orddict/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sparse_to_orddict-1&quot;&gt;sparse_to_orddict/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#from_orddict-2&quot;&gt;from_orddict/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#sparse_to_orddict-1&quot;&gt;sparse_to_orddict/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab78fb29dba6c7112d94a93ccb59a7d687bd31b5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#from_term-1&quot;&gt;from_term()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#from_term-1&quot;&gt;from_term()&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b68fb2b6756927a3a8cfe960d62d085a5d4d9852" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#generate_msg&quot;&gt;generate_msg.&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#generate_msg&quot;&gt;generate_msg.&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb6a1b339c5503e2fd2c04371a8b85e9fc4d8073" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#get-2&quot;&gt;get/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#reset-2&quot;&gt;reset/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#get-2&quot;&gt;get/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#reset-2&quot;&gt;reset/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1cabb7b1c19fcbe2e539f8e4073d8bc1b16984ac" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#get_all_values-2&quot;&gt;get_all_values/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#get_bool-2&quot;&gt;get_bool/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#get_all_values-2&quot;&gt;get_all_values/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#get_bool-2&quot;&gt;get_bool/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5b7b3b07bb35d4441380a444aa62a215e78a7e3" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#get_bool-2&quot;&gt;get_bool/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#lookup_all-2&quot;&gt;lookup_all/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#get_bool-2&quot;&gt;get_bool/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#lookup_all-2&quot;&gt;lookup_all/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0af0695e44fe9917500b21fe61939f9e62d6f6c9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#get_bool-2&quot;&gt;get_bool/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#normalize-2&quot;&gt;normalize/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#substitute_aliases-2&quot;&gt;substitute_aliases/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#get_bool-2&quot;&gt;get_bool/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#normalize-2&quot;&gt;normalize/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#substitute_aliases-2&quot;&gt;substitute_aliases/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a8e1c0310bd03132c1e028da2bad4aea4d2f073" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#get_config-1&quot;&gt;ct:get_config/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#get_config-2&quot;&gt;ct:get_config/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#get_config-3&quot;&gt;ct:get_config/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#require-1&quot;&gt;ct:require/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 : &lt;code&gt;&lt;a href=&quot;#get_config-1&quot;&gt;ct:get_config/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#get_config-2&quot;&gt;ct:get_config/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#get_config-3&quot;&gt;ct:get_config/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#require-1&quot;&gt;ct:require/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e175412ab803e1a673760a51c56090ca0edfd48c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#get_config-1&quot;&gt;ct:get_config/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#get_config-2&quot;&gt;ct:get_config/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#get_config-3&quot;&gt;ct:get_config/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 : &lt;code&gt;&lt;a href=&quot;#get_config-1&quot;&gt;ct:get_config/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#get_config-2&quot;&gt;ct:get_config/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#get_config-3&quot;&gt;ct:get_config/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84face1f76ea45386e64b6b9de18ba0b80589d60" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#get_config-1&quot;&gt;ct:get_config/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#get_config-2&quot;&gt;ct:get_config/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#require-1&quot;&gt;ct:require/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 : &lt;code&gt;&lt;a href=&quot;#get_config-1&quot;&gt;ct:get_config/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#get_config-2&quot;&gt;ct:get_config/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#require-1&quot;&gt;ct:require/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c28e98fb8e4106efc876dedd293b0d2f07901c1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f6600ced064275ac353fac8a7db28a806ec9685" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#group_leader-0&quot;&gt;group_leader/0&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;OTP design principles&lt;/code&gt; related to starting and stopping applications.</source>
          <target state="translated">응용 프로그램 시작 및 중지와 관련된 &lt;code&gt;&lt;a href=&quot;#group_leader-0&quot;&gt;group_leader/0&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;OTP design principles&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="843f9f2ccd6bf29b82c8c273a6e9aac5a212486f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9accada60fcdae26d449fd5d745fe019d9aadf5f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#map-2&quot;&gt;map/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#map-2&quot;&gt;map/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="04bc6fabe97ff9f9d64485068f8338e97c4130d5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#memory-0&quot;&gt;erlang:memory/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#memory-0&quot;&gt;erlang:memory/0&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ed6eea6452e9a546f95a055136bb26fa7244e40" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#modified_modules-0&quot;&gt;modified_modules/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#modified_modules-0&quot;&gt;modified_modules/0&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="264f7abdaf6129be0c506fd1e292cf78dddfe98a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#new-1&quot;&gt;new/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#new-1&quot;&gt;new/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a9e72d12fe57743fa9b100e836c6075807efc62" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#new-1&quot;&gt;new/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#new-1&quot;&gt;new/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="62fbe881ad3d4db06dcc3636884a08eecf702997" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4111d4e321a493b56150d04469997f3e67dfcde8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7fb7fda534e3abbea15fd024f8bcddedf64e908" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#to_orddict-1&quot;&gt;to_orddict/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#to_orddict-1&quot;&gt;to_orddict/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ff970c505cea906cfad3ee2707c1911d0017d7a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="69d839c2b6f6e73acf39c681b2cb88a3a57cb081" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#normalize-2&quot;&gt;normalize/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#substitute_negations-2&quot;&gt;substitute_negations/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#normalize-2&quot;&gt;normalize/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#substitute_negations-2&quot;&gt;substitute_negations/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22c7d9024d519facb80a8f391fa0f5ed8b38b1c9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#normalize-2&quot;&gt;normalize/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#normalize-2&quot;&gt;normalize/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c4dd1c5ee58b0fdca4d1c6456ce663cfbeb45b7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#pause&quot;&gt;pause/1..3&lt;/a&gt;&lt;/code&gt; below.</source>
          <target state="translated">아래의 &lt;code&gt;&lt;a href=&quot;#pause&quot;&gt;pause/1..3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="45c48dc46c3e0467133af29e41fbdbca11e97296" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#property-1&quot;&gt;property/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#unfold-1&quot;&gt;unfold/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#property-1&quot;&gt;property/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#unfold-1&quot;&gt;unfold/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e33da9cabc48819ca70ea0cc26df5345749bf960" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#property-1&quot;&gt;property/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#property-1&quot;&gt;property/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd36ad2c5802b431139ce247273fd7cd26ca9bf2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#property-2&quot;&gt;property/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#property-2&quot;&gt;property/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1983cccf08904b086f31d4f2f8456ff2c5646111" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#recv-3&quot;&gt;ct_ftp:recv/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#recv-3&quot;&gt;ct_ftp:recv/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a66c04de6a359b5180ff6d469c7ce006eedcdeca" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#resize-1&quot;&gt;resize/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#size-1&quot;&gt;size/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#resize-1&quot;&gt;resize/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#size-1&quot;&gt;size/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc963b6002835b4bdd01f8df9f29617186ccee0b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#resize-2&quot;&gt;resize/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sparse_size-1&quot;&gt;sparse_size/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#resize-2&quot;&gt;resize/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#sparse_size-1&quot;&gt;sparse_size/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf5e140d15b93b45e4f5d5369e5db6cab9ddfc22" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;ct:run/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;ct:run/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a823987da1329190b57ce3cab1f047e11f7daea0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;ct_ftp:send/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;ct_ftp:send/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd0f080ecf1d2d312e350cdcfc6e88440eccfb38" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after/4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#cancel_timer-2&quot;&gt;erlang:cancel_timer/2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after/4&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#cancel_timer-2&quot;&gt;erlang:cancel_timer/2&lt;/a&gt;&lt;/code&gt; , 및 &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcb4ade9e397b438d56ffe28bf49a5bba53b0aee" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after/4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer/4&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#cancel_timer-2&quot;&gt;erlang:cancel_timer/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after/4&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer/4&lt;/a&gt;&lt;/code&gt; , 및 &lt;code&gt;&lt;a href=&quot;#cancel_timer-2&quot;&gt;erlang:cancel_timer/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4c7dca88145b6490fa17b03cef12bfeefb2921c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after/4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer/4&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after/4&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer/4&lt;/a&gt;&lt;/code&gt; , 및 &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1fb88ff43693daa20117462c4d6c0fa707dcc60" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#relax-1&quot;&gt;relax/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#relax-1&quot;&gt;relax/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="05be50f5d0fdb69a5d8f3e4167bd3b67a00d9dd5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sparse_size-1&quot;&gt;sparse_size/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#sparse_size-1&quot;&gt;sparse_size/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18a9c052a2518ca3a4ebd5e69c503a917cd352b2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#set-3&quot;&gt;set/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b40ada1397f076496972c8591c4113b3fed838d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#start&quot;&gt;start/1..3&lt;/a&gt;&lt;/code&gt; below.</source>
          <target state="translated">아래의 &lt;code&gt;&lt;a href=&quot;#start&quot;&gt;start/1..3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="624ce7b44423568b2bb02e712a3aa2cf0f734a09" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;ct_slave:start/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;ct_slave:start/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0b429433a18725d39dc59a16cf57333e2d2d759" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#start_interactive-0&quot;&gt;ct:start_interactive/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#start_interactive-0&quot;&gt;ct:start_interactive/0&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9eed39a21d4a86ce09181ad578abeac5f822efa" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#statistics_run_queue_lengths&quot;&gt;statistics(run_queue_lengths)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths_all&quot;&gt;statistics(total_run_queue_lengths_all)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths&quot;&gt;statistics(total_run_queue_lengths)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#statistics_active_tasks&quot;&gt;statistics(active_tasks)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#statistics_active_tasks_all&quot;&gt;statistics(active_tasks_all)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#statistics_total_active_tasks&quot;&gt;statistics(total_active_tasks)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#statistics_total_active_tasks_all&quot;&gt;statistics(total_active_tasks_all)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#statistics_run_queue_lengths&quot;&gt;statistics(run_queue_lengths)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths_all&quot;&gt;statistics(total_run_queue_lengths_all)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths&quot;&gt;statistics(total_run_queue_lengths)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#statistics_active_tasks&quot;&gt;statistics(active_tasks)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#statistics_active_tasks_all&quot;&gt;statistics(active_tasks_all)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#statistics_total_active_tasks&quot;&gt;statistics(total_active_tasks)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#statistics_total_active_tasks_all&quot;&gt;statistics(total_active_tasks_all)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b15b24c5f6d21f18193cf2f8a2a64835b9c8aecf" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#statistics_total_active_tasks&quot;&gt;statistics(total_active_tasks)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#statistics_run_queue_lengths&quot;&gt;statistics(run_queue_lengths)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#statistics_run_queue_lengths_all&quot;&gt;statistics(run_queue_lengths_all)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths&quot;&gt;statistics(total_run_queue_lengths)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths_all&quot;&gt;statistics(total_run_queue_lengths_all)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#statistics_total_active_tasks&quot;&gt;statistics(total_active_tasks)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#statistics_run_queue_lengths&quot;&gt;statistics(run_queue_lengths)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#statistics_run_queue_lengths_all&quot;&gt;statistics(run_queue_lengths_all)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths&quot;&gt;statistics(total_run_queue_lengths)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#statistics_total_run_queue_lengths_all&quot;&gt;statistics(total_run_queue_lengths_all)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b63d89c01c8a628406db41966a55c892e017fce" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#stop&quot;&gt;stop/1..3&lt;/a&gt;&lt;/code&gt; below.</source>
          <target state="translated">아래의 &lt;code&gt;&lt;a href=&quot;#stop&quot;&gt;stop/1..3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="daadb52a9905c46d573eb9aa2730ab2950010c13" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#substitute_negations-2&quot;&gt;substitute_negations/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#substitute_negations-2&quot;&gt;substitute_negations/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4eb5a222d6d6c64f4047f19224f9e7f4cdc33c79" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt;erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt;erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt;erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt;erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1f0fd96a723528e623d0c834765e59e45436501" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, BlockState)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling&quot;&gt;erlang:system_info(multi_scheduling)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling_blockers&quot;&gt;erlang:system_info(multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, BlockState)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling&quot;&gt;erlang:system_info(multi_scheduling)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling_blockers&quot;&gt;erlang:system_info(multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4463629088a79bdb0ed355950fc796b1911a6968" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, BlockState)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling&quot;&gt;erlang:system_info(multi_scheduling)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_normal_multi_scheduling_blockers&quot;&gt;erlang:system_info(normal_multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, BlockState)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling&quot;&gt;erlang:system_info(multi_scheduling)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_normal_multi_scheduling_blockers&quot;&gt;erlang:system_info(normal_multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed81c0234d43c5b73365a12a388ac5edc8e010bd" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, BlockState)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling_blockers&quot;&gt;erlang:system_info(multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_normal_multi_scheduling_blockers&quot;&gt;erlang:system_info(normal_multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, BlockState)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling_blockers&quot;&gt;erlang:system_info(multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_normal_multi_scheduling_blockers&quot;&gt;erlang:system_info(normal_multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4a60f182bc6cb0b1041104200680d45599edffc" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_id&quot;&gt;erlang:system_info(scheduler_id)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, BlockState)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling&quot;&gt;erlang:system_info(multi_scheduling)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_normal_multi_scheduling_blockers&quot;&gt;erlang:system_info(normal_multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling_blockers&quot;&gt;erlang:system_info(multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_id&quot;&gt;erlang:system_info(scheduler_id)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, BlockState)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling&quot;&gt;erlang:system_info(multi_scheduling)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_normal_multi_scheduling_blockers&quot;&gt;erlang:system_info(normal_multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling_blockers&quot;&gt;erlang:system_info(multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3ff6daed4e811290825ad90b87b0fde52eebe35" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#system_info_end_time&quot;&gt;erlang:system_info(end_time)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_info_end_time&quot;&gt;erlang:system_info(end_time)&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e6371d7a0e63b0154205faefc366c399255290e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling&quot;&gt;erlang:system_info(multi_scheduling)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_normal_multi_scheduling_blockers&quot;&gt;erlang:system_info(normal_multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling_blockers&quot;&gt;erlang:system_info(multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling&quot;&gt;erlang:system_info(multi_scheduling)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_normal_multi_scheduling_blockers&quot;&gt;erlang:system_info(normal_multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_multi_scheduling_blockers&quot;&gt;erlang:system_info(multi_scheduling_blockers)&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fe268471792ea73560fadb5af6733e1bb515430" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="403bc6b0a5dc62a57cd220f33cff49faca2d8537" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#term_to_binary-1&quot;&gt;term_to_binary/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#binary_to_term-2&quot;&gt;binary_to_term/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#term_to_binary-1&quot;&gt;term_to_binary/1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#binary_to_term-2&quot;&gt;binary_to_term/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7ae9754365b6a7c44f186edb42b3d5975f18c93" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#term_to_binary-1&quot;&gt;term_to_binary/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#binary_to_term-1&quot;&gt;binary_to_term/1&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#list_to_existing_atom-1&quot;&gt;list_to_existing_atom/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#term_to_binary-1&quot;&gt;term_to_binary/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#binary_to_term-1&quot;&gt;binary_to_term/1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#list_to_existing_atom-1&quot;&gt;list_to_existing_atom/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d17b22879771cd25c8f1bc4e808289a81b4e661" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#titlecase-1&quot;&gt;titlecase/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#titlecase-1&quot;&gt;titlecase/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8bde48e4920f266feb35ed32ac65c0fbdb65011d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad8dc6fbeb6e2892a55d750357e13fb3a73727ec" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#to_orddict-1&quot;&gt;to_orddict/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#to_orddict-1&quot;&gt;to_orddict/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="864ca3a57415c3713673ea8a792df4a9647d212c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#to_term-1&quot;&gt;to_term()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#to_term-1&quot;&gt;to_term()&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e88a9c128d9ed8f50cbc61c5d4513e7c3c1baa86" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#trace_pattern-3&quot;&gt;erlang:trace_pattern/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#trace_pattern-3&quot;&gt;erlang:trace_pattern/3&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b57ca875b7842eb199b1230fbfac152afbf66c19" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#tuple_size-1&quot;&gt;tuple_size/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#byte_size-1&quot;&gt;byte_size/1&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#bit_size-1&quot;&gt;bit_size/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#tuple_size-1&quot;&gt;tuple_size/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#byte_size-1&quot;&gt;byte_size/1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#bit_size-1&quot;&gt;bit_size/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="739816721a38782f378ac954ca45851732ba7801" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;ct#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ct#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d13f71b04b7924db2ec1c4aef19a341c6dff4de7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;erlang#term_to_binary-1&quot;&gt;erlang:term_to_binary/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#enif_binary_to_term&quot;&gt;enif_binary_to_term&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#term_to_binary-1&quot;&gt;erlang:term_to_binary/1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#enif_binary_to_term&quot;&gt;enif_binary_to_term&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a7bebe60619dfe95a000234c0084605505faab6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;megaco_encode#text_config&quot;&gt;Configuration of text encoding module(s)&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용 &lt;code&gt;&lt;a href=&quot;megaco_encode#text_config&quot;&gt;Configuration of text encoding module(s)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="38e4565fbbb2f1065bcb0932249ed87c61c36b4c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;megaco_run#transaction_sender&quot;&gt;transaction sender&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;megaco_run#transaction_sender&quot;&gt;transaction sender&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e6d1e4ca275074cd3911c6465c15c7bdafb1cc8c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;ssh_client_channel&quot;&gt;ssh_client_channel(3)&lt;/a&gt;&lt;/code&gt; (replaces ssh_channel(3)).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ssh_client_channel&quot;&gt;ssh_client_channel(3)&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 (ssh_channel (3)을 대체 함).</target>
        </trans-unit>
        <trans-unit id="0a386e139450818068791256c49193fb91581f79" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;ERTS User's Guide: Inet Configuration&lt;/code&gt; for more information about how to configure an Erlang runtime system for IP communication, and how to enable this DNS client by defining &lt;code&gt;'dns'&lt;/code&gt; as a lookup method. The DNS client then acts as a backend for the resolving functions in &lt;code&gt;inet&lt;/code&gt;.</source>
          <target state="translated">보기는 &lt;code&gt;ERTS User's Guide: Inet Configuration&lt;/code&gt; IP 통신에 대한 얼랑 런타임 시스템을 구성하는 방법을 정의하여이 DNS 클라이언트를 활성화하는 방법에 대한 자세한 내용은 &lt;code&gt;'dns'&lt;/code&gt; 조회 방법으로. 그런 다음 DNS 클라이언트는 &lt;code&gt;inet&lt;/code&gt; 에서 분석 기능을위한 백엔드 역할을합니다 .</target>
        </trans-unit>
        <trans-unit id="34236c61b11a7a6b8eb9e63dec32529efb54ca4b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;ERTS User's Guide: Inet Configuration&lt;/code&gt; for more information about how to configure an Erlang runtime system for IP communication.</source>
          <target state="translated">참조 &lt;code&gt;ERTS User's Guide: Inet Configuration&lt;/code&gt; IP 통신에 대한 얼랑 런타임 시스템을 구성하는 방법에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="426a60ef9bf6316d6434af24a7712b2f0c7f584b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;code(3)&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4773ed84f772f8b60172de5a491ba88020c7cc9d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;cover:export/1,2&lt;/code&gt;</source>
          <target state="translated">도 참조 &lt;code&gt;cover:export/1,2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b87f75d52aefc479a55ee1f504f40f093785452" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;cover:import/1&lt;/code&gt;</source>
          <target state="translated">도 참조 &lt;code&gt;cover:import/1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88cd61be9b4a8c4c87af871c21e8148144d6b448" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;crypto documentation&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;crypto documentation&lt;/code&gt; 도 참조하십시오</target>
        </trans-unit>
        <trans-unit id="f1f46137dec0859f96ed08623092eade2a09d7c7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;erlang:trace_pattern/2&lt;/code&gt; for more info about its &lt;code&gt;match_spec()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;match_spec()&lt;/code&gt; 에 대한 자세한 내용은 &lt;code&gt;erlang:trace_pattern/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bdb439311ee90ac31771b8046bddcfd241bcec3e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;ets:test_ms/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ets:test_ms/2&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8631089fe37f92e1f79f24661f966978d1a941d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;gen_event(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_event(3)&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a16c364c4d3a801764d46a5e8cd5be18377caf4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;heart(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;heart(3)&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="59ebb0c0b06f26e7a5b866a92720d7b452b34a19" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;io:printable_range/0&lt;/code&gt; in STDLIB.</source>
          <target state="translated">STDLIB의 &lt;code&gt;io:printable_range/0&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="91dc39ecefb9de32b2a522f55f7b64ad5cc1b9b9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;public_key:sign/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;public_key:sign/3&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f38ba1d00a12c916042ea5a3c3ea16a83e4195e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;public_key:verify/4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;public_key:verify/4&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0c880e19d23f36883a5363fb64b78ba4da1a23e" translate="yes" xml:space="preserve">
          <source>See also http://msdn.microsoft.com/</source>
          <target state="translated">http://msdn.microsoft.com/도 참조하십시오</target>
        </trans-unit>
        <trans-unit id="070b102d8d401eef163facb9350069854e739755" translate="yes" xml:space="preserve">
          <source>See also reference manual for &lt;code&gt;&lt;a href=&quot;xmerl#export_simple-3&quot;&gt;xmerl&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmerl#export_simple-3&quot;&gt;xmerl&lt;/a&gt;&lt;/code&gt; 에 대한 참조 매뉴얼도 참조하십시오</target>
        </trans-unit>
        <trans-unit id="36be31b8ac76c4a9ce2648dcc7260d6c45c4fdaa" translate="yes" xml:space="preserve">
          <source>See also section &lt;code&gt;&lt;a href=&quot;#notes&quot;&gt;Notes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">섹션도 참조 &lt;code&gt;&lt;a href=&quot;#notes&quot;&gt;Notes&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="398a340bfcbc1df99842b0af4c3c7e452f03c2e7" translate="yes" xml:space="preserve">
          <source>See also section &lt;code&gt;&lt;a href=&quot;#proc_data&quot;&gt;Process Data&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#proc_data&quot;&gt;Process Data&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="356ca86df09aefde4cdd1563e0aa57b676eac050" translate="yes" xml:space="preserve">
          <source>See also section &lt;code&gt;Notes About Raw Filenames&lt;/code&gt; in the STDLIB User's Guide.</source>
          <target state="translated">STDLIB 사용자 안내서의 &lt;code&gt;Notes About Raw Filenames&lt;/code&gt; 에 대한 참고 사항 섹션도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b6ae9662e0b964d9053d2b1f4c63a1fed00b530" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;&lt;a href=&quot;#WARNING&quot;&gt;warning&lt;/a&gt;&lt;/code&gt; text at the beginning of this manual page.</source>
          <target state="translated">이 매뉴얼 페이지의 시작 부분에 있는 &lt;code&gt;&lt;a href=&quot;#WARNING&quot;&gt;warning&lt;/a&gt;&lt;/code&gt; 문구 도 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="1198e56771926d44017533e696c3becb7be9a82f" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;&lt;a href=&quot;snmpa_conf#types&quot;&gt;data types insnmpa_conf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;snmpa_conf#types&quot;&gt;data types insnmpa_conf&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f75e5dd80f2d71156bf816aad79eddf4b06375f4" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;heart(3)&lt;/code&gt; manual page in Kernel.</source>
          <target state="translated">커널 의 &lt;code&gt;heart(3)&lt;/code&gt; 매뉴얼 페이지도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f9e45aa9b70a8afce075a96e487e6c44f9a65171" translate="yes" xml:space="preserve">
          <source>See also the chapter &lt;code&gt;Engine Load&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">사용자 안내서의 &lt;code&gt;Engine Load&lt;/code&gt; 장도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="07d1cebb3065283f546e6d689dd3cbe1e6914ff8" translate="yes" xml:space="preserve">
          <source>See also the documentation of the &lt;code&gt;&lt;a href=&quot;#type-name_all&quot;&gt;name_all()&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#type-name_all&quot;&gt;name_all()&lt;/a&gt;&lt;/code&gt; 유형 의 설명서도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ed3ebd56ead0b4770f8577b0f99e29123bdf4ea" translate="yes" xml:space="preserve">
          <source>See also the important &lt;code&gt;&lt;a href=&quot;#WARNING&quot;&gt;warning&lt;/a&gt;&lt;/code&gt; text at the beginning of this manual page.</source>
          <target state="translated">이 매뉴얼 페이지의 시작 부분에 있는 중요한 &lt;code&gt;&lt;a href=&quot;#WARNING&quot;&gt;warning&lt;/a&gt;&lt;/code&gt; 문구 도 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="4c8a84d76ea1ffffd138bbe446621a407d402f57" translate="yes" xml:space="preserve">
          <source>See also the opposite operation &lt;code&gt;&lt;a href=&quot;#compose_query-1&quot;&gt;compose_query/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">반대편 &lt;code&gt;&lt;a href=&quot;#compose_query-1&quot;&gt;compose_query/1&lt;/a&gt;&lt;/code&gt; 작업도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a83cfb328bd5aa635122aeee19f925fe65ac7ce" translate="yes" xml:space="preserve">
          <source>See also the opposite operation &lt;code&gt;&lt;a href=&quot;#dissect_query-1&quot;&gt;dissect_query/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">반대의 조작 &lt;code&gt;&lt;a href=&quot;#dissect_query-1&quot;&gt;dissect_query/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88905d5ac78e9614d2dcedf1b104c8866e253aec" translate="yes" xml:space="preserve">
          <source>See also the opposite operation &lt;code&gt;&lt;a href=&quot;#parse-1&quot;&gt;parse/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">반대 연산 &lt;code&gt;&lt;a href=&quot;#parse-1&quot;&gt;parse/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="31f23741d7f5d5bed0fc4a9f4f4eecddf6ecc384" translate="yes" xml:space="preserve">
          <source>See also the opposite operation &lt;code&gt;&lt;a href=&quot;#recompose-1&quot;&gt;recompose/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">반대 조작 &lt;code&gt;&lt;a href=&quot;#recompose-1&quot;&gt;recompose/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fe432bedd486dca0a50bb891f777125457181a9" translate="yes" xml:space="preserve">
          <source>See also the option &lt;code&gt;&lt;a href=&quot;#type-key_cb_common_option&quot;&gt;key_cb&lt;/a&gt;&lt;/code&gt; for the general way to handle keys.</source>
          <target state="translated">키를 처리하는 일반적인 방법은 &lt;code&gt;&lt;a href=&quot;#type-key_cb_common_option&quot;&gt;key_cb&lt;/a&gt;&lt;/code&gt; 옵션도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="af0e07539fd2dcd2e79ab7aba80e5563d1be0322" translate="yes" xml:space="preserve">
          <source>See also the option &lt;code&gt;&lt;a href=&quot;#type-user_dir_common_option&quot;&gt;user_dir&lt;/a&gt;&lt;/code&gt; for specifying the path to the user's keys.</source>
          <target state="translated">사용자 키의 경로를 지정하려면 &lt;code&gt;&lt;a href=&quot;#type-user_dir_common_option&quot;&gt;user_dir&lt;/a&gt;&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd1061651c6e426f0a6247977cce8196745e0006" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;erlang:match_spec_test/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erlang:match_spec_test/3&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d58c9b9c853c290bccf0dad5f628c40565aad77" translate="yes" xml:space="preserve">
          <source>See below.</source>
          <target state="translated">아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fcce261d7bc27172c52a79d71bad8da7b46301a8" translate="yes" xml:space="preserve">
          <source>See function &lt;code&gt;&lt;a href=&quot;#register_agent&quot;&gt;register_agent&lt;/a&gt;&lt;/code&gt; for more info about what kind of items are allowed.</source>
          <target state="translated">어떤 종류의 항목이 허용되는지에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;#register_agent&quot;&gt;register_agent&lt;/a&gt;&lt;/code&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe306e31c85031865343821b0ca0e2894d14bc9a" translate="yes" xml:space="preserve">
          <source>See inet:getstat/2 for statistic options description.</source>
          <target state="translated">통계 옵션 설명은 inet : getstat / 2를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3dab3a106bee1ee8f1c8c19114034b0b82688ae4" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;#One%20Event%20Handler&quot;&gt;One Event Handler&lt;/a&gt;&lt;/code&gt; for an example.</source>
          <target state="translated">예제는 &lt;code&gt;&lt;a href=&quot;#One%20Event%20Handler&quot;&gt;One Event Handler&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7783abcee84912005b41c7edf4413de50bf5acd0" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt; for a list of possible state transition actions.</source>
          <target state="translated">섹션을 참조하십시오 &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt; 가능한 상태 전이 조치의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="21e47dbf6127e78e9c3658a5a96fb13b23cfb164" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;#config_examples&quot;&gt;Configuration Examples&lt;/a&gt;&lt;/code&gt; for examples using the &lt;code&gt;logger&lt;/code&gt; parameter for system configuration.</source>
          <target state="translated">시스템 구성에 &lt;code&gt;logger&lt;/code&gt; 매개 변수를 사용하는 &lt;code&gt;&lt;a href=&quot;#config_examples&quot;&gt;Configuration Examples&lt;/a&gt;&lt;/code&gt; 는 구성 예 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ebea96bb828f7fd06b5de8fd46984fd18d93062" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; for more detailed information.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5b5a7dc1d11a56b4fac4308eaab96b6123612af" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; for more information about how this option is used.</source>
          <target state="translated">이 옵션을 사용하는 방법에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="553dc45062fa78d10fe2289ceb23f65d4e32e626" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; for more information about the filters and the &lt;code&gt;filter_default&lt;/code&gt; configuration parameter.</source>
          <target state="translated">필터 및 &lt;code&gt;filter_default&lt;/code&gt; 구성 매개 변수 에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a25bc14d05d3ecdb3cd18d0c9fc61b1ebf3e6423" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;#formatters&quot;&gt;Formatters&lt;/a&gt;&lt;/code&gt; for more detailed information.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#formatters&quot;&gt;Formatters&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3fbf4c4a2e53820b2602b60efc1a4c8d5ae3523f" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;#log_level&quot;&gt;Log Level&lt;/a&gt;&lt;/code&gt; for a listing and description of possible log levels.</source>
          <target state="translated">가능한 로그 레벨의 목록과 설명은 &lt;code&gt;&lt;a href=&quot;#log_level&quot;&gt;Log Level&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88bb80bd24aa2af118392da1a7ba98dd60c5b4ad" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;#log_message&quot;&gt;Log Message&lt;/a&gt;&lt;/code&gt; for more information about report callbacks and valid forms of log messages.</source>
          <target state="translated">보고서 콜백 및 유효한 형식의 로그 메시지에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#log_message&quot;&gt;Log Message&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a8d2551d11669db33fc21f775008106f7bf25d2" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;&lt;a href=&quot;logger_chapter#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; in the User's Guide for more information about filters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;logger_chapter#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; 에 대한 자세한 내용은 사용 설명서의 필터 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="04340cc3481509d56ecf9490637543f2ff95262e" translate="yes" xml:space="preserve">
          <source>See section &lt;code&gt;SASL User's Guide&lt;/code&gt; for more information about the old SASL error logging functionality.</source>
          <target state="translated">이전 SASL 오류 로깅 기능에 대한 자세한 내용은 &lt;code&gt;SASL User's Guide&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a6ee7a70d8a6d0f5492b509829c73b0b842117d" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;configure_algos#example_default_algorithms&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; for an example.</source>
          <target state="translated">예제는 사용 &lt;code&gt;&lt;a href=&quot;configure_algos#example_default_algorithms&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="10dd22aa58cf4cb5db9ff29c812eefa3868d8829" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;fprof&quot;&gt;fprof(3)&lt;/a&gt;&lt;/code&gt; manual page for more options and arguments to the functions &lt;code&gt;&lt;a href=&quot;fprof#trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;fprof#profile&quot;&gt;profile&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;fprof#analyse&quot;&gt;analyse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">함수 &lt;code&gt;&lt;a href=&quot;fprof#trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;fprof#profile&quot;&gt;profile&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;fprof#analyse&quot;&gt;analyse&lt;/a&gt;&lt;/code&gt; 대한 추가 옵션 및 인수 는 &lt;code&gt;&lt;a href=&quot;fprof&quot;&gt;fprof(3)&lt;/a&gt;&lt;/code&gt; 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a9ffca807f6af0c9a8b39c2b472720ddaf76897" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;lcnt&quot;&gt;reference manual&lt;/a&gt;&lt;/code&gt; for a description of each function.</source>
          <target state="translated">각 기능에 대한 설명은 &lt;code&gt;&lt;a href=&quot;lcnt&quot;&gt;reference manual&lt;/a&gt;&lt;/code&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd4eef621038f18e9cfb222b80b003a9d0a3c7bd" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;logger_formatter#type-config&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; manual page for information about the default configuration for this formatter.</source>
          <target state="translated">이 포맷터의 기본 구성에 대한 정보 는 &lt;code&gt;&lt;a href=&quot;logger_formatter#type-config&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="29be70dc149bc339073fc125d26a126098ccc57f" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;snmpa_conf#types&quot;&gt;data types insnmpa_conf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;snmpa_conf#types&quot;&gt;data types insnmpa_conf&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="295d332cd12714474fc1a3e45242035602683996" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;ssh#type-preferred_algorithms_common_option&quot;&gt;Reference Manual&lt;/a&gt;&lt;/code&gt; for details</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;ssh#type-preferred_algorithms_common_option&quot;&gt;Reference Manual&lt;/a&gt;&lt;/code&gt; 를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="978b18527ac24516985e7821f63bb0e3322cc797" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;os_mon(3)&lt;/code&gt; application, the &lt;code&gt;application(3)&lt;/code&gt; manual page in Kernel, and the &lt;code&gt;erl(1)&lt;/code&gt; manual page in ERTS.</source>
          <target state="translated">참고 항목 &lt;code&gt;os_mon(3)&lt;/code&gt; 응용 프로그램의 &lt;code&gt;application(3)&lt;/code&gt; 커널의 매뉴얼 페이지 및 &lt;code&gt;erl(1)&lt;/code&gt; ERTS의 매뉴얼 페이지를.</target>
        </trans-unit>
        <trans-unit id="b8cf1a71ea7ea0a8784e87c953d8a007af43b35c" translate="yes" xml:space="preserve">
          <source>See the Reference Manual for module &lt;code&gt;dbg&lt;/code&gt; for the possible trace flags. Parameter &lt;code&gt;MatchDesc&lt;/code&gt; is the same as returned from &lt;code&gt;dbg:p/2&lt;/code&gt;.</source>
          <target state="translated">가능한 추적 플래그는 모듈 &lt;code&gt;dbg&lt;/code&gt; 에 대한 참조 매뉴얼을 참조하십시오 . 매개 변수 &lt;code&gt;MatchDesc&lt;/code&gt; 는 &lt;code&gt;dbg:p/2&lt;/code&gt; 에서 리턴 된 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f381b153c614ba039e7d9f9996b28f5caf4d46d8" translate="yes" xml:space="preserve">
          <source>See the content of the history buffer:</source>
          <target state="translated">히스토리 버퍼의 내용을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3e68f3c408b5e2576dfa61abba4f01cfef0f4ec6" translate="yes" xml:space="preserve">
          <source>See the description of &lt;code&gt;HttpPacket&lt;/code&gt; in &lt;code&gt;erlang:decode_packet/3&lt;/code&gt; in ERTS.</source>
          <target state="translated">ERTS의 &lt;code&gt;erlang:decode_packet/3&lt;/code&gt; 에 있는 &lt;code&gt;HttpPacket&lt;/code&gt; 에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0de64f44e5eb16b9fa0ccbefa913533787163490" translate="yes" xml:space="preserve">
          <source>See the description of allocation strategies in section &lt;code&gt;&lt;a href=&quot;#strategy&quot;&gt;The alloc_util Framework&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#strategy&quot;&gt;The alloc_util Framework&lt;/a&gt;&lt;/code&gt; 섹션에서 할당 전략에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="da52f5cee3a3268acc0bf5ac021d72d9a67bdd28" translate="yes" xml:space="preserve">
          <source>See the description of the &lt;code&gt;&lt;a href=&quot;logger#type-metadata&quot;&gt;logger:metadata()&lt;/a&gt;&lt;/code&gt; type for information about which default keys Logger inserts, and how the different metadata maps are merged.</source>
          <target state="translated">Logger가 삽입하는 기본 키 및 다른 메타 데이터 맵이 병합되는 방법에 대한 정보 는 &lt;code&gt;&lt;a href=&quot;logger#type-metadata&quot;&gt;logger:metadata()&lt;/a&gt;&lt;/code&gt; 유형에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc1e71c6d226c86be28c4c915a17ae24e161e775" translate="yes" xml:space="preserve">
          <source>See the function &lt;code&gt;&lt;a href=&quot;#file-2&quot;&gt;file/2&lt;/a&gt;&lt;/code&gt; for further options.</source>
          <target state="translated">추가 옵션 은 기능 &lt;code&gt;&lt;a href=&quot;#file-2&quot;&gt;file/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb5aaa80212500dcf28b4f273cc3523c914f0a87" translate="yes" xml:space="preserve">
          <source>See the function &lt;code&gt;module/2&lt;/code&gt; for further options.</source>
          <target state="translated">추가 옵션 은 기능 &lt;code&gt;module/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f45392fa42264b6f51e1d4ae50054479cfed64c8" translate="yes" xml:space="preserve">
          <source>See the introduction of this manual page.</source>
          <target state="translated">이 매뉴얼 페이지의 소개를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8eaa76e9a4ac145661e23533befed447c2542ec4" translate="yes" xml:space="preserve">
          <source>See the megaco_user module for more info about the callback arguments.</source>
          <target state="translated">콜백 인수에 대한 자세한 정보는 megaco_user 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7b3c218f13f56f9f93b48cd197b73eb05a8c5bc6" translate="yes" xml:space="preserve">
          <source>See the net-if incomming messages for sending a &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu&quot;&gt;trap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu_req&quot;&gt;notification&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">자세한 정보 는 &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu&quot;&gt;trap&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu_req&quot;&gt;notification&lt;/a&gt;&lt;/code&gt; 전송에 대한 net-if 수신 메시지 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="12ca7b6eff6a01290af56816cdbff01b608193ad" translate="yes" xml:space="preserve">
          <source>See the option &lt;code&gt;&lt;a href=&quot;#type-exec_daemon_option&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; for a description of how the daemon execute exec-requests depending on the shell- and exec-options.</source>
          <target state="translated">쉘 및 exec 옵션에 따라 데몬이 exec 요청을 실행하는 방법에 대한 설명은 &lt;code&gt;&lt;a href=&quot;#type-exec_daemon_option&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d6b6b5b55d37457e6305fb958e35b48f91cd3a1" translate="yes" xml:space="preserve">
          <source>See the parameter &lt;code&gt;Timeout&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;#connect-4&quot;&gt;connect/4&lt;/a&gt;&lt;/code&gt; for a timeout of the negotiation phase.</source>
          <target state="translated">협상 단계의 시간 &lt;code&gt;Timeout&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;#connect-4&quot;&gt;connect/4&lt;/a&gt;&lt;/code&gt; 의 시간 초과 매개 변수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2ca0ed5a0cbdaa3402ed04df7befd52ba9ab336" translate="yes" xml:space="preserve">
          <source>See the previous description of &lt;code&gt;burst_limit_max_count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;burst_limit_max_count&lt;/code&gt; 의 이전 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e13687b5ef06b19e9360d9b4a6ed2ec8707b27f1" translate="yes" xml:space="preserve">
          <source>See the section &lt;code&gt;&lt;a href=&quot;#Event%20Handler&quot;&gt;Event Handler&lt;/a&gt;&lt;/code&gt; that describes the event handling callback function(s).</source>
          <target state="translated">이벤트 처리 콜백 함수를 설명하는 &lt;code&gt;&lt;a href=&quot;#Event%20Handler&quot;&gt;Event Handler&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="59f0025a3481882208c71e37e378e373db3eac35" translate="yes" xml:space="preserve">
          <source>Seed :: {integer(), integer(), integer()}) -&amp;gt;</source>
          <target state="translated">Seed :: {정수 (), 정수 (), 정수 ()})-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ac9bb31b2fa4fe38eaabbb6bcc665864f3d46b90" translate="yes" xml:space="preserve">
          <source>Seed Random Number Generation with a Unique Value</source>
          <target state="translated">고유 한 값으로 시드 난수 생성</target>
        </trans-unit>
        <trans-unit id="538d5a0bd316133eb6440c420f9bf2e490bf0472" translate="yes" xml:space="preserve">
          <source>Seed random number generation using &lt;code&gt;erlang:now()&lt;/code&gt;.</source>
          <target state="translated">사용하여 난수 생성 종자 &lt;code&gt;erlang:now()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e99f3ab39bbcea74062af882f8d4f07352ef881f" translate="yes" xml:space="preserve">
          <source>Seed random number generation using a combination of &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;erlang:monotonic_time()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;erlang:time_offset()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-0&quot;&gt;erlang:unique_integer()&lt;/a&gt;&lt;/code&gt;, and other functionality.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;erlang:monotonic_time()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;erlang:time_offset()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-0&quot;&gt;erlang:unique_integer()&lt;/a&gt;&lt;/code&gt; 및 기타 기능 의 조합을 사용하여 시드 난수 생성</target>
        </trans-unit>
        <trans-unit id="9f188d0deda07d37901eb805e1129ff7140f45be" translate="yes" xml:space="preserve">
          <source>Seeds random number generation with default (fixed) values in the process dictionary and returns the old state.</source>
          <target state="translated">프로세스 사전에서 기본값 (고정) 값으로 난수 생성을 시드하고 이전 상태를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c7a5e9447d5786f277eb89a82cc836578e550d61" translate="yes" xml:space="preserve">
          <source>Seeds random number generation with integer values in the process dictionary and returns the old state.</source>
          <target state="translated">프로세스 사전에서 정수 값으로 난수 생성을 시드하고 이전 상태를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="60c16263b6d5be2b9397fc75cef76a1d40b9c972" translate="yes" xml:space="preserve">
          <source>Seeds random number generation with the specifed algorithm and time-dependent data if &lt;code&gt;AlgOrStateOrExpState&lt;/code&gt; is an algorithm.</source>
          <target state="translated">&lt;code&gt;AlgOrStateOrExpState&lt;/code&gt; 가 알고리즘 인 경우 지정된 알고리즘 및 시간 종속 데이터를 사용하여 난수 생성을 시드 합니다.</target>
        </trans-unit>
        <trans-unit id="727e9e4973eab6c2d6d2c3c386ff399482cb3540" translate="yes" xml:space="preserve">
          <source>Seeds random number generation with the specified algorithm and integers and returns the state.</source>
          <target state="translated">지정된 알고리즘과 정수로 난수 생성을 시드하고 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="67e87a2a6c174c1d141a428e208bf0b0678c88e4" translate="yes" xml:space="preserve">
          <source>Seeds random number generation with the specified algorithm and integers in the process dictionary and returns the state.</source>
          <target state="translated">프로세스 사전에서 지정된 알고리즘 및 정수로 난수 생성을 시드하고 상태를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a5fc82cf3df682440f8954c9d5095d6661ee4d0b" translate="yes" xml:space="preserve">
          <source>Select one or more applications and click on a button directly below the application column to change application category. For example, select an available application and click on its tick button to move the application to the included category. Clicking on the tick symbol for included applications will move the application back to the available category. The tick is undone.</source>
          <target state="translated">하나 이상의 응용 프로그램을 선택하고 응용 프로그램 열 바로 아래에있는 단추를 클릭하여 응용 프로그램 범주를 변경하십시오. 예를 들어, 사용 가능한 응용 프로그램을 선택하고 해당 틱 버튼을 클릭하면 응용 프로그램이 포함 된 범주로 이동합니다. 포함 된 애플리케이션의 틱 기호를 클릭하면 애플리케이션이 사용 가능한 카테고리로 다시 이동합니다. 진드기는 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="d3a5e5bcea76b5ec27311bd3a82a886730279af5" translate="yes" xml:space="preserve">
          <source>Select one or more modules and click on a button directly below the module column to change module category. For example, select an available module and click on its tick button to move the module to the included category. Clicking on the tick symbol for included modules will move the module back to the available category. The tick is undone.</source>
          <target state="translated">하나 이상의 모듈을 선택하고 모듈 열 바로 아래에있는 버튼을 클릭하여 모듈 범주를 변경하십시오. 예를 들어, 사용 가능한 모듈을 선택하고 틱 버튼을 클릭하면 모듈이 포함 된 범주로 이동합니다. 포함 된 모듈의 눈금 기호를 클릭하면 모듈이 사용 가능한 카테고리로 다시 이동합니다. 진드기는 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="b80b137d7a4d24813d97c1f8c197901313d0ce92" translate="yes" xml:space="preserve">
          <source>Select the &lt;code&gt;all&lt;/code&gt; entry in the &lt;code&gt;Filters&lt;/code&gt; menu and a new &lt;code&gt;Contents Viewer window&lt;/code&gt; will pop up showing the same trace &lt;code&gt;Event&lt;/code&gt; in the collectors view:</source>
          <target state="translated">&lt;code&gt;Filters&lt;/code&gt; 메뉴 에서 &lt;code&gt;all&lt;/code&gt; 항목을 선택하면 콜렉터보기에 동일한 추적 &lt;code&gt;Event&lt;/code&gt; 를 표시 하는 새 &lt;code&gt;Contents Viewer window&lt;/code&gt; 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="98b5d51720f0e72a183e7c5768ec943ab8f54fff" translate="yes" xml:space="preserve">
          <source>Select the CRLs in the cache that are issued by &lt;code&gt;Issuer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Issuer&lt;/code&gt; 가 발행 한 캐시에서 CRL을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="b5e72c0c26a31535e5223da62ac5114c03f2134e" translate="yes" xml:space="preserve">
          <source>Select the node to observe with menu &lt;strong&gt;Nodes&lt;/strong&gt;. Menu &lt;strong&gt;View &amp;gt; Refresh interval&lt;/strong&gt; controls how often the view is to be updated. The refresh interval is set per viewer so you can have different settings for each viewer. To minimize the system impact, only the active viewer is updated. Other views are updated when activated.</source>
          <target state="translated">메뉴 &lt;strong&gt;Nodes&lt;/strong&gt; 로 관찰 할 노드를 선택하십시오 . 메뉴 &lt;strong&gt;보기&amp;gt; 새로 고침 간격&lt;/strong&gt; 은보기를 업데이트 할 빈도를 제어합니다. 새로 고침 간격은 뷰어마다 설정되므로 각 뷰어마다 다른 설정을 지정할 수 있습니다. 시스템 영향을 최소화하기 위해 활성 뷰어 만 업데이트됩니다. 다른 뷰는 활성화되면 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="7a89e3798c1bc2a15df15ececf79cd86abc226a2" translate="yes" xml:space="preserve">
          <source>Select version of the application in the &lt;code&gt;Source selection policy&lt;/code&gt; part of the page. By default the latest version of the application is selected, but it is possible to override this by explicitly selecting another version.</source>
          <target state="translated">페이지 의 &lt;code&gt;Source selection policy&lt;/code&gt; 부분 에서 애플리케이션 버전을 선택 하십시오. 기본적으로 최신 버전의 응용 프로그램이 선택되지만 다른 버전을 명시 적으로 선택하여이를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6bd2914a8026e2769942dbd74e9d6725e0d0e56" translate="yes" xml:space="preserve">
          <source>Select, using a parameterized query.</source>
          <target state="translated">매개 변수화 된 쿼리를 사용하여 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="059292b1d852729456b447a3357efddb463ed411" translate="yes" xml:space="preserve">
          <source>Select/match operations on Ets and Mnesia tables can become very expensive operations. They usually need to scan the complete table. Try to structure the data to minimize the need for select/match operations. However, if you require a select/match operation, it is still more efficient than using &lt;code&gt;tab2list&lt;/code&gt;. Examples of this and of how to avoid select/match are provided in the following sections. The functions &lt;code&gt;ets:select/2&lt;/code&gt; and &lt;code&gt;mnesia:select/3&lt;/code&gt; are to be preferred over &lt;code&gt;ets:match/2&lt;/code&gt;, &lt;code&gt;ets:match_object/2&lt;/code&gt;, and &lt;code&gt;mnesia:match_object/3&lt;/code&gt;.</source>
          <target state="translated">Ets 및 Mnesia 테이블에 대한 선택 / 일치 작업은 비용이 많이 드는 작업이 될 수 있습니다. 일반적으로 전체 테이블을 스캔해야합니다. 선택 / 일치 작업의 필요성을 최소화하기 위해 데이터를 구성하십시오. 그러나 선택 / 일치 작업이 필요한 경우 &lt;code&gt;tab2list&lt;/code&gt; 를 사용하는 것보다 여전히 효율적 입니다. 이에 대한 예와 선택 / 일치를 피하는 방법은 다음 섹션에 제공됩니다. &lt;code&gt;ets:select/2&lt;/code&gt; 및 &lt;code&gt;mnesia:select/3&lt;/code&gt; 함수 는 &lt;code&gt;ets:match/2&lt;/code&gt; , &lt;code&gt;ets:match_object/2&lt;/code&gt; 및 &lt;code&gt;mnesia:match_object/3&lt;/code&gt; 보다 선호 됩니다.</target>
        </trans-unit>
        <trans-unit id="579765483428ab9010540369d38f367961ca955a" translate="yes" xml:space="preserve">
          <source>Selection between &lt;code&gt;+fnl&lt;/code&gt; and &lt;code&gt;+fnu&lt;/code&gt; is done based on the current locale settings in the OS. This means that if you have set your terminal for UTF-8 encoding, the filesystem is expected to use the same encoding for filenames. This is default on all operating systems, except MacOS X and Windows.</source>
          <target state="translated">&lt;code&gt;+fnl&lt;/code&gt; 과 &lt;code&gt;+fnu&lt;/code&gt; 사이의 선택 은 OS의 현재 로케일 설정에 따라 수행됩니다. 이것은 터미널을 UTF-8 인코딩으로 설정 한 경우 파일 시스템은 파일 이름에 대해 동일한 인코딩을 사용해야합니다. 이것은 MacOS X 및 Windows를 제외한 모든 운영 체제에서 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="558a008c676c7892c076d807449c96e41891f15b" translate="yes" xml:space="preserve">
          <source>Selection strategy, determines at which row in the result set to start the selection.</source>
          <target state="translated">선택 전략은 결과 집합에서 선택을 시작할 행을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="1aa7156531614e0e7d5c28a1ab64e7a809651a7b" translate="yes" xml:space="preserve">
          <source>Selects &lt;code&gt;N&lt;/code&gt; consecutive rows of the result set. If &lt;code&gt;Position&lt;/code&gt; is &lt;code&gt;next&lt;/code&gt; it is semantically equivalent of calling &lt;code&gt;next/[1,2]&lt;/code&gt;&lt;code&gt;N&lt;/code&gt; times. If &lt;code&gt;Position&lt;/code&gt; is &lt;code&gt;{relative, Pos}&lt;/code&gt;, &lt;code&gt;Pos&lt;/code&gt; will be used as an offset from the current cursor position to determine the first selected row. If &lt;code&gt;Position&lt;/code&gt; is &lt;code&gt;{absolute, Pos}&lt;/code&gt;, &lt;code&gt;Pos&lt;/code&gt; will be the number of the first row selected. After this function has returned the cursor is positioned at the last selected row. If there is less then &lt;code&gt;N&lt;/code&gt; rows left of the result set the length of &lt;code&gt;Rows&lt;/code&gt; will be less than &lt;code&gt;N&lt;/code&gt;. If the first row to select happens to be beyond the last row of the result set, the returned value will be &lt;code&gt;{selected, ColNames,[]}&lt;/code&gt; e.i. the list of row values is empty indicating that there is no more data to fetch.</source>
          <target state="translated">결과 집합에서 &lt;code&gt;N&lt;/code&gt; 개의 연속 행을 선택합니다 . 경우 &lt;code&gt;Position&lt;/code&gt; 인 &lt;code&gt;next&lt;/code&gt; 이 호출의 의미 상당 &lt;code&gt;next/[1,2]&lt;/code&gt; &lt;code&gt;N&lt;/code&gt; 의 시간. 경우 &lt;code&gt;Position&lt;/code&gt; 있다 &lt;code&gt;{relative, Pos}&lt;/code&gt; , &lt;code&gt;Pos&lt;/code&gt; 첫 번째 선택 행을 결정하기 위해 현재 커서 위치로부터 오프셋 (offset)으로 사용된다. 경우 &lt;code&gt;Position&lt;/code&gt; 있다 &lt;code&gt;{absolute, Pos}&lt;/code&gt; , &lt;code&gt;Pos&lt;/code&gt; 선택된 첫 번째 행의 수있을 것이다. 이 기능이 반환 된 후 커서는 마지막으로 선택된 행에 위치합니다. 미만이 있다면 &lt;code&gt;N&lt;/code&gt; 결과의 좌측 열은 길이 설정 &lt;code&gt;Rows&lt;/code&gt; 이하의 것 &lt;code&gt;N&lt;/code&gt; . 선택할 첫 번째 행이 결과 세트의 마지막 행을 넘어 서면 리턴 된 값은 &lt;code&gt;{selected, ColNames,[]}&lt;/code&gt; ei 행 값 목록이 비어있어 더 이상 가져올 데이터가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="df584cc3fdcf16747de5796c77811e8b84e9c70c" translate="yes" xml:space="preserve">
          <source>Selects a &quot;best&quot; layout for a document, creating a corresponding fixed-layout document. If no layout could be produced, the atom &lt;code&gt;empty&lt;/code&gt; is returned instead. For details about &lt;code&gt;PaperWidth&lt;/code&gt; and &lt;code&gt;LineWidth&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;#format-3&quot;&gt;format/3&lt;/a&gt;&lt;/code&gt;. The function is idempotent.</source>
          <target state="translated">문서에 대한 &quot;최상의&quot;레이아웃을 선택하여 해당 고정 레이아웃 문서를 만듭니다. 레이아웃을 생성 할 수없는 경우, &lt;code&gt;empty&lt;/code&gt; 있는 원자가 대신 반환됩니다. &lt;code&gt;PaperWidth&lt;/code&gt; 및 &lt;code&gt;LineWidth&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;#format-3&quot;&gt;format/3&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 . 이 기능은 dem 등원입니다.</target>
        </trans-unit>
        <trans-unit id="ab32879549d1cb90cc8c8b83a15ac04943518ba0" translate="yes" xml:space="preserve">
          <source>Selects a group for Diffie-Hellman key exchange with the key size in the range &lt;code&gt;MinSize...MaxSize&lt;/code&gt; and as close to &lt;code&gt;SuggestedSize&lt;/code&gt; as possible. If &lt;code&gt;Groups == undefined&lt;/code&gt; a default set will be used, otherwise the group is selected from &lt;code&gt;Groups&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MinSize...MaxSize&lt;/code&gt; 범위의 키 크기 와 가능한 한 &lt;code&gt;SuggestedSize&lt;/code&gt; 에 근접한 Diffie-Hellman 키 교환을위한 그룹을 선택합니다 . 경우 &lt;code&gt;Groups == undefined&lt;/code&gt; 기본 설정이 사용됩니다 그렇지 않으면 그룹에서 선택되는 &lt;code&gt;Groups&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d89b92211fe09f1451b98d2f4fd1c4a60a54e7f4" translate="yes" xml:space="preserve">
          <source>Selects an instrumented Erlang runtime system (virtual machine) to run, instead of the ordinary one. When running an instrumented runtime system, some resource usage data can be obtained and analyzed using the &lt;code&gt;instrument&lt;/code&gt; module. Functionally, it behaves exactly like an ordinary Erlang runtime system.</source>
          <target state="translated">실행되는 계측 된 Erlang 런타임 시스템 (가상 머신)을 선택합니다. 인스트루먼트 된 런타임 시스템을 실행할 때 &lt;code&gt;instrument&lt;/code&gt; 모듈을 사용하여 일부 자원 사용량 데이터를 확보하고 분석 할 수 있습니다 . 기능적으로 일반 Erlang 런타임 시스템과 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a1770bf1cfb25144ae0276db86b0ec3b2b2116ea" translate="yes" xml:space="preserve">
          <source>Selects more objects with the match specification initiated by &lt;code&gt;mnesia:select/4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mnesia:select/4&lt;/code&gt; 에 의해 시작된 일치 스펙을 가진 더 많은 오브젝트를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="14760fc7adbbb37d2aa4d8822f03cad7c301219b" translate="yes" xml:space="preserve">
          <source>Selects sessions that can be reused. Is to be callable from any process.</source>
          <target state="translated">재사용 할 수있는 세션을 선택합니다. 모든 프로세스에서 호출 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="d9b3dea1de5a901ed0b28ba9794f788f875a2667" translate="yes" xml:space="preserve">
          <source>Self-generated events</source>
          <target state="translated">자체 생성 이벤트</target>
        </trans-unit>
        <trans-unit id="9e59ac201ac596f5fd105bddf7f1f7112694135c" translate="yes" xml:space="preserve">
          <source>Semantics of the other fields:</source>
          <target state="translated">다른 분야의 의미 :</target>
        </trans-unit>
        <trans-unit id="6480fbfe2d8731d079adbf1ab8aa0ca70499b3da" translate="yes" xml:space="preserve">
          <source>Semicolons (&lt;code&gt;;&lt;/code&gt;) in guards are allowed, the result is (as expected) one &quot;match specification clause&quot; for each semicolon-separated part of the guard. The semantics is identical to the Erlang semantics.</source>
          <target state="translated">가드의 세미콜론 ( &lt;code&gt;;&lt;/code&gt; )이 허용되며, 결과는 예상대로 각 세미콜론으로 구분 된 가드의 각 부분에 대해 하나의 &quot;일치 스펙 절&quot;입니다. 시맨틱은 Erlang 시맨틱과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="28bd18ab7d09060c7544943589c96077d2473927" translate="yes" xml:space="preserve">
          <source>Send Disconnect-Peer-Request to the peer, the transport process being terminated following reception of Disconnect-Peer-Answer or timeout. An &lt;code&gt;option()&lt;/code&gt; can be one of the following.</source>
          <target state="translated">연결 끊기-피어-요청을 피어에게 보내십시오. 연결 끊기-피어-응답 수신 또는 시간 초과 후 전송 프로세스가 종료됩니다. &lt;code&gt;option()&lt;/code&gt; 다음 중 하나가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bf200c331b74aa74528d0f7aa312aaa209dd491" translate="yes" xml:space="preserve">
          <source>Send a Diameter request message.</source>
          <target state="translated">직경 요청 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="12e5e22385bafed2d9f6203bfea9b68a931408d9" translate="yes" xml:space="preserve">
          <source>Send a megaco message.</source>
          <target state="translated">megaco 메시지를 보내십시오.</target>
        </trans-unit>
        <trans-unit id="50bd2a3f286cf545693d3a0d375c3ec01ea7ba62" translate="yes" xml:space="preserve">
          <source>Send buffer size.</source>
          <target state="translated">송신 버퍼 크기.</target>
        </trans-unit>
        <trans-unit id="f25208f90864e8eab64ee0d533b62e9bda8bd57f" translate="yes" xml:space="preserve">
          <source>Send callback module which exports send_message/2. The function SendMod:send_message(SendHandle, Binary) is invoked when the bytes needs to be transmitted to the remote user.</source>
          <target state="translated">send_message / 2를 내보내는 콜백 모듈을 보냅니다. SendMod : send_message (SendHandle, Binary) 함수는 바이트를 원격 사용자에게 전송해야 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c26ff56bd9b5542aa9dc9425ed692bc7b00e6a4d" translate="yes" xml:space="preserve">
          <source>Send one or more events to a process that is evaluating a digit map, that is a process that is executing megaco:eval_digit_map/1,2.</source>
          <target state="translated">숫자 맵을 평가하는 프로세스, 즉 megaco : eval_digit_map / 1,2를 실행하는 프로세스에 하나 이상의 이벤트를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d1dee3a5510ace9fd1996c6bbce80385cdf16832" translate="yes" xml:space="preserve">
          <source>Send one or more events to the event collector process.</source>
          <target state="translated">하나 이상의 이벤트를 이벤트 콜렉터 프로세스로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="82699a12a2caaa2896290af96fb52b088fe794d5" translate="yes" xml:space="preserve">
          <source>Send special cipher suite TLS_FALLBACK_SCSV to avoid undesired TLS version downgrade. Defaults to false</source>
          <target state="translated">원하지 않는 TLS 버전 다운 그레이드를 피하려면 특수 암호 스위트 TLS_FALLBACK_SCSV를 보내십시오. 기본값은 false</target>
        </trans-unit>
        <trans-unit id="434df1566b8972b13752c1700967be36ffee94e2" translate="yes" xml:space="preserve">
          <source>Send the atom &quot;ok&quot; to the process &quot;worker&quot;:</source>
          <target state="translated">원자 &quot;ok&quot;를 프로세스 &quot;worker&quot;로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="960017ba6e56db4cf22e279b7053ddb91ddad87e" translate="yes" xml:space="preserve">
          <source>Send the notification &lt;code&gt;Notification&lt;/code&gt; to the management targets defined for notify-name (&lt;code&gt;name&lt;/code&gt;) in the &lt;code&gt;snmpNotifyTable&lt;/code&gt; in SNMP-NOTIFICATION-MIB from the specified &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;context&lt;/code&gt; 에서 SNMP-NOTIFICATION-MIB 의 &lt;code&gt;snmpNotifyTable&lt;/code&gt; 에 있는 notify-name ( &lt;code&gt;name&lt;/code&gt; )에 대해 정의 된 관리 대상으로 알림 &lt;code&gt;Notification&lt;/code&gt; 을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="1ab35eeaed32af5599d0ecffa6e8abd3d3b86ef0" translate="yes" xml:space="preserve">
          <source>SendMod:send_message(SendHandle, ErlangBinary)</source>
          <target state="translated">SendMod : send_message (SendHandle, ErlangBinary)</target>
        </trans-unit>
        <trans-unit id="ca3039b60b9d9535737bb6021a271d2e82a3b3f3" translate="yes" xml:space="preserve">
          <source>Senders of data to the socket are suspended if either the socket message queue is busy or the socket itself is busy.</source>
          <target state="translated">소켓 메시지 큐가 사용 중이거나 소켓 자체가 사용 중이면 소켓으로의 데이터 송신자가 일시 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="a174505e947057a985f8fbac5a10aa5e2ab31c9f" translate="yes" xml:space="preserve">
          <source>Senders that are suspended because of a busy message queue or a busy socket are resumed when the socket message queue and the socket are not busy.</source>
          <target state="translated">통화 중 메시지 대기열 또는 통화 중 소켓으로 인해 일시 중단 된 발신자는 소켓 메시지 대기열과 소켓이 통화 중이 아닌 경우 재개됩니다.</target>
        </trans-unit>
        <trans-unit id="d2b6034c08f449b7896ac605cc4b590ebdc2cb75" translate="yes" xml:space="preserve">
          <source>Senders that are suspended because of either a busy message queue or a busy socket are resumed when the socket message queue and the socket are not busy.</source>
          <target state="translated">통화 중 메시지 대기열 또는 통화 중 소켓으로 인해 일시 중단 된 발신자는 소켓 메시지 대기열과 소켓이 통화 중이 아닌 경우 재개됩니다.</target>
        </trans-unit>
        <trans-unit id="b546fab7abadddfb97d14627b3a233e2ab031e2c" translate="yes" xml:space="preserve">
          <source>Sending a Request</source>
          <target state="translated">요청 보내기</target>
        </trans-unit>
        <trans-unit id="c292e2a63f9af9f0309b2c4849a8d45ddaf2d9b9" translate="yes" xml:space="preserve">
          <source>Sending a message to a pid never fails, even if the pid identifies a non-existing process.</source>
          <target state="translated">pid가 존재하지 않는 프로세스를 식별하더라도 pid에 메시지를 보내는 것은 절대 실패하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="29ac6cce0e5098ad64850007168cdad9fb21d8c4" translate="yes" xml:space="preserve">
          <source>Sending a request over a peer connection on a remote node is less efficient than sending it over a local connection. It may be preferable to make use of the &lt;code&gt;&lt;a href=&quot;#service_opt&quot;&gt;service_opt()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;restrict_connections&lt;/code&gt; and maintain a dedicated connection on each node from which requests are sent.</source>
          <target state="translated">원격 노드에서 피어 연결을 통해 요청을 보내는 것은 로컬 연결을 통해 보내는 것보다 덜 효율적입니다. 사용하는 것이 바람직 할 수있다 &lt;code&gt;&lt;a href=&quot;#service_opt&quot;&gt;service_opt()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;restrict_connections&lt;/code&gt; 을 하고 요청을 전송하는 각 노드에 전용 연결을 유지한다.</target>
        </trans-unit>
        <trans-unit id="3bcf8eb70abf6b1e60c4f6aa9fda4e892ab0529a" translate="yes" xml:space="preserve">
          <source>Sending and receiving Erlang messages</source>
          <target state="translated">Erlang 메시지 보내기 및 받기</target>
        </trans-unit>
        <trans-unit id="f1198d0d25231b985491ef306d5c4a89c06c725b" translate="yes" xml:space="preserve">
          <source>Sending node, process/port and message term</source>
          <target state="translated">송신 노드, 프로세스 / 포트 및 메시지 용어</target>
        </trans-unit>
        <trans-unit id="998e351e56b8e33052260f9b3f69633c52f141c8" translate="yes" xml:space="preserve">
          <source>Sending segmented messages:</source>
          <target state="translated">세그먼트 메시지 보내기 :</target>
        </trans-unit>
        <trans-unit id="444a45cb9a6faa18eaf863392c1d10b290f21495" translate="yes" xml:space="preserve">
          <source>Sending the &lt;code&gt;SIGUSR1&lt;/code&gt; signal to an Erlang machine (Unix only) forces a crash dump. This slogan reflects that the Erlang machine crash-dumped because of receiving that signal.</source>
          <target state="translated">&lt;code&gt;SIGUSR1&lt;/code&gt; 신호를 Erlang 시스템으로 보내면 (Unix 만 해당) 크래시 덤프가 발생합니다. 이 슬로건은 해당 신호를 수신하여 Erlang 시스템이 충돌 덤프되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a57cb38242fec142c3fcf43b28be05dff5d819a7" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;Bytes&lt;/code&gt; from the file referenced by &lt;code&gt;RawFile&lt;/code&gt; beginning at &lt;code&gt;Offset&lt;/code&gt; to &lt;code&gt;Socket&lt;/code&gt;. Returns &lt;code&gt;{ok, BytesSent}&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. If &lt;code&gt;Bytes&lt;/code&gt; is set to &lt;code&gt;0&lt;/code&gt; all data after the specified &lt;code&gt;Offset&lt;/code&gt; is sent.</source>
          <target state="translated">&lt;code&gt;Offset&lt;/code&gt; 에서 시작 하여 &lt;code&gt;RawFile&lt;/code&gt; 이 참조하는 파일 에서 &lt;code&gt;Socket&lt;/code&gt; 로 &lt;code&gt;Bytes&lt;/code&gt; 를 보냅니다 . 반환 &lt;code&gt;{ok, BytesSent}&lt;/code&gt; 그렇지 않으면 성공하면, &lt;code&gt;{error, Reason}&lt;/code&gt; . 경우 &lt;code&gt;Bytes&lt;/code&gt; 설정되어 &lt;code&gt;0&lt;/code&gt; 모든 데이터를 지정 후 &lt;code&gt;Offset&lt;/code&gt; 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="41d5bb2c90de6596d2eb55e87cee5af3d5e0d821" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;Data&lt;/code&gt; to the port.</source>
          <target state="translated">포트로 &lt;code&gt;Data&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="fccebd66486b6b87d1f00d078ac674ff79fd9307" translate="yes" xml:space="preserve">
          <source>Sends EOF on channel &lt;code&gt;ChannelId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChannelId&lt;/code&gt; 채널에서 EOF를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="bf1001dd99ff6f64248ef05d77aef7030f181d81" translate="yes" xml:space="preserve">
          <source>Sends a &lt;code&gt;Data&lt;/code&gt; message over an existing association and specified stream.</source>
          <target state="translated">기존 연결 및 지정된 스트림을 통해 &lt;code&gt;Data&lt;/code&gt; 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="7261a65308fb98fab49626b538f6d1bc1c245d1a" translate="yes" xml:space="preserve">
          <source>Sends a NETCONF &lt;code&gt;rpc&lt;/code&gt; request to the server.</source>
          <target state="translated">NETCONF &lt;code&gt;rpc&lt;/code&gt; 요청을 서버로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="38e70e1f59e12808e9579b02e98e9757ab623a9e" translate="yes" xml:space="preserve">
          <source>Sends a Telnet command and returns immediately (uses a format string and a list of arguments to build the command).</source>
          <target state="translated">Telnet 명령을 보내고 즉시 리턴합니다 (형식 문자열과 인수 목록을 사용하여 명령을 빌드 함).</target>
        </trans-unit>
        <trans-unit id="83d8c23cb4376be7992d249305da5cba4d9f3b72" translate="yes" xml:space="preserve">
          <source>Sends a Telnet command and returns immediately.</source>
          <target state="translated">Telnet 명령을 보내고 즉시 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="19082caa1729b273bc9cc0e4eea68b871585d379" translate="yes" xml:space="preserve">
          <source>Sends a Telnet command and waits for prompt (uses a format string and a list of arguments to build the command).</source>
          <target state="translated">Telnet 명령을 전송하고 프롬프트를 기다립니다 (형식 문자열과 인수 목록을 사용하여 명령을 빌드 함).</target>
        </trans-unit>
        <trans-unit id="0a2005ff59f24226083c61ca19f6818691744257" translate="yes" xml:space="preserve">
          <source>Sends a command through Telnet and waits for prompt.</source>
          <target state="translated">Telnet을 통해 명령을 전송하고 프롬프트를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="90d379b9e4a73699023ae63093671e3c84d26338" translate="yes" xml:space="preserve">
          <source>Sends a file over FTP.</source>
          <target state="translated">FTP를 통해 파일을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="32a783de449556f411e3719d4440d455e2aec8f0" translate="yes" xml:space="preserve">
          <source>Sends a message and returns &lt;code&gt;Msg&lt;/code&gt;. This is the same as using the &lt;code&gt;send operator&lt;/code&gt;: &lt;code&gt;Dest ! Msg&lt;/code&gt;.</source>
          <target state="translated">메시지를 보내고 &lt;code&gt;Msg&lt;/code&gt; 를 반환합니다 . 이것은 &lt;code&gt;send operator&lt;/code&gt; 를 사용하는 것과 같습니다. &lt;code&gt;Dest ! Msg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e737bf5ca4a6e58bb46eb491dc4d98e8f4f9bc3" translate="yes" xml:space="preserve">
          <source>Sends a message on a connection.</source>
          <target state="translated">연결시 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d6c18ead8d836f36f7fe9abece9db9344f11d47f" translate="yes" xml:space="preserve">
          <source>Sends a message on a socket. The send handle is obtained by megaco_udp:create_send_handle/3. Increments the NumOutMessages and NumOutOctets counters if message successfully sent. In case of a failure to send, the NumErrors counter is &lt;strong&gt;not&lt;/strong&gt; incremented. This is done elsewhere in the megaco app.</source>
          <target state="translated">소켓에 메시지를 보냅니다. 송신 핸들은 megaco_udp : create_send_handle / 3에 의해 확보됩니다. 메시지가 성공적으로 전송되면 NumOutMessages 및 NumOutOctets 카운터를 증가시킵니다. 전송에 실패하면 NumErrors 카운터가 증가 &lt;strong&gt;하지 않습니다&lt;/strong&gt; . 이것은 megaco 앱의 다른 곳에서 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="9bc2a8776012822c44b929c24970b34d8ba658ec" translate="yes" xml:space="preserve">
          <source>Sends a message to a process.</source>
          <target state="translated">프로세스에 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b8b2a440063172ede5825159b4de4c1873e19be0" translate="yes" xml:space="preserve">
          <source>Sends a message to all registered subscribers.</source>
          <target state="translated">등록 된 모든 가입자에게 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="618bf8fa508e724a66f87142604142c99c463f1b" translate="yes" xml:space="preserve">
          <source>Sends a monitor request of type &lt;code&gt;Type&lt;/code&gt; to the entity identified by &lt;code&gt;Item&lt;/code&gt;. If the monitored entity does not exist or it changes monitored state, the caller of &lt;code&gt;monitor/2&lt;/code&gt; is notified by a message on the following format:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 유형 의 모니터 요청을 &lt;code&gt;Item&lt;/code&gt; 에 의해 식별 된 엔티티로 보냅니다 . 모니터 대상 엔티티가 존재하지 않거나 모니터 대상 상태를 변경하면 &lt;code&gt;monitor/2&lt;/code&gt; 의 호출자 에게 다음 형식의 메시지가 통지됩니다.</target>
        </trans-unit>
        <trans-unit id="85fd25da87ba98fc21b2b3ba79c5f9669f36d785" translate="yes" xml:space="preserve">
          <source>Sends a packet on a socket.</source>
          <target state="translated">소켓에서 패킷을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="2e8f6fd072383efae278f3a3987d40724ec0db85" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified address and port. Argument &lt;code&gt;Address&lt;/code&gt; can be a hostname or a socket address.</source>
          <target state="translated">지정된 주소와 포트로 패킷을 보냅니다. 인수 &lt;code&gt;Address&lt;/code&gt; 는 호스트 이름 또는 소켓 주소 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e073b19b459dfe1139aefa37e319b98ecec9da97" translate="yes" xml:space="preserve">
          <source>Sends a request to execute a predefined subsystem.</source>
          <target state="translated">사전 정의 된 서브 시스템 실행 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="8e61db569d2ea1904d6ce7914d2984f0fa53fd16" translate="yes" xml:space="preserve">
          <source>Sends a request to get the specified event streams.</source>
          <target state="translated">지정된 이벤트 스트림을 가져 오기위한 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="61fd8443642476c67011c6c794b85a9208da6f4e" translate="yes" xml:space="preserve">
          <source>Sends a synchronous notification of type &lt;code&gt;Name&lt;/code&gt; with &lt;code&gt;Data&lt;/code&gt; to the &lt;code&gt;Common Test&lt;/code&gt; event manager. This can later be caught by any installed event manager.</source>
          <target state="translated">유형의 동기 통지를 보냅니다 &lt;code&gt;Name&lt;/code&gt; 과 &lt;code&gt;Data&lt;/code&gt; 받는 &lt;code&gt;Common Test&lt;/code&gt; 이벤트 관리자를. 설치된 이벤트 관리자가 나중에이를 발견 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="642294bb002ba063bc2d41f715130809aa53f640" translate="yes" xml:space="preserve">
          <source>Sends a tick message, which is a packet of length 0. Ticking is done when the port is in &lt;code&gt;data&lt;/code&gt; mode, so the command for sending data cannot be used (besides it ignores zero length packages in &lt;code&gt;command&lt;/code&gt; mode). This is used by the ticker to send dummy data when no other traffic is present.</source>
          <target state="translated">길이가 0 인 패킷 인 틱 메시지를 전송합니다. 포트가 &lt;code&gt;data&lt;/code&gt; 모드 에 있으면 틱이 수행 되므로 데이터 전송 명령을 사용할 수 없습니다 ( &lt;code&gt;command&lt;/code&gt; 모드 에서 길이가 0 인 패키지는 무시 함 ). 이것은 다른 트래픽이 없을 때 티커가 더미 데이터를 보내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cd21d4aea87e135f8db24e03b9c26172b603401e" translate="yes" xml:space="preserve">
          <source>Sends all &lt;code&gt;Replies&lt;/code&gt;, then terminates the &lt;code&gt;gen_statem&lt;/code&gt; by calling &lt;code&gt;&lt;a href=&quot;#Module:terminate-3&quot;&gt;Module:terminate/3&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;Reason&lt;/code&gt; and &lt;code&gt;NewData&lt;/code&gt;, if specified.</source>
          <target state="translated">모든 &lt;code&gt;Replies&lt;/code&gt; 를 보낸 다음 지정된 경우 &lt;code&gt;Reason&lt;/code&gt; 및 &lt;code&gt;NewData&lt;/code&gt; 와 함께 &lt;code&gt;&lt;a href=&quot;#Module:terminate-3&quot;&gt;Module:terminate/3&lt;/a&gt;&lt;/code&gt; 를 호출 하여 &lt;code&gt;gen_statem&lt;/code&gt; 을 종료 합니다.</target>
        </trans-unit>
        <trans-unit id="1b571cf3ceca14f6161cbb475388a7821a979c94" translate="yes" xml:space="preserve">
          <source>Sends an Erlang term to a process.</source>
          <target state="translated">Erlang 용어를 프로세스로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="927c9e1e1bf78835f28716551ead89eb338ad958" translate="yes" xml:space="preserve">
          <source>Sends an Erlang term to a registered process.</source>
          <target state="translated">Erlang 용어를 등록 된 프로세스로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="57d7c6fb590dc0f13e1974114e2730537afad3bb" translate="yes" xml:space="preserve">
          <source>Sends an HTTP request. The function can be both synchronous and asynchronous. In the latter case, the function returns &lt;code&gt;{ok, RequestId}&lt;/code&gt; and then the information is delivered to the &lt;code&gt;receiver&lt;/code&gt; depending on that value.</source>
          <target state="translated">HTTP 요청을 보냅니다. 이 기능은 동기 및 비동기가 될 수 있습니다. 후자의 경우, 함수는 &lt;code&gt;{ok, RequestId}&lt;/code&gt; 리턴 한 다음 해당 값에 따라 정보를 &lt;code&gt;receiver&lt;/code&gt; 에게 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="bc7532344130633ffd04ed3ff3c05c1b9a15db47" translate="yes" xml:space="preserve">
          <source>Sends an SSH Connection Protocol &lt;code&gt;pty_req&lt;/code&gt;, to allocate a pseudo-terminal. Is to be called by an SSH client process.</source>
          <target state="translated">의사 터미널을 할당하기 위해 SSH 연결 프로토콜 &lt;code&gt;pty_req&lt;/code&gt; 를 보냅니다 . SSH 클라이언트 프로세스에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d95dc1250619b283e9f31b9437b2e11fe452144b" translate="yes" xml:space="preserve">
          <source>Sends an XML document to the server.</source>
          <target state="translated">XML 문서를 서버로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="0ef0a82dbfc2de9f26d73492b241fb6b356feafd" translate="yes" xml:space="preserve">
          <source>Sends an arbitrary FTP command and returns verbatim a list of the lines sent back by the FTP server. This function is intended to give application accesses to FTP commands that are server-specific or that cannot be provided by this FTP client.</source>
          <target state="translated">임의의 FTP 명령을 전송하고 FTP 서버가 다시 전송 한 행 목록을 그대로 리턴합니다. 이 기능은 서버 별 또는이 FTP 클라이언트가 제공 할 수없는 FTP 명령에 응용 프로그램 액세스를 제공하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="74984885bd2673385ef69978113530fdf76c8ceb" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous event to the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_statem&lt;/code&gt; does not exist. The &lt;code&gt;gen_statem&lt;/code&gt; calls the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;cast&lt;/code&gt; and event content &lt;code&gt;Msg&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; 에 비동기 이벤트를 전송 하고 대상 노드 또는 &lt;code&gt;gen_statem&lt;/code&gt; 이 존재하지 않으면 무시하고 즉시 &lt;code&gt;ok&lt;/code&gt; 를 리턴 합니다. &lt;code&gt;gen_statem&lt;/code&gt; 가 부르는 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;cast&lt;/code&gt; 및 이벤트 내용 &lt;code&gt;Msg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b547bdaa5517f467cc9589c58e11c8caaa64283" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous message to the channel process and returns ok immediately, ignoring if the destination node or channel process does not exist. The channel calls &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the message.</source>
          <target state="translated">대상 노드 또는 채널 프로세스가 존재하지 않으면 무시하고 채널 프로세스에 비동기 메시지를 보내고 즉시 확인을 리턴합니다. 채널 은 메시지를 처리하기 위해 &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="1a9158a1a92cc117659b31066bac983f8399ba15" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous notification of type &lt;code&gt;Name&lt;/code&gt; with &lt;code&gt;Data&lt;/code&gt;to the Common Test event manager. This can later be caught by any installed event manager.</source>
          <target state="translated">유형의 비동기 통지 전송 &lt;code&gt;Name&lt;/code&gt; 과 &lt;code&gt;Data&lt;/code&gt; 공통 테스트 이벤트 관리자에 있습니다. 설치된 이벤트 관리자가 나중에이를 발견 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb4f98023a2bc3e1eae9494947b8c9a4c2c152f3" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;ServerRef&lt;/code&gt; of the &lt;code&gt;gen_server&lt;/code&gt; process and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_server&lt;/code&gt; process does not exist. The &lt;code&gt;gen_server&lt;/code&gt; process calls &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">&lt;code&gt;gen_server&lt;/code&gt; 프로세스 의 &lt;code&gt;ServerRef&lt;/code&gt; 에 비동기 요청을 보내고 대상 노드 또는 &lt;code&gt;gen_server&lt;/code&gt; 프로세스가 존재하지 않으면 무시하고 즉시 &lt;code&gt;ok&lt;/code&gt; 를 리턴 합니다. &lt;code&gt;gen_server&lt;/code&gt; 의 프로세스를 호출 &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 요청을 처리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eac57b700cbb66597b777c52c875949a36394b4a" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;gen_server&lt;/code&gt; processes locally registered as &lt;code&gt;Name&lt;/code&gt; at the specified nodes. The function returns immediately and ignores nodes that do not exist, or where the &lt;code&gt;gen_server&lt;/code&gt;&lt;code&gt;Name&lt;/code&gt; does not exist. The &lt;code&gt;gen_server&lt;/code&gt; processes call &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">지정된 노드에서 로컬로 &lt;code&gt;Name&lt;/code&gt; 으로 등록 된 &lt;code&gt;gen_server&lt;/code&gt; 프로세스에 비동기 요청을 보냅니다 . 이 함수는 즉시 리턴하여 존재하지 않거나 &lt;code&gt;gen_server&lt;/code&gt; &lt;code&gt;Name&lt;/code&gt; 이없는 노드를 무시 합니다. &lt;code&gt;gen_server&lt;/code&gt; 의 과정은 전화 &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 요청을 처리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22d9a76964fdc6de46919f2ae3b1586fb8725f05" translate="yes" xml:space="preserve">
          <source>Sends an event notification to event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt;Module:handle_event/2&lt;/a&gt;&lt;/code&gt; for each installed event handler to handle the event.</source>
          <target state="translated">이벤트 관리자에게 &lt;code&gt;EventMgrRef&lt;/code&gt; 이벤트 알림을 보냅니다 . 이벤트 관리자는 설치된 각 이벤트 핸들러에 대해 &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt;Module:handle_event/2&lt;/a&gt;&lt;/code&gt; 를 호출 하여 이벤트를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a48ebf47e427cbcbd5d8bf43978d938c7e022ba7" translate="yes" xml:space="preserve">
          <source>Sends an exit signal with exit reason &lt;code&gt;Reason&lt;/code&gt; to the process or port identified by &lt;code&gt;Pid&lt;/code&gt;.</source>
          <target state="translated">종료 이유 &lt;code&gt;Reason&lt;/code&gt; 가 있는 종료 신호를 &lt;code&gt;Pid&lt;/code&gt; 로 식별 된 프로세스 또는 포트로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="2d5f63244b8379209a3e5559dd9527cc393818d2" translate="yes" xml:space="preserve">
          <source>Sends ctrl commands to the OpenSSL engine given by &lt;code&gt;Engine&lt;/code&gt;. &lt;code&gt;Optional&lt;/code&gt; is a boolean argument that can relax the semantics of the function. If set to &lt;code&gt;true&lt;/code&gt; it will only return failure if the ENGINE supported the given command name but failed while executing it, if the ENGINE doesn't support the command name it will simply return success without doing anything. In this case we assume the user is only supplying commands specific to the given ENGINE so we set this to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Engine&lt;/code&gt; 이 제공 한 OpenSSL 엔진에 ctrl 명령을 보냅니다 . &lt;code&gt;Optional&lt;/code&gt; 은 함수의 의미를 완화 할 수있는 부울 인수입니다. &lt;code&gt;true&lt;/code&gt; 로 설정 하면 ENGINE이 지정된 명령 이름을 지원했지만 실행하는 동안 실패한 경우에만 실패를 리턴합니다. ENGINE이 명령 이름을 지원하지 않으면 아무런 조치도 취하지 않고 단순히 성공을 리턴합니다. 이 경우 사용자는 주어진 ENGINE에 특정한 명령 만 제공한다고 가정하고이를 &lt;code&gt;false&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="c12a83bc6e3e8d31296d6cd5740549de25b10e84" translate="yes" xml:space="preserve">
          <source>Sends ctrl commands to the OpenSSL engine given by &lt;code&gt;Engine&lt;/code&gt;. This function is the same as calling &lt;code&gt;engine_ctrl_cmd_string/4&lt;/code&gt; with &lt;code&gt;Optional&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Engine&lt;/code&gt; 이 제공 한 OpenSSL 엔진에 ctrl 명령을 보냅니다 . 이 함수는 &lt;code&gt;Optional&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정하여 &lt;code&gt;engine_ctrl_cmd_string/4&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="67d17c375a9a060f32a85373bddb44efde580601" translate="yes" xml:space="preserve">
          <source>Sends data from an Erl Scheme script back to the client.</source>
          <target state="translated">Erl Scheme 스크립트에서 클라이언트로 데이터를 다시 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b6b7b3a58756f819969ad1c659f38d894b5b0c06" translate="yes" xml:space="preserve">
          <source>Sends data from an I/O vector, &lt;code&gt;ev&lt;/code&gt;, to the port owner process. It has a header buffer (&lt;code&gt;hbuf&lt;/code&gt; and &lt;code&gt;hlen&lt;/code&gt;), just like &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">I / O 벡터 ( &lt;code&gt;ev&lt;/code&gt; )에서 포트 소유자 프로세스로 데이터를 보냅니다 . 이 헤더 버퍼 (갖는다 &lt;code&gt;hbuf&lt;/code&gt; 및 &lt;code&gt;hlen&lt;/code&gt; 처럼) &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22caa4aafbbd2c636933e8db75ff46089c65895a" translate="yes" xml:space="preserve">
          <source>Sends data from the driver up to the emulator. The data is received as terms or binary data, depending on how the driver port was opened.</source>
          <target state="translated">드라이버에서 에뮬레이터로 데이터를 보냅니다. 데이터는 드라이버 포트가 열린 방식에 따라 용어 또는 이진 데이터로 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="b61c157cd04931da6bc6144a1854ed21be64bcff" translate="yes" xml:space="preserve">
          <source>Sends data in the special driver term format to the port owner process. This is a fast way to deliver term data from a driver. It needs no binary conversion, so the port owner process receives data as normal Erlang terms. The &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt;erl_drv_send_term&lt;/a&gt;&lt;/code&gt; functions can be used for sending to any process on the local node.</source>
          <target state="translated">특수 드라이버 용어 형식의 데이터를 포트 소유자 프로세스로 보냅니다. 이것은 드라이버에서 용어 데이터를 전달하는 빠른 방법입니다. 이진 변환이 필요하지 않으므로 포트 소유자 프로세스는 일반적인 Erlang 용어로 데이터를 수신합니다. &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt;erl_drv_send_term&lt;/a&gt;&lt;/code&gt; 의 기능은 로컬 노드에서 모든 프로세스에 보내는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa5fa6ad7ca6754d75f1d129e656e6d856ced2b1" translate="yes" xml:space="preserve">
          <source>Sends data to a port owner process from a driver binary. It has a header buffer (&lt;code&gt;hbuf&lt;/code&gt; and &lt;code&gt;hlen&lt;/code&gt;) just like &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt;. Parameter &lt;code&gt;hbuf&lt;/code&gt; can be &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">드라이버 바이너리에서 포트 소유자 프로세스로 데이터를 보냅니다. 이 헤더 버퍼 (갖는다 &lt;code&gt;hbuf&lt;/code&gt; 및 &lt;code&gt;hlen&lt;/code&gt; 단지 등) &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt; 를 . 매개 변수 &lt;code&gt;hbuf&lt;/code&gt; 는 &lt;code&gt;NULL&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0a197ca0cf13d48f3bf505f9547ecf84c9b338a" translate="yes" xml:space="preserve">
          <source>Sends data to a port. &lt;code&gt;port_command(Port, Data, [])&lt;/code&gt; equals &lt;code&gt;port_command(Port, Data)&lt;/code&gt;.</source>
          <target state="translated">포트로 데이터를 보냅니다. &lt;code&gt;port_command(Port, Data, [])&lt;/code&gt; &lt;code&gt;port_command(Port, Data)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="32e3ac2032ba950eadeae218f87711e153b4ecbe" translate="yes" xml:space="preserve">
          <source>Sends data to a port. Same as &lt;code&gt;Port ! {PortOwner, {command, Data}}&lt;/code&gt; except for the error behavior and being synchronous (see below). Any process can send data to a port with &lt;code&gt;port_command/2&lt;/code&gt;, not only the port owner (the connected process).</source>
          <target state="translated">포트로 데이터를 보냅니다. &lt;code&gt;Port ! {PortOwner, {command, Data}}&lt;/code&gt; 와 동일 ! 오류 동작 및 동기식을 제외하고 {PortOwner, {command, Data}} (아래 참조). 모든 프로세스는 포트 소유자 (연결된 프로세스)뿐만 아니라 &lt;code&gt;port_command/2&lt;/code&gt; 로 포트로 데이터를 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0104e693c2d55afcfea7268a884a1110584555c" translate="yes" xml:space="preserve">
          <source>Sends data to server on specified session channel and waits to receive the server response.</source>
          <target state="translated">지정된 세션 채널에서 서버로 데이터를 보내고 서버 응답 수신을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="15e214027ca7a8de2b53e7284b306d106dc4152e" translate="yes" xml:space="preserve">
          <source>Sends data to server on specified session channel.</source>
          <target state="translated">지정된 세션 채널에서 서버로 데이터를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d1cab56c9ab8cf986e93c06c7a3cc2852bb89003" translate="yes" xml:space="preserve">
          <source>Sends event &lt;code&gt;clear_alarm&lt;/code&gt; to all event handlers.</source>
          <target state="translated">모든 이벤트 처리기로 &lt;code&gt;clear_alarm&lt;/code&gt; 이벤트를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="dd355f42320150cb8365ea32b28a9e4c6a73272d" translate="yes" xml:space="preserve">
          <source>Sends event &lt;code&gt;set_alarm&lt;/code&gt; to all event handlers.</source>
          <target state="translated">이벤트 &lt;code&gt;set_alarm&lt;/code&gt; 을 모든 이벤트 핸들러로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="12851ee683118032e0a97a530784b4dd66833f17" translate="yes" xml:space="preserve">
          <source>Sends it back to the caller:</source>
          <target state="translated">발신자에게 다시 보냅니다.</target>
        </trans-unit>
        <trans-unit id="5f80e9661dcb5ef0c9d1d4530ca7c9e31260bf57" translate="yes" xml:space="preserve">
          <source>Sends it to the port.</source>
          <target state="translated">포트로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4a5ae1dd8a5dccb6192fbcd7dd439c14ca24ab3d" translate="yes" xml:space="preserve">
          <source>Sends message &lt;code&gt;Msg&lt;/code&gt; to the pid globally registered as &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 으로 글로벌로 등록 된 pid에 메시지 &lt;code&gt;Msg&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="9e82d2dea2625ade5f9a8c6d973a3ad6294d60fe" translate="yes" xml:space="preserve">
          <source>Sends one or more transaction request(s) and waits for the reply.</source>
          <target state="translated">하나 이상의 트랜잭션 요청을 보내고 응답을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="5c434891a9dcf72b8a90e1acddd74c5bf598f8a5" translate="yes" xml:space="preserve">
          <source>Sends one or more transaction request(s) but does NOT wait for a reply</source>
          <target state="translated">하나 이상의 거래 요청을 보내지 만 응답을 기다리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b11eeadb5e331d1d238ecdcf3a96126cc536da7" translate="yes" xml:space="preserve">
          <source>Sends status replies to requests where the requester has stated that it wants a status report, that is, &lt;code&gt;WantReply = true&lt;/code&gt;. If &lt;code&gt;WantReply&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, calling this function becomes a &quot;noop&quot;. Is to be called while handling an SSH Connection Protocol message containing a &lt;code&gt;WantReply&lt;/code&gt; boolean value.</source>
          <target state="translated">요청자가 상태 보고서를 원한다고 말한 요청 (즉, &lt;code&gt;WantReply = true&lt;/code&gt; 상태 응답을 보냅니다 . 경우 &lt;code&gt;WantReply&lt;/code&gt; 이 있다 &lt;code&gt;false&lt;/code&gt; ,이 함수를 호출하는 것은 &quot;무 조작&quot;가된다. &lt;code&gt;WantReply&lt;/code&gt; 부울 값이 포함 된 SSH 연결 프로토콜 메시지를 처리하는 동안 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="7d6e87f9e1af68d240068e5b70f509bf549f0633" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;Data&lt;/code&gt; message with all sending parameters from a &lt;code&gt;&lt;a href=&quot;#record-sctp_sndrcvinfo&quot;&gt;#sctp_sndrcvinfo{}&lt;/a&gt;&lt;/code&gt; record. This way, the user can specify the PPID (passed to the remote end) and context (passed to the local SCTP layer), which can be used, for example, for error identification. However, such a fine level of user control is rarely required. The function &lt;code&gt;send/4&lt;/code&gt; is sufficient for most applications.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#record-sctp_sndrcvinfo&quot;&gt;#sctp_sndrcvinfo{}&lt;/a&gt;&lt;/code&gt; 레코드 에서 모든 전송 매개 변수와 함께 &lt;code&gt;Data&lt;/code&gt; 메시지를 전송합니다 . 이러한 방식으로 사용자는 PPID (원격 끝으로 전달) 및 컨텍스트 (로컬 SCTP 계층으로 전달)를 지정할 수 있으며, 예를 들어 오류 식별에 사용할 수 있습니다. 그러나 이러한 수준의 사용자 제어는 거의 필요하지 않습니다. &lt;code&gt;send/4&lt;/code&gt; 기능 은 대부분의 응용 프로그램에 충분합니다.</target>
        </trans-unit>
        <trans-unit id="ef0a1cfad9c6060907db674c021f5126aa8f4bda" translate="yes" xml:space="preserve">
          <source>Sends the data &amp;lt;data&amp;gt; on the connected/accepted socket (in &lt;code&gt;command&lt;/code&gt; mode). The sending is acknowledged when the data has left this process.</source>
          <target state="translated">연결 / 수락 된 소켓에서 &amp;lt;데이터&amp;gt; 데이터를 전송합니다 ( &lt;code&gt;command&lt;/code&gt; 모드). 데이터가이 프로세스를 종료하면 전송이 승인됩니다.</target>
        </trans-unit>
        <trans-unit id="02c82d5d06a980a6d12cde7f085cdd47e478d5a9" translate="yes" xml:space="preserve">
          <source>Sends the file &lt;code&gt;Filename&lt;/code&gt; to &lt;code&gt;Socket&lt;/code&gt;. Returns &lt;code&gt;{ok, BytesSent}&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 파일 을 &lt;code&gt;Socket&lt;/code&gt; 에 보냅니다 . 반환 &lt;code&gt;{ok, BytesSent}&lt;/code&gt; 그렇지 않으면 성공하면, &lt;code&gt;{error, Reason}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f607b4f9fa0c564e7614ddcd801e8a5df876b95" translate="yes" xml:space="preserve">
          <source>Sends the notification &lt;code&gt;Notification&lt;/code&gt; to the management targets defined for &lt;code&gt;NotifyName&lt;/code&gt; in the &lt;code&gt;snmpNotifyTable&lt;/code&gt; in SNMP-NOTIFICATION-MIB from the specified context.</source>
          <target state="translated">지정된 컨텍스트에서 SNMP-NOTIFICATION-MIB의 &lt;code&gt;NotifyName&lt;/code&gt; 에있는 &lt;code&gt;snmpNotifyTable&lt;/code&gt; 에 대해 정의 된 관리 대상으로 알림 &lt;code&gt;Notification&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="66e982604e3980f741e949ec9010aa745b5914a9" translate="yes" xml:space="preserve">
          <source>Sends the value of &lt;code&gt;Expr2&lt;/code&gt; as a message to the process specified by &lt;code&gt;Expr1&lt;/code&gt;. The value of &lt;code&gt;Expr2&lt;/code&gt; is also the return value of the expression.</source>
          <target state="translated">&lt;code&gt;Expr1&lt;/code&gt; 에 지정된 프로세스 에 &lt;code&gt;Expr2&lt;/code&gt; 값을 메시지로 보냅니다 . &lt;code&gt;Expr2&lt;/code&gt; 의 값 은 또한 표현식의 리턴 값입니다.</target>
        </trans-unit>
        <trans-unit id="907e230655804593ab94674e107d67e8c1168666" translate="yes" xml:space="preserve">
          <source>Sent pending limit (see the MGOriginatedPendingLimit and the MGCOriginatedPendingLimit of the megaco root package). This parameter specifies how many pending messages that can be sent (for a given received transaction request). When the limit is exceeded, the transaction is aborted (see &lt;code&gt;&lt;a href=&quot;megaco_user#request_abort&quot;&gt;handle_trans_request_abort&lt;/a&gt;&lt;/code&gt;) and an error message is sent to the other side.</source>
          <target state="translated">전송 보류 제한 (megaco 루트 패키지의 MGOriginatedPendingLimit 및 MGCOriginatedPendingLimit 참조) 이 매개 변수는 주어진 수신 트랜잭션 요청에 대해 보낼 수있는 보류중인 메시지 수를 지정합니다. 한계를 초과하면 트랜잭션이 중단되고 ( &lt;code&gt;&lt;a href=&quot;megaco_user#request_abort&quot;&gt;handle_trans_request_abort&lt;/a&gt;&lt;/code&gt; 참조 ) 오류 메시지가 다른쪽으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="1f176b543509f30039b1b53c658506d6b0190e5a" translate="yes" xml:space="preserve">
          <source>Sent when a log is truncated or reopened. For halt logs &lt;code&gt;NoLostItems&lt;/code&gt; is the number of items written on the log since the disk log process was created. For wrap logs &lt;code&gt;NoLostItems&lt;/code&gt; is the number of items on all wrap log files.</source>
          <target state="translated">로그가 잘 리거나 다시 열릴 때 전송됩니다. 중지 로그의 경우 &lt;code&gt;NoLostItems&lt;/code&gt; 는 디스크 로그 프로세스가 작성된 이후 로그에 기록 된 항목 수입니다. 랩 로그의 경우 &lt;code&gt;NoLostItems&lt;/code&gt; 는 모든 랩 로그 파일의 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="a33ce3fad1114de787998c2c35e494de50d28c5d" translate="yes" xml:space="preserve">
          <source>Sent when a wrap log has filled up one of its files and a new file is opened. &lt;code&gt;NoLostItems&lt;/code&gt; is the number of previously logged items that were lost when truncating existing files.</source>
          <target state="translated">랩 로그가 파일 중 하나를 채우고 새 파일이 열릴 때 전송됩니다. &lt;code&gt;NoLostItems&lt;/code&gt; 는 기존 파일을 자를 때 손실 된 이전에 기록 된 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="64ddb7835db34a3c62d27dc1a9e620d3bae1e499" translate="yes" xml:space="preserve">
          <source>Sent when a young garbage collection is about to be started. &lt;code&gt;Info&lt;/code&gt; is a list of two-element tuples, where the first element is a key, and the second is the value. Do not depend on any order of the tuples. The following keys are defined:</source>
          <target state="translated">어린 가비지 콜렉션이 시작 되려고 할 때 전송됩니다. &lt;code&gt;Info&lt;/code&gt; 는 두 요소 튜플의 목록이며, 첫 번째 요소는 키이고 두 번째 요소는 값입니다. 튜플의 순서에 의존하지 마십시오. 다음 키가 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="13a5fcc86589571d6cba964d19b54d2f5e3dd445" translate="yes" xml:space="preserve">
          <source>Sent when an asynchronous log attempt is made to a blocked log that does not queue log attempts. &lt;code&gt;Items&lt;/code&gt; is the items from the log attempt.</source>
          <target state="translated">로그 시도를 대기하지 않는 차단 된 로그에 비동기 로그 시도가있을 때 전송됩니다. &lt;code&gt;Items&lt;/code&gt; 은 로그 시도의 항목입니다.</target>
        </trans-unit>
        <trans-unit id="72c5003b2fb4d153b50e578a5df32e00a38f408a" translate="yes" xml:space="preserve">
          <source>Sent when an asynchronous log attempt is made to a log file opened in read-only mode. &lt;code&gt;Items&lt;/code&gt; is the items from the log attempt.</source>
          <target state="translated">읽기 전용 모드로 열린 로그 파일에 비동기 로그를 시도 할 때 전송됩니다. &lt;code&gt;Items&lt;/code&gt; 은 로그 시도의 항목입니다.</target>
        </trans-unit>
        <trans-unit id="8a874181b27ada8edbf449b7e49664c9710599a9" translate="yes" xml:space="preserve">
          <source>Sent when an attempt to log items to a wrap log would write more bytes than the limit set by option &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">랩 로그에 항목을 기록하려고 시도 할 때 옵션 &lt;code&gt;size&lt;/code&gt; 로 설정된 한계보다 많은 바이트를 쓸 때 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="824eb071add20d7bf3036cfe85970417a0e22601" translate="yes" xml:space="preserve">
          <source>Sent when fullsweep garbage collection is about to be started. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_minor_start&lt;/code&gt;.</source>
          <target state="translated">전체 청소 가비지 수집을 시작하려고 할 때 전송됩니다. &lt;code&gt;Info&lt;/code&gt; 는 메시지 &lt;code&gt;gc_minor_start&lt;/code&gt; 와 같은 종류의 목록을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="0da909a4b11e2c658bb803fd136f8378aaeb0a2a" translate="yes" xml:space="preserve">
          <source>Sent when fullsweep garbage collection is finished. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_minor_start&lt;/code&gt;, but the sizes reflect the new sizes after a fullsweep garbage collection.</source>
          <target state="translated">전체 청소 가비지 수집이 완료되면 전송됩니다. &lt;code&gt;Info&lt;/code&gt; 는 메시지 &lt;code&gt;gc_minor_start&lt;/code&gt; 와 같은 종류의 목록을 포함 하지만 크기는 전체 스윕 가비지 수집 후 새로운 크기를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="a4ec09f770b521ff7e91cf7659a27a557c8ff324" translate="yes" xml:space="preserve">
          <source>Sent when function &lt;code&gt;alog/2&lt;/code&gt; or &lt;code&gt;alog_terms/2&lt;/code&gt; is used for internally formatted logs. &lt;code&gt;Items&lt;/code&gt; is the items from the log attempt.</source>
          <target state="translated">함수 &lt;code&gt;alog/2&lt;/code&gt; 또는 &lt;code&gt;alog_terms/2&lt;/code&gt; 가 내부 형식화 된 로그에 사용될 때 전송됩니다 . &lt;code&gt;Items&lt;/code&gt; 은 로그 시도의 항목입니다.</target>
        </trans-unit>
        <trans-unit id="9411ea8fb8de0f74b5c5f1beee0451c15e6b0589" translate="yes" xml:space="preserve">
          <source>Sent when the &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;max_heap_size&lt;/a&gt;&lt;/code&gt; is reached during garbage collection. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_start&lt;/code&gt;, but the sizes reflect the sizes that triggered &lt;code&gt;max_heap_size&lt;/code&gt; to be reached.</source>
          <target state="translated">가비지 수집 중에 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;max_heap_size&lt;/a&gt;&lt;/code&gt; 에 도달 하면 전송됩니다 . &lt;code&gt;Info&lt;/code&gt; 는 메시지 &lt;code&gt;gc_start&lt;/code&gt; 와 같은 종류의 목록을 포함 하지만 크기는 &lt;code&gt;max_heap_size&lt;/code&gt; 에 도달 하도록 트리거 한 크기를 반영합니다 .</target>
        </trans-unit>
        <trans-unit id="e6b9f3855413ffa56c28f28f6ca8eb4677876689" translate="yes" xml:space="preserve">
          <source>Sent when the error status changes. The error status is defined by the outcome of the last attempt to log items to the log, or to truncate the log, or the last use of function &lt;code&gt;sync/1&lt;/code&gt;, &lt;code&gt;inc_wrap_file/1&lt;/code&gt;, or &lt;code&gt;change_size/2&lt;/code&gt;. &lt;code&gt;Status&lt;/code&gt; is either &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;{error, Error}&lt;/code&gt;, the former is the initial value.</source>
          <target state="translated">오류 상태가 변경되면 전송됩니다. 오류 상태는 항목을 로그에 기록하거나 로그를 자르거나 마지막으로 &lt;code&gt;sync/1&lt;/code&gt; , &lt;code&gt;inc_wrap_file/1&lt;/code&gt; 또는 &lt;code&gt;change_size/2&lt;/code&gt; 함수를 사용하려고 시도한 결과로 정의됩니다 . &lt;code&gt;Status&lt;/code&gt; 는 &lt;code&gt;ok&lt;/code&gt; 또는 &lt;code&gt;{error, Error}&lt;/code&gt; 이며 전자는 초기 값입니다.</target>
        </trans-unit>
        <trans-unit id="1ce7595aa8c96ab9168ee2c2fbdaad2c701fd3b8" translate="yes" xml:space="preserve">
          <source>Sent when young garbage collection is finished. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_minor_start&lt;/code&gt;, but the sizes reflect the new sizes after garbage collection.</source>
          <target state="translated">어린 가비지 수집이 완료되면 전송됩니다. &lt;code&gt;Info&lt;/code&gt; 는 메시지 &lt;code&gt;gc_minor_start&lt;/code&gt; 와 같은 종류의 목록을 포함 하지만 크기는 가비지 수집 후 새로운 크기를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="5b6f13cb83c8306b0c9e46de691662aea75507ed" translate="yes" xml:space="preserve">
          <source>Separates two documents by either a single space, or a line break and intentation. In other words, one of the layouts</source>
          <target state="translated">두 문서를 단일 공백 ​​또는 줄 바꿈 및 의도로 구분합니다. 즉, 레이아웃 중 하나</target>
        </trans-unit>
        <trans-unit id="b4b289a7b76be83adf9d38e7a3ee28190349bff2" translate="yes" xml:space="preserve">
          <source>Separator</source>
          <target state="translated">Separator</target>
        </trans-unit>
        <trans-unit id="799fa8ef2a7a0b5c9995dccfc8fc9b1a47c65034" translate="yes" xml:space="preserve">
          <source>SeparatorList :: [&lt;code&gt;&lt;a href=&quot;#type-grapheme_cluster&quot;&gt;grapheme_cluster()&lt;/a&gt;&lt;/code&gt;]) -&amp;gt;</source>
          <target state="translated">구분자 목록 :: [ &lt;code&gt;&lt;a href=&quot;#type-grapheme_cluster&quot;&gt;grapheme_cluster()&lt;/a&gt;&lt;/code&gt; ])-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="78ad79ed72c72b1fc342f57808f8e1b8c61026fc" translate="yes" xml:space="preserve">
          <source>Sequential tracing between nodes is performed transparently. This applies to C-nodes built with &lt;code&gt;Erl_Interface&lt;/code&gt; too. A C-node built with &lt;code&gt;Erl_Interface&lt;/code&gt; only maintains one trace token, which means that the C-node appears as one process from the sequential tracing point of view.</source>
          <target state="translated">노드 간 순차 추적은 투명하게 수행됩니다. 이것은 &lt;code&gt;Erl_Interface&lt;/code&gt; 로 빌드 된 C 노드에도 적용됩니다 . &lt;code&gt;Erl_Interface&lt;/code&gt; 로 빌드 된 C 노드 는 하나의 추적 토큰 만 유지하므로 C 노드는 순차적 추적 관점에서 하나의 프로세스로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="67674db1221be14a488e3b7f6dea2118795c01a2" translate="yes" xml:space="preserve">
          <source>Sequential tracing is a way to trace a sequence of messages sent between different local or remote processes, where the sequence is initiated by a single message. In short, it works as follows:</source>
          <target state="translated">순차 추적은 서로 다른 로컬 또는 원격 프로세스간에 전송되는 일련의 메시지를 추적하는 방법으로, 단일 메시지로 시퀀스가 ​​시작됩니다. 간단히 말해 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b39a3365fc30062e1068f6656700d4efb42fc644" translate="yes" xml:space="preserve">
          <source>Sequential tracing is not performed across ports.</source>
          <target state="translated">순차적 추적은 포트에서 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ce9ef8c4d6e02924137b5130dba040bdf86df6b" translate="yes" xml:space="preserve">
          <source>Sequential tracing makes it possible to trace all messages resulting from one initial message. Sequential tracing is independent of the ordinary tracing in Erlang, which is controlled by the &lt;code&gt;erlang:trace/3&lt;/code&gt; BIF. For more information about what sequential tracing is and how it can be used, see section &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">순차 추적을 사용하면 하나의 초기 메시지에서 발생하는 모든 메시지를 추적 할 수 있습니다. 순차 추적은 Erlang &lt;code&gt;erlang:trace/3&lt;/code&gt; BIF에 의해 제어되는 Erlang의 일반 추적과 무관합니다 . 순차적 인 추적을하고 그 사용 방법에 대한 자세한 내용은 섹션을 참조 &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f08e204d675fb02cb9c92420ea2ac07088bb7955" translate="yes" xml:space="preserve">
          <source>Sequential tracing of messages.</source>
          <target state="translated">메시지의 순차적 추적</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
