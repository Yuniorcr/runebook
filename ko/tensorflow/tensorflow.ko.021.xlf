<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="c56249ff57de445c0d669230b1aed90585bd8f33" translate="yes" xml:space="preserve">
          <source>If we mark the pixels in the input image which are taken for the output with &lt;code&gt;*&lt;/code&gt;, we see the pattern:</source>
          <target state="translated">출력을 위해 가져온 입력 이미지의 픽셀을 &lt;code&gt;*&lt;/code&gt; 로 표시하면 패턴이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="cf89ab89e64bfcf039295e9f006b5cf17e441357" translate="yes" xml:space="preserve">
          <source>If with the default behavior you are still seeing errors of the form &quot;Connecting to invalid output X of source node Y which has Z outputs&quot; try setting &lt;a href=&quot;output_all_intermediates&quot;&gt;&lt;code&gt;tf.compat.v1.experimental.output_all_intermediates(True)&lt;/code&gt;&lt;/a&gt; and please file an issue at https://github.com/tensorflow/tensorflow/issues.</source>
          <target state="translated">기본 동작으로 &quot;Z 출력이있는 소스 노드 Y의 유효하지 않은 출력 X에 연결&quot;형식의 오류가 계속 표시되면 &lt;a href=&quot;output_all_intermediates&quot;&gt; &lt;code&gt;tf.compat.v1.experimental.output_all_intermediates(True)&lt;/code&gt; &lt;/a&gt; 설정 하고 https에 문제를 제기하십시오. //github.com/tensorflow/tensorflow/issues.</target>
        </trans-unit>
        <trans-unit id="3520c54d6dc04ce1b07ddaf989e991f6131aee9c" translate="yes" xml:space="preserve">
          <source>If you are implementing a ClusterResolver that works in both the Google environment and the open-source world (for instance, a TPU ClusterResolver or similar), you will have to return the appropriate string depending on the environment, which you will have to detect.</source>
          <target state="translated">Google 환경과 오픈 소스 환경 모두에서 작동하는 ClusterResolver를 구현하는 경우 (예 : TPU ClusterResolver 또는 이와 유사한) 환경에 따라 감지해야 할 적절한 문자열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="811aed6a83297431f65eb3e17b9462a562e7f734" translate="yes" xml:space="preserve">
          <source>If you are not using these and you want to average gradients, you should use &lt;a href=&quot;../../math/reduce_sum&quot;&gt;&lt;code&gt;tf.math.reduce_sum&lt;/code&gt;&lt;/a&gt; to add up your per-example losses and then divide by the global batch size. Note that when using &lt;a href=&quot;../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;, the first component of a tensor's shape is the &lt;em&gt;replica-local&lt;/em&gt; batch size, which is off by a factor equal to the number of replicas being used to compute a single step. As a result, using &lt;a href=&quot;../../math/reduce_mean&quot;&gt;&lt;code&gt;tf.math.reduce_mean&lt;/code&gt;&lt;/a&gt; will give the wrong answer, resulting in gradients that can be many times too big.</source>
          <target state="translated">이것을 사용하지 않고 그라디언트를 평균화하려면 &lt;a href=&quot;../../math/reduce_sum&quot;&gt; &lt;code&gt;tf.math.reduce_sum&lt;/code&gt; &lt;/a&gt; 을 사용 하여 예제 별 손실을 합한 다음 전역 배치 크기로 나눕니다. &lt;a href=&quot;../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt; 를 사용할 때 텐서 모양의 첫 번째 구성 요소는 &lt;em&gt;복제본 로컬&lt;/em&gt; 배치 크기이며, 이는 단일 단계를 계산하는 데 사용되는 복제본 수와 같은 요인에 의해 해제됩니다. 결과적으로, &lt;a href=&quot;../../math/reduce_mean&quot;&gt; &lt;code&gt;tf.math.reduce_mean&lt;/code&gt; &lt;/a&gt; 을 사용하면 잘못된 답변이 제공되어 그라디언트가 너무 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59f63bd02d496354bd6dba5b7411d9b6c135d1dc" translate="yes" xml:space="preserve">
          <source>If you are using a tf.estimator.Estimator, this will automatically be called during training.</source>
          <target state="translated">tf.estimator.Estimator를 사용하는 경우 훈련 중에 자동으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2c2917c6169e51767f3a1cf473ef3869b6db63a6" translate="yes" xml:space="preserve">
          <source>If you are writing a custom training loop, you will need to call a few more methods, &lt;a href=&quot;https://www.tensorflow.org/guide/distributed_training#using_tfdistributestrategy_with_custom_training_loops&quot;&gt;see the guide&lt;/a&gt;:</source>
          <target state="translated">사용자 정의 교육 루프를 작성하는 경우 몇 가지 방법을 더 호출해야 &lt;a href=&quot;https://www.tensorflow.org/guide/distributed_training#using_tfdistributestrategy_with_custom_training_loops&quot;&gt;합니다. 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a7892158ce0223192ea1db18bc5c647fa4e1ee34" translate="yes" xml:space="preserve">
          <source>If you call the scaffold constructor without any arguments, it will pick pieces from the collections, creating default ones if needed when &lt;code&gt;scaffold.finalize()&lt;/code&gt; is called. You can pass arguments to the constructor to provide your own pieces. Pieces that you pass to the constructor are not added to the graph collections.</source>
          <target state="translated">인수없이 스캐 폴드 생성자를 호출하면 &lt;code&gt;scaffold.finalize()&lt;/code&gt; 가 호출 될 때 컬렉션에서 조각을 선택하여 필요한 경우 기본 조각을 만듭니다 . 자신의 조각을 제공하기 위해 생성자에 인수를 전달할 수 있습니다. 생성자에 전달한 조각은 그래프 컬렉션에 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dc4b64fc1392f71d3b32889d1028fdf4c14a5708" translate="yes" xml:space="preserve">
          <source>If you call this method multiple times during in a test, it will return the same folder. However, across different runs the directories will be different. This will ensure that across different runs tests will not be able to pollute each others environment. If you need multiple unique directories within a single test, you should use tempfile.mkdtemp as follows: tempfile.mkdtemp(dir=self.get_temp_dir()):</source>
          <target state="translated">테스트 중에이 메소드를 여러 번 호출하면 동일한 폴더가 리턴됩니다. 그러나 다른 실행에서 디렉토리는 다릅니다. 이렇게하면 여러 실행에서 테스트가 서로의 환경을 오염시킬 수 없습니다. 단일 테스트 내에 여러 개의 고유 디렉토리가 필요한 경우 tempfile.mkdtemp를 다음과 같이 사용해야합니다. tempfile.mkdtemp (dir = self.get_temp_dir ()) :</target>
        </trans-unit>
        <trans-unit id="a3580f3a4d3112463848bcded904b9614c30e36b" translate="yes" xml:space="preserve">
          <source>If you create several savers, you can specify a different filename for the protocol buffer file in the call to &lt;code&gt;save()&lt;/code&gt;.</source>
          <target state="translated">여러 개의 보호기를 작성하는 경우 &lt;code&gt;save()&lt;/code&gt; 호출에서 프로토콜 버퍼 파일의 다른 파일 이름을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="643bb410030ee559023f612081129a136d785967" translate="yes" xml:space="preserve">
          <source>If you have a trained graph containing Variable ops, it can be convenient to convert them all to Const ops holding the same values. This makes it possible to describe the network fully with a single GraphDef file, and allows the removal of a lot of ops related to loading and saving the variables.</source>
          <target state="translated">Variable ops가 포함 된 훈련 된 그래프가있는 경우 모두 동일한 값을 유지하는 Const ops로 변환하는 것이 편리 할 수 ​​있습니다. 이를 통해 단일 GraphDef 파일로 네트워크를 완전히 설명 할 수 있으며 변수로드 및 저장과 관련된 많은 작업을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbbe35a21e92354b6099726c1f1b63c090066bd0" translate="yes" xml:space="preserve">
          <source>If you have installed TensorFlow with pip, you should be able to launch TensorBoard from the command line:</source>
          <target state="translated">pip와 함께 TensorFlow를 설치 한 경우 명령 행에서 TensorBoard를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="016085ae26a60bbb61348962a0dfeec05c644fd2" translate="yes" xml:space="preserve">
          <source>If you intend to create your own optimization algorithm, simply inherit from this class and override the following methods:</source>
          <target state="translated">자체 최적화 알고리즘을 만들려는 경우이 클래스에서 상속하고 다음 방법을 재정의하면됩니다.</target>
        </trans-unit>
        <trans-unit id="7a4975dd1a9a628301d8fcc46c4c1c4006240c2f" translate="yes" xml:space="preserve">
          <source>If you need to create a variable with an initial value dependent on another variable, use the other variable's &lt;code&gt;initialized_value()&lt;/code&gt;. This ensures that variables are initialized in the right order.</source>
          <target state="translated">다른 변수에 따라 초기 값으로 변수를 작성해야하는 경우 다른 변수의 &lt;code&gt;initialized_value()&lt;/code&gt; . 이를 통해 변수가 올바른 순서로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="0dc17bf51002e45117b6f345986483c155902a03" translate="yes" xml:space="preserve">
          <source>If you pass a &lt;code&gt;Graph&lt;/code&gt; to the constructor it is added to the event file. (This is equivalent to calling &lt;code&gt;add_graph()&lt;/code&gt; later).</source>
          <target state="translated">생성자에 &lt;code&gt;Graph&lt;/code&gt; 를 전달 하면 이벤트 파일에 추가됩니다. (이것은 나중에 &lt;code&gt;add_graph()&lt;/code&gt; 를 호출하는 것과 같습니다 ).</target>
        </trans-unit>
        <trans-unit id="2781f7468959178d029e9786cd7a67e84aa2b60a" translate="yes" xml:space="preserve">
          <source>If you subclass &lt;code&gt;Model&lt;/code&gt;, you can optionally have a &lt;code&gt;training&lt;/code&gt; argument (boolean) in &lt;code&gt;call&lt;/code&gt;, which you can use to specify a different behavior in training and inference:</source>
          <target state="translated">&lt;code&gt;Model&lt;/code&gt; 을 서브 클래 싱하는 경우 선택적 으로 &lt;code&gt;call&lt;/code&gt; 에서 &lt;code&gt;training&lt;/code&gt; 인수 (부울) 를 가질 수 있습니다. 훈련 및 추론에서 다른 동작을 지정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5da8bcdbe00cdaa6f02c6698e68c0a2734bda5f" translate="yes" xml:space="preserve">
          <source>If you use infrastructure or other tooling that relies on Estimators, you can still build a Keras model and use model_to_estimator to convert the Keras model to an Estimator for use with downstream systems.</source>
          <target state="translated">Estimator를 사용하는 인프라 또는 기타 도구를 사용하는 경우에도 Keras 모델을 빌드하고 model_to_estimator를 사용하여 다운 스트림 시스템에서 사용하기 위해 Keras 모델을 Estimator로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14b4c4dfa2247d3068e5eb1177e034e3d1c73d48" translate="yes" xml:space="preserve">
          <source>If you want to avoid copying, you can use the &lt;code&gt;tensor()&lt;/code&gt; function to get a numpy buffer pointing to the input buffer in the tflite interpreter.</source>
          <target state="translated">복사를 피하려면 &lt;code&gt;tensor()&lt;/code&gt; 함수를 사용 하여 tflite 인터프리터의 입력 버퍼를 가리키는 numpy 버퍼를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30064acebab6ecca146a1290566e335cd8e88f84" translate="yes" xml:space="preserve">
          <source>If you want to change the shape of a variable later you have to use an &lt;code&gt;assign&lt;/code&gt; Op with &lt;code&gt;validate_shape=False&lt;/code&gt;.</source>
          <target state="translated">나중에 변수의 모양을 변경하려면 &lt;code&gt;validate_shape=False&lt;/code&gt; 와 함께 &lt;code&gt;assign&lt;/code&gt; Op 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="62aa5f24c44d925f32d0da5e3403123315297df8" translate="yes" xml:space="preserve">
          <source>If you want to retrieve the Dimension instance corresponding to a certain index in a TensorShape instance, use this utility, like this:</source>
          <target state="translated">TensorShape 인스턴스의 특정 인덱스에 해당하는 Dimension 인스턴스를 검색하려면 다음과 같이이 유틸리티를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b8ffbf1a170d32110a5930f1952bac45b4d249c7" translate="yes" xml:space="preserve">
          <source>If you want to retry the training loop in case of preemption you can do it as follows:</source>
          <target state="translated">선점시 훈련 루프를 재 시도하려면 다음과 같이 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="adc45763eb8027d619cccae315120edbed7cddbd" translate="yes" xml:space="preserve">
          <source>If you wish to avoid the copy, use &lt;code&gt;tensor()&lt;/code&gt;. This function cannot be used to read intermediate results.</source>
          <target state="translated">복사를 피하려면 &lt;code&gt;tensor()&lt;/code&gt; . 이 기능은 중간 결과를 읽는 데 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cb43b900ca1b66e6594e59c48bc30ab315af1d0f" translate="yes" xml:space="preserve">
          <source>If your code needs tf.disable_control_flow_v2() to be called to work properly please file a bug.</source>
          <target state="translated">코드가 제대로 작동하기 위해 tf.disable_control_flow_v2 ()를 호출해야하는 경우 버그를 신고하십시오.</target>
        </trans-unit>
        <trans-unit id="bb220fa51853484751849912116a41cad5054655" translate="yes" xml:space="preserve">
          <source>If your code needs tf.disable_resource_variables() to be called to work properly please file a bug.</source>
          <target state="translated">코드가 제대로 작동하기 위해 tf.disable_resource_variables ()를 호출해야하는 경우 버그를 신고하십시오.</target>
        </trans-unit>
        <trans-unit id="5848859753847331f8db1042c28d2504dd35ba7f" translate="yes" xml:space="preserve">
          <source>If, however, the function is not expressible as a TensorFlow op, then use</source>
          <target state="translated">그러나이 함수를 TensorFlow op로 표현할 수없는 경우에는</target>
        </trans-unit>
        <trans-unit id="c42b5ea19e3b21d08dd7b7c8a4d6dfa69396f0bf" translate="yes" xml:space="preserve">
          <source>Image captioning with visual attention</source>
          <target state="translated">눈에 띄는 이미지 캡션</target>
        </trans-unit>
        <trans-unit id="c57a791cfe94292451c577369e78dd317dacf038" translate="yes" xml:space="preserve">
          <source>Image classification</source>
          <target state="translated">이미지 분류</target>
        </trans-unit>
        <trans-unit id="de38a279dcdcd93610ed628ea92871220d9f71d2" translate="yes" xml:space="preserve">
          <source>Image processing and decoding ops.</source>
          <target state="translated">이미지 처리 및 디코딩 작업.</target>
        </trans-unit>
        <trans-unit id="ba7c6b63a88cb374ff63fc7f30662360ee0eafa4" translate="yes" xml:space="preserve">
          <source>Image segmentation</source>
          <target state="translated">이미지 세분화</target>
        </trans-unit>
        <trans-unit id="6b5de061768f5b63882ed2d718f0716548970fc8" translate="yes" xml:space="preserve">
          <source>Images that are represented using floating point values are expected to have values in the range [0,1). Image data stored in integer data types are expected to have values in the range &lt;code&gt;[0,MAX]&lt;/code&gt;, where &lt;code&gt;MAX&lt;/code&gt; is the largest positive representable number for the data type.</source>
          <target state="translated">부동 소수점 값을 사용하여 표현 된 이미지는 [0,1) 범위의 값을 가질 것으로 예상됩니다. 정수 데이터 유형에 저장된 이미지 데이터는 &lt;code&gt;[0,MAX]&lt;/code&gt; 범위의 값을 가질 것으로 예상되며 , 여기서 &lt;code&gt;MAX&lt;/code&gt; 는 데이터 유형에 대해 가장 큰 양의 표현 가능한 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="81ae76c5a033525b9bebb71fc5faddfefe6500ee" translate="yes" xml:space="preserve">
          <source>Implementation of a ClusterResolver which reads the TF_CONFIG EnvVar.</source>
          <target state="translated">TF_CONFIG EnvVar를 읽는 ClusterResolver의 구현.</target>
        </trans-unit>
        <trans-unit id="d540ae9790266c43ea448cc58760dee1f4459524" translate="yes" xml:space="preserve">
          <source>Implementation of broadcast the &lt;code&gt;tensor&lt;/code&gt; to destinations.</source>
          <target state="translated">&lt;code&gt;tensor&lt;/code&gt; 를 대상 으로 브로드 캐스트 구현 .</target>
        </trans-unit>
        <trans-unit id="ed2e87a0db4ddf68319e3f3abca999b37869d878" translate="yes" xml:space="preserve">
          <source>Implementation of reduce PerReplica objects in a batch.</source>
          <target state="translated">배치에서 PerReplica 객체 줄이기 구현.</target>
        </trans-unit>
        <trans-unit id="e8639a6ef1f4702b490c2cdeb6e50d5693132a19" translate="yes" xml:space="preserve">
          <source>Implementation of the Keras API meant to be a high-level API for TensorFlow.</source>
          <target state="translated">Keras API의 구현은 TensorFlow를위한 고급 API였습니다.</target>
        </trans-unit>
        <trans-unit id="89723e13fc88450d8f0a38ed3d90958d12a4e396" translate="yes" xml:space="preserve">
          <source>Implementation of the scikit-learn classifier API for Keras.</source>
          <target state="translated">Keras를위한 scikit-learn 분류기 API 구현.</target>
        </trans-unit>
        <trans-unit id="7de56b2d26746dd73b9fcddfd1c104e0c913f8f8" translate="yes" xml:space="preserve">
          <source>Implementation of the scikit-learn regressor API for Keras.</source>
          <target state="translated">Keras를위한 scikit-learn 회귀 API의 구현.</target>
        </trans-unit>
        <trans-unit id="08c5c38cccf1eb318b9ecd19fdc9f41a46cfbb1e" translate="yes" xml:space="preserve">
          <source>Implemented using a Queue -- a &lt;code&gt;QueueRunner&lt;/code&gt; for the Queue is added to the current &lt;code&gt;Graph&lt;/code&gt;'s &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; collection.</source>
          <target state="translated">큐를 사용하여 구현 됨-큐의 &lt;code&gt;QueueRunner&lt;/code&gt; 가 현재 &lt;code&gt;Graph&lt;/code&gt; 의 &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; 컬렉션에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="99ad440c7b2df497d09111d62c37946bec231ffe" translate="yes" xml:space="preserve">
          <source>Implemented with GPU-compatible ops and supports gradients.</source>
          <target state="translated">GPU 호환 ops로 구현되고 그라디언트를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="131bd86e21be57724f2b5e9ee7e658b5ecb52043" translate="yes" xml:space="preserve">
          <source>Implemented with TPU/GPU-compatible ops and supports gradients.</source>
          <target state="translated">TPU / GPU 호환 op로 구현되고 그라디언트를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="597f3136a6ebd70744437c04d68554ff073fbb6c" translate="yes" xml:space="preserve">
          <source>Implementors of this function must take care in ensuring that the ClusterSpec returned is up-to-date at the time of calling this function. This usually means retrieving the information from the underlying cluster management system every time this function is invoked and reconstructing a cluster_spec, rather than attempting to cache anything.</source>
          <target state="translated">이 함수의 구현자는이 함수를 호출 할 때 리턴 된 ClusterSpec이 최신인지 확인해야합니다. 이는 일반적으로이 함수가 호출 될 때마다 기본 클러스터 관리 시스템에서 정보를 검색하고 캐시를 시도하지 않고 cluster_spec을 재구성하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6d2f9e9adc660c2a8db8b19c19593d1554adf0a2" translate="yes" xml:space="preserve">
          <source>Implementors of this function must take care in ensuring that the master returned is up-to-date at the time to calling this function. This usually means retrieving the master every time this function is invoked.</source>
          <target state="translated">이 함수의 구현자는이 함수를 호출 할 때 리턴 된 마스터가 최신 상태인지 확인해야합니다. 이는 일반적으로이 함수가 호출 될 때마다 마스터를 검색하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b34153a7b6c2ed124d924be11081a13d32dadcc7" translate="yes" xml:space="preserve">
          <source>Implicit in the &lt;code&gt;tape.gradient&lt;/code&gt; call is a length-one vector which left-multiplies the Jacobian, a vector-Jacobian product.</source>
          <target state="translated">&lt;code&gt;tape.gradient&lt;/code&gt; 호출에 내재 된 길이-벡터는 벡터-자 코비안 곱인 Jacobian을 왼쪽으로 곱한 것입니다.</target>
        </trans-unit>
        <trans-unit id="6d5ca9be0a1bd2497683f94ed45157a705abee73" translate="yes" xml:space="preserve">
          <source>Import a GraphDef and convert it to a textual MLIR module.</source>
          <target state="translated">GraphDef를 가져 와서 텍스트 MLIR 모듈로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="a3750f606daadb180526d7ccaf9a3482ec4910c6" translate="yes" xml:space="preserve">
          <source>Import router for absl.flags. See https://github.com/abseil/abseil-py.</source>
          <target state="translated">absl.flags 용 가져 오기 라우터. https://github.com/abseil/abseil-py를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d3375d44e4b643dfc4f13312d4430da6429af78a" translate="yes" xml:space="preserve">
          <source>Import router for file_io.</source>
          <target state="translated">file_io의 라우터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c14a7d57f569579c21ce1fdc7d99c47f7db6b828" translate="yes" xml:space="preserve">
          <source>ImportError if HDF5 &amp;amp; h5py are not installed</source>
          <target state="translated">HDF5 및 h5py가 설치되지 않은 경우 ImportError</target>
        </trans-unit>
        <trans-unit id="06cbfad937d0c9edcdf28651087ed18c71fcfcc4" translate="yes" xml:space="preserve">
          <source>Important caveats:</source>
          <target state="translated">중요한 경고 사항 :</target>
        </trans-unit>
        <trans-unit id="d7515a79183f4fea6cdf71780ae3ef25fdf0ea35" translate="yes" xml:space="preserve">
          <source>Important note: This class &lt;em&gt;is not&lt;/em&gt; thread-safe for graph construction. All operations should be created from a single thread, or external synchronization must be provided. Unless otherwise specified, all methods are not thread-safe.</source>
          <target state="translated">중요 사항 :이 클래스 &lt;em&gt;는&lt;/em&gt; 그래프 생성에 스레드로부터 안전 &lt;em&gt;하지 않습니다&lt;/em&gt; . 모든 작업은 단일 스레드에서 작성하거나 외부 동기화를 제공해야합니다. 달리 지정하지 않는 한 모든 메소드는 스레드로부터 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dee6dd71bc893fc99d70b2da2a20f8ba1b604f3f" translate="yes" xml:space="preserve">
          <source>Important note: This validator checks if flag values are None, and it does not distinguish between default and explicit values. Therefore, this validator does not make sense when applied to flags with default values other than None, including other false values (e.g. False, 0, '', []). That includes multi flags with a default value of [] instead of None.</source>
          <target state="translated">중요 사항 :이 유효성 검증기는 플래그 값이 없음인지 확인하고 기본값과 명시 적 값을 구분하지 않습니다. 따라서이 유효성 검사기는 다른 잘못된 값 (예 : False, 0, '', [])을 포함하여 None 이외의 기본값을 가진 플래그에 적용 할 때는 의미가 없습니다. 여기에는 None 대신 기본값이 [] 인 다중 플래그가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d8c7b39b8707e89a6e9ce5503ad33254f378a175" translate="yes" xml:space="preserve">
          <source>Imports the graph from &lt;code&gt;graph_def&lt;/code&gt; into the current default &lt;code&gt;Graph&lt;/code&gt;. (deprecated arguments)</source>
          <target state="translated">&lt;code&gt;graph_def&lt;/code&gt; 에서 현재 기본 &lt;code&gt;Graph&lt;/code&gt; 로 그래프를 가져옵니다 . (더 이상 사용되지 않는 인수)</target>
        </trans-unit>
        <trans-unit id="73407b35ca652d79b02dd24b5db9d02e3e0e5f03" translate="yes" xml:space="preserve">
          <source>In 'MIN_COMBINED' mode, each value of the tensor will undergo the following:</source>
          <target state="translated">'MIN_COMBINED'모드에서 텐서의 각 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5dc7fe91c429ae9bf237811621354fd582a8d06b" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;CentralStorageStrategy&lt;/code&gt; there is a single worker so the value returned will be all the values on that worker.</source>
          <target state="translated">에서 &lt;code&gt;CentralStorageStrategy&lt;/code&gt; 값이 그 근로자에 대한 모든 값이 될 것입니다 반환, 그래서 하나의 노동자가있다.</target>
        </trans-unit>
        <trans-unit id="f911260e196d9d52bc11c1d245f364fa94ee6a5e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;CentralStorageStrategy&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt; is called on each of the compute replicas, with the provided &quot;per replica&quot; arguments specific to that device.</source>
          <target state="translated">에서 &lt;code&gt;CentralStorageStrategy&lt;/code&gt; , &lt;code&gt;fn&lt;/code&gt; (가) 해당 장치에 인수 특정 &quot;복제 당&quot;제공과 함께, 컴퓨팅 복제본의 각 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="83a783316a9edd78ba1fd02d394a253388645aea" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;MultiWorkerMirroredStrategy&lt;/code&gt;, all variables created inside `strategy.scope() will be mirrored on all replicas of each worker. Moreover, it also sets a default device scope so that ops without specified devices will end up on the correct worker.</source>
          <target state="translated">&lt;code&gt;MultiWorkerMirroredStrategy&lt;/code&gt; 에서는 `strategy.scope () 내부에 생성 된 모든 변수가 각 작업자의 모든 복제본에 미러링됩니다. 또한 지정된 장치가없는 op가 올바른 작업자로 끝나도록 기본 장치 범위를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fc27e94172bcfc6d46e82386176739ca5f0a870a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;OneDeviceStrategy&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt; is simply called within a device scope for the given device, with the provided arguments.</source>
          <target state="translated">에서 &lt;code&gt;OneDeviceStrategy&lt;/code&gt; , &lt;code&gt;fn&lt;/code&gt; 단순히 제공된 인수, 주어진 장치에 대한 장치 범위 내에서라고합니다.</target>
        </trans-unit>
        <trans-unit id="a37b98485da84e0982814ff7b9a05e1c529e56f1" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;OneDeviceStrategy&lt;/code&gt;, all variables created inside &lt;code&gt;strategy.scope()&lt;/code&gt; will be on &lt;code&gt;device&lt;/code&gt; specified at strategy construction time. See example in the docs for this class.</source>
          <target state="translated">에서는 &lt;code&gt;OneDeviceStrategy&lt;/code&gt; , 내부에서 생성 된 모든 변수 &lt;code&gt;strategy.scope()&lt;/code&gt; 에있을 것이다 &lt;code&gt;device&lt;/code&gt; 전략 시공시에 지정. 이 클래스의 문서에서 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="89dca9293fe8e75256246ee570af4561031fe2c4" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;OneDeviceStrategy&lt;/code&gt;, the &lt;code&gt;value&lt;/code&gt; is always expected to be a single value, so the result is just the value in a tuple.</source>
          <target state="translated">에서 &lt;code&gt;OneDeviceStrategy&lt;/code&gt; 의 &lt;code&gt;value&lt;/code&gt; 결과가 튜플 단지 값이 있으므로 항상 하나의 값이 될 것으로 예상된다.</target>
        </trans-unit>
        <trans-unit id="5d17dc9c8bbe0f8426ef33525f3803ac13280d23" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;OneDeviceStrategy&lt;/code&gt;, there is only one replica, so if axis=None, value is simply returned. If axis is specified as something other than None, such as axis=0, value is reduced along that axis and returned.</source>
          <target state="translated">에서는 &lt;code&gt;OneDeviceStrategy&lt;/code&gt; 축 = 없음, 값이 단순히 반환 그렇다면, 하나의 복제본이있다. axis = 0과 같이 None 이외의 값으로 axis를 지정하면 해당 축을 따라 값이 줄어들고 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="64ad04a752452a82392f727330adb50f1b0ef1ed" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;PREDICT&lt;/code&gt; mode, only returns logits and predictions (&lt;code&gt;=tf.sigmoid(logits)&lt;/code&gt;), whereas &lt;code&gt;BinaryClassHead&lt;/code&gt; also returns probabilities, classes, and class_ids.</source>
          <target state="translated">&lt;code&gt;PREDICT&lt;/code&gt; 모드 에서는 로짓과 예측 ( &lt;code&gt;=tf.sigmoid(logits)&lt;/code&gt; ) 만 반환 하지만 &lt;code&gt;BinaryClassHead&lt;/code&gt; 는 확률, 클래스 및 class_id도 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f12d35a27cca8e8a6a072f66b7e466bedf447861" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;compact&lt;/code&gt; format the three diagonals are brought together into one tensor of shape &lt;code&gt;[..., 3, M]&lt;/code&gt;, with last two dimensions containing superdiagonals, diagonals, and subdiagonals, in order. Similarly to &lt;code&gt;sequence&lt;/code&gt; format, elements &lt;code&gt;diagonals[..., 0, M-1]&lt;/code&gt; and &lt;code&gt;diagonals[..., 2, 0]&lt;/code&gt; are ignored.</source>
          <target state="translated">에서는 &lt;code&gt;compact&lt;/code&gt; 포맷 세 대각선 형상 중 하나 텐서에 소집되어 &lt;code&gt;[..., 3, M]&lt;/code&gt; 마지막 두 치수 위해 superdiagonals 대각선 및 subdiagonals을 함유. &lt;code&gt;sequence&lt;/code&gt; 형식과 유사하게 &lt;code&gt;diagonals[..., 0, M-1]&lt;/code&gt; 및 &lt;code&gt;diagonals[..., 2, 0]&lt;/code&gt; 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="66cbdb97f05830f246eaf05dcd7ae0826bf8f242" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;matrix&lt;/code&gt; format, &lt;code&gt;diagonals&lt;/code&gt; must be a tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt;, with two inner-most dimensions representing the square tridiagonal matrices. Elements outside of the three diagonals will be ignored.</source>
          <target state="translated">에서는 &lt;code&gt;matrix&lt;/code&gt; 형식 &lt;code&gt;diagonals&lt;/code&gt; 형상의 텐서 있어야 &lt;code&gt;[..., M, M]&lt;/code&gt; 사각형 삼중 대각 행렬들을 나타내는 두 개의 가장 안쪽 치수. 세 대각선 이외의 요소는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8148d8cfce5b0dec87e1cdaa0ca93570d75b1c32" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;numpy&lt;/code&gt; transposes are memory-efficient constant time operations as they simply return a new view of the same data with adjusted &lt;code&gt;strides&lt;/code&gt;.</source>
          <target state="translated">에서는 &lt;code&gt;numpy&lt;/code&gt; 전치 단순히 조정과 같은 새로운 데이터보기로 복귀 메모리 효율적인 일정 시간 조작되어 &lt;code&gt;strides&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02241eae37adc7c28b9d589b3d5cb723cc8b981e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;sequence&lt;/code&gt; format, &lt;code&gt;diagonals&lt;/code&gt; are supplied as a tuple or list of three tensors of shapes &lt;code&gt;[..., N]&lt;/code&gt;, &lt;code&gt;[..., M]&lt;/code&gt;, &lt;code&gt;[..., N]&lt;/code&gt; representing superdiagonals, diagonals, and subdiagonals, respectively. &lt;code&gt;N&lt;/code&gt; can be either &lt;code&gt;M-1&lt;/code&gt; or &lt;code&gt;M&lt;/code&gt;; in the latter case, the last element of superdiagonal and the first element of subdiagonal will be ignored.</source>
          <target state="translated">에서는 &lt;code&gt;sequence&lt;/code&gt; 형식 &lt;code&gt;diagonals&lt;/code&gt; 튜플 또는 도형의 세 텐서 목록으로 공급된다 &lt;code&gt;[..., N]&lt;/code&gt; , &lt;code&gt;[..., M]&lt;/code&gt; , &lt;code&gt;[..., N]&lt;/code&gt; 은 각각 superdiagonals 대각선 및 subdiagonals 나타내는. &lt;code&gt;N&lt;/code&gt; 은 &lt;code&gt;M-1&lt;/code&gt; 또는 &lt;code&gt;M&lt;/code&gt; 일 수 있고 ; 후자의 경우, 초 대각선의 마지막 요소와 하위 대각선의 첫 번째 요소는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5a812208d3ae75e4f5c273197394db05dc66f0f9" translate="yes" xml:space="preserve">
          <source>In Candidate Sampling, this operation facilitates virtually removing sampled classes which happen to match target classes. This is done in Sampled Softmax and Sampled Logistic.</source>
          <target state="translated">후보 샘플링에서이 작업을 수행하면 대상 클래스와 일치하는 샘플 클래스를 거의 제거 할 수 있습니다. 이는 Sampled Softmax 및 Sampled Logistic에서 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="6d03c984270e6b66cc992ac2d4de0113fb1792f7" translate="yes" xml:space="preserve">
          <source>In Keras models, sometimes variables are created when the model is first called, instead of construction time. Examples include 1) sequential models without input shape pre-defined, or 2) subclassed models. Pass var_list as callable in these cases.</source>
          <target state="translated">Keras 모델에서는 구성 시간 대신 모델을 처음 호출 할 때 변수가 생성되는 경우가 있습니다. 예를 들어 1) 입력 모양이 사전 정의되지 않은 순차 모델 또는 2) 서브 클래스 모델이 있습니다. 이 경우 var_list를 호출 가능한 것으로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="6d24dc0640eec7767c8580a01fe0f2534a32f8b6" translate="yes" xml:space="preserve">
          <source>In Python, this scatter add operation would look like this:</source>
          <target state="translated">파이썬에서이 분산 추가 작업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="17844ec0dbf5e24da91f6ffe78f9342efe5f4f37" translate="yes" xml:space="preserve">
          <source>In Python, this scatter operation would look like this:</source>
          <target state="translated">파이썬에서이 분산 작업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="81965bf71c83e468654101016f87a74649d16e39" translate="yes" xml:space="preserve">
          <source>In Python, this scatter subtract operation would look like this:</source>
          <target state="translated">파이썬에서이 분산 빼기 연산은 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="3d8782d76c3f4b01f4fdcf84d62e403122ad04f2" translate="yes" xml:space="preserve">
          <source>In TF 2.0, &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects are Python iterables which makes it possible to also create epochs through Python iteration:</source>
          <target state="translated">TF 2.0에서 &lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 객체는 Python 반복 가능하므로 Python 반복을 통해 에포크를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ceb7ca0c46558f03e6086af25fef434bd7045721" translate="yes" xml:space="preserve">
          <source>In TF 2.0, &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects are Python iterables which makes it possible to also create epochs through Python iteration:</source>
          <target state="translated">TF 2.0에서 &lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 객체는 Python 반복 가능하므로 Python 반복을 통해 에포크를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b30346591377f8c72aca3c84be793a8ed9d8c0f" translate="yes" xml:space="preserve">
          <source>In TF 2.0, &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects are Python iterables which makes it possible to also create epochs through Python iteration:</source>
          <target state="translated">TF 2.0에서 &lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 객체는 Python 반복 가능하므로 Python 반복을 통해 에포크를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48e9b024a95539e5d2ffaf50c0d7d26e7f011943" translate="yes" xml:space="preserve">
          <source>In TF 2.0, &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects are Python iterables which makes it possible to also create epochs through Python iteration:</source>
          <target state="translated">TF 2.0에서 &lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 객체는 Python 반복 가능하므로 Python 반복을 통해 에포크를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fdae45e06a3d82dc5e8823e248b14458447ba71" translate="yes" xml:space="preserve">
          <source>In TensorFlow 1, only the &quot;infer&quot; policy is available.</source>
          <target state="translated">TensorFlow 1에서는 &quot;추론&quot;정책 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5252a64a0f9e26ac451b24dc3a78078e2d45a06e" translate="yes" xml:space="preserve">
          <source>In TensorFlow 2.0, iterating over a TensorShape instance returns values.</source>
          <target state="translated">TensorFlow 2.0에서 TensorShape 인스턴스를 반복하면 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4632390b454bb4fddbcccffafb20fab0ac9e532b" translate="yes" xml:space="preserve">
          <source>In TensorFlow 2.0, representing tensors as protos should no longer be a common workflow. That said, this utility function is still useful for generating TF Serving request protos:</source>
          <target state="translated">TensorFlow 2.0에서 텐서를 프로토로 나타내는 것은 더 이상 일반적인 워크 플로가 아니어야합니다. 즉,이 유틸리티 기능은 TF 서빙 요청 프로토 타입을 생성하는 데 여전히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e8db8f91b921bd7ce4f80fb0d9da7d36b0960f78" translate="yes" xml:space="preserve">
          <source>In V1, the exported CPU graph is &lt;code&gt;model_fn&lt;/code&gt; as it is. The exported TPU graph wraps &lt;code&gt;tpu.rewrite()&lt;/code&gt; and &lt;code&gt;TPUPartitionedCallOp&lt;/code&gt; around &lt;code&gt;model_fn&lt;/code&gt; so &lt;code&gt;model_fn&lt;/code&gt; is on TPU by default. To place ops on CPU, &lt;code&gt;tpu.outside_compilation(host_call, logits)&lt;/code&gt; can be used.</source>
          <target state="translated">V1에서 내 보낸 CPU 그래프는 &lt;code&gt;model_fn&lt;/code&gt; 입니다. 내 보낸 TPU 그래프는 &lt;code&gt;TPUPartitionedCallOp&lt;/code&gt; 주위에 &lt;code&gt;model_fn&lt;/code&gt; &lt;code&gt;tpu.rewrite()&lt;/code&gt; 및 TPUPartitionedCallOp 를 래핑 하므로 &lt;code&gt;model_fn&lt;/code&gt; 은 기본적으로 TPU에 있습니다. CPU에 op를 배치하기 위해 &lt;code&gt;tpu.outside_compilation(host_call, logits)&lt;/code&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96357d45f74c44c1cd59ce5a4e69f6c961b9be20" translate="yes" xml:space="preserve">
          <source>In V2, &lt;code&gt;export_saved_model()&lt;/code&gt; sets up &lt;code&gt;params['use_tpu']&lt;/code&gt; flag to let the user know if the code is exporting to TPU (or not). When &lt;code&gt;params['use_tpu']&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, users need to call &lt;code&gt;tpu.rewrite()&lt;/code&gt;, &lt;code&gt;TPUPartitionedCallOp&lt;/code&gt; and/or &lt;code&gt;batch_function()&lt;/code&gt;. Alternatively use &lt;code&gt;inference_on_tpu()&lt;/code&gt; which is a convenience wrapper of the three.</source>
          <target state="translated">V2에서 &lt;code&gt;export_saved_model()&lt;/code&gt; 은 &lt;code&gt;params['use_tpu']&lt;/code&gt; 플래그를 설정하여 코드가 TPU로 내보내는 지 여부를 사용자에게 알립니다 . 때 &lt;code&gt;params['use_tpu']&lt;/code&gt; 있다 &lt;code&gt;True&lt;/code&gt; , 사용자는 호출 할 필요가 &lt;code&gt;tpu.rewrite()&lt;/code&gt; , &lt;code&gt;TPUPartitionedCallOp&lt;/code&gt; 및 / 또는 &lt;code&gt;batch_function()&lt;/code&gt; . 또는 세 가지 편의 래퍼 인 &lt;code&gt;inference_on_tpu()&lt;/code&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="6fa5bd380e5aa574a254ecdd687c73cfcb27bf28" translate="yes" xml:space="preserve">
          <source>In a multi-worker setting, we will first attempt to distribute the dataset by attempting to detect whether the dataset is being created out of ReaderDatasets (e.g. TFRecordDataset, TextLineDataset, etc.) and if so, attempting to shard the input files. Note that there has to be at least one input file per worker. If you have less than one input file per worker, we suggest that you should disable distributing your dataset using the method below.</source>
          <target state="translated">다중 작업자 설정에서는 먼저 데이터 세트가 ReaderDatasets (예 : TFRecordDataset, TextLineDataset 등)에서 생성되는지 여부를 감지하고 입력 파일을 분할하려고 시도하여 데이터 세트를 분배하려고 시도합니다. 작업 자당 하나 이상의 입력 파일이 있어야합니다. 작업 자당 입력 ​​파일이 2 개 미만인 경우 아래 방법을 사용하여 데이터 세트 배포를 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="3a1189c10d2b5b4c2dfe6ce8f122a5b82d16ddb6" translate="yes" xml:space="preserve">
          <source>In a replica context, you may freely read the values of variables, but you may only update their value if they specify a way to aggregate the update using the &lt;code&gt;aggregation&lt;/code&gt; parameter in the variable's constructor. In a cross-replica context, you may read or write variables (writes may need to be broadcast to all copies of the variable if it is mirrored).</source>
          <target state="translated">복제본 컨텍스트에서 변수 값을 자유롭게 읽을 수 있지만 변수 생성자 의 &lt;code&gt;aggregation&lt;/code&gt; 매개 변수를 사용하여 업데이트를 집계하는 방법을 지정하는 경우에만 해당 값을 업데이트 할 수 있습니다 . 교차 복제 컨텍스트에서 변수를 읽거나 쓸 수 있습니다 (쓰기가 변수의 미러링 된 경우 모든 사본에 브로드 캐스트해야 할 수도 있음).</target>
        </trans-unit>
        <trans-unit id="5a6a3b1bf3355979185c8ba5fde475cd00334849" translate="yes" xml:space="preserve">
          <source>In a session, computes and returns the value of this variable.</source>
          <target state="translated">세션에서이 변수의 값을 계산하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2522a9b6956696f7d2f65c27000e4d85acba5fa9" translate="yes" xml:space="preserve">
          <source>In a typical asynchronous training environment, it's common to have some stale gradients. For example, with a N-replica asynchronous training, gradients will be applied to the variables N times independently. Depending on each replica's training speed, some gradients might be calculated from copies of the variable from several steps back (N-1 steps on average). This optimizer avoids stale gradients by collecting gradients from all replicas, averaging them, then applying them to the variables in one shot, after which replicas can fetch the new variables and continue.</source>
          <target state="translated">일반적인 비동기식 교육 환경에서는 오래된 그라디언트가 일반적입니다. 예를 들어 N- 복제본 비동기 훈련을 사용하면 그라디언트가 변수 N에 독립적으로 적용됩니다. 각 복제본의 훈련 속도에 따라 몇 단계 뒤로 변수의 사본에서 일부 그라디언트가 계산 될 수 있습니다 (평균 N-1 단계). 이 옵티마이 저는 모든 복제본에서 그라디언트를 수집하여 평균화 한 다음 한 번에 변수에 적용하여 새 변수를 가져오고 계속함으로써 오래된 그라디언트를 방지합니다.</target>
        </trans-unit>
        <trans-unit id="7f5c7e39ca1e2646f184bebbdccd8352fd472889" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;row_splits&lt;/code&gt;, ragged tensors provide support for four other row-partitioning schemes:</source>
          <target state="translated">비정형 텐서는 &lt;code&gt;row_splits&lt;/code&gt; 외에도 4 개의 다른 행 파티셔닝 구성표를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c4c6856a33d33c73a855c3ce15ea6283e7abc71a" translate="yes" xml:space="preserve">
          <source>In addition to checkpoint files, savers keep a protocol buffer on disk with the list of recent checkpoints. This is used to manage numbered checkpoint files and by &lt;code&gt;latest_checkpoint()&lt;/code&gt;, which makes it easy to discover the path to the most recent checkpoint. That protocol buffer is stored in a file named 'checkpoint' next to the checkpoint files.</source>
          <target state="translated">검사기는 검사 점 파일 외에도 최근 검사 점 목록과 함께 프로토콜 버퍼를 디스크에 보관합니다. 번호가 지정된 체크 포인트 파일을 관리하고 &lt;code&gt;latest_checkpoint()&lt;/code&gt; 를 사용하여 가장 최근의 체크 포인트에 대한 경로를 쉽게 찾을 수 있습니다. 해당 프로토콜 버퍼는 검사 점 파일 옆에 'checkpoint'라는 파일에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="440848afff541ac2b1bbb1684820f47d256a8eae" translate="yes" xml:space="preserve">
          <source>In addition to exporting, this class also garbage collects stale exports.</source>
          <target state="translated">이 클래스는 내보내기 외에도 부실한 내보내기를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="3ba65f5de5f4ca5afe2d4c86c2ddac7a22edaf68" translate="yes" xml:space="preserve">
          <source>In addition to regular Tensors or IndexedSlices, the body may accept and return TensorArray objects. The flows of the TensorArray objects will be appropriately forwarded between loops and during gradient calculations.</source>
          <target state="translated">바디는 일반 텐서 나 IndexedSlices 외에도 TensorArray 객체를 받아 반환 할 수 있습니다. TensorArray 객체의 흐름은 루프간에 그리고 그래디언트 계산 중에 적절하게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="b83ef61c3670f06537ff1c141b52be7ac2a9fe87" translate="yes" xml:space="preserve">
          <source>In addition to slot variables which should be colocated with their primary variables, optimizers also define non-slot variables. These can be things like &quot;number of step updates performed&quot; or &quot;beta1^t&quot; and &quot;beta2^t&quot;. Each strategy has some policy for which devices those variables should be copied too, called the &quot;non-slot devices&quot; (some subset of the parameter devices). We require that all non-slot variables are allocated on the same device, or mirrored across the same set of devices. You can use &lt;a href=&quot;../../../distribute/strategyextended#non_slot_devices&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.non_slot_devices&lt;/code&gt;&lt;/a&gt; to pick a consistent set of devices to pass to both &lt;a href=&quot;../../../distribute/strategyextended#colocate_vars_with&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.colocate_vars_with&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../distribute/strategyextended#update_non_slot&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.update_non_slot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">옵티마이 저는 1 차 변수와 함께 배치해야하는 슬롯 변수 외에도 슬롯 이외의 변수를 정의합니다. &quot;수행 된 단계 업데이트 수&quot;또는 &quot;beta1 ^ t&quot;및 &quot;beta2 ^ t&quot;와 같은 것일 수 있습니다. 각 전략에는 &quot;비 슬롯 장치&quot;(일부 매개 변수 장치의 일부)라고하는 이러한 변수도 복사해야하는 장치에 대한 정책이 있습니다. 슬롯 이외의 모든 변수는 동일한 장치에 할당되거나 동일한 장치 세트에 미러링되어야합니다. &lt;a href=&quot;../../../distribute/strategyextended#non_slot_devices&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.non_slot_devices&lt;/code&gt; &lt;/a&gt; 를 사용 하여 &lt;a href=&quot;../../../distribute/strategyextended#colocate_vars_with&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.colocate_vars_with&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../distribute/strategyextended#update_non_slot&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.update_non_slot&lt;/code&gt; &lt;/a&gt; 모두에 전달할 일관된 장치 세트를 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="72581f64b9b0dd39e47dc7fa9df7182573016778" translate="yes" xml:space="preserve">
          <source>In addition to slot variables which should be colocated with their primary variables, optimizers also define non-slot variables. These can be things like &quot;number of step updates performed&quot; or &quot;beta1^t&quot; and &quot;beta2^t&quot;. Each strategy has some policy for which devices those variables should be copied too, called the &quot;non-slot devices&quot; (some subset of the parameter devices). We require that all non-slot variables are allocated on the same device, or mirrored across the same set of devices. You can use &lt;a href=&quot;strategyextended#non_slot_devices&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.non_slot_devices&lt;/code&gt;&lt;/a&gt; to pick a consistent set of devices to pass to both &lt;a href=&quot;strategyextended#colocate_vars_with&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.colocate_vars_with&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;strategyextended#update_non_slot&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.update_non_slot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">옵티마이 저는 1 차 변수와 함께 배치해야하는 슬롯 변수 외에도 슬롯 이외의 변수를 정의합니다. &quot;수행 된 단계 업데이트 수&quot;또는 &quot;beta1 ^ t&quot;및 &quot;beta2 ^ t&quot;와 같은 것일 수 있습니다. 각 전략에는 &quot;비 슬롯 장치&quot;(일부 매개 변수 장치의 일부)라고하는 이러한 변수도 복사해야하는 장치에 대한 정책이 있습니다. 슬롯 이외의 모든 변수는 동일한 장치에 할당되거나 동일한 장치 세트에 미러링되어야합니다. &lt;a href=&quot;strategyextended#non_slot_devices&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.non_slot_devices&lt;/code&gt; &lt;/a&gt; 를 사용 하여 &lt;a href=&quot;strategyextended#colocate_vars_with&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.colocate_vars_with&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;strategyextended#update_non_slot&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.update_non_slot&lt;/code&gt; &lt;/a&gt; 모두에 전달할 일관된 장치 세트를 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d87268b6a8ad6822e1a801c24a40186835816c0b" translate="yes" xml:space="preserve">
          <source>In addition to the above mentioned policies, a policy can also be &quot;infer&quot;. This Policy is deprecated, and it is not recommended. When a layer has an infer policy, it will infer the computation and variable dtype from the first input the first time the layer is called. Once the layer is called for the first time, the layer's policy will change to the dtype of the first input.</source>
          <target state="translated">위에서 언급 한 정책 외에도 정책은 &quot;추론&quot;될 수 있습니다. 이 정책은 더 이상 사용되지 않으며 권장되지 않습니다. 레이어에 추론 정책이 있으면 레이어를 처음 호출 할 때 첫 번째 입력에서 계산 및 변수 dtype을 추론합니다. 레이어가 처음 호출되면 레이어의 정책이 첫 번째 입력의 dtype으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="9b6a36c1b72da17b3ac1903013012d88a399c6a3" translate="yes" xml:space="preserve">
          <source>In addition, either &lt;code&gt;save_checkpoints_steps&lt;/code&gt; or &lt;code&gt;save_checkpoints_secs&lt;/code&gt; can be set (should not be both).</source>
          <target state="translated">또한 &lt;code&gt;save_checkpoints_steps&lt;/code&gt; 또는 &lt;code&gt;save_checkpoints_secs&lt;/code&gt; 를 설정할 수 있습니다 (둘다는 안 됨).</target>
        </trans-unit>
        <trans-unit id="555925888abcb6ab1ea3af1dd5cd6edbb9ea4874" translate="yes" xml:space="preserve">
          <source>In addition, this operation returns tensors &lt;code&gt;true_expected_count&lt;/code&gt; and &lt;code&gt;sampled_expected_count&lt;/code&gt; representing the number of times each of the target classes (&lt;code&gt;true_classes&lt;/code&gt;) and the sampled classes (&lt;code&gt;sampled_candidates&lt;/code&gt;) is expected to occur in an average tensor of sampled classes. These values correspond to &lt;code&gt;Q(y|x)&lt;/code&gt; defined in &lt;a href=&quot;http://www.tensorflow.org/extras/candidate_sampling.pdf&quot;&gt;this document&lt;/a&gt;. If &lt;code&gt;unique=True&lt;/code&gt;, then these are post-rejection probabilities and we compute them approximately.</source>
          <target state="translated">또한이 작업은 각 대상 클래스 ( &lt;code&gt;true_classes&lt;/code&gt; ) 및 샘플링 된 클래스 ( &lt;code&gt;sampled_candidates&lt;/code&gt; )가 샘플링 된 클래스의 평균 텐서에서 발생할 것으로 예상되는 횟수를 나타내는 &lt;code&gt;true_expected_count&lt;/code&gt; 및 &lt;code&gt;sampled_expected_count&lt;/code&gt; 텐서를 반환합니다 . 이 값 은 &lt;a href=&quot;http://www.tensorflow.org/extras/candidate_sampling.pdf&quot;&gt;이 문서에&lt;/a&gt; 정의 된 &lt;code&gt;Q(y|x)&lt;/code&gt; 해당합니다 . 경우 &lt;code&gt;unique=True&lt;/code&gt; , 다음이 포스트 거부 확률은 우리가 약을 계산한다.</target>
        </trans-unit>
        <trans-unit id="7dcd7b097b6d5afefa90c28e9166ddea07927f7a" translate="yes" xml:space="preserve">
          <source>In all cases, an exception is raised if &lt;em&gt;invalid&lt;/em&gt; parameters are passed, e.g.</source>
          <target state="translated">모든 경우에 &lt;em&gt;유효하지 않은&lt;/em&gt; 매개 변수가 전달 되면 예외가 발생합니다 ( 예 :</target>
        </trans-unit>
        <trans-unit id="528f7eb98213e1189f2afa9ee728c00ddb010d6a" translate="yes" xml:space="preserve">
          <source>In all cases, suppose &lt;code&gt;operator&lt;/code&gt; is a &lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt; of shape &lt;code&gt;[M, N]&lt;/code&gt;, and &lt;code&gt;x.shape = [N, R]&lt;/code&gt;. Then</source>
          <target state="translated">모든 경우에 &lt;code&gt;operator&lt;/code&gt; 가 &lt;code&gt;[M, N]&lt;/code&gt; 모양 의 &lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt; 이고 &lt;code&gt;x.shape = [N, R]&lt;/code&gt; . 그때</target>
        </trans-unit>
        <trans-unit id="93b282de1b601498957a67e9a5151ecf41c723ca" translate="yes" xml:space="preserve">
          <source>In all generality, they can have the same number of dimensions as the input &lt;code&gt;x&lt;/code&gt;, with identical sizes as &lt;code&gt;x&lt;/code&gt; for the dimensions that are not normalized over (the 'depth' dimension(s)), and dimension 1 for the others which are being normalized over. &lt;code&gt;mean&lt;/code&gt; and &lt;code&gt;variance&lt;/code&gt; in this case would typically be the outputs of &lt;a href=&quot;moments&quot;&gt;&lt;code&gt;tf.nn.moments(..., keepdims=True)&lt;/code&gt;&lt;/a&gt; during training, or running averages thereof during inference.</source>
          <target state="translated">모든 일반성, 그들은 입력으로서 치수 동일한 수의 수 &lt;code&gt;x&lt;/code&gt; 와 같은 동일한 크기, &lt;code&gt;x&lt;/code&gt; 위에 정규화되지 않은 치수를 타인합니다 ( &quot;깊이&quot;치수 (S)) 및 치수도 1은 인되고 정상화되었습니다. 이 경우 &lt;code&gt;mean&lt;/code&gt; 과 &lt;code&gt;variance&lt;/code&gt; 은 일반적으로 훈련 중 &lt;a href=&quot;moments&quot;&gt; &lt;code&gt;tf.nn.moments(..., keepdims=True)&lt;/code&gt; &lt;/a&gt; 의 출력 또는 추론 중 평균 실행입니다.</target>
        </trans-unit>
        <trans-unit id="956b77064ba946148cb66db1a94e9bc12bc62027" translate="yes" xml:space="preserve">
          <source>In case a simplified &lt;code&gt;str&lt;/code&gt; version of the path is needed from an &lt;code&gt;os.PathLike&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;os.PathLike&lt;/code&gt; 객체 에서 경로 의 단순화 된 &lt;code&gt;str&lt;/code&gt; 버전이 필요한 경우</target>
        </trans-unit>
        <trans-unit id="ff1717d00a3a0045ddd9f92c5cc529a4e7c9f003" translate="yes" xml:space="preserve">
          <source>In case of invalid &lt;code&gt;merge_mode&lt;/code&gt; argument.</source>
          <target state="translated">잘못된 &lt;code&gt;merge_mode&lt;/code&gt; 인수의 경우</target>
        </trans-unit>
        <trans-unit id="5ec3c64c6374329c52184178b1fd4857d4d1aac9" translate="yes" xml:space="preserve">
          <source>In case of tie, the rounding mode used is &quot;half to even&quot;.</source>
          <target state="translated">동점 인 경우, 사용 된 반올림 모드는 &quot;반올림&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="ba5137fc820e731c1a5875992af949685dd9a61a" translate="yes" xml:space="preserve">
          <source>In combination with &lt;code&gt;export_meta_graph()&lt;/code&gt;, this function can be used to</source>
          <target state="translated">와 조합 &lt;code&gt;export_meta_graph()&lt;/code&gt; 이 함수에 사용될 수있다</target>
        </trans-unit>
        <trans-unit id="472a2f767cd2905e561f41c34043559b02af126d" translate="yes" xml:space="preserve">
          <source>In contrast to the &lt;code&gt;mean&lt;/code&gt; function which returns a scalar with the mean, this function returns an average tensor with the same shape as the input tensors.</source>
          <target state="translated">받는 반면 &lt;code&gt;mean&lt;/code&gt; , 평균과 스칼라 함수를 리턴이 함수는 입력 텐서 같은 형상 평균 텐서를 반환한다.</target>
        </trans-unit>
        <trans-unit id="911ecdd444d109bdd2686fa0899f4e17288b1949" translate="yes" xml:space="preserve">
          <source>In detail, the grayscale morphological 2-D dilation is the max-sum correlation (for consistency with &lt;code&gt;conv2d&lt;/code&gt;, we use unmirrored filters):</source>
          <target state="translated">구체적으로, 그레이 스케일 형태 학적 2-D 확장은 최대-합 상관 관계입니다 ( &lt;code&gt;conv2d&lt;/code&gt; 와의 일관성을 위해 미러되지 않은 필터를 사용합니다).</target>
        </trans-unit>
        <trans-unit id="010b81280676156048e3aae3d209bcf71a9b3066" translate="yes" xml:space="preserve">
          <source>In detail, the grayscale morphological 2-D erosion is given by:</source>
          <target state="translated">상세하게, 그레이 스케일 형태 학적 2-D 침식은 다음에 의해 주어진다 :</target>
        </trans-unit>
        <trans-unit id="517b8d5a149f4c161ca1ea27c45c37a98c18260e" translate="yes" xml:space="preserve">
          <source>In detail, with the default NHWC format,</source>
          <target state="translated">자세하게는 기본 NHWC 형식으로</target>
        </trans-unit>
        <trans-unit id="39ee2fb212e9ff65eb60f4c2eed006218ac4350f" translate="yes" xml:space="preserve">
          <source>In distributed setting for a non-chief worker, you can use following:</source>
          <target state="translated">비 임시 직원에 대한 분산 설정에서 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="432fd70bbc9af278575edb8550ab4d0e6d429837" translate="yes" xml:space="preserve">
          <source>In each mask field (&lt;code&gt;begin_mask&lt;/code&gt;, &lt;code&gt;end_mask&lt;/code&gt;, &lt;code&gt;ellipsis_mask&lt;/code&gt;, &lt;code&gt;new_axis_mask&lt;/code&gt;, &lt;code&gt;shrink_axis_mask&lt;/code&gt;) the ith bit will correspond to the ith spec.</source>
          <target state="translated">각 마스크 필드 ( &lt;code&gt;begin_mask&lt;/code&gt; , &lt;code&gt;end_mask&lt;/code&gt; , &lt;code&gt;ellipsis_mask&lt;/code&gt; , &lt;code&gt;new_axis_mask&lt;/code&gt; , &lt;code&gt;shrink_axis_mask&lt;/code&gt; )에서 i 번째 비트는 i 번째 스펙에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="a827b2d32c94f4d078081b87422b337df7153cca" translate="yes" xml:space="preserve">
          <source>In each repetition, this dataset fills a buffer with &lt;code&gt;buffer_size&lt;/code&gt; elements, then randomly samples elements from this buffer, replacing the selected elements with new elements. For perfect shuffling, set the buffer size equal to the full size of the dataset.</source>
          <target state="translated">각 반복에서이 데이터 세트는 &lt;code&gt;buffer_size&lt;/code&gt; 요소 로 버퍼를 채우고이 버퍼에서 요소를 무작위로 샘플링하여 선택한 요소를 새 요소로 바꿉니다. 완벽한 셔플 링을 위해 버퍼 크기를 데이터 세트의 전체 크기와 동일하게 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b5bcda8bd9453fe45c3ad8b95cc83910933e573a" translate="yes" xml:space="preserve">
          <source>In eager mode, no special code is needed to initialize the table. Example usage in eager mode:</source>
          <target state="translated">열망 모드에서는 테이블을 초기화하는 데 특별한 코드가 필요하지 않습니다. 열망 모드에서의 사용 예 :</target>
        </trans-unit>
        <trans-unit id="8a80543ed8233233bcba2882c158c2bd26a1a267" translate="yes" xml:space="preserve">
          <source>In eager mode, this directly updates the loss scale, so that calling &lt;code&gt;__call__&lt;/code&gt; will return the newly updated loss scale. In graph mode, this returns an op that, when evaluated, updates the loss scale.</source>
          <target state="translated">열망 모드에서 이는 손실 스케일을 직접 업데이트하므로 &lt;code&gt;__call__&lt;/code&gt; 을 호출 하면 새로 업데이트 된 손실 스케일이 반환됩니다. 그래프 모드에서는 평가시 손실 스케일을 업데이트하는 op를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="71ccf90ba0d4e13bfe64aa70496805e8e26edd75" translate="yes" xml:space="preserve">
          <source>In either case above, the numpy ndarray (either the caller provided or the auto-converted) must have the compatible type with dtype.</source>
          <target state="translated">위의 두 경우 모두 numpy ndarray (호출자 또는 자동 변환 된)는 dtype과 호환되는 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="458f9bf1f3a55d57242c3dfd6a8b1b2360358c13" translate="yes" xml:space="preserve">
          <source>In general multiprocessing.Pool can interact quite badly with other, seemingly unrelated, parts of a codebase due to Pool's reliance on fork. This method cleans up all pools which are known to belong to Keras (and thus can be safely terminated).</source>
          <target state="translated">일반적으로 멀티 프로세싱 풀은 포크에 대한 의존성으로 인해 코드베이스의 다른 부분과 관련이없는 것처럼 보일 수 있습니다. 이 방법은 Keras에 속하는 것으로 알려진 모든 풀을 정리하므로 안전하게 종료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05fa93477d180d1acfa7da38b422f9dbed979a61" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;../../devicespec#from_string&quot;&gt;&lt;code&gt;DeviceSpec.from_string&lt;/code&gt;&lt;/a&gt; should completely replace &lt;a href=&quot;../../devicespec#parse_from_string&quot;&gt;&lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../devicespec#replace&quot;&gt;&lt;code&gt;DeviceSpec.replace&lt;/code&gt;&lt;/a&gt; should completely replace setting attributes directly.</source>
          <target state="translated">일반적으로, &lt;a href=&quot;../../devicespec#from_string&quot;&gt; &lt;code&gt;DeviceSpec.from_string&lt;/code&gt; 는&lt;/a&gt; 완전히 교체해야 &lt;a href=&quot;../../devicespec#parse_from_string&quot;&gt; &lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt; 을&lt;/a&gt; 하고 &lt;a href=&quot;../../devicespec#replace&quot;&gt; &lt;code&gt;DeviceSpec.replace&lt;/code&gt; 는&lt;/a&gt; 완전히 직접 설정 속성을 교체해야합니다.</target>
        </trans-unit>
        <trans-unit id="c1759e56b5d26a55f209d28b2c39da67c3d2c868" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;devicespec#from_string&quot;&gt;&lt;code&gt;DeviceSpec.from_string&lt;/code&gt;&lt;/a&gt; should completely replace &lt;a href=&quot;devicespec#parse_from_string&quot;&gt;&lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;devicespec#replace&quot;&gt;&lt;code&gt;DeviceSpec.replace&lt;/code&gt;&lt;/a&gt; should completely replace setting attributes directly.</source>
          <target state="translated">일반적으로, &lt;a href=&quot;devicespec#from_string&quot;&gt; &lt;code&gt;DeviceSpec.from_string&lt;/code&gt; 는&lt;/a&gt; 완전히 교체해야 &lt;a href=&quot;devicespec#parse_from_string&quot;&gt; &lt;code&gt;DeviceSpec.parse_from_string&lt;/code&gt; 을&lt;/a&gt; 하고 &lt;a href=&quot;devicespec#replace&quot;&gt; &lt;code&gt;DeviceSpec.replace&lt;/code&gt; 는&lt;/a&gt; 완전히 직접 설정 속성을 교체해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6b1248ae5eafe23fc297bb9a228b2f925c57498" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;0 &amp;lt; dim(mask) = K &amp;lt;= dim(tensor)&lt;/code&gt;, and &lt;code&gt;mask&lt;/code&gt;'s shape must match the first K dimensions of &lt;code&gt;tensor&lt;/code&gt;'s shape. We then have: &lt;code&gt;boolean_mask(tensor, mask)[i, j1,...,jd] = tensor[i1,...,iK,j1,...,jd]&lt;/code&gt; where &lt;code&gt;(i1,...,iK)&lt;/code&gt; is the ith &lt;code&gt;True&lt;/code&gt; entry of &lt;code&gt;mask&lt;/code&gt; (row-major order). The &lt;code&gt;axis&lt;/code&gt; could be used with &lt;code&gt;mask&lt;/code&gt; to indicate the axis to mask from. In that case, &lt;code&gt;axis + dim(mask) &amp;lt;= dim(tensor)&lt;/code&gt; and &lt;code&gt;mask&lt;/code&gt;'s shape must match the first &lt;code&gt;axis + dim(mask)&lt;/code&gt; dimensions of &lt;code&gt;tensor&lt;/code&gt;'s shape.</source>
          <target state="translated">일반적으로 &lt;code&gt;0 &amp;lt; dim(mask) = K &amp;lt;= dim(tensor)&lt;/code&gt; 이며 &lt;code&gt;mask&lt;/code&gt; 의 모양은 &lt;code&gt;tensor&lt;/code&gt; 모양 의 첫 번째 K 치수와 일치해야합니다 . 우리는 다음과 같습니다 &lt;code&gt;boolean_mask(tensor, mask)[i, j1,...,jd] = tensor[i1,...,iK,j1,...,jd]&lt;/code&gt; 여기서, &lt;code&gt;(i1,...,iK)&lt;/code&gt; &lt;code&gt;mask&lt;/code&gt; 의 i 번째 &lt;code&gt;True&lt;/code&gt; 항목입니다 (행 순서). &lt;code&gt;axis&lt;/code&gt; 함께 사용할 수있는 &lt;code&gt;mask&lt;/code&gt; 에서 마스크 할 수있는 축을 나타냅니다. 이 경우에서, &lt;code&gt;axis + dim(mask) &amp;lt;= dim(tensor)&lt;/code&gt; 과 &lt;code&gt;mask&lt;/code&gt; 의 형태는 첫 번째 일치해야 &lt;code&gt;axis + dim(mask)&lt;/code&gt; 의 치수 &lt;code&gt;tensor&lt;/code&gt; 의 형상 '.</target>
        </trans-unit>
        <trans-unit id="df73d635dcf19899192fc8057c9a906f0ba749f2" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;order(c) = order(a) + order(b) - 2*len(axes[0])&lt;/code&gt;.</source>
          <target state="translated">일반적으로 &lt;code&gt;order(c) = order(a) + order(b) - 2*len(axes[0])&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8197a907e7eede9a4ab49989b9c67df1ecf6abfd" translate="yes" xml:space="preserve">
          <source>In general, Lambda layers can be convenient for simple stateless computation, but anything more complex should use a subclass Layer instead.</source>
          <target state="translated">일반적으로 Lambda 레이어는 간단한 상태 비 저장 계산에 편리 할 수 ​​있지만 더 복잡한 것은 하위 클래스 인 Layer를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f38c9626976c1df9169c1e0b677516dea631b670" translate="yes" xml:space="preserve">
          <source>In general, it is recommended to create stateful objects like &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt; outside of &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; and passing them as arguments.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; 외부에서 &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 과 같은 상태 저장 객체를 만들어 인수로 전달하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="75611dab36791d918a60f2d742b07af8d1fae0c4" translate="yes" xml:space="preserve">
          <source>In general, the &lt;code&gt;equation&lt;/code&gt; is obtained from the more familiar element-wise equation by 1. removing variable names, brackets, and commas, 2. replacing &quot;*&quot; with &quot;,&quot;, 3. dropping summation signs, and 4. moving the output to the right, and replacing &quot;=&quot; with &quot;-&amp;gt;&quot;.</source>
          <target state="translated">일반적으로 &lt;code&gt;equation&lt;/code&gt; 은 변수 이름, 대괄호 및 쉼표를 제거하고 2. &quot;*&quot;를 &quot;,&quot;로 대체하고, 3. 요약 부호를 삭제하고, 4. 출력을 이동하여보다 친숙한 요소 별 방정식에서 구합니다. 오른쪽으로 이동하고 &quot;=&quot;를 &quot;-&amp;gt;&quot;로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="81ba21f1479a022109ab2f3d99be347c7bb01f17" translate="yes" xml:space="preserve">
          <source>In general, you should use the &lt;code&gt;with strategy.scope():&lt;/code&gt; API, but this alternative may be convenient in notebooks where you would have to put each cell in a &lt;code&gt;with strategy.scope():&lt;/code&gt; block.</source>
          <target state="translated">일반적으로 &lt;code&gt;with strategy.scope():&lt;/code&gt; API 를 사용해야 하지만,이 대안은 각 셀을 &lt;code&gt;with strategy.scope():&lt;/code&gt; 블록 에 넣어야하는 노트북에서 편리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="c093e0c853b18b211b082dc234fa39265b721fa2" translate="yes" xml:space="preserve">
          <source>In graph mode, this returns an operation which when executed performs the write. In eager mode, the write is performed by the method itself and there is no return value.</source>
          <target state="translated">그래프 모드에서는 실행시 쓰기를 수행하는 작업을 반환합니다. 열망 모드에서, 쓰기는 메소드 자체에 의해 수행되며 리턴 값은 없습니다.</target>
        </trans-unit>
        <trans-unit id="716f31f5a03aef3f69ebd13d12a35b86aebe2e30" translate="yes" xml:space="preserve">
          <source>In graph mode, you should typically call this method &lt;em&gt;once&lt;/em&gt; and use its result as the input to another computation. A typical loop will then call &lt;code&gt;tf.Session.run&lt;/code&gt; on the result of that computation. The loop will terminate when the &lt;code&gt;Iterator.get_next()&lt;/code&gt; operation raises &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt;. The following skeleton shows how to use this method when building a training loop:</source>
          <target state="translated">그래프 모드에서는 일반적으로이 메소드를 &lt;em&gt;한 번&lt;/em&gt; 호출 하고 그 결과를 다른 계산의 입력으로 사용해야합니다. 그런 다음 일반적인 루프는 해당 계산 결과에서 &lt;code&gt;tf.Session.run&lt;/code&gt; 을 호출 합니다. &lt;code&gt;Iterator.get_next()&lt;/code&gt; 조작이 &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; 를&lt;/a&gt; 발생 시키면 루프가 종료됩니다 . 다음 스켈레톤은 훈련 루프를 만들 때이 방법을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a6ca36a8e0927892e5adf0bea0071edf9a03306d" translate="yes" xml:space="preserve">
          <source>In many common cases, saving models for serving will be as simple as:</source>
          <target state="translated">많은 경우에 서비스를위한 모델 저장은 다음과 같이 간단합니다.</target>
        </trans-unit>
        <trans-unit id="0c1e157d5c07c3be9a526b99a8cd938ffdff518e" translate="yes" xml:space="preserve">
          <source>In most cases you can set session arguments as follows:</source>
          <target state="translated">대부분의 경우 세션 인수를 다음과 같이 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e583468a15187c915f71a5317544c6b871de6462" translate="yes" xml:space="preserve">
          <source>In other words,</source>
          <target state="translated">다시 말해,</target>
        </trans-unit>
        <trans-unit id="36ca12036e617d13dd1e10a27cdcc10a21abe207" translate="yes" xml:space="preserve">
          <source>In other words, if</source>
          <target state="translated">다시 말해</target>
        </trans-unit>
        <trans-unit id="68f09d96ffe8138bea778134c4c062b38232e1d6" translate="yes" xml:space="preserve">
          <source>In other words, it flattens each data samples of a batch.</source>
          <target state="translated">즉, 배치의 각 데이터 샘플을 평탄화합니다.</target>
        </trans-unit>
        <trans-unit id="0871ff786a8a3fd603a58b9722f796614ebc2719" translate="yes" xml:space="preserve">
          <source>In other words, the last dimension is treated as the &lt;code&gt;z&lt;/code&gt; vector.</source>
          <target state="translated">즉, 마지막 차원은 &lt;code&gt;z&lt;/code&gt; 벡터 로 취급됩니다 .</target>
        </trans-unit>
        <trans-unit id="78ff35f7c65003df3e7bcf3683132006bf742ac9" translate="yes" xml:space="preserve">
          <source>In parent, replace child_name's old definition with new_child.</source>
          <target state="translated">부모에서 child_name의 이전 정의를 new_child로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="e6a5bb936a13cf0b0b5a2a5c1cb9a4facd12daec" translate="yes" xml:space="preserve">
          <source>In particular, the tolerance is reduced to 1e-3 if at least one of the arguments is of type float16.</source>
          <target state="translated">특히, 인수 중 하나 이상이 float16 유형 인 경우 공차는 1e-3으로 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="44d0d4248217b7cffdeccf5ed82b70d82d1494ed" translate="yes" xml:space="preserve">
          <source>In particular, this adds any losses you have added with &lt;code&gt;tf.add_loss()&lt;/code&gt; to any regularization losses that have been added by regularization parameters on layers constructors e.g. &lt;code&gt;tf.layers&lt;/code&gt;. Be very sure to use this if you are constructing a loss_op manually. Otherwise regularization arguments on &lt;code&gt;tf.layers&lt;/code&gt; methods will not function.</source>
          <target state="translated">특히, 이것은 &lt;code&gt;tf.add_loss()&lt;/code&gt; 로 추가 한 손실을 레이어 생성자 (예 : &lt;code&gt;tf.layers&lt;/code&gt; )의 정규화 매개 변수에 의해 추가 된 정규화 손실에 추가합니다 . loss_op를 수동으로 구성하는 경우이 옵션을 사용해야합니다. 그렇지 않으면 &lt;code&gt;tf.layers&lt;/code&gt; 메소드의 정규화 인수 가 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e60680116f8f10f4ec9328db9798f3167d053000" translate="yes" xml:space="preserve">
          <source>In python 2.7, make sure to import the following: &lt;code&gt;from __future__ import print_function&lt;/code&gt;</source>
          <target state="translated">Python 2.7에서 다음을 가져와야합니다. &lt;code&gt;from __future__ import print_function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa32d137f104b735ab84633f3591ddf26cbba0ca" translate="yes" xml:space="preserve">
          <source>In short:</source>
          <target state="translated">한마디로 :</target>
        </trans-unit>
        <trans-unit id="88d124b3a5514b4439d86d509898719151ee7194" translate="yes" xml:space="preserve">
          <source>In signal processing, cross-correlation is a measure of similarity of two waveforms as a function of a time-lag applied to one of them. This is also known as a sliding dot product or sliding inner-product.</source>
          <target state="translated">신호 처리에서 교차 상관은 두 파형 중 하나에 적용된 시간 지연의 함수로서 두 파형의 유사성을 측정 한 것입니다. 이것을 슬라이딩 도트 제품 또는 슬라이딩 내부 제품이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="f3834a387ac572a1a80e915dcbd47e2584fd2d76" translate="yes" xml:space="preserve">
          <source>In some cases, such as a metric, we want to accumulate a bunch of updates on each replica independently and only aggregate when reading. This can be a big performance win when the value is read only rarely (maybe the value is only read at the end of an epoch or when checkpointing). These are variables created by passing &lt;code&gt;synchronization=ON_READ&lt;/code&gt; to the variable's constructor (and some value for &lt;code&gt;aggregation&lt;/code&gt;).</source>
          <target state="translated">메트릭과 같은 일부 경우에는 각 복제본에 여러 업데이트를 독립적으로 누적하고 읽을 때만 집계하려고합니다. 값을 거의 읽지 않을 때 (성공이 끝날 때 또는 체크 포인트 할 때만 값을 읽을 수 있음) 성능이 크게 향상 될 수 있습니다. 이러한 변수는 &lt;code&gt;synchronization=ON_READ&lt;/code&gt; 를 변수의 생성자 (및 &lt;code&gt;aggregation&lt;/code&gt; 값 ) 에 전달 하여 생성 된 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="f1db5fe6989f9a4d4881a86d7d0f8ee7689b077f" translate="yes" xml:space="preserve">
          <source>In some cases, the inferred shape may have unknown dimensions. If the caller has additional information about the values of these dimensions, &lt;a href=&quot;tensor#set_shape&quot;&gt;&lt;code&gt;Tensor.set_shape()&lt;/code&gt;&lt;/a&gt; can be used to augment the inferred shape.</source>
          <target state="translated">경우에 따라 유추 된 모양의 크기는 알 수 없습니다. 호출자에게 이러한 차원의 값에 대한 추가 정보가있는 경우 &lt;a href=&quot;tensor#set_shape&quot;&gt; &lt;code&gt;Tensor.set_shape()&lt;/code&gt; &lt;/a&gt; 를 사용하여 유추 된 모양을 보강 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88eb075661eb4f67a83a555945256eb9a90b0cc1" translate="yes" xml:space="preserve">
          <source>In subsequent layers, there is no need for the &lt;code&gt;input_shape&lt;/code&gt;:</source>
          <target state="translated">후속 레이어에서는 &lt;code&gt;input_shape&lt;/code&gt; 이 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="857fdd5affc004f92507d11901ea9986d0376b16" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;chief&lt;/em&gt; task, the &lt;code&gt;Supervisor&lt;/code&gt; works exactly as in the first example above. In the other tasks &lt;code&gt;sv.managed_session()&lt;/code&gt; waits for the Model to have been initialized before returning a session to the training code. The non-chief tasks depend on the chief task for initializing the model.</source>
          <target state="translated">에서 &lt;em&gt;최고&lt;/em&gt; 태스크가, &lt;code&gt;Supervisor&lt;/code&gt; 정확히 위의 첫 번째 예에서와 같이 작동합니다. 다른 작업에서 &lt;code&gt;sv.managed_session()&lt;/code&gt; 은 세션이 훈련 코드로 반환되기 전에 모델이 초기화 될 때까지 기다립니다. 비 임시 작업은 모델을 초기화하는 주요 작업에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a86c807225e5481b2e9889d17693e52a348a5bb6" translate="yes" xml:space="preserve">
          <source>In the above example, the input Tensor with the shape of &lt;code&gt;[1, 3]&lt;/code&gt; is broadcasted to output Tensor with shape of &lt;code&gt;[3, 3]&lt;/code&gt;.</source>
          <target state="translated">상기 예에서, &lt;code&gt;[1, 3]&lt;/code&gt; 형태의 입력 텐서 는 &lt;code&gt;[3, 3]&lt;/code&gt; 형태의 텐서를 출력하도록 방송된다 .</target>
        </trans-unit>
        <trans-unit id="0d6b4719a2c3219a2bbde7c4f83c1120564a1d57" translate="yes" xml:space="preserve">
          <source>In the case of dict instances, the sequence consists of the values, sorted by key to ensure deterministic behavior. This is true also for OrderedDict instances: their sequence order is ignored, the sorting order of keys is used instead. The same convention is followed in pack_sequence_as. This correctly repacks dicts and OrderedDicts after they have been flattened, and also allows flattening an OrderedDict and then repacking it back using a corresponding plain dict, or vice-versa. Dictionaries with non-sortable keys cannot be flattened.</source>
          <target state="translated">dict 인스턴스의 경우 시퀀스는 결정적인 동작을 보장하기 위해 키별로 정렬 된 값으로 구성됩니다. OrderedDict 인스턴스에서도 마찬가지입니다. 시퀀스 순서는 무시되고 키의 정렬 순서가 대신 사용됩니다. pack_sequence_as에서도 동일한 규칙이 따릅니다. dicts 및 OrderedDicts가 전개 된 후 올바르게 재 포장되고 OrderedDict를 전개 한 다음 해당 일반 dict를 사용하여 다시 패키징하거나 그 반대로도 가능합니다. 정렬 할 수없는 키가있는 사전은 병합 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="51ed01e4d71ead3866c98e46077be45f69b99800" translate="yes" xml:space="preserve">
          <source>In the case that &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;, computes for 0 &amp;lt;= b &amp;lt; batch_size, 0 &amp;lt;= x[i] &amp;lt; output_spatial_shape[i], 0 &amp;lt;= c &amp;lt; num_channels:</source>
          <target state="translated">&lt;code&gt;data_format&lt;/code&gt; 이 &quot;NC&quot;로 시작하지 않는 경우 0 &amp;lt;= b &amp;lt;batch_size, 0 &amp;lt;= x [i] &amp;lt;output_spatial_shape [i], 0 &amp;lt;= c &amp;lt;num_channels를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="f7489a66c28d483acf8142e46fd3d2bce2a97dfd" translate="yes" xml:space="preserve">
          <source>In the case that &lt;code&gt;data_format&lt;/code&gt; does start with &lt;code&gt;&quot;NC&quot;&lt;/code&gt;, the &lt;code&gt;input&lt;/code&gt; and output (but not the &lt;code&gt;filter&lt;/code&gt;) are simply transposed as follows:</source>
          <target state="translated">경우에서 &lt;code&gt;data_format&lt;/code&gt; 은 시작 않는다 &lt;code&gt;&quot;NC&quot;&lt;/code&gt; 는 &lt;code&gt;input&lt;/code&gt; 및 출력 (그러나 &lt;code&gt;filter&lt;/code&gt; 는 다음과 같이 간단하게 전치된다)</target>
        </trans-unit>
        <trans-unit id="15f5b22f7879c5fdc5ce4821da71380664867c9e" translate="yes" xml:space="preserve">
          <source>In the case that &lt;code&gt;data_format&lt;/code&gt; does start with &lt;code&gt;&quot;NC&quot;&lt;/code&gt;, the &lt;code&gt;input&lt;/code&gt; and output (but not the &lt;code&gt;filters&lt;/code&gt;) are simply transposed as follows:</source>
          <target state="translated">하는 경우 &lt;code&gt;data_format&lt;/code&gt; 이 시작 않는다 &lt;code&gt;&quot;NC&quot;&lt;/code&gt; 는 &lt;code&gt;input&lt;/code&gt; 및 출력 (하지만하지 &lt;code&gt;filters&lt;/code&gt; 다음과 같이) 단순히 전치된다 :</target>
        </trans-unit>
        <trans-unit id="14d0f86400986de97cae42ee5dcb99d4d7671a66" translate="yes" xml:space="preserve">
          <source>In the case that &lt;code&gt;data_format&lt;/code&gt; starts with &lt;code&gt;&quot;NC&quot;&lt;/code&gt;, the &lt;code&gt;input&lt;/code&gt; and output are simply transposed as follows:</source>
          <target state="translated">그 경우 &lt;code&gt;data_format&lt;/code&gt; 를 함께 시작 &lt;code&gt;&quot;NC&quot;&lt;/code&gt; 의 &lt;code&gt;input&lt;/code&gt; 은 다음과 같이 간단히 전치 출력된다 :</target>
        </trans-unit>
        <trans-unit id="7585f71a96a6a1ba424fe17e28a732edc83fab83" translate="yes" xml:space="preserve">
          <source>In the case where texts contains lists, we assume each entry of the lists to be a token.</source>
          <target state="translated">텍스트에 목록이 포함 된 경우 목록의 각 항목이 토큰 인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="441c8788356ac631e91eb9d0cc144a89f12dd164" translate="yes" xml:space="preserve">
          <source>In the common case where the 'depth' dimension is the last dimension in the input tensor &lt;code&gt;x&lt;/code&gt;, they may be one dimensional tensors of the same size as the 'depth' dimension. This is the case for example for the common &lt;code&gt;[batch, depth]&lt;/code&gt; layout of fully-connected layers, and &lt;code&gt;[batch, height, width, depth]&lt;/code&gt; for convolutions. &lt;code&gt;mean&lt;/code&gt; and &lt;code&gt;variance&lt;/code&gt; in this case would typically be the outputs of &lt;a href=&quot;moments&quot;&gt;&lt;code&gt;tf.nn.moments(..., keepdims=False)&lt;/code&gt;&lt;/a&gt; during training, or running averages thereof during inference.</source>
          <target state="translated">'깊이'치수가 입력 텐서 &lt;code&gt;x&lt;/code&gt; 의 마지막 치수 인 일반적인 경우 , 이들은 '깊이'치수와 동일한 크기의 1 차원 텐서 일 수 있습니다. 예를 들어 완전히 연결된 레이어 의 일반적인 &lt;code&gt;[batch, depth]&lt;/code&gt; 레이아웃과 컨볼 루션의 경우 &lt;code&gt;[batch, height, width, depth]&lt;/code&gt; 에 해당합니다. 이 경우 &lt;code&gt;mean&lt;/code&gt; 및 &lt;code&gt;variance&lt;/code&gt; 은 일반적으로 훈련 중 &lt;a href=&quot;moments&quot;&gt; &lt;code&gt;tf.nn.moments(..., keepdims=False)&lt;/code&gt; &lt;/a&gt; 의 출력 또는 추론 중 평균 실행입니다.</target>
        </trans-unit>
        <trans-unit id="a2fdaa32535bc5d1425dc1f4179459c262cc1196" translate="yes" xml:space="preserve">
          <source>In the event that L and D are positive-definite, and U = V, solves and determinants can be done using a Cholesky factorization.</source>
          <target state="translated">L과 D가 양의 한정이고 U = V 인 경우, hole 레 스키 인수 분해를 사용하여 풀고 결정자를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f900f7fb08d74d77d09a58c36e14dae29b1b5604" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt;, and &lt;code&gt;e&lt;/code&gt; are symbolic &lt;code&gt;Tensor&lt;/code&gt; objects, whereas &lt;code&gt;result&lt;/code&gt; is a numpy array that stores a concrete value:</source>
          <target state="translated">다음 예제에서 &lt;code&gt;c&lt;/code&gt; , &lt;code&gt;d&lt;/code&gt; 및 &lt;code&gt;e&lt;/code&gt; 는 기호 &lt;code&gt;Tensor&lt;/code&gt; 객체 인 반면 &lt;code&gt;result&lt;/code&gt; 는 구체적 값을 저장하는 numpy 배열입니다.</target>
        </trans-unit>
        <trans-unit id="f8159cd552f6905daabd6b0759c879dc3cb02b31" translate="yes" xml:space="preserve">
          <source>In the following example, both &lt;code&gt;z&lt;/code&gt; and &lt;code&gt;w&lt;/code&gt; will be scaled by the same &lt;code&gt;y&lt;/code&gt;. It is important to note that if we didn't assign &lt;code&gt;scalar_name&lt;/code&gt; and used a different name for z and w that a &lt;code&gt;ValueError&lt;/code&gt; would be thrown because it couldn't reuse the variable.</source>
          <target state="translated">다음 예제에서 &lt;code&gt;z&lt;/code&gt; 와 &lt;code&gt;w&lt;/code&gt; 는 모두 같은 &lt;code&gt;y&lt;/code&gt; 로 조정됩니다 . &lt;code&gt;scalar_name&lt;/code&gt; 을 할당하지 않고 z와 w에 다른 이름을 사용 하면 변수를 재사용 할 수 없으므로 &lt;code&gt;ValueError&lt;/code&gt; 가 발생 한다는 점에 유의 해야합니다.</target>
        </trans-unit>
        <trans-unit id="fd46fe1d494a119de52de4263e78cb6431e1f9cf" translate="yes" xml:space="preserve">
          <source>In the following examples, each input in the range &lt;code&gt;[0, 1000000)&lt;/code&gt; is assigned the same value. All other inputs are assigned &lt;code&gt;default_value&lt;/code&gt; 0. Note that a literal 0 in inputs will result in the same default ID.</source>
          <target state="translated">다음 예에서 &lt;code&gt;[0, 1000000)&lt;/code&gt; 범위의 각 입력 에는 동일한 값이 할당됩니다. 다른 모든 입력에는 &lt;code&gt;default_value&lt;/code&gt; 0 이 할당됩니다. 입력 의 리터럴 0은 동일한 기본 ID를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="7a0a21a5321a939e4c6ec979642cca57482d54e4" translate="yes" xml:space="preserve">
          <source>In the future we may use this object to add more information about result of run without changing the Hook API.</source>
          <target state="translated">앞으로이 API를 사용하여 Hook API를 변경하지 않고 실행 결과에 대한 추가 정보를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="321470037eed07ac96098def67a575832b48e3a6" translate="yes" xml:space="preserve">
          <source>In the general case, produces an output tensor where:</source>
          <target state="translated">일반적인 경우 출력 텐서를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="14120b56799edd7f482d4829806eaaaa1dc71825" translate="yes" xml:space="preserve">
          <source>In the integer case, the random integers are slightly biased unless &lt;code&gt;maxval - minval&lt;/code&gt; is an exact power of two. The bias is small for values of &lt;code&gt;maxval - minval&lt;/code&gt; significantly smaller than the range of the output (either &lt;code&gt;2**32&lt;/code&gt; or &lt;code&gt;2**64&lt;/code&gt;).</source>
          <target state="translated">정수의 경우, &lt;code&gt;maxval - minval&lt;/code&gt; 이 2의 정확한 거듭 제곱이 아니면 임의의 정수는 약간 바이어스됩니다 . &lt;code&gt;maxval - minval&lt;/code&gt; 값이 출력 범위 ( &lt;code&gt;2**32&lt;/code&gt; 또는 &lt;code&gt;2**64&lt;/code&gt; ) 보다 상당히 작은 경우 바이어스가 작습니다 .</target>
        </trans-unit>
        <trans-unit id="80812666c20de5f1b3022c6818967c980a3249c2" translate="yes" xml:space="preserve">
          <source>In the normal case, this returns the grpc path (grpc://1.2.3.4:8470) of first instance in the ClusterSpec returned by the cluster_spec function.</source>
          <target state="translated">일반적인 경우 cluster_spec 함수가 반환 한 ClusterSpec에서 첫 번째 인스턴스의 grpc 경로 (grpc : //1.2.3.4 : 8470)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d5d60edca816e4a2eab7c2afcd535e33631948ae" translate="yes" xml:space="preserve">
          <source>In the snippet below, each of the four examples has only a single floating-pointing value, and both &lt;code&gt;y_pred&lt;/code&gt; and &lt;code&gt;y_true&lt;/code&gt; have the shape &lt;code&gt;[batch_size]&lt;/code&gt;.</source>
          <target state="translated">아래 스 니펫에서 네 가지 예제 각각은 단일 부동 소수점 &lt;code&gt;y_true&lt;/code&gt; 가지며 &lt;code&gt;y_pred&lt;/code&gt; 및 y_true 는 &lt;code&gt;[batch_size]&lt;/code&gt; 모양 입니다.</target>
        </trans-unit>
        <trans-unit id="8c495e13d301e9ffca0e963e7389b1c288c748a1" translate="yes" xml:space="preserve">
          <source>In the snippet below, there is &lt;code&gt;# classes&lt;/code&gt; floating pointing values per example. The shape of both &lt;code&gt;y_pred&lt;/code&gt; and &lt;code&gt;y_true&lt;/code&gt; are &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;.</source>
          <target state="translated">아래 스 니펫에는 예제 당 &lt;code&gt;# classes&lt;/code&gt; 부동 소수점 값이 있습니다. &lt;code&gt;y_pred&lt;/code&gt; 및 &lt;code&gt;y_true&lt;/code&gt; 의 모양 은 &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ca0a25a87addb666ce34fdcd635cb0fb4ef8b8c8" translate="yes" xml:space="preserve">
          <source>In the snippet below, there is a single floating point value per example for &lt;code&gt;y_true&lt;/code&gt; and &lt;code&gt;# classes&lt;/code&gt; floating pointing values per example for &lt;code&gt;y_pred&lt;/code&gt;. The shape of &lt;code&gt;y_true&lt;/code&gt; is &lt;code&gt;[batch_size]&lt;/code&gt; and the shape of &lt;code&gt;y_pred&lt;/code&gt; is &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;.</source>
          <target state="translated">(가) 아래의 코드에서, 예를 들어 당 하나의 부동 소수점 값있다 &lt;code&gt;y_true&lt;/code&gt; 및 &lt;code&gt;# classes&lt;/code&gt; 에 대한 예에 따라 값을 가리키는 부동 &lt;code&gt;y_pred&lt;/code&gt; 이 . &lt;code&gt;y_true&lt;/code&gt; 의 모양 은 &lt;code&gt;[batch_size]&lt;/code&gt; 이고 &lt;code&gt;y_pred&lt;/code&gt; 의 모양 은 &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="edfa06a723b9aaa9b154321c98c5e60a3a87f241" translate="yes" xml:space="preserve">
          <source>In the special case that &lt;code&gt;dilation_rate&lt;/code&gt; is uniformly 1, this simply returns:</source>
          <target state="translated">&lt;code&gt;dilation_rate&lt;/code&gt; 가 균일하게 1 인 특수한 경우 , 이것은 단순히 다음을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1c3bff4b004264f13b9d5870cad9395d93194227" translate="yes" xml:space="preserve">
          <source>In the training program you will just have to run the returned Op.</source>
          <target state="translated">교육 프로그램에서는 반환 된 Op를 실행하면됩니다.</target>
        </trans-unit>
        <trans-unit id="d2890695a83ce1f36c63f8da28ce25a62b890df2" translate="yes" xml:space="preserve">
          <source>In the training program, every worker will run the train_op as if not synchronized.</source>
          <target state="translated">교육 프로그램에서 모든 작업자는 동기화되지 않은 것처럼 train_op을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="050220458220cef5d8bae5a963a516346fce1ddc" translate="yes" xml:space="preserve">
          <source>In these cases, using &lt;a href=&quot;tensor#shape&quot;&gt;&lt;code&gt;tf.Tensor.shape&lt;/code&gt;&lt;/a&gt; will return more informative results.</source>
          <target state="translated">이 경우 &lt;a href=&quot;tensor#shape&quot;&gt; &lt;code&gt;tf.Tensor.shape&lt;/code&gt; &lt;/a&gt; 를 사용 하면보다 유익한 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2660fc8b716618056f3f2486b9d3eda40cce99bb" translate="yes" xml:space="preserve">
          <source>In this case, no TRT engines will be built or saved in the converted SavedModel. But if input data is available during conversion, we can still build and save the TRT engines to reduce the cost during inference (see option 2 below).</source>
          <target state="translated">이 경우 변환 된 SavedModel에 TRT 엔진이 빌드되거나 저장되지 않습니다. 그러나 변환 중에 입력 데이터를 사용할 수있는 경우에도 추론 중 비용을 줄이기 위해 TRT 엔진을 빌드하고 저장할 수 있습니다 (아래 옵션 2 참조).</target>
        </trans-unit>
        <trans-unit id="e5fc3e497d02a7bd7ecbf4bfc91e80a8c16dab8c" translate="yes" xml:space="preserve">
          <source>In this case, the L2-norm of the output tensor is &lt;code&gt;clip_norm&lt;/code&gt;.</source>
          <target state="translated">이 경우 출력 텐서의 L2-norm은 &lt;code&gt;clip_norm&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fb53270a9519bb4c8fc2a2da8dd867f7bc0eb615" translate="yes" xml:space="preserve">
          <source>In this case, the average L2-norm of the output tensor is &lt;code&gt;clip_norm&lt;/code&gt;.</source>
          <target state="translated">이 경우 출력 텐서의 평균 L2-norm은 &lt;code&gt;clip_norm&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1634e039fe69dd10f4980724390eee9597b30add" translate="yes" xml:space="preserve">
          <source>In this case, there is only one device, so this is only a thin wrapper around the input dataset. It will, however, prefetch the input data to the specified device. The returned distributed dataset can be iterated over similar to how regular datasets can.</source>
          <target state="translated">이 경우 장치가 하나뿐이므로 입력 데이터 세트 주위의 얇은 래퍼 일뿐입니다. 그러나 입력 데이터를 지정된 장치로 프리 페치합니다. 리턴 된 분산 데이터 세트는 일반 데이터 세트와 유사한 방식으로 반복 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72a8363320500d7fb6d0fa2afac0abec913757b2" translate="yes" xml:space="preserve">
          <source>In this way, one engine will be built/saved for each unique input shapes of the TRTEngineOp. This is good for applications that cannot afford building engines during inference but have access to input data that is similar to the one used in production (for example, that has the same input shapes). Also, the generated TRT engines is platform dependent, so we need to run &lt;code&gt;build()&lt;/code&gt; in an environment that is similar to production (e.g. with same type of GPU).</source>
          <target state="translated">이러한 방식으로 TRTEngineOp의 고유 한 입력 형태마다 하나의 엔진이 구축 / 저장됩니다. 이는 추론 중에 엔진을 구축 할 수 없지만 생산에 사용 된 것과 유사한 입력 데이터 (예 : 동일한 입력 모양)에 액세스 할 수있는 응용 프로그램에 적합합니다. 또한 생성 된 TRT 엔진은 플랫폼에 따라 다르므로 프로덕션과 유사한 환경 (예 : 동일한 유형의 GPU)에서 &lt;code&gt;build()&lt;/code&gt; 를 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d79a01d9608f76fd6bbb337a8da6d7bca3045f57" translate="yes" xml:space="preserve">
          <source>In your function passed to &lt;a href=&quot;../../../distribute/strategy#experimental_run_v2&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_run_v2&lt;/code&gt;&lt;/a&gt;, compute a list of (update, variable) pairs. For example, the update might be a the gradient of the loss with respect to the variable.</source>
          <target state="translated">&lt;a href=&quot;../../../distribute/strategy#experimental_run_v2&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_run_v2&lt;/code&gt; 에&lt;/a&gt; 전달 된 함수 에서 (업데이트, 변수) 쌍의 목록을 계산하십시오. 예를 들어, 업데이트는 변수에 대한 손실의 기울기 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2be7b3f65cefd5207608f7e806a86637c30fe91" translate="yes" xml:space="preserve">
          <source>In your function passed to &lt;a href=&quot;strategy#experimental_run_v2&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_run_v2&lt;/code&gt;&lt;/a&gt;, compute a list of (update, variable) pairs. For example, the update might be a the gradient of the loss with respect to the variable.</source>
          <target state="translated">&lt;a href=&quot;strategy#experimental_run_v2&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_run_v2&lt;/code&gt; 에&lt;/a&gt; 전달 된 함수 에서 (업데이트, 변수) 쌍의 목록을 계산하십시오. 예를 들어, 업데이트는 변수에 대한 손실의 기울기 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce8d799de35e2f145c21e92a425ca2ee660eb326" translate="yes" xml:space="preserve">
          <source>Inception V3 model for Keras.</source>
          <target state="translated">Keras의 시작 V3 모델.</target>
        </trans-unit>
        <trans-unit id="7d73f3eef76607d1a301c6ca302e845c6db2ac6e" translate="yes" xml:space="preserve">
          <source>Inception-ResNet V2 model for Keras.</source>
          <target state="translated">Keras를위한 Inception-ResNet V2 모델.</target>
        </trans-unit>
        <trans-unit id="8cf033bd7091b2790e4f777f8b19874075bff1bf" translate="yes" xml:space="preserve">
          <source>Included for symmetry with assertIsInstance.</source>
          <target state="translated">assertIsInstance와의 대칭에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="dcefd427b6a3fb13c379c178050dfc9a698717db" translate="yes" xml:space="preserve">
          <source>Included for symmetry with assertIsNone.</source>
          <target state="translated">assertIsNone과의 대칭에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="dd470208c6fa4ca92528cf0186d20c9f5b2f59b7" translate="yes" xml:space="preserve">
          <source>Includes slot variables and additional global variables created by the optimizer in the current default graph.</source>
          <target state="translated">슬롯 변수 및 현재 기본 그래프에서 옵티마이 저가 작성한 추가 전역 변수를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="7b391a6fad790101cab029c9fe225295336e842c" translate="yes" xml:space="preserve">
          <source>Increments 'ref' until it reaches 'limit'. (deprecated)</source>
          <target state="translated">'limit'에 도달 할 때까지 'ref'를 증가시킵니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="de594db0e57668b8b85789cc78fb4c139b3a182a" translate="yes" xml:space="preserve">
          <source>Increments this variable until it reaches &lt;code&gt;limit&lt;/code&gt;. (deprecated)</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; 도달 할 때까지이 변수를 증가시킵니다 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="1d219bcbd2ca8f15aeb03cccca9e989e6dc9c7d0" translate="yes" xml:space="preserve">
          <source>Indexing into a 3-tensor:</source>
          <target state="translated">3 텐서로 인덱싱 :</target>
        </trans-unit>
        <trans-unit id="5e79dd26697e6bbf367b2fdeab36765d539b5fbd" translate="yes" xml:space="preserve">
          <source>Indicate that a summary was computed.</source>
          <target state="translated">요약이 계산되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="82dbc404b49d6777aa92664b08fd68f890d9eccb" translate="yes" xml:space="preserve">
          <source>Indicates how a distributed variable will be aggregated.</source>
          <target state="translated">분산 변수가 집계되는 방법을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7d8aeb2df9b17e0f40b4d8f5858f3321132bd0c3" translate="yes" xml:space="preserve">
          <source>Indicates how a set of values should be reduced.</source>
          <target state="translated">값 집합을 줄이는 방법을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="502061f2d3846ae3f85cff4075516765180924ed" translate="yes" xml:space="preserve">
          <source>Indicates that &lt;code&gt;batch_shape == []&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;batch_shape == []&lt;/code&gt; 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="7f2a3ecc77c9bfd142bdfa3269a1a531f475325d" translate="yes" xml:space="preserve">
          <source>Indicates that &lt;code&gt;event_shape == []&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;event_shape == []&lt;/code&gt; 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b98b1943a15cc44f7a930e94a7aaa9be7ea89a2e" translate="yes" xml:space="preserve">
          <source>Indicates when a distributed variable will be synced.</source>
          <target state="translated">분산 변수가 동기화 될시기를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="56bea990e2e30a7eb039911159d0ee2d92ff71de" translate="yes" xml:space="preserve">
          <source>Indices must be without repeats. This is only tested if &lt;code&gt;validate_indices&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">인덱스는 반복되지 않아야합니다. &lt;code&gt;validate_indices&lt;/code&gt; 가 &lt;code&gt;True&lt;/code&gt; 인 경우에만 테스트됩니다 .</target>
        </trans-unit>
        <trans-unit id="1afd7134a89ddbe19e6cadca6ca3f19798d1fd1c" translate="yes" xml:space="preserve">
          <source>Indices should be sorted in lexicographic order, and indices must not contain any repeats. If &lt;code&gt;validate_indices&lt;/code&gt; is True, these properties are checked during execution.</source>
          <target state="translated">색인은 사전 식 순서로 정렬해야하며 색인에는 반복이 포함되어서는 안됩니다. 경우 &lt;code&gt;validate_indices&lt;/code&gt; 은 True입니다, 이러한 속성은 실행시에 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="6b68b09f9769efecac45bf8fdca33e3d2565957a" translate="yes" xml:space="preserve">
          <source>Information about a command-line flag.</source>
          <target state="translated">명령 행 플래그에 대한 정보.</target>
        </trans-unit>
        <trans-unit id="ec0acf85df4b3add32f27c24edcda3c4ac12ef0c" translate="yes" xml:space="preserve">
          <source>Information on how to save this Variable as a slice.</source>
          <target state="translated">이 변수를 슬라이스로 저장하는 방법에 대한 정보.</target>
        </trans-unit>
        <trans-unit id="d5f51cd32183bed67eebdc24505fe9c60be0ff24" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/normalization&quot;&gt;&lt;code&gt;Normalization&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/normalization&quot;&gt; &lt;code&gt;Normalization&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6d16843c9ea341a1347986bb59d03f16c9fb7aa" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/textvectorization&quot;&gt;&lt;code&gt;TextVectorization&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속 : &lt;a href=&quot;../../../../../../keras/layers/experimental/preprocessing/textvectorization&quot;&gt; &lt;code&gt;TextVectorization&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97a31c19a22414ef8ef5f357f1617f4cc1d647c1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../estimator/runconfig&quot;&gt;&lt;code&gt;RunConfig&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;../../../../estimator/runconfig&quot;&gt; &lt;code&gt;RunConfig&lt;/code&gt; &lt;/a&gt; : RunConfig</target>
        </trans-unit>
        <trans-unit id="f3d75bd146887dd05312c665b5ee9485003d0b9e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../keras/callbacks/callback&quot;&gt;&lt;code&gt;Callback&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../../keras/callbacks/callback&quot;&gt; &lt;code&gt;Callback&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f48823b67183fe4d3982fdf099fd964de492638" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../keras/layers/layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../../keras/layers/layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="101288461115cd97710e1c4a718e36857f88eeb0" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../../keras/layers/rnn&quot;&gt;&lt;code&gt;RNN&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속받은 사람 : &lt;a href=&quot;../../../../keras/layers/rnn&quot;&gt; &lt;code&gt;RNN&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c98cf787068e63e655af32c1f75becc1009cb055" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;Dataset&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b69b334b62f492a552001cca525723b81da0f8c3" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../distribute/strategy&quot;&gt;&lt;code&gt;Strategy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속 대상 : &lt;a href=&quot;../../../distribute/strategy&quot;&gt; &lt;code&gt;Strategy&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92ca55cab0329d064ac4fac10f97a987dd809443" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../distribute/strategyextended&quot;&gt;&lt;code&gt;StrategyExtended&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;../../../distribute/strategyextended&quot;&gt; &lt;code&gt;StrategyExtended&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce2f291600404f60ebcf454fa3465a5983be16e9" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/averagepooling1d&quot;&gt;&lt;code&gt;AveragePooling1D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/averagepooling1d&quot;&gt; &lt;code&gt;AveragePooling1D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42a8a44e1d03faeea5270e723f842a3c2b65a425" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/averagepooling2d&quot;&gt;&lt;code&gt;AveragePooling2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/averagepooling2d&quot;&gt; &lt;code&gt;AveragePooling2D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1dbcb4046a301b62c85eab641c002d5100bb5b1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/averagepooling3d&quot;&gt;&lt;code&gt;AveragePooling3D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/averagepooling3d&quot;&gt; &lt;code&gt;AveragePooling3D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f3c972c579e20efad3f3479906c3fc65c603f93" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv1d&quot;&gt;&lt;code&gt;Conv1D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속 대상 : &lt;a href=&quot;../../../keras/layers/conv1d&quot;&gt; &lt;code&gt;Conv1D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f254da78653b4606006651809bbe544bb36c261f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv2d&quot;&gt;&lt;code&gt;Conv2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/conv2d&quot;&gt; &lt;code&gt;Conv2D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0effe74634550b4623dd89f19fb3491982b74c2" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv2dtranspose&quot;&gt;&lt;code&gt;Conv2DTranspose&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/conv2dtranspose&quot;&gt; &lt;code&gt;Conv2DTranspose&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f697c3bc6da2ce250b73eefb92542a6c67912d6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv3d&quot;&gt;&lt;code&gt;Conv3D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/conv3d&quot;&gt; &lt;code&gt;Conv3D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8a3fb6f41c3a9e4dc192dd3ed365c7f15d77fc2" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/conv3dtranspose&quot;&gt;&lt;code&gt;Conv3DTranspose&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/conv3dtranspose&quot;&gt; &lt;code&gt;Conv3DTranspose&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29b1fcf2404228be9923887f99e1f80308a0f551" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/dense&quot;&gt;&lt;code&gt;Dense&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/dense&quot;&gt; &lt;code&gt;Dense&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0af60cb1a6134b54526b90870c8a41324c86484" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/dropout&quot;&gt;&lt;code&gt;Dropout&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/dropout&quot;&gt; &lt;code&gt;Dropout&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e68321961235af8baeb6a5bf163c3912867702ac" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/flatten&quot;&gt;&lt;code&gt;Flatten&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/flatten&quot;&gt; &lt;code&gt;Flatten&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc8c1e4f9a9c221452851820ebe247974471806e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28a3a29fe589494fc0af3d023b9cb3692724e795" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/maxpool1d&quot;&gt;&lt;code&gt;MaxPool1D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/maxpool1d&quot;&gt; &lt;code&gt;MaxPool1D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7584250f981dacb4544b81a0445f6abdf4dac4c8" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/maxpool2d&quot;&gt;&lt;code&gt;MaxPool2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/maxpool2d&quot;&gt; &lt;code&gt;MaxPool2D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="154fe6589fea17c9dbbfd13300c3302b5cbec52a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/maxpool3d&quot;&gt;&lt;code&gt;MaxPool3D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/maxpool3d&quot;&gt; &lt;code&gt;MaxPool3D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7ff649eddfed113ec4b0f9190c07241e844f314" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/separableconv1d&quot;&gt;&lt;code&gt;SeparableConv1D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/separableconv1d&quot;&gt; &lt;code&gt;SeparableConv1D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76bebda566676ef2b3fefccf517c4294e818101f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../keras/layers/separableconv2d&quot;&gt;&lt;code&gt;SeparableConv2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../../keras/layers/separableconv2d&quot;&gt; &lt;code&gt;SeparableConv2D&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0a3c9aaf5c80873ddedbb167634670d3320e6f1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../lookup/statichashtable&quot;&gt;&lt;code&gt;StaticHashTable&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;../../../lookup/statichashtable&quot;&gt; &lt;code&gt;StaticHashTable&lt;/code&gt; &lt;/a&gt; : StaticHashTable</target>
        </trans-unit>
        <trans-unit id="8a3bebd87957ebec2bdeed2ec6c3fd343e87182a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../../lookup/staticvocabularytable&quot;&gt;&lt;code&gt;StaticVocabularyTable&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;../../../lookup/staticvocabularytable&quot;&gt; &lt;code&gt;StaticVocabularyTable&lt;/code&gt; &lt;/a&gt; : StaticVocabularyTable</target>
        </trans-unit>
        <trans-unit id="1684aa0ac086b4c33905e11ca938ca00eeb69e59" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/estimator/estimator&quot;&gt;&lt;code&gt;Estimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속자 : &lt;a href=&quot;../../compat/v1/estimator/estimator&quot;&gt; &lt;code&gt;Estimator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aefa14b86c312089f44417b29a0fefe55dd55580" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/densefeatures&quot;&gt;&lt;code&gt;DenseFeatures&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../compat/v1/keras/layers/densefeatures&quot;&gt; &lt;code&gt;DenseFeatures&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb19ef7b8a7a993bf890f5f9f8e3aa82a58da54c" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/gru&quot;&gt;&lt;code&gt;GRU&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속받은 사람 : &lt;a href=&quot;../../compat/v1/keras/layers/gru&quot;&gt; &lt;code&gt;GRU&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25bbb6425736acc7eba310b4733d000e527fdb41" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/grucell&quot;&gt;&lt;code&gt;GRUCell&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속받은 사람 : &lt;a href=&quot;../../compat/v1/keras/layers/grucell&quot;&gt; &lt;code&gt;GRUCell&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6399774002d5547cc32cc9d4b9edee523ac71de" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/lstm&quot;&gt;&lt;code&gt;LSTM&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">: 상속 &lt;a href=&quot;../../compat/v1/keras/layers/lstm&quot;&gt; &lt;code&gt;LSTM&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6e365aef9a953772960e2a2d0594d4484de5f37" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../compat/v1/keras/layers/lstmcell&quot;&gt;&lt;code&gt;LSTMCell&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속받은 사람 : &lt;a href=&quot;../../compat/v1/keras/layers/lstmcell&quot;&gt; &lt;code&gt;LSTMCell&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61def0c79e4e14034ebc42dd5e16bbb937237db8" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../devicespec&quot;&gt;&lt;code&gt;DeviceSpec&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;../../devicespec&quot;&gt; &lt;code&gt;DeviceSpec&lt;/code&gt; &lt;/a&gt; : DeviceSpec</target>
        </trans-unit>
        <trans-unit id="e22d1fd60d17bfd6bb8dea29e2d168c3d11cab79" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../estimator/sessionrunhook&quot;&gt;&lt;code&gt;SessionRunHook&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;../../estimator/sessionrunhook&quot;&gt; &lt;code&gt;SessionRunHook&lt;/code&gt; &lt;/a&gt; : SessionRunHook</target>
        </trans-unit>
        <trans-unit id="c823efc68822885dff47a787a20718225f30976c" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0253e6a8463328df70cf0bde386ae58d5d4a52b3" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../layers/layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../layers/layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d380ebfc4ac0e11225bf40c85216fcb9ab9ca5be" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="431bc7dc03654938db639520210941a6890ffea2" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../optimizers/optimizer&quot;&gt;&lt;code&gt;Optimizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../optimizers/optimizer&quot;&gt; &lt;code&gt;Optimizer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e1cf9747c58dbedac3aa16db0a27265a12d8699" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../random_normal_initializer&quot;&gt;&lt;code&gt;random_normal_initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;../../random_normal_initializer&quot;&gt; &lt;code&gt;random_normal_initializer&lt;/code&gt; &lt;/a&gt; : random_normal_initializer</target>
        </trans-unit>
        <trans-unit id="a7949d09e2384198677c50c86af2bf0ed68fd209" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../random_uniform_initializer&quot;&gt;&lt;code&gt;random_uniform_initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;../../random_uniform_initializer&quot;&gt; &lt;code&gt;random_uniform_initializer&lt;/code&gt; &lt;/a&gt; : random_uniform_initializer</target>
        </trans-unit>
        <trans-unit id="30e65a22887b2ddde41692586ecc0c1e8dec9c5b" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../truncated_normal_initializer&quot;&gt;&lt;code&gt;truncated_normal_initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;../../truncated_normal_initializer&quot;&gt; &lt;code&gt;truncated_normal_initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1829a659c829a9f36645de8ac301505b51be50d6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../utils/sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../utils/sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0e5a6aee3812cf9bfb851074c2d13a47b335f5d" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../../variable&quot;&gt;&lt;code&gt;Variable&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../../variable&quot;&gt; &lt;code&gt;Variable&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f9bc9d9bcf253cedabcee6c97ec168ce829644a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../compat/v1/estimator/estimator&quot;&gt;&lt;code&gt;Estimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속자 : &lt;a href=&quot;../compat/v1/estimator/estimator&quot;&gt; &lt;code&gt;Estimator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25426e2a5713897c0289518989a9cd3a8db983ff" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../estimator&quot;&gt;&lt;code&gt;Estimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속자 : &lt;a href=&quot;../estimator&quot;&gt; &lt;code&gt;Estimator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="080d3ec42c2add7514a21ad699a8fc4784f62dcf" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../keras/layers/batchnormalization&quot;&gt;&lt;code&gt;BatchNormalization&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../keras/layers/batchnormalization&quot;&gt; &lt;code&gt;BatchNormalization&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90ccbe17f941cfb541dacdc6e6f8df9e364e9903" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../layers/layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../layers/layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3343ff80aad6eccce0b0ff9a92e6f1138ded04de" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속받은 &lt;a href=&quot;../model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9bc653a3de4a5b711fa178780efa227044183c6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bae83d89b65139dbc57c20256c7416930811a62f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../optimizer&quot;&gt;&lt;code&gt;Optimizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../optimizer&quot;&gt; &lt;code&gt;Optimizer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4dfd48c0fad88d69677a52e92941c20045e7f8d" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../optimizers/schedules/learningrateschedule&quot;&gt;&lt;code&gt;LearningRateSchedule&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;../optimizers/schedules/learningrateschedule&quot;&gt; &lt;code&gt;LearningRateSchedule&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bac031a4f0d93559c0b5a038481a55db80bffb1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../sessionrunhook&quot;&gt;&lt;code&gt;SessionRunHook&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;../sessionrunhook&quot;&gt; &lt;code&gt;SessionRunHook&lt;/code&gt; &lt;/a&gt; : SessionRunHook</target>
        </trans-unit>
        <trans-unit id="d1e8fe6f775917267679cd58b67ba07d4031d153" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../strategy&quot;&gt;&lt;code&gt;Strategy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속 대상 : &lt;a href=&quot;../strategy&quot;&gt; &lt;code&gt;Strategy&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7d0440491afa6fb0a72459e5330c1c6c5f3a9fd" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;../train/optimizer&quot;&gt;&lt;code&gt;Optimizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;../train/optimizer&quot;&gt; &lt;code&gt;Optimizer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ac0a165f2cf448ecb4b394e261add8aee2b6e02" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;argumentparser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;argumentparser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b53c52c65f50149ff85e0e72be5e18e5ebd0627" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;argumentserializer&quot;&gt;&lt;code&gt;ArgumentSerializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;argumentserializer&quot;&gt; &lt;code&gt;ArgumentSerializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80e09409191cf57a51dbc558605c61bf1e959f0f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;baselistparser&quot;&gt;&lt;code&gt;BaseListParser&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;baselistparser&quot;&gt; &lt;code&gt;BaseListParser&lt;/code&gt; &lt;/a&gt; : BaseListParser</target>
        </trans-unit>
        <trans-unit id="cc4c26c0cc8fd71ef96bcb06650fc6ea34b1a676" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;callback&quot;&gt;&lt;code&gt;Callback&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;callback&quot;&gt; &lt;code&gt;Callback&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37a3e2923879231076529ff16964e3254f28644a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;clusterresolver&quot;&gt;&lt;code&gt;ClusterResolver&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;clusterresolver&quot;&gt; &lt;code&gt;ClusterResolver&lt;/code&gt; &lt;/a&gt; : ClusterResolver</target>
        </trans-unit>
        <trans-unit id="f56dfe51ff751c5c35642aef72a91e03dc8eb325" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;conditionalaccumulatorbase&quot;&gt;&lt;code&gt;ConditionalAccumulatorBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;conditionalaccumulatorbase&quot;&gt; &lt;code&gt;ConditionalAccumulatorBase&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4451c0007ffb8c85d8049d366dd976e53638d7d6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;constraint&quot;&gt;&lt;code&gt;Constraint&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속 대상 : &lt;a href=&quot;constraint&quot;&gt; &lt;code&gt;Constraint&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cf3bf045963ef0e24f8894a2e9152ee83749492" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;conv2d&quot;&gt;&lt;code&gt;Conv2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속 대상 : &lt;a href=&quot;conv2d&quot;&gt; &lt;code&gt;Conv2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="283b19ef5cabdd9464503df3847e05e6683b4c31" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;conv3d&quot;&gt;&lt;code&gt;Conv3D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속 대상 : &lt;a href=&quot;conv3d&quot;&gt; &lt;code&gt;Conv3D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2e2d2138c18dd431317480b04654c2a90d72819" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;crossdeviceops&quot;&gt;&lt;code&gt;CrossDeviceOps&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;crossdeviceops&quot;&gt; &lt;code&gt;CrossDeviceOps&lt;/code&gt; &lt;/a&gt; : CrossDeviceOps</target>
        </trans-unit>
        <trans-unit id="22140b78b2e4625ecb8d6cb9f4e06748658330fb" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;Dataset&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa02fcf49761dd366a56034083175af69d0964fc" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;distribution&quot;&gt;&lt;code&gt;Distribution&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;distribution&quot;&gt; &lt;code&gt;Distribution&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b51b20c1f658b10e05c97ac0210ccc81f121087" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;dropout&quot;&gt;&lt;code&gt;Dropout&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;dropout&quot;&gt; &lt;code&gt;Dropout&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e878e37e306fee3dbc483d11717bf9341c22b53e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5dfc58dfa8f92ceeec773d4079a01572ca2cd806" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;estimator&quot;&gt;&lt;code&gt;Estimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속자 : &lt;a href=&quot;estimator&quot;&gt; &lt;code&gt;Estimator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a2ae2c02899c2e4f78d776e809915721c13881a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;exporter&quot;&gt;&lt;code&gt;Exporter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;exporter&quot;&gt; &lt;code&gt;Exporter&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58dcf205446e67668da4cee5c19d32d67d820dc8" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;exportoutput&quot;&gt;&lt;code&gt;ExportOutput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;exportoutput&quot;&gt; &lt;code&gt;ExportOutput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84e5436e8e1add9f0b776920cdc41d900f226bb9" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0db0c480f0cb5392640cfdd5f72b4e7ae28a556" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;gamma&quot;&gt;&lt;code&gt;Gamma&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;gamma&quot;&gt; &lt;code&gt;Gamma&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ef4a4c2192c1e1137ac1cdc387d568a072f314d" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;head&quot;&gt;&lt;code&gt;Head&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속받은 사람 : &lt;a href=&quot;head&quot;&gt; &lt;code&gt;Head&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e6a2ad1e98cf96c2f87570045e8cc2185aec4bd" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;initializer&quot;&gt;&lt;code&gt;Initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속자 : &lt;a href=&quot;initializer&quot;&gt; &lt;code&gt;Initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a30dfeb3ba7f1f880dbdb0a428cbd9056f33e550" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속자 : &lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea34304998eb45063cccb9f7518ed59ed029b3fb" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;keras/initializers/initializer&quot;&gt;&lt;code&gt;Initializer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속자 : &lt;a href=&quot;keras/initializers/initializer&quot;&gt; &lt;code&gt;Initializer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="208224ad9829e548920e4711cb9800c0bbf02a79" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f23330460480edbb4fc738157f7a5471232f7c83" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;learningrateschedule&quot;&gt;&lt;code&gt;LearningRateSchedule&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;learningrateschedule&quot;&gt; &lt;code&gt;LearningRateSchedule&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a1c3867710811bb11042f959bfcb4d5f8b519a0" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;linearoperator&quot;&gt;&lt;code&gt;LinearOperator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;linearoperator&quot;&gt; &lt;code&gt;LinearOperator&lt;/code&gt; &lt;/a&gt; : LinearOperator</target>
        </trans-unit>
        <trans-unit id="f62175fd1a3fcbb5f5a876a78c6edd7356485def" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;lossscale&quot;&gt;&lt;code&gt;LossScale&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;lossscale&quot;&gt; &lt;code&gt;LossScale&lt;/code&gt; &lt;/a&gt; : LossScale</target>
        </trans-unit>
        <trans-unit id="bb33eb889582345ba3f1d78863f8d00b235c5ee1" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;mean&quot;&gt;&lt;code&gt;Mean&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속 대상 : &lt;a href=&quot;mean&quot;&gt; &lt;code&gt;Mean&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23b8f0e2c60442efd1f3f24a1b9098b8e3720a04" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;metric&quot;&gt;&lt;code&gt;Metric&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;metric&quot;&gt; &lt;code&gt;Metric&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3491dcb6475f6cdcd9bfbfb9a50f3b524fc4f8b0" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속받은 &lt;a href=&quot;model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d14b97aeea22bcdb096843d7cfb8024f32a8d496" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;multiflag&quot;&gt;&lt;code&gt;MultiFlag&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;multiflag&quot;&gt; &lt;code&gt;MultiFlag&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80158f4961cf1668db5fd8c4f7cefdd6b4f0b29a" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;operror&quot;&gt;&lt;code&gt;OpError&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;operror&quot;&gt; &lt;code&gt;OpError&lt;/code&gt; &lt;/a&gt; : OpError</target>
        </trans-unit>
        <trans-unit id="5d0af4ebd255fd6f617c8d538add3730d1f29225" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;optimizer&quot;&gt;&lt;code&gt;Optimizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;optimizer&quot;&gt; &lt;code&gt;Optimizer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04c2e54a79367272f125c78e8460cacd30e00ebd" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;queuebase&quot;&gt;&lt;code&gt;QueueBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;queuebase&quot;&gt; &lt;code&gt;QueueBase&lt;/code&gt; &lt;/a&gt; : QueueBase</target>
        </trans-unit>
        <trans-unit id="5ccbec78a7b42e602f358942d26c9d05f169ed7c" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;readerbase&quot;&gt;&lt;code&gt;ReaderBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;readerbase&quot;&gt; &lt;code&gt;ReaderBase&lt;/code&gt; &lt;/a&gt; : ReaderBase</target>
        </trans-unit>
        <trans-unit id="ad0372cd2d15c62f344d2a9750b22878629b0740" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;regressionhead&quot;&gt;&lt;code&gt;RegressionHead&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;regressionhead&quot;&gt; &lt;code&gt;RegressionHead&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e3d5b150747f41525b95698f7bbd95312e28809" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;regularizer&quot;&gt;&lt;code&gt;Regularizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;regularizer&quot;&gt; &lt;code&gt;Regularizer&lt;/code&gt; &lt;/a&gt; : 정규화 기</target>
        </trans-unit>
        <trans-unit id="41240b7c3505b27c7d0d17bd731d675d120e69a7" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;rnn&quot;&gt;&lt;code&gt;RNN&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속받은 사람 : &lt;a href=&quot;rnn&quot;&gt; &lt;code&gt;RNN&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4bc99967778b197915dfb1e03b3aac7430e2d06" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;rnncell&quot;&gt;&lt;code&gt;RNNCell&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;rnncell&quot;&gt; &lt;code&gt;RNNCell&lt;/code&gt; &lt;/a&gt; : RNNCell</target>
        </trans-unit>
        <trans-unit id="92968f787ed32c0b2652202feacd0e1bb742a548" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;rnnestimator&quot;&gt;&lt;code&gt;RNNEstimator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;rnnestimator&quot;&gt; &lt;code&gt;RNNEstimator&lt;/code&gt; &lt;/a&gt; 에서 상속</target>
        </trans-unit>
        <trans-unit id="35b9f8a26efc7813a5fc71ac2e35eb36ea0752ed" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;sequenceenqueuer&quot;&gt;&lt;code&gt;SequenceEnqueuer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 속됨 : &lt;a href=&quot;sequenceenqueuer&quot;&gt; &lt;code&gt;SequenceEnqueuer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9097ee84e0043bad50f3732959fe4f03cde569e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;sessioncreator&quot;&gt;&lt;code&gt;SessionCreator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;sessioncreator&quot;&gt; &lt;code&gt;SessionCreator&lt;/code&gt; &lt;/a&gt; : SessionCreator</target>
        </trans-unit>
        <trans-unit id="f16acebe1259f779d2c3a0f7a4d97de5b66ad39f" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;sessionrunhook&quot;&gt;&lt;code&gt;SessionRunHook&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;sessionrunhook&quot;&gt; &lt;code&gt;SessionRunHook&lt;/code&gt; &lt;/a&gt; : SessionRunHook</target>
        </trans-unit>
        <trans-unit id="78de757e66b0204e828d8e24b165b9614dcddef6" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;stacktracefilter&quot;&gt;&lt;code&gt;StackTraceFilter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;stacktracefilter&quot;&gt; &lt;code&gt;StackTraceFilter&lt;/code&gt; &lt;/a&gt; : StackTraceFilter</target>
        </trans-unit>
        <trans-unit id="1314e1f7b68e8d2e740d84aa7ff167503f726bd3" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;stacktracetransform&quot;&gt;&lt;code&gt;StackTraceTransform&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상 &lt;a href=&quot;stacktracetransform&quot;&gt; &lt;code&gt;StackTraceTransform&lt;/code&gt; &lt;/a&gt; : StackTraceTransform</target>
        </trans-unit>
        <trans-unit id="74e8664d5defb70dad460e27e606424d03ad7f8e" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;strategy&quot;&gt;&lt;code&gt;Strategy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">상속 대상 : &lt;a href=&quot;strategy&quot;&gt; &lt;code&gt;Strategy&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5b5461c11487a577320988d6c7910a14af6eabb" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;typespec&quot;&gt;&lt;code&gt;TypeSpec&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;typespec&quot;&gt; &lt;code&gt;TypeSpec&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7923ecf7967dad1a15ad737b679bd8050b2a8bd" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;variancescaling&quot;&gt;&lt;code&gt;VarianceScaling&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음에서 상속 : &lt;a href=&quot;variancescaling&quot;&gt; &lt;code&gt;VarianceScaling&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53c43532e5cbca0b52801f19115633789d7d2a84" translate="yes" xml:space="preserve">
          <source>Inherits From: &lt;a href=&quot;wrapper&quot;&gt;&lt;code&gt;Wrapper&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;wrapper&quot;&gt; &lt;code&gt;Wrapper&lt;/code&gt; &lt;/a&gt; : 포장지</target>
        </trans-unit>
        <trans-unit id="896a5ab9538c1a67c1f3e659ad90640e62f8b8da" translate="yes" xml:space="preserve">
          <source>Initialization:</source>
          <target state="translated">Initialization:</target>
        </trans-unit>
        <trans-unit id="6b4c4e02ed448c5a81def9a1e3687e52b103b145" translate="yes" xml:space="preserve">
          <source>Initialization: At creation time the hooked session does following things in given order:</source>
          <target state="translated">초기화 : 생성시 후크 된 세션은 주어진 순서대로 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="08031e322fd9617e1573ed5dbfa09ff216adcc09" translate="yes" xml:space="preserve">
          <source>Initialization: At creation time the monitored session does following things in given order:</source>
          <target state="translated">초기화 : 생성시 모니터링 된 세션은 다음 순서대로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="b0355561fecfea92594a45fdcb6ca88daca19bec" translate="yes" xml:space="preserve">
          <source>Initialize Categorical distributions using class log-probabilities. (deprecated)</source>
          <target state="translated">클래스 로그 확률을 사용하여 범주 형 분포를 초기화합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="eb53dcaa811ac7688015872c0307120a73670815" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorAdjoint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorAdjoint&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="750f138f781c88fbb0701d39c348820ff999fad8" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorBlockDiag&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorBlockDiag&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="f39eb5cba37cc32a15ef159441cb53292159952a" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorComposition&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorComposition&lt;/code&gt; 을 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b05907b33c8a9de0c0979de3f32b251ac1c8aad" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorDiag&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorDiag&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="693135b5de80f140c35b24fa0e2aef0094c05d68" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="bbd6633639933b006a538ab0aef4fdf5a8441992" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorHouseholder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorHouseholder&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fc6c13d8271533b4e0c6a52055f390134df1f4e" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorIdentity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorIdentity&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="e00c7d507871b6245d20ab7f29a8de43b054e478" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorInversion&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorInversion&lt;/code&gt; 을 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d4e66ea801fb0915db2ab44c3588f99c13535da" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorKronecker&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorKronecker&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="eeb390cc0f4fac75926a62916c88ab4b661c42c4" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorLowRankUpdate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorLowRankUpdate&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="f9d706bfa28f87040a2e0b40cdf0afbf7e16b64a" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorLowerTriangular&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorLowerTriangular&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="7588d86ee76ca246898555ddb33325423ac0aa2d" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorPermutation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorPermutation&lt;/code&gt; 을 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad616170739db723a76b2a6610fee8afdb496005" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorScaledIdentity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorScaledIdentity&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf523f71058bd9f6bac48a09bd89a7d0645d188b" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorToeplitz&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorToeplitz&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac13eedefc7b6b32a2cd134693fd9e0177e8fcf6" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;LinearOperatorZeros&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorZeros&lt;/code&gt; 를 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="738190cdc5cd301e6242cb86b444286367b38ff6" translate="yes" xml:space="preserve">
          <source>Initialize a batch of Beta distributions. (deprecated)</source>
          <target state="translated">베타 배포 일괄 처리를 초기화하십시오. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="dc7ea2e4332b90aa477204eac854c35a52c9e897" translate="yes" xml:space="preserve">
          <source>Initialize a batch of Dirichlet distributions. (deprecated)</source>
          <target state="translated">Dirichlet 배포 배치를 초기화하십시오. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="fc8d3695b732b4c84d7528c8d6686ac5b6c4efba" translate="yes" xml:space="preserve">
          <source>Initialize a batch of DirichletMultinomial distributions. (deprecated)</source>
          <target state="translated">DirichletMultinomial 배포 배치를 초기화하십시오. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="e92be9f5b309bd342947a735a43d5120077fec20" translate="yes" xml:space="preserve">
          <source>Initialize a batch of Multinomial distributions. (deprecated)</source>
          <target state="translated">다항 분포의 배치를 초기화합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="a08179d319a047367bc8f5fa7409bac517eae691" translate="yes" xml:space="preserve">
          <source>Initialize a batch of Uniform distributions. (deprecated)</source>
          <target state="translated">균일 분포의 배치를 초기화합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="7176bd72795dadb8c783acaefcff5df66a240124" translate="yes" xml:space="preserve">
          <source>Initialize an &lt;code&gt;LinearOperatorCirculant2D&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorCirculant2D&lt;/code&gt; 를 초기화 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9b868fe74c4ce2558ee85147bd4de2aef5e9e70" translate="yes" xml:space="preserve">
          <source>Initialize an &lt;code&gt;LinearOperatorCirculant&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorCirculant&lt;/code&gt; 를 초기화 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f8049ed73769cea9db916044a5c096b1780e5ad" translate="yes" xml:space="preserve">
          <source>Initialize ophint argument.</source>
          <target state="translated">ophint 인수를 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="5f66672d1a211feccb2663e524389cc7bbdc9544" translate="yes" xml:space="preserve">
          <source>Initialize self. See help(type(self)) for accurate signature.</source>
          <target state="translated">자기를 초기화하십시오. 정확한 서명은 help (type (self))를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="774126eedb486505371aeb53fcb908707fda92f1" translate="yes" xml:space="preserve">
          <source>Initialize the &lt;code&gt;LinearOperator&lt;/code&gt;. (deprecated arguments)</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 를 초기화하십시오 . (더 이상 사용되지 않는 인수)</target>
        </trans-unit>
        <trans-unit id="ab2e1f2d631fceec84acd055ae017bb35b138793" translate="yes" xml:space="preserve">
          <source>Initialize the KL registrar. (deprecated)</source>
          <target state="translated">KL 등록 기관을 초기화하십시오. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="a6ebdd831ac3202b3781c72a34d4adf2eae8f045" translate="yes" xml:space="preserve">
          <source>Initialize the TPU devices.</source>
          <target state="translated">TPU 장치를 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="92e2d30e35ba9382e113f9b082b909176f6d30a2" translate="yes" xml:space="preserve">
          <source>Initialize the basic LSTM cell. (deprecated)</source>
          <target state="translated">기본 LSTM 셀을 초기화하십시오. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="b590a960cba96e3ec2bd76607c374e10df648ac8" translate="yes" xml:space="preserve">
          <source>Initialize the context manager.</source>
          <target state="translated">컨텍스트 관리자를 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="fa67a798e83e54f567e4c72f649b904fcbc46e99" translate="yes" xml:space="preserve">
          <source>Initialize the converter.</source>
          <target state="translated">변환기를 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="bc16e43bd3119b5ee14cd85b3e95a73c462f9e60" translate="yes" xml:space="preserve">
          <source>Initialize the parameters for an LSTM cell.</source>
          <target state="translated">LSTM 셀의 매개 변수를 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="a276f0d2cb8c74827ade5547808ad2460ab61df8" translate="yes" xml:space="preserve">
          <source>Initialize the parameters for an LSTM cell. (deprecated)</source>
          <target state="translated">LSTM 셀의 매개 변수를 초기화하십시오. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="7f0a3f70258a349042e3af55ded6d87eee852d82" translate="yes" xml:space="preserve">
          <source>Initializer base class: all initializers inherit from this class.</source>
          <target state="translated">이니셜 라이저 기본 클래스 : 모든 이니셜 라이저는이 클래스에서 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="7408f1164bc8abcd3cd06ec2d69e780bd33dcfc9" translate="yes" xml:space="preserve">
          <source>Initializer capable of adapting its scale to the shape of weights tensors.</source>
          <target state="translated">무게 텐서의 모양에 맞게 스케일을 조정할 수있는 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="f60811326fed85c17ddc6a9fa74dd3e187f5f2eb" translate="yes" xml:space="preserve">
          <source>Initializer that generates a truncated normal distribution.</source>
          <target state="translated">잘린 정규 분포를 생성하는 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="28a79d9ea883c4f5cd6e250dbcccda1f34cc830e" translate="yes" xml:space="preserve">
          <source>Initializer that generates an orthogonal matrix.</source>
          <target state="translated">직교 행렬을 생성하는 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="1792d0500f8e70d942738b949ce3b4da4a9ed270" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors initialized to 0.</source>
          <target state="translated">0으로 초기화 된 텐서를 생성하는 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="a36980b211658b282787d0374f188f82dec6bdb5" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors initialized to 1.</source>
          <target state="translated">1로 초기화 된 텐서를 생성하는 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="15754fbc0acedd6e5262c409c57d5c268cae842f" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors with a normal distribution.</source>
          <target state="translated">정규 분포로 텐서를 생성하는 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="2e48457893b98a46c7f6098fecb5c04951df9791" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors with a uniform distribution.</source>
          <target state="translated">분포가 균일 한 텐서를 생성하는 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="3bee63cb84d4df7eb9ae6d89ea8269883a3a2f73" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors with constant values.</source>
          <target state="translated">상수 값으로 텐서를 생성하는 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="a63680d71f7ed8d10b2e994835a64ae1af02ec9e" translate="yes" xml:space="preserve">
          <source>Initializer that generates tensors without scaling variance.</source>
          <target state="translated">스케일링 분산없이 텐서를 생성하는 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="1ad2d9eaadec9573877dacc1cb60e6be8ac9c172" translate="yes" xml:space="preserve">
          <source>Initializer that generates the identity matrix.</source>
          <target state="translated">항등 행렬을 생성하는 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="ba3489968dced82d9caa31fe8dbca460cc2e2ca7" translate="yes" xml:space="preserve">
          <source>Initializer.</source>
          <target state="translated">Initializer.</target>
        </trans-unit>
        <trans-unit id="6ae3569d509cdfe1b8eeda1c03736c231164aa1d" translate="yes" xml:space="preserve">
          <source>Initializes &lt;code&gt;FinalOpHook&lt;/code&gt; with ops to run at the end of the session.</source>
          <target state="translated">세션 종료시 실행되도록 op를 사용하여 &lt;code&gt;FinalOpHook&lt;/code&gt; 을 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="0af270707bfe64bad53b93831ed2ef62271f7b4f" translate="yes" xml:space="preserve">
          <source>Initializes EnumParser.</source>
          <target state="translated">EnumParser를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="0c6c3eb42679c70ce8e567e3a3d01b9974f44165" translate="yes" xml:space="preserve">
          <source>Initializes SessionRunContext.</source>
          <target state="translated">SessionRunContext를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="1e9596221f894466401f26eb2ad3d3bb9bca21a0" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;BoostedTreesClassifier&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;BoostedTreesClassifier&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="641a92d161ea17f97b3f75efe25bd49c3aff8e50" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;BoostedTreesEstimator&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;BoostedTreesEstimator&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="8291a5b18fc232c8c600a8530a9160b317faf613" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;BoostedTreesRegressor&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;BoostedTreesRegressor&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="bf1dbcb62a62aa47798f17328b9db5bfda87a371" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;CheckpointInputPipelineHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CheckpointInputPipelineHook&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="575a2d3cd1c6cefb0d8c20d7511f5f2328199dea" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;CheckpointSaverHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CheckpointSaverHook&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="a2bf50de7719118633c38d4887574c861cacae90" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;DNNClassifier&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;DNNClassifier&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="9c551665d393a8ff2ebb59249f9845ad31f5e64c" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;DNNEstimator&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;DNNEstimator&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="0cd3fbf5dea3545531f5a1265c354ed7b46e1d19" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;DNNRegressor&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;DNNRegressor&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="0af051ae925bb350c4f5229f3c01f96feb14a59b" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;FeedFnHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FeedFnHook&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="cc1915707125a14da164ca446507b73fb2b92efa" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;GlobalStepWaiterHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GlobalStepWaiterHook&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="cbbe5f2cbae68cf255194ac13f981b98c75307c1" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;InMemoryEvaluatorHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InMemoryEvaluatorHook&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="d129af7a0307c26eab90b28ebd51b9618ad292be" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;LinearEstimator&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;LinearEstimator&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="44409c31c23e5093785e966d4116f3612c1704af" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;LinearRegressor&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;LinearRegressor&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="c02d624ee0a9807bd61d94c49113d6ab4a74c47b" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;LoggingTensorHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LoggingTensorHook&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="11306ffe02fcfd7255133712c0c10d8f6b861a21" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;NanTensorHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NanTensorHook&lt;/code&gt; 을 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="546f19884e0d132fdd88d1130640aa01b21aace9" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;RNNClassifier&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;RNNClassifier&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="dea803d756c15f8ac4cf7e7ccc1c8153c06bdd9a" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;RNNEstimator&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;RNNEstimator&lt;/code&gt; 인스턴스를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="6e2ad4948c5069b73b42132f07ca898494bfe604" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;StopAtStepHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StopAtStepHook&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="ecebafebcc1ed7893c42ca6adbe3a6e7c3f3d309" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;SummarySaverHook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SummarySaverHook&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="cbd3617c2d5051723d22bb771dbeeefc7cb141af" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;TFRecordWriter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TFRecordWriter&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="4b9e921bd19e339c3c62dd30db062a771c9111c7" translate="yes" xml:space="preserve">
          <source>Initializes a BaselineClassifier instance.</source>
          <target state="translated">BaselineClassifier 인스턴스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="f2ca17291afb7e8cb98eae1421a6d34024556fe2" translate="yes" xml:space="preserve">
          <source>Initializes a BaselineEstimator instance.</source>
          <target state="translated">BaselineEstimator 인스턴스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="6df9376ec784999b4324a701a11055ec4641b248" translate="yes" xml:space="preserve">
          <source>Initializes a BaselineRegressor instance.</source>
          <target state="translated">BaselineRegressor 인스턴스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="a0774ef910763d2c62bd641db60c78cc26f5f0c0" translate="yes" xml:space="preserve">
          <source>Initializes a DNNLinearCombinedClassifier instance.</source>
          <target state="translated">DNNLinearCombinedClassifier 인스턴스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="783d0c854480043cc2c0181e9e30a857fc22e30e" translate="yes" xml:space="preserve">
          <source>Initializes a DNNLinearCombinedEstimator instance.</source>
          <target state="translated">DNNLinearCombinedEstimator 인스턴스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="739deeaaeb79fadd6c52fea70a1826f73947e113" translate="yes" xml:space="preserve">
          <source>Initializes a DNNLinearCombinedRegressor instance.</source>
          <target state="translated">DNNLinearCombinedRegressor 인스턴스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="0c40d6ce99ac68c2b27ea09e79d9aa0795cdf29d" translate="yes" xml:space="preserve">
          <source>Initializes a UnionClusterResolver with other ClusterResolvers.</source>
          <target state="translated">다른 ClusterResolvers로 UnionClusterResolver를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="33532b330cba4da4287395c3bcee952368758bde" translate="yes" xml:space="preserve">
          <source>Initializes a chief session creator.</source>
          <target state="translated">최고 세션 작성자를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="f0fbe2018ecf0aac090ce758a3b9ad7c64b0d419" translate="yes" xml:space="preserve">
          <source>Initializes a distributed TPU system for use with TensorFlow.</source>
          <target state="translated">TensorFlow와 함께 사용할 분산 TPU 시스템을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="f9ecfd4934d70f84d7899a79d879721a3e413c28" translate="yes" xml:space="preserve">
          <source>Initializes a hook that takes periodic profiling snapshots.</source>
          <target state="translated">주기적 프로파일 링 스냅 샷을 생성하는 후크를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="997de8101a00d090e563fabad75f25c03ff57046" translate="yes" xml:space="preserve">
          <source>Initializes a new KubernetesClusterResolver.</source>
          <target state="translated">새로운 KubernetesClusterResolver를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="a000286aa35868ad7a4442c66081e50874ea4509" translate="yes" xml:space="preserve">
          <source>Initializes a worker session creator.</source>
          <target state="translated">작업자 세션 작성자를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="52e2a9b43cb09a5b97b21e2638d508223e7d9295" translate="yes" xml:space="preserve">
          <source>Initializes an InputContext object.</source>
          <target state="translated">InputContext 객체를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="9f766a8a68267cac7d59732c88bb6823db3efc5f" translate="yes" xml:space="preserve">
          <source>Initializes summary writing for graph execution mode.</source>
          <target state="translated">그래프 실행 모드에 대한 요약 쓰기를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="a923a4b25ad6812b374a90843b54d284a15dffcb" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;code&gt;step_context&lt;/code&gt; argument for a &lt;code&gt;step_fn&lt;/code&gt; invocation.</source>
          <target state="translated">&lt;code&gt;step_fn&lt;/code&gt; 호출에 대한 &lt;code&gt;step_context&lt;/code&gt; 인수를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="064630dcdc1b915396129f044f0af7f3ed3178c1" translate="yes" xml:space="preserve">
          <source>Initializes the TPUStrategy object.</source>
          <target state="translated">TPUStrategy 객체를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="a095094fc43a8f61df14737cdbd7e74e010345c8" translate="yes" xml:space="preserve">
          <source>Initializes the given &lt;code&gt;table&lt;/code&gt; with &lt;code&gt;keys&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; tensors.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; 와 &lt;code&gt;values&lt;/code&gt; 텐서로 주어진 &lt;code&gt;table&lt;/code&gt; 을 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="5015344a3098f58ff7e43767db7a65fd51001358" translate="yes" xml:space="preserve">
          <source>Initializes the loss scale class.</source>
          <target state="translated">손실 척도 클래스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="2a2ebcb62e07bfa23fe63ff902381554659598f7" translate="yes" xml:space="preserve">
          <source>Initializes the object.</source>
          <target state="translated">객체를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="96c249c719463e9cbe91e8dfab76ecf97217371c" translate="yes" xml:space="preserve">
          <source>Initializes the parameters for an RNN cell.</source>
          <target state="translated">RNN 셀의 매개 변수를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="926bdaa7bd8079fe9e99087d53c0e1e6f3926945" translate="yes" xml:space="preserve">
          <source>Initializes the summary writer.</source>
          <target state="translated">요약 작성기를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="8ce5d08116a5422425173483db4afb40e381960e" translate="yes" xml:space="preserve">
          <source>Initializes the table from a text file.</source>
          <target state="translated">텍스트 파일에서 테이블을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="166aee7623091cf78477483a2b69d759bad97f4c" translate="yes" xml:space="preserve">
          <source>Initializes this loss scale optimizer.</source>
          <target state="translated">이 손실 스케일 최적화 프로그램을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="420eb1414b9510458affd7d7f221b2d916a76daf" translate="yes" xml:space="preserve">
          <source>Initializes this strategy with an optional &lt;code&gt;cluster_resolver&lt;/code&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;cluster_resolver&lt;/code&gt; 로이 전략을 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="0d2c52d1b5ccc55d62f5f28f184bbca571994a96" translate="yes" xml:space="preserve">
          <source>Initializes with a device to reduce to and a way to accumulate.</source>
          <target state="translated">축소하고 축적하는 방법으로 장치를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="b0239e06bf33c2a0502643ba3bac0a932d185f3a" translate="yes" xml:space="preserve">
          <source>Initializing variables on startup, restoring them from the most recent checkpoint after a crash, or wait for checkpoints to become available.</source>
          <target state="translated">시작시 변수 초기화, 충돌 후 가장 최근의 검사 점에서 변수를 복원하거나 검사 점이 사용 가능할 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="6cfc0b3ada9a1caff4180ec7edad85d08676e0cf" translate="yes" xml:space="preserve">
          <source>Injects a new target into a function built by make_decorator.</source>
          <target state="translated">make_decorator가 빌드 한 함수에 새로운 대상을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="bc0e981b33830b81d9ff2818d62f005b2928c167" translate="yes" xml:space="preserve">
          <source>Input &lt;code&gt;tf.Example&lt;/code&gt; objects:</source>
          <target state="translated">입력 &lt;code&gt;tf.Example&lt;/code&gt; 객체 :</target>
        </trans-unit>
        <trans-unit id="73f2bad16eec61ee4379ef2b4aeb9cc4c2a4a510" translate="yes" xml:space="preserve">
          <source>Input images can be of different types but output images are always float.</source>
          <target state="translated">입력 이미지는 다른 유형일 수 있지만 출력 이미지는 항상 부동입니다.</target>
        </trans-unit>
        <trans-unit id="4239004a11dea4c51531321c98ec214cc8cbb13c" translate="yes" xml:space="preserve">
          <source>Input logits.</source>
          <target state="translated">입력 로짓.</target>
        </trans-unit>
        <trans-unit id="fda1e7a11af1cc3301f80e9a5418b19a3ab29bb4" translate="yes" xml:space="preserve">
          <source>Input mask tensor (potentially None) or list of input mask tensors.</source>
          <target state="translated">입력 마스크 텐서 (잠재적으로 없음) 또는 입력 마스크 텐서 목록.</target>
        </trans-unit>
        <trans-unit id="edbe051ef8c9da1130a2117a0a044159ca1b63de" translate="yes" xml:space="preserve">
          <source>Input may or may not have padding at the end. See EncodeBase64 for padding. Web-safe means that input must use - and _ instead of + and /.</source>
          <target state="translated">입력은 끝에 패딩이 있거나 없을 수 있습니다. 패딩에 대해서는 EncodeBase64를 참조하십시오. 웹 안전은 입력이 + 및 / 대신-및 _를 사용해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f8658e95ed1bbcd180ec9de2eb39b3ac7043313a" translate="yes" xml:space="preserve">
          <source>Input of &lt;code&gt;train&lt;/code&gt; and &lt;code&gt;evaluate&lt;/code&gt; should have following features, otherwise there will be a &lt;code&gt;KeyError&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;train&lt;/code&gt; 입력 및 &lt;code&gt;evaluate&lt;/code&gt; 에는 다음과 같은 기능이 있어야합니다. 그렇지 않으면 &lt;code&gt;KeyError&lt;/code&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="88e394c2930956f582ca9ae4eef0469cb05766cc" translate="yes" xml:space="preserve">
          <source>Input of &lt;code&gt;train&lt;/code&gt; and &lt;code&gt;evaluate&lt;/code&gt; should have following features, otherwise there will be a KeyError:</source>
          <target state="translated">&lt;code&gt;train&lt;/code&gt; 입력 및 &lt;code&gt;evaluate&lt;/code&gt; 에는 다음 기능이 있어야합니다. 그렇지 않으면 KeyError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ebfa8d05c9d2a729345a882e4621644a960bf43d" translate="yes" xml:space="preserve">
          <source>Input pipelines based on Queues are not supported when eager execution is enabled. Please use the &lt;a href=&quot;../../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; API to ingest data under eager execution.</source>
          <target state="translated">열성적인 실행이 활성화되면 대기열 기반의 입력 파이프 라인이 지원되지 않습니다. &lt;a href=&quot;../../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt; API를 사용하여 간절히 실행중인 데이터를 수집하십시오.</target>
        </trans-unit>
        <trans-unit id="d0931987f07b0aec0f450122b07367564fc58ded" translate="yes" xml:space="preserve">
          <source>Input requirements:</source>
          <target state="translated">입력 요구 사항 :</target>
        </trans-unit>
        <trans-unit id="6150fd4490609fe6a3c79de568883b2478811095" translate="yes" xml:space="preserve">
          <source>Input shape, as an integer shape tuple (or list of shape tuples, one tuple per input tensor).</source>
          <target state="translated">정수 모양 튜플 (또는 모양 튜플 목록, 입력 텐 서당 하나의 튜플)로 입력 모양.</target>
        </trans-unit>
        <trans-unit id="73a2fcb17cd33f0bbcaa985f8ff933859938cfdb" translate="yes" xml:space="preserve">
          <source>Input shape:</source>
          <target state="translated">입력 모양 :</target>
        </trans-unit>
        <trans-unit id="924a9478691303fe05bafb1fc1238c07cb44c3db" translate="yes" xml:space="preserve">
          <source>Input tensor or list of input tensors.</source>
          <target state="translated">입력 텐서 또는 입력 텐서 목록.</target>
        </trans-unit>
        <trans-unit id="bb11121330c8874b43826ca8a1da1c1d3c194fb5" translate="yes" xml:space="preserve">
          <source>Inputs and outputs of the computation must be at least rank-1 Tensors.</source>
          <target state="translated">계산의 입력 및 출력은 최소 순위 1 텐서 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e7fe0dcaa3f3ef9a8f095388d2bf7868e5702be9" translate="yes" xml:space="preserve">
          <source>Inputs are &lt;code&gt;query&lt;/code&gt; tensor of shape &lt;code&gt;[batch_size, Tq, dim]&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; tensor of shape &lt;code&gt;[batch_size, Tv, dim]&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt; tensor of shape &lt;code&gt;[batch_size, Tv, dim]&lt;/code&gt;. The calculation follows the steps:</source>
          <target state="translated">입력은 &lt;code&gt;query&lt;/code&gt; 형상 텐서 &lt;code&gt;[batch_size, Tq, dim]&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt; 형상의 텐서 &lt;code&gt;[batch_size, Tv, dim]&lt;/code&gt; 와 &lt;code&gt;key&lt;/code&gt; 형상 텐서 &lt;code&gt;[batch_size, Tv, dim]&lt;/code&gt; . 계산은 다음 단계를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="1c0e56ccaddb0c8890b27ec9abecd06903924122" translate="yes" xml:space="preserve">
          <source>Inputs are not masked or strictly right padded.</source>
          <target state="translated">입력이 마스크되지 않거나 엄격하게 오른쪽으로 채워지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b70811df5293dc1d88b0b4d8c3745fc0c3e2e349" translate="yes" xml:space="preserve">
          <source>Inputs are tensor and if the tensors contains more than one element, an element-wise logical XOR is computed.</source>
          <target state="translated">입력은 텐서이며 텐서에 둘 이상의 요소가 포함되어 있으면 요소 별 논리 XOR이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="137804bd98ee5ed803aad41b3b2bb45555e950ca" translate="yes" xml:space="preserve">
          <source>Inputs must be a &lt;code&gt;CategoricalColumn&lt;/code&gt; created by any of the &lt;code&gt;categorical_column_*&lt;/code&gt; function. Here is an example of using &lt;code&gt;embedding_column&lt;/code&gt; with &lt;code&gt;DNNClassifier&lt;/code&gt;:</source>
          <target state="translated">입력 값은 &lt;code&gt;categorical_column_*&lt;/code&gt; 함수 중 하나에 의해 생성 된 &lt;code&gt;CategoricalColumn&lt;/code&gt; 이어야합니다 . 다음은 &lt;code&gt;DNNClassifier&lt;/code&gt; 와 &lt;code&gt;embedding_column&lt;/code&gt; 을 사용하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="78623993ab6e74c3ee21bef7821841777f171f6b" translate="yes" xml:space="preserve">
          <source>Inputs must be a list of categorical columns created by any of the &lt;code&gt;categorical_column_*&lt;/code&gt; function. They must all be of the same type and have the same arguments except &lt;code&gt;key&lt;/code&gt;. E.g. they can be categorical_column_with_vocabulary_file with the same vocabulary_file. Some or all columns could also be weighted_categorical_column.</source>
          <target state="translated">입력 값은 &lt;code&gt;categorical_column_*&lt;/code&gt; 함수 중 하나에 의해 생성 된 범주 열 목록이어야합니다 . 그것들은 모두 같은 타입이어야하고 &lt;code&gt;key&lt;/code&gt; 를 제외하고 같은 인자를 가져야합니다 . 예를 들어, 같은 vocabulary_file을 가진 categorical_column_with_vocabulary_file 일 수 있습니다. 일부 또는 모든 열은 weighted_categorical_column 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f102a3cf4073e5d93951de1381197dd8a18010c" translate="yes" xml:space="preserve">
          <source>Insert a &lt;code&gt;Masking&lt;/code&gt; layer with &lt;code&gt;mask_value=0.&lt;/code&gt; before the LSTM layer:</source>
          <target state="translated">&lt;code&gt;mask_value=0.&lt;/code&gt; 으로 &lt;code&gt;Masking&lt;/code&gt; 레이어를 삽입하십시오 . LSTM 레이어 이전 :</target>
        </trans-unit>
        <trans-unit id="a1f87207530b85579b12d1c5e52ad8a13807845e" translate="yes" xml:space="preserve">
          <source>Inserts a dimension of 1 into a tensor's shape.</source>
          <target state="translated">1의 치수를 텐서 모양에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="29b723ab1ad43456db942b0b8bd7c8d59bddf967" translate="yes" xml:space="preserve">
          <source>Inserts a dimension of 1 into a tensor's shape. (deprecated arguments)</source>
          <target state="translated">1의 치수를 텐서 모양에 삽입합니다. (더 이상 사용되지 않는 인수)</target>
        </trans-unit>
        <trans-unit id="1d269ecf38e8f23806fcb544f73ec6c7d82059d0" translate="yes" xml:space="preserve">
          <source>Inserts a placeholder for a sparse tensor that will be always fed.</source>
          <target state="translated">항상 공급되는 희소 텐서의 자리 표시자를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="2f562655f77a6d82ddf22ccda7140bb2b957c8a1" translate="yes" xml:space="preserve">
          <source>Inserts a placeholder for a tensor that will be always fed.</source>
          <target state="translated">항상 공급 될 텐서의 자리 표시자를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="c3bbe50b7a8e09f46aa5f5b6f4c704a039abb44e" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; after &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is called:</source>
          <target state="translated">내부 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 후 &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; 라고합니다 :</target>
        </trans-unit>
        <trans-unit id="ac98a58dead80c80e907d0722a4a50459411da6d" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">내부 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7a059d78a854aeca57acd67a3369e631a93c4c21" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; after</source>
          <target state="translated">후 &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 내부</target>
        </trans-unit>
        <trans-unit id="f3a75c2b38172e2164e085145cea76fd33af363c" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">내부 &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0e2cab75c40098f2631f31b554fa63d8c8ec4f9a" translate="yes" xml:space="preserve">
          <source>Inside a &lt;code&gt;with strategy.scope():&lt;/code&gt; code block, this thread will use a variable creator set by &lt;code&gt;strategy&lt;/code&gt;, and will enter its &quot;cross-replica context&quot;.</source>
          <target state="translated">내부 &lt;code&gt;with strategy.scope():&lt;/code&gt; 코드 블록이 스레드에 의해 변수 제작자 세트를 사용 &lt;code&gt;strategy&lt;/code&gt; , 그것의 &quot;크로스 - 복제 컨텍스트&quot;를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="2d5243ea93579bbab1a7b795e88dfd8e5238e331" translate="yes" xml:space="preserve">
          <source>Inside a transformation function for &lt;code&gt;tf.dataset&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;tf.dataset&lt;/code&gt; 에 대한 변환 함수 내부 :</target>
        </trans-unit>
        <trans-unit id="52a058c45032e7de16ba71c01fab3738d287a42a" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;NumpyWrapper&lt;/code&gt; are checkpointable objects, and will be saved and restored from checkpoints along with TensorFlow state like variables.</source>
          <target state="translated">&lt;code&gt;NumpyWrapper&lt;/code&gt; 의 인스턴스 는 검사 점 개체이며 변수와 같은 TensorFlow 상태와 함께 검사 점에서 저장 및 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="78eccaaba0fdade93205fff1e00fbadcaeaba337" translate="yes" xml:space="preserve">
          <source>Instances of this class represent a loss scale. Calling instances of this class returns the loss scale as a scalar float32 tensor, while method &lt;code&gt;update()&lt;/code&gt; updates the loss scale depending on the values of the gradients. Optimizers use instances of this class to scale loss and gradients.</source>
          <target state="translated">이 클래스의 인스턴스는 손실 척도를 나타냅니다. 이 클래스의 인스턴스를 호출하면 손실 스케일을 스칼라 float32 텐서로 반환하는 반면 &lt;code&gt;update()&lt;/code&gt; 메서드 는 그래디언트 값에 따라 손실 스케일을 업데이트합니다. 최적화 프로그램은이 클래스의 인스턴스를 사용하여 손실 및 그라디언트를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="abc0db5b227fc3047fc2a6c06364fc3c54136965" translate="yes" xml:space="preserve">
          <source>Instances of this class represent how sampling is reparameterized.</source>
          <target state="translated">이 클래스의 인스턴스는 샘플링을 다시 매개 변수화하는 방법을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7e23834d9ad625b0a72d7e2f1be4a4069c499c5c" translate="yes" xml:space="preserve">
          <source>Instantiate an identity matrix and returns it.</source>
          <target state="translated">항등 행렬을 인스턴스화하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9adc3a521be5ffb465cee66aa19ff8ac84ae4cea" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;code&gt;LearningRateSchedule&lt;/code&gt; from its config.</source>
          <target state="translated">구성에서 &lt;code&gt;LearningRateSchedule&lt;/code&gt; 을 인스턴스화합니다 .</target>
        </trans-unit>
        <trans-unit id="e819f31f0ce693841e6703a84bf49642d0f0646a" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;code&gt;Loss&lt;/code&gt; from its config (output of &lt;code&gt;get_config()&lt;/code&gt;).</source>
          <target state="translated">구성에서 &lt;code&gt;Loss&lt;/code&gt; 을 인스턴스화합니다 ( &lt;code&gt;get_config()&lt;/code&gt; 출력 ).</target>
        </trans-unit>
        <trans-unit id="6ba64f03d4a9f988022614425c9d39f3e4c08eec" translate="yes" xml:space="preserve">
          <source>Instantiates a Keras function.</source>
          <target state="translated">Keras 함수를 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="86be24bfd95437c4ccded5012ad87863f17418f2" translate="yes" xml:space="preserve">
          <source>Instantiates a Keras model from its config.</source>
          <target state="translated">구성에서 Keras 모델을 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="e1139b10a46081f05ee7e89e2f44088cc63dc7ce" translate="yes" xml:space="preserve">
          <source>Instantiates a layer from a config dictionary.</source>
          <target state="translated">구성 사전에서 계층을 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="f2e8a39a6c72f1d2adbc3a7102dbfb7499d810f2" translate="yes" xml:space="preserve">
          <source>Instantiates a placeholder tensor and returns it.</source>
          <target state="translated">자리 표시 자 텐서를 인스턴스화하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="56fcc9aa753f9745e6fd3098bb85d40d054e5bf6" translate="yes" xml:space="preserve">
          <source>Instantiates a variable and returns it.</source>
          <target state="translated">변수를 인스턴스화하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e4ee72f81497fc62ef8381301600c750a4c3bf6b" translate="yes" xml:space="preserve">
          <source>Instantiates a variable with values drawn from a normal distribution.</source>
          <target state="translated">정규 분포에서 가져온 값으로 변수를 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="25c5cf039c5c919ae65a83e5f4aa30370b25a668" translate="yes" xml:space="preserve">
          <source>Instantiates a variable with values drawn from a uniform distribution.</source>
          <target state="translated">균일 분포에서 가져온 값으로 변수를 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="20d6d4e9f45134915d0ed9873dfceccd0144de71" translate="yes" xml:space="preserve">
          <source>Instantiates an all-ones variable and returns it.</source>
          <target state="translated">all-ones 변수를 인스턴스화하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5ddc4e890d0448de00a1911ddc70ef24681ca3b6" translate="yes" xml:space="preserve">
          <source>Instantiates an all-ones variable of the same shape as another tensor.</source>
          <target state="translated">다른 텐서와 동일한 모양의 올인원 변수를 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="05d54627ce37da1dd958b8c24f85136425c8109f" translate="yes" xml:space="preserve">
          <source>Instantiates an all-zeros variable and returns it.</source>
          <target state="translated">모두 0 인 변수를 인스턴스화하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="94d5c94851b51c4270f6a95b7c0475db1f95de16" translate="yes" xml:space="preserve">
          <source>Instantiates an all-zeros variable of the same shape as another tensor.</source>
          <target state="translated">다른 텐서와 동일한 모양의 모든 0 변수를 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="473a492fa8efc4ff13a257196fc8bcdbedc7a3be" translate="yes" xml:space="preserve">
          <source>Instantiates an initializer from a configuration dictionary.</source>
          <target state="translated">구성 사전에서 이니셜 라이저를 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="a0ef306da9dababdc7dcdebe674cef89859a3705" translate="yes" xml:space="preserve">
          <source>Instead of a string enum, prefer &lt;code&gt;DEFINE_enum_class&lt;/code&gt;, which allows defining enums from an &lt;code&gt;enum.Enum&lt;/code&gt; class.</source>
          <target state="translated">문자열 열거 형 대신 &lt;code&gt;DEFINE_enum_class&lt;/code&gt; 선호 하는 &lt;code&gt;enum.Enum&lt;/code&gt; 클래스 에서 열거 형을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ba67eec9e92df05acdf46af85244d2e3cb47ac2" translate="yes" xml:space="preserve">
          <source>Instead of this:</source>
          <target state="translated">이 대신에 :</target>
        </trans-unit>
        <trans-unit id="512626e184ef04fe486402828c5c025627c4c4b2" translate="yes" xml:space="preserve">
          <source>Instead of working with &lt;code&gt;Tensor&lt;/code&gt; objects, most operations work with &lt;code&gt;TensorArray&lt;/code&gt; objects directly.</source>
          <target state="translated">대부분 의 작업은 &lt;code&gt;Tensor&lt;/code&gt; 객체 를 사용하는 대신 &lt;code&gt;TensorArray&lt;/code&gt; 객체를 직접 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5af1b9159af411b6d7c635a164a0a3cae7782b83" translate="yes" xml:space="preserve">
          <source>Instead, use TensorFlow collections like &lt;a href=&quot;tensorarray&quot;&gt;&lt;code&gt;tf.TensorArray&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">대신 &lt;a href=&quot;tensorarray&quot;&gt; &lt;code&gt;tf.TensorArray&lt;/code&gt; &lt;/a&gt; 와 같은 TensorFlow 컬렉션을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="986b3aa1fa9c8a53c78f4ac79b77467a9d988af6" translate="yes" xml:space="preserve">
          <source>Instead, we can use &lt;code&gt;tensor.experimental_ref()&lt;/code&gt;.</source>
          <target state="translated">대신에 &lt;code&gt;tensor.experimental_ref()&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4f88879032bd2f2457bad138fb5059212807b2a" translate="yes" xml:space="preserve">
          <source>Instead, we can use &lt;code&gt;variable.experimental_ref()&lt;/code&gt;.</source>
          <target state="translated">대신 &lt;code&gt;variable.experimental_ref()&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="865bac3875319b333427170b8f58a76d52bdfa96" translate="yes" xml:space="preserve">
          <source>Instead, wrap nested &lt;code&gt;@tf.custom_gradients&lt;/code&gt; in another function:</source>
          <target state="translated">대신 다른 함수에서 중첩 된 &lt;code&gt;@tf.custom_gradients&lt;/code&gt; 를 래핑하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc5a90a943564f7a628a84e21312bf2ef63b9877" translate="yes" xml:space="preserve">
          <source>Integer (scalar), number of axes.</source>
          <target state="translated">정수 (스칼라), 축 수입니다.</target>
        </trans-unit>
        <trans-unit id="2b058f1f30deac1321d12aaea555f116fa6dcac5" translate="yes" xml:space="preserve">
          <source>Integer or TensorShape: size of outputs produced by this cell.</source>
          <target state="translated">정수 또는 TensorShape :이 셀에서 생성 된 출력 크기.</target>
        </trans-unit>
        <trans-unit id="3e17f88143adecb575931142178922e1f292bca6" translate="yes" xml:space="preserve">
          <source>Integer, the number of scalars in &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">정수에서 스칼라의 수 &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c415d05fde4b20fb3d078c3ec3eea128c860727" translate="yes" xml:space="preserve">
          <source>Intended for use in gradient code which might deal with &lt;code&gt;IndexedSlices&lt;/code&gt; objects, which are easy to multiply by a scalar but more expensive to multiply with arbitrary tensors.</source>
          <target state="translated">스칼라로 쉽게 곱할 수 있지만 임의의 텐서와 곱하기에는 더 비싼 &lt;code&gt;IndexedSlices&lt;/code&gt; 객체를 처리 할 수있는 그래디언트 코드에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="09de4915cfc5e9dec66a0e4b3cf98d49d13a1bf5" translate="yes" xml:space="preserve">
          <source>Interface for listeners that take action before or after checkpoint save.</source>
          <target state="translated">체크 포인트 저장 전후에 조치를 취하는 리스너에 대한 인터페이스.</target>
        </trans-unit>
        <trans-unit id="7966d1ee34aecdadb5e17da45b8dc52964483fe6" translate="yes" xml:space="preserve">
          <source>Interface for the head/top of a model.</source>
          <target state="translated">모델의 헤드 / 톱 인터페이스.</target>
        </trans-unit>
        <trans-unit id="970dc6a3a66245c62ed217c2880dacf860847f5f" translate="yes" xml:space="preserve">
          <source>Interface representing a stateful summary writer object.</source>
          <target state="translated">상태 저장 요약 작성기 객체를 나타내는 인터페이스.</target>
        </trans-unit>
        <trans-unit id="267b20fba551cfdfeaade8ce47b964dcb7474511" translate="yes" xml:space="preserve">
          <source>Interleave the values from the &lt;code&gt;data&lt;/code&gt; tensors into a single tensor.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 텐서 의 값을 단일 텐서에 인터리브하십시오 .</target>
        </trans-unit>
        <trans-unit id="dfeb3be591d4b480789b9b8465a40c757f82e1e8" translate="yes" xml:space="preserve">
          <source>Internal helper function for 'sp_t / dense_t'.</source>
          <target state="translated">'sp_t / dense_t'에 대한 내부 도우미 기능.</target>
        </trans-unit>
        <trans-unit id="e702c08b377f90299d4d1edf33ea46f8d70ab908" translate="yes" xml:space="preserve">
          <source>Internal scopes and variable names should not depend on any arguments that are not supplied to &lt;code&gt;make_template&lt;/code&gt;. In general you will get a ValueError telling you that you are trying to reuse a variable that doesn't exist if you make a mistake.</source>
          <target state="translated">내부 범위와 변수 이름은 &lt;code&gt;make_template&lt;/code&gt; 에 제공되지 않은 인수에 의존해서는 안됩니다 . 일반적으로 실수를하면 존재하지 않는 변수를 재사용하려고한다는 ValueError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a8a9d8482fb70d4cb98a40c92c111baaae956ec4" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; can build more than one graph, to support arguments with different data types or shapes, since TensorFlow can build more efficient graphs that are specialized on shapes and dtypes. &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; also treats any pure Python value as opaque objects, and builds a separate graph for each set of Python arguments that it encounters.</source>
          <target state="translated">내부적으로 &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 은 여러 데이터 유형 또는 모양의 인수를 지원하기 위해 둘 이상의 그래프를 작성할 수 있습니다. TensorFlow는 모양 및 dtype에 특화된보다 효율적인 그래프를 작성할 수 있기 때문입니다. &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 은 또한 순수한 Python 값을 불투명 한 객체로 취급하고, 발생하는 각 Python 인수 세트에 대해 별도의 그래프를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="3754c7a802c267bca9422c11ea6f0ba375d68725" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; adds outside compilation attributes to all ops in &lt;code&gt;computation&lt;/code&gt;. During later graph pass, these ops with outside compilation attribute is extracted out and replicated into a host-side graph. Inputs to this extract host-side graph is sent from TPU computation graph to host graph via a pair of XlaSendToHost and XlaRecvFromHost ops. Note that using &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; may result in tensor transfer between TPU and CPU, leading to non-trivial performance impact.</source>
          <target state="translated">내부적으로 &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; 은 &lt;code&gt;computation&lt;/code&gt; 모든 op에 외부 컴파일 속성을 추가합니다 . 나중에 그래프를 통과하는 동안 외부 컴파일 속성을 가진 이러한 op가 추출되어 호스트 측 그래프로 복제됩니다. 이 추출 호스트 측 그래프에 대한 입력은 XlaSendToHost 및 XlaRecvFromHost ops 쌍을 통해 TPU 계산 그래프에서 호스트 그래프로 전송됩니다. &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; 을 사용 하면 TPU와 CPU간에 텐서 전송이 발생하여 사소한 성능 영향을 초래할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3b11c4a32c583b06a946fb7dece277cfaecec4c" translate="yes" xml:space="preserve">
          <source>Internally, a &lt;code&gt;RaggedTensor&lt;/code&gt; consists of a concatenated list of values that are partitioned into variable-length rows. In particular, each &lt;code&gt;RaggedTensor&lt;/code&gt; consists of:</source>
          <target state="translated">내부적으로 &lt;code&gt;RaggedTensor&lt;/code&gt; 는 가변 길이 행으로 분할 된 연결된 값 목록으로 구성됩니다. 특히 각 &lt;code&gt;RaggedTensor&lt;/code&gt; 는 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="ccc43cd3b01644683dd7e060724d61cbe55125e2" translate="yes" xml:space="preserve">
          <source>Internally, this op reshapes the input tensors and invokes &lt;a href=&quot;../../../nn/conv2d&quot;&gt;&lt;code&gt;tf.nn.conv2d&lt;/code&gt;&lt;/a&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;, a tensor of shape [batch, in_width, in_channels] is reshaped to [batch, 1, in_width, in_channels], and the filter is reshaped to [1, filter_width, in_channels, out_channels]. The result is then reshaped back to [batch, out_width, out_channels] (where out_width is a function of the stride and padding as in conv2d) and returned to the caller.</source>
          <target state="translated">내부적으로이 op는 입력 텐서를 재구성하고 &lt;a href=&quot;../../../nn/conv2d&quot;&gt; &lt;code&gt;tf.nn.conv2d&lt;/code&gt; 를&lt;/a&gt; 호출합니다 . 예를 들어 &lt;code&gt;data_format&lt;/code&gt; 이 &quot;NC&quot;로 시작하지 않으면 [batch, in_width, in_channels] 모양의 텐서가 [batch, 1, in_width, in_channels]로 재구성되고 필터는 [1, filter_width, in_channels, out_channels]. 그런 다음 결과는 [batch, out_width, out_channels] (여기서 out_width는 conv2d에서 보폭과 패딩의 함수 임)로 다시 모양이 바뀌고 호출자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7c69ad0876e39d22ce51635e4a30f9a378a7dbe4" translate="yes" xml:space="preserve">
          <source>Internally, this op reshapes the input tensors and invokes &lt;a href=&quot;conv2d&quot;&gt;&lt;code&gt;tf.nn.conv2d&lt;/code&gt;&lt;/a&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;, a tensor of shape [batch, in_width, in_channels] is reshaped to [batch, 1, in_width, in_channels], and the filter is reshaped to [1, filter_width, in_channels, out_channels]. The result is then reshaped back to [batch, out_width, out_channels] (where out_width is a function of the stride and padding as in conv2d) and returned to the caller.</source>
          <target state="translated">내부적으로이 op는 입력 텐서를 재구성하고 &lt;a href=&quot;conv2d&quot;&gt; &lt;code&gt;tf.nn.conv2d&lt;/code&gt; 를&lt;/a&gt; 호출합니다 . 예를 들어 &lt;code&gt;data_format&lt;/code&gt; 이 &quot;NC&quot;로 시작하지 않으면 [batch, in_width, in_channels] 모양의 텐서가 [batch, 1, in_width, in_channels]로 재구성되고 필터는 [1, filter_width, in_channels, out_channels]. 그런 다음 결과는 [batch, out_width, out_channels] (여기서 out_width는 conv2d에서 보폭과 패딩의 함수 임)로 다시 모양이 바뀌고 호출자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="917c90b98804c8a00e2f1f77d52497e6cc4c5478" translate="yes" xml:space="preserve">
          <source>Interpolation formula inspired by section 4 of Davis &amp;amp; Goadrich 2006.</source>
          <target state="translated">Davis &amp;amp; Goadrich 2006의 섹션 4에서 영감을 얻은 보간 공식.</target>
        </trans-unit>
        <trans-unit id="4b1b48a15bee98562ab2271bf7c674c69c76f9d7" translate="yes" xml:space="preserve">
          <source>Interpreter interface for TensorFlow Lite Models.</source>
          <target state="translated">TensorFlow Lite 모델의 인터프리터 인터페이스.</target>
        </trans-unit>
        <trans-unit id="cd0dc8bec74842908edb1323c813960ee0d10418" translate="yes" xml:space="preserve">
          <source>Intuitively, separable convolutions can be understood as a way to factorize a convolution kernel into two smaller kernels, or as an extreme version of an Inception block.</source>
          <target state="translated">직관적으로, 분리 가능한 컨벌루션은 컨볼 루션 커널을 두 개의 작은 커널로 분해하는 방법 또는 익셉션 블록의 극단적 인 버전으로 이해 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="765dc4833ea51f9712325654e6149e4320ae0357" translate="yes" xml:space="preserve">
          <source>Invalid IDs (&amp;lt; 0) are pruned from input IDs and weights, as well as any IDs with non-positive weight. For an entry with no features, the embedding vector for &lt;code&gt;default_id&lt;/code&gt; is returned, or the 0-vector if &lt;code&gt;default_id&lt;/code&gt; is not supplied.</source>
          <target state="translated">유효하지 않은 ID (&amp;lt;0)는 입력 ID 및 가중치와 양수가 아닌 ID에서 정리됩니다. 기능이없는 항목의 경우 &lt;code&gt;default_id&lt;/code&gt; 에 대한 포함 벡터 가 반환되거나 &lt;code&gt;default_id&lt;/code&gt; 가 제공되지 않으면 0- 벡터가 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="7227e77ba4898ce78f530c7179daf1d58aee3eba" translate="yes" xml:space="preserve">
          <source>Invalid input type.</source>
          <target state="translated">입력 유형이 잘못되었습니다.</target>
        </trans-unit>
        <trans-unit id="5ad0fc9e3c1773fd6f82ccad6e0477a808a3ba38" translate="yes" xml:space="preserve">
          <source>Invalid signature keys.</source>
          <target state="translated">잘못된 서명 키.</target>
        </trans-unit>
        <trans-unit id="b0224cb82fac3bd64320723e2cfea88c4cb1de8e" translate="yes" xml:space="preserve">
          <source>Inverse 2D fast Fourier transform.</source>
          <target state="translated">역 2D 고속 푸리에 변환.</target>
        </trans-unit>
        <trans-unit id="f86113a2dbd7ed935c16e9099b42fb7e6dba6038" translate="yes" xml:space="preserve">
          <source>Inverse 2D real-valued fast Fourier transform.</source>
          <target state="translated">역 2D 실수 고속 푸리에 변환.</target>
        </trans-unit>
        <trans-unit id="bf6cbaad72f3eb6b8fa736b0c48f1b4b54ba4d45" translate="yes" xml:space="preserve">
          <source>Inverse 3D fast Fourier transform.</source>
          <target state="translated">역 3D 고속 푸리에 변환.</target>
        </trans-unit>
        <trans-unit id="729fe142f2358fcfd2d893f486c7ef7071098901" translate="yes" xml:space="preserve">
          <source>Inverse 3D real-valued fast Fourier transform.</source>
          <target state="translated">역 3D 실수 고속 푸리에 변환.</target>
        </trans-unit>
        <trans-unit id="2b74c26781dc19d8cf865c887430b83b4bb874bf" translate="yes" xml:space="preserve">
          <source>Inverse error function of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 역 오차 함수 .</target>
        </trans-unit>
        <trans-unit id="2769447bdda650e2de43a09ec7f4f9b88e781719" translate="yes" xml:space="preserve">
          <source>Inverse fast Fourier transform.</source>
          <target state="translated">역 고속 푸리에 변환.</target>
        </trans-unit>
        <trans-unit id="eca1ad1de11fec11fe41231e47070833956358bf" translate="yes" xml:space="preserve">
          <source>Inverse of the &lt;code&gt;serialize&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;serialize&lt;/code&gt; 기능의 역수 .</target>
        </trans-unit>
        <trans-unit id="21739830573f1c06f7716e20676dc8044ac7dbe1" translate="yes" xml:space="preserve">
          <source>Inverse real-valued fast Fourier transform.</source>
          <target state="translated">역 실수 고속 푸리에 변환.</target>
        </trans-unit>
        <trans-unit id="454fcced1bbd08f2febd8b9e63fda971abd10063" translate="yes" xml:space="preserve">
          <source>Invert (flip) each bit of supported types; for example, type &lt;code&gt;uint8&lt;/code&gt; value 01010101 becomes 10101010.</source>
          <target state="translated">지원되는 각 유형의 비트를 반전 (뒤집기)하십시오. 예를 들어, &lt;code&gt;uint8&lt;/code&gt; 값 01010101 유형 은 10101010이됩니다.</target>
        </trans-unit>
        <trans-unit id="91d644123d1e143b7bcae5cd3ca4411f53cc0582" translate="yes" xml:space="preserve">
          <source>Invoke the interpreter.</source>
          <target state="translated">인터프리터를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="07bd56502c92792eb48f74185c5de124c19b5f15" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;Loss&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;Loss&lt;/code&gt; 인스턴스 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="b13fc57aaccb54faea2366b6fa9ef75d7f668372" translate="yes" xml:space="preserve">
          <source>Is the column count of the product large (&amp;gt;&amp;gt; 1)?</source>
          <target state="translated">제품의 열 수가 많습니까 (&amp;gt;&amp;gt; 1)?</target>
        </trans-unit>
        <trans-unit id="b8d5c82b816bc835c62912b744400ff40c02617e" translate="yes" xml:space="preserve">
          <source>Is the density of &lt;code&gt;A&lt;/code&gt; larger than approximately 15%?</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 의 밀도 가 약 15 %보다 큽니까?</target>
        </trans-unit>
        <trans-unit id="15b30b164c5d405f36fa8233e2a4a5041ac0f62c" translate="yes" xml:space="preserve">
          <source>It allows a small gradient when the unit is not active: &lt;code&gt;f(x) = alpha * x for x &amp;lt; 0&lt;/code&gt;, &lt;code&gt;f(x) = x for x &amp;gt;= 0&lt;/code&gt;.</source>
          <target state="translated">단위가 활성화되지 않은 경우 작은 기울기를 허용합니다 : &lt;code&gt;f(x) = alpha * x for x &amp;lt; 0&lt;/code&gt; 경우 &lt;code&gt;f(x) = x for x &amp;gt;= 0&lt;/code&gt; alpha * x , x&amp;gt; = 0의 경우 f (x) = x .</target>
        </trans-unit>
        <trans-unit id="32fedff7c0ca1dff1ca98fad88e05d900e06abf4" translate="yes" xml:space="preserve">
          <source>It allows you to take a bunch of TensorFlow ops and annotate the construction such that toco knows how to convert it to tflite. This embeds a pseudo function in a TensorFlow graph. This allows embedding high-level API usage information in a lower level TensorFlow implementation so that an alternative implementation can be substituted later.</source>
          <target state="translated">그것은 당신이 TensorFlow ops의 무리를 가지고 toco가 그것을 tflite로 변환하는 방법을 알 수 있도록 구성에 주석을 달 수 있습니다. 이것은 의사 함수를 TensorFlow 그래프에 포함시킵니다. 이를 통해 하위 레벨 TensorFlow 구현에 고급 API 사용 정보를 임베드하여 나중에 대체 구현을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="476f3a0bb3e98caba9635badab1de855ab2206de" translate="yes" xml:space="preserve">
          <source>It also assumes that all id values lie in the range [0, p0), where p0 is the sum of the size of params along dimension 0.</source>
          <target state="translated">또한 모든 id 값이 [0, p0) 범위에 있다고 가정합니다. 여기서 p0은 차원 0에 따른 매개 변수 크기의 합입니다.</target>
        </trans-unit>
        <trans-unit id="268056cfbb264bea0c41c6a1efa283fdafc29f69" translate="yes" xml:space="preserve">
          <source>It also parses argument as comma-separated list of strings if requested.</source>
          <target state="translated">또한 요청 된 경우 인수를 쉼표로 구분 된 문자열 목록으로 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="486eade8a1729dd16d206df5323836f9c26ec548" translate="yes" xml:space="preserve">
          <source>It assigns out-of-vocabulary keys to buckets based in their hashes.</source>
          <target state="translated">어휘를 기반으로 버킷에 어휘가없는 키를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="7a36235a0369fe7b8f72b7109e7cf4f2d22578c2" translate="yes" xml:space="preserve">
          <source>It can also be used with a custom &lt;code&gt;model_fn&lt;/code&gt;. Example:</source>
          <target state="translated">사용자 정의 &lt;code&gt;model_fn&lt;/code&gt; 과 함께 사용할 수도 있습니다 . 예:</target>
        </trans-unit>
        <trans-unit id="d753925b5debe450dc477ca87f5806e3bd88bad5" translate="yes" xml:space="preserve">
          <source>It can also return a subnormal number.</source>
          <target state="translated">또한 비정규 숫자를 반환 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="14d6407e1c3a121bea2730155a982791be2b5c57" translate="yes" xml:space="preserve">
          <source>It can be represented by an Integer, a TensorShape or a tuple of Integers or TensorShapes.</source>
          <target state="translated">Integer, TensorShape 또는 Integers 또는 TensorShapes의 튜플로 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="851d18a55b1a7d8f809ccad34a86887bc5acef62" translate="yes" xml:space="preserve">
          <source>It can either wrap an existing tensor (pass an &lt;code&gt;input_tensor&lt;/code&gt; argument) or create a placeholder tensor (pass arguments &lt;code&gt;input_shape&lt;/code&gt;, and optionally, &lt;code&gt;dtype&lt;/code&gt;).</source>
          <target state="translated">기존 텐서를 랩핑하거나 ( &lt;code&gt;input_tensor&lt;/code&gt; 인수 전달) 자리 표시 자 텐서를 생성 할 수 있습니다 ( &lt;code&gt;input_shape&lt;/code&gt; 인수 및 선택적으로 &lt;code&gt;dtype&lt;/code&gt; 전달 ).</target>
        </trans-unit>
        <trans-unit id="15ac3bcf9184c700a5153c1382ad28ba06bb3727" translate="yes" xml:space="preserve">
          <source>It crops along spatial dimensions, i.e. height and width.</source>
          <target state="translated">공간 차원, 즉 높이와 너비를 따라 자릅니다.</target>
        </trans-unit>
        <trans-unit id="d2b114021f685a568fa7427074087bbb555c68ea" translate="yes" xml:space="preserve">
          <source>It crops along the time dimension (axis 1).</source>
          <target state="translated">시간 차원을 따라 자릅니다 (축 1).</target>
        </trans-unit>
        <trans-unit id="50c49b5169d29ab097a8aff807662666883b1d66" translate="yes" xml:space="preserve">
          <source>It does not allow cell clipping, a projection layer, and does not use peep-hole connections: it is the basic baseline.</source>
          <target state="translated">셀 클리핑, 투영 레이어를 허용하지 않으며 들여다 보는 구멍 연결을 사용하지 않습니다. 기본 기준선입니다.</target>
        </trans-unit>
        <trans-unit id="6b5f31c782dbbe7c2f3add466394784c60b5c232" translate="yes" xml:space="preserve">
          <source>It doesn't support custom saver logic (such as ExponentialMovingAverage support)</source>
          <target state="translated">커스텀 세이버 로직 (ExponentialMovingAverage 지원 등)은 지원하지 않습니다</target>
        </trans-unit>
        <trans-unit id="45051dd91200e3bf9ba59dd2436f0164ef584605" translate="yes" xml:space="preserve">
          <source>It doesn't support multi-node distributed mode.</source>
          <target state="translated">다중 노드 분산 모드를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="489f42ddeaa2f25f8e720115125e5a0a2b41d1ec" translate="yes" xml:space="preserve">
          <source>It doesn't support saveable objects other than variables (such as boosted tree support)</source>
          <target state="translated">변수 이외의 저장 가능한 객체 (예 : 부스트 트리 지원)는 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80d27c6a3c091aa8b38e2cae300405b91db71c40" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; 하여 0을 중심으로 잘린 정규 분포에서 표본을 추출합니다. 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수입니다.</target>
        </trans-unit>
        <trans-unit id="b5e99b6e8055bbe5e5eab07a52b329d5a27c1e5d" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; 하여 0을 중심으로 잘린 정규 분포에서 표본을 추출합니다. 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수이고 &lt;code&gt;fan_out&lt;/code&gt; 은 가중치 텐서 의 출력 단위 수입니다.</target>
        </trans-unit>
        <trans-unit id="a4e494a282bcac9914c8d339f910277f94b89c75" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(2 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(2 / fan_in)&lt;/code&gt; 하여 0을 중심으로 잘린 정규 분포에서 표본을 추출합니다. 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수입니다.</target>
        </trans-unit>
        <trans-unit id="1d4854b6f38f71edebdd9e6527324a084528dc03" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with standard deviation (after truncation) given by &lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; 의해 주어진 표준 편차 (절단 후)를 중심으로 0을 중심으로 잘린 정규 분포에서 표본을 추출합니다. 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수입니다.</target>
        </trans-unit>
        <trans-unit id="706d32c6afa42ca96cd3027b8882b964f42483dc" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with standard deviation (after truncation) given by &lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; 의해 주어진 표준 편차 (절단 후)를 중심으로 0을 중심으로 잘린 정규 분포에서 표본을 추출합니다. 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수이고 &lt;code&gt;fan_out&lt;/code&gt; 은 수입니다. 무게 텐서의 출력 단위.</target>
        </trans-unit>
        <trans-unit id="5f33594cfa3f89fac81e308daeac3f28ace4e60f" translate="yes" xml:space="preserve">
          <source>It draws samples from a truncated normal distribution centered on 0 with standard deviation (after truncation) given by &lt;code&gt;stddev = sqrt(2 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(2 / fan_in)&lt;/code&gt; 의해 주어진 표준 편차 (절단 후)를 중심으로 0을 중심으로 잘린 정규 분포에서 표본을 추출합니다. 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수입니다.</target>
        </trans-unit>
        <trans-unit id="c44f8959e90c766cfbd08c0d20f313e9e3b3ed0c" translate="yes" xml:space="preserve">
          <source>It draws samples from a uniform distribution within [-limit, limit] where &lt;code&gt;limit&lt;/code&gt; is &lt;code&gt;sqrt(3 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">[-limit, limit] 내의 균일 분포에서 표본을 추출합니다. 여기서 &lt;code&gt;limit&lt;/code&gt; 은 &lt;code&gt;sqrt(3 / fan_in)&lt;/code&gt; 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수입니다.</target>
        </trans-unit>
        <trans-unit id="0c37fca6c106b6324e898740a4adc0fc1b97b0ac" translate="yes" xml:space="preserve">
          <source>It draws samples from a uniform distribution within [-limit, limit] where &lt;code&gt;limit&lt;/code&gt; is &lt;code&gt;sqrt(6 / (fan_in + fan_out))&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units in the weight tensor.</source>
          <target state="translated">[-limit, limit] 내의 균일 분포에서 표본을 추출합니다. 여기서 &lt;code&gt;limit&lt;/code&gt; 은 &lt;code&gt;sqrt(6 / (fan_in + fan_out))&lt;/code&gt; 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수이고 &lt;code&gt;fan_out&lt;/code&gt; 은 가중치 의 출력 단위 수입니다. 텐서.</target>
        </trans-unit>
        <trans-unit id="d5718aadde33ef95a3c3b4c608c444a227584762" translate="yes" xml:space="preserve">
          <source>It draws samples from a uniform distribution within [-limit, limit] where &lt;code&gt;limit&lt;/code&gt; is &lt;code&gt;sqrt(6 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">[-limit, limit] 내의 균일 분포에서 샘플을 추출합니다. 여기서 &lt;code&gt;limit&lt;/code&gt; 은 &lt;code&gt;sqrt(6 / fan_in)&lt;/code&gt; 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수입니다.</target>
        </trans-unit>
        <trans-unit id="2ce5558a20bb38a79c8e709107600e4d5c1bcc0e" translate="yes" xml:space="preserve">
          <source>It follows:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="827600f9ebad20c3d360f7ada83d7c19942edb1c" translate="yes" xml:space="preserve">
          <source>It generates one key-value pair per line. The type of table key and value are specified by &lt;code&gt;key_dtype&lt;/code&gt; and &lt;code&gt;value_dtype&lt;/code&gt;, respectively. Similarly the content of the key and value are specified by the key_index and value_index.</source>
          <target state="translated">행당 하나의 키-값 쌍을 생성합니다. 테이블 키 및 값의 유형은 각각 &lt;code&gt;key_dtype&lt;/code&gt; 및 &lt;code&gt;value_dtype&lt;/code&gt; 에 의해 지정됩니다 . 마찬가지로 키 및 값의 내용은 key_index 및 value_index로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="2a2d379bdfeecbddb9707ada090d34ce0eb68820" translate="yes" xml:space="preserve">
          <source>It has no &lt;code&gt;shape&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;shape&lt;/code&gt; 인수 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="2fde7e3aa3c7336499bb0ce7f6c8bfa735f0c7e7" translate="yes" xml:space="preserve">
          <source>It has no semantics. Multiple threads may be given the same name. The initial name is set by the constructor.</source>
          <target state="translated">의미가 없습니다. 여러 스레드에 동일한 이름을 지정할 수 있습니다. 초기 이름은 생성자가 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ff1533a7a658edcda661aa3acac6f89856e6dad8" translate="yes" xml:space="preserve">
          <source>It is a variant of Adam based on the infinity norm. Default parameters follow those provided in the paper. Adamax is sometimes superior to adam, specially in models with embeddings.</source>
          <target state="translated">그것은 무한대 규범을 기반으로 한 아담의 변형입니다. 기본 매개 변수는 용지에 제공된 매개 변수를 따릅니다. Adamax는 특히 임베딩이있는 모델에서 adam보다 우수합니다.</target>
        </trans-unit>
        <trans-unit id="3d404ea6191185d9005bf406cb6c69748b8eec2b" translate="yes" xml:space="preserve">
          <source>It is an error if the model cannot be recovered and no &lt;code&gt;init_op&lt;/code&gt; or &lt;code&gt;init_fn&lt;/code&gt; or &lt;code&gt;local_init_op&lt;/code&gt; are passed.</source>
          <target state="translated">모델을 복구 할 수없고 &lt;code&gt;init_op&lt;/code&gt; , &lt;code&gt;init_fn&lt;/code&gt; 또는 &lt;code&gt;local_init_op&lt;/code&gt; 가 전달 되지 않으면 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="69dae8d4745b98f4c44352740deadff10964a8ba" translate="yes" xml:space="preserve">
          <source>It is an error to set &lt;code&gt;new_shape&lt;/code&gt; as [3, 7] since this represents a rank-2 tensor while &lt;code&gt;sp_input&lt;/code&gt; is rank-3. This is either a ValueError during graph construction (if both shapes are known) or an OpError during run time.</source>
          <target state="translated">그것은 집합 오류라고 &lt;code&gt;new_shape&lt;/code&gt; 같이 3, 7] 동안이 랭크 2 텐서를 나타내므로 &lt;code&gt;sp_input&lt;/code&gt; 가 등급 3이다. 이는 그래프 구성 중 ValueError (두 모양이 모두 알려진 경우)이거나 런타임 중 OpError입니다.</target>
        </trans-unit>
        <trans-unit id="5ccfc49f1d16ffbdbdaecc99b012e0441a365f79" translate="yes" xml:space="preserve">
          <source>It is commonly observed that a monotonically decreasing learning rate, whose degree of change is carefully chosen, results in a better performing model. This function applies a polynomial decay function to a provided initial &lt;code&gt;learning_rate&lt;/code&gt; to reach an &lt;code&gt;end_learning_rate&lt;/code&gt; in the given &lt;code&gt;decay_steps&lt;/code&gt;.</source>
          <target state="translated">변화의 정도를 신중하게 선택한 단조 적으로 감소하는 학습 속도가 더 나은 모델을 만드는 것으로 일반적으로 관찰됩니다. 이 함수는 주어진 &lt;code&gt;decay_steps&lt;/code&gt; 에서 &lt;code&gt;end_learning_rate&lt;/code&gt; 에 도달 하기 위해 제공된 초기 &lt;code&gt;learning_rate&lt;/code&gt; 에 다항식 감쇠 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="03e5a933480c8e3d46c5c53fb5c1fb8807a8d4c2" translate="yes" xml:space="preserve">
          <source>It is commonly observed that a monotonically decreasing learning rate, whose degree of change is carefully chosen, results in a better performing model. This schedule applies a polynomial decay function to an optimizer step, given a provided &lt;code&gt;initial_learning_rate&lt;/code&gt;, to reach an &lt;code&gt;end_learning_rate&lt;/code&gt; in the given &lt;code&gt;decay_steps&lt;/code&gt;.</source>
          <target state="translated">변화의 정도를 신중하게 선택한 단조 적으로 감소하는 학습 속도가 더 나은 모델을 만드는 것으로 일반적으로 관찰됩니다. 이 스케줄은 제공된 &lt;code&gt;initial_learning_rate&lt;/code&gt; 가 지정된 다항식 감쇠 함수를 옵티 마이저 단계 에 적용하여 지정된 &lt;code&gt;decay_steps&lt;/code&gt; 에서 &lt;code&gt;end_learning_rate&lt;/code&gt; 에 도달합니다 .</target>
        </trans-unit>
        <trans-unit id="fe4b2f8c7d8951354526292dd7c61c73dc1e2912" translate="yes" xml:space="preserve">
          <source>It is considered legacy, and we recommend the use of &lt;a href=&quot;../../../keras/layers/layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">레거시로 간주 &lt;a href=&quot;../../../keras/layers/layer&quot;&gt; &lt;code&gt;tf.keras.layers.Layer&lt;/code&gt; &lt;/a&gt; 대신 tf.keras.layers.Layer 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="6cf416effc655d4fb910a766ac33121955c51ad5" translate="yes" xml:space="preserve">
          <source>It is difficult to map expected label by a classifier such as &lt;code&gt;DNNClassifier&lt;/code&gt; to corresponding tf.parse_example spec. This utility encodes it by getting related information from users (key, dtype).</source>
          <target state="translated">&lt;code&gt;DNNClassifier&lt;/code&gt; 와 같은 분류 자에 의해 예상되는 레이블 을 해당 tf.parse_example 스펙 에 맵핑하는 것은 어렵습니다 . 이 유틸리티는 사용자 (key, dtype)로부터 관련 정보를 가져 와서 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="d4595134772db8c55f6625b52919e18fd5135f7c" translate="yes" xml:space="preserve">
          <source>It is difficult to map expected label by a regressor such as &lt;code&gt;DNNRegressor&lt;/code&gt; to corresponding tf.parse_example spec. This utility encodes it by getting related information from users (key, dtype).</source>
          <target state="translated">&lt;code&gt;DNNRegressor&lt;/code&gt; 와 같은 회귀 변수를 사용하여 예상되는 레이블 을 해당 tf.parse_example 사양 에 매핑하는 것은 어렵습니다 . 이 유틸리티는 사용자 (key, dtype)로부터 관련 정보를 가져 와서 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="230736ba631f5bba2d333739bd324940edb51e40" translate="yes" xml:space="preserve">
          <source>It is equivalent to a combination of decode and crop, but much faster by only decoding partial jpeg image.</source>
          <target state="translated">디코딩과 자르기의 조합과 동일하지만 부분 JPEG 이미지 만 디코딩하면 훨씬 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="f482cc1679df2f8fe4d9714245cd09b761e0e0a1" translate="yes" xml:space="preserve">
          <source>It is expected to call &lt;code&gt;call_for_each_replica(fn, ...)&lt;/code&gt; for any operations which potentially can be replicated across replicas (i.e. multiple GPUs) even if there is only CPU or one GPU. When defining the &lt;code&gt;fn&lt;/code&gt;, extra caution needs to be taken:</source>
          <target state="translated">CPU 또는 GPU가 하나 뿐인 경우에도 복제본 (예 : 여러 GPU)에서 복제 될 수있는 모든 작업에 대해 &lt;code&gt;call_for_each_replica(fn, ...)&lt;/code&gt; 를 호출 해야합니다. &lt;code&gt;fn&lt;/code&gt; 을 정의 할 때는 다음 과 같은주의가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="055fe1b6696e0cb19f02734d3009620768799505" translate="yes" xml:space="preserve">
          <source>It is generally recommend to use the functional layer API via &lt;code&gt;Input&lt;/code&gt;, (which creates an &lt;code&gt;InputLayer&lt;/code&gt;) without directly using &lt;code&gt;InputLayer&lt;/code&gt;.</source>
          <target state="translated">일반적 통해 기능성 층 API의 사용을 권유되는 &lt;code&gt;Input&lt;/code&gt; , (AN 생성되는 &lt;code&gt;InputLayer&lt;/code&gt; 를 직접 이용하지 않고) &lt;code&gt;InputLayer&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="0c1dce56c1c334dd954c808267845c4fe7fb7b16" translate="yes" xml:space="preserve">
          <source>It is okay to call SmartUnsetAll() repeatedly, as later calls have no effect if no SmartSet() calls have been made.</source>
          <target state="translated">SmartSet () 호출이 없으면 나중에 호출해도 효과가 없으므로 SmartUnsetAll ()을 반복해서 호출해도됩니다.</target>
        </trans-unit>
        <trans-unit id="cbc09d683ec73ca98ba02f3223c5c735b9c8958d" translate="yes" xml:space="preserve">
          <source>It is okay to call UnsetAll() repeatedly, as later calls have no effect if no Set() calls have been made.</source>
          <target state="translated">Set () 호출이 없으면 나중에 호출해도 효과가 없으므로 UnsetAll ()을 반복해서 호출해도됩니다.</target>
        </trans-unit>
        <trans-unit id="039e1ffae676b4a9189fbfca71673de319a2eb02" translate="yes" xml:space="preserve">
          <source>It is passed a &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;tf.compat.v1.Session&lt;/code&gt;&lt;/a&gt; in addition to &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;kwargs&lt;/code&gt;. The function typically runs one training step in the session.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 및 &lt;code&gt;kwargs&lt;/code&gt; 외에도 &lt;a href=&quot;../session&quot;&gt; &lt;code&gt;tf.compat.v1.Session&lt;/code&gt; &lt;/a&gt; 이 전달 됩니다. 이 기능은 일반적으로 세션에서 하나의 교육 단계를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="4edaba6091fd1339a6d60adfd68c1d64381243cd" translate="yes" xml:space="preserve">
          <source>It is preferable to use the numerically stabler function &lt;code&gt;i0e(x)&lt;/code&gt; instead.</source>
          <target state="translated">수치 적으로 안정적인 함수 &lt;code&gt;i0e(x)&lt;/code&gt; 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b32ab7a8ad30e94f34a9078c64b561ecc649a7ac" translate="yes" xml:space="preserve">
          <source>It is preferable to use the numerically stabler function &lt;code&gt;i1e(x)&lt;/code&gt; instead.</source>
          <target state="translated">수치 적으로 안정적인 함수 &lt;code&gt;i1e(x)&lt;/code&gt; 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5b68cac92e718665f740d5404a0bac254e090156" translate="yes" xml:space="preserve">
          <source>It is recommended to accept tensors only in the first argument. This way, all tensors are casted to the layer's compute dtype. &lt;code&gt;MyLayer&lt;/code&gt; should therefore be written as:</source>
          <target state="translated">첫 번째 인수에서만 텐서를 수락하는 것이 좋습니다. 이런 식으로 모든 텐서는 레이어의 계산 dtype으로 캐스팅됩니다. 따라서 &lt;code&gt;MyLayer&lt;/code&gt; 는 다음과 같이 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="b8a6022b1da15bcd7ce9fa43852b7ff4b3a38075" translate="yes" xml:space="preserve">
          <source>It is recommended to benchmark each in the setting of interest to pick the most efficient one (in terms of speed and memory usage). Correct choice of implementation can lead to dramatic speed improvements (e.g. 50X), potentially at the expense of RAM.</source>
          <target state="translated">속도와 메모리 사용량 측면에서 가장 효율적인 것을 선택하려면 관심있는 설정에서 각각 벤치 마크하는 것이 좋습니다. 올바른 구현 선택은 잠재적으로 RAM을 희생시키면서 극적인 속도 향상 (예 : 50X)으로 이어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de80edb49783b8cb8ef6ce6354c0c43e1747ba2d" translate="yes" xml:space="preserve">
          <source>It is recommended to call this method like this:</source>
          <target state="translated">이 방법을 다음과 같이 호출하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7f32b049c5b6760e31f453ac16ca6b1bd157e5d8" translate="yes" xml:space="preserve">
          <source>It is recommended to pass all args via name.</source>
          <target state="translated">이름을 통해 모든 인수를 전달하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="826574bd08bd207a37a5ac7010635a34563d3f0d" translate="yes" xml:space="preserve">
          <source>It is required that 1 &amp;lt;= N &amp;lt;= 3.</source>
          <target state="translated">1 &amp;lt;= N &amp;lt;= 3이어야합니다.</target>
        </trans-unit>
        <trans-unit id="4ab75a5dfd5237dbd24c019f2a7b88bf53a10583" translate="yes" xml:space="preserve">
          <source>It is similar to an LSTM layer, but the input transformations and recurrent transformations are both convolutional.</source>
          <target state="translated">LSTM 레이어와 비슷하지만 입력 변환과 반복 변환은 모두 컨볼 루션입니다.</target>
        </trans-unit>
        <trans-unit id="74f11eb78a29bbc7a4bd229124ab3954a3d9c88b" translate="yes" xml:space="preserve">
          <source>It is similar to python's &lt;code&gt;enumerate&lt;/code&gt;.</source>
          <target state="translated">파이썬의 &lt;code&gt;enumerate&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="7d6053630c2f7761cde3780c9939bf37ef79efba" translate="yes" xml:space="preserve">
          <source>It is similar to python's &lt;code&gt;enumerate&lt;/code&gt;. For example:</source>
          <target state="translated">파이썬의 &lt;code&gt;enumerate&lt;/code&gt; 와 유사합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f318e702dd1af7ea84563b5765448a9afbc0d1c" translate="yes" xml:space="preserve">
          <source>It is useful to consider the operation as transforming a 6-D Tensor. e.g. for data_format = NHWC, Each element in the input tensor can be specified via 6 coordinates, ordered by decreasing memory layout significance as: n,iY,iX,bY,bX,oC (where n=batch index, iX, iY means X or Y coordinates within the input image, bX, bY means coordinates within the output block, oC means output channels). The output would be the input transposed to the following layout: n,iY,bY,iX,bX,oC</source>
          <target state="translated">6D 텐서를 변형시키는 작업을 고려하는 것이 유용합니다. 예를 들어 data_format = NHWC의 경우, 입력 텐서의 각 요소는 다음과 같이 메모리 레이아웃 중요성을 감소시키는 순서로 6 개의 좌표를 통해 지정 될 수 있습니다. n, iY, iX, bY, bX, oC 또는 입력 이미지 내의 Y 좌표, bX, bY는 출력 블록 내의 좌표를 의미하고 oC는 출력 채널을 의미합니다). 출력은 다음 레이아웃으로 바뀐 입력입니다. n, iY, bY, iX, bX, oC</target>
        </trans-unit>
        <trans-unit id="33b9e307ecc266d30373e8ae40197969108607f4" translate="yes" xml:space="preserve">
          <source>It is useful to consider the operation as transforming a 6-D Tensor. e.g. for data_format = NHWC, Each element in the input tensor can be specified via 6 coordinates, ordered by decreasing memory layout significance as: n,oY,bY,oX,bX,iC (where n=batch index, oX, oY means X or Y coordinates within the output image, bX, bY means coordinates within the input block, iC means input channels). The output would be a transpose to the following layout: n,oY,oX,bY,bX,iC</source>
          <target state="translated">6D 텐서를 변형시키는 작업을 고려하는 것이 유용합니다. 예를 들어 data_format = NHWC의 경우, 입력 텐서의 각 요소는 다음과 같이 메모리 레이아웃의 중요성을 감소시키는 순서로 6 개의 좌표를 통해 지정할 수 있습니다. n, oY, bY, oX, bX, iC 또는 출력 이미지 내의 Y 좌표, bX, bY는 입력 블록 내의 좌표를 의미하고 iC는 입력 채널을 의미합니다). 출력은 다음 레이아웃으로 전치됩니다 : n, oY, oX, bY, bX, iC</target>
        </trans-unit>
        <trans-unit id="e75cc35de54e3e32796349b1444b1e63ad296fd8" translate="yes" xml:space="preserve">
          <source>It must be called at most once per thread object. It arranges for the object's run() method to be invoked in a separate thread of control.</source>
          <target state="translated">스레드 오브젝트 당 최대 한 번 호출되어야합니다. 객체의 run () 메소드가 별도의 제어 스레드에서 호출되도록 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="1504b989bdf7b1f705a60f9e363573e8732b8477" translate="yes" xml:space="preserve">
          <source>It must return a &lt;code&gt;Tensor&lt;/code&gt; with the given &lt;code&gt;dtype&lt;/code&gt; if specified. If the conversion function creates a new &lt;code&gt;Tensor&lt;/code&gt;, it should use the given &lt;code&gt;name&lt;/code&gt; if specified. All exceptions will be propagated to the caller.</source>
          <target state="translated">지정된 경우 지정된 &lt;code&gt;dtype&lt;/code&gt; 을 가진 &lt;code&gt;Tensor&lt;/code&gt; 를 리턴해야 합니다. 변환 기능이 새로 만드는 경우 &lt;code&gt;Tensor&lt;/code&gt; , 그것은 주어진 사용해야 &lt;code&gt;name&lt;/code&gt; 지정합니다. 모든 예외는 호출자에게 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="e941bc349ebfd4ff3008c52349915ae4083dd6bf" translate="yes" xml:space="preserve">
          <source>It reduces to one GPU along edges in some hierarchy and broadcasts back to each GPU along the same path. Before performing all-reduce, tensors will be repacked or aggregated for more efficient cross-device transportation.</source>
          <target state="translated">일부 계층 구조에서 가장자리를 따라 하나의 GPU로 감소하고 동일한 경로를 따라 각 GPU로 다시 브로드 캐스트합니다. 전체 축소를 수행하기 전에 장치 간 운송 효율을 높이기 위해 텐서가 다시 포장되거나 집계됩니다.</target>
        </trans-unit>
        <trans-unit id="e10717e721b673902cc6c33782d620f0b40f930d" translate="yes" xml:space="preserve">
          <source>It requires a &lt;code&gt;global_step&lt;/code&gt; value to compute the decayed learning rate. You can just pass a TensorFlow variable that you increment at each training step.</source>
          <target state="translated">소멸 된 학습률을 계산 하려면 &lt;code&gt;global_step&lt;/code&gt; 값 이 필요합니다 . 각 훈련 단계에서 증가시키는 TensorFlow 변수를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fde5a4641284d4a337d5e4303a0fda6092ec1618" translate="yes" xml:space="preserve">
          <source>It requires a &lt;code&gt;step&lt;/code&gt; value to compute the decayed learning rate. You can just pass a TensorFlow variable that you increment at each training step.</source>
          <target state="translated">소멸 된 학습률을 계산 하려면 &lt;code&gt;step&lt;/code&gt; 값 이 필요합니다 . 각 훈련 단계에서 증가시키는 TensorFlow 변수를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c4c33ebbb47a1a1b8df599643f5570158fbc212" translate="yes" xml:space="preserve">
          <source>It runs the reduction operation defined by &lt;code&gt;reduce_op&lt;/code&gt; and put the result on &lt;code&gt;destinations&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reduce_op&lt;/code&gt; 로 정의 된 축소 작업을 실행하고 결과를 &lt;code&gt;destinations&lt;/code&gt; 에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b12b862d4aba6ff650f976de343028f17954fb23" translate="yes" xml:space="preserve">
          <source>It succeeds if dirname already exists and is writable.</source>
          <target state="translated">dirname이 이미 존재하고 쓰기 가능하면 성공합니다.</target>
        </trans-unit>
        <trans-unit id="3823f31bb8467559f301c47f895d7061de3ec717" translate="yes" xml:space="preserve">
          <source>It succeeds if path already exists and is writable.</source>
          <target state="translated">경로가 이미 존재하고 쓰기 가능하면 성공합니다.</target>
        </trans-unit>
        <trans-unit id="7d215fb3d3029a79e91bc9f1c93cb794d4a87b3a" translate="yes" xml:space="preserve">
          <source>It supports both eager mode and graph mode. However, for eager mode, it has to set up the eager context in its constructor and therefore all ops in eager mode have to run after the strategy object is created.</source>
          <target state="translated">열망 모드와 그래프 모드를 모두 지원합니다. 그러나 열망 모드의 경우 생성자에서 열망 컨텍스트를 설정해야하므로 열망 모드의 모든 op는 전략 오브젝트가 작성된 후에 실행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5f2906485b4f276b07b06407ca83d5b907a0ef00" translate="yes" xml:space="preserve">
          <source>It takes as input a list of tensors of size 2, both of the same shape, and returns a single tensor, (inputs[0] - inputs[1]), also of the same shape.</source>
          <target state="translated">동일한 모양의 크기 2 인 텐서 목록을 입력으로 사용하고 동일한 모양의 단일 텐서 (입력 [0]-입력 [1])를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b35f20b84333c05b6dfb40f2eae9cc50c33a598c" translate="yes" xml:space="preserve">
          <source>It takes as input a list of tensors, all of the same shape except for the concatenation axis, and returns a single tensor, the concatenation of all inputs.</source>
          <target state="translated">연결 축을 제외한 동일한 모양의 텐서 목록을 입력으로 사용하고 모든 입력의 연결 인 단일 텐서를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c50f9fb2984e50ff5dd9a98219ec79dfe7a15aed" translate="yes" xml:space="preserve">
          <source>It takes as input a list of tensors, all of the same shape, and returns a single tensor (also of the same shape).</source>
          <target state="translated">동일한 모양의 텐서 목록을 입력으로 사용하고 단일 텐서 (같은 모양)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1c1f2abb6055ce0ac0a297f31c59a0eef9826dbb" translate="yes" xml:space="preserve">
          <source>It turns lines that only contain whitespace into empty lines, keeps new lines, and expands tabs using 4 spaces.</source>
          <target state="translated">공백 만 포함 된 줄을 빈 줄로 바꾸고 새 줄을 유지하며 4 개의 공백을 사용하여 탭을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="6859c020c561974099c878c754540fba70e38ede" translate="yes" xml:space="preserve">
          <source>It uses &quot;open addressing&quot; with quadratic reprobing to resolve collisions. Compared to &lt;code&gt;MutableHashTable&lt;/code&gt; the insert, remove and lookup operations in a &lt;code&gt;DenseHashTable&lt;/code&gt; are typically faster, but memory usage can be higher. However, &lt;code&gt;DenseHashTable&lt;/code&gt; does not require additional memory for temporary tensors created during checkpointing and restore operations.</source>
          <target state="translated">충돌을 해결하기 위해 2 차 리 프로빙과 함께 &quot;오픈 어드레싱&quot;을 사용합니다. 비교 &lt;code&gt;MutableHashTable&lt;/code&gt; A의 삽입, 제거 및 조회 작업 &lt;code&gt;DenseHashTable&lt;/code&gt; 은 일반적으로 빠른 있지만, 메모리 사용량이 높을 수있다. 그러나 &lt;code&gt;DenseHashTable&lt;/code&gt; 에는 검사 점 및 복원 작업 중에 생성 된 임시 텐서에 추가 메모리가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="977401945eaec23a00336497e581d20009fb2500" translate="yes" xml:space="preserve">
          <source>It uses CollectiveOps's implementation of multi-worker all-reduce to to keep variables in sync. A collective op is a single op in the TensorFlow graph which can automatically choose an all-reduce algorithm in the TensorFlow runtime according to hardware, network topology and tensor sizes.</source>
          <target state="translated">CollectiveOps의 다중 작업자 all-reduce 구현을 사용하여 변수를 동기화 상태로 유지합니다. 집단 op는 TensorFlow 그래프에서 단일 op로, 하드웨어, 네트워크 토폴로지 및 텐서 크기에 따라 TensorFlow 런타임에서 전체 감소 알고리즘을 자동으로 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b835fe989f30ffa00d7465a0aeb424f803e306f" translate="yes" xml:space="preserve">
          <source>It uses Nvidia NCCL for all-reduce. Before performing all-reduce, tensors will be repacked or aggregated for more efficient cross-device transportation.</source>
          <target state="translated">그것은 모든 감소를 위해 Nvidia NCCL을 사용합니다. 전체 축소를 수행하기 전에 장치 간 운송 효율을 높이기 위해 텐서가 다시 포장되거나 집계됩니다.</target>
        </trans-unit>
        <trans-unit id="6c5c6df1afdf7ca1142c8392531688642561e44d" translate="yes" xml:space="preserve">
          <source>It uses Variable to manage its internal state, and allows choosing an Random-Number-Generation (RNG) algorithm.</source>
          <target state="translated">변수를 사용하여 내부 상태를 관리하고 RNG (Random-Number-Generation) 알고리즘을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ce94a631916b13d82b811579ff49ca2c562d7b7" translate="yes" xml:space="preserve">
          <source>It's not obvious but you can consider &lt;code&gt;embedding_lookup_sparse&lt;/code&gt; as another sparse and dense multiplication. In some situations, you may prefer to use &lt;code&gt;embedding_lookup_sparse&lt;/code&gt; even though you're not dealing with embeddings.</source>
          <target state="translated">분명하지는 않지만 &lt;code&gt;embedding_lookup_sparse&lt;/code&gt; 를 또 다른 희박하고 조밀 한 곱셈으로 간주 할 수 있습니다 . 경우에 따라 &lt;code&gt;embedding_lookup_sparse&lt;/code&gt; 처리하지 않더라도 embedding_lookup_sparse 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="79977c787320fa6fba43e14c8695afd9d48e5bd8" translate="yes" xml:space="preserve">
          <source>Iterate over the dataset and process the elements.</source>
          <target state="translated">데이터 세트를 반복하고 요소를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="c3dbeb4463947635811b129180aa70dfd73d37af" translate="yes" xml:space="preserve">
          <source>Iterates over the time dimension of a tensor.</source>
          <target state="translated">텐서의 시간 차원을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="96b4bbdb6c4dd116943fe81f64fafa6e0e238624" translate="yes" xml:space="preserve">
          <source>Iteration happens in a streaming fashion, so the full dataset does not need to fit into memory.</source>
          <target state="translated">반복은 스트리밍 방식으로 발생하므로 전체 데이터 세트가 메모리에 맞지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="1178e511de2e1c775b6e1d958045cd51c980eef2" translate="yes" xml:space="preserve">
          <source>Iterator capable of reading images from a directory on disk.</source>
          <target state="translated">디스크의 디렉토리에서 이미지를 읽을 수있는 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="0cfb61470f64f9a5d1bc05d5792202d179c8bf19" translate="yes" xml:space="preserve">
          <source>Iterator yielding data from a Numpy array.</source>
          <target state="translated">Numpy 배열에서 데이터를 생성하는 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="03893a6604f47c6264177e648dd3513a421409e6" translate="yes" xml:space="preserve">
          <source>Its interactions with operation-level seeds is as follows:</source>
          <target state="translated">운영 수준 시드와의 상호 작용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a54081c9807f80af29302394eb7f981038f618af" translate="yes" xml:space="preserve">
          <source>JPEG-encode an image.</source>
          <target state="translated">이미지를 JPEG로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="1abce34104224e22cdcba6794fb6c181fcc59207" translate="yes" xml:space="preserve">
          <source>Job: The job name.</source>
          <target state="translated">작업 : 작업 이름.</target>
        </trans-unit>
        <trans-unit id="f86002d7900057f94f97cedb0b3261145623a636" translate="yes" xml:space="preserve">
          <source>Joins all strings into a single string, or joins along an axis.</source>
          <target state="translated">모든 문자열을 단일 문자열로 결합하거나 축을 따라 결합합니다.</target>
        </trans-unit>
        <trans-unit id="973b485fb9e20496c8dde3e164fa775e97d8ef11" translate="yes" xml:space="preserve">
          <source>Joins the elements of &lt;code&gt;inputs&lt;/code&gt; based on &lt;code&gt;segment_ids&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;segment_ids&lt;/code&gt; 를 기반으로 &lt;code&gt;inputs&lt;/code&gt; 요소를 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="ccea8db1553cbca35668a1fe6503427b0c2d02c4" translate="yes" xml:space="preserve">
          <source>Joins the strings in the given list of string tensors into one tensor;</source>
          <target state="translated">주어진 문자열 텐서 목록의 문자열을 하나의 텐서로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="fc46da99650998bc9e565c51e6348c99f6f7d3e2" translate="yes" xml:space="preserve">
          <source>Just like any &lt;code&gt;Tensor&lt;/code&gt;, variables created with &lt;code&gt;Variable()&lt;/code&gt; can be used as inputs for other Ops in the graph. Additionally, all the operators overloaded for the &lt;code&gt;Tensor&lt;/code&gt; class are carried over to variables, so you can also add nodes to the graph by just doing arithmetic on variables.</source>
          <target state="translated">다른 &lt;code&gt;Tensor&lt;/code&gt; 와 마찬가지로 &lt;code&gt;Variable()&lt;/code&gt; 만든 변수 는 그래프의 다른 Ops에 대한 입력으로 사용할 수 있습니다. 또한 &lt;code&gt;Tensor&lt;/code&gt; 클래스에 오버로드 된 모든 연산자 가 변수로 전달되므로 변수에 대한 산술을 수행하여 그래프에 노드를 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfadb34ce71c483ff3b6f1bdd951c2b55ef4d1d5" translate="yes" xml:space="preserve">
          <source>Just like any &lt;code&gt;Tensor&lt;/code&gt;, variables created with &lt;code&gt;Variable()&lt;/code&gt; can be used as inputs to operations. Additionally, all the operators overloaded for the &lt;code&gt;Tensor&lt;/code&gt; class are carried over to variables.</source>
          <target state="translated">다른 &lt;code&gt;Tensor&lt;/code&gt; 와 마찬가지로 &lt;code&gt;Variable()&lt;/code&gt; 작성된 변수 는 조작의 입력으로 사용할 수 있습니다. 또한 &lt;code&gt;Tensor&lt;/code&gt; 클래스에 오버로드 된 모든 연산자 는 변수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d4ff3ab325080f363951843df446ac3e10dba459" translate="yes" xml:space="preserve">
          <source>Just like self.assertTrue(a &amp;gt; b), but with a nicer default message.</source>
          <target state="translated">self.assertTrue (a&amp;gt; b)와 비슷하지만 더 좋은 기본 메시지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d6bedfbc8f7caa856a56c4b56ab84bd475bb0b0" translate="yes" xml:space="preserve">
          <source>Just like self.assertTrue(a &amp;gt;= b), but with a nicer default message.</source>
          <target state="translated">self.assertTrue (a&amp;gt; = b)와 같지만 더 좋은 기본 메시지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bc3b3ea2791653557cb9429498766dd7c39ea93" translate="yes" xml:space="preserve">
          <source>Just like self.assertTrue(a &amp;lt; b), but with a nicer default message.</source>
          <target state="translated">self.assertTrue (a &amp;lt;b)와 마찬가지로 기본 메시지가 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5c5c94251e256b05dcd868da8636cb8f325951ec" translate="yes" xml:space="preserve">
          <source>Just like self.assertTrue(a &amp;lt;= b), but with a nicer default message.</source>
          <target state="translated">self.assertTrue (a &amp;lt;= b)와 비슷하지만 더 좋은 기본 메시지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="19ba747b37c5ad6ac1cc4689022bdfff83622716" translate="yes" xml:space="preserve">
          <source>Just like self.assertTrue(a in b), but with a nicer default message.</source>
          <target state="translated">self.assertTrue (a in b)와 같지만 더 좋은 기본 메시지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="487df18123fd7a1a1fd110693943aca8581edc2b" translate="yes" xml:space="preserve">
          <source>Just like self.assertTrue(a is b), but with a nicer default message.</source>
          <target state="translated">self.assertTrue (a는 b)와 같지만 더 좋은 기본 메시지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa1762539c24f08e1410dfadc401aeb791b88d97" translate="yes" xml:space="preserve">
          <source>Just like self.assertTrue(a is not b), but with a nicer default message.</source>
          <target state="translated">self.assertTrue (a는 b가 아님)와 마찬가지로 기본 메시지가 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a7abce2837c2684f6308e0a3abb93654038ccc5f" translate="yes" xml:space="preserve">
          <source>Just like self.assertTrue(a not in b), but with a nicer default message.</source>
          <target state="translated">self.assertTrue (a가 아닌 b)와 비슷하지만 더 좋은 기본 메시지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="854567c544d0737d2fe747ac47284deb4fe4c7ef" translate="yes" xml:space="preserve">
          <source>Just your regular densely-connected NN layer.</source>
          <target state="translated">단단하게 연결된 NN 레이어 만 있으면됩니다.</target>
        </trans-unit>
        <trans-unit id="85b9d3eef4c99e834dafd488a992520bd537f60d" translate="yes" xml:space="preserve">
          <source>K &amp;lt;= (a[i+1] - a[i]) &amp;lt;= K+1 : all intervals are K or K+1 size</source>
          <target state="translated">K &amp;lt;= (a [i + 1]-a [i]) &amp;lt;= K + 1 : 모든 구간이 K 또는 K + 1 크기</target>
        </trans-unit>
        <trans-unit id="da5bafbe40cc72c1a5a90c5c487d480beb7945b4" translate="yes" xml:space="preserve">
          <source>K = floor(alpha)</source>
          <target state="translated">K = 바닥 (알파)</target>
        </trans-unit>
        <trans-unit id="f2d0c252437583d457696ccf099228ed0dd1d787" translate="yes" xml:space="preserve">
          <source>Keep &lt;code&gt;data&lt;/code&gt; &quot;in-place&quot; in the runtime and create a handle that can be used to retrieve &lt;code&gt;data&lt;/code&gt; in a subsequent run().</source>
          <target state="translated">런타임에서 &lt;code&gt;data&lt;/code&gt; &quot;제자리에&quot; 유지 하고 후속 run ()에서 &lt;code&gt;data&lt;/code&gt; 를 검색 하는 데 사용할 수있는 핸들을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="11defcdc3ab6276ddf205676c7c34996cb84c2c9" translate="yes" xml:space="preserve">
          <source>Keep in mind that the counters for &lt;code&gt;default_name&lt;/code&gt; are discarded once the parent scope is exited. Therefore when the code re-enters the scope (for instance by saving it), all nested default_name counters will be restarted.</source>
          <target state="translated">부모 범위가 종료되면 &lt;code&gt;default_name&lt;/code&gt; 에 대한 카운터 가 삭제됩니다. 따라서 코드가 범위를 다시 입력하면 (예 : 저장) 중첩 된 모든 default_name 카운터가 다시 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="797553e285cf7a2ec3ac3ef5f44e9a33704b6385" translate="yes" xml:space="preserve">
          <source>Keras APIs handle BatchNormalization updates to the moving_mean and moving_variance as part of their &lt;code&gt;fit()&lt;/code&gt; and &lt;code&gt;evaluate()&lt;/code&gt; loops. However, if a custom training loop is used with an instance of &lt;code&gt;Model&lt;/code&gt;, these updates need to be explicitly included. Here's a simple example of how it can be done:</source>
          <target state="translated">Keras API는 &lt;code&gt;fit()&lt;/code&gt; 및 &lt;code&gt;evaluate()&lt;/code&gt; 루프의 일부로 moving_mean 및 moving_variance에 대한 BatchNormalization 업데이트를 처리합니다 . 그러나 사용자 지정 교육 루프를 &lt;code&gt;Model&lt;/code&gt; 인스턴스와 함께 사용하는 경우 이러한 업데이트를 명시 적으로 포함해야합니다. 다음은 수행 방법에 대한 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="25b5c1f85d37a85e06a856483f75233b421b3689" translate="yes" xml:space="preserve">
          <source>Keras Applications are canned architectures with pre-trained weights.</source>
          <target state="translated">Keras 응용 프로그램은 사전 훈련 된 가중치를 가진 통조림 아키텍처입니다.</target>
        </trans-unit>
        <trans-unit id="72571a4e2712645e60b736776e175785004fb9a8" translate="yes" xml:space="preserve">
          <source>Keras backend API.</source>
          <target state="translated">Keras 백엔드 API.</target>
        </trans-unit>
        <trans-unit id="57a141d7d6223b9787b711a0fbe34d1bf71cc4c3" translate="yes" xml:space="preserve">
          <source>Keras custom callbacks</source>
          <target state="translated">Keras 커스텀 콜백</target>
        </trans-unit>
        <trans-unit id="f52f53724243dd35c5d351bc430403c57d5353c6" translate="yes" xml:space="preserve">
          <source>Keras data preprocessing utils.</source>
          <target state="translated">Keras 데이터 전처리 유틸리티.</target>
        </trans-unit>
        <trans-unit id="2df1d5e7c77c995375b3e06513903302028c3d6c" translate="yes" xml:space="preserve">
          <source>Keras estimator API.</source>
          <target state="translated">Keras 추정기 API.</target>
        </trans-unit>
        <trans-unit id="7b36e1fb8a560686f1548eca521631dccbcdd85d" translate="yes" xml:space="preserve">
          <source>Keras initializer serialization / deserialization.</source>
          <target state="translated">Keras 초기화 프로그램 직렬화 / 역 직렬화</target>
        </trans-unit>
        <trans-unit id="45571f4c561898d435bc2a2b87f86fcca028e62b" translate="yes" xml:space="preserve">
          <source>Keras layers API.</source>
          <target state="translated">Keras 레이어 API.</target>
        </trans-unit>
        <trans-unit id="d6d715042ccd8098dcd870f6fe58196b3dd60cbc" translate="yes" xml:space="preserve">
          <source>Keras models are trackable, so they can be saved to SavedModel. The object returned by &lt;a href=&quot;load&quot;&gt;&lt;code&gt;tf.saved_model.load&lt;/code&gt;&lt;/a&gt; is not a Keras object (i.e. doesn't have &lt;code&gt;.fit&lt;/code&gt;, &lt;code&gt;.predict&lt;/code&gt;, etc. methods). A few attributes and functions are still available: &lt;code&gt;.variables&lt;/code&gt;, &lt;code&gt;.trainable_variables&lt;/code&gt; and &lt;code&gt;.__call__&lt;/code&gt;.</source>
          <target state="translated">Keras 모델은 추적 가능하므로 SavedModel에 저장할 수 있습니다. 에 의해 반환되는 객체 &lt;a href=&quot;load&quot;&gt; &lt;code&gt;tf.saved_model.load&lt;/code&gt; 는&lt;/a&gt; Keras 객체 (즉이없는없는 &lt;code&gt;.fit&lt;/code&gt; 을 , &lt;code&gt;.predict&lt;/code&gt; 등의 방법). &lt;code&gt;.variables&lt;/code&gt; , &lt;code&gt;.trainable_variables&lt;/code&gt; 및 &lt;code&gt;.__call__&lt;/code&gt; 과 같은 몇 가지 속성과 함수를 계속 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5bd252945314563bcd347357ed5b1ca6e6e2676" translate="yes" xml:space="preserve">
          <source>Keras overview</source>
          <target state="translated">케 라스 개요</target>
        </trans-unit>
        <trans-unit id="dec58960ae001091ef2143f2cade4c845741f88b" translate="yes" xml:space="preserve">
          <source>Keras tensor with dtype &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">dtype &lt;code&gt;dtype&lt;/code&gt; 인 Keras 텐서 .</target>
        </trans-unit>
        <trans-unit id="f50c6360f634d853de776c7df4ba654e03325ea4" translate="yes" xml:space="preserve">
          <source>Key flags are flags that are deemed really important for a module. They are important when listing help messages; e.g., if the --helpshort command-line flag is used, then only the key flags of the main module are listed (instead of all flags, as in the case of --helpfull).</source>
          <target state="translated">키 플래그는 모듈에서 실제로 중요한 것으로 간주되는 플래그입니다. 도움말 메시지를 나열 할 때 중요합니다. 예를 들어 --helpshort 명령 줄 플래그를 사용하면 --helpfull의 경우와 같이 모든 플래그 대신 메인 모듈의 키 플래그 만 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="179072cd91fc3cc97c3ff564e051dbc4730e7cd4" translate="yes" xml:space="preserve">
          <source>Known issues:</source>
          <target state="translated">알려진 문제 :</target>
        </trans-unit>
        <trans-unit id="612a4a25104ac1b398f6c01cde3d1f603d36d0b9" translate="yes" xml:space="preserve">
          <source>Kronecker product between two &lt;code&gt;LinearOperators&lt;/code&gt;.</source>
          <target state="translated">두 &lt;code&gt;LinearOperators&lt;/code&gt; 사이의 크로네 커 제품 .</target>
        </trans-unit>
        <trans-unit id="f1e6720b6d7301407ea51c52208a1a7547e0482f" translate="yes" xml:space="preserve">
          <source>L2 Loss.</source>
          <target state="translated">L2 손실.</target>
        </trans-unit>
        <trans-unit id="16d316d9e824fe17522e60303f169b46bfa65ea2" translate="yes" xml:space="preserve">
          <source>Labels can be:</source>
          <target state="translated">레이블은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1671fb843b1ebf2a1206cf87acc50d8062e9ff97" translate="yes" xml:space="preserve">
          <source>Labels may be supplied as either a dense, zero-padded tensor with a vector of label sequence lengths OR as a SparseTensor.</source>
          <target state="translated">라벨은 라벨 시퀀스 길이의 벡터를 가진 조밀 한 제로 패딩 된 텐서 또는 SparseTensor로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ab8d2e64311bfdc1f2d8722526982afc77621aa" translate="yes" xml:space="preserve">
          <source>Later this model can be restored and contents loaded.</source>
          <target state="translated">나중에이 모델을 복원하고 내용을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="069a9279cbf76a77c57b153607db90fb010edf4e" translate="yes" xml:space="preserve">
          <source>Later we can continue training from this saved &lt;code&gt;meta_graph&lt;/code&gt; without building the model from scratch.</source>
          <target state="translated">나중에 모델을 처음부터 작성하지 않고도 저장된 &lt;code&gt;meta_graph&lt;/code&gt; 에서 계속 학습 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2be53feb04a5f6d9f95e9d7e7d8d0cfe4b4ef1b1" translate="yes" xml:space="preserve">
          <source>Launching additional services</source>
          <target state="translated">추가 서비스 시작</target>
        </trans-unit>
        <trans-unit id="78c2d1ab4aaae5eaa701dc6e766f73a53b17036a" translate="yes" xml:space="preserve">
          <source>Launching fewer services</source>
          <target state="translated">더 적은 서비스 시작</target>
        </trans-unit>
        <trans-unit id="0fcced819a5de3c21009ad79b8c97f67bde1cab8" translate="yes" xml:space="preserve">
          <source>Layer Normalization</source>
          <target state="translated">레이어 정규화</target>
        </trans-unit>
        <trans-unit id="6203b6b50e8b44e8783502afa76a0182f60aff9b" translate="yes" xml:space="preserve">
          <source>Layer instance (may be Model, Sequential, Network, Layer...)</source>
          <target state="translated">레이어 인스턴스 (모델, 순차, 네트워크, 레이어 등일 수 있음)</target>
        </trans-unit>
        <trans-unit id="86d906c72184272cec3c14d59c28ebf29245d7fd" translate="yes" xml:space="preserve">
          <source>Layer normalization layer (Ba et al., 2016).</source>
          <target state="translated">계층 정규화 계층 (Ba et al., 2016).</target>
        </trans-unit>
        <trans-unit id="e616694f154575f69f3a0802fde29ca97e540809" translate="yes" xml:space="preserve">
          <source>Layer that adds a list of inputs.</source>
          <target state="translated">입력 목록을 추가하는 레이어입니다.</target>
        </trans-unit>
        <trans-unit id="db2c26747fe092f4d42a101112a86ea9ef500b57" translate="yes" xml:space="preserve">
          <source>Layer that applies an update to the cost function based input activity.</source>
          <target state="translated">비용 함수 기반 입력 활동에 업데이트를 적용하는 계층입니다.</target>
        </trans-unit>
        <trans-unit id="da14fce810261708a1a61dafc7db569a0f2e3766" translate="yes" xml:space="preserve">
          <source>Layer that averages a list of inputs.</source>
          <target state="translated">입력 목록을 평균화하는 레이어입니다.</target>
        </trans-unit>
        <trans-unit id="1ba9002c3316c199fb41f2e3e877ad1ba5114435" translate="yes" xml:space="preserve">
          <source>Layer that computes a dot product between samples in two tensors.</source>
          <target state="translated">두 텐서에서 샘플 간 내적을 계산하는 레이어입니다.</target>
        </trans-unit>
        <trans-unit id="a58681af8551cd6d5c71a0f3f663856def084fd0" translate="yes" xml:space="preserve">
          <source>Layer that computes the maximum (element-wise) a list of inputs.</source>
          <target state="translated">입력 목록의 최대 (요소 별)를 계산하는 레이어입니다.</target>
        </trans-unit>
        <trans-unit id="a2580f085ccbe0daabc5d9268e69fc291106b4c9" translate="yes" xml:space="preserve">
          <source>Layer that computes the minimum (element-wise) a list of inputs.</source>
          <target state="translated">입력 목록의 최소 (요소 별)를 계산하는 레이어입니다.</target>
        </trans-unit>
        <trans-unit id="78b91f777b684761599933b14459be1a13fcd33d" translate="yes" xml:space="preserve">
          <source>Layer that concatenates a list of inputs.</source>
          <target state="translated">입력 목록을 연결하는 계층입니다.</target>
        </trans-unit>
        <trans-unit id="3cd42c83d97c5d561e0014739c170bc45160af15" translate="yes" xml:space="preserve">
          <source>Layer that multiplies (element-wise) a list of inputs.</source>
          <target state="translated">입력 목록을 (요소별로) 곱하는 레이어.</target>
        </trans-unit>
        <trans-unit id="4c46a51f0dee801b36e92da4f148a98c5864a95b" translate="yes" xml:space="preserve">
          <source>Layer that subtracts two inputs.</source>
          <target state="translated">두 입력을 빼는 레이어.</target>
        </trans-unit>
        <trans-unit id="69a10134f4c342922f8bc6dda5d0e8bd3e351a05" translate="yes" xml:space="preserve">
          <source>Layer to be used as an entry point into a Network (a graph of layers).</source>
          <target state="translated">네트워크의 진입 점으로 사용되는 레이어 (레이어 그래프).</target>
        </trans-unit>
        <trans-unit id="d788168d5c362c144a6a4810d2943493505beecb" translate="yes" xml:space="preserve">
          <source>Layers are generally called in a replica context, except when defining a functional model. &lt;a href=&quot;../../../distribute/in_cross_replica_context&quot;&gt;&lt;code&gt;tf.distribute.in_cross_replica_context&lt;/code&gt;&lt;/a&gt; will let you determine which case you are in. If in a replica context, the &lt;a href=&quot;../../../distribute/get_replica_context&quot;&gt;&lt;code&gt;tf.distribute.get_replica_context&lt;/code&gt;&lt;/a&gt; function will return a &lt;a href=&quot;../../../distribute/replicacontext&quot;&gt;&lt;code&gt;tf.distribute.ReplicaContext&lt;/code&gt;&lt;/a&gt; object. The &lt;code&gt;ReplicaContext&lt;/code&gt; object has an &lt;code&gt;all_reduce&lt;/code&gt; method for aggregating across all replicas. Alternatively, you can update variables following steps 2-4 above.</source>
          <target state="translated">기능 모델을 정의 할 때를 제외하고 일반적으로 레이어는 복제본 컨텍스트에서 호출됩니다. &lt;a href=&quot;../../../distribute/in_cross_replica_context&quot;&gt; &lt;code&gt;tf.distribute.in_cross_replica_context&lt;/code&gt; &lt;/a&gt; 를 사용하면 현재 케이스를 확인할 수 있습니다. 복제 컨텍스트에서 &lt;a href=&quot;../../../distribute/get_replica_context&quot;&gt; &lt;code&gt;tf.distribute.get_replica_context&lt;/code&gt; &lt;/a&gt; 함수는 &lt;a href=&quot;../../../distribute/replicacontext&quot;&gt; &lt;code&gt;tf.distribute.ReplicaContext&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다. &lt;code&gt;ReplicaContext&lt;/code&gt; 의 객체는이 &lt;code&gt;all_reduce&lt;/code&gt; 의 모든 복제본에 걸쳐 모으는 방법을. 또는 위의 2-4 단계에 따라 변수를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d4ed2a18b6241ff66e4e6ff6417a0c5f475f1b6" translate="yes" xml:space="preserve">
          <source>Layers are generally called in a replica context, except when defining a functional model. &lt;a href=&quot;in_cross_replica_context&quot;&gt;&lt;code&gt;tf.distribute.in_cross_replica_context&lt;/code&gt;&lt;/a&gt; will let you determine which case you are in. If in a replica context, the &lt;a href=&quot;get_replica_context&quot;&gt;&lt;code&gt;tf.distribute.get_replica_context&lt;/code&gt;&lt;/a&gt; function will return a &lt;a href=&quot;replicacontext&quot;&gt;&lt;code&gt;tf.distribute.ReplicaContext&lt;/code&gt;&lt;/a&gt; object. The &lt;code&gt;ReplicaContext&lt;/code&gt; object has an &lt;code&gt;all_reduce&lt;/code&gt; method for aggregating across all replicas. Alternatively, you can update variables following steps 2-4 above.</source>
          <target state="translated">기능 모델을 정의 할 때를 제외하고 일반적으로 레이어는 복제본 컨텍스트에서 호출됩니다. &lt;a href=&quot;in_cross_replica_context&quot;&gt; &lt;code&gt;tf.distribute.in_cross_replica_context&lt;/code&gt; &lt;/a&gt; 를 사용하면 현재 케이스를 확인할 수 있습니다. 복제 컨텍스트에서 &lt;a href=&quot;get_replica_context&quot;&gt; &lt;code&gt;tf.distribute.get_replica_context&lt;/code&gt; &lt;/a&gt; 함수는 &lt;a href=&quot;replicacontext&quot;&gt; &lt;code&gt;tf.distribute.ReplicaContext&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다. &lt;code&gt;ReplicaContext&lt;/code&gt; 의 객체는이 &lt;code&gt;all_reduce&lt;/code&gt; 의 모든 복제본에 걸쳐 모으는 방법을. 또는 위의 2-4 단계에 따라 변수를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8396f9ffe78b46dec3038d3f27358d51c3b5b4ae" translate="yes" xml:space="preserve">
          <source>LeCun normal initializer.</source>
          <target state="translated">LeCun 일반 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="19473a1e37e95bf1f71b8bc65e0175028a4ad5cb" translate="yes" xml:space="preserve">
          <source>LeCun uniform initializer.</source>
          <target state="translated">LeCun 유니폼 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="c2a5b34e43546fdac4e25edacb5db810eb5747e7" translate="yes" xml:space="preserve">
          <source>Leaky version of a Rectified Linear Unit.</source>
          <target state="translated">정류 선형 유닛의 새 버전.</target>
        </trans-unit>
        <trans-unit id="aded2e35d32197b880d6fca5141b9abd475e489c" translate="yes" xml:space="preserve">
          <source>Learning phase (scalar integer tensor or Python integer).</source>
          <target state="translated">학습 단계 (스칼라 정수 텐서 또는 Python 정수).</target>
        </trans-unit>
        <trans-unit id="4269cfb1ed0050cc580ee45319dea84cc6fafd62" translate="yes" xml:space="preserve">
          <source>Learning rate scheduler.</source>
          <target state="translated">학습 속도 스케줄러.</target>
        </trans-unit>
        <trans-unit id="837d38399bf20038c90afe07777d93193836fa99" translate="yes" xml:space="preserve">
          <source>Let &lt;code&gt;diagonal&lt;/code&gt; have &lt;code&gt;r&lt;/code&gt; dimensions &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt;. The output tensor has rank &lt;code&gt;r+1&lt;/code&gt; with shape &lt;code&gt;[I, J, ..., L, M, num_rows, num_cols]&lt;/code&gt; when only one diagonal is given (&lt;code&gt;k&lt;/code&gt; is an integer or &lt;code&gt;k[0] == k[1]&lt;/code&gt;). Otherwise, it has rank &lt;code&gt;r&lt;/code&gt; with shape &lt;code&gt;[I, J, ..., L, num_rows, num_cols]&lt;/code&gt;.</source>
          <target state="translated">하자 &lt;code&gt;diagonal&lt;/code&gt; 유무 &lt;code&gt;r&lt;/code&gt; 치수 &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt; . 출력 텐서는 하나의 대각선 만 &lt;code&gt;[I, J, ..., L, M, num_rows, num_cols]&lt;/code&gt; 때 모양 [I, J, ..., L, M, num_rows, num_cols]의 순위 &lt;code&gt;r+1&lt;/code&gt; 을가 집니다 ( &lt;code&gt;k&lt;/code&gt; 는 정수 또는 &lt;code&gt;k[0] == k[1]&lt;/code&gt; ) . 그렇지 않으면, 모양이 &lt;code&gt;[I, J, ..., L, num_rows, num_cols]&lt;/code&gt; 순위 &lt;code&gt;r&lt;/code&gt; 을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="c330231b01c6ed87c88f9187160c2610695d4ca5" translate="yes" xml:space="preserve">
          <source>Let N be the size of &lt;code&gt;input&lt;/code&gt; (typically N will be the batch size). Split each element of &lt;code&gt;input&lt;/code&gt; based on &lt;code&gt;sep&lt;/code&gt; and return a &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;RaggedTensor&lt;/code&gt; containing the split tokens. Empty tokens are ignored.</source>
          <target state="translated">N을 &lt;code&gt;input&lt;/code&gt; 크기로 설정하십시오 (일반적으로 N은 배치 크기입니다). &lt;code&gt;sep&lt;/code&gt; 를 기준으로 각 &lt;code&gt;input&lt;/code&gt; 요소를 분할하고 분할 토큰을 포함 하는 &lt;code&gt;SparseTensor&lt;/code&gt; 또는 &lt;code&gt;RaggedTensor&lt;/code&gt; 를 리턴하십시오 . 빈 토큰은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="12e7b8d2dd3a8e45ac9dad02a7347cba9f555820" translate="yes" xml:space="preserve">
          <source>Let N be the size of &lt;code&gt;source&lt;/code&gt; (typically N will be the batch size). Split each element of &lt;code&gt;source&lt;/code&gt; based on &lt;code&gt;delimiter&lt;/code&gt; and return a &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;RaggedTensor&lt;/code&gt; containing the split tokens. Empty tokens are ignored.</source>
          <target state="translated">N을 &lt;code&gt;source&lt;/code&gt; 의 크기로하십시오 (일반적으로 N은 배치 크기입니다). &lt;code&gt;delimiter&lt;/code&gt; 기준으로 &lt;code&gt;source&lt;/code&gt; 각 요소를 분할하고 분할 토큰이 포함 된 &lt;code&gt;SparseTensor&lt;/code&gt; 또는 &lt;code&gt;RaggedTensor&lt;/code&gt; 를 리턴하십시오 . 빈 토큰은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4139efab329316096bd5de91c4905f7d12324ab0" translate="yes" xml:space="preserve">
          <source>Let's consider complex number 1+1j as an example. e^1 * (cos 1 + i sin 1) = 2.7182818284590 * (0.54030230586+0.8414709848j)</source>
          <target state="translated">복소수 1 + 1j를 예로 들어 봅시다. e ^ 1 * (cos 1 + i sin 1) = 2.7182818284590 * (0.54030230586 + 0.8414709848j)</target>
        </trans-unit>
        <trans-unit id="9d616302a7d154f451cd3ae462df43f7f304fa9c" translate="yes" xml:space="preserve">
          <source>Letting &lt;code&gt;U&lt;/code&gt; be the &lt;code&gt;kth&lt;/code&gt; Euclidean basis vector, and &lt;code&gt;U = IDFT[u]&lt;/code&gt;. The above formulas show that&lt;code&gt;A U = H_k * U&lt;/code&gt;. We conclude that the elements of &lt;code&gt;H&lt;/code&gt; are the eigenvalues of this operator. Therefore</source>
          <target state="translated">시키는 &lt;code&gt;U&lt;/code&gt; 가 될 &lt;code&gt;kth&lt;/code&gt; 유클리드 기저 벡터 및 &lt;code&gt;U = IDFT[u]&lt;/code&gt; . 위의 공식은 &lt;code&gt;A U = H_k * U&lt;/code&gt; 입니다. &lt;code&gt;H&lt;/code&gt; 의 요소 는이 연산자의 고유 값 이라고 결론을 내립니다 . 따라서</target>
        </trans-unit>
        <trans-unit id="03a8b7ecf1e8c062060caf195aa64e9fadb51e62" translate="yes" xml:space="preserve">
          <source>Library for running a computation across multiple devices.</source>
          <target state="translated">여러 장치에서 계산을 실행하기위한 라이브러리</target>
        </trans-unit>
        <trans-unit id="c89d876aa9a4481db3172511d68660fb8869d2a2" translate="yes" xml:space="preserve">
          <source>Library imports for ClusterResolvers.</source>
          <target state="translated">ClusterResolvers에 대한 라이브러리 가져 오기.</target>
        </trans-unit>
        <trans-unit id="de13bf1ab0b419f34cb1b3b43e094c84009a42db" translate="yes" xml:space="preserve">
          <source>License:</source>
          <target state="translated">License:</target>
        </trans-unit>
        <trans-unit id="7db120ff0add5b38c6339cbb76ef30243d16848f" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution License 3.0.</source>
          <target state="translated">Creative Commons Attribution License 3.0에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="7aa74c579f26ac0d015538dad56e3fde1bb4764f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../../../data/dataset#batch&quot;&gt;&lt;code&gt;tf.data.Dataset.batch&lt;/code&gt;&lt;/a&gt;, the components of the resulting element will have an additional outer dimension, which will be &lt;code&gt;batch_size&lt;/code&gt; (or &lt;code&gt;N % batch_size&lt;/code&gt; for the last element if &lt;code&gt;batch_size&lt;/code&gt; does not divide the number of input elements &lt;code&gt;N&lt;/code&gt; evenly and &lt;code&gt;drop_remainder&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;). If your program depends on the batches having the same outer dimension, you should set the &lt;code&gt;drop_remainder&lt;/code&gt; argument to &lt;code&gt;True&lt;/code&gt; to prevent the smaller batch from being produced.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;../../../../data/dataset#batch&quot;&gt; &lt;code&gt;tf.data.Dataset.batch&lt;/code&gt; &lt;/a&gt; , 얻어진 소자의 구성 요소가 될 것이다 추가적인 외부 치수 것이다 &lt;code&gt;batch_size&lt;/code&gt; (또는 &lt;code&gt;N % batch_size&lt;/code&gt; 경우 마지막 요소를 &lt;code&gt;batch_size&lt;/code&gt; 입력 요소의 수를 분할하지 않는 &lt;code&gt;N&lt;/code&gt; 골고루 &lt;code&gt;drop_remainder&lt;/code&gt; 가 있다 &lt;code&gt;False&lt;/code&gt; ). 프로그램이 외부 치수가 동일한 배치에 의존 하는 경우 더 작은 배치가 생성되지 않도록 &lt;code&gt;drop_remainder&lt;/code&gt; 인수를 &lt;code&gt;True&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5002e3c987394960c9dea106a44cba4e87bc43a1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../../data/dataset#batch&quot;&gt;&lt;code&gt;tf.data.Dataset.batch&lt;/code&gt;&lt;/a&gt;, the components of the resulting element will have an additional outer dimension, which will be &lt;code&gt;batch_size&lt;/code&gt; (or &lt;code&gt;N % batch_size&lt;/code&gt; for the last element if &lt;code&gt;batch_size&lt;/code&gt; does not divide the number of input elements &lt;code&gt;N&lt;/code&gt; evenly and &lt;code&gt;drop_remainder&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;). If your program depends on the batches having the same outer dimension, you should set the &lt;code&gt;drop_remainder&lt;/code&gt; argument to &lt;code&gt;True&lt;/code&gt; to prevent the smaller batch from being produced.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;../../../data/dataset#batch&quot;&gt; &lt;code&gt;tf.data.Dataset.batch&lt;/code&gt; &lt;/a&gt; , 얻어진 소자의 구성 요소가 될 것이다 추가적인 외부 치수 것이다 &lt;code&gt;batch_size&lt;/code&gt; (또는 &lt;code&gt;N % batch_size&lt;/code&gt; 경우 마지막 요소를 &lt;code&gt;batch_size&lt;/code&gt; 입력 요소의 수를 분할하지 않는 &lt;code&gt;N&lt;/code&gt; 골고루 &lt;code&gt;drop_remainder&lt;/code&gt; 가 있다 &lt;code&gt;False&lt;/code&gt; ). 프로그램이 외부 치수가 동일한 배치에 의존 하는 경우 더 작은 배치가 생성되지 않도록 &lt;code&gt;drop_remainder&lt;/code&gt; 인수를 &lt;code&gt;True&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6dbc1a6b212e38e0c33c7e44ee1567980b671449" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../math/segment_mean&quot;&gt;&lt;code&gt;tf.math.segment_mean&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;segment_ids&lt;/code&gt; can have rank less than &lt;code&gt;data&lt;/code&gt;'s first dimension, selecting a subset of dimension 0, specified by &lt;code&gt;indices&lt;/code&gt;. &lt;code&gt;segment_ids&lt;/code&gt; is allowed to have missing ids, in which case the output will be zeros at those indices. In those cases &lt;code&gt;num_segments&lt;/code&gt; is used to determine the size of the output.</source>
          <target state="translated">&lt;a href=&quot;../../math/segment_mean&quot;&gt; &lt;code&gt;tf.math.segment_mean&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 &lt;code&gt;segment_ids&lt;/code&gt; 는 &lt;code&gt;data&lt;/code&gt; 의 첫 번째 차원 보다 순위가 낮을 수 있으며 &lt;code&gt;indices&lt;/code&gt; 지정된 차원 0의 하위 집합을 선택합니다 . &lt;code&gt;segment_ids&lt;/code&gt; 는 누락 된 ID를 가질 수 있으며,이 경우 해당 인덱스에서 출력은 0이됩니다. 이러한 경우 &lt;code&gt;num_segments&lt;/code&gt; 는 출력 크기를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c906cab1e7e01abebc7021a44cfe7e4ee67af318" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../math/segment_sum&quot;&gt;&lt;code&gt;tf.math.segment_sum&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;segment_ids&lt;/code&gt; can have rank less than &lt;code&gt;data&lt;/code&gt;'s first dimension, selecting a subset of dimension 0, specified by &lt;code&gt;indices&lt;/code&gt;. &lt;code&gt;segment_ids&lt;/code&gt; is allowed to have missing ids, in which case the output will be zeros at those indices. In those cases &lt;code&gt;num_segments&lt;/code&gt; is used to determine the size of the output.</source>
          <target state="translated">&lt;a href=&quot;../../math/segment_sum&quot;&gt; &lt;code&gt;tf.math.segment_sum&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 &lt;code&gt;segment_ids&lt;/code&gt; 는 &lt;code&gt;data&lt;/code&gt; 의 첫 번째 차원 보다 순위가 낮을 수 있으며 &lt;code&gt;indices&lt;/code&gt; 지정된 차원 0의 하위 집합을 선택합니다 . &lt;code&gt;segment_ids&lt;/code&gt; 는 누락 된 ID를 가질 수 있으며,이 경우 해당 인덱스에서 출력은 0이됩니다. 이러한 경우 &lt;code&gt;num_segments&lt;/code&gt; 는 출력 크기를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d6cbf24337813db2cc0a86894e406fcb3e1ade6b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../dataset#batch&quot;&gt;&lt;code&gt;tf.data.Dataset.batch&lt;/code&gt;&lt;/a&gt;, the components of the resulting element will have an additional outer dimension, which will be &lt;code&gt;batch_size&lt;/code&gt; (or &lt;code&gt;N % batch_size&lt;/code&gt; for the last element if &lt;code&gt;batch_size&lt;/code&gt; does not divide the number of input elements &lt;code&gt;N&lt;/code&gt; evenly and &lt;code&gt;drop_remainder&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;). If your program depends on the batches having the same outer dimension, you should set the &lt;code&gt;drop_remainder&lt;/code&gt; argument to &lt;code&gt;True&lt;/code&gt; to prevent the smaller batch from being produced.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;../dataset#batch&quot;&gt; &lt;code&gt;tf.data.Dataset.batch&lt;/code&gt; &lt;/a&gt; , 얻어진 소자의 구성 요소가 될 것이다 추가적인 외부 치수 것이다 &lt;code&gt;batch_size&lt;/code&gt; (또는 &lt;code&gt;N % batch_size&lt;/code&gt; 경우 마지막 요소를 &lt;code&gt;batch_size&lt;/code&gt; 입력 요소의 수를 분할하지 않는 &lt;code&gt;N&lt;/code&gt; 골고루 &lt;code&gt;drop_remainder&lt;/code&gt; 가 있다 &lt;code&gt;False&lt;/code&gt; ). 프로그램이 외부 치수가 동일한 배치에 의존 하는 경우 더 작은 배치가 생성되지 않도록 &lt;code&gt;drop_remainder&lt;/code&gt; 인수를 &lt;code&gt;True&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="59e2202ce78b6dc103fc5d64cb8b93126669bedb" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../dataset#padded_batch&quot;&gt;&lt;code&gt;Dataset.padded_batch()&lt;/code&gt;&lt;/a&gt;, this transformation combines multiple consecutive elements of the dataset, which might have different shapes, into a single element. The resulting element has three components (&lt;code&gt;indices&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, and &lt;code&gt;dense_shape&lt;/code&gt;), which comprise a &lt;a href=&quot;../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt; that represents the same data. The &lt;code&gt;row_shape&lt;/code&gt; represents the dense shape of each row in the resulting &lt;a href=&quot;../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt;, to which the effective batch size is prepended. For example:</source>
          <target state="translated">&lt;a href=&quot;../dataset#padded_batch&quot;&gt; &lt;code&gt;Dataset.padded_batch()&lt;/code&gt; &lt;/a&gt; 와 같이이 변환은 모양이 다른 여러 데이터 세트의 연속 된 여러 요소를 단일 요소로 결합합니다. 결과 요소에는 동일한 데이터를 나타내는 &lt;a href=&quot;../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; 를 구성하는 세 개의 컴포넌트 ( &lt;code&gt;indices&lt;/code&gt; , &lt;code&gt;values&lt;/code&gt; 및 &lt;code&gt;dense_shape&lt;/code&gt; )가 있습니다. &lt;code&gt;row_shape&lt;/code&gt; 은 얻어진 각 행의 밀도 형상 나타내는 &lt;a href=&quot;../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; 효과적인 배치 크기가 미리 결정되어있는이. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b483deda737c33d76b7eb1afd869e3024e91786b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../math/segment_mean&quot;&gt;&lt;code&gt;tf.math.segment_mean&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;segment_ids&lt;/code&gt; can have rank less than &lt;code&gt;data&lt;/code&gt;'s first dimension, selecting a subset of dimension 0, specified by &lt;code&gt;indices&lt;/code&gt;. &lt;code&gt;segment_ids&lt;/code&gt; is allowed to have missing ids, in which case the output will be zeros at those indices. In those cases &lt;code&gt;num_segments&lt;/code&gt; is used to determine the size of the output.</source>
          <target state="translated">&lt;a href=&quot;../math/segment_mean&quot;&gt; &lt;code&gt;tf.math.segment_mean&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 &lt;code&gt;segment_ids&lt;/code&gt; 는 &lt;code&gt;data&lt;/code&gt; 의 첫 번째 차원 보다 순위가 낮을 수 있으며 &lt;code&gt;indices&lt;/code&gt; 지정된 차원 0의 하위 집합을 선택합니다 . &lt;code&gt;segment_ids&lt;/code&gt; 는 누락 된 ID를 가질 수 있으며,이 경우 해당 인덱스에서 출력은 0이됩니다. 이러한 경우 &lt;code&gt;num_segments&lt;/code&gt; 는 출력 크기를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2ce1a059c74ad2c6e774c7e6348a8b18e09ce430" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../math/segment_sum&quot;&gt;&lt;code&gt;tf.math.segment_sum&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;segment_ids&lt;/code&gt; can have rank less than &lt;code&gt;data&lt;/code&gt;'s first dimension, selecting a subset of dimension 0, specified by &lt;code&gt;indices&lt;/code&gt;. &lt;code&gt;segment_ids&lt;/code&gt; is allowed to have missing ids, in which case the output will be zeros at those indices. In those cases &lt;code&gt;num_segments&lt;/code&gt; is used to determine the size of the output.</source>
          <target state="translated">&lt;a href=&quot;../math/segment_sum&quot;&gt; &lt;code&gt;tf.math.segment_sum&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 &lt;code&gt;segment_ids&lt;/code&gt; 는 &lt;code&gt;data&lt;/code&gt; 의 첫 번째 차원 보다 순위가 낮을 수 있으며 &lt;code&gt;indices&lt;/code&gt; 지정된 차원 0의 하위 집합을 선택합니다 . &lt;code&gt;segment_ids&lt;/code&gt; 는 누락 된 ID를 가질 수 있으며,이 경우 해당 인덱스에서 출력은 0이됩니다. 이러한 경우 &lt;code&gt;num_segments&lt;/code&gt; 는 출력 크기를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2ac9e468cfed443a8c1c1c1ff888684df2c6b1ab" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;compat/v1/py_func&quot;&gt;&lt;code&gt;tf.compat.v1.py_func&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;py_function&quot;&gt;&lt;code&gt;tf.py_function&lt;/code&gt;&lt;/a&gt; has the following limitations with respect to serialization and distribution:</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;compat/v1/py_func&quot;&gt; &lt;code&gt;tf.compat.v1.py_func&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;py_function&quot;&gt; &lt;code&gt;tf.py_function&lt;/code&gt; 는&lt;/a&gt; 직렬화 및 배포에 대한 다음과 같은 제한이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="210bba4979cc106dde615ed3f5d2c4147fbc9d9f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;dataset#batch&quot;&gt;&lt;code&gt;tf.data.Dataset.batch&lt;/code&gt;&lt;/a&gt;, the components of the resulting element will have an additional outer dimension, which will be &lt;code&gt;batch_size&lt;/code&gt; (or &lt;code&gt;N % batch_size&lt;/code&gt; for the last element if &lt;code&gt;batch_size&lt;/code&gt; does not divide the number of input elements &lt;code&gt;N&lt;/code&gt; evenly and &lt;code&gt;drop_remainder&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;). If your program depends on the batches having the same outer dimension, you should set the &lt;code&gt;drop_remainder&lt;/code&gt; argument to &lt;code&gt;True&lt;/code&gt; to prevent the smaller batch from being produced.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;dataset#batch&quot;&gt; &lt;code&gt;tf.data.Dataset.batch&lt;/code&gt; &lt;/a&gt; , 얻어진 소자의 구성 요소가 될 것이다 추가적인 외부 치수 것이다 &lt;code&gt;batch_size&lt;/code&gt; (또는 &lt;code&gt;N % batch_size&lt;/code&gt; 경우 마지막 요소를 &lt;code&gt;batch_size&lt;/code&gt; 입력 요소의 수를 분할하지 않는 &lt;code&gt;N&lt;/code&gt; 골고루 &lt;code&gt;drop_remainder&lt;/code&gt; 가 있다 &lt;code&gt;False&lt;/code&gt; ). 프로그램이 외부 치수가 동일한 배치에 의존 하는 경우 더 작은 배치가 생성되지 않도록 &lt;code&gt;drop_remainder&lt;/code&gt; 인수를 &lt;code&gt;True&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b6f9a83d6b53b38e2a7978171624fca7524c3eb9" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;segment_mean&quot;&gt;&lt;code&gt;tf.sparse.segment_mean&lt;/code&gt;&lt;/a&gt;, but instead of dividing by the size of the segment, &lt;code&gt;N&lt;/code&gt;, divide by &lt;code&gt;sqrt(N)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;segment_mean&quot;&gt; &lt;code&gt;tf.sparse.segment_mean&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 세그먼트 크기 &lt;code&gt;N&lt;/code&gt; 으로 나누는 대신 &lt;code&gt;sqrt(N)&lt;/code&gt; 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="8ae3309da85d7104feef1637b702d6721406045b" translate="yes" xml:space="preserve">
          <source>Like assertAllClose, but also suitable for comparing fp16 arrays.</source>
          <target state="translated">assertAllClose와 유사하지만 fp16 배열 비교에도 적합합니다.</target>
        </trans-unit>
        <trans-unit id="8e0e1ae949a1781d1ca7de8e3a0ce6a0b9e18c6f" translate="yes" xml:space="preserve">
          <source>Like the Python builtin &lt;code&gt;range&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt; defaults to 0, so that &lt;code&gt;range(n) = range(0, n)&lt;/code&gt;.</source>
          <target state="translated">내장 파이썬 마찬가지로 &lt;code&gt;range&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; 0으로 디폴트되도록 &lt;code&gt;range(n) = range(0, n)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40aba25e165dcabf8786245e1040efbe890fde61" translate="yes" xml:space="preserve">
          <source>Like the input, the resulting output tensors have a batch dimension. This means that the original per-example shapes of &lt;code&gt;VarLenFeature&lt;/code&gt;s and &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt;s can be lost. To handle that situation, this op also provides dicts of shape tensors as part of the output. There is one dict for the context features, and one for the feature_list features. Context features of type &lt;code&gt;FixedLenFeature&lt;/code&gt;s will not be present, since their shapes are already known by the caller. In situations where the input 'FixedLenFeature`s are of different lengths across examples, the shorter examples will be padded with default datatype values: 0 for numeric types, and the empty string for string types.</source>
          <target state="translated">입력과 마찬가지로 결과 출력 텐서는 배치 치수를 갖습니다. 이는 &lt;code&gt;VarLenFeature&lt;/code&gt; 및 &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; 의 원래 예제 별 모양 이 손실 될 수 있음을 의미합니다. 이러한 상황을 처리하기 위해이 연산은 출력의 일부로 모양 텐서에 영향을줍니다. 컨텍스트 기능과 feature_list 기능에 대한 하나의 전략이 있습니다. &lt;code&gt;FixedLenFeature&lt;/code&gt; 유형의 컨텍스트 기능은 해당 호출자가 이미 알고 있기 때문에 표시되지 않습니다. 예에서 입력 'FixedLenFeature'의 길이가 다른 상황에서 더 짧은 예는 기본 데이터 유형 값 (숫자 유형의 경우 0, 문자열 유형의 경우 빈 문자열)으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="4eecc1aec362575e9dc0aa87412e351257168dd3" translate="yes" xml:space="preserve">
          <source>Linear Model for regression and classification problems.</source>
          <target state="translated">회귀 및 분류 문제에 대한 선형 모형.</target>
        </trans-unit>
        <trans-unit id="a886c1384bbaf9735c7d7d3569e77925979e0f5b" translate="yes" xml:space="preserve">
          <source>Linear activation function.</source>
          <target state="translated">선형 활성화 기능.</target>
        </trans-unit>
        <trans-unit id="779304b4544de80fca7d99ff353459e2b1fe35e0" translate="yes" xml:space="preserve">
          <source>Linear classifier model.</source>
          <target state="translated">선형 분류기 모델.</target>
        </trans-unit>
        <trans-unit id="e75846ef93df172480e78476a6d78c5a92429efb" translate="yes" xml:space="preserve">
          <source>Linear model:</source>
          <target state="translated">선형 모델 :</target>
        </trans-unit>
        <trans-unit id="8b687d516eba05a555e56c191e6c0d0d8f47cb73" translate="yes" xml:space="preserve">
          <source>Linear stack of layers.</source>
          <target state="translated">레이어의 선형 스택.</target>
        </trans-unit>
        <trans-unit id="e359aca84b836e819f224651232ba05492bbdef0" translate="yes" xml:space="preserve">
          <source>Linearly scales each image in &lt;code&gt;image&lt;/code&gt; to have mean 0 and variance 1.</source>
          <target state="translated">선형 스케일은 각각의 이미지 &lt;code&gt;image&lt;/code&gt; 평균 0, 분산 1을 가지고있다.</target>
        </trans-unit>
        <trans-unit id="71d6dd9058a06aa2561f7396fdeea3476609185c" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;logicaldeviceconfiguration&quot;&gt;&lt;code&gt;tf.config.LogicalDeviceConfiguration&lt;/code&gt;&lt;/a&gt; objects or &lt;code&gt;None&lt;/code&gt; if no virtual device configuration has been set for this physical device.</source>
          <target state="translated">&lt;a href=&quot;logicaldeviceconfiguration&quot;&gt; &lt;code&gt;tf.config.LogicalDeviceConfiguration&lt;/code&gt; &lt;/a&gt; 객체 목록 또는 이 물리적 장치에 대해 가상 장치 구성이 설정되지 않은 경우 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7cbc6ae5c42d76a006bd26048034681ebf8177ed" translate="yes" xml:space="preserve">
          <source>List of absolute paths to image files</source>
          <target state="translated">이미지 파일의 절대 경로 목록</target>
        </trans-unit>
        <trans-unit id="59a63ab389bb3641597570bb55b4a2e0dc670ba8" translate="yes" xml:space="preserve">
          <source>List of dense columns that convert from sparse, categorical input.</source>
          <target state="translated">드문 범주 형 입력에서 변환하는 조밀 한 열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="89ad477b75f8cf517d618e9722f716751d3f2565" translate="yes" xml:space="preserve">
          <source>List of discovered &lt;a href=&quot;physicaldevice&quot;&gt;&lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">감지 된 &lt;a href=&quot;physicaldevice&quot;&gt; &lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt; &lt;/a&gt; 오브젝트 목록</target>
        </trans-unit>
        <trans-unit id="ce05f63e5ea8ee363ba4ce30a32e146ae68db630" translate="yes" xml:space="preserve">
          <source>List of gradient tensors.</source>
          <target state="translated">그라디언트 텐서 목록.</target>
        </trans-unit>
        <trans-unit id="17d9ab0ac03b89553e6ff8167a22dfe864c2fefa" translate="yes" xml:space="preserve">
          <source>List of graph dependencies of this &lt;code&gt;LinearOperator&lt;/code&gt;. (deprecated)</source>
          <target state="translated">이 &lt;code&gt;LinearOperator&lt;/code&gt; 의 그래프 의존성리스트입니다 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="ec1203cb963d4d94c40acf650d9f54af297d8670" translate="yes" xml:space="preserve">
          <source>List of initialized &lt;code&gt;LogicalDevice&lt;/code&gt;s</source>
          <target state="translated">초기화 목록 &lt;code&gt;LogicalDevice&lt;/code&gt; 에의 의</target>
        </trans-unit>
        <trans-unit id="197abf4366c1fd7b76926af5232d9d7eff571543" translate="yes" xml:space="preserve">
          <source>List of input tensors.</source>
          <target state="translated">입력 텐서 목록.</target>
        </trans-unit>
        <trans-unit id="34b962a49ed7a88511acc1b9a77b4e87495065f0" translate="yes" xml:space="preserve">
          <source>List of loss tensors of the layer that depend on &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 의존하는 레이어의 손실 텐서 목록 .</target>
        </trans-unit>
        <trans-unit id="60f611e100806c62fb36a16a44f4a211db0f1e14" translate="yes" xml:space="preserve">
          <source>List of names.</source>
          <target state="translated">이름 목록.</target>
        </trans-unit>
        <trans-unit id="bf6b303c3ee3d8db6b07bec72fc793a1d43b6df8" translate="yes" xml:space="preserve">
          <source>List of not-yet-deleted checkpoint filenames.</source>
          <target state="translated">아직 삭제되지 않은 체크 포인트 파일 이름 목록.</target>
        </trans-unit>
        <trans-unit id="6a538ed03258aa8af402c327e316c74a40239f7e" translate="yes" xml:space="preserve">
          <source>List of strings.</source>
          <target state="translated">문자열 목록.</target>
        </trans-unit>
        <trans-unit id="a7a101df3401a7b2977d6d5518b49175640a5d74" translate="yes" xml:space="preserve">
          <source>List of summary ops, or None if called under eager execution.</source>
          <target state="translated">요약 작업 목록 또는 열망하는 실행에서 호출 된 경우 없음</target>
        </trans-unit>
        <trans-unit id="ca925c37174ebb221d17ced6fc0b5a0847b98dce" translate="yes" xml:space="preserve">
          <source>List of tuples &lt;code&gt;(name, shape)&lt;/code&gt;.</source>
          <target state="translated">튜플 목록 &lt;code&gt;(name, shape)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2e30430fbdd3d0dabe49d1b1532d6dd71364c91" translate="yes" xml:space="preserve">
          <source>List of update ops of the layer that depend on &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 의존하는 레이어의 업데이트 작업 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="35d0a30fefff85947a9f4061f854676f421d269a" translate="yes" xml:space="preserve">
          <source>List of visible &lt;code&gt;PhysicalDevice&lt;/code&gt;s</source>
          <target state="translated">눈에 보이는 목록 &lt;code&gt;PhysicalDevice&lt;/code&gt; 의 의</target>
        </trans-unit>
        <trans-unit id="04cd1b6e8ee6a7b2318fbb24e7be811e0fe7e819" translate="yes" xml:space="preserve">
          <source>Listing a single tensor multiple times in &lt;code&gt;primals&lt;/code&gt; raises an exception. Excluding a tensor from &lt;code&gt;primals&lt;/code&gt; is equivalent to watching it with a tangent tensor of zeros.</source>
          <target state="translated">단일 텐서를 &lt;code&gt;primals&lt;/code&gt; 에 여러 번 나열 하면 예외가 발생합니다. &lt;code&gt;primals&lt;/code&gt; 에서 텐서를 제외하는 것은 탄젠트 텐서를 0으로 보면서 보는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2570cfd16d17708acf2015f3ccd44e6977a22699" translate="yes" xml:space="preserve">
          <source>Lists available devices in this session.</source>
          <target state="translated">이 세션에서 사용 가능한 장치를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="190bed83c74fe8aaf9657d667fe634d0001eb419" translate="yes" xml:space="preserve">
          <source>Load CSV data</source>
          <target state="translated">CSV 데이터로드</target>
        </trans-unit>
        <trans-unit id="062d5a77ce227352135149c7c9b14bb19b0cb716" translate="yes" xml:space="preserve">
          <source>Load NumPy data</source>
          <target state="translated">NumPy 데이터로드</target>
        </trans-unit>
        <trans-unit id="9f62c21f0c26044d3f3516d71793bddb2fcf4887" translate="yes" xml:space="preserve">
          <source>Load a SavedModel from &lt;code&gt;export_dir&lt;/code&gt;.</source>
          <target state="translated">export_dir에서 &lt;code&gt;export_dir&lt;/code&gt; 모델을로드하십시오 .</target>
        </trans-unit>
        <trans-unit id="aacf488f77a609a4294d98de55e7b607c1c6eb97" translate="yes" xml:space="preserve">
          <source>Load a pandas.DataFrame</source>
          <target state="translated">팬더를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="7a6459ee9524815f4ee77ce96d9a143f9e3483ae" translate="yes" xml:space="preserve">
          <source>Load and restore capability for a SavedModel, which may include multiple meta graph defs. Each SavedModel is associated with a single checkpoint. Each meta graph def is saved with one or more tags, which are used to identify the exact meta graph def to load.</source>
          <target state="translated">여러 메타 그래프 정의를 포함 할 수있는 저장된 모델의로드 및 복원 기능. 각 저장된 모델은 단일 검사 점과 연결됩니다. 각 메타 그래프 정의는로드 할 정확한 메타 그래프 정의를 식별하는 데 사용되는 하나 이상의 태그와 함께 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="557855b5d1916548cbb98197ae48de6d372d9b91" translate="yes" xml:space="preserve">
          <source>Load images</source>
          <target state="translated">이미지로드</target>
        </trans-unit>
        <trans-unit id="22613f2687018c38f750e0b3d9363703a395a701" translate="yes" xml:space="preserve">
          <source>Load new value into this variable. (deprecated)</source>
          <target state="translated">이 변수에 새 값을로드하십시오. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="993212dffbfaff959687d3b7ff0692265d73f515" translate="yes" xml:space="preserve">
          <source>Load text</source>
          <target state="translated">텍스트 불러 오기</target>
        </trans-unit>
        <trans-unit id="73103770a86783c34b0addfb09e0a28610aa30bb" translate="yes" xml:space="preserve">
          <source>Load the resource at given path, where path is relative to tensorflow/.</source>
          <target state="translated">주어진 경로에서 자원을로드하십시오. 여기서 경로는 tensorflow /에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="0526960079b7d08fb73e39161b509fe5929eb92a" translate="yes" xml:space="preserve">
          <source>Loader functionality for SavedModel with hermetic, language-neutral exports.</source>
          <target state="translated">밀폐 된 언어 중립 내보내기가 포함 된 SavedModel의 로더 기능.</target>
        </trans-unit>
        <trans-unit id="5481b54240b505d7a550f830c7ccb0321966fa14" translate="yes" xml:space="preserve">
          <source>Loads CIFAR10 dataset.</source>
          <target state="translated">CIFAR10 데이터 세트를로드합니다.</target>
        </trans-unit>
        <trans-unit id="6ca942f6ca261defc1b13ab44bcd690227d0b3f1" translate="yes" xml:space="preserve">
          <source>Loads CIFAR100 dataset.</source>
          <target state="translated">CIFAR100 데이터 세트를로드합니다.</target>
        </trans-unit>
        <trans-unit id="68d62abb7efb708987df7775f393714957fb1f5d" translate="yes" xml:space="preserve">
          <source>Loads a TensorFlow plugin, containing custom ops and kernels.</source>
          <target state="translated">맞춤형 op 및 커널을 포함하는 TensorFlow 플러그인을로드합니다.</target>
        </trans-unit>
        <trans-unit id="dc8f6b6a8983bd36cb17ba76b7cc1872d57c7963" translate="yes" xml:space="preserve">
          <source>Loads a TensorFlow plugin, containing file system implementation. (deprecated)</source>
          <target state="translated">파일 시스템 구현을 포함하는 TensorFlow 플러그인을로드합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="7a17777c66526f34f00e26ab09370be026878c6e" translate="yes" xml:space="preserve">
          <source>Loads a TensorFlow plugin.</source>
          <target state="translated">TensorFlow 플러그인을로드합니다.</target>
        </trans-unit>
        <trans-unit id="62480162a28f761c900f5b64c294166a5fb1c13d" translate="yes" xml:space="preserve">
          <source>Loads a keras Model from a SavedModel created by &lt;code&gt;export_saved_model()&lt;/code&gt;. (deprecated)</source>
          <target state="translated">&lt;code&gt;export_saved_model()&lt;/code&gt; 의해 생성 된 SavedModel에서 keras 모델을로드합니다 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="c6b7824b2e43f29bb60438688e34a113fa37b03f" translate="yes" xml:space="preserve">
          <source>Loads a model saved via &lt;code&gt;save_model&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;save_model&lt;/code&gt; 을 통해 저장된 모델을로드합니다 .</target>
        </trans-unit>
        <trans-unit id="76973939b27471a0538e53397a0e23ca2700c48c" translate="yes" xml:space="preserve">
          <source>Loads all layer weights, either from a TensorFlow or an HDF5 weight file.</source>
          <target state="translated">TensorFlow 또는 HDF5 가중치 파일에서 모든 레이어 가중치를로드합니다.</target>
        </trans-unit>
        <trans-unit id="72c8ed0033fe33c383db1f0cf149eab382aab14a" translate="yes" xml:space="preserve">
          <source>Loads an image into PIL format.</source>
          <target state="translated">이미지를 PIL 형식으로로드합니다.</target>
        </trans-unit>
        <trans-unit id="aa1f7d3fe8efe95baf4e2ce6cae8f535271b489d" translate="yes" xml:space="preserve">
          <source>Loads the Boston Housing dataset.</source>
          <target state="translated">Boston Housing 데이터 셋을로드합니다.</target>
        </trans-unit>
        <trans-unit id="22073f95d45997b95ea8c9a20f73a425fa8896f1" translate="yes" xml:space="preserve">
          <source>Loads the Fashion-MNIST dataset.</source>
          <target state="translated">Fashion-MNIST 데이터 세트를로드합니다.</target>
        </trans-unit>
        <trans-unit id="731c706d71d779dd3d72a03e34691c4751b949ce" translate="yes" xml:space="preserve">
          <source>Loads the IMDB dataset.</source>
          <target state="translated">IMDB 데이터 세트를로드합니다.</target>
        </trans-unit>
        <trans-unit id="688643c5789b5b91776b8b2df782ac07c756acd8" translate="yes" xml:space="preserve">
          <source>Loads the MNIST dataset.</source>
          <target state="translated">MNIST 데이터 세트를로드합니다.</target>
        </trans-unit>
        <trans-unit id="408d51f0d117c3fb0e2f7a565273433096651bde" translate="yes" xml:space="preserve">
          <source>Loads the Reuters newswire classification dataset.</source>
          <target state="translated">Reuters 뉴스 와이어 분류 데이터 세트를로드합니다.</target>
        </trans-unit>
        <trans-unit id="de8a81b938f3ba90372b2ae1290bb36d11f0e181" translate="yes" xml:space="preserve">
          <source>Loads the model from a SavedModel as specified by tags. (deprecated)</source>
          <target state="translated">태그로 지정된 SavedModel에서 모델을로드합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="0230837b093a6c6fad2a0c1129add27e4c417fba" translate="yes" xml:space="preserve">
          <source>Local Response Normalization.</source>
          <target state="translated">로컬 응답 정규화.</target>
        </trans-unit>
        <trans-unit id="e9e8a7d872529ea03c4d992fa708829c551f3f69" translate="yes" xml:space="preserve">
          <source>Local variables - per process variables, usually not saved/restored to checkpoint and used for temporary or intermediate values. For example, they can be used as counters for metrics computation or number of epochs this machine has read data. The &lt;code&gt;tf.contrib.framework.local_variable()&lt;/code&gt; function automatically adds the new variable to &lt;code&gt;GraphKeys.LOCAL_VARIABLES&lt;/code&gt;. This convenience function returns the contents of that collection.</source>
          <target state="translated">로컬 변수-프로세스 변수마다, 일반적으로 검사 점에 저장 / 복원되지 않으며 임시 또는 중간 값에 사용됩니다. 예를 들어,이 시스템이 데이터를 읽은 메트릭 계산 또는 에포크 수에 대한 카운터로 사용될 수 있습니다. &lt;code&gt;tf.contrib.framework.local_variable()&lt;/code&gt; 함수는 자동적으로 새로운 변수 추가 &lt;code&gt;GraphKeys.LOCAL_VARIABLES&lt;/code&gt; 를 . 이 편의 함수는 해당 컬렉션의 내용을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dc7ffd71db906f53c103fe34f8a4f3d9806e8763" translate="yes" xml:space="preserve">
          <source>Locally-connected layer for 1D inputs.</source>
          <target state="translated">1D 입력을위한 로컬로 연결된 레이어.</target>
        </trans-unit>
        <trans-unit id="2f373cda14c3b8098347afe8dd9af2f74b9c4779" translate="yes" xml:space="preserve">
          <source>Locally-connected layer for 2D inputs.</source>
          <target state="translated">2D 입력을위한 로컬로 연결된 레이어.</target>
        </trans-unit>
        <trans-unit id="767a83a33fbb9bd1cd174f2b8088f06ab7a82b71" translate="yes" xml:space="preserve">
          <source>Locations of these Student's t distribution(s).</source>
          <target state="translated">이 학생의 t 분포 위치.</target>
        </trans-unit>
        <trans-unit id="d140e73ec743c4a7907fa7b83ddc313c1f8e5451" translate="yes" xml:space="preserve">
          <source>Log 'msg % args' at level 'level' once per 'n' times.</source>
          <target state="translated">'n'번에 한 번 'level'레벨에서 'msg % args'를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="b89e54add6684ba38505a4f1c532caffab960b06" translate="yes" xml:space="preserve">
          <source>Log 'msg % args' at level 'level' only first 'n' times.</source>
          <target state="translated">'level'레벨에서 'msg % args'를 처음 'n'번만 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="a4a80652920a2d4b352fe3e0ec8ab89bea17469c" translate="yes" xml:space="preserve">
          <source>Log 'msg % args' at level 'level' only if condition is fulfilled.</source>
          <target state="translated">조건이 충족되는 경우에만 'level'레벨에서 'msg % args'를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="875a30c5bf6b430f87aecc6f9576884f5be856c0" translate="yes" xml:space="preserve">
          <source>Log absolute value of determinant for every batch member.</source>
          <target state="translated">모든 배치 멤버에 대한 결정자의 절대 값을 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="05c3dd8f6f92306c249822f3746171ed879cdeac" translate="yes" xml:space="preserve">
          <source>Log cumulative distribution function.</source>
          <target state="translated">누적 분포 함수를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="6cf9f87f16faf3fe8dd7a8b5b8198b38509c5107" translate="yes" xml:space="preserve">
          <source>Log probability density/mass function.</source>
          <target state="translated">로그 확률 밀도 / 질량 함수.</target>
        </trans-unit>
        <trans-unit id="5c4061f3166f37da1f46b67bfeacf233f9a7e450" translate="yes" xml:space="preserve">
          <source>Log provided 'op_log', and add additional model information below.</source>
          <target state="translated">제공된 'op_log'를 로그하고 아래에 추가 모델 정보를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="b5f631c44e6faf436ba6b9ca242315ab0fccba26" translate="yes" xml:space="preserve">
          <source>Log survival function.</source>
          <target state="translated">로그 생존 기능.</target>
        </trans-unit>
        <trans-unit id="9decda924563091619c710d07a1ab25e6563b712" translate="yes" xml:space="preserve">
          <source>Log-odds of a &lt;code&gt;1&lt;/code&gt; outcome (vs &lt;code&gt;0&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 결과 의 로그 홀수 (vs &lt;code&gt;0&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="46fe6e2c799e3ed41a24ccc14d164c3beaecb450" translate="yes" xml:space="preserve">
          <source>Logging and Summary Operations.</source>
          <target state="translated">로깅 및 요약 작업.</target>
        </trans-unit>
        <trans-unit id="795350c3b54f1e713189dff3356bbeed772e6596" translate="yes" xml:space="preserve">
          <source>Logical XOR function.</source>
          <target state="translated">논리 XOR 기능</target>
        </trans-unit>
        <trans-unit id="d58691ee75afafd0a74bc3a72cfa58ad8b4b433a" translate="yes" xml:space="preserve">
          <source>Logical devices may correspond to physical devices or remote devices in the cluster. Operations and tensors may be placed on these devices by using the &lt;code&gt;name&lt;/code&gt; of the &lt;a href=&quot;logicaldevice&quot;&gt;&lt;code&gt;tf.config.LogicalDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">논리 장치는 클러스터의 실제 장치 또는 원격 장치에 해당 할 수 있습니다. &lt;a href=&quot;logicaldevice&quot;&gt; &lt;code&gt;tf.config.LogicalDevice&lt;/code&gt; &lt;/a&gt; &lt;code&gt;name&lt;/code&gt; 을 사용하여 이러한 장치에 작업 및 텐서를 배치 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb8a9e427719096f51e6995296a412a7a00af898" translate="yes" xml:space="preserve">
          <source>Logs entries are output to &lt;a href=&quot;https://abseil.io&quot;&gt;absl&lt;/a&gt;'s &lt;a href=&quot;https://abseil.io/docs/python/guides/logging&quot;&gt;default output&lt;/a&gt;, with &lt;code&gt;INFO&lt;/code&gt; level. Logs can be mirrored to stdout by using the &lt;code&gt;alsologtostdout&lt;/code&gt; argument. Mirroring is enabled by default when Python runs in interactive mode.</source>
          <target state="translated">로그 항목에 출력 &lt;a href=&quot;https://abseil.io&quot;&gt;ABSL&lt;/a&gt; 의 &lt;a href=&quot;https://abseil.io/docs/python/guides/logging&quot;&gt;기본 출력&lt;/a&gt; 으로, &lt;code&gt;INFO&lt;/code&gt; 수준. &lt;code&gt;alsologtostdout&lt;/code&gt; 인수 를 사용하여 로그를 stdout에 미러링 할 수 있습니다 . Python은 대화식 모드에서 실행될 때 기본적으로 미러링이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="bd3c7adb9502a179bb249fd600b7e5261a210294" translate="yes" xml:space="preserve">
          <source>Logs the 1st call, (N+1)st call, (2N+1)st call, etc. Not threadsafe.</source>
          <target state="translated">첫 번째 호출, (N + 1) 번째 호출, (2N + 1) 번째 호출 등을 기록합니다. 스레드 세이프가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ebe02787134445e893e1bd2603311e46bec39baa" translate="yes" xml:space="preserve">
          <source>Long Short-Term Memory layer - Hochreiter 1997.</source>
          <target state="translated">장기 단기 메모리 계층-Hochreiter 1997.</target>
        </trans-unit>
        <trans-unit id="66f9ebb1f3df15042887da7558c39e22dd020c5c" translate="yes" xml:space="preserve">
          <source>Long short-term memory recurrent neural network architectures for large scale acoustic modeling.</source>
          <target state="translated">대규모 음향 모델링을위한 장기 단기 메모리 반복 신경망 아키텍처.</target>
        </trans-unit>
        <trans-unit id="e5f98a190a65812dfa1870f45cc1e025f12284ab" translate="yes" xml:space="preserve">
          <source>Long short-term memory unit (LSTM) recurrent network cell.</source>
          <target state="translated">LSTM (long short-term memory unit) 반복 네트워크 셀.</target>
        </trans-unit>
        <trans-unit id="2aa7d84b1a3103483d7ecff0bbc735209f88206d" translate="yes" xml:space="preserve">
          <source>Looks up &lt;code&gt;ids&lt;/code&gt; in a list of embedding tensors.</source>
          <target state="translated">조회 &lt;code&gt;ids&lt;/code&gt; 내장 텐서의 목록에서.</target>
        </trans-unit>
        <trans-unit id="683414de28c5f87e8b418e3d7d3504594f011a16" translate="yes" xml:space="preserve">
          <source>Looks up &lt;code&gt;keys&lt;/code&gt; in a table, outputs the corresponding values.</source>
          <target state="translated">조회 &lt;code&gt;keys&lt;/code&gt; 테이블에서, 대응하는 값을 출력한다.</target>
        </trans-unit>
        <trans-unit id="10bed2eee05f74f24df95642cfe4bb63bbafafe3" translate="yes" xml:space="preserve">
          <source>Looks up &lt;code&gt;keys&lt;/code&gt; in the table, outputs the corresponding values.</source>
          <target state="translated">테이블에서 &lt;code&gt;keys&lt;/code&gt; 를 찾고 해당 값을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="e3c79d3acfdac605524a3bf9473d2b91a1628f2b" translate="yes" xml:space="preserve">
          <source>Lookup embedding results, accounting for invalid IDs and empty features.</source>
          <target state="translated">유효하지 않은 ID 및 비어있는 기능을 고려하여 검색 결과를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="28f68c1cc2472784c73c5f414217b9e0def3e3fd" translate="yes" xml:space="preserve">
          <source>Lookup replica ids by task number and logical core.</source>
          <target state="translated">작업 번호 및 논리 코어별로 복제본 ID를 조회합니다.</target>
        </trans-unit>
        <trans-unit id="cd49fadce79a6f7405a8564906f31d0a475fee8a" translate="yes" xml:space="preserve">
          <source>Loosely speaking, with &lt;code&gt;*&lt;/code&gt; element-wise multiplication, matrix multiplication is equal to the action of a Fourier multiplier: &lt;code&gt;A u = IDFT[ H * DFT[u] ]&lt;/code&gt;. Precisely speaking, given &lt;code&gt;[N, R]&lt;/code&gt; matrix &lt;code&gt;u&lt;/code&gt;, let &lt;code&gt;DFT[u]&lt;/code&gt; be the &lt;code&gt;[N, R]&lt;/code&gt; matrix with &lt;code&gt;rth&lt;/code&gt; column equal to the DFT of the &lt;code&gt;rth&lt;/code&gt; column of &lt;code&gt;u&lt;/code&gt;. Define the &lt;code&gt;IDFT&lt;/code&gt; similarly. Matrix multiplication may be expressed columnwise:</source>
          <target state="translated">느슨하게 말하면, &lt;code&gt;*&lt;/code&gt; 요소 별 곱셈으로 행렬 곱셈은 푸리에 곱셈기의 동작과 같습니다 : &lt;code&gt;A u = IDFT[ H * DFT[u] ]&lt;/code&gt; . 정확하게 말하면, 주어진 &lt;code&gt;[N, R]&lt;/code&gt; 매트릭스 &lt;code&gt;u&lt;/code&gt; ,하자 &lt;code&gt;DFT[u]&lt;/code&gt; 수 &lt;code&gt;[N, R]&lt;/code&gt; 와 행렬 &lt;code&gt;rth&lt;/code&gt; 의 DFT에 동일 열의 &lt;code&gt;rth&lt;/code&gt; 의 열의 &lt;code&gt;u&lt;/code&gt; . &lt;code&gt;IDFT&lt;/code&gt; 를 유사하게 정의하십시오 . 행렬 곱셈은 열 단위로 표현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c44e2157aa57793b9b1cbcaf58bab783591d79b" translate="yes" xml:space="preserve">
          <source>Loss and predicted output are determined by the specified head.</source>
          <target state="translated">손실 및 예상 출력은 지정된 헤드에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="ad6e68a88d5f15d61bc8db281da756ffbd790dc3" translate="yes" xml:space="preserve">
          <source>Loss base class.</source>
          <target state="translated">기본 클래스를 잃습니다.</target>
        </trans-unit>
        <trans-unit id="35ecfff362465da803150ee2815024dfc76af6b8" translate="yes" xml:space="preserve">
          <source>Loss is calculated by using mean squared error.</source>
          <target state="translated">손실은 평균 제곱 오차를 사용하여 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="83795bd7cca05122f32bb7ece444a29418823ac4" translate="yes" xml:space="preserve">
          <source>Loss is calculated by using softmax cross entropy.</source>
          <target state="translated">손실은 softmax 교차 엔트로피를 사용하여 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="8a98ef4c9428d7ea66b1130aac1cdcc58b1a8a0d" translate="yes" xml:space="preserve">
          <source>Loss operations for use in neural networks.</source>
          <target state="translated">신경망에서 사용하기위한 운영 손실.</target>
        </trans-unit>
        <trans-unit id="a740633271fec13a83c776ae2823cfcd673dc4e8" translate="yes" xml:space="preserve">
          <source>Loss scale base class.</source>
          <target state="translated">손실 규모 기본 클래스.</target>
        </trans-unit>
        <trans-unit id="18e661760a3eafec5808dbdce8fc79acf171e94a" translate="yes" xml:space="preserve">
          <source>Loss scale that dynamically adjusts itself.</source>
          <target state="translated">동적으로 조정되는 손실 규모.</target>
        </trans-unit>
        <trans-unit id="6679f9d85e2144530d43d05a21793eb800be0bbc" translate="yes" xml:space="preserve">
          <source>Loss scale with a fixed value.</source>
          <target state="translated">고정 된 값으로 손실 규모.</target>
        </trans-unit>
        <trans-unit id="8491ad9e8ee2953438cc51a78f5d95cda14b1957" translate="yes" xml:space="preserve">
          <source>Loss scaling is a process that multiplies the loss by a multiplier called the loss scale, and divides each gradient by the same multiplier. The pseudocode for this process is:</source>
          <target state="translated">손실 스케일링은 손실에 손실 스케일이라는 승수를 곱하고 각 기울기를 동일한 승수로 나누는 프로세스입니다. 이 프로세스의 의사 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab91fca0aeb455198c678a8482e643ec38ec751a" translate="yes" xml:space="preserve">
          <source>Losses which are associated with this &lt;code&gt;Layer&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Layer&lt;/code&gt; 와 관련된 손실입니다 .</target>
        </trans-unit>
        <trans-unit id="3360771a8342e377287ddaf7bd151ff72890d954" translate="yes" xml:space="preserve">
          <source>Lower boundary of the output interval.</source>
          <target state="translated">출력 간격의 하한.</target>
        </trans-unit>
        <trans-unit id="e1e88e370479010324c829c1983f778734a10212" translate="yes" xml:space="preserve">
          <source>Lower-level concepts:</source>
          <target state="translated">하위 개념 :</target>
        </trans-unit>
        <trans-unit id="3c406f8b682bfabf14d34aaba2d5ad5db571dd3f" translate="yes" xml:space="preserve">
          <source>MNIST handwritten digits dataset.</source>
          <target state="translated">MNIST 필기 숫자 데이터 세트.</target>
        </trans-unit>
        <trans-unit id="dafebffff623d73e15929c5588dec444569e19f0" translate="yes" xml:space="preserve">
          <source>Main code:</source>
          <target state="translated">주요 코드 :</target>
        </trans-unit>
        <trans-unit id="6f2a66163f3642d0d1425e7eb364e6e36e500347" translate="yes" xml:space="preserve">
          <source>Maintains moving averages of variables by employing an exponential decay.</source>
          <target state="translated">지수 붕괴를 사용하여 변수의 이동 평균을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="43ef89ee3d1dba8c359cc644eb550e2f29360064" translate="yes" xml:space="preserve">
          <source>Maintains moving averages of variables.</source>
          <target state="translated">이동 평균 변수를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="71d1cbca2215bb67bcd24dcc55508a2ba93dc2a2" translate="yes" xml:space="preserve">
          <source>Make a decorator from a wrapper and a target.</source>
          <target state="translated">랩퍼와 대상으로 데코레이터를 만드십시오.</target>
        </trans-unit>
        <trans-unit id="f32ec60249d855a6d4318575648c3b18f58947dc" translate="yes" xml:space="preserve">
          <source>Make device, colocation and dependencies stacks thread-local.</source>
          <target state="translated">장치, 코 로케이션 및 종속성 스택을 스레드 로컬로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="33a6d11f33ff6b947bdfba3b55d551915efa07d4" translate="yes" xml:space="preserve">
          <source>Make sure the model is ready to be used.</source>
          <target state="translated">모델을 사용할 준비가되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f29d8f6a52274017b3ccbaf74ed529f992168a0d" translate="yes" xml:space="preserve">
          <source>Make usable with &quot;with&quot; statement.</source>
          <target state="translated">&quot;with&quot;문으로 사용 가능하게하십시오.</target>
        </trans-unit>
        <trans-unit id="3d1979b1819413d98729ca00e4cd7658fa8823e0" translate="yes" xml:space="preserve">
          <source>Makes a &lt;a href=&quot;../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; for input provided via a numpy array.</source>
          <target state="translated">numpy 배열을 통해 제공된 입력에 대해 &lt;a href=&quot;../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8ef8a54faeaeaf71838c2513c3b74f43de944275" translate="yes" xml:space="preserve">
          <source>Makes a &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; for input provided via a numpy array.</source>
          <target state="translated">numpy 배열을 통해 제공된 입력에 대해 &lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="09ea1939aaa446da8208e256a4ff60385c0135d1" translate="yes" xml:space="preserve">
          <source>Makes a dataset for input provided via a numpy array.</source>
          <target state="translated">numpy 배열을 통해 제공된 입력 데이터 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1a859fea44ba5cfefd1f4acbcbe608590a54067e" translate="yes" xml:space="preserve">
          <source>Makes a tf.data.Dataset for input provided via a numpy array.</source>
          <target state="translated">numpy 배열을 통해 제공된 입력에 대해 tf.data.Dataset을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="79509be305653ba22c04ef14f59a5ae58c952329" translate="yes" xml:space="preserve">
          <source>Makes an iterator for input provided via &lt;code&gt;dataset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dataset&lt;/code&gt; 을 통해 제공된 입력 반복자를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a4e2d098248ad7a84dd4f1ab39d4b7d703949508" translate="yes" xml:space="preserve">
          <source>Many common operations can be expressed in this way. For example:</source>
          <target state="translated">이러한 방식으로 많은 공통 작업을 표현할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e55bd3ea54e02be7480f581e2d927376478dc317" translate="yes" xml:space="preserve">
          <source>Many of the arguments we need for &lt;code&gt;get_variable&lt;/code&gt; in a variable store are most easily handled with a context. This object is used for the defaults.</source>
          <target state="translated">변수 저장소에서 &lt;code&gt;get_variable&lt;/code&gt; 에 필요한 많은 인수는 컨텍스트를 통해 가장 쉽게 처리됩니다. 이 개체는 기본값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bd99292478afe9aeb2ec2083c8f4f9ece3219e9f" translate="yes" xml:space="preserve">
          <source>Many ops support both &lt;code&gt;Tensor&lt;/code&gt;s and &lt;code&gt;RaggedTensor&lt;/code&gt;s. The term &quot;potentially ragged tensor&quot; may be used to refer to a tensor that might be either a &lt;code&gt;Tensor&lt;/code&gt; or a &lt;code&gt;RaggedTensor&lt;/code&gt;. The ragged-rank of a &lt;code&gt;Tensor&lt;/code&gt; is zero.</source>
          <target state="translated">많은 op가 &lt;code&gt;Tensor&lt;/code&gt; 와 &lt;code&gt;RaggedTensor&lt;/code&gt; 를 모두 지원합니다 . &quot;잠재적으로 비정형 텐서&quot;라는 용어는 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;RaggedTensor&lt;/code&gt; 일 수있는 텐서를 지칭하기 위해 사용될 수있다 . &lt;code&gt;Tensor&lt;/code&gt; 의 울퉁불퉁 한 순위 는 0입니다.</target>
        </trans-unit>
        <trans-unit id="53e8b11b0dea74fecb93434ddb3ce258e5ef1be5" translate="yes" xml:space="preserve">
          <source>Many optimizer subclasses, such as &lt;code&gt;Adam&lt;/code&gt; and &lt;code&gt;Adagrad&lt;/code&gt; allocate and manage additional variables associated with the variables to train. These are called</source>
          <target state="translated">&lt;code&gt;Adam&lt;/code&gt; 및 &lt;code&gt;Adagrad&lt;/code&gt; 와 같은 많은 옵티 마이저 서브 클래스는 학습 할 변수와 연관된 추가 변수를 할당하고 관리합니다. 이것들은</target>
        </trans-unit>
        <trans-unit id="f323d598afeb52eedb375ea237bf338a81347dcd" translate="yes" xml:space="preserve">
          <source>Map the function fn over the elements elems and return the outputs.</source>
          <target state="translated">요소 요소 위에 함수 fn을 매핑하고 출력을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aa8633bb473572cbcb3b97854d0d30fbd1411560" translate="yes" xml:space="preserve">
          <source>Mapping from logical cores in a computation to the physical TPU topology.</source>
          <target state="translated">계산의 논리 코어에서 실제 TPU 토폴로지로 매핑</target>
        </trans-unit>
        <trans-unit id="84989b71b2b58e4ec1a777e027d109f486dcebdf" translate="yes" xml:space="preserve">
          <source>Maps &lt;code&gt;map_func&lt;/code&gt; across &lt;code&gt;batch_size&lt;/code&gt; consecutive elements of this dataset and then combines them into a batch. Functionally, it is equivalent to &lt;code&gt;map&lt;/code&gt; followed by &lt;code&gt;batch&lt;/code&gt;. However, by fusing the two transformations together, the implementation can be more efficient. Surfacing this transformation in the API is temporary. Once automatic input pipeline optimization is implemented, the fusing of &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;batch&lt;/code&gt; will happen automatically and this API will be deprecated.</source>
          <target state="translated">지도 &lt;code&gt;map_func&lt;/code&gt; 에서 &lt;code&gt;batch_size&lt;/code&gt; 이 데이터 집합의 연속 요소와는 배치로 결합합니다. 기능적으로 &lt;code&gt;map&lt;/code&gt; 다음에 &lt;code&gt;batch&lt;/code&gt; 와 같습니다 . 그러나 두 변환을 함께 사용하면 구현이 더 효율적일 수 있습니다. API에서이 변환을 표면화하는 것은 일시적입니다. 자동 입력 파이프 라인 최적화가 구현되면 &lt;code&gt;map&lt;/code&gt; 과 &lt;code&gt;batch&lt;/code&gt; 의 융합 이 자동으로 발생하며이 API는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b20adeb070c1e7e0eaa13cecf212ab486f0d8b04" translate="yes" xml:space="preserve">
          <source>Maps &lt;code&gt;map_func&lt;/code&gt; across the elements of this dataset.</source>
          <target state="translated">지도 &lt;code&gt;map_func&lt;/code&gt; 이 데이터 집합의 요소에서.</target>
        </trans-unit>
        <trans-unit id="cbcd3eb4e865a6db95e259e25eb9db37316f9fbe" translate="yes" xml:space="preserve">
          <source>Maps &lt;code&gt;map_func&lt;/code&gt; across the elements of this dataset. (deprecated)</source>
          <target state="translated">지도 &lt;code&gt;map_func&lt;/code&gt; 이 데이터 집합의 요소에서. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="9fe2ab400550e9892dc4313b4c7e0b2e43ca666d" translate="yes" xml:space="preserve">
          <source>Maps &lt;code&gt;map_func&lt;/code&gt; across this dataset and flattens the result.</source>
          <target state="translated">지도 &lt;code&gt;map_func&lt;/code&gt; 이 데이터 집합을 가로 질러 그 결과를 평평하게.</target>
        </trans-unit>
        <trans-unit id="d58713383b02305e9c94816709d464f68a7ce598" translate="yes" xml:space="preserve">
          <source>Maps &lt;code&gt;map_func&lt;/code&gt; across this dataset, and interleaves the results.</source>
          <target state="translated">지도 &lt;code&gt;map_func&lt;/code&gt; 이 데이터 집합에서, 인터리빙 결과.</target>
        </trans-unit>
        <trans-unit id="ebe9efd0a5dc2e66261e05cc0c6372c1f282eb91" translate="yes" xml:space="preserve">
          <source>Marks the given &lt;code&gt;op&lt;/code&gt; as unfetchable in this graph.</source>
          <target state="translated">이 그래프에서 주어진 &lt;code&gt;op&lt;/code&gt; 를 가져올 수없는 것으로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="fd65e89d0bb7058b0621e197ff160bf8d59790b0" translate="yes" xml:space="preserve">
          <source>Marks the given &lt;code&gt;tensor&lt;/code&gt; as unfeedable in this graph.</source>
          <target state="translated">이 그래프에서 지정된 &lt;code&gt;tensor&lt;/code&gt; 를 공급할 수없는 것으로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="48fadc1e7bd9b25ecc3b22dda43227a7558e99f6" translate="yes" xml:space="preserve">
          <source>Masking and padding with Keras</source>
          <target state="translated">Keras로 마스킹 및 패딩</target>
        </trans-unit>
        <trans-unit id="f54535dc277096cb2a28dfc58c24e9c715bf3096" translate="yes" xml:space="preserve">
          <source>Masking:</source>
          <target state="translated">Masking:</target>
        </trans-unit>
        <trans-unit id="83ea7468b56c834f81b2d75cac1a486165db0bd2" translate="yes" xml:space="preserve">
          <source>Masks a sequence by using a mask value to skip timesteps.</source>
          <target state="translated">마스크 값을 사용하여 시간 단계를 건너 뛰어 시퀀스를 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="c870d90233038e91c8c07d64e02ad490ef8c00d1" translate="yes" xml:space="preserve">
          <source>Masks elements of &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IndexedSlices&lt;/code&gt; 의 요소를 마스크합니다 .</target>
        </trans-unit>
        <trans-unit id="8755f7104456e604c1b9d123906fd8e709155197" translate="yes" xml:space="preserve">
          <source>Math Operations.</source>
          <target state="translated">수학 연산.</target>
        </trans-unit>
        <trans-unit id="5726e9ba003460e8e718da4a3313b6bafd399ce5" translate="yes" xml:space="preserve">
          <source>Mathematical Details</source>
          <target state="translated">수학적 세부 사항</target>
        </trans-unit>
        <trans-unit id="8968b206dd1d5544deb264495135695b2bdd5f0d" translate="yes" xml:space="preserve">
          <source>Mathematical details</source>
          <target state="translated">수학적 세부 사항</target>
        </trans-unit>
        <trans-unit id="1d1f1043bd7f5d64c5d409fca258876e85c65b77" translate="yes" xml:space="preserve">
          <source>Mathematically, &lt;code&gt;tangents&lt;/code&gt; is a vector right-multiplying the Jacobian matrix (a Jacobian-vector product) for the function computed while this accumulator is active. Since JVPs are computed in forward mode as the computation happens, this vector must be supplied in advance.</source>
          <target state="translated">수학적으로 &lt;code&gt;tangents&lt;/code&gt; 는이 누산기가 활성화 된 동안 계산 된 함수에 대한 야곱 행렬 (Jacobian- 벡터 곱)을 오른쪽으로 곱한 벡터입니다. JVP는 계산이 진행되는 동안 순방향 모드로 계산되므로이 벡터를 미리 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa06f8db6fbe25fc601f80a01446f67d251c24c0" translate="yes" xml:space="preserve">
          <source>Mathematically, loss scaling has no effect, but can help avoid numerical underflow in intermediate gradients when float16 tensors are used for mixed precision training. By multiplying the loss, each intermediate gradient will have the same multiplier applied.</source>
          <target state="translated">수학적으로 손실 스케일링은 효과가 없지만 float16 텐서를 혼합 정밀 훈련에 사용할 때 중간 기울기에서 수치 언더 플로를 피할 수 있습니다. 손실을 곱하면 각 중간 그래디언트에 동일한 승수가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e39990216cfbfba50fd8c3cd4bae80e8213d2438" translate="yes" xml:space="preserve">
          <source>Mathematically, loss scaling has no effect, but can help avoid numerical underflow in intermediate gradients when float16 tensors are used. By multiplying the loss, each intermediate gradient will have the same multiplier applied.</source>
          <target state="translated">수학적으로 손실 스케일링은 효과가 없지만 float16 텐서를 사용할 때 중간 기울기에서 수치 언더 플로를 피할 수 있습니다. 손실을 곱하면 각 중간 그래디언트에 동일한 승수가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="38b02db9094516e4069a2d62afcf24ef35bf20dd" translate="yes" xml:space="preserve">
          <source>Matrix &lt;code&gt;a&lt;/code&gt; can be transposed or adjointed (conjugated and transposed) on the fly by setting one of the corresponding flag to &lt;code&gt;True&lt;/code&gt;. These are &lt;code&gt;False&lt;/code&gt; by default.</source>
          <target state="translated">매트릭스 &lt;code&gt;a&lt;/code&gt; 는 해당 플래그 중 하나를 &lt;code&gt;True&lt;/code&gt; 로 설정하여 즉석에서 조옮김 또는 결합 (접합 및 조옮김) 할 수 있습니다 . 이들은 &lt;code&gt;False&lt;/code&gt; 기본적으로.</target>
        </trans-unit>
        <trans-unit id="3a04e10aa4e38304d5ac1ff76a130e80ce1e6515" translate="yes" xml:space="preserve">
          <source>Matrix free computations</source>
          <target state="translated">매트릭스 프리 계산</target>
        </trans-unit>
        <trans-unit id="a22e252372f3d7e2d12cd32ec2a8db1f1300caa1" translate="yes" xml:space="preserve">
          <source>Matrix property hints</source>
          <target state="translated">매트릭스 속성 힌트</target>
        </trans-unit>
        <trans-unit id="627f831e91e3251c174600e61a5f2e6601d8ecbc" translate="yes" xml:space="preserve">
          <source>Max Pooling layer for 1D inputs.</source>
          <target state="translated">1D 입력을위한 최대 풀링 레이어.</target>
        </trans-unit>
        <trans-unit id="a70e5ebfca50c4d42d6a6972a240d683501c7b21" translate="yes" xml:space="preserve">
          <source>Max Pooling layer for 1D inputs. (deprecated)</source>
          <target state="translated">1D 입력을위한 최대 풀링 레이어. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="9cd5a9fbf40bdb152579e0904bb5fb473d7524be" translate="yes" xml:space="preserve">
          <source>Max pooling layer for 2D inputs (e.g. images).</source>
          <target state="translated">2D 입력 (예 : 이미지)을위한 최대 풀링 레이어.</target>
        </trans-unit>
        <trans-unit id="8eb66b40b54539d756acbc256854202ebb22bd27" translate="yes" xml:space="preserve">
          <source>Max pooling layer for 2D inputs (e.g. images). (deprecated)</source>
          <target state="translated">2D 입력 (예 : 이미지)을위한 최대 풀링 레이어. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="9fd866e0a3015aa15bdd093e8842570ff7aa39cb" translate="yes" xml:space="preserve">
          <source>Max pooling layer for 3D inputs (e.g. (deprecated)</source>
          <target state="translated">3D 입력을위한 최대 풀링 계층 (예 : 더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="c3844cadbff3b4edf28a56c3ef4f189a1019b3f9" translate="yes" xml:space="preserve">
          <source>Max pooling layer for 3D inputs (e.g. volumes).</source>
          <target state="translated">3D 입력을위한 최대 풀링 계층 (예 : 볼륨).</target>
        </trans-unit>
        <trans-unit id="48a4b7ce55c769bc28673d23344a40f1c695b335" translate="yes" xml:space="preserve">
          <source>Max pooling operation for 3D data (spatial or spatio-temporal).</source>
          <target state="translated">3D 데이터의 최대 풀링 작업 (공간 또는 시공간).</target>
        </trans-unit>
        <trans-unit id="d6db7a822089c2d1fcee04d598232bca949f76c2" translate="yes" xml:space="preserve">
          <source>Max pooling operation for spatial data.</source>
          <target state="translated">공간 데이터에 대한 최대 풀링 작업.</target>
        </trans-unit>
        <trans-unit id="37215e67b88c6b7d01a3e9edbfea83e1511ec3cf" translate="yes" xml:space="preserve">
          <source>Max pooling operation for temporal data.</source>
          <target state="translated">임시 데이터에 대한 최대 풀링 작업.</target>
        </trans-unit>
        <trans-unit id="54bc7686fcc7f619d21549e63b84601d10cda127" translate="yes" xml:space="preserve">
          <source>Max-pooling is a special case when the filter has size equal to the pooling kernel size and contains all zeros.</source>
          <target state="translated">최대 풀링은 필터의 크기가 풀링 커널 크기와 같고 모두 0을 포함하는 특수한 경우입니다.</target>
        </trans-unit>
        <trans-unit id="2362c5ce40d3654325d28e53d57e5aefd39767b0" translate="yes" xml:space="preserve">
          <source>MaxNorm weight constraint.</source>
          <target state="translated">MaxNorm 무게 제한.</target>
        </trans-unit>
        <trans-unit id="1d0f677626cdedceb619042278c546e27c594dea" translate="yes" xml:space="preserve">
          <source>Maximum value in a tensor.</source>
          <target state="translated">텐서의 최대 값.</target>
        </trans-unit>
        <trans-unit id="ce9282f86fbee550d8325bf6b50200fd6b55a31b" translate="yes" xml:space="preserve">
          <source>May be partially defined or unknown.</source>
          <target state="translated">부분적으로 정의되거나 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f55b18c9dbbb60eb667df99bbaf2aa14c28a9b92" translate="yes" xml:space="preserve">
          <source>May not be called from within a function body.</source>
          <target state="translated">함수 본문 내에서 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4dd77c96b151bbdaefab16c8e4f3802524142b21" translate="yes" xml:space="preserve">
          <source>Mean Intersection-Over-Union is a common evaluation metric for semantic image segmentation, which first computes the IOU for each semantic class and then computes the average over classes. IOU is defined as follows: IOU = true_positive / (true_positive + false_positive + false_negative). The predictions are accumulated in a confusion matrix, weighted by &lt;code&gt;sample_weight&lt;/code&gt; and the metric is then calculated from it.</source>
          <target state="translated">Mean Intersection-Over-Union은 시맨틱 이미지 세그먼테이션에 대한 공통 평가 메트릭으로, 먼저 각 시맨틱 클래스의 IOU를 계산 한 다음 클래스 별 평균을 계산합니다. IOU는 다음과 같이 정의됩니다. IOU = true_positive / (true_positive + false_positive + false_negative). 예측은 혼동 행렬에 누적되고 &lt;code&gt;sample_weight&lt;/code&gt; 에 의해 가중치가 부여되고 그로부터 메트릭이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="63114f24e6da26d1510ee0fe8f46b87163f6a1c4" translate="yes" xml:space="preserve">
          <source>Mean Intersection-Over-Union is a common evaluation metric for semantic image segmentation, which first computes the IOU for each semantic class and then computes the average over classes. IOU is defined as follows: IOU = true_positive / (true_positive + false_positive + false_negative). The predictions are accumulated in a confusion matrix, weighted by &lt;code&gt;weights&lt;/code&gt;, and mIOU is then calculated from it.</source>
          <target state="translated">Mean Intersection-Over-Union은 시맨틱 이미지 세그먼테이션에 대한 공통 평가 메트릭으로, 먼저 각 시맨틱 클래스의 IOU를 계산 한 다음 클래스 별 평균을 계산합니다. IOU는 다음과 같이 정의됩니다. IOU = true_positive / (true_positive + false_positive + false_negative). 예측은 혼동 행렬에 누적되고 &lt;code&gt;weights&lt;/code&gt; 별로 가중치가 부여 된 후 mIOU가 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="0b30ec7c5b4daa9c20f5823c32386eead56ffbdc" translate="yes" xml:space="preserve">
          <source>Mean of a tensor, alongside the specified axis.</source>
          <target state="translated">지정된 축과 함께 텐서의 평균입니다.</target>
        </trans-unit>
        <trans-unit id="ca10536d396c26e7094198e1c62e355544645db9" translate="yes" xml:space="preserve">
          <source>Mean.</source>
          <target state="translated">Mean.</target>
        </trans-unit>
        <trans-unit id="ccb492445d27dc34060cfaa46074e0280e4e9d67" translate="yes" xml:space="preserve">
          <source>Measures the probability error in discrete classification tasks in which each class is independent and not mutually exclusive. For instance, one could perform multilabel classification where a picture can contain both an elephant and a dog at the same time.</source>
          <target state="translated">각 클래스가 독립적이며 상호 배타적이지 않은 불연속 분류 작업에서 확률 오류를 측정합니다. 예를 들어, 그림이 코끼리와 개를 동시에 포함 할 수있는 다중 레이블 분류를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7a0924eae3dfad8350c4d920871b3e40ee1786c" translate="yes" xml:space="preserve">
          <source>Measures the probability error in discrete classification tasks in which the classes are mutually exclusive (each entry is in exactly one class). For example, each CIFAR-10 image is labeled with one and only one label: an image can be a dog or a truck, but not both.</source>
          <target state="translated">클래스가 상호 배타적 인 개별 분류 작업 (각 항목은 정확히 하나의 클래스에 있음)에서 확률 오류를 측정합니다. 예를 들어, 각 CIFAR-10 이미지에는 하나의 레이블 만 표시됩니다. 이미지는 개 또는 트럭 일 수 있지만 둘 다일 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="caf1ff6fa08fa54fa1314255147253b005759201" translate="yes" xml:space="preserve">
          <source>Merge args across replicas and run &lt;code&gt;merge_fn&lt;/code&gt; in a cross-replica context.</source>
          <target state="translated">복제본간에 인수를 병합 하고 교차 복제 컨텍스트에서 &lt;code&gt;merge_fn&lt;/code&gt; 을 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="61b72c3580ae4baf7f72d03e6035fce214b90fc1" translate="yes" xml:space="preserve">
          <source>Merge repeated labels into single labels.</source>
          <target state="translated">반복 된 레이블을 단일 레이블로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="d36a281c047e596e7bb4f287bfb75f1573296c03" translate="yes" xml:space="preserve">
          <source>Merge the properties of &quot;dev&quot; into this &lt;code&gt;DeviceSpec&lt;/code&gt;.</source>
          <target state="translated">&quot;dev&quot;속성을이 &lt;code&gt;DeviceSpec&lt;/code&gt; 에 병합하십시오 .</target>
        </trans-unit>
        <trans-unit id="378acf7f2c991d5f91bc966ed26a207618e0ed44" translate="yes" xml:space="preserve">
          <source>Merged return value of &lt;code&gt;fn&lt;/code&gt; across all replicas.</source>
          <target state="translated">모든 복제본 에서 &lt;code&gt;fn&lt;/code&gt; 의 반환 값을 병합했습니다 .</target>
        </trans-unit>
        <trans-unit id="0e2c5d8403b6a9a938423f5932bb9381e70da0bb" translate="yes" xml:space="preserve">
          <source>Merged return value of &lt;code&gt;fn&lt;/code&gt; across replicas. The structure of the return value is the same as the return value from &lt;code&gt;fn&lt;/code&gt;. Each element in the structure can either be &quot;per-replica&quot; &lt;code&gt;Tensor&lt;/code&gt; objects or &lt;code&gt;Tensor&lt;/code&gt;s (for example, if running on a single replica).</source>
          <target state="translated">복제본 에서 &lt;code&gt;fn&lt;/code&gt; 의 병합 된 반환 값 반환 값의 구조는 &lt;code&gt;fn&lt;/code&gt; 의 반환 값과 동일합니다 . 구조의 각 요소는 &quot;복제 &lt;code&gt;Tensor&lt;/code&gt; &quot; Tensor 객체이거나 &lt;code&gt;Tensor&lt;/code&gt; 일 수 있습니다 (예 : 단일 복제본에서 실행중인 경우).</target>
        </trans-unit>
        <trans-unit id="94a5434757655a94818d6dc0ea4b6bac2bf459ed" translate="yes" xml:space="preserve">
          <source>Merged return value of &lt;code&gt;fn&lt;/code&gt; across replicas. The structure of the return value is the same as the return value from &lt;code&gt;fn&lt;/code&gt;. Each element in the structure can either be &lt;code&gt;PerReplica&lt;/code&gt; (if the values are unsynchronized), &lt;code&gt;Mirrored&lt;/code&gt; (if the values are kept in sync), or &lt;code&gt;Tensor&lt;/code&gt; (if running on a single replica).</source>
          <target state="translated">복제본 에서 &lt;code&gt;fn&lt;/code&gt; 의 병합 된 반환 값 반환 값의 구조는 &lt;code&gt;fn&lt;/code&gt; 의 반환 값과 동일합니다 . 구조의 각 요소는 &lt;code&gt;PerReplica&lt;/code&gt; (값이 동기화되지 않은 경우), &lt;code&gt;Mirrored&lt;/code&gt; ( 값이 동기화 된 경우) 또는 &lt;code&gt;Tensor&lt;/code&gt; (단일 복제본에서 실행중인 경우) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32473578738fe2168fc77dd3181b4ee37be3690e" translate="yes" xml:space="preserve">
          <source>Merges all summaries collected in the default graph.</source>
          <target state="translated">기본 그래프에서 수집 된 모든 요약을 병합합니다.</target>
        </trans-unit>
        <trans-unit id="1d3ddfee9b7bd86311b9977e73a9fe7a5f67b8ce" translate="yes" xml:space="preserve">
          <source>Merges itself with the given &lt;a href=&quot;options&quot;&gt;&lt;code&gt;tf.data.Options&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;a href=&quot;options&quot;&gt; &lt;code&gt;tf.data.Options&lt;/code&gt; &lt;/a&gt; 와 자신을 병합합니다 .</target>
        </trans-unit>
        <trans-unit id="c9d12b738a412d7208ae4660cde7462586fee9fe" translate="yes" xml:space="preserve">
          <source>Merges outer_axis...inner_axis into a single dimension.</source>
          <target state="translated">outer_axis ... inner_axis를 단일 차원으로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="648a0bce63aa00d0be3d75d8b22e89223f56ac4e" translate="yes" xml:space="preserve">
          <source>Merges summaries.</source>
          <target state="translated">요약을 병합합니다.</target>
        </trans-unit>
        <trans-unit id="474926e3b71cf4b380ae0efe15f27e8ddda2257c" translate="yes" xml:space="preserve">
          <source>Metadata for describing the &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects accepted or returned by some TensorFlow APIs.</source>
          <target state="translated">일부 TensorFlow API에서 승인하거나 리턴 한 &lt;a href=&quot;tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 오브젝트 를 설명하기위한 메타 데이터 .</target>
        </trans-unit>
        <trans-unit id="812cc1d3e543512dd9d3aa42c724c9e001d57eda" translate="yes" xml:space="preserve">
          <source>Method called at the end of every epoch.</source>
          <target state="translated">모든 시대의 끝에서 호출되는 메소드.</target>
        </trans-unit>
        <trans-unit id="8831dd3104f86b3d23b265dcdb4615b1e5e74a32" translate="yes" xml:space="preserve">
          <source>Method representing the thread's activity.</source>
          <target state="translated">스레드의 활동을 나타내는 메소드.</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="7a35af0a708aeedc4b6f87326a0821801e15436b" translate="yes" xml:space="preserve">
          <source>Methods are converted into unbound function that have an additional first argument called &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">메소드는 &lt;code&gt;self&lt;/code&gt; 라는 추가 첫 번째 인수가있는 언 바운드 함수로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b5fda2db238dfb1a21c1cf37c9f44d2bda967a33" translate="yes" xml:space="preserve">
          <source>Metrics summary plots</source>
          <target state="translated">지표 요약 도표</target>
        </trans-unit>
        <trans-unit id="594572be8de7e7b98c2678bc6b3ef1746e9a556b" translate="yes" xml:space="preserve">
          <source>Michael Figurnov, Shakir Mohamed, Andriy Mnih. Implicit Reparameterization Gradients, 2018</source>
          <target state="translated">Michael Figurnov, Shakir Mohamed, Andriy Mnih. 암시 적 재 파라미터 화 그라디언트, 2018</target>
        </trans-unit>
        <trans-unit id="3680c3bb6357e331a89122f6662297de1c00296a" translate="yes" xml:space="preserve">
          <source>Migrate your TensorFlow 1 code to TensorFlow 2</source>
          <target state="translated">TensorFlow 1 코드를 TensorFlow 2로 마이그레이션</target>
        </trans-unit>
        <trans-unit id="1680d6b559483cb95c52031c241d7f7bde5664fc" translate="yes" xml:space="preserve">
          <source>MinMaxNorm weight constraint.</source>
          <target state="translated">MinMaxNorm 무게 제한.</target>
        </trans-unit>
        <trans-unit id="d8fe9ad1b82323d47630504d559aa757bf2f24f1" translate="yes" xml:space="preserve">
          <source>Minimize &lt;code&gt;loss&lt;/code&gt; by updating &lt;code&gt;var_list&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;var_list&lt;/code&gt; 를 업데이트하여 &lt;code&gt;loss&lt;/code&gt; 을 최소화 하십시오 .</target>
        </trans-unit>
        <trans-unit id="51b6de68d58fdbe29c523b9f6bdab2b669d807a3" translate="yes" xml:space="preserve">
          <source>Minimum value in a tensor.</source>
          <target state="translated">텐서의 최소값.</target>
        </trans-unit>
        <trans-unit id="cc850bd311dfb6b17b02dbf8b60fe8a763a90434" translate="yes" xml:space="preserve">
          <source>Mirror a tensor on one device to all worker devices.</source>
          <target state="translated">하나의 장치에서 모든 작업자 장치에 텐서를 미러링합니다.</target>
        </trans-unit>
        <trans-unit id="c0e2eba725a25fc187c6848eb9505ccf5e7ed592" translate="yes" xml:space="preserve">
          <source>Mirrors vars to distribute across multiple devices and machines.</source>
          <target state="translated">vars를 미러링하여 여러 장치 및 컴퓨터에 배포합니다.</target>
        </trans-unit>
        <trans-unit id="7a61865be166921178232cba4e8229b20185e670" translate="yes" xml:space="preserve">
          <source>Mixed Sequence and Set types are supported. Mixed Mapping types are supported, but the order of the keys will not be considered in the comparison.</source>
          <target state="translated">혼합 시퀀스 및 세트 유형이 지원됩니다. 혼합 매핑 유형이 지원되지만 키 순서는 비교에서 고려되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="604260bf18827c35f1cba20f0d7ed1c312847224" translate="yes" xml:space="preserve">
          <source>Mixed precision</source>
          <target state="translated">혼합 정밀도</target>
        </trans-unit>
        <trans-unit id="0e784157d0f8d2c979da231429bad67d58fcd4e1" translate="yes" xml:space="preserve">
          <source>Mixed precision is the use of both float32 and float16 data types when training a model to improve performance. This is achieved via a graph rewrite operation and a loss-scale optimizer.</source>
          <target state="translated">혼합 정밀도는 성능을 향상시키기 위해 모델을 학습 할 때 float32 및 float16 데이터 형식을 모두 사용하는 것입니다. 이는 그래프 다시 쓰기 작업과 손실 규모 최적화 프로그램을 통해 달성됩니다.</target>
        </trans-unit>
        <trans-unit id="9c8e513795e3e0e39ddaf59d9fcdc1a330cd1604" translate="yes" xml:space="preserve">
          <source>MobileNet v1 models for Keras.</source>
          <target state="translated">Keras 용 MobileNet v1 모델.</target>
        </trans-unit>
        <trans-unit id="ef138f71e13b8c19a187d356f9450b5e0cf615af" translate="yes" xml:space="preserve">
          <source>MobileNet v2 models for Keras.</source>
          <target state="translated">Keras 용 MobileNet v2 모델.</target>
        </trans-unit>
        <trans-unit id="5fb78e591661974cc9f2ac6ee20458aa32a961e6" translate="yes" xml:space="preserve">
          <source>Mode.</source>
          <target state="translated">Mode.</target>
        </trans-unit>
        <trans-unit id="34c1a9a3dbc4863b4d78db7c2ec144c35ca0f734" translate="yes" xml:space="preserve">
          <source>Model cloning is similar to calling a model on new inputs, except that it creates new layers (and thus new weights) instead of sharing the weights of the existing layers.</source>
          <target state="translated">모델 복제는 기존 레이어의 가중치를 공유하는 대신 새 레이어 (따라서 새 가중치)를 생성한다는 점을 제외하고 새 입력에서 모델을 호출하는 것과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="08f3714ebf65a81a0e0447914ff6bdcaf429e6a3" translate="yes" xml:space="preserve">
          <source>Modeling all of TP (true positive), FP (false positive) and their sum P = TP + FP (predicted positive) as varying linearly within each interval [A, B] between successive thresholds, we get</source>
          <target state="translated">TP (참 양성), FP (거짓 양성) 및 그 합 P = TP + FP (예측 된 양성)를 연속 임계 값 사이의 각 간격 [A, B] 내에서 선형으로 변하는 것으로 모델링하면</target>
        </trans-unit>
        <trans-unit id="4ee2664e3939aea72ac347fb512117375c54b23d" translate="yes" xml:space="preserve">
          <source>Models built with the Sequential and Functional API can be saved to both the HDF5 and SavedModel formats. Subclassed models can only be saved with the SavedModel format.</source>
          <target state="translated">Sequential and Functional API로 빌드 된 모델은 HDF5 및 SavedModel 형식으로 저장할 수 있습니다. 서브 클래스 모델은 SavedModel 형식으로 만 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4723b3c29e1daf2a9d3fd46f8e75c52168c041f1" translate="yes" xml:space="preserve">
          <source>Models often benefit from reducing the learning rate by a factor of 2-10 once learning stagnates. This callback monitors a quantity and if no improvement is seen for a 'patience' number of epochs, the learning rate is reduced.</source>
          <target state="translated">모델은 학습이 정체되면 학습 속도를 2 ~ 10 배 줄인 경우가 많습니다. 이 콜백은 수량을 모니터링하며 '환자'수의 에포크 수가 개선되지 않으면 학습률이 감소합니다.</target>
        </trans-unit>
        <trans-unit id="587812fbb46dcd8aebef20fb95a0c9302754779f" translate="yes" xml:space="preserve">
          <source>Modified Bessel function of order 0.</source>
          <target state="translated">차수 0의 수정 된 베셀 기능.</target>
        </trans-unit>
        <trans-unit id="490fa8ed1e11431a46392699aaad63484b73468c" translate="yes" xml:space="preserve">
          <source>Modified Bessel function of order 1.</source>
          <target state="translated">차수 1의 수정 된 베셀 기능</target>
        </trans-unit>
        <trans-unit id="71bc78b89b775f5b90c6476624d89e1056e418e4" translate="yes" xml:space="preserve">
          <source>Modifying default parameters allows you to use non-zero thresholds, change the max value of the activation, and to use a non-zero multiple of the input for values below the threshold.</source>
          <target state="translated">기본 매개 변수를 수정하면 0이 아닌 임계 값을 사용하고 활성화의 최대 값을 변경하며 임계 값 미만의 값에 대해 0이 아닌 배수의 입력을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d424039b33d31e488bb01e60bbb9cee87599939" translate="yes" xml:space="preserve">
          <source>Module for constructing RNN Cells.</source>
          <target state="translated">RNN 셀 구성을위한 모듈.</target>
        </trans-unit>
        <trans-unit id="7623836b18583e5bb59534549f9799d8c325703c" translate="yes" xml:space="preserve">
          <source>Module: tf</source>
          <target state="translated">모듈 : tf</target>
        </trans-unit>
        <trans-unit id="29d8ca3d0fc12d992a720434e2357fa15977083d" translate="yes" xml:space="preserve">
          <source>Module: tf.audio</source>
          <target state="translated">모듈 : tf.audio</target>
        </trans-unit>
        <trans-unit id="50ebad96ee786c895c9ec65878c6e2323a3df17b" translate="yes" xml:space="preserve">
          <source>Module: tf.autodiff</source>
          <target state="translated">모듈 : tf.autodiff</target>
        </trans-unit>
        <trans-unit id="89c22d29c781345d4be49ea69e3012acab4bed2c" translate="yes" xml:space="preserve">
          <source>Module: tf.autograph</source>
          <target state="translated">모듈 : tf.autograph</target>
        </trans-unit>
        <trans-unit id="d774b10ff06688c376136f82020a42c2fe60a43f" translate="yes" xml:space="preserve">
          <source>Module: tf.autograph.experimental</source>
          <target state="translated">모듈 : tf.autograph.experimental</target>
        </trans-unit>
        <trans-unit id="e20b1424792dd07b5f09c6e094f57a8270cb44be" translate="yes" xml:space="preserve">
          <source>Module: tf.bitwise</source>
          <target state="translated">모듈 : tf.bitwise</target>
        </trans-unit>
        <trans-unit id="290012439642efc323ae0713b0277a659c723920" translate="yes" xml:space="preserve">
          <source>Module: tf.compat</source>
          <target state="translated">모듈 : tf.compat</target>
        </trans-unit>
        <trans-unit id="1b5fb595e1a319d7cd6452d6468a5f1bf05d9c62" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1</source>
          <target state="translated">모듈 : tf.compat.v1</target>
        </trans-unit>
        <trans-unit id="fda83da0cef24ac889bf7b5e71e01168c94f9c7c" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.app</source>
          <target state="translated">모듈 : tf.compat.v1.app</target>
        </trans-unit>
        <trans-unit id="c9e6384317ccfb4c54a9023eba786a308253dd2a" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.audio</source>
          <target state="translated">모듈 : tf.compat.v1.audio</target>
        </trans-unit>
        <trans-unit id="c7ddaf0eaf03bed4fbd66ebb5fbcf403e8909076" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.autograph</source>
          <target state="translated">모듈 : tf.compat.v1.autograph</target>
        </trans-unit>
        <trans-unit id="ebfca188c60115d235fcbd6b34e6069e5df3b4e3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.autograph.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.autograph.experimental</target>
        </trans-unit>
        <trans-unit id="9c2b06828cf302e7c498b400b927339538f03d45" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.bitwise</source>
          <target state="translated">모듈 : tf.compat.v1.bitwise</target>
        </trans-unit>
        <trans-unit id="b01e53a9d6cfafe677e9fdbd8982006955a66f41" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.compat</source>
          <target state="translated">모듈 : tf.compat.v1.compat</target>
        </trans-unit>
        <trans-unit id="ecfe098e9752eeb788a9351c5f86843d4c3e1a0a" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.config</source>
          <target state="translated">모듈 : tf.compat.v1.config</target>
        </trans-unit>
        <trans-unit id="07a72f87faa1945b569239320b0a30f5b5a6ab55" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.config.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.config.experimental</target>
        </trans-unit>
        <trans-unit id="429755eb22505e181756992bacb41f8608dc2ae9" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.config.optimizer</source>
          <target state="translated">모듈 : tf.compat.v1.config.optimizer</target>
        </trans-unit>
        <trans-unit id="1f5b4225c2e537eedf20e7c4f799988d5e5c73c4" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.config.threading</source>
          <target state="translated">모듈 : tf.compat.v1.config.threading</target>
        </trans-unit>
        <trans-unit id="dc43c5bc7a1092b66a002afa827b30268896424d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.data</source>
          <target state="translated">모듈 : tf.compat.v1.data</target>
        </trans-unit>
        <trans-unit id="b1d907429a17f331cc0c3199c940076486692df5" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.data.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.data.experimental</target>
        </trans-unit>
        <trans-unit id="3b8a0ff274a7629e0e5356165475104e0734fbea" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.debugging</source>
          <target state="translated">모듈 : tf.compat.v1.debugging</target>
        </trans-unit>
        <trans-unit id="1fa2866b41fd1d4f25a850e298be5a16d4ac0393" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.debugging.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.debugging.experimental</target>
        </trans-unit>
        <trans-unit id="e2442c1b51ddcdf4ad09941ad7fc91f9ce922e51" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.distribute</source>
          <target state="translated">모듈 : tf.compat.v1.distribute</target>
        </trans-unit>
        <trans-unit id="268cd50a5ab1a6b784e0a90e32114627a18622bb" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.distribute.cluster_resolver</source>
          <target state="translated">모듈 : tf.compat.v1.distribute.cluster_resolver</target>
        </trans-unit>
        <trans-unit id="82a3fd344b58ad721340fdf79917457a4ce9c6e7" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.distribute.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.distribute.experimental</target>
        </trans-unit>
        <trans-unit id="ec0c7d8b21f967d5abc537d815e86c2ae7badb06" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.distributions</source>
          <target state="translated">모듈 : tf.compat.v1.distributions</target>
        </trans-unit>
        <trans-unit id="535e3507a15ea8d546d2c3c76332abee4c2492e2" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.dtypes</source>
          <target state="translated">모듈 : tf.compat.v1.dtypes</target>
        </trans-unit>
        <trans-unit id="c6316330feb4fac5da8809ea7bc672e492b938ad" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.errors</source>
          <target state="translated">모듈 : tf.compat.v1.errors</target>
        </trans-unit>
        <trans-unit id="46ae1d7f55c88f4676858d89ed296afa357e2a66" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.estimator</source>
          <target state="translated">모듈 : tf.compat.v1.estimator</target>
        </trans-unit>
        <trans-unit id="c6b006b56eb2d1e8bd947823eb9e5fb9d34803af" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.estimator.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.estimator.experimental</target>
        </trans-unit>
        <trans-unit id="f8b0724f8c90961209d4cdd47c3a9af7910fcab3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.estimator.export</source>
          <target state="translated">모듈 : tf.compat.v1.estimator.export</target>
        </trans-unit>
        <trans-unit id="d880ea72303661471110333b1cd8bc77b6717dd1" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.estimator.inputs</source>
          <target state="translated">모듈 : tf.compat.v1.estimator.inputs</target>
        </trans-unit>
        <trans-unit id="44bdc4e8e36a9b8d6ee50ed05d923f06caeebd19" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.estimator.tpu</source>
          <target state="translated">모듈 : tf.compat.v1.estimator.tpu</target>
        </trans-unit>
        <trans-unit id="748717ab0c1d9b9544da331732e0d9a7e680180b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.estimator.tpu.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.estimator.tpu.experimental</target>
        </trans-unit>
        <trans-unit id="808d1253c95131949fafe7946babfd4c5ae6bc29" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.experimental</target>
        </trans-unit>
        <trans-unit id="ba8744b19dc022dd79f56a89331948b7dcfcd190" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.feature_column</source>
          <target state="translated">모듈 : tf.compat.v1.feature_column</target>
        </trans-unit>
        <trans-unit id="16ebd59553e8d30e300092243f2a0391c39a0742" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.flags</source>
          <target state="translated">모듈 : tf.compat.v1.flags</target>
        </trans-unit>
        <trans-unit id="15b5b815e4f7979e1bd63ef8136de0136e57e34d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.flags.tf_decorator</source>
          <target state="translated">모듈 : tf.compat.v1.flags.tf_decorator</target>
        </trans-unit>
        <trans-unit id="fb96e8d4b0f538f5963c399d9a2fe747f53352cb" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.flags.tf_decorator.tf_stack</source>
          <target state="translated">모듈 : tf.compat.v1.flags.tf_decorator.tf_stack</target>
        </trans-unit>
        <trans-unit id="4c953b954ea5fb466efd0ca6262cf2b93914c83b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.gfile</source>
          <target state="translated">모듈 : tf.compat.v1.gfile</target>
        </trans-unit>
        <trans-unit id="843bee1a65b2896a7e92724fe2f71444f6ba2027" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.graph_util</source>
          <target state="translated">모듈 : tf.compat.v1.graph_util</target>
        </trans-unit>
        <trans-unit id="e5cda4edb3bb1e721157879c01d8c0528452c993" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.image</source>
          <target state="translated">모듈 : tf.compat.v1.image</target>
        </trans-unit>
        <trans-unit id="7e55337114451a8b2372d707f897bdfb9fb9da6f" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.initializers</source>
          <target state="translated">모듈 : tf.compat.v1.initializers</target>
        </trans-unit>
        <trans-unit id="66a89d3a5ca7f3514d16e4e10b990b747e4358dd" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.io</source>
          <target state="translated">모듈 : tf.compat.v1.io</target>
        </trans-unit>
        <trans-unit id="97493356b87451f04c340634da3aad3905bd130c" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.io.gfile</source>
          <target state="translated">모듈 : tf.compat.v1.io.gfile</target>
        </trans-unit>
        <trans-unit id="71cb0ec457c543341a9a8abd2d817d1f3c804725" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras</source>
          <target state="translated">모듈 : tf.compat.v1.keras</target>
        </trans-unit>
        <trans-unit id="8870cba3d5f40dc4811dacaa9e86fd9e6f75db1d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.activations</source>
          <target state="translated">모듈 : tf.compat.v1.keras.activations</target>
        </trans-unit>
        <trans-unit id="fb0d7d72a9e8bb519ed8f188800bdafcb4aac521" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications</target>
        </trans-unit>
        <trans-unit id="d417816bd0a8849b3d336d3badbcd0bfcba181ab" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.densenet</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.densenet</target>
        </trans-unit>
        <trans-unit id="f3526699fb2a7ca93144f067de8ca3c66202e5e8" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.imagenet_utils</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.imagenet_utils</target>
        </trans-unit>
        <trans-unit id="ec4fd2f96d4bbe3348d49103ce256fa7daec6e9b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.inception_resnet_v2</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.inception_resnet_v2</target>
        </trans-unit>
        <trans-unit id="4ef073a4ff54fc40671704d04277774844d1dfac" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.inception_v3</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.inception_v3</target>
        </trans-unit>
        <trans-unit id="a1c9355e9f2cac273e42dd3f04057e3b6ce4e686" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.mobilenet</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.mobilenet</target>
        </trans-unit>
        <trans-unit id="af64bafd8a2486a4a73a43425ca2cd2533b40057" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.mobilenet_v2</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.mobilenet_v2</target>
        </trans-unit>
        <trans-unit id="55cebc7430fc6908632b5b6b3142e649876ca5d1" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.nasnet</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.nasnet</target>
        </trans-unit>
        <trans-unit id="1eecef761787dc937e09a574dddec8d2e8e2dd42" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.resnet</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.resnet</target>
        </trans-unit>
        <trans-unit id="8f7697d0e403371ef8110cbfab08e3061838a437" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.resnet50</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.resnet50</target>
        </trans-unit>
        <trans-unit id="85dac83b59b2c8473e8297be5116029828a62210" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.resnet_v2</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.resnet_v2</target>
        </trans-unit>
        <trans-unit id="f2c0b2b64342c66f0a91892f8718a5062fd2f231" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.vgg16</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.vgg16</target>
        </trans-unit>
        <trans-unit id="fcc68d13843578e4c1db15c8c34ee41c0242e36b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.vgg19</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.vgg19</target>
        </trans-unit>
        <trans-unit id="d8a4460595eab9523fa714f3649f542732923917" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.applications.xception</source>
          <target state="translated">모듈 : tf.compat.v1.keras.applications.xception</target>
        </trans-unit>
        <trans-unit id="4be5358ee369cc84dcad35328687c881cdad4591" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.backend</source>
          <target state="translated">모듈 : tf.compat.v1.keras.backend</target>
        </trans-unit>
        <trans-unit id="0582a46c4a37241694f4ab5872f57db24e794221" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.callbacks</source>
          <target state="translated">모듈 : tf.compat.v1.keras.callbacks</target>
        </trans-unit>
        <trans-unit id="47b6e58d2f175d365045cae8d9fe84ab87d87f93" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.constraints</source>
          <target state="translated">모듈 : tf.compat.v1.keras.constraints</target>
        </trans-unit>
        <trans-unit id="08fd3d5641c212114ae7e4d04cac4805d9fd0fa8" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.datasets</source>
          <target state="translated">모듈 : tf.compat.v1.keras.datasets</target>
        </trans-unit>
        <trans-unit id="0958ebc624b04c281c44c81aeadef8c8a312186c" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.datasets.boston_housing</source>
          <target state="translated">모듈 : tf.compat.v1.keras.datasets.boston_housing</target>
        </trans-unit>
        <trans-unit id="5b8c648e49c1704411a9a43f6686c141c437e2e2" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.datasets.cifar10</source>
          <target state="translated">모듈 : tf.compat.v1.keras.datasets.cifar10</target>
        </trans-unit>
        <trans-unit id="cdc31f7793ffd19a29f2cc782a91e66ec20aec0a" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.datasets.cifar100</source>
          <target state="translated">모듈 : tf.compat.v1.keras.datasets.cifar100</target>
        </trans-unit>
        <trans-unit id="11354ebf317ed5b11f18f5c23c3d52493e76dd5f" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.datasets.fashion_mnist</source>
          <target state="translated">모듈 : tf.compat.v1.keras.datasets.fashion_mnist</target>
        </trans-unit>
        <trans-unit id="5ed9e537062bd2f386a10d238f225bca00a9cd96" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.datasets.imdb</source>
          <target state="translated">모듈 : tf.compat.v1.keras.datasets.imdb</target>
        </trans-unit>
        <trans-unit id="96cdb1f3133abb249c3d3db4982a0cb44e5667b3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.datasets.mnist</source>
          <target state="translated">모듈 : tf.compat.v1.keras.datasets.mnist</target>
        </trans-unit>
        <trans-unit id="5207c610ef7ce5121ca79a2ab87800f56a2aafec" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.datasets.reuters</source>
          <target state="translated">모듈 : tf.compat.v1.keras.datasets.reuters</target>
        </trans-unit>
        <trans-unit id="fa88a997bed7f6fbd54e811cb9ae0916ded0416d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.estimator</source>
          <target state="translated">모듈 : tf.compat.v1.keras.estimator</target>
        </trans-unit>
        <trans-unit id="5463863661656f03fb4df3320d3e63d39674d64f" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.keras.experimental</target>
        </trans-unit>
        <trans-unit id="8690c3b9b5c4e6fa111d8c95458d041f664c0992" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.initializers</source>
          <target state="translated">모듈 : tf.compat.v1.keras.initializers</target>
        </trans-unit>
        <trans-unit id="a7ed8805944750c7266fba110c557e9495f69915" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.layers</source>
          <target state="translated">모듈 : tf.compat.v1.keras.layers</target>
        </trans-unit>
        <trans-unit id="9bbba03eeae99337a33d7643d727f8f5fad56035" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.layers.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.keras.layers.experimental</target>
        </trans-unit>
        <trans-unit id="12dc6de5a3987644d0ade94a937b6a125ce78131" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.layers.experimental.preprocessing</source>
          <target state="translated">모듈 : tf.compat.v1.keras.layers.experimental.preprocessing</target>
        </trans-unit>
        <trans-unit id="b9ad57b69151651bce507d96b95993eeb6377974" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.losses</source>
          <target state="translated">모듈 : tf.compat.v1.keras.losses</target>
        </trans-unit>
        <trans-unit id="e9514ddd73b3c9146acefe06ee4f20554565e4c2" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.metrics</source>
          <target state="translated">모듈 : tf.compat.v1.keras.metrics</target>
        </trans-unit>
        <trans-unit id="3c59e74590672b82b5ceb0b40c6dc2d3f41d3746" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.mixed_precision</source>
          <target state="translated">모듈 : tf.compat.v1.keras.mixed_precision</target>
        </trans-unit>
        <trans-unit id="c0b2b2a75f6928e1129aa60158f24b75902e7979" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.mixed_precision.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.keras.mixed_precision.experimental</target>
        </trans-unit>
        <trans-unit id="5dd502c0eec19bf740167e2b77f6e90001bd467e" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.models</source>
          <target state="translated">모듈 : tf.compat.v1.keras.models</target>
        </trans-unit>
        <trans-unit id="c27b6920ac1e971b3e2f20fbd200e2811caa3c9d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.optimizers</source>
          <target state="translated">모듈 : tf.compat.v1.keras.optimizers</target>
        </trans-unit>
        <trans-unit id="0cc2d6b6412ab8c7b8f004e73c2563689d4a93ee" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.optimizers.schedules</source>
          <target state="translated">모듈 : tf.compat.v1.keras.optimizers.schedules</target>
        </trans-unit>
        <trans-unit id="e817162b11e0cccebbc423f4bf82c95abab21c55" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.preprocessing</source>
          <target state="translated">모듈 : tf.compat.v1.keras.preprocessing</target>
        </trans-unit>
        <trans-unit id="9509090f4732cc64981d0b6a5567791d99fe060c" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.preprocessing.image</source>
          <target state="translated">모듈 : tf.compat.v1.keras.preprocessing.image</target>
        </trans-unit>
        <trans-unit id="d191cbf125a3d1c86c7dc2994069d039ec2d2fd6" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.preprocessing.sequence</source>
          <target state="translated">모듈 : tf.compat.v1.keras.preprocessing.sequence</target>
        </trans-unit>
        <trans-unit id="ef35a21bf638657bb9506897e93b03cf4bf5c78f" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.preprocessing.text</source>
          <target state="translated">모듈 : tf.compat.v1.keras.preprocessing.text</target>
        </trans-unit>
        <trans-unit id="573c7796ebaebc30ef36ae3f837572e7ec6464b2" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.regularizers</source>
          <target state="translated">모듈 : tf.compat.v1.keras.regularizers</target>
        </trans-unit>
        <trans-unit id="7b0cdde6246784d17566e5451ede6b2811d4a7b7" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.utils</source>
          <target state="translated">모듈 : tf.compat.v1.keras.utils</target>
        </trans-unit>
        <trans-unit id="9f2ce2a50a33419afae3092e186894cab3241294" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.wrappers</source>
          <target state="translated">모듈 : tf.compat.v1.keras.wrappers</target>
        </trans-unit>
        <trans-unit id="f17a9266afec5de669dbadc053a8273a0d358e56" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.keras.wrappers.scikit_learn</source>
          <target state="translated">모듈 : tf.compat.v1.keras.wrappers.scikit_learn</target>
        </trans-unit>
        <trans-unit id="0aacc10d245c5f3be3438a4b0c9bd80ff9f34751" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.layers</source>
          <target state="translated">모듈 : tf.compat.v1.layers</target>
        </trans-unit>
        <trans-unit id="ce5d17a9d0ae91ca0be1605f62614b45a32102d2" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.layers.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.layers.experimental</target>
        </trans-unit>
        <trans-unit id="05147dd3557a07bdf62695abe5d823d530805350" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.linalg</source>
          <target state="translated">모듈 : tf.compat.v1.linalg</target>
        </trans-unit>
        <trans-unit id="1b005bcea8c5512d02d12aaf52510a8c6841e9c9" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.lite</source>
          <target state="translated">모듈 : tf.compat.v1.lite</target>
        </trans-unit>
        <trans-unit id="b0cfd0684b60c3552543c54c1b825b26fa599ac4" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.lite.constants</source>
          <target state="translated">모듈 : tf.compat.v1.lite.constants</target>
        </trans-unit>
        <trans-unit id="312c56dd0c108c4707469f24ecf938e4dbb0fc50" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.lite.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.lite.experimental</target>
        </trans-unit>
        <trans-unit id="6b41c2f10bd3e18a6a9ae5d74a4c3bc709fe387f" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.lite.experimental.nn</source>
          <target state="translated">모듈 : tf.compat.v1.lite.experimental.nn</target>
        </trans-unit>
        <trans-unit id="4811e649809f8b86d8f21302588c4686d7cbdaf2" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.logging</source>
          <target state="translated">모듈 : tf.compat.v1.logging</target>
        </trans-unit>
        <trans-unit id="fe98218dbd4a4959376d2efdc8ac6ac279205eb0" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.lookup</source>
          <target state="translated">모듈 : tf.compat.v1.lookup</target>
        </trans-unit>
        <trans-unit id="5429e9baffae39aa2b9aff8b523601350732e0a3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.lookup.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.lookup.experimental</target>
        </trans-unit>
        <trans-unit id="26e6a4b7f6469f293c1b3f2b6d4a1315c7220464" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.losses</source>
          <target state="translated">모듈 : tf.compat.v1.losses</target>
        </trans-unit>
        <trans-unit id="dd7d2f8cb71f10862da81fb1126cf0c9bbec4c52" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.manip</source>
          <target state="translated">모듈 : tf.compat.v1.manip</target>
        </trans-unit>
        <trans-unit id="d478e7a4703b039a5507284fe8483e73a55bcab7" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.math</source>
          <target state="translated">모듈 : tf.compat.v1.math</target>
        </trans-unit>
        <trans-unit id="8f2d2bd9e9a4fed3a477a922c503e05ec47b6109" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.metrics</source>
          <target state="translated">모듈 : tf.compat.v1.metrics</target>
        </trans-unit>
        <trans-unit id="942320586f3348ad49b7b131f2726cf09898f083" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.mixed_precision</source>
          <target state="translated">모듈 : tf.compat.v1.mixed_precision</target>
        </trans-unit>
        <trans-unit id="821015cb23b13e32ada286c9bd87ef4d12fcc8eb" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.mixed_precision.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.mixed_precision.experimental</target>
        </trans-unit>
        <trans-unit id="f09dedcc70e363a9614e8f595f0089003b1d0c1b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.mlir</source>
          <target state="translated">모듈 : tf.compat.v1.mlir</target>
        </trans-unit>
        <trans-unit id="8c0b769f2ef0b002b6fd5da60b3def586f88d16e" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.mlir.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.mlir.experimental</target>
        </trans-unit>
        <trans-unit id="f60a9d9d3a1f03fd835d4817f76bc4e5a19e943d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.nest</source>
          <target state="translated">모듈 : tf.compat.v1.nest</target>
        </trans-unit>
        <trans-unit id="9f9dfb1b5784629ce0137dbf79ee492e6b0c8850" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.nn</source>
          <target state="translated">모듈 : tf.compat.v1.nn</target>
        </trans-unit>
        <trans-unit id="eab91cc03b30ccf63802aa9933999d33051e8fe4" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.nn.rnn_cell</source>
          <target state="translated">모듈 : tf.compat.v1.nn.rnn_cell</target>
        </trans-unit>
        <trans-unit id="9d6f7fbb97fc0e8a33f831d35634d5b132fbcc7c" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.profiler</source>
          <target state="translated">모듈 : tf.compat.v1.profiler</target>
        </trans-unit>
        <trans-unit id="347089085d8f35ebad8af9a5ae979b8e17488f04" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.python_io</source>
          <target state="translated">모듈 : tf.compat.v1.python_io</target>
        </trans-unit>
        <trans-unit id="6184b442d803b2b46be713a9a999c3250315daaa" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.quantization</source>
          <target state="translated">모듈 : tf.compat.v1.quantization</target>
        </trans-unit>
        <trans-unit id="837ea2ab9f5e7581a55c165f2b9855fa7c6cc1f6" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.queue</source>
          <target state="translated">모듈 : tf.compat.v1.queue</target>
        </trans-unit>
        <trans-unit id="fcb803e091fcca3010aaf220c2a9d3e938737482" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.ragged</source>
          <target state="translated">모듈 : tf.compat.v1.ragged</target>
        </trans-unit>
        <trans-unit id="a1f2e551dea82b59ceeca15fbb989b2672185bb8" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.random</source>
          <target state="translated">모듈 : tf.compat.v1.random</target>
        </trans-unit>
        <trans-unit id="a8d0f1b7a7f18e46eb728028218968e108ab7121" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.random.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.random.experimental</target>
        </trans-unit>
        <trans-unit id="c2714e40a5b02a317cbbc94848bd90783c1d17b8" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.raw_ops</source>
          <target state="translated">모듈 : tf.compat.v1.raw_ops</target>
        </trans-unit>
        <trans-unit id="32fe4a77d0b886d7d55da34ef43e83e570b06149" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.resource_loader</source>
          <target state="translated">모듈 : tf.compat.v1.resource_loader</target>
        </trans-unit>
        <trans-unit id="d72406481806486e25da2986ee00e74598eec4f4" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.saved_model</source>
          <target state="translated">모듈 : tf.compat.v1.saved_model</target>
        </trans-unit>
        <trans-unit id="4f6acc08b36c34d2cb9e75c9ce5d55084f5619c3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.saved_model.constants</source>
          <target state="translated">모듈 : tf.compat.v1.saved_model.constants</target>
        </trans-unit>
        <trans-unit id="abf6c391ddb8d290244220ae182070716b93a5b8" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.saved_model.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.saved_model.experimental</target>
        </trans-unit>
        <trans-unit id="3a73b3541ea135f77c6ab5fa04f13f540f8456f0" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.saved_model.loader</source>
          <target state="translated">모듈 : tf.compat.v1.saved_model.loader</target>
        </trans-unit>
        <trans-unit id="eaf1c32d1721983e925dda7838dd477680456692" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.saved_model.main_op</source>
          <target state="translated">모듈 : tf.compat.v1.saved_model.main_op</target>
        </trans-unit>
        <trans-unit id="3e621354a485984c701002e000dfe67b603608ff" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.saved_model.signature_constants</source>
          <target state="translated">모듈 : tf.compat.v1.saved_model.signature_constants</target>
        </trans-unit>
        <trans-unit id="1a9a93fe674645568145f5ef31fe10ee624ec0a7" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.saved_model.signature_def_utils</source>
          <target state="translated">모듈 : tf.compat.v1.saved_model.signature_def_utils</target>
        </trans-unit>
        <trans-unit id="f47fc01bf232a2e3fbc373af7d5faad2c8675305" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.saved_model.tag_constants</source>
          <target state="translated">모듈 : tf.compat.v1.saved_model.tag_constants</target>
        </trans-unit>
        <trans-unit id="3cf4e6503293ffdc874f856651dc07a86abcfdc6" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.saved_model.utils</source>
          <target state="translated">모듈 : tf.compat.v1.saved_model.utils</target>
        </trans-unit>
        <trans-unit id="d3cc9f3632f88aaf62615d00afe97dbb104fef84" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.sets</source>
          <target state="translated">모듈 : tf.compat.v1.sets</target>
        </trans-unit>
        <trans-unit id="17461c69786121a302e8cb37813bfd6ab47dbb22" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.signal</source>
          <target state="translated">모듈 : tf.compat.v1.signal</target>
        </trans-unit>
        <trans-unit id="7b6704437b098d5628a599aa5a8ad252f6cfccb1" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.sparse</source>
          <target state="translated">모듈 : tf.compat.v1.sparse</target>
        </trans-unit>
        <trans-unit id="0c418d1443e3d39073d48a0240c21fd7b905e751" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.spectral</source>
          <target state="translated">모듈 : tf.compat.v1.spectral</target>
        </trans-unit>
        <trans-unit id="ae4c1e353c2d1f2d38ab9621845ef11a86c37352" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.strings</source>
          <target state="translated">모듈 : tf.compat.v1.strings</target>
        </trans-unit>
        <trans-unit id="02657ed925582941f39e0164fa2bca1fcc0fe665" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.sysconfig</source>
          <target state="translated">모듈 : tf.compat.v1.sysconfig</target>
        </trans-unit>
        <trans-unit id="2cdf7160531bfc00e96424f7aa4cd2f9991320b3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.test</source>
          <target state="translated">모듈 : tf.compat.v1.test</target>
        </trans-unit>
        <trans-unit id="30e2443f72a2f3ab5a6577048083f08fb64ae614" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.tpu</source>
          <target state="translated">모듈 : tf.compat.v1.tpu</target>
        </trans-unit>
        <trans-unit id="6aaa02d38ee43cd34b7ae824412fc0c2e87a82e8" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.tpu.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.tpu.experimental</target>
        </trans-unit>
        <trans-unit id="f3251bd2dd80e536c91b107bc53fa7f26c12d16e" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.train</source>
          <target state="translated">모듈 : tf.compat.v1.train</target>
        </trans-unit>
        <trans-unit id="63bc61ac99e1d9587206db17dcaef2e422edc1ad" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.train.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.train.experimental</target>
        </trans-unit>
        <trans-unit id="7d548dc2c5a3d1ef8f17ff91a9b9357bf029c1db" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.train.queue_runner</source>
          <target state="translated">모듈 : tf.compat.v1.train.queue_runner</target>
        </trans-unit>
        <trans-unit id="8e7eec56eb11da5d4aa48f39a82b0d4a6c304f8d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.user_ops</source>
          <target state="translated">모듈 : tf.compat.v1.user_ops</target>
        </trans-unit>
        <trans-unit id="2c1413fcf7109d0e441551e93cddd40767c5b12c" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.version</source>
          <target state="translated">모듈 : tf.compat.v1.version</target>
        </trans-unit>
        <trans-unit id="2c6fd3db037103cefdeedf00532165462ea998bc" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.xla</source>
          <target state="translated">모듈 : tf.compat.v1.xla</target>
        </trans-unit>
        <trans-unit id="1cf121b700d880bcab1b5bacc36b629df472ed77" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v1.xla.experimental</source>
          <target state="translated">모듈 : tf.compat.v1.xla.experimental</target>
        </trans-unit>
        <trans-unit id="785b3c26273d78f6acbbe6771488524214438f29" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2</source>
          <target state="translated">모듈 : tf.compat.v2</target>
        </trans-unit>
        <trans-unit id="557069cca44b3ea294baba4d21fdecedf047da46" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.audio</source>
          <target state="translated">모듈 : tf.compat.v2.audio</target>
        </trans-unit>
        <trans-unit id="8c6b2a855af86f251c11567237eac4a9002f0d53" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.autodiff</source>
          <target state="translated">모듈 : tf.compat.v2.autodiff</target>
        </trans-unit>
        <trans-unit id="d805c31715e2af065c547badb408467a0fd2aa21" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.autograph</source>
          <target state="translated">모듈 : tf.compat.v2.autograph</target>
        </trans-unit>
        <trans-unit id="0ca117a78eddf986bc32683be4f037f65a9ee6fa" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.autograph.experimental</source>
          <target state="translated">모듈 : tf.compat.v2.autograph.experimental</target>
        </trans-unit>
        <trans-unit id="ba320d24cd81a19958486b82a0e45a5139aaa116" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.bitwise</source>
          <target state="translated">모듈 : tf.compat.v2.bitwise</target>
        </trans-unit>
        <trans-unit id="aad6aa2ac97b321c6667ecf515bfa7067f3e4162" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.compat</source>
          <target state="translated">모듈 : tf.compat.v2.compat</target>
        </trans-unit>
        <trans-unit id="13eaa6539f6d8c73de885363876aac1f33efcd6e" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.config</source>
          <target state="translated">모듈 : tf.compat.v2.config</target>
        </trans-unit>
        <trans-unit id="755276f23f2c826ec4398c74456cc913ede7c0b1" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.config.experimental</source>
          <target state="translated">모듈 : tf.compat.v2.config.experimental</target>
        </trans-unit>
        <trans-unit id="c6c6274398e7a61914eda28fd2faa54220554c21" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.config.optimizer</source>
          <target state="translated">모듈 : tf.compat.v2.config.optimizer</target>
        </trans-unit>
        <trans-unit id="65194366ea7059678ecb6133d1a8b22b3dd27419" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.config.threading</source>
          <target state="translated">모듈 : tf.compat.v2.config.threading</target>
        </trans-unit>
        <trans-unit id="c52b263abeba68e8633f17aa5806b744fa8386a3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.data</source>
          <target state="translated">모듈 : tf.compat.v2.data</target>
        </trans-unit>
        <trans-unit id="11a281eed5eaf21a6d951413e9e9987e06264d7b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.data.experimental</source>
          <target state="translated">모듈 : tf.compat.v2.data.experimental</target>
        </trans-unit>
        <trans-unit id="cc6c82b71fe089f2d134c536ed66e0f0a073cc30" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.debugging</source>
          <target state="translated">모듈 : tf.compat.v2.debugging</target>
        </trans-unit>
        <trans-unit id="3354cafa07798441326b18ea5d3dd74ec405045e" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.debugging.experimental</source>
          <target state="translated">모듈 : tf.compat.v2.debugging.experimental</target>
        </trans-unit>
        <trans-unit id="7390f71e5c1cdfd109afbed0ae2a93754302e34e" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.distribute</source>
          <target state="translated">모듈 : tf.compat.v2.distribute</target>
        </trans-unit>
        <trans-unit id="dc3f61498a8bb3df7605bb1830c27cd269f6c1cf" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.distribute.cluster_resolver</source>
          <target state="translated">모듈 : tf.compat.v2.distribute.cluster_resolver</target>
        </trans-unit>
        <trans-unit id="d64f4dc785d1f2032c2ae56c44dcdd05e5d0624c" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.distribute.experimental</source>
          <target state="translated">모듈 : tf.compat.v2.distribute.experimental</target>
        </trans-unit>
        <trans-unit id="e1711477e73fd1a982a644b7ee76e2d2339fecfe" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.dtypes</source>
          <target state="translated">모듈 : tf.compat.v2.dtypes</target>
        </trans-unit>
        <trans-unit id="7870911bf264c70f5789414b731b7cb3453c0819" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.errors</source>
          <target state="translated">모듈 : tf.compat.v2.errors</target>
        </trans-unit>
        <trans-unit id="6be9d83824bf0ee5c7a71a36767b9ee58ce849ec" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.experimental</source>
          <target state="translated">모듈 : tf.compat.v2.experimental</target>
        </trans-unit>
        <trans-unit id="1d3148dc5cbeb940aceb3661f1f78106bbaa4b9d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.experimental.tensorrt</source>
          <target state="translated">모듈 : tf.compat.v2.experimental.tensorrt</target>
        </trans-unit>
        <trans-unit id="7ce5720c0161295c6f453be6c01b2cc439245229" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.feature_column</source>
          <target state="translated">모듈 : tf.compat.v2.feature_column</target>
        </trans-unit>
        <trans-unit id="79cd3a0f2edb55441d6ab00f60c9bc32ba30960b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.graph_util</source>
          <target state="translated">모듈 : tf.compat.v2.graph_util</target>
        </trans-unit>
        <trans-unit id="87276c5921ef903b7870b57a99e60a44ef76c88b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.image</source>
          <target state="translated">모듈 : tf.compat.v2.image</target>
        </trans-unit>
        <trans-unit id="31dc823d2bfb4b163acf2749b999c962014b301e" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.io</source>
          <target state="translated">모듈 : tf.compat.v2.io</target>
        </trans-unit>
        <trans-unit id="979ec921c101b5eb7494336815d00f3ea7879cc1" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.io.gfile</source>
          <target state="translated">모듈 : tf.compat.v2.io.gfile</target>
        </trans-unit>
        <trans-unit id="5dde0218a544cd4736ec80e60b21a36dbf2abbd2" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras</source>
          <target state="translated">모듈 : tf.compat.v2.keras</target>
        </trans-unit>
        <trans-unit id="dbe7677261da84e74dfb46c3cbbc0d9b10fe7196" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.activations</source>
          <target state="translated">모듈 : tf.compat.v2.keras.activations</target>
        </trans-unit>
        <trans-unit id="df54e97b98976f86e62b918c97131ade362ad7c8" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications</source>
          <target state="translated">모듈 : tf.compat.v2.keras.applications</target>
        </trans-unit>
        <trans-unit id="76458b4f74f80cbf7eb964e9e276c1ebb1b91653" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.densenet</source>
          <target state="translated">모듈 : tf.compat.v2.keras.applications.densenet</target>
        </trans-unit>
        <trans-unit id="d8cb66c50d4d2740036116090d743ad34bf7235d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.imagenet_utils</source>
          <target state="translated">모듈 : tf.compat.v2.keras.applications.imagenet_utils</target>
        </trans-unit>
        <trans-unit id="e15e6a2b4c81476665b45fe462ffb2c8e18d3809" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.inception_resnet_v2</source>
          <target state="translated">모듈 : tf.compat.v2.keras.applications.inception_resnet_v2</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
