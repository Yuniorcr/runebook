<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="0230924dcd4800e1ee0022a44225ff3a894e5d9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;utils/progbar&quot;&gt;&lt;code&gt;class Progbar&lt;/code&gt;&lt;/a&gt;: Displays a progress bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c0ba9c83cba97a59ad91a96a97e52df1e03e6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;utils/register_keras_serializable&quot;&gt;&lt;code&gt;register_keras_serializable(...)&lt;/code&gt;&lt;/a&gt;: Registers an object with the Keras serialization framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031f0ec3304c734e09c4c2481734d239c42e1d04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;class Sequence&lt;/code&gt;&lt;/a&gt;: Base object for fitting to a sequence of data, such as a dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cd8e4fc2629b4668938fd396e2d3a841db655b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;utils/sequenceenqueuer&quot;&gt;&lt;code&gt;class SequenceEnqueuer&lt;/code&gt;&lt;/a&gt;: Base class to enqueue inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ff443532e807c6e040f804fd41a8d6a67117da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;utils/serialize_keras_object&quot;&gt;&lt;code&gt;serialize_keras_object(...)&lt;/code&gt;&lt;/a&gt;: Serialize Keras object into JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fb2433ee75b39abd2a0a4332d4a37b846a5304" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;utils/to_categorical&quot;&gt;&lt;code&gt;to_categorical(...)&lt;/code&gt;&lt;/a&gt;: Converts a class vector (integers) to binary class matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a347f7a033cd6ce292fd17319e1ef6de3fa43f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/add_check_numerics_ops&quot;&gt;&lt;code&gt;add_check_numerics_ops(...)&lt;/code&gt;&lt;/a&gt;: Connect a &lt;a href=&quot;../debugging/check_numerics&quot;&gt;&lt;code&gt;tf.debugging.check_numerics&lt;/code&gt;&lt;/a&gt; to every floating point tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd6c3f48ba22f3bad7990a90acf8accd7ead68e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/add_to_collection&quot;&gt;&lt;code&gt;add_to_collection(...)&lt;/code&gt;&lt;/a&gt;: Wrapper for &lt;a href=&quot;../graph#add_to_collection&quot;&gt;&lt;code&gt;Graph.add_to_collection()&lt;/code&gt;&lt;/a&gt; using the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e6415f1cc7ed9ba2d7b0b5e30030da90ce1212" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/add_to_collections&quot;&gt;&lt;code&gt;add_to_collections(...)&lt;/code&gt;&lt;/a&gt;: Wrapper for &lt;a href=&quot;../graph#add_to_collections&quot;&gt;&lt;code&gt;Graph.add_to_collections()&lt;/code&gt;&lt;/a&gt; using the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fcd63e5c07cd6077558c007ad9caf26789d08d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/all_variables&quot;&gt;&lt;code&gt;all_variables(...)&lt;/code&gt;&lt;/a&gt;: Use &lt;a href=&quot;v1/global_variables&quot;&gt;&lt;code&gt;tf.compat.v1.global_variables&lt;/code&gt;&lt;/a&gt; instead. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894c6167205ade5a50224bd5142c373d48ff8a46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/app&quot;&gt;&lt;code&gt;app&lt;/code&gt;&lt;/a&gt; module: Generic entry point script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5de723686a962a29144bd7b4dd3a96f32e09792" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/arg_max&quot;&gt;&lt;code&gt;arg_max(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the largest value across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447975f6e1db027bf28990d9c8e65df026675097" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/arg_min&quot;&gt;&lt;code&gt;arg_min(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the smallest value across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0469d04c666772feebafbcb38f2d393ba6fae7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/argmax&quot;&gt;&lt;code&gt;argmax(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the largest value across axes of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02606ce4e3e38ed15453a350b6f8d2e37f1a6f8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/argmin&quot;&gt;&lt;code&gt;argmin(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the smallest value across axes of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfb42c177bf8cf1a3729873e7870ea93e99a1d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_equal&quot;&gt;&lt;code&gt;assert_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x == y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85cc8a7fd9cfc84e15975ac481f0ddd232b994c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_greater&quot;&gt;&lt;code&gt;assert_greater(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt; y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5304062c4db3fe11502146eb3d052f0036f0f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_greater_equal&quot;&gt;&lt;code&gt;assert_greater_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt;= y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f69e419ad9d22d38ed5094b41e5c51bb6a4612" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_integer&quot;&gt;&lt;code&gt;assert_integer(...)&lt;/code&gt;&lt;/a&gt;: Assert that &lt;code&gt;x&lt;/code&gt; is of integer dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be54bb40711469a4fcdff1f2a5211f20d5d43f65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_less&quot;&gt;&lt;code&gt;assert_less(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt; y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5949d320e52950004d243c871111d4d33f05668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_less_equal&quot;&gt;&lt;code&gt;assert_less_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt;= y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ccef2f32c10be9661089b121af2fb1631ee393" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_near&quot;&gt;&lt;code&gt;assert_near(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are close element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d9ea955c03ed466c7a63397bee4272e4c339c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_negative&quot;&gt;&lt;code&gt;assert_negative(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt; 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee361e5c71e24db180d89f7b17197ba394273ed0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_non_negative&quot;&gt;&lt;code&gt;assert_non_negative(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8485f9a09d0d6eb6c596417991a3586649b40ada" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_non_positive&quot;&gt;&lt;code&gt;assert_non_positive(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt;= 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcd299701118364f0eb9d444799d9b16b1cd6d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_none_equal&quot;&gt;&lt;code&gt;assert_none_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x != y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1d7e4d4754a1180a80677e3cc1ffa948203e98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_positive&quot;&gt;&lt;code&gt;assert_positive(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt; 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86757e5188fa28c28665bf2703978603a952dc45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_rank&quot;&gt;&lt;code&gt;assert_rank(...)&lt;/code&gt;&lt;/a&gt;: Assert &lt;code&gt;x&lt;/code&gt; has rank equal to &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea2d73b5dfa9656086e1f23f16acba398050606" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_rank_at_least&quot;&gt;&lt;code&gt;assert_rank_at_least(...)&lt;/code&gt;&lt;/a&gt;: Assert &lt;code&gt;x&lt;/code&gt; has rank equal to &lt;code&gt;rank&lt;/code&gt; or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5cb34597dbea6d7884d1da4d0dfdfc71a5398c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_rank_in&quot;&gt;&lt;code&gt;assert_rank_in(...)&lt;/code&gt;&lt;/a&gt;: Assert &lt;code&gt;x&lt;/code&gt; has rank in &lt;code&gt;ranks&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52bc2d0cb4bde320840cfe86728174c94c0b47c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_scalar&quot;&gt;&lt;code&gt;assert_scalar(...)&lt;/code&gt;&lt;/a&gt;: Asserts that the given &lt;code&gt;tensor&lt;/code&gt; is a scalar (i.e. zero-dimensional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c39c7fdbd34957c3dee647c90a28d76d8123f0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_type&quot;&gt;&lt;code&gt;assert_type(...)&lt;/code&gt;&lt;/a&gt;: Statically asserts that the given &lt;code&gt;Tensor&lt;/code&gt; is of the specified type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9e2d2802f1698409178cf448d1a19e10d08ea7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assert_variables_initialized&quot;&gt;&lt;code&gt;assert_variables_initialized(...)&lt;/code&gt;&lt;/a&gt;: Returns an Op to check if variables are initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9d72286fab54b0d3670407cab5fb97d7faf544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assign&quot;&gt;&lt;code&gt;assign(...)&lt;/code&gt;&lt;/a&gt;: Update &lt;code&gt;ref&lt;/code&gt; by assigning &lt;code&gt;value&lt;/code&gt; to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c8ac95cc4f9f1df34a81a2c4d2f6f5597cd47b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assign_add&quot;&gt;&lt;code&gt;assign_add(...)&lt;/code&gt;&lt;/a&gt;: Update &lt;code&gt;ref&lt;/code&gt; by adding &lt;code&gt;value&lt;/code&gt; to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca14afd6ace6ea1aba699f4977d03b06d3bcb0a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/assign_sub&quot;&gt;&lt;code&gt;assign_sub(...)&lt;/code&gt;&lt;/a&gt;: Update &lt;code&gt;ref&lt;/code&gt; by subtracting &lt;code&gt;value&lt;/code&gt; from it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a5c67ca3a154a762dd0190f6370079ea5f668c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/attrvalue&quot;&gt;&lt;code&gt;class AttrValue&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7609596c55486828cd7402606bac9a137507a9e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/audio&quot;&gt;&lt;code&gt;audio&lt;/code&gt;&lt;/a&gt; module: Public API for tf.audio namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83127456ba19e33a97ff6780e6a7f658c9d1d80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/autograph&quot;&gt;&lt;code&gt;autograph&lt;/code&gt;&lt;/a&gt; module: Conversion of plain Python into TensorFlow graph code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be7ce6e6c9e142aca6fb127a99d6b69327ce567" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/batch_gather&quot;&gt;&lt;code&gt;batch_gather(...)&lt;/code&gt;&lt;/a&gt;: Gather slices from params according to indices with leading batch dims. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f026c6f7caad2203adc9e6c759b2e32e2a4d442" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/batch_scatter_update&quot;&gt;&lt;code&gt;batch_scatter_update(...)&lt;/code&gt;&lt;/a&gt;: Generalization of &lt;a href=&quot;v1/scatter_update&quot;&gt;&lt;code&gt;tf.compat.v1.scatter_update&lt;/code&gt;&lt;/a&gt; to axis different than 0. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226c07780b7c6e3a1223c984ea54049754358858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/batch_to_space&quot;&gt;&lt;code&gt;batch_to_space(...)&lt;/code&gt;&lt;/a&gt;: BatchToSpace for 4-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db5ba24292e23a9013182239ae246ae67af3108" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/batch_to_space_nd&quot;&gt;&lt;code&gt;batch_to_space_nd(...)&lt;/code&gt;&lt;/a&gt;: BatchToSpace for N-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de319ead8747ab6f6175fe10242931e80e9bb90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/bincount&quot;&gt;&lt;code&gt;bincount(...)&lt;/code&gt;&lt;/a&gt;: Counts the number of occurrences of each value in an integer array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b15abf3eadc3650055507888344e4701285570" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/bitwise&quot;&gt;&lt;code&gt;bitwise&lt;/code&gt;&lt;/a&gt; module: Operations for manipulating the binary representations of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba9bfe0266cb7ace5080e2e42bf4a1d9a80689e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/boolean_mask&quot;&gt;&lt;code&gt;boolean_mask(...)&lt;/code&gt;&lt;/a&gt;: Apply boolean mask to tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b77364c44e2bec879be2e21d7828c9c97ea6799" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/case&quot;&gt;&lt;code&gt;case(...)&lt;/code&gt;&lt;/a&gt;: Create a case operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6786e195eed5f8a05e82da9afabddef3d8a83bc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/clip_by_average_norm&quot;&gt;&lt;code&gt;clip_by_average_norm(...)&lt;/code&gt;&lt;/a&gt;: Clips tensor values to a maximum average L2-norm. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f6af5f4431165b32d0352680f11851f33ef43a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/colocate_with&quot;&gt;&lt;code&gt;colocate_with(...)&lt;/code&gt;&lt;/a&gt;: DEPRECATED FUNCTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4b66c63f0794bb5717e5989a5a1a8b727ed246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/compat&quot;&gt;&lt;code&gt;compat&lt;/code&gt;&lt;/a&gt; module: Compatibility functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ab26cc81c2a3fd401ea33cc6ffba5ddf32d500" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/cond&quot;&gt;&lt;code&gt;cond(...)&lt;/code&gt;&lt;/a&gt;: Return &lt;code&gt;true_fn()&lt;/code&gt; if the predicate &lt;code&gt;pred&lt;/code&gt; is true else &lt;code&gt;false_fn()&lt;/code&gt;. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c722d18cc6f208779bc0dbe871e0ab353aa742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/conditionalaccumulator&quot;&gt;&lt;code&gt;class ConditionalAccumulator&lt;/code&gt;&lt;/a&gt;: A conditional accumulator for aggregating gradients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa38c47b215b436711867641c9123b79320c94f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/conditionalaccumulatorbase&quot;&gt;&lt;code&gt;class ConditionalAccumulatorBase&lt;/code&gt;&lt;/a&gt;: A conditional accumulator for aggregating gradients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4cd18f9447c784ad7a3855386dfc43893922b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/config&quot;&gt;&lt;code&gt;config&lt;/code&gt;&lt;/a&gt; module: Public API for tf.config namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59800819c704eb08b2acc195dda5c81578a2b5c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/configproto&quot;&gt;&lt;code&gt;class ConfigProto&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6efff19584663191ea41cb48e57a87cafbfc557" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/confusion_matrix&quot;&gt;&lt;code&gt;confusion_matrix(...)&lt;/code&gt;&lt;/a&gt;: Computes the confusion matrix from predictions and labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82009dcd887f7d711501c580345eb672dcbe2bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/constant&quot;&gt;&lt;code&gt;constant(...)&lt;/code&gt;&lt;/a&gt;: Creates a constant tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f97d1a1f9de55a5032ba037f7013bbcc4dc80b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/container&quot;&gt;&lt;code&gt;container(...)&lt;/code&gt;&lt;/a&gt;: Wrapper for &lt;a href=&quot;../graph#container&quot;&gt;&lt;code&gt;Graph.container()&lt;/code&gt;&lt;/a&gt; using the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b34b57c6f6958043a9f918f7b3aaac31788a0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/control_flow_v2_enabled&quot;&gt;&lt;code&gt;control_flow_v2_enabled(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;True&lt;/code&gt; if v2 control flow is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487e8d63c49811c76c70bfa46819e5422e056f9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/convert_to_tensor&quot;&gt;&lt;code&gt;convert_to_tensor(...)&lt;/code&gt;&lt;/a&gt;: Converts the given &lt;code&gt;value&lt;/code&gt; to a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606525bbf038b233a999a18d9fa596f073027a43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/convert_to_tensor_or_indexed_slices&quot;&gt;&lt;code&gt;convert_to_tensor_or_indexed_slices(...)&lt;/code&gt;&lt;/a&gt;: Converts the given object to a &lt;code&gt;Tensor&lt;/code&gt; or an &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1951a31a1b5a0d04da487f9a8191a2b8113e1bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/convert_to_tensor_or_sparse_tensor&quot;&gt;&lt;code&gt;convert_to_tensor_or_sparse_tensor(...)&lt;/code&gt;&lt;/a&gt;: Converts value to a &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f333c5819df1168c722fb1102dce39ba117e8fdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/count_nonzero&quot;&gt;&lt;code&gt;count_nonzero(...)&lt;/code&gt;&lt;/a&gt;: Computes number of nonzero elements across dimensions of a tensor. (deprecated arguments) (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31273d0ba5dcfe7f440b52237fd0dc58871e8420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/count_up_to&quot;&gt;&lt;code&gt;count_up_to(...)&lt;/code&gt;&lt;/a&gt;: Increments 'ref' until it reaches 'limit'. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b06b0089fa6eba29bce344dc9f090c1d14f00a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/create_partitioned_variables&quot;&gt;&lt;code&gt;create_partitioned_variables(...)&lt;/code&gt;&lt;/a&gt;: Create a list of partitioned variables according to the given &lt;code&gt;slicing&lt;/code&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710dd43a2450eeeba1debd8c8fab9683847c99f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; module: &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; API for input pipelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ffb83abad2d1d79ede82fb7ac67634173bae0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/debugging&quot;&gt;&lt;code&gt;debugging&lt;/code&gt;&lt;/a&gt; module: Public API for tf.debugging namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6fd94e54a0077bad8a6fba4b043abb37fd029c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/decode_csv&quot;&gt;&lt;code&gt;decode_csv(...)&lt;/code&gt;&lt;/a&gt;: Convert CSV records to tensors. Each column maps to one tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16f6c5a60c76fe62cd6238dd1236a8dd74748cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/decode_raw&quot;&gt;&lt;code&gt;decode_raw(...)&lt;/code&gt;&lt;/a&gt;: Convert raw byte strings into tensors. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f67d5345a45fc8042172f8cccbd1dbcc7a30f19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/delete_session_tensor&quot;&gt;&lt;code&gt;delete_session_tensor(...)&lt;/code&gt;&lt;/a&gt;: Delete the tensor for the given tensor handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05e244f0bc6954d00c1bf5b8bf830391a585c9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/depth_to_space&quot;&gt;&lt;code&gt;depth_to_space(...)&lt;/code&gt;&lt;/a&gt;: DepthToSpace for tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e322482ae21185bfb937628c05fad659c522efbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/device&quot;&gt;&lt;code&gt;device(...)&lt;/code&gt;&lt;/a&gt;: Wrapper for &lt;a href=&quot;../graph#device&quot;&gt;&lt;code&gt;Graph.device()&lt;/code&gt;&lt;/a&gt; using the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58025d633a023ffd48d3454895dadd5e2606b2e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/devicespec&quot;&gt;&lt;code&gt;class DeviceSpec&lt;/code&gt;&lt;/a&gt;: Represents a (possibly partial) specification for a TensorFlow device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90ff7e0bce10e719fcc686067889064a9c1bf61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/dimension&quot;&gt;&lt;code&gt;class Dimension&lt;/code&gt;&lt;/a&gt;: Represents the value of one dimension in a TensorShape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b039158004e6c2fc11ad19459ae354dc8bf3e6d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/disable_control_flow_v2&quot;&gt;&lt;code&gt;disable_control_flow_v2(...)&lt;/code&gt;&lt;/a&gt;: Opts out of control flow v2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da33ca9c46d7d192a0650749418c0f7337227fc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/disable_eager_execution&quot;&gt;&lt;code&gt;disable_eager_execution(...)&lt;/code&gt;&lt;/a&gt;: Disables eager execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4355f2b6d3669ab9e3a205a67ec263ea1e6de19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/disable_resource_variables&quot;&gt;&lt;code&gt;disable_resource_variables(...)&lt;/code&gt;&lt;/a&gt;: Opts out of resource variables. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977406acaffdcbe22f1721fd2ff2ad5cc48ae8bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/disable_tensor_equality&quot;&gt;&lt;code&gt;disable_tensor_equality(...)&lt;/code&gt;&lt;/a&gt;: Compare Tensors by their id and be hashable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3aa8e35727642a03700a3612aefc2a217dd10a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/disable_v2_behavior&quot;&gt;&lt;code&gt;disable_v2_behavior(...)&lt;/code&gt;&lt;/a&gt;: Disables TensorFlow 2.x behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d4089af65ab7b848a846a9ddb13b5045a409b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/disable_v2_tensorshape&quot;&gt;&lt;code&gt;disable_v2_tensorshape(...)&lt;/code&gt;&lt;/a&gt;: Disables the V2 TensorShape behavior and reverts to V1 behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293148fc93a32b750eb912777872fdc73f9fd85a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/distribute&quot;&gt;&lt;code&gt;distribute&lt;/code&gt;&lt;/a&gt; module: Library for running a computation across multiple devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706e141d20f5ac0caf8d88fafd2bf5497fbdea20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/distributions&quot;&gt;&lt;code&gt;distributions&lt;/code&gt;&lt;/a&gt; module: Core module for TensorFlow distribution objects and helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee609a2865c30ba8cea9e8bf612c8ed75f4b41e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/dtypes&quot;&gt;&lt;code&gt;dtypes&lt;/code&gt;&lt;/a&gt; module: Public API for tf.dtypes namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f1c395640f32d14334967b995dd9e7eeee287b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/enable_control_flow_v2&quot;&gt;&lt;code&gt;enable_control_flow_v2(...)&lt;/code&gt;&lt;/a&gt;: Use control flow v2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fd208bd69212d782f7db6c63cd7b9eed4e7a3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/enable_eager_execution&quot;&gt;&lt;code&gt;enable_eager_execution(...)&lt;/code&gt;&lt;/a&gt;: Enables eager execution for the lifetime of this program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d447998d33868b39637588e667b96a6050ea7bba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/enable_resource_variables&quot;&gt;&lt;code&gt;enable_resource_variables(...)&lt;/code&gt;&lt;/a&gt;: Creates resource variables by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a62f204098d5886a8fa7a8716a8b24411ffe4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/enable_tensor_equality&quot;&gt;&lt;code&gt;enable_tensor_equality(...)&lt;/code&gt;&lt;/a&gt;: Compare Tensors with element-wise comparison and thus be unhashable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7993ce312d1b4c28a4822e508e06f9d128f0da3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/enable_v2_behavior&quot;&gt;&lt;code&gt;enable_v2_behavior(...)&lt;/code&gt;&lt;/a&gt;: Enables TensorFlow 2.x behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262e3c17942a5bdb56625b6d0d9aaab313bca8f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/enable_v2_tensorshape&quot;&gt;&lt;code&gt;enable_v2_tensorshape(...)&lt;/code&gt;&lt;/a&gt;: In TensorFlow 2.0, iterating over a TensorShape instance returns values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6677adf292169fbdedb9fbb89b9a955cd4d0a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; module: Exception types for TensorFlow errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a408418cfafd9c5aa5b6547ce41b65b051360d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/estimator&quot;&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/a&gt; module: Estimator: High level tools for working with models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5111809aff9ffc0e41f33c92207aa94b30ea8477" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/event&quot;&gt;&lt;code&gt;class Event&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad4a5bba06cac9075de709913e6dda6b1225d0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/executing_eagerly&quot;&gt;&lt;code&gt;executing_eagerly(...)&lt;/code&gt;&lt;/a&gt;: Checks whether the current thread has eager execution enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f91b0a9411414b27a1e78dbeb180e154c7669f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/expand_dims&quot;&gt;&lt;code&gt;expand_dims(...)&lt;/code&gt;&lt;/a&gt;: Inserts a dimension of 1 into a tensor's shape. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe64243b5c4b317c4bd0dc7f36ee9ec4c069627" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/experimental&quot;&gt;&lt;code&gt;experimental&lt;/code&gt;&lt;/a&gt; module: Public API for tf.experimental namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3afbb88ab603bf4cab62569312ef4b31adc3e2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/extract_image_patches&quot;&gt;&lt;code&gt;extract_image_patches(...)&lt;/code&gt;&lt;/a&gt;: Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;images&lt;/code&gt; and put them in the &quot;depth&quot; output dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5dff63d8e979f2cef9dcf5f7bae328f7cb48cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/feature_column&quot;&gt;&lt;code&gt;feature_column&lt;/code&gt;&lt;/a&gt; module: Public API for tf.feature_column namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277e57be3bb2cfc745f5b77c5a6e5c74b805db03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/fixed_size_partitioner&quot;&gt;&lt;code&gt;fixed_size_partitioner(...)&lt;/code&gt;&lt;/a&gt;: Partitioner to specify a fixed number of shards along given axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d1dfc42e87bcf525de240e54270cee704c3a17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/fixedlengthrecordreader&quot;&gt;&lt;code&gt;class FixedLengthRecordReader&lt;/code&gt;&lt;/a&gt;: A Reader that outputs fixed-length records from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b042ee3ffbbb48edea5814b3f0d64589ea4a153" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/flags&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; module: Import router for absl.flags. See https://github.com/abseil/abseil-py.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51254d6cc03db9d4c6765177e25e8312161152b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/floor_div&quot;&gt;&lt;code&gt;floor_div(...)&lt;/code&gt;&lt;/a&gt;: Returns x // y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10f40067f8f39b7e5b6636d41f3fa639ef08a0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/gather&quot;&gt;&lt;code&gt;gather(...)&lt;/code&gt;&lt;/a&gt;: Gather slices from params axis &lt;code&gt;axis&lt;/code&gt; according to indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77afc8b12ec9b02baa68ec26bbe8611b5c33fc77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/gather_nd&quot;&gt;&lt;code&gt;gather_nd(...)&lt;/code&gt;&lt;/a&gt;: Gather slices from &lt;code&gt;params&lt;/code&gt; into a Tensor with shape specified by &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc77be02c99ddef0400fafcb94e8e38f5b7fbd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_collection&quot;&gt;&lt;code&gt;get_collection(...)&lt;/code&gt;&lt;/a&gt;: Wrapper for &lt;a href=&quot;../graph#get_collection&quot;&gt;&lt;code&gt;Graph.get_collection()&lt;/code&gt;&lt;/a&gt; using the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96c337d11e7b645304c847a616502f2d7aecc58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_collection_ref&quot;&gt;&lt;code&gt;get_collection_ref(...)&lt;/code&gt;&lt;/a&gt;: Wrapper for &lt;a href=&quot;../graph#get_collection_ref&quot;&gt;&lt;code&gt;Graph.get_collection_ref()&lt;/code&gt;&lt;/a&gt; using the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d91de04d625c333b40e45bf87591708b5e5a19a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_default_graph&quot;&gt;&lt;code&gt;get_default_graph(...)&lt;/code&gt;&lt;/a&gt;: Returns the default graph for the current thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb0e78179b505122e5e332abdae1ad029c7263a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_default_session&quot;&gt;&lt;code&gt;get_default_session(...)&lt;/code&gt;&lt;/a&gt;: Returns the default session for the current thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7926f441545790ab189f5f3ac242f24b6b2ed757" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_local_variable&quot;&gt;&lt;code&gt;get_local_variable(...)&lt;/code&gt;&lt;/a&gt;: Gets an existing &lt;em&gt;local&lt;/em&gt; variable or creates a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e848dc87159aded387e3e60e7c0942a36cbcbd97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_seed&quot;&gt;&lt;code&gt;get_seed(...)&lt;/code&gt;&lt;/a&gt;: Returns the local seeds an operation should use given an op-specific seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b7e8967311cdf4bad3ee67f44ae02b62287cc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_session_handle&quot;&gt;&lt;code&gt;get_session_handle(...)&lt;/code&gt;&lt;/a&gt;: Return the handle of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7542ce19dfc193823712b745a27190c2f41459ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_session_tensor&quot;&gt;&lt;code&gt;get_session_tensor(...)&lt;/code&gt;&lt;/a&gt;: Get the tensor of type &lt;code&gt;dtype&lt;/code&gt; by feeding a tensor handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121f0ceb49b2929a9a6ed47d57cfbd615e1a7359" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_variable&quot;&gt;&lt;code&gt;get_variable(...)&lt;/code&gt;&lt;/a&gt;: Gets an existing variable with these parameters or create a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e518260358d9ccf19d39f53581052bd9024b3317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/get_variable_scope&quot;&gt;&lt;code&gt;get_variable_scope(...)&lt;/code&gt;&lt;/a&gt;: Returns the current variable scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb39d2cdf2b74553913f05ee77bca328a4248e62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/gfile&quot;&gt;&lt;code&gt;gfile&lt;/code&gt;&lt;/a&gt; module: Import router for file_io.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a0a5174751018dd2ddde748098f6504eb794e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/global_variables&quot;&gt;&lt;code&gt;global_variables(...)&lt;/code&gt;&lt;/a&gt;: Returns global variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d29d10525e14e651f27ccbc56e76665419c8668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/global_variables_initializer&quot;&gt;&lt;code&gt;global_variables_initializer(...)&lt;/code&gt;&lt;/a&gt;: Returns an Op that initializes global variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea06fddd135be350baf8f075b1a8a1cd109c894" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/gpuoptions&quot;&gt;&lt;code&gt;class GPUOptions&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cf10fc5faef41c25d2da69c5f03ead3518de10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/gradients&quot;&gt;&lt;code&gt;gradients(...)&lt;/code&gt;&lt;/a&gt;: Constructs symbolic derivatives of sum of &lt;code&gt;ys&lt;/code&gt; w.r.t. x in &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3068b91f378bcd91d0686b070f3e7febc54af9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/graph_util&quot;&gt;&lt;code&gt;graph_util&lt;/code&gt;&lt;/a&gt; module: Helpers to manipulate a tensor graph in python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03e4fa49e8ff9a8ff8649f96cbde828ece21f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/graphdef&quot;&gt;&lt;code&gt;class GraphDef&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d1efec46524eba6d76b4f7da118a170571c522" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/graphkeys&quot;&gt;&lt;code&gt;class GraphKeys&lt;/code&gt;&lt;/a&gt;: Standard names to use for graph collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34938aa651dc18b841eb31c9a7ec51ce081d7f70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/graphoptions&quot;&gt;&lt;code&gt;class GraphOptions&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740c5517509d5b109e2807309a30b8ec1de81b70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/hessians&quot;&gt;&lt;code&gt;hessians(...)&lt;/code&gt;&lt;/a&gt;: Constructs the Hessian of sum of &lt;code&gt;ys&lt;/code&gt; with respect to &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e409aa9cf9fff6af7b260bd794b2265ef89efe9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/histogramproto&quot;&gt;&lt;code&gt;class HistogramProto&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1184cdfcf39e4308cf0a993e4acf99698aa58d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/identityreader&quot;&gt;&lt;code&gt;class IdentityReader&lt;/code&gt;&lt;/a&gt;: A Reader that outputs the queued work as both the key and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c355e5c9dc2213efa615c6596b2e6a9f966524d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/image&quot;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt; module: Image processing and decoding ops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc4237fb0833fd9f4a6f24937837ba398abb831" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/initialize_all_tables&quot;&gt;&lt;code&gt;initialize_all_tables(...)&lt;/code&gt;&lt;/a&gt;: Returns an Op that initializes all tables of the default graph. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3babfd9500573b08af03d36e5b4963d5963e64b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/initialize_all_variables&quot;&gt;&lt;code&gt;initialize_all_variables(...)&lt;/code&gt;&lt;/a&gt;: See &lt;a href=&quot;v1/global_variables_initializer&quot;&gt;&lt;code&gt;tf.compat.v1.global_variables_initializer&lt;/code&gt;&lt;/a&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92814da2ef2b065cc5c30ac55a92b9136953afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/initialize_local_variables&quot;&gt;&lt;code&gt;initialize_local_variables(...)&lt;/code&gt;&lt;/a&gt;: See &lt;a href=&quot;v1/local_variables_initializer&quot;&gt;&lt;code&gt;tf.compat.v1.local_variables_initializer&lt;/code&gt;&lt;/a&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1be237e58e44d4edee817f81fa97b4f7d00025" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/initialize_variables&quot;&gt;&lt;code&gt;initialize_variables(...)&lt;/code&gt;&lt;/a&gt;: See &lt;a href=&quot;v1/variables_initializer&quot;&gt;&lt;code&gt;tf.compat.v1.variables_initializer&lt;/code&gt;&lt;/a&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8c309574e4ce34fe143f1a778800ea0e2be021" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/initializers&quot;&gt;&lt;code&gt;initializers&lt;/code&gt;&lt;/a&gt; module: Public API for tf.initializers namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57d92f837cc860208acd48f8505c99ebbb07a59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/interactivesession&quot;&gt;&lt;code&gt;class InteractiveSession&lt;/code&gt;&lt;/a&gt;: A TensorFlow &lt;code&gt;Session&lt;/code&gt; for use in interactive contexts, such as a shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52785c00af90c39a09bfbfaf7d24f8eb4442191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt; module: Public API for tf.io namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cdc16437a9eed280b50334c07b9433de566e22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/is_variable_initialized&quot;&gt;&lt;code&gt;is_variable_initialized(...)&lt;/code&gt;&lt;/a&gt;: Tests if a variable has been initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f27c79f0f6a831da7bddfc7269f421907d624e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/keras&quot;&gt;&lt;code&gt;keras&lt;/code&gt;&lt;/a&gt; module: Implementation of the Keras API meant to be a high-level API for TensorFlow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3960a67fd03fcff08d03282f504385f6721e072" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/keras/backend/name_scope&quot;&gt;&lt;code&gt;class name_scope&lt;/code&gt;&lt;/a&gt;: A context manager for use when defining a Python op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad3492cb9140ff3d4e97287c6e214cc2c5fc64a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/keras/initializers/constant&quot;&gt;&lt;code&gt;class constant_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with constant values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f6f6e84e209851613901a1d669f7246196bcdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/keras/initializers/glorot_normal&quot;&gt;&lt;code&gt;class glorot_normal_initializer&lt;/code&gt;&lt;/a&gt;: The Glorot normal initializer, also called Xavier normal initializer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da84bc6863c6ae9e2b1be06ba6ba10377196ab89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/keras/initializers/glorot_uniform&quot;&gt;&lt;code&gt;class glorot_uniform_initializer&lt;/code&gt;&lt;/a&gt;: The Glorot uniform initializer, also called Xavier uniform initializer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065e161bf18d957213a3f938c3b257dab2ff5663" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/keras/initializers/ones&quot;&gt;&lt;code&gt;class ones_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors initialized to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddef36c50aecfad978981ec1547479cee4c49cc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/keras/initializers/orthogonal&quot;&gt;&lt;code&gt;class orthogonal_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates an orthogonal matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccb150a866236f1b58ccaae5691ef4f399cc0ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/keras/initializers/variancescaling&quot;&gt;&lt;code&gt;class variance_scaling_initializer&lt;/code&gt;&lt;/a&gt;: Initializer capable of adapting its scale to the shape of weights tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc70c889b35150ac5deb0892731c80b3b0ebd8ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/keras/initializers/zeros&quot;&gt;&lt;code&gt;class zeros_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors initialized to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c21f29ead36b4daea7121544d547a253ab336c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/layers&quot;&gt;&lt;code&gt;layers&lt;/code&gt;&lt;/a&gt; module: Public API for tf.layers namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977b2da9036a0c3d9eb7b324703b6bfdc289642c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/linalg&quot;&gt;&lt;code&gt;linalg&lt;/code&gt;&lt;/a&gt; module: Operations for linear algebra.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb20f823137c9ac32b470541c010fdcfe1e2cbc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/lite&quot;&gt;&lt;code&gt;lite&lt;/code&gt;&lt;/a&gt; module: Public API for tf.lite namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebdfcec2a73dc3a69e1f90c689f05a70fdbeeee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/lmdbreader&quot;&gt;&lt;code&gt;class LMDBReader&lt;/code&gt;&lt;/a&gt;: A Reader that outputs the records from a LMDB file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9d5ea538b1f13f1f66256cda9a4c181c857fe6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/load_file_system_library&quot;&gt;&lt;code&gt;load_file_system_library(...)&lt;/code&gt;&lt;/a&gt;: Loads a TensorFlow plugin, containing file system implementation. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a1ee2ec7c9423e95ac9f8268736973b560b854" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/local_variables&quot;&gt;&lt;code&gt;local_variables(...)&lt;/code&gt;&lt;/a&gt;: Returns local variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea83cdb6e6cd441d8fdcf203596010ae71349338" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/local_variables_initializer&quot;&gt;&lt;code&gt;local_variables_initializer(...)&lt;/code&gt;&lt;/a&gt;: Returns an Op that initializes all local variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15dcfb2a82de80ed4bbbce01bbd6c6b125b649af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; module: Logging and Summary Operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bc6cc0eb7c81e30bc7558b591f73f9eb4d62aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/logmessage&quot;&gt;&lt;code&gt;class LogMessage&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c856a4442e04815fef0fecd412bd0776357adf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/lookup&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; module: Public API for tf.lookup namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2193489cc7cd132f55cef0cf4d3e78f928197e5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/losses&quot;&gt;&lt;code&gt;losses&lt;/code&gt;&lt;/a&gt; module: Loss operations for use in neural networks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e111e90ea26dffb6307168020620d1dbaa0b18cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/make_template&quot;&gt;&lt;code&gt;make_template(...)&lt;/code&gt;&lt;/a&gt;: Given an arbitrary function, wrap it so that it does variable sharing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3421ebb39e784d8ef445dfdd758c98c9f36117aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/manip&quot;&gt;&lt;code&gt;manip&lt;/code&gt;&lt;/a&gt; module: Operators for manipulating tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba2c3ee99828f59843c9579b76a3d0e4851ec5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/math&quot;&gt;&lt;code&gt;math&lt;/code&gt;&lt;/a&gt; module: Math Operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05111e765098b27e987bf53994c51cd3fa71d1de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/metagraphdef&quot;&gt;&lt;code&gt;class MetaGraphDef&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56f268baa6b4ef03af2fb56ab8bcd704b2560ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/metrics&quot;&gt;&lt;code&gt;metrics&lt;/code&gt;&lt;/a&gt; module: Evaluation-related metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31efd1487e6ded3430a489d27d3beff3f7a8d3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/min_max_variable_partitioner&quot;&gt;&lt;code&gt;min_max_variable_partitioner(...)&lt;/code&gt;&lt;/a&gt;: Partitioner to allocate minimum size per slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bf632a6f8f625149559544d7483a6783e79991" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/mixed_precision&quot;&gt;&lt;code&gt;mixed_precision&lt;/code&gt;&lt;/a&gt; module: Public API for tf.mixed_precision namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92452bf6e21af53a8f13beb1f2a0e1f00f56e8e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/mlir&quot;&gt;&lt;code&gt;mlir&lt;/code&gt;&lt;/a&gt; module: Public API for tf.mlir namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff10c8dfc2d68c5432c5a98e726659d6416b049a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/model_variables&quot;&gt;&lt;code&gt;model_variables(...)&lt;/code&gt;&lt;/a&gt;: Returns all variables in the MODEL_VARIABLES collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f83ef69b7c00132449e956ade2d7774511730cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/moving_average_variables&quot;&gt;&lt;code&gt;moving_average_variables(...)&lt;/code&gt;&lt;/a&gt;: Returns all variables that maintain their moving averages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519e59fc43eb009fd12930110e88816660e41bb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/multinomial&quot;&gt;&lt;code&gt;multinomial(...)&lt;/code&gt;&lt;/a&gt;: Draws samples from a multinomial distribution. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d5e5959633abbe1b147dd54c31516933d3aac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/nameattrlist&quot;&gt;&lt;code&gt;class NameAttrList&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb79e033e26cfbd6f753a09d1726fa7d3362cf7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/nest&quot;&gt;&lt;code&gt;nest&lt;/code&gt;&lt;/a&gt; module: Public API for tf.nest namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b8d48ceba173ec8711671648298e495b49566e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/nn&quot;&gt;&lt;code&gt;nn&lt;/code&gt;&lt;/a&gt; module: Wrappers for primitive Neural Net (NN) Operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab187e714c6fd5f91a46bed30c62d23615d5ab29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/no_regularizer&quot;&gt;&lt;code&gt;no_regularizer(...)&lt;/code&gt;&lt;/a&gt;: Use this function to prevent regularization of variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efd8bddb23fc820b8dc334523c8dd3ed663ab3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/nodedef&quot;&gt;&lt;code&gt;class NodeDef&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1933d810c1f34fbafc24c7442fa273cc803eb568" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/norm&quot;&gt;&lt;code&gt;norm(...)&lt;/code&gt;&lt;/a&gt;: Computes the norm of vectors, matrices, and tensors. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84b783ca4f0edce7acc59dc1c1690d177b50dbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/ones_like&quot;&gt;&lt;code&gt;ones_like(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor with all elements set to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c840f352d95489b9f56e93143a5b6056b39bba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/op_scope&quot;&gt;&lt;code&gt;op_scope(...)&lt;/code&gt;&lt;/a&gt;: DEPRECATED. Same as name_scope above, just different argument order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d6502fc82a1819a7795d0b0b5130090def0200" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/optimizeroptions&quot;&gt;&lt;code&gt;class OptimizerOptions&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0adfbab3e61f4b84215ab2c7adf2d9ae68e08e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/pad&quot;&gt;&lt;code&gt;pad(...)&lt;/code&gt;&lt;/a&gt;: Pads a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28eaf2fb9230c75ac41510b3d7f2b973c8b624dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/parse_example&quot;&gt;&lt;code&gt;parse_example(...)&lt;/code&gt;&lt;/a&gt;: Parses &lt;code&gt;Example&lt;/code&gt; protos into a &lt;code&gt;dict&lt;/code&gt; of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9c5ded19d25ef7b33b516695f8115021ebc958" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/parse_single_example&quot;&gt;&lt;code&gt;parse_single_example(...)&lt;/code&gt;&lt;/a&gt;: Parses a single &lt;code&gt;Example&lt;/code&gt; proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078f6bb4ca203eced1ee1fa44f2bf38a63e3503a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/placeholder&quot;&gt;&lt;code&gt;placeholder(...)&lt;/code&gt;&lt;/a&gt;: Inserts a placeholder for a tensor that will be always fed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754b0264ddfcbd86c0fc9743d765e81b9f84b658" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/placeholder_with_default&quot;&gt;&lt;code&gt;placeholder_with_default(...)&lt;/code&gt;&lt;/a&gt;: A placeholder op that passes through &lt;code&gt;input&lt;/code&gt; when its output is not fed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459049e76c70eeba4a80fd1c4d0bb54cf37f1dde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/print&quot;&gt;&lt;code&gt;Print(...)&lt;/code&gt;&lt;/a&gt;: Prints a list of tensors. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8750b29859f8c144f212ea076c7d3185bb8958" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/profiler&quot;&gt;&lt;code&gt;profiler&lt;/code&gt;&lt;/a&gt; module: Public API for tf.profiler namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b26248226669ed5912d1e77f835f544ad973317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/py_func&quot;&gt;&lt;code&gt;py_func(...)&lt;/code&gt;&lt;/a&gt;: Wraps a python function and uses it as a TensorFlow op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c149dbbce5959e33370462422c62fbdf390c9979" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/python_io&quot;&gt;&lt;code&gt;python_io&lt;/code&gt;&lt;/a&gt; module: Python functions for directly manipulating TFRecord-formatted files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7dcc2b0d1f3c09f3715086b7172931b738ffba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/quantization&quot;&gt;&lt;code&gt;quantization&lt;/code&gt;&lt;/a&gt; module: Public API for tf.quantization namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581d3891f4555bdf5a0392702b8295bce1852239" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/quantize_v2&quot;&gt;&lt;code&gt;quantize_v2(...)&lt;/code&gt;&lt;/a&gt;: Please use &lt;a href=&quot;../quantization/quantize&quot;&gt;&lt;code&gt;tf.quantization.quantize&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d563cce4d80ec65eec6b019691336227731cad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module: Public API for tf.queue namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1caf2b7d5def525a003175a7852ed569a21c81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/ragged&quot;&gt;&lt;code&gt;ragged&lt;/code&gt;&lt;/a&gt; module: Ragged Tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ab278c2f286921bec7b017942930abcc892989" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; module: Public API for tf.random namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962d0136925758bfb81e57db7037400a0a9fb113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/random_normal_initializer&quot;&gt;&lt;code&gt;class random_normal_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with a normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d191625b17fa6f22d92d8673ffea792a33daed7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/random_poisson&quot;&gt;&lt;code&gt;random_poisson(...)&lt;/code&gt;&lt;/a&gt;: Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Poisson distribution(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a222580e4983302dfc1698f70564c232cf92af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/random_uniform_initializer&quot;&gt;&lt;code&gt;class random_uniform_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbf7002503783077a8a41d11ebaaa99c386f7e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/raw_ops&quot;&gt;&lt;code&gt;raw_ops&lt;/code&gt;&lt;/a&gt; module: Public API for tf.raw_ops namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660c2228e95464535b62fbc11c667d1dcebc603b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/readerbase&quot;&gt;&lt;code&gt;class ReaderBase&lt;/code&gt;&lt;/a&gt;: Base class for different Reader types, that produce a record every step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459b7080cdf83983c9fb17b4f21c11666f647a44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reduce_all&quot;&gt;&lt;code&gt;reduce_all(...)&lt;/code&gt;&lt;/a&gt;: Computes the &quot;logical and&quot; of elements across dimensions of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7921b4c1f67d1a086cdbaf8d2b666d40cea4763f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reduce_any&quot;&gt;&lt;code&gt;reduce_any(...)&lt;/code&gt;&lt;/a&gt;: Computes the &quot;logical or&quot; of elements across dimensions of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f405dbc4be3d4e8a95e1a9661c21552717d9f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reduce_join&quot;&gt;&lt;code&gt;reduce_join(...)&lt;/code&gt;&lt;/a&gt;: Joins all strings into a single string, or joins along an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5574d8211daa7c8aba99cd0ccf11467ec26cf6db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reduce_logsumexp&quot;&gt;&lt;code&gt;reduce_logsumexp(...)&lt;/code&gt;&lt;/a&gt;: Computes log(sum(exp(elements across dimensions of a tensor))). (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa11044c4e1e6e2bc13b2eabefb6f2fadef93b13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reduce_max&quot;&gt;&lt;code&gt;reduce_max(...)&lt;/code&gt;&lt;/a&gt;: Computes the maximum of elements across dimensions of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad1604e4ba5696d1a2c5dbdb047fc0882df1b4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reduce_mean&quot;&gt;&lt;code&gt;reduce_mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b4869e7ee0fddbea9d5e95b43eddcd856577f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reduce_min&quot;&gt;&lt;code&gt;reduce_min(...)&lt;/code&gt;&lt;/a&gt;: Computes the minimum of elements across dimensions of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4594e57011216d1d6fa885660ecb94f6edc52a81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reduce_prod&quot;&gt;&lt;code&gt;reduce_prod(...)&lt;/code&gt;&lt;/a&gt;: Computes the product of elements across dimensions of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3881fc8fa368586041d05bb139a2aa8ee15ea47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reduce_sum&quot;&gt;&lt;code&gt;reduce_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum of elements across dimensions of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e4f44bf327be0452714d289f49ed63afd754ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/report_uninitialized_variables&quot;&gt;&lt;code&gt;report_uninitialized_variables(...)&lt;/code&gt;&lt;/a&gt;: Adds ops to list the names of uninitialized variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce6e8ce69c911427db0908dfa238c09534276fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reset_default_graph&quot;&gt;&lt;code&gt;reset_default_graph(...)&lt;/code&gt;&lt;/a&gt;: Clears the default graph stack and resets the global default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b0ed45fb609a6869e88b8cca0af58b37545cb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/resource_loader&quot;&gt;&lt;code&gt;resource_loader&lt;/code&gt;&lt;/a&gt; module: Resource management library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54aae1abbc91368a0eaea05def08fbc095443ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/resource_variables_enabled&quot;&gt;&lt;code&gt;resource_variables_enabled(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;True&lt;/code&gt; if resource variables are enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963c8d051f2654b38533aaabea8970bf9431273d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/reverse_sequence&quot;&gt;&lt;code&gt;reverse_sequence(...)&lt;/code&gt;&lt;/a&gt;: Reverses variable length slices. (deprecated arguments) (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9714fc78e9f540687586cf926d664bf394cd8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/runmetadata&quot;&gt;&lt;code&gt;class RunMetadata&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa568b972d8c513c78c17a6e42fee72169ffeaae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/runoptions&quot;&gt;&lt;code&gt;class RunOptions&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3c132dc83925286f7e928cffba248b10120b28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/saved_model&quot;&gt;&lt;code&gt;saved_model&lt;/code&gt;&lt;/a&gt; module: Public API for tf.saved_model namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36bd9ca57686d2bbf975dfe0966a2f2f2947d92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scalar_mul&quot;&gt;&lt;code&gt;scalar_mul(...)&lt;/code&gt;&lt;/a&gt;: Multiplies a scalar times a &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0931cca27389c93c73cec822574f5cbe5b147886" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_add&quot;&gt;&lt;code&gt;scatter_add(...)&lt;/code&gt;&lt;/a&gt;: Adds sparse updates to the variable referenced by &lt;code&gt;resource&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee88b068e8a02c138c934b4e2d94740fa9f3cb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_div&quot;&gt;&lt;code&gt;scatter_div(...)&lt;/code&gt;&lt;/a&gt;: Divides a variable reference by sparse updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0547ede64b8d362000e12e9362272c11036755d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_max&quot;&gt;&lt;code&gt;scatter_max(...)&lt;/code&gt;&lt;/a&gt;: Reduces sparse updates into a variable reference using the &lt;code&gt;max&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef6b0fd5459be2f6556ebf6ad55d92247fed08a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_min&quot;&gt;&lt;code&gt;scatter_min(...)&lt;/code&gt;&lt;/a&gt;: Reduces sparse updates into a variable reference using the &lt;code&gt;min&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d0633aab2398747f30db0abe136a51f41e3934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_mul&quot;&gt;&lt;code&gt;scatter_mul(...)&lt;/code&gt;&lt;/a&gt;: Multiplies sparse updates into a variable reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e527e3eac3582bcb0f6d1127bea6bf3d07b1995a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_nd_add&quot;&gt;&lt;code&gt;scatter_nd_add(...)&lt;/code&gt;&lt;/a&gt;: Applies sparse addition to individual values or slices in a Variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5cfa8623acc0901915bc0b1d5ec1261f8ecac1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_nd_sub&quot;&gt;&lt;code&gt;scatter_nd_sub(...)&lt;/code&gt;&lt;/a&gt;: Applies sparse subtraction to individual values or slices in a Variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64117d5a086ea88a523b489a5258a11a0b8cf12a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_nd_update&quot;&gt;&lt;code&gt;scatter_nd_update(...)&lt;/code&gt;&lt;/a&gt;: Applies sparse &lt;code&gt;updates&lt;/code&gt; to individual values or slices in a Variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6317f44dc4d9aca5f1136e00005b355144741991" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_sub&quot;&gt;&lt;code&gt;scatter_sub(...)&lt;/code&gt;&lt;/a&gt;: Subtracts sparse updates to a variable reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c2fcec8ecdfd628d8a30f279ab4254d200706a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/scatter_update&quot;&gt;&lt;code&gt;scatter_update(...)&lt;/code&gt;&lt;/a&gt;: Applies sparse updates to a variable reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003bcdaeff11332f013d0bfc83e3084b1d65dedc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/serialize_many_sparse&quot;&gt;&lt;code&gt;serialize_many_sparse(...)&lt;/code&gt;&lt;/a&gt;: Serialize &lt;code&gt;N&lt;/code&gt;-minibatch &lt;code&gt;SparseTensor&lt;/code&gt; into an &lt;code&gt;[N, 3]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a6e8d7c3f74448d3e7de2727d929349c933c4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/serialize_sparse&quot;&gt;&lt;code&gt;serialize_sparse(...)&lt;/code&gt;&lt;/a&gt;: Serialize a &lt;code&gt;SparseTensor&lt;/code&gt; into a 3-vector (1-D &lt;code&gt;Tensor&lt;/code&gt;) object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea05c5eb84c21ec1416227a5d8e79bc09cd770b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/session&quot;&gt;&lt;code&gt;class Session&lt;/code&gt;&lt;/a&gt;: A class for running TensorFlow operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f2eda44cb29a2a7c94ebf55232165fb42a684d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sessionlog&quot;&gt;&lt;code&gt;class SessionLog&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3603143652fac5f9991ad9af368658544f65a794" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/set_random_seed&quot;&gt;&lt;code&gt;set_random_seed(...)&lt;/code&gt;&lt;/a&gt;: Sets the graph-level random seed for the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a5e3192ce776787e07aa7e63b5ee0cfb0729a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/setdiff1d&quot;&gt;&lt;code&gt;setdiff1d(...)&lt;/code&gt;&lt;/a&gt;: Computes the difference between two lists of numbers or strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af442f31b1de38a57b63755b1dc26af53828e65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sets&quot;&gt;&lt;code&gt;sets&lt;/code&gt;&lt;/a&gt; module: Tensorflow set operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c5a1fd4a5106dfc2a445b41b77611eefd1fe89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/shape&quot;&gt;&lt;code&gt;shape(...)&lt;/code&gt;&lt;/a&gt;: Returns the shape of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794ef06799b6b0d5479c387031a9d4abc147a4ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module: Signal processing operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7721b79e07b9a0ae7808ba036ec174923bee3349" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/size&quot;&gt;&lt;code&gt;size(...)&lt;/code&gt;&lt;/a&gt;: Returns the size of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4665c8e784e176bdb9a1a837666cea09e6614db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/space_to_batch&quot;&gt;&lt;code&gt;space_to_batch(...)&lt;/code&gt;&lt;/a&gt;: SpaceToBatch for 4-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444055e973b9defd35560a324735a24996fe815e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/space_to_depth&quot;&gt;&lt;code&gt;space_to_depth(...)&lt;/code&gt;&lt;/a&gt;: SpaceToDepth for tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89ed325e37e832d7adc375c656fd19c338fc351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse&quot;&gt;&lt;code&gt;sparse&lt;/code&gt;&lt;/a&gt; module: Sparse Tensor Representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f4213e4c42ef1a853c3cc47939393571a01a3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_add&quot;&gt;&lt;code&gt;sparse_add(...)&lt;/code&gt;&lt;/a&gt;: Adds two tensors, at least one of each is a &lt;code&gt;SparseTensor&lt;/code&gt;. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8565a9cd39fb91cbe78b956607c0f602b863239" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_concat&quot;&gt;&lt;code&gt;sparse_concat(...)&lt;/code&gt;&lt;/a&gt;: Concatenates a list of &lt;code&gt;SparseTensor&lt;/code&gt; along the specified dimension. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae4e7ffbdf78020c83bc2634682d2e2dbc02e4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_matmul&quot;&gt;&lt;code&gt;sparse_matmul(...)&lt;/code&gt;&lt;/a&gt;: Multiply matrix &quot;a&quot; by matrix &quot;b&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cda6ad74e8a6490f131df4056191f8e9875c57d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_merge&quot;&gt;&lt;code&gt;sparse_merge(...)&lt;/code&gt;&lt;/a&gt;: Combines a batch of feature ids and values into a single &lt;code&gt;SparseTensor&lt;/code&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ef07812fff3e3b221eb0098adc045e7f80d32f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_placeholder&quot;&gt;&lt;code&gt;sparse_placeholder(...)&lt;/code&gt;&lt;/a&gt;: Inserts a placeholder for a sparse tensor that will be always fed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bec01af54e9aad57251b94327d6dd67af3b8320" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_reduce_max&quot;&gt;&lt;code&gt;sparse_reduce_max(...)&lt;/code&gt;&lt;/a&gt;: Computes the max of elements across dimensions of a SparseTensor. (deprecated arguments) (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a977399136564ac966963b65ac9b7c854817be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_reduce_max_sparse&quot;&gt;&lt;code&gt;sparse_reduce_max_sparse(...)&lt;/code&gt;&lt;/a&gt;: Computes the max of elements across dimensions of a SparseTensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23d2feeb69e6ad3e42a26b47107be3f2d1f1406" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_reduce_sum&quot;&gt;&lt;code&gt;sparse_reduce_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum of elements across dimensions of a SparseTensor. (deprecated arguments) (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf770f1f31cb92d2ce16c2c7b2cf12993ec1f73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_reduce_sum_sparse&quot;&gt;&lt;code&gt;sparse_reduce_sum_sparse(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum of elements across dimensions of a SparseTensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59609e660d5a23090839ad9dcd576170ac87c46f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_segment_mean&quot;&gt;&lt;code&gt;sparse_segment_mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean along sparse segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad78583d0be042ae745685899d31474274f393a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_segment_sqrt_n&quot;&gt;&lt;code&gt;sparse_segment_sqrt_n(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along sparse segments of a tensor divided by the sqrt(N).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488977a541c328ef76bd82594a528e20bdeedc99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_segment_sum&quot;&gt;&lt;code&gt;sparse_segment_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along sparse segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e335eff810555ded0383def62298723e8c742a1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_split&quot;&gt;&lt;code&gt;sparse_split(...)&lt;/code&gt;&lt;/a&gt;: Split a &lt;code&gt;SparseTensor&lt;/code&gt; into &lt;code&gt;num_split&lt;/code&gt; tensors along &lt;code&gt;axis&lt;/code&gt;. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a704933f066580b0160e9902c275a1764d019a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparse_to_dense&quot;&gt;&lt;code&gt;sparse_to_dense(...)&lt;/code&gt;&lt;/a&gt;: Converts a sparse representation into a dense tensor. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9c320416699bb70eb609f4a50a54ab75f4e9b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparseconditionalaccumulator&quot;&gt;&lt;code&gt;class SparseConditionalAccumulator&lt;/code&gt;&lt;/a&gt;: A conditional accumulator for aggregating sparse gradients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1da873b13e19c68b36ffad8774298c7e393885" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sparsetensorvalue&quot;&gt;&lt;code&gt;class SparseTensorValue&lt;/code&gt;&lt;/a&gt;: SparseTensorValue(indices, values, dense_shape)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c089d0f2b047e164b1615e5935b5c1dff8d41c3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/spectral&quot;&gt;&lt;code&gt;spectral&lt;/code&gt;&lt;/a&gt; module: Public API for tf.spectral namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d2fdaee277a7f532501bec621bbc06e4d7231f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/squeeze&quot;&gt;&lt;code&gt;squeeze(...)&lt;/code&gt;&lt;/a&gt;: Removes dimensions of size 1 from the shape of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33e4ee008e6fea247acdc6090ec6203c8080e8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/string_split&quot;&gt;&lt;code&gt;string_split(...)&lt;/code&gt;&lt;/a&gt;: Split elements of &lt;code&gt;source&lt;/code&gt; based on &lt;code&gt;delimiter&lt;/code&gt;. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ec9bfcab8cc43eb64c70374c4966da4dbdeeab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/string_to_hash_bucket&quot;&gt;&lt;code&gt;string_to_hash_bucket(...)&lt;/code&gt;&lt;/a&gt;: Converts each string in the input Tensor to its hash mod by a number of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04f2435f54f51dc913d38620e085dc3369cd19b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/string_to_number&quot;&gt;&lt;code&gt;string_to_number(...)&lt;/code&gt;&lt;/a&gt;: Converts each string in the input Tensor to the specified numeric type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241415cd3cdc94b6a95fe4e8140ee97006a54fc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/strings&quot;&gt;&lt;code&gt;strings&lt;/code&gt;&lt;/a&gt; module: Operations for working with string Tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807a557039acb57037adf661d7d6ad96ac21b554" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/substr&quot;&gt;&lt;code&gt;substr(...)&lt;/code&gt;&lt;/a&gt;: Return substrings from &lt;code&gt;Tensor&lt;/code&gt; of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a77bcd1e7b90fa41bd9b38e421fdf7921681f53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/summary&quot;&gt;&lt;code&gt;class Summary&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277155a07e4e58543d2b80de5990277b7ef26856" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/summary&quot;&gt;&lt;code&gt;summary&lt;/code&gt;&lt;/a&gt; module: Operations for writing summary data, for use in analysis and visualization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0acf31733a544f0e00d60b916a5f8408274cf74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/summarymetadata&quot;&gt;&lt;code&gt;class SummaryMetadata&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09d0333118fea6912d3fa95bb0bc3c6c7b5c84c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; module: System configuration library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9be16545701cb1cc628505ff079ae6885aa479" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/tables_initializer&quot;&gt;&lt;code&gt;tables_initializer(...)&lt;/code&gt;&lt;/a&gt;: Returns an Op that initializes all tables of the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc91a1aa51f6959f65a0452dcfbf3ad333982775" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/tensorinfo&quot;&gt;&lt;code&gt;class TensorInfo&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4372b74091d0bf9b0bdc97cd97c2214053c8ad4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; module: Testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fd057cb4d36fa90b5778a5323058af5c482118" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/textlinereader&quot;&gt;&lt;code&gt;class TextLineReader&lt;/code&gt;&lt;/a&gt;: A Reader that outputs the lines of a file delimited by newlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc03b6e2b280891307c02f9e774b7e902d03e79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/tfrecordreader&quot;&gt;&lt;code&gt;class TFRecordReader&lt;/code&gt;&lt;/a&gt;: A Reader that outputs the records from a TFRecords file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4690ce14c345a238c44c10c5bb6c3be2c6f6f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/to_bfloat16&quot;&gt;&lt;code&gt;to_bfloat16(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to type &lt;code&gt;bfloat16&lt;/code&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f367e83d22bb4f390b982037ef1c5942ce3e99b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/to_complex128&quot;&gt;&lt;code&gt;to_complex128(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to type &lt;code&gt;complex128&lt;/code&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cf964e4f5675e4883fdbac32b95ebcc47fc166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/to_complex64&quot;&gt;&lt;code&gt;to_complex64(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to type &lt;code&gt;complex64&lt;/code&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77434f2cd1f7a3b441e7623626ad87c8a1d59009" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/to_double&quot;&gt;&lt;code&gt;to_double(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to type &lt;code&gt;float64&lt;/code&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a01f633ff5859536d8dfd7e01add838a6a658ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/to_float&quot;&gt;&lt;code&gt;to_float(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to type &lt;code&gt;float32&lt;/code&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31b9cac9bb1eb4d4fef2e453b2e01e4e705f313" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/to_int32&quot;&gt;&lt;code&gt;to_int32(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to type &lt;code&gt;int32&lt;/code&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a37a4e0df15bead54857e633ac5f874099c524" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/to_int64&quot;&gt;&lt;code&gt;to_int64(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to type &lt;code&gt;int64&lt;/code&gt;. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae4cd1de392b03fa1e251f1ab2c962fc3167c88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/tpu&quot;&gt;&lt;code&gt;tpu&lt;/code&gt;&lt;/a&gt; module: Ops related to Tensor Processing Units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6f482e7965e435f5fd13e1d9026c9ef2a22817" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/train&quot;&gt;&lt;code&gt;train&lt;/code&gt;&lt;/a&gt; module: Support for training models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098ea00b54d524795b737e24efec31e70d0f5db7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/trainable_variables&quot;&gt;&lt;code&gt;trainable_variables(...)&lt;/code&gt;&lt;/a&gt;: Returns all variables created with &lt;code&gt;trainable=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c145542a976abe88396d56a97b6ffae580b1abf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/transpose&quot;&gt;&lt;code&gt;transpose(...)&lt;/code&gt;&lt;/a&gt;: Transposes &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dcb0b5342c2d4456a30432b75ac0c932df3d86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/truncated_normal_initializer&quot;&gt;&lt;code&gt;class truncated_normal_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates a truncated normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578f309581fe87fd556f4e416b06442c5705918c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/tuple&quot;&gt;&lt;code&gt;tuple(...)&lt;/code&gt;&lt;/a&gt;: Group tensors together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31b5a0bf55c40c3f3558b71dbc7d45b6739bc43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/uniform_unit_scaling_initializer&quot;&gt;&lt;code&gt;class uniform_unit_scaling_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors without scaling variance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e253302523bc2c947f809c89b4e9bb18692e2fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/user_ops&quot;&gt;&lt;code&gt;user_ops&lt;/code&gt;&lt;/a&gt; module: Public API for tf.user_ops namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab15e9625d08a75604f554edf31928f6db209f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/variable&quot;&gt;&lt;code&gt;class Variable&lt;/code&gt;&lt;/a&gt;: See the &lt;a href=&quot;https://tensorflow.org/guide/variables&quot;&gt;Variables Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026c879d3d002191472d1a409a4c63e795a866e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/variable_axis_size_partitioner&quot;&gt;&lt;code&gt;variable_axis_size_partitioner(...)&lt;/code&gt;&lt;/a&gt;: Get a partitioner for VariableScope to keep shards below &lt;code&gt;max_shard_bytes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54af9b9528387d4ae8e058168fd75770c9f1f8f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/variable_creator_scope&quot;&gt;&lt;code&gt;variable_creator_scope(...)&lt;/code&gt;&lt;/a&gt;: Scope which defines a variable creation function to be used by variable().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f8c6abbe35976a356b5d850cce7b61b37ec0c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/variable_op_scope&quot;&gt;&lt;code&gt;variable_op_scope(...)&lt;/code&gt;&lt;/a&gt;: Deprecated: context manager for defining an op that creates variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90b7c8682b7ad3465ba78a141d74dfcbcf26d0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/variable_scope&quot;&gt;&lt;code&gt;class variable_scope&lt;/code&gt;&lt;/a&gt;: A context manager for defining ops that creates variables (layers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228ea936c980e522fd4fa5b95b538614555ca56c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/variableaggregation&quot;&gt;&lt;code&gt;class VariableAggregation&lt;/code&gt;&lt;/a&gt;: Indicates how a distributed variable will be aggregated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4630152f2f40fcdddb00ab5013ed15b3bf807b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/variables_initializer&quot;&gt;&lt;code&gt;variables_initializer(...)&lt;/code&gt;&lt;/a&gt;: Returns an Op that initializes a list of variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab09cb6a4c6a250a87f8da21ff7b2f5c6a0ae043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/variablescope&quot;&gt;&lt;code&gt;class VariableScope&lt;/code&gt;&lt;/a&gt;: Variable scope object to carry defaults to provide to &lt;code&gt;get_variable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5faa3316ef38a684106d5676002163a03c8fde95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/verify_tensor_all_finite&quot;&gt;&lt;code&gt;verify_tensor_all_finite(...)&lt;/code&gt;&lt;/a&gt;: Assert that the tensor does not contain any NaN's or Inf's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2e5af38250dd6d3f48416e3320fdcb77743c84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; module: Public API for tf.version namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5c8c442f43ff843ea665c0898ede768bd5ad80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/where&quot;&gt;&lt;code&gt;where(...)&lt;/code&gt;&lt;/a&gt;: Return the elements, either from &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt;, depending on the &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64a808a9237264f77a06df0d587d0306f6e994d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/while_loop&quot;&gt;&lt;code&gt;while_loop(...)&lt;/code&gt;&lt;/a&gt;: Repeat &lt;code&gt;body&lt;/code&gt; while the condition &lt;code&gt;cond&lt;/code&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbeb74d06eca7d97447615d19d537913460c210e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/wholefilereader&quot;&gt;&lt;code&gt;class WholeFileReader&lt;/code&gt;&lt;/a&gt;: A Reader that outputs the entire contents of a file as a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c05dbe2da4314ec4953c2601e6f0fc0b887e797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/wrap_function&quot;&gt;&lt;code&gt;wrap_function(...)&lt;/code&gt;&lt;/a&gt;: Wraps the TF 1.x function fn into a graph function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b7a86675916e05416978843ac1f7822331f94d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/xla&quot;&gt;&lt;code&gt;xla&lt;/code&gt;&lt;/a&gt; module: Public API for tf.xla namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459502879b4af34c393dc4d6408392c751043e2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v1/zeros_like&quot;&gt;&lt;code&gt;zeros_like(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor with all elements set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bc8fa2c5a6b576626bd2c6ed3e37ffde049481" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/audio&quot;&gt;&lt;code&gt;audio&lt;/code&gt;&lt;/a&gt; module: Public API for tf.audio namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fde3188faeee38d557f857b45e9a7f82d2ea46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/autodiff&quot;&gt;&lt;code&gt;autodiff&lt;/code&gt;&lt;/a&gt; module: Public API for tf.autodiff namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6509487a684eb02e7aeb1bd89db0ed2a477b2fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/autograph&quot;&gt;&lt;code&gt;autograph&lt;/code&gt;&lt;/a&gt; module: Conversion of plain Python into TensorFlow graph code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4b65e9833948fa4a675c2483c5a5403f0400c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/bitwise&quot;&gt;&lt;code&gt;bitwise&lt;/code&gt;&lt;/a&gt; module: Operations for manipulating the binary representations of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518bfb13eda99c9ec444e474600710f70ce674cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/compat&quot;&gt;&lt;code&gt;compat&lt;/code&gt;&lt;/a&gt; module: Compatibility functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76411c12fc5bfdade85167c5452dd396eb1a5a4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/config&quot;&gt;&lt;code&gt;config&lt;/code&gt;&lt;/a&gt; module: Public API for tf.config namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3af239ffaa89d12fbbc429795b5a0cdb02a5bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; module: &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; API for input pipelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e00f8f2dedd7889e574b5a3661ff46586489c2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/debugging&quot;&gt;&lt;code&gt;debugging&lt;/code&gt;&lt;/a&gt; module: Public API for tf.debugging namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcde2ddf8698b3e4246d2072d384872edb18054c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/distribute&quot;&gt;&lt;code&gt;distribute&lt;/code&gt;&lt;/a&gt; module: Library for running a computation across multiple devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3c43a6d5147f65f0badd2e14ac195942b275a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/dtypes&quot;&gt;&lt;code&gt;dtypes&lt;/code&gt;&lt;/a&gt; module: Public API for tf.dtypes namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7723c43b28c07a24634fcd5e95c18fe54ec28e37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; module: Exception types for TensorFlow errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac688e503b97750cd57cd6343459f8a5e902965" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/experimental&quot;&gt;&lt;code&gt;experimental&lt;/code&gt;&lt;/a&gt; module: Public API for tf.experimental namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f6ee9dc5f77482ce7dfda3d1f84dc3f7ff2dc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/feature_column&quot;&gt;&lt;code&gt;feature_column&lt;/code&gt;&lt;/a&gt; module: Public API for tf.feature_column namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c0447d31326e4952a9d8f5057ef85c71d4a98c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/graph_util&quot;&gt;&lt;code&gt;graph_util&lt;/code&gt;&lt;/a&gt; module: Helpers to manipulate a tensor graph in python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff357327aec3126d0d9fd82ec58266fa99b24e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/image&quot;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt; module: Image processing and decoding ops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725d8163be0cf7a610390e5a81b7825b4aad75ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt; module: Public API for tf.io namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8722eacec6e83f2611c1216613cf7d82bc3ef63d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/keras&quot;&gt;&lt;code&gt;keras&lt;/code&gt;&lt;/a&gt; module: Implementation of the Keras API meant to be a high-level API for TensorFlow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24fa566be50955dbad3c975fe6a81fb74bc98ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/keras/initializers&quot;&gt;&lt;code&gt;initializers&lt;/code&gt;&lt;/a&gt; module: Keras initializer serialization / deserialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280cf51cd53f9456d1294c42612027fef50bcb3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/keras/losses&quot;&gt;&lt;code&gt;losses&lt;/code&gt;&lt;/a&gt; module: Built-in loss functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7767e99030874b547878b3260f8c21d85d5287b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/keras/metrics&quot;&gt;&lt;code&gt;metrics&lt;/code&gt;&lt;/a&gt; module: Built-in metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98e69b8de8ad09c6cbb06f87af49dc7eea27c5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/keras/optimizers&quot;&gt;&lt;code&gt;optimizers&lt;/code&gt;&lt;/a&gt; module: Built-in optimizer classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09c26b5db9574574b1800b328c1ca1f94351020" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/linalg&quot;&gt;&lt;code&gt;linalg&lt;/code&gt;&lt;/a&gt; module: Operations for linear algebra.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6507c61b976d5616207dc5fecdebbea21a9f261e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/lite&quot;&gt;&lt;code&gt;lite&lt;/code&gt;&lt;/a&gt; module: Public API for tf.lite namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa6a198fa0a64989f314ad942eec5a311da19fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/lookup&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; module: Public API for tf.lookup namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ab1b3b0300df877dde3be2f95cffb24d3f5283" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/math&quot;&gt;&lt;code&gt;math&lt;/code&gt;&lt;/a&gt; module: Math Operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1b615a00f9ab2792cff6c2e2846001b66590be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/mixed_precision&quot;&gt;&lt;code&gt;mixed_precision&lt;/code&gt;&lt;/a&gt; module: Public API for tf.mixed_precision namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb0614e476212e0d3ba58af1324f8cfc7baa461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/mlir&quot;&gt;&lt;code&gt;mlir&lt;/code&gt;&lt;/a&gt; module: Public API for tf.mlir namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1878f123947feed1d7d8c8f967cf370bd17ea5cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/nest&quot;&gt;&lt;code&gt;nest&lt;/code&gt;&lt;/a&gt; module: Public API for tf.nest namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9d8bd25c7dacd3eb88f18dc2d903819d340d51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/nn&quot;&gt;&lt;code&gt;nn&lt;/code&gt;&lt;/a&gt; module: Wrappers for primitive Neural Net (NN) Operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0740d1a13f6786005b3e2a1669992a057f00147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/quantization&quot;&gt;&lt;code&gt;quantization&lt;/code&gt;&lt;/a&gt; module: Public API for tf.quantization namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3a683c24ab4d00ee00df1ff1349f4d230439fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module: Public API for tf.queue namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac04d1f0e4cab9d51519998994ae8c0e99a76965" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/ragged&quot;&gt;&lt;code&gt;ragged&lt;/code&gt;&lt;/a&gt; module: Ragged Tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adb40f74c5a9ef2b61efcc5be45539a8ec003a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; module: Public API for tf.random namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a1f4ad605187833a20b9d48b56fbd186fb8ef1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/raw_ops&quot;&gt;&lt;code&gt;raw_ops&lt;/code&gt;&lt;/a&gt; module: Public API for tf.raw_ops namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828be8ebaaa76d583a1218a7f3f75ad2b37c421f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/saved_model&quot;&gt;&lt;code&gt;saved_model&lt;/code&gt;&lt;/a&gt; module: Public API for tf.saved_model namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd0c962873c645c415ccafd8b0c07c9c42e5a46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/sets&quot;&gt;&lt;code&gt;sets&lt;/code&gt;&lt;/a&gt; module: Tensorflow set operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a35ebe0eccb8e3e73e53fd489c08b28fbdd3d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module: Signal processing operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e8282d58195769de62f388c3f5c5d6e559bb7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/sparse&quot;&gt;&lt;code&gt;sparse&lt;/code&gt;&lt;/a&gt; module: Sparse Tensor Representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47890011aef47832add4efd6626de9fb12db91c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/strings&quot;&gt;&lt;code&gt;strings&lt;/code&gt;&lt;/a&gt; module: Operations for working with string Tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7151ee12ace14d9c05f32497885e3dfd3fa2553" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; module: System configuration library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40d747df87dfe78d1df92f941365184a340e7c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; module: Testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee127e718a8610367bee8b2f5e645e4e7ac05134" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/tpu&quot;&gt;&lt;code&gt;tpu&lt;/code&gt;&lt;/a&gt; module: Ops related to Tensor Processing Units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218a9eb81cda1db2a78417458fa8390a204468fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/train&quot;&gt;&lt;code&gt;train&lt;/code&gt;&lt;/a&gt; module: Support for training models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6706f5c8868b095f079144ab636b9baaea794d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; module: Public API for tf.version namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846272bff2e07e0c3be33f816c1329d9f14caa7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v2/xla&quot;&gt;&lt;code&gt;xla&lt;/code&gt;&lt;/a&gt; module: Public API for tf.xla namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5be36548c025f8a4a80aa25059be60c5281ca0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;variables_initializer&quot;&gt;&lt;code&gt;variables(...)&lt;/code&gt;&lt;/a&gt;: Returns an Op that initializes a list of variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c2bf3222bff3e46c735143f22e40693952b2a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;verify_tensor_all_finite&quot;&gt;&lt;code&gt;assert_all_finite(...)&lt;/code&gt;&lt;/a&gt;: Assert that the tensor does not contain any NaN's or Inf's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302f47b7a27365cdf199277bea43e2623934100a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;where&quot;&gt;&lt;code&gt;tf.where&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;condition&lt;/strong&gt;, &lt;strong&gt;x&lt;/strong&gt;=&lt;code&gt;None&lt;/code&gt;, &lt;strong&gt;y&lt;/strong&gt;=&lt;code&gt;None&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4abaea46c9e57bf443abc2844e14af1a2e5a10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;wrappers/scikit_learn&quot;&gt;&lt;code&gt;scikit_learn&lt;/code&gt;&lt;/a&gt; module: Wrapper for using the Scikit-Learn API with Keras models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f386b1afd269eb3f16d03ab3add57509247634" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xla/experimental&quot;&gt;&lt;code&gt;experimental&lt;/code&gt;&lt;/a&gt; module: Public API for tf.xla.experimental namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbab6061db3004357b3acd3ebb5057ed18d852e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zeros_like&quot;&gt;&lt;code&gt;tf.zeros_like&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;tensor&lt;/strong&gt;, dtype=&lt;code&gt;None&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;, optimize=&lt;code&gt;True&lt;/code&gt;)n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c933d0abb1fa05f6672c1c6356f97ee536b54f9a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../../errors/operror&quot;&gt;&lt;code&gt;errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: If the operation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8089622c042bb05a312e79e1adaf2f73339704" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../../errors/operror&quot;&gt;&lt;code&gt;errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: If there are filesystem / directory listing errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e751c0312155fd3abd9dc3b2b90f296ff5dc38f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../../errors/operror&quot;&gt;&lt;code&gt;errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Propagates any errors reported by the FileSystem API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972204dc5c64b8acb796daf9bd944e24d5babeb4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../../errors/operror&quot;&gt;&lt;code&gt;errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Propagates any errors reported by the FileSystem API. E.g., &lt;code&gt;NotFoundError&lt;/code&gt; if the file does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4e3e75a692afd0cec3a87cc247daa139443d99" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../../image/resizemethod#AREA&quot;&gt;&lt;code&gt;ResizeMethod.AREA&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Area interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3eccc31de379f38f9513ff897811340339f1c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../../image/resizemethod#BICUBIC&quot;&gt;&lt;code&gt;ResizeMethod.BICUBIC&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: &lt;a href=&quot;https://en.wikipedia.org/wiki/Bicubic_interpolation&quot;&gt;Bicubic interpolation.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9fdca38466c4e563c0e01098bc1977e51cf653" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../../image/resizemethod#BILINEAR&quot;&gt;&lt;code&gt;ResizeMethod.BILINEAR&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: &lt;a href=&quot;https://en.wikipedia.org/wiki/Bilinear_interpolation&quot;&gt;Bilinear interpolation.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d92bdad43c6ea51668db93eacdbd91b7dc30453" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../../image/resizemethod#NEAREST_NEIGHBOR&quot;&gt;&lt;code&gt;ResizeMethod.NEAREST_NEIGHBOR&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: &lt;a href=&quot;https://en.wikipedia.org/wiki/Nearest-neighbor_interpolation&quot;&gt;Nearest neighbor interpolation.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5ef0896d848660440d85158b56d2db0d77a327" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../errors/operror&quot;&gt;&lt;code&gt;errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: If the operation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084a2a2ed954458346a11e2518d6b312c67b8e98" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../errors/operror&quot;&gt;&lt;code&gt;errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: If there are filesystem / directory listing errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26f66d05708e9fa85aec7ab03dc1d2720739d80" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../errors/operror&quot;&gt;&lt;code&gt;errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Propagates any errors reported by the FileSystem API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e1425120de6645adc80e32015e01ece8b6b2ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../errors/operror&quot;&gt;&lt;code&gt;errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Propagates any errors reported by the FileSystem API. E.g., &lt;code&gt;NotFoundError&lt;/code&gt; if the path does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ee4f26cafbd8cb9f574de65086a35d2b483dde" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../errors/operror&quot;&gt;&lt;code&gt;tf.errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: If it encounters an error (e.g. session is in an invalid state, or network errors occur).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db6a5805b6b8190e7d84bbee6f19f4c44aba258" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../errors/operror&quot;&gt;&lt;code&gt;tf.errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Or one of its subclasses if a TensorFlow error happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea27b5604df158817e0c0baabe149316b79308a0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../errors/operror&quot;&gt;&lt;code&gt;tf.errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Or one of its subclasses if an error occurs while closing the TensorFlow session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2343c7b025be3293e0f6d491ec232923c07b4057" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../errors/operror&quot;&gt;&lt;code&gt;tf.errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Or one of its subclasses if an error occurs while resetting containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce04278caaaec060bd0499603bc1bb040fb11e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../../errors/operror&quot;&gt;&lt;code&gt;tf.errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Or one of its subclasses on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d4428cd118711e5ab9f0b3cad48e6eaf0432ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../errors/operror&quot;&gt;&lt;code&gt;tf.errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Or one of its subclasses if an error occurs while creating the TensorFlow server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d8ac8639b16e91564590ffbe11cd42f2a8ebc3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../errors/operror&quot;&gt;&lt;code&gt;tf.errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Or one of its subclasses if an error occurs while joining the TensorFlow server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8d5ca9fdf8a959da5fec8c7115940eb800431c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;../errors/operror&quot;&gt;&lt;code&gt;tf.errors.OpError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: Or one of its subclasses if an error occurs while starting the TensorFlow server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c950b61615470f645d33a6fb5f51a96f4579c820" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;a href=&quot;errors/invalidargumenterror&quot;&gt;&lt;code&gt;tf.errors.InvalidArgumentError&lt;/code&gt;&lt;/a&gt;&lt;/b&gt;: If value_range does not satisfy value_range[0] &amp;lt; value_range[1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27b05d6a1732577c0cf9a13a89986a25f06f71f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**args&lt;/code&gt;&lt;/b&gt;: Dictionary with extra keyword args that are passed to the Flag &lt;strong&gt;init&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a5ecd9078eaff71405fa5a4f2b04034beafa81" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**args&lt;/code&gt;&lt;/b&gt;: dict, the extra keyword args that are passed to DEFINE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1862148370f86678d993e235d413a59c323f36c5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**args&lt;/code&gt;&lt;/b&gt;: dict, the extra keyword args that are passed to Flag &lt;strong&gt;init&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b71cb08d46f783a667e07f1426a456c8d92f27" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: &quot;name&quot; label &quot;tag&quot; a tag to group multiple arguments that will be aggregated. I.e. a string like 'cool_input'. Basically multiple inputs can be added to the same hint for parallel operations that will eventually be combined. An example would be static_rnn which creates multiple copies of state or inputs. &quot;aggregate&quot; aggregation strategy that is valid only for tag non None. Acceptable values are OpHint.AGGREGATE_FIRST, OpHint.AGGREGATE_LAST, and OpHint.AGGREGATE_STACK. &quot;index_override&quot; The global index to use. This corresponds to the argument order in the final stub that will be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567d946b0f710c4cf7fd403be7528107bcd7aa17" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: - indexing: Either 'xy' or 'ij' (optional, default: 'xy').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a0d36f9ecb65f333cd1b4cca94a9b6159213f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: - optimize: Optimization strategy to use to find contraction path using opt_einsum. Must be 'greedy', 'optimal', 'branch-2', 'branch-all' or 'auto'. (optional, default: 'greedy').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa964c462b67ad7fa59578ed6e9a51e04794cb38" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Additional arguments for backwards compatibility. Possible key is &lt;code&gt;period&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1b008074fad35a9877bec42b146a16ba2badaa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Additional keyword arguments passed to &lt;code&gt;PIL.Image.save()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d25505037328de42d2bb9b77ce2a8080c548c3a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Additional keyword arguments to be passed to &lt;code&gt;json.dumps()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44267763b2ba037ef36a9bc9c316aa5952a72bc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Additional keyword arguments to be passed to &lt;code&gt;yaml.dump()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a039e15742da0b08194417f7ca2c862180dd636" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Additional keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126895d0cb8cd8317458b7a04e777db64bcf21cb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Additional keyword arguments. Accepted values are &lt;code&gt;getter&lt;/code&gt;, &lt;code&gt;collections&lt;/code&gt;, &lt;code&gt;experimental_autocast&lt;/code&gt; and &lt;code&gt;caching_device&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88d4d5b45c5039a125de79d257c16c3b57a9adb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Any additional arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1300e958721d8045ebe0a080860fdc96df7b8066" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cf1928e03a6f3928b90dd84a12b68f098fa5dc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config(). When restoring from CudnnLSTM-trained checkpoints, must use &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baab6854e8751eaf2a063b24a278b0d157612280" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config(). When restoring from CudnnLSTM-trained checkpoints, use &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7919cf4219f9520c4c6c30c79111e8f7da2c08e6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Extra kwargs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f656abd13bdcdb7f756b601c9224e1542ee2cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Keyword arguments are set as attributes of this object, and are saved with the checkpoint. Values must be trackable objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e7d7e4b5638d7b7ce17393e970840852cb533c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Keyword arguments for &lt;code&gt;op&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6f5faf1c40115fcec4e33caed4d5725acfc49a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Keyword arguments for compute_gradients().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517aa2728571c5f131a54c62a6eaf8840182a637" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Keyword arguments for get_slot().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24da735dfbf01ad8b21a5f5af5285c7eff92fe66" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Keyword arguments of any constant attributes for the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37d6a72dcdb52be10da0a3997ece329c8f95843" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Keyword arguments to apply to &lt;code&gt;func_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1bf710e6ea332d81fbc13c2ee6d343f4a7952c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Keyword arguments to construct a layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b2c85d35de35121175efd7fe1b6bf47c2c87b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Optional keyed arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d528fbc9828071e72e86c6faaa1f010cccc0f259" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Passed to &lt;code&gt;tf.Session.run&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f6e1fb14cd6dbf360856b7f80e75ae939c5e52" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: See</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52a5227facc1bb6c2f768fdbac69df67e111a66" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: See &lt;code&gt;build_toco_convert_protos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487ed26a4883321abba00e6b994d255e4d81c0a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Standard layer keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdcffa6240efbb4ca13440a76dc6658194a1da7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: The keyword arguments that are passed on to &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee96ff9f7ba9fafea225f02aab1ae5b29e9c76eb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: The keyword arguments that are passed on to BaseLayer.&lt;strong&gt;init&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fadd7e2141598d7cdaf515dd01420cd84e6720" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: The keyword arguments that are passed on to BaseLayer.&lt;strong&gt;init&lt;/strong&gt;. Allowed keyword arguments include &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84218b565077de1c1574546630003228b1435aa2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: This allows 'names' which should be a list of names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3afa603ac231efe5cf37c12862c05a3d62ca98" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: This method takes the same args as the DeviceSpec constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cc34dcf8a3cd99e2ed9c8b624d5c067c699ba3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Used for backwards compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3860d2e4959b50bd37402e0ad7cb7f53652aab9c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: Valid keyword args are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a791ae37b87f2dac4fa22e26239eea477a0c381" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: additional keyword arguments to be passed to &lt;code&gt;self.call&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d0a8ec86e262d60c74b9c2168ca37f4738a3d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: additional keyword arguments to be passed to the underlying &lt;code&gt;assertAllClose&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3644cc5137a7ca416c4957abb0bc625b3ef0a06b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: deprecated arguments support. Supports &lt;code&gt;batch_shape&lt;/code&gt; and &lt;code&gt;batch_input_shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c6c6ede987f467427254436f551eb239f09473" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: dict of keyword arguments for base layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753c9ca156126b712b48e46b342d0980d0c1fcd6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: dictionary arguments Legal arguments are the arguments of &lt;a href=&quot;../../model#evaluate&quot;&gt;&lt;code&gt;Sequential.evaluate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3a598db8ae1e30eac4e66c5ea554be02c9b643" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: dictionary arguments Legal arguments are the arguments of &lt;a href=&quot;../../model#fit&quot;&gt;&lt;code&gt;Sequential.fit&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2819b3f3caf27df17f8bbbb4137c8f53681a2492" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: dictionary arguments Legal arguments are the arguments of &lt;a href=&quot;../../model#predict&quot;&gt;&lt;code&gt;Sequential.predict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf41b6c37a79f6d8d37b0ff8bff4b8b7036d885" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: dictionary arguments Legal arguments are the arguments of &lt;a href=&quot;../../sequential#predict_classes&quot;&gt;&lt;code&gt;Sequential.predict_classes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29624cde4c0b09e8cff968b1bbfbc3327faa8bb5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: keyword arguments. Allowed to be {&lt;code&gt;clipnorm&lt;/code&gt;, &lt;code&gt;clipvalue&lt;/code&gt;, &lt;code&gt;lr&lt;/code&gt;, &lt;code&gt;decay&lt;/code&gt;}. &lt;code&gt;clipnorm&lt;/code&gt; is clip gradients by norm; &lt;code&gt;clipvalue&lt;/code&gt; is clip gradients by value, &lt;code&gt;decay&lt;/code&gt; is included for backward compatibility to allow time inverse decay of learning rate. &lt;code&gt;lr&lt;/code&gt; is included for backward compatibility, recommended to use &lt;code&gt;learning_rate&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6caa0ce8490b2ccde45e40b43570f70ab07704cc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: keyword config parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9492ac50f8faed079b23b516bf584c337d68c70" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: keyword named properties with new values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f957d160129e34cd18e385e3768035b95dd1f441" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: rpc_layer - (Optional) Override value for the RPC layer used by TensorFlow. task_type - (Optional) Override value for the current task type. task_id - (Optional) Override value for the current task index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c379ce803193b4410b66f4476f0f886efae48d39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: standard layer keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe976638b658e93c24bb33c5f29cfe306cd657f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: the keyword arguments for the computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618a59e8529d81b667b3a411bb8ade619fdc1f59" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**override_parameters_kwargs&lt;/code&gt;&lt;/b&gt;: String/value dictionary of initialization arguments to override with new values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b302f7d09678287d74f930e81fc10c277a5964" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**params&lt;/code&gt;&lt;/b&gt;: Dictionary of parameter names mapped to their values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc0a52b72ae031cbd1089d8574ab2fcdc1da719" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**params&lt;/code&gt;&lt;/b&gt;: ignored (exists for API compatibility).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d02a9b9efc7290a65ba13f92f9ae2b33bb4c6d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;**saver_kwargs&lt;/code&gt;&lt;/b&gt;: Optional keyword arguments passed through to Saver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546054fb0fe6b499bc215d373da83923c8ae28bc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: * &lt;b&gt;&lt;code&gt;**kwargs&lt;/code&gt;&lt;/b&gt;: A mini-batch of inputs to the Metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea580fe0c4f16196503c47b2d3bbc3af8047f126" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;ClusterResolver&lt;/code&gt; objects to be unionized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77f6c55d62bbc6d844a672019888119f0b20885" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt;s with rank 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf00a48c41659b5ef33ed496a3d77a491b1da8e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: Arguments for &lt;code&gt;op&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96773d2a31a7cac9b2039735e3234d5e81427669" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: Arguments for compute_gradients().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc187d47f00ab583c5941d3fabc7eb5b311f347" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: Arguments for get_slot().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc41a15674b2dfbda9b72a26b2b13c48e350074e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: Arguments to print to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef4cdff4df22e4c0030808c246c54f3ad407aba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: Extra args.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb22647a491adb5ecd2f8978d624c5d460f08b31" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: List of inputs to be converted (should be Tf.Tensor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ce018adb63a3adb574bb2347229a72cf6d87e6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: List of outputs to be converted (should be tf.Tensor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963a00e63d6454d178f014c4e3d75195e80bd82b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: See &lt;code&gt;build_toco_convert_protos&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8fae820e39553d4b5e1c4e1ea410627e2cc59f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: The args to be substituted into the msg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6a7ce73b5b3b3f58226a572167ca4dc8ec0f29" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: The input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eea8bac28031320151ef2da217aa9fa5f547d3f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: The output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c55632ae720541f7ca30d4b748b0db98af25626" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: Variable length list of dictionaries of name, class pairs to add to custom objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a006369b44a14411d9dd313638212ba8c7c36e49" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: additional positional arguments to be passed to &lt;code&gt;self.call&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba4fa9ba3d176698f59d9895d0f9b484be4fd57" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: follows the same semantics as python's xrange. len(args) == 1 -&amp;gt; start = 0, stop = args[0], step = 1 len(args) == 2 -&amp;gt; start = args[0], stop = args[1], step = 1 len(args) == 3 -&amp;gt; start = args[0], stop = args[1, stop = args[2]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6caf5db0d98c2c52f52ebf6503fd0b6f8ff059c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*args&lt;/code&gt;&lt;/b&gt;: the positional arguments for the computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f8ba05adbd3a5c06d32b601a87200cab5f64d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*groups&lt;/code&gt;&lt;/b&gt;: A list of groups of elements. Each group of elements is a list of objects that are equal. The elements in each group must be less than the elements in the group after it. For example, these groups are totally ordered: [None], [1], [2, 2], [3]. **kwargs: optional msg keyword argument can be passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1071766caefd0588fd75ae758826bfdc6543ba2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*inputs&lt;/code&gt;&lt;/b&gt;: Positional arguments that are the inputs to print. Inputs in the printed output will be separated by spaces. Inputs may be python primitives, tensors, data structures such as dicts and lists that may contain tensors (with the data structures possibly nested in arbitrary ways), and printable python objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e856eb1b819e796d6dc06ffe8f03da1f8f8517d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*inputs&lt;/code&gt;&lt;/b&gt;: Zero or more tensors to group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fcbb15822fceea5778533ebed5b4da7b37d267" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*inputs&lt;/code&gt;&lt;/b&gt;: the inputs to contract (each one a &lt;code&gt;Tensor&lt;/code&gt;), whose shapes should be consistent with &lt;code&gt;equation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23503c494dce95ba234ff9313d01d2c0057e0721" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;*structure&lt;/code&gt;&lt;/b&gt;: scalar, or tuple or list of constructed scalars and/or other tuples/lists, or scalars. Note: numpy arrays are considered as scalars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534eced4897395e4ab12a1eba47b24f627ea291d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ALL&lt;/code&gt;&lt;/b&gt;: Enable all features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c0cbd327898298b558dc42ed0e541f837197cf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ASSERT_STATEMENTS&lt;/code&gt;&lt;/b&gt;: Convert Tensor-dependent assert statements to tf.Assert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d67c5aa3c145fdc5c8f6bacf371570f39b6a0e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AUTO_CONTROL_DEPS&lt;/code&gt;&lt;/b&gt;: Insert of control dependencies in the generated code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9155bd18aafa6fffafe11de677ac8039d7a9680c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are unexpectedly close at all elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d562c3ae664074a77cdaad9b8da46c77ecf8497" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/b&gt;: If last_checkpoints is not a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8209187f09238a4a705d1852f26cb67f978ece77" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/b&gt;: If last_checkpoints_with_time is not a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e78a088b5a2d65315b44754068799e2ecdd2fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;GraphDef&lt;/code&gt;s do not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff96b79d04ae72c19434dee231006df59152b93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/b&gt;: If the SavedModel directory already exists and isn't empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4904f7b43098059caf80d12990ec63d0a30973" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/b&gt;: If the variables for the SavedModel have not been saved yet, or if the graph already contains one or more legacy init ops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7aa64cc35ba42d24322b958fe319edf9eb7e82" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/b&gt;: if any of the elements do not fall into &lt;code&gt;expected_set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa750c67495db6f7486a273c04d368c2737a0684" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/b&gt;: if the dictionaries are not equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5a5d8643c9e0e082a6e379434f667561a18332" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/b&gt;: if the value tensor does not have an ordered numeric type (float* or int*), or if there are nan values, or if any of the elements do not fall in the specified range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaebed86bebdf091788e4851acc7876357d579b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: If any of flag name has not already been defined as a flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4191bebe4b77e5393775316aa85072d663730c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: If no inbound nodes are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5895d3b805c966b9fd026457fc4e8f15384407f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: If the attribute cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d7e929a65d4a742f0c115bfd0db9518ebbe93c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: Raised when a flag is not registered as a valid flag name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec373bb9d50143df4e464c0cdedf4fe86eda604" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: Raised when flag_name is not registered as a valid flag name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b50a3df1e7e6d773c5aa5a0193e03b03b9899a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: Raises an attribute error when dtype is neither float nor integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba36fe6445d12509f4b064f7023cab84f55eb7c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: When the RNN layer is not stateful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef132859f3e5452fbcc6c3d4508d498ad35a875c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: if the layer has no defined input_shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c89d8955a749804ef0ebcbd1aa89ddd8520dc1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: if the layer has no defined output shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c0a2f08ebcfb7dae7204f26e6d369af60f2da4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/b&gt;: if the layer is connected to more than one incoming layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9555b755efbe9480e8bc62450bba1c4d38fb35" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;BUILTIN_FUNCTIONS&lt;/code&gt;&lt;/b&gt;: Convert builtin functions applied to Tensors to their TF counterparts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ad354dd3a115bce3cc1bc1b45e810eadcb9c8a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Dataset&lt;/code&gt; of (nests of) windows -- a finite datasets of flat elements created from the (nests of) input elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fb24bcb7d2675b9afdc56eb9788d90578a800e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Dataset&lt;/code&gt; of rank-(N-1) sparse tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbe8083ab9d386d2b74d4f86f2c1d164fe47dc4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Dataset&lt;/code&gt; of strings corresponding to file names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d31edea04f0d8ccd654d857af76f7809753355b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Dataset&lt;/code&gt; with the given options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7ba6e73491e9cd11a0562dc1e47356ad4c0ac4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0cd7ceccf167929c1aff3aad03487da5e78b8e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;RangeDataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c234d938f71da125c51c8cd0971eca40a21e4d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;Dataset&lt;/code&gt; containing the elements of this dataset for which &lt;code&gt;predicate&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76185634143b2f5e2696bf7e848e9a7e3f0d8288" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Dataset&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;Dataset&lt;/code&gt; returned by applying &lt;code&gt;transformation_func&lt;/code&gt; to this dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ed59a2067cf2954f1ee714ae167c1f9b1c1d17" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;EQUALITY_OPERATORS&lt;/code&gt;&lt;/b&gt;: Whether to convert the comparison operators, like equality. This is soon to be deprecated as support is being added to the Tensor class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddee7f50ff6bc7b1e19af329c5dcd50d761d1ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/b&gt;: Raised on any parsing error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c90125bf02c295a35fac9bbf68a177bf748606" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/b&gt;: Raised when given an argument that is a module name (a string), instead of a module object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56d8dd9a087cdd7ba70e453ae60a243f99b6562" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;GATE_GRAPH&lt;/code&gt;&lt;/b&gt;: Make sure all gradients for all variables are computed before any one of them is used. This provides the least parallelism but can be useful if you want to process all gradients before applying any of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63d415bd5bb961b00bc7e52e06cd23b7888fb68" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;GATE_NONE&lt;/code&gt;&lt;/b&gt;: Compute and apply gradients in parallel. This provides the maximum parallelism in execution, at the cost of some non-reproducibility in the results. For example the two gradients of &lt;code&gt;matmul&lt;/code&gt; depend on the input values: With &lt;code&gt;GATE_NONE&lt;/code&gt; one of the gradients could be applied to one of the inputs &lt;em&gt;before&lt;/em&gt; the other gradient is computed resulting in non-reproducible results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023b3e6cc7bb97723855ae5f10d87ff29cd32001" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;GATE_OP&lt;/code&gt;&lt;/b&gt;: For each Op, make sure all gradients are computed before they are used. This prevents race conditions for Ops that generate gradients for multiple inputs where the gradients depend on the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4b696d35f662aa65a703f93757d22d3061f441" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/b&gt;: File not found. Unable to parse input file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6478729d308f6adf3742382d54c732d7859f04e6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;path&lt;/code&gt; cannot be opened for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bbd0082ffdf49b8f57f60c3c6bf15867cc8e11" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;path&lt;/code&gt; cannot be opened for writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1caf21b33af99ff6b729a310a934baa9edec6c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/b&gt;: If the path is not found, or the resource can't be opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0229acd487deb3721ea1f2a1f756548c1cfd2aca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/b&gt;: In case of an invalid savefile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18bbd406261ca94e2a6511736713d360464e308" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;IllegalFlagValueError&lt;/code&gt;&lt;/b&gt;: Raised when --flagfile is provided with no argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bffeb5d602ed01ecc3860bf484869a0616b27ad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;IllegalFlagValueError&lt;/code&gt;&lt;/b&gt;: Raised when value is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6190d1e6bff501b4394f99c6e78aabdbfe8ee2fc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: If h5py is not available and the weight file is in HDF5 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec59b5c834ae33c6e3504b6f7b9362342314ad0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: If h5py is not available when attempting to save in HDF5 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec9fa771c84da79ae8831b767d3bcbc26dc2ef7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: If save format is hdf5, and h5py is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eac89ed1ffa0e2d6d6ee029945c0c1e0338a8eb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: If the Kubernetes Python client is not installed and no &lt;code&gt;override_client&lt;/code&gt; is passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ea43185d0376d2b893a6e6fbbd466b130248d4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: If the googleapiclient is not installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbba7db04ce5a59803c2ed3a70a08571b184173" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: if PIL is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b53c2e5a9817487d8b9fafb8f3efa9e92f8f5f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: if graphviz or pydot are not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241af8499a55de0757f2e0add430225fc27bb41c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: if loading from an hdf5 file and h5py is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65cbafb78534f4610dd0727ca3abda4b3ace380" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: if portpicker module was not found at load time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2252712a6661dd382b7b54b7a9b04dc5ade498b0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/b&gt;: if yaml module is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba67ec3e5b60e2680d1653f852fa0f0fb2628be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/b&gt;: If the values in axes exceed the rank of the corresponding tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398431b2b3f4b93f7e9dcc1f2b0dead5978c43d9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;x&lt;/code&gt; does not have rank at least &lt;code&gt;rank&lt;/code&gt;, but the rank cannot be statically determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57005d63cfa56f5db5e0710f6b145a9212d4e87" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;x&lt;/code&gt; does not have rank in &lt;code&gt;ranks&lt;/code&gt;, but the rank cannot be statically determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2643d29230bc9a53e93223835109c606f1a465c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;axis&lt;/code&gt; is out of range &lt;code&gt;[-(D+1), D]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979671eeb82fc4acdc01bf5d79d8bba4890cc620" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;num_required&lt;/code&gt; &amp;lt; 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cc07529486fcfde705f1d4f33d0970b43e8607" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: If grad is of the wrong shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4f2b4005113595697c095d7be2097c4cd1ccf9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: If num_required &amp;lt; 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197200086a00a476c5b7c39ebe035eb62c9f2d4c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;logits&lt;/code&gt; is empty or &lt;code&gt;axis&lt;/code&gt; is beyond the last dimension of &lt;code&gt;logits&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd1c703ccae655fdf118a2d0edb4f58d824683b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;low &amp;gt;= high&lt;/code&gt; and &lt;code&gt;validate_args=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2daeb45c8364bab647c518ca846aade39efb5043" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;num_shards&lt;/code&gt; or &lt;code&gt;index&lt;/code&gt; are illegal values. Note: error checking is done on a best-effort basis, and errors aren't guaranteed to be caught upon dataset creation. (e.g. providing in a placeholder tensor bypasses the early checking, and will instead result in an error during a session.run call.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e44e2b94adf745a84f5a60e2537ea139847259" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x != y&lt;/code&gt; is False for any pair of elements in &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ceeb4fe634e7e59f43fc9adc6a3cf93cdecbd93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x != y&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a42c8792c1f9bdc28c26935d08a0593c6740647" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x &amp;gt; 0&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; is statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7624b0be357624ce3fe15abd72311bf342aae2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x &amp;gt; y&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b40b5c0c20188b4aa47c072fc5f4078e3ad094" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; is statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99228a663d9377f004453094960181376fc8208" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x &amp;gt;= y&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0149b821fe1288f33b064c1660c73e4b720f18fe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x &amp;lt; 0&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; is statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd473807e971e40306880f72b0d5b0f78b6048b1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x &amp;lt; y&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc065423dd873ce5d6529940e3f483700dc55e19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x &amp;lt;= 0&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; is statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb899a4503644a9f221b822da172f916613c8d09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x &amp;lt;= y&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dcaa2fcac181db47291fd987e3ce701d078277" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x == y&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229c3bee5b5f1e3aa28e1541cb3200b48a399cdf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x&lt;/code&gt; does not have rank &lt;code&gt;rank&lt;/code&gt;. The check can be performed immediately during eager execution or if the shape of &lt;code&gt;x&lt;/code&gt; is statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e33b8ab5fe08bc6b67c1d80e7b3f0d6e51dd7e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x[i] &amp;gt; 0&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; is statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e004e0fbc765f685e5ffa56f978aedf26008b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x[i] &amp;gt;= 0&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; is statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c87f0fb51ae14e2cb7d58f3f3dd21b55b5089d8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x[i] &amp;lt; 0&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; is statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9679c5d15645c241014ab94c7963bd83cc6a8f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: if the check can be performed immediately and &lt;code&gt;x[i] &amp;lt;= 0&lt;/code&gt; is False. The check can be performed immediately during eager execution or if &lt;code&gt;x&lt;/code&gt; is statically known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5098ecb09b083d39cb0feca36e8175ece03c7798" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: image must have 1 or 3 channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae208d087e831712d31e88db53da223e2dc6e01d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: input must have 3 channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278af69ba14f1f1f5ac3c8da240f2b2e38285bb8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: quality must be in [0,100]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac05e984a6c87f346e44f369fe8a82970f4ea6b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;name&lt;/code&gt; does not correspond to a tensor in this graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948af44749dc50a4c0e3609d7e95fe883b3d97de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;name&lt;/code&gt; does not correspond to an operation in this graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e96b9d7302e2261a6617c96b75eefa1b17441f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;obj&lt;/code&gt; is not an object in the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57e363e52ff63219d9fb30ac13a7071b66150d3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;tensor_info&lt;/code&gt; does not correspond to a tensor in &lt;code&gt;graph&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85145d48caff36d3b4ac9442288dcea58bd828de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/b&gt;: If there are conflicting keys detected when merging two or more dictionaries, this exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3768476dffefe573baf363206c6d1526fea10d18" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;LISTS&lt;/code&gt;&lt;/b&gt;: Convert list idioms, like initializers, slices, append, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e059f0882e10e30f6dad04cd87bc9bc5d7791e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/b&gt;: if one of the operations between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; does not have a registered gradient function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6ca2f63674865115897b307f6ab4a39d6e3616" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/b&gt;: if one of the operations between &lt;code&gt;xs&lt;/code&gt; and &lt;code&gt;ys&lt;/code&gt; does not have a registered gradient function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6581d336e267cedbe01bea15b4727c474ee00a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;NAME_SCOPES&lt;/code&gt;&lt;/b&gt;: Insert name scopes that name ops according to context, like the function they were defined in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1243f244cfbed3303750862dd46f5bbb5aa23f8b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self.is_non_singular&lt;/code&gt; or &lt;code&gt;is_square&lt;/code&gt; is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f058b4b3d4403894559bda692c3ff07d11dfa77" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self.is_square&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11634fde8e1d76a0f917f0952211ab392025a47" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/b&gt;: If no KL method is defined for distribution types of &lt;code&gt;distribution_a&lt;/code&gt; and &lt;code&gt;distribution_b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d7d34c51508b63d2366ec6c433c5782e889d39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/b&gt;: If the model is a subclassed model, and serving_only is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9f527991471f60ca88cbd6a3c3f1dfb4e1d195" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/b&gt;: linalg.lstsq is currently disabled for complex128 and l2_regularizer != 0 due to poor accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85494ac3dc246d29c26505d2c45240d2c4bf42cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Note&lt;/code&gt;&lt;/b&gt;: This is matrix product, not element-wise product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b15cf0786fc67afdfd90e1c9b2982b3c485190" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Note&lt;/code&gt;&lt;/b&gt;: This is matrix-vector product, not element-wise product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc3d356ccd335ca1974b4baed2fed7e589bbb6f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/b&gt;: When the file to be loaded is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c92dc880702ce20640921b4187895dd1b54ab8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;OpError&lt;/code&gt;&lt;/b&gt;: - If &lt;code&gt;new_shape&lt;/code&gt; has dimension sizes that are too small.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132d9e736403c275e39462431dea66ff06463f56" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Pseudocode&lt;/code&gt;&lt;/b&gt;: ``` inner_products = [] for xi, yi in zip(x, y): inner_products.append(xi.dot(yi)) result = stack(inner_products)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d582d1f328b8e13b79e83c787e98b5f8870e6c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If _create_slots has been overridden instead of _create_vars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509b23165f905ec8ca3caee082fefbb0ab0fbf5c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If a function is passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dced22801c8c90f2450ecbc156e0a4e69263d3a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If a registered conversion function returns an invalid value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1015261e20c3edeb5224fb4f9408ad3fb3b79dd5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If an empty TPU name is specified and this is running in a Google Cloud environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014d65dcfd733d791a4afb34de9a3a34c8b15a52" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If any of the model checkpoint paths conflict with the file containing CheckpointSate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a7ea61f3bf63eb3459872b3afb04173d5126db" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If any of the pods returned by the master is not in the &lt;code&gt;Running&lt;/code&gt; phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2d51f20aaa7695b26a8e21a871601358ce93a0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If any thread is still alive after &lt;code&gt;request_stop()&lt;/code&gt; is called and the grace period expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e1a16b1dee7a12e9aa68e4979df6b06be8b545" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If autoresolve_task is not a boolean or a callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7062d3f5b5812acd409c070fe3ae394ad32ca498" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If called in Eager mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42b1e4a950e651edeb24e5d40d77bf636ea2c96" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If called inside a &lt;code&gt;with strategy.scope():&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfae12dffe39f711d41bc518eeb69cf926235b1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If called on a non-persistent tape with eager execution enabled and without enabling experimental_use_pfor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9727be244822477e6c4b07db41850dc3fac6735" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If called with a non-chief Supervisor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f471041e0110e46b10c557b1c9e77b5e8aca5e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If called with eager execution enabled and &lt;code&gt;loss&lt;/code&gt; is not callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cd5facb581bfa4ad795ff8df220059794cd82c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If called with eager execution enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af52c00ffb03ab4e60547bff555b732e0e5ad77" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If called with eager mode enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9492a923aa4454c396aa4ff0bbf819a70d573b0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If called with partitioned variable regularization and eager execution is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3749204b340ec04c306caa9368c66e55f0295af2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If delegate loading is used on unsupported platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a745de055451fb3504a00ccb25895f1a5d06e449" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If device scopes are not properly nested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead2a40e7298832ad06184e853bf4e3ca77efb69" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If eager execution is enabled and a function is passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497fbdd886a26dc0c556a7111f8003c7049aece5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If eager execution is enabled and&lt;code&gt;var_list&lt;/code&gt; does not specify a list of variables to save.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f7cacb3efb94480e35667068b1fb55f4467b7e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If eager execution is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b905d66e48e275529428795ecc3b420be57345" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If no TPU devices found for eager execution or if run in a tf.function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839cf698a7217f0fc5c337e7017d506cf2d406e5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If not inside of tf.function and not executing eagerly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5927908e79b3d841963a6e55a591220a6bbaebe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If not using control flow v2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35521a0bd7496e7a1bbe5c89720356c38b16dbca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If requested more GPUs per node then available or requested more tasks then assigned tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880a98211483eaeb4716c9703128c083de5652f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If result type is incompatible with &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506ceaf24339643292cac1cf1c95bbdbc2a3f38b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If save and restore ops weren't built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaae025560a713bfbda35ad87c5eaf393637260" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If the current thread has no default &lt;code&gt;tf.contrib.summary.SummaryWriter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85418c87bbf14599d5d35d5771f603671c6ad601" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If the model cannot be initialized or recovered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05515f85b9fcdbb2a3e8ac3ac57e241b2c36e2c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If the model was never compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f0ad2432a8cdc4bd22574fe5860a67ab082a0c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If the provided TPU is not healthy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba824746154fd89d431ed62a87787fdb64ea3e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If the task_type or task_id is not specified and the &lt;code&gt;TF_CONFIG&lt;/code&gt; environment variable does not contain a task section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bae3198be2ca35634a20e1638b12658260062c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If this &lt;code&gt;Session&lt;/code&gt; is in an invalid state (e.g. has been closed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902c5c9c8fcc202388d5ca5bde7e4770c6f62250" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If this method is called inside defun.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f52bc0b48f760dac5b959ba841c0a7774393fdc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If we cannot talk to a TPU worker after retrying or if the number of TPU devices per host is different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14945273bf7f23fbca73aa749047cab88c9af9ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: If you should use &lt;code&gt;_distributed_apply()&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5603c025ad455c46aa72fd26321e62774b152f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: MetaGraphDef associated with the tags cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a4da64c899b09bcb27d762911f74c6b81e8c03" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: Runtime is already initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af422720502d0f33825d1d22e4e7aac5251274b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: if called in Eager mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14747683ac9445ffc65a39b43292b9ee0feeb787" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: if called inside the context of the tape, or if called more than once on a non-persistent tape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bb76dde093fdae7b8475127834b8784d0193be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: if called when eager execution is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a300a77d98d06c8a44f0458d9cc29ee9734719" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: if eager execution is enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a5f3201bf81d28b3ae117b68ea0dc8b957269a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: if eager execution is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab62915b5d04b2af8d34a2f3ec8efcbde2621a07" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: if eager execution is not enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a684ffd096fdf5b7c88e3214692086f547dee51" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: if graph state is incompatible with this initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2a35aa5e7ee3df8c6ceb92a9b6f8a78951609b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: if the Supervisor was created without a &lt;code&gt;logdir&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307614642a0c3fdfc80c3ebe9fe7024d701bdf0c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: if the tape is not currently recording.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd39f8fadff3e192e95fdafedb39943c24b2ce3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: when unable to load the library or get the python wrappers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868f26d3ebcba25e2904f5fd89b417afc8cb93e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/b&gt;: when unable to load the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d736a84875710c668a4b6b4373291ca44cd581c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;step_fn&lt;/code&gt; has called &lt;code&gt;request_stop()&lt;/code&gt;. It may be caught by &lt;code&gt;with tf.MonitoredSession()&lt;/code&gt; to close the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc39ecbc465d7d78ac5c5a338a4b2e65731bb97" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;T&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83616d63ee48702131b2e11962c49cb89181a02" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Targmax&lt;/code&gt;&lt;/b&gt;: An optional &lt;a href=&quot;../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f141990d5b4bb0ab5d9a3bee109a48afc1b76b04" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Tcomplex&lt;/code&gt;&lt;/b&gt;: An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.complex64, tf.complex128&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#complex64&quot;&gt;&lt;code&gt;tf.complex64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15137993fa09452d5eb261730db015fc166ea0b0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Tout&lt;/code&gt;&lt;/b&gt;: A list or tuple of tensorflow data types or a single tensorflow data type if there is only one, indicating what &lt;code&gt;func&lt;/code&gt; returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca53fa95084c1a4b92098bc51bdd04c5b673b01c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Tout&lt;/code&gt;&lt;/b&gt;: A list or tuple of tensorflow data types or a single tensorflow data type if there is only one, indicating what &lt;code&gt;func&lt;/code&gt; returns. stateful (bool): If True, the function should be considered stateful. If a function is stateless, when given the same input it will return the same output and have no observable side effects. Optimizations such as common subexpression elimination are only performed on stateless operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17402ee5689bcbc051b2ca1b21e28e03bb1a5936" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Tout&lt;/code&gt;&lt;/b&gt;: A list or tuple of tensorflow data types or a single tensorflow data type if there is only one, indicating what &lt;code&gt;func&lt;/code&gt; returns; an empty list if no value is returned (i.e., if the return value is &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c684a66a292f1bb3dba13b485bf0dd3d32cae09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Treal&lt;/code&gt;&lt;/b&gt;: An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.float32, tf.float64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de376729d63bda362955fbbadd22cc7078eca89" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/b&gt;: List: if &lt;code&gt;greedy&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns a list of one element that contains the decoded sequence. If &lt;code&gt;false&lt;/code&gt;, returns the &lt;code&gt;top_paths&lt;/code&gt; most probable decoded sequences. Important: blank labels are returned as &lt;code&gt;-1&lt;/code&gt;. Tensor &lt;code&gt;(top_paths, )&lt;/code&gt; that contains the log probability of each decoded sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4532c8dabaf76ca1485402244bddc53959d439c9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;structure&lt;/code&gt; is or contains a dict with non-sortable keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735664b0a3c72e7b31fbf9a49235d07c060b3c4b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;x&lt;/code&gt; is not a dict or array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f80a9bb9dea99ee939264be866598e87f22402d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If 'graph_def' is not a graph_pb2.GraphDef proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6814d8575c4de3813b69d057ae949a6283da89" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;a&lt;/code&gt; is an invalid types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53279ca09229bde28baa66e9a3dc0d8dc4d1595" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;branch_fns&lt;/code&gt; is a list but does not contain 2-tuples or callables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73b557a49a78ad4a1153879a741c8567ced6124" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;branch_fns&lt;/code&gt; is not a list/dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c59effc643f541f9a715497144e2ed7b1a4d709" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;bytes_or_text&lt;/code&gt; is not a binary or unicode string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cb1e78947934857fada320c41ab5fd5c9a6349" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;cell&lt;/code&gt; is not an instance of RNNCell, or &lt;code&gt;loop_fn&lt;/code&gt; is not a &lt;code&gt;callable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410f35deae11d29238a9585bb55a6674c319ead7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;cell&lt;/code&gt; is not an instance of RNNCell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c567867b8fef5237d3e3722dc7f69dda9577b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;cell_fw&lt;/code&gt; or &lt;code&gt;cell_bw&lt;/code&gt; is not an instance of &lt;code&gt;RNNCell&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bba9020bb39ed8a5692d16c8c751ce086f3f98" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;cluster&lt;/code&gt; is not a dictionary mapping strings to lists of strings, and not a &lt;a href=&quot;clusterdef&quot;&gt;&lt;code&gt;tf.train.ClusterDef&lt;/code&gt;&lt;/a&gt; protobuf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43de509ae29ef1cf19b15b478794f471db708cca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;control_inputs&lt;/code&gt; is not a list of &lt;code&gt;Operation&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc65580134791f30babb2a9975cce047325af77" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;dataset&lt;/code&gt; and this iterator do not have a compatible element structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c25af7149ede3d6782e1ed1f75c9529c118c410" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;dataset_or_iterator&lt;/code&gt; is not a &lt;code&gt;Dataset&lt;/code&gt; or &lt;code&gt;Iterator&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedba431a765c1ad1024b70c6e373f9f6410fef0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;diag.dtype&lt;/code&gt; is not an allowed type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb398150cb1882150c5c9d1a3450576b2b8a786" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;estimator&lt;/code&gt; is not of type &lt;a href=&quot;../estimator&quot;&gt;&lt;code&gt;tf.estimator.Estimator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340c6bf7c027cc54038d25e5c34c932d0324e0ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;fetches&lt;/code&gt; or &lt;code&gt;feed_dict&lt;/code&gt; keys are of an inappropriate type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6771281bd7b13852490a389b31fa84e3d3744b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;fetches&lt;/code&gt; or &lt;code&gt;feed_list&lt;/code&gt; cannot be interpreted as arguments to &lt;code&gt;tf.Session.run&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b784a1f37b715b54dea0d63302a0c6186995ce7a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;fns[i]&lt;/code&gt; is not callable for any i, or &lt;code&gt;default&lt;/code&gt; is not callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2089846a827c168ae50c690a7b6ee2c1d563093f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;func&lt;/code&gt; is not callable or if the structures do not match each other by depth tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca24fcccf1f766498e0d0acffccc928369949f23" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;grads_and_vars&lt;/code&gt; is malformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eefde643eff8c57cf70a13e5e505a529c321b69" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;graph_def&lt;/code&gt; is not a &lt;code&gt;GraphDef&lt;/code&gt; proto, &lt;code&gt;input_map&lt;/code&gt; is not a dictionary mapping strings to &lt;code&gt;Tensor&lt;/code&gt; objects, or &lt;code&gt;return_elements&lt;/code&gt; is not a list of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c278411d6b49868b249d2c881c7894da1b608a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;layer&lt;/code&gt; is not a layer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e57f83e63550570e85c4e3abb093859f6d0ae5f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;name&lt;/code&gt; is not a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac43f70d4d8fabb9947383d689e3f3db515ddda" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;num_rows&lt;/code&gt; or &lt;code&gt;batch_shape&lt;/code&gt; is ref-type (e.g. Variable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d693a8f4dfe38bec2795e39c3a76f92a71db8e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;obj&lt;/code&gt; is not a type we support attempting to convert to types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc3dddcca58057b7bb1f030038ed5adb1666f44" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;op_type&lt;/code&gt; is not a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037dd9b111c22dfc01bdf055059eb787c1257db9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;op_type&lt;/code&gt; is not string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3b7c894cafa45ce6b6a56f966e3dec64e8acee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;op_type_map&lt;/code&gt; is not a dictionary mapping strings to strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e682f3d2b87015d6ec72ac0b8c0ff6b373467fc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;pred_fn_pairs&lt;/code&gt; is a list but does not contain 2-tuples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4b71a6e8613f5d2f67d3566586d9ccd149ac7b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;pred_fn_pairs&lt;/code&gt; is not a list/dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c49d3301be62e3195d8b869f162bb830a0daae1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;pred_fn_pairs&lt;/code&gt; is not a list/tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f85f4b97b5901def358774a4127adda771bcc0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;reader&lt;/code&gt; is a &lt;a href=&quot;../../compat/v1/readerbase&quot;&gt;&lt;code&gt;tf.compat.v1.ReaderBase&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c12c5a9b0ba0ae0256aa6675da99f815fe9917a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;reader&lt;/code&gt; is a &lt;a href=&quot;../../readerbase&quot;&gt;&lt;code&gt;tf.compat.v1.ReaderBase&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960798487186102276c0efb726c5910715d7cd18" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;sess&lt;/code&gt; is not a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b112b1817008b3df42093df67b87f66fd52bfb56" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;sp_ids&lt;/code&gt; is not a &lt;code&gt;SparseTensor&lt;/code&gt;, or if &lt;code&gt;sp_weights&lt;/code&gt; is neither &lt;code&gt;None&lt;/code&gt; nor &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59fa867994cf2cfac7897034232527ca6fa5ffe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;sp_input&lt;/code&gt; is not a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364d2f9799ba0185ef964ce8f4d79ae296af3809" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;sp_inputs&lt;/code&gt; is not a list of &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c3da81734a0e7e0554ed4e2e81c3c8148536d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;sp_values&lt;/code&gt; is not a &lt;code&gt;SparseTensor&lt;/code&gt;. Or if &lt;code&gt;sp_ids&lt;/code&gt; is neither a &lt;code&gt;SparseTensor&lt;/code&gt; nor a list thereof. Or if &lt;code&gt;vocab_size&lt;/code&gt; is not a &lt;code&gt;Tensor&lt;/code&gt; or a Python int and &lt;code&gt;sp_ids&lt;/code&gt; is a &lt;code&gt;SparseTensor&lt;/code&gt;. Or if &lt;code&gt;vocab_size&lt;/code&gt; is not a or list thereof and &lt;code&gt;sp_ids&lt;/code&gt; is a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b32d9164e9cee742d70918d44de03cfe52a06f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;t_list&lt;/code&gt; is not a sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddc0a76ea9c92067caf159fae437750b6ad83c4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;type_enum&lt;/code&gt; is not a value &lt;code&gt;types_pb2.DataType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c866145625fb5089c1124f8f739364c7123a06" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;type_value&lt;/code&gt; cannot be converted to a &lt;code&gt;DType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4787897d6cc8b70024e5d95602ded6b7501ed62f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;values&lt;/code&gt; is not iterable or is one of &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, &lt;code&gt;np.array&lt;/code&gt;, &lt;a href=&quot;../compat#bytes_or_text_types&quot;&gt;&lt;code&gt;tf.compat.bytes_or_text_types&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4d2f761581271774bea0b46b2d6451db56cc03" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;var_list&lt;/code&gt; contains anything else than &lt;code&gt;Variable&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187aeb5324b92b29e3ece18ffbc5b466098f1b70" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;var_list&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e02ea3e253e6a05a49d842fd2d3cfaa9fc6247d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x.dtype&lt;/code&gt; is anything other than non-quantized integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0b1ffaf581439efab778dd0778f99c489eea0b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x.dtype&lt;/code&gt; is not a non-quantized integer type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce12a962cea7a8d394799cd1bf933d55e644abe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; have different dtypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f574048340437185b0744c76142918f05874b6c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; cannot be cast to the &lt;code&gt;bfloat16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4b4bc6589bbfadb31e1c1f02b3bf782e502b36" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; cannot be cast to the &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72eac19fa81ae665d816790a51093a90a9dcbb51" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; cannot be cast to the &lt;code&gt;complex64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f682f554b6084b7acc19d928ea62526cd41240b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; cannot be cast to the &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195ed6766f752c0322d170a8dbaa387d6c9f7a39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; cannot be cast to the &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1cf69bb2fdd1f43c6b4cf8eb095c0decd4d150" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; cannot be cast to the &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198bdbfa2543e6a0258605df6c92792cb24b5e85" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; cannot be cast to the &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643d15330a1656064c849d1b502c493c1745144d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; cannot be cast to the &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04d88d4301ac953009760cce6011ce22a820be9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;x&lt;/code&gt; is not a numeric tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e61209f5e511495cffbc6503d5ffee1f39c7c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;y_true&lt;/code&gt; cannot be cast to the &lt;code&gt;y_pred.dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb00d8410664d4864fefc9946d7660b7f5844fce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If a row partitioning tensor has an inappropriate dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f582266fe5b52ab41e8eb65f2df1abfdef04795e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If all operators do not have the same &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbf8521a7b3e6dd7c3bc75613ab371e178b3a19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If any argument does not have the expected type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac9aef3106a4220d5f870b20336bb7e21baf322" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If any argument is not a subclass of &lt;code&gt;ClusterResolvers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fa436cc173f383ca7f04107f71b3329eaada13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If any of the arguments is not of the expected type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f598570f1dd01da0cf1ce4341ead8467c2aba7f0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If any of the arguments is not the expected type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e520a5e161d2a58a7367ca40bdef96c48d5a8fc7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If any unsupported dtype is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4c1844390062b7a722ef47cbfd592f0c1f59aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;Tensor&lt;/code&gt;s. Use &lt;a href=&quot;../../math/add&quot;&gt;&lt;code&gt;tf.add()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cd01029ed52dd0f6aadc17d339a7ab2ba8c40d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;Tensor&lt;/code&gt;s. Use &lt;a href=&quot;../math/add&quot;&gt;&lt;code&gt;tf.add()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a9f6885b9bba589ecf53bc0409f67494d6dc58" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;meta_graph_def&lt;/code&gt; is not an instance of &lt;code&gt;MetaGraphDef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e2e8d8a25d9cd10630977d263fc40a74a772a6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If dims cannot be converted to a list of dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405d6b2a3c527bf309a23250f510a5d47a585287" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If dtype of &lt;code&gt;on_value&lt;/code&gt; and &lt;code&gt;off_value&lt;/code&gt; don't match one another</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbf2c6b75c5c8284c116bd20fb84e8896e67e95" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If dtype of either &lt;code&gt;on_value&lt;/code&gt; or &lt;code&gt;off_value&lt;/code&gt; don't match &lt;code&gt;dtype&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b1904b6f0b25d8ed0a74d15488eaeef7e350cc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If dtype of the input is &lt;code&gt;int32&lt;/code&gt; and dtype of the &lt;code&gt;clip_value_min&lt;/code&gt; or &lt;code&gt;clip_value_max&lt;/code&gt; is &lt;code&gt;float32&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24511474ca08d6acd5d52bbc408553d137184039" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If dtype of the input is not a floating point or complex type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bcdba8b535601878fee16a366fa67fde3dab2e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If either &lt;code&gt;hypothesis&lt;/code&gt; or &lt;code&gt;truth&lt;/code&gt; are not a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afd419891e2a5ddbea4f7d5bc75b260dd50d0d8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If either argument is not a &lt;code&gt;GraphDef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b033409f29b3f6d0b06fdda0bbd1ce6d7e62d19b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If exactly one row partitioning argument was not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be56bfc355a11153646532e5de0c77e827735c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If input_signature contains a non-TensorSpec object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fd0015d01e4f6b0edb370d153fefebe55f8052" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If inputs are invalid types, or if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; have different types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c07e0909829513f3e56d3eb087aeea50beeae60" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If no conversion function is registered for &lt;code&gt;logits&lt;/code&gt; to Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af9b50cb0891b6ea63d13f75e3172a9a6977932" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If no conversion function is registered for &lt;code&gt;value&lt;/code&gt; to &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b884393ddccb9271978bd5f894d004bf7c1db24" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If shape is not convertible to a &lt;a href=&quot;tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt;, or dtype is not convertible to a &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06c276eddfcf754937539c6cd77e953e9102dd3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;datasets&lt;/code&gt; or &lt;code&gt;choice_dataset&lt;/code&gt; arguments have the wrong type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78681b486936cf919a4b644ce9e73787ba63667" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;datasets&lt;/code&gt; or &lt;code&gt;weights&lt;/code&gt; arguments have the wrong type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8309e7e829987df332c608c01a2a39df631d74c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the arguments are not an allowed type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4782284b74a84f6c93012009683601a3c965bfc1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the arguments do not have the appropriate type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fc5a982fa80ce78e20d805e76c96f9935f7cc8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the arguments have the wrong type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0eacb0a264d08d28c58317a71c368a33e2fd723" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the feature columns are not of ths correct type (one of _SUPPORTED_FEATURE_COLUMNS, _TPU_EMBEDDING_COLUMN_CLASSES OR _EMBEDDING_COLUMN_CLASSES).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bf8ab58bd092e62be517c6c3985317aa9fd98d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the global step tensor has a non-integer type, or if it is not a &lt;code&gt;Variable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0fb9e833b6916972cf37e9d1ed8606a58fdcc4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the indices in &lt;code&gt;key&lt;/code&gt; have an unsupported type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854a2291451a195de1cbd580b09bf154d1c21b53" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the initializer cannot create a tensor of the requested dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a3b71bbcd115cfa6b1b96578447028b3ab563a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the input &lt;code&gt;value&lt;/code&gt; is not one of the expected types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08235f9f1cde42c440c8a202da91934be1f19f84" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the inputs are complex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b0a787ce2adf50bfbe2d0900bea6b6f7be0d99" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the op is not an &lt;code&gt;Operation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79295c83202b02568e0bc07170cb5d2c3e456438" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the slice indices aren't int, slice, ellipsis, tf.newaxis or scalar int32/int64 tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fdfec5211290516d673328d7124aaab1a75365" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the structures of &lt;code&gt;output_shapes&lt;/code&gt; and &lt;code&gt;output_types&lt;/code&gt; are not the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61f884774d4844e6e26efc65e8abb4038e62087" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the tensor's data type doesn't match &lt;code&gt;tf_type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc42721b0764513dabb6bbca95bd00a4cf555808" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the tensors data type doesn't match &lt;code&gt;tf_type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38048c7de65406cce82cc4f709ba32dd7b1f3391" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: If the two structures differ in the type of sequence in any of their substructures. Only possible if &lt;code&gt;check_types&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b5c34311d97af67f2514ff379b52a61c06410f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: Raised on passing wrong type of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460f9e84fc63c3ff8559fc421b989daaff3ca032" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: Raised when the argument has the wrong type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55044479ac1a9de87191ac9578da6898e0a8b19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: Real and imag must be correct types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111b88dfe1023107569adac5a86d54ce339c13ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: The nest is or contains a dict with non-sortable keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4071516b0354efe2c0aa5faf6d5b14e5d4490c08" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: TypeError: If the slice indices aren't int, slice, ellipsis, tf.newaxis or int32/int64 tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15b231d2e66c5d708e3535e5d3284f38fc5e5ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: When &lt;code&gt;queues&lt;/code&gt; is not a list of &lt;code&gt;QueueBase&lt;/code&gt; objects, or when the data types of &lt;code&gt;queues&lt;/code&gt; are not all the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af13b4ac3fab2601f2fdc6f4d06dfa3a4097781e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: When enum_class is not a subclass of Enum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132bff065ac70af762229457f07c4a569addc810" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: When no keyword arguments (kwargs) are passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408f1d9f5471a70d35be141d7366bfe3ae465d09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if 'summary' is not a Summary proto or a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2967839fa659f3b52b421db82bf57a60f838d567" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;cell&lt;/code&gt; is not an &lt;code&gt;RNNCell&lt;/code&gt;, or &lt;code&gt;keep_state_fn&lt;/code&gt; is provided but not &lt;code&gt;callable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece0f4b25c2a357d5f45b6300d047f8b2766dda6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;concentration&lt;/code&gt; and &lt;code&gt;rate&lt;/code&gt; are different dtypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e1ce37766b2a7aae47047c5a3867ff22f72f55" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;cond&lt;/code&gt; or &lt;code&gt;body&lt;/code&gt; is not callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fd9e4c39f1e4c0d6d29f2bd8a491d3c7f8333a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;config&lt;/code&gt; is not a dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601a5007223c1ba40aad04870fc63f185da76b8c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;data&lt;/code&gt; is not a Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da26591dc6e08a3a78f974771f4bd18736647b44" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;dataset&lt;/code&gt; is not a &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; object. InvalidArgumentError (at runtime): if &lt;code&gt;dataset&lt;/code&gt; does not contain exactly one element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f62a82734c2c08674d7b471276b091ca5ee229a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;default_name&lt;/code&gt; is passed in but not a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55488796c79756157994a25681454cf006e3b7cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;default_value&lt;/code&gt; is an iterable but not compatible with &lt;code&gt;shape&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3312cdd904e77642774d9fb4c8854dbfb528ef08" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;default_value&lt;/code&gt; is not compatible with &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63177fec9498ee421e174530acf4884bd341d4a6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;fn&lt;/code&gt; is not callable or the structure of the output of &lt;code&gt;fn&lt;/code&gt; and &lt;code&gt;dtype&lt;/code&gt; do not match, or if elems is a SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e648241e9bf4e29a10119c32fd196f917d7cbd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;fn&lt;/code&gt; is not callable or the structure of the output of &lt;code&gt;fn&lt;/code&gt; and &lt;code&gt;initializer&lt;/code&gt; do not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca2293ae016c85167b208fe6ad0bf1e1f03296e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;fn&lt;/code&gt; is not callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f7e4bb2b1f77add74aad2c31315e568f16934b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; are of different dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e7224bce2ae8815b29c1591df741c514b6b691" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; have different &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f98f0692d72ceebf2c64a1e2775af30e8088749" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;pad_values&lt;/code&gt; is set to an invalid type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2754dd24d1e6e7e3eba098da11e96d3fb84c861f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;sess&lt;/code&gt; is not a &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;tf.compat.v1.Session&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4faa2f4e88f493a586ffb29eb53c6565bc1ee43f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;sparse_delta&lt;/code&gt; is not an &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf82d791499cb9af33e41d6fefd2ae99dd4c66c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;true_fn&lt;/code&gt; or &lt;code&gt;false_fn&lt;/code&gt; is not callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1f32a2c31b4262208721683ecf93320f7c3293" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;x&lt;/code&gt; is not a numeric tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de6193b37b47c765c951c8541d13da651c4de30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if an element contains a non-&lt;code&gt;Tensor&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309bc469261a66b2eaaf0430dc5bc613192b2ae1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if any dimension in shape is not an int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960b1d1e3816ef6036d192928e8749dba1cc8e32" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if any dimension in shape is not an int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc65e038b17a3a1fefb4421a15db88bba47936d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if any of the inputs is not a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ded8f09f37556c790b06cfb3bc24d2f2249fdd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if control inputs are not Operations or Tensors, or if &lt;code&gt;node_def&lt;/code&gt; is not a &lt;code&gt;NodeDef&lt;/code&gt;, or if &lt;code&gt;g&lt;/code&gt; is not a &lt;code&gt;Graph&lt;/code&gt;, or if &lt;code&gt;inputs&lt;/code&gt; are not tensors, or if &lt;code&gt;inputs&lt;/code&gt; and &lt;code&gt;input_types&lt;/code&gt; are incompatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563d6496fba1472c68f7cb6050dc50f1d4cad500" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if handle is provided but is not a Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c48ff6ba6a0a5666824a1bbf4e2c8dd021d0a67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if input &lt;code&gt;a&lt;/code&gt; does not have &lt;code&gt;float&lt;/code&gt;-like &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaa30508e8907afa419a99cefcd0889e93b7486" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if kl_fn is not a callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5168f637aa9cbb6e32d4cc8a4aea39a67d616443" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if labels is not a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f9aa0872be139ab10ea657bef53f943b385534" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if loc and scale are different dtypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a89066159fb652012eb1a0220ac06624f88daf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if shape is incorrectly specified or unsupported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e447796ad8e446c564c743c9304653a4991150f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if tensor has unsupported type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3968835057ea89da04db0d3e0b05ff75e351be4f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if tensor is not an ops.Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe2ceaf349cb44b0428b5972e76df32a7e261c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if there are no layers in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79cd120efd48050a42ee69c1caa6b0840e3eff8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if this is a non-numeric, unordered, or quantized type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa769fff85e0bafc6aab77d335c3546cae6f8260" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: if unsupported types are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415dcfe3ff5784077d7332045d47ee2f4a9709e8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: when &lt;code&gt;keys&lt;/code&gt; do not match the table data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed9c54ec75fca3e3c3e02ae98f7385bed090c91" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: when &lt;code&gt;keys&lt;/code&gt; doesn't match the table key data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45439f788bd9aad78ac12f5002cb572bf721dab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: when &lt;code&gt;keys&lt;/code&gt; or &lt;code&gt;default_value&lt;/code&gt; doesn't match the table data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee31dc1d70df1c522e6e762b950ed55f2599e85d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: when &lt;code&gt;keys&lt;/code&gt; or &lt;code&gt;values&lt;/code&gt; doesn't match the table data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58303638666ceb4242935b378df586bc8bb5410" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: when invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6707a5af2ca1c53710e84a3328f8cfcae5485ec9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: when lookup_key_dtype or initializer.key_dtype are not integer or string. Also when initializer.value_dtype != int64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799f6c93e0f3a2f67a4a2e4f7a002367d8865c6b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: when the keys and values data types do not match the table key and value data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc6fef9d8ab4b8efd8d5c0d1fefc5b805ac5b51" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: when the types of some arguments are not appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16479fd30d90e0832f72037fddf881577e989dcb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/b&gt;: x must be of a valid dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9b405c7164b772fbfcf61df3548f5e4ec29ce5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;UnrecognizedFlagError&lt;/code&gt;&lt;/b&gt;: Raised when there is no registered flag named name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4bb1f4c53a2a424f9cb3e321ee0376434a2f35" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: 1. If &lt;code&gt;layer&lt;/code&gt; or &lt;code&gt;backward_layer&lt;/code&gt; is not a &lt;code&gt;Layer&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce795ad8ac457f0c21686fe56856ed6c6f93f8ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Unknown activation function&lt;/code&gt; if the input string does not denote any defined Tensorflow activation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3799a2168c6006cc1f932912b0a232bedca6f0a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;dtype&lt;/code&gt; is neither string nor integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20a24667d8b473f0717897125cf249f4b860073" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;hash_bucket_size&lt;/code&gt; is not greater than 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d6b50aab74230aa7ddf8ad74e2fcee76ea3851" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;is_self_adjoint&lt;/code&gt; is not &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;is_positive_definite&lt;/code&gt; is not &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;is_square&lt;/code&gt; is not &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c537e07eb084ef6557bf406d234eb9b838c3e2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;num_oov_buckets&lt;/code&gt; and &lt;code&gt;default_value&lt;/code&gt; are both specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cf3f593817ad0521eaa04ebb81ee306c510598" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;num_oov_buckets&lt;/code&gt; is a negative integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5f12edce1325c5659dc8507693da2549ef11a2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;params&lt;/code&gt; has reserved keys already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729ae6c497404a4c6b554e2bc2feeccd32452d47" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;vocabulary_file&lt;/code&gt; is missing or cannot be opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ed927406ca77a90ab08c885a9e1b80c83b0e87" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;vocabulary_size&lt;/code&gt; is missing or &amp;lt; 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3a9cce7dbf99b4c58f312b383a4c2e3d82c6b6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: An invalid argument was passed to &lt;code&gt;initial_clusters&lt;/code&gt; or &lt;code&gt;distance_metric&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726004f2f28d52a97d0af5fece4934a0a52522b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: An unsupported type is provided as input, or when the input tensors have incorrect shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29abf9f48a67bf149f3572a06c0ba5546b6e6e3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: An unsupported type is provided as input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f117cca9932475b4a9552922354cebcb60666c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: At most one of &lt;code&gt;saver&lt;/code&gt; or &lt;code&gt;scaffold&lt;/code&gt; should be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e199ff27616ef922b334fdfc4567711a42387cc4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: At most one of saver or scaffold should be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfc02d1a44b22763b678016ccd4144002b1adc8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: Delegate failed to load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5e2139a7c2d9706a55867ebbcca77d93ccfb7d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: Exactly one of scaffold or summary_op should be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871db5913abd494a410532f4d82d763bdea55daa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: For invalid/unknown format arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81283c2035ebc4e4343c7128e1066b0c77b825dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc76b62560fcfbfe9280ef0e3966255155f081a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;a&lt;/code&gt; is determined statically to have &lt;code&gt;rank &amp;lt; 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de7202489a422cb4e7fc644271d9c28d9af69bf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;a&lt;/code&gt; is sparse and &lt;code&gt;b&lt;/code&gt; is dense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4977a2f6c93690efe04c18b0171a9692ca34b059" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;aggregation&lt;/code&gt; is anything other than None or &lt;code&gt;mean&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38381d0756bc84a42a4ee481d8e548a84d0eb772" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;all_model_checkpoint_timestamps&lt;/code&gt; was provided but its length does not match &lt;code&gt;all_model_checkpoint_paths&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20548f46d10206c72cd891a6f1ffd02865bdc245" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;axis&lt;/code&gt; is not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51195ebf85825f7498c9a928a24a056cadd47a99" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;axis&lt;/code&gt; is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0466b8da1c86e1165234e08448d0cc247e2ed2cb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;axis&lt;/code&gt; is out of the range [-(R+1), R+1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6daa3fba4c42de4620133d1160ae98f40585789" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;axis&lt;/code&gt; is out of the range [-R, R).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6b1f449dc0ed11056c8acc095e99a55288d2f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;batch_shape&lt;/code&gt; is determined statically to not be 1-D, or negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f1258eaec23724305c40eeb0d78c6cece89570" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;boundaries&lt;/code&gt; is not a sorted list or tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb52e62e53e452e2b97f49be4f8dd278a8da7f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;ckpt_dir_or_file&lt;/code&gt; resolves to a directory with no checkpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a9b5e29231cbe9fdf77dc63cad605408f74b3a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;combiner&lt;/code&gt; is not one of {&quot;mean&quot;, &quot;sqrtn&quot;, &quot;sum&quot;}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8face787e4811726824f5fe5c5cae34620cc43b0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;core_assignment&lt;/code&gt; is not a rank 3 numpy array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7c2e8f596b5d7fdbf3123a4a4cc28f55ad5b26" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;diag.dtype&lt;/code&gt; is real, and &lt;code&gt;is_self_adjoint&lt;/code&gt; is not &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc5bc55c570533d118e972c11cc51351effecfd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;dtype&lt;/code&gt; does not match the element type of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb5dbe4cd3585fcaf9803d3937cd360a2b79737" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;dtype&lt;/code&gt; is integral and &lt;code&gt;maxval&lt;/code&gt; is not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea13491b7fc80837c3e1ff1f724fbc2380d84566" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;dtype&lt;/code&gt; is not a floating point type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01c978da8a2837c784cf65b14c439cede88b856" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;exclusive_resource_access == True&lt;/code&gt; and another &lt;code&gt;CriticalSection&lt;/code&gt; has an execution requesting the same resources as &lt;code&gt;fn&lt;/code&gt;&lt;code&gt;. Note, even if&lt;/code&gt;exclusive_resource_access&lt;code&gt;is&lt;/code&gt;True&lt;code&gt;, if another execution in another&lt;/code&gt;CriticalSection&lt;code&gt;was created without&lt;/code&gt;exclusive_resource_access=True&lt;code&gt;, a&lt;/code&gt;ValueError` will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9723749eb2d0cabbaba2dbd0da31a894c1f205" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;fetches&lt;/code&gt; or &lt;code&gt;feed_dict&lt;/code&gt; keys are invalid or refer to a &lt;code&gt;Tensor&lt;/code&gt; that doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5c0a2b84236f2b17200560b90fd2276376d7a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;flat_sequence&lt;/code&gt; and &lt;code&gt;structure&lt;/code&gt; have different element counts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e901837be3c1c9fd82931d086d7ea460451ab8f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;fn&lt;/code&gt; attempts to lock this &lt;code&gt;CriticalSection&lt;/code&gt; in any nested or lazy way that may cause a deadlock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fbf83e390225dcefc626a0e014d8daa68f2310" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;frame_length&lt;/code&gt;, &lt;code&gt;frame_step&lt;/code&gt;, &lt;code&gt;pad_value&lt;/code&gt;, or &lt;code&gt;axis&lt;/code&gt; are not scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f892b9f00438f25107f9ad8bfd649f1f99c5e85e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;hash_bucket_size &amp;lt; 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09cd0bec3bb1fcd931fe2229da2a39b29ebf7e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;identifier&lt;/code&gt; cannot be interpreted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6c076b5be2d8dc547c10d320d907cc26f62b6b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;image&lt;/code&gt; is not a 4D tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd1a7053047364c62a4815ce9f5c403d20c6f26" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;input_map&lt;/code&gt;, or &lt;code&gt;return_elements&lt;/code&gt; contains names that do not appear in &lt;code&gt;graph_def&lt;/code&gt;, or &lt;code&gt;graph_def&lt;/code&gt; is not well-formed (e.g. it refers to an unknown tensor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e041a3eac33c1eef30c5bbcdb5f6fb2975cf8533" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;inputs&lt;/code&gt; don't all have same shape and dtype or the shape cannot be inferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79da6b0e6ad88d85cc724f3054c3a73db31525f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;inputs&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; or an empty list, or if the arity and type of &lt;code&gt;state_name&lt;/code&gt; does not match that of &lt;code&gt;cell.state_size&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1336d77559e96bbd0af674c3866393d2350bfbaf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;inputs&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; or an empty list, or if the input depth (column size) cannot be inferred from inputs via shape inference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb28d1242f5517c21110f2de4e5c5bfd2a9d4d6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;is_X&lt;/code&gt; flags are set in an inconsistent way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724a0bf5deb4a0bca95652cbc4f8ac33977db805" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;is_square&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2cf9139c09928dd27fcd3ccecd6503d51ae2ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;job_name&lt;/code&gt; does not name a job in this cluster, or no task with index &lt;code&gt;task_index&lt;/code&gt; is defined in that job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb250371cfa1ab91ead53e02f18e56f68eeb36b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;job_name&lt;/code&gt; does not name a job in this cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebdcff463e0676e3a9a1f0013b92870c6fae0ed" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;key&lt;/code&gt; is a slice and &lt;code&gt;self&lt;/code&gt; is completely unknown and the step is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b17c1be2c4256231fe5391f4f91e0c670295a39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;key&lt;/code&gt; is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7fc8ffe3ff1454584291afd4a0e2093cdfd9be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;key&lt;/code&gt; is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47897de6a0fe6402434bfa269bc73d7a51910f13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;label_key&lt;/code&gt; is not one of the &lt;code&gt;features&lt;/code&gt; keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1463224704be35a61750ccd5c464a15046a109a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;latest_filename&lt;/code&gt; contains path components, or if it collides with &lt;code&gt;save_path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400b3e3af20059673c0fd9912baa9f45e9727849" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;len(keys) &amp;lt; 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a595ce173aaca186c6eb870bb5f154f2056485" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;len(nested_values_rowids) != len(nested_nrows)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dad862efa33cf64a364ffadae68009b37b7e67c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;log_input&lt;/code&gt; and &lt;code&gt;targets&lt;/code&gt; do not have the same shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4d91bc41cd0ce0b6b9a173690cdfda57d760f8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;logits&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; do not have the same shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8adf74109ee2808eb03728c09a6c1b1b69585c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;max_to_keep&lt;/code&gt; is not a positive integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e7d8e60b061604a857e81f5c8a8f558d212310" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;n_classes&lt;/code&gt; &amp;lt; 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a6f04b3bbd939fce48f060dde530fd73bacc55" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;name&lt;/code&gt; is not a valid scope name, according to the rules above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fef09bada4a77f7d8e8a0a60811945d09e91ec8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;new_shape&lt;/code&gt; is determined during graph build to have dimension sizes that are too small.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb91e085bf92771fe5da4949fbcc812a0be0e76" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;new_shape&lt;/code&gt; represents a tensor with a different rank from that of &lt;code&gt;sp_input&lt;/code&gt; (if shapes are known when graph is constructed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578ad109f5fba0cd30d37fb0344b4f356c779a61" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;nrows&lt;/code&gt; is incompatible with &lt;code&gt;value_rowids&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb69af7a6f3b08590eb2c1d183821c2731efe01" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;num&lt;/code&gt; is unspecified and cannot be inferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3facf767a494afe112c5b0745e1403be5f8005" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;num_columns&lt;/code&gt; is determined statically to be non-scalar, or negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7823e1e4c8f2107e2b2bfbaa0ac8049a03c925" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;num_cores_per_replica&lt;/code&gt; is not 1, 2, 4, 8, ..., 128.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6a64e812e061c1b23aa38857d10253de92e3ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;num_mel_bins&lt;/code&gt; is not positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f194856f41b6b0ef98b276649d07086b1be1fe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;num_mel_bins&lt;/code&gt;/&lt;code&gt;num_spectrogram_bins&lt;/code&gt;/&lt;code&gt;sample_rate&lt;/code&gt; are not positive, &lt;code&gt;lower_edge_hertz&lt;/code&gt; is negative, frequency edges are incorrectly ordered, &lt;code&gt;upper_edge_hertz&lt;/code&gt; is larger than the Nyquist frequency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa57fe3b36f310b1ae9f4ee04dd4a776c49c54d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;num_rows&lt;/code&gt; is determined statically to be non-scalar, or negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228184e4b9bf44facc2643ee15c11252b5093ddf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;num_shards &amp;lt;= 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e10bb68f2b69b10c41c6700a43a759875f19fd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;obj&lt;/code&gt; is not trackable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d51d77050e7c132ec8d823e6542be4ec4e6d10" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;obj&lt;/code&gt; is of an appropriate type but invalid. For example, an invalid string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81edf5cfc1076368a8089114385faa0c702d855f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;operator.is_non_singular&lt;/code&gt; is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc409587b46a51025580835a1c70c5bec1848aa0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;operators&lt;/code&gt; is empty or are non-square.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac22c063401bfd0445bbca114bee3e5c6548366b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;operators&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9d24f12ee93b5f0e3c6ebf41b651085906862b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;optimization_parameters&lt;/code&gt; is not one of the required types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6050c75e66eba0667947970362e24756fd1b7979" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;ord&lt;/code&gt; or &lt;code&gt;axis&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd2d02218b844132e8d731163490250d4268ee0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;params&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a8f88eb30abe592894162f1f8ebf8e007f1411" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;predictions&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; have mismatched shapes, if &lt;code&gt;weights&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; and its shape doesn't match &lt;code&gt;predictions&lt;/code&gt;, or if &lt;code&gt;sensitivity&lt;/code&gt; is not between 0 and 1, or if either &lt;code&gt;metrics_collections&lt;/code&gt; or &lt;code&gt;updates_collections&lt;/code&gt; are not a list or tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741bc44910349cbfaac08feb29dae6aeeed8d5ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;predictions&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; have mismatched shapes, if &lt;code&gt;weights&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; and its shape doesn't match &lt;code&gt;predictions&lt;/code&gt;, or if &lt;code&gt;specificity&lt;/code&gt; is not between 0 and 1, or if either &lt;code&gt;metrics_collections&lt;/code&gt; or &lt;code&gt;updates_collections&lt;/code&gt; are not a list or tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1c8404718c52866139e3962c110557d5026429" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;predictions&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; have mismatched shapes, or if &lt;code&gt;weights&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; and its shape doesn't match &lt;code&gt;predictions&lt;/code&gt;, or if either &lt;code&gt;metrics_collections&lt;/code&gt; or &lt;code&gt;updates_collections&lt;/code&gt; are not a list or tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9d724badee0c22ed9a5fddb3f303dd73eb24b7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;predictions&lt;/code&gt; shape doesn't match &lt;code&gt;labels&lt;/code&gt; shape, or &lt;code&gt;axis&lt;/code&gt;, &lt;code&gt;labels&lt;/code&gt;, &lt;code&gt;predictions&lt;/code&gt; or &lt;code&gt;weights&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5555be84080d6eaa152587ff0c64cf91d1cd346b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;queue&lt;/code&gt; or &lt;code&gt;enqueue_ops&lt;/code&gt; are not provided when not restoring from &lt;code&gt;queue_runner_def&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb47ed204baadcfcf27ec7c1f4f9c43250884f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;rate&lt;/code&gt; is not in &lt;code&gt;[0, 1)&lt;/code&gt; or if &lt;code&gt;x&lt;/code&gt; is not a floating point tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1748cb8dc1653f9406e263e98887b9dbb1bfc817" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;rate&lt;/code&gt; is not in &lt;code&gt;[0, 1)&lt;/code&gt; or if &lt;code&gt;x&lt;/code&gt; is not a floating point tensor. &lt;code&gt;rate=1&lt;/code&gt; is disallowed, because theoutput would be all zeros, which is likely not what was intended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850d6ead046a75db2c1de1335fbe23146a9fb2ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;row_splits&lt;/code&gt; is an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4de9422b72a67318cb697604dd1fd823ee64627" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; are not compatible (see is_compatible_with).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b154928a7d2a35f610adaaf19264b8a59cf21f47" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; are not compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3666b1afc8ca38a3706165bf24e8c463b2aff3a7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; do not represent shapes with the same rank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994eef4966a5f2309770a821bced1aa55f8372de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; do not represent the same shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6057e3afa1458d8a736785816c7929502e17967a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self&lt;/code&gt; does not have a known value for every dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527d4ad7feda960e14af1f9866e08497f2b5bcb5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self&lt;/code&gt; does not represent a shape with at least the given &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6bb26d51a2b99ae01f56ea3042a47ee8677b05" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self&lt;/code&gt; does not represent a shape with at most the given &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913cf0120630516db7f0bbae70118e0d571c7f30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self&lt;/code&gt; does not represent a shape with the given &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76a8bd60bdbbe231ff969fc7a2b277192373b52" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;self&lt;/code&gt; is an unknown shape with an unknown rank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e850d757de4a46e3924bbade92c1ecfa07b9e1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;shape&lt;/code&gt; has more than one inferred (== -1) dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee39198db82887ab85239aa624ffce64feedd3e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;shape&lt;/code&gt; is not compatible with the current shape of this tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f585a578b8646d4cd3e59ae7d47f5f2030fe4748" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;signal&lt;/code&gt;'s rank is less than 2, or &lt;code&gt;frame_step&lt;/code&gt; is not a scalar integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7369d9f04c1225bc59f198570d06c9bf663fa1f0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;signals&lt;/code&gt; is not at least rank 1, &lt;code&gt;frame_length&lt;/code&gt; is not scalar, or &lt;code&gt;frame_step&lt;/code&gt; is not scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f595dbc131b470151b26472ba73a03f92731737" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;skip_mismatch&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt; when &lt;code&gt;by_name&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3d557cca652dab41b68bf166d04c9098b57244" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;source_column&lt;/code&gt; is not a numeric column, or if it is not one-dimensional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76af32ec918f99f185a6de96029cfc8739b9432d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;sp_ids&lt;/code&gt; and &lt;code&gt;vocab_size&lt;/code&gt; are lists of different lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41128b2687f2de8196fedbcdca9671bcc24987d8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;splits&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d710d8ab6fb7832a710d15aac1dd273779ad1b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;steps &amp;lt;= 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ccf4b232cec17596124ad3e03830f1c2beee5c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;stfts&lt;/code&gt; is not at least rank 2, &lt;code&gt;frame_length&lt;/code&gt; is not scalar, &lt;code&gt;frame_step&lt;/code&gt; is not scalar, or &lt;code&gt;fft_length&lt;/code&gt; is not scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e262417f69019190a7c0fc67fe76505dc15d16" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;tags&lt;/code&gt; don't match a MetaGraph in the SavedModel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfee81c4dde5e8bb53818abbce62a6cac037ec9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;tensor_info&lt;/code&gt; is malformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f2167b02d70540c89aacddf89b07c1394e735f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;tensors&lt;/code&gt; does not contain any &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec99a41ee83028b4bafeb1214978ce16a36e4eba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;topology&lt;/code&gt; is not &lt;code&gt;Topology&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e130844bee3b4c7c393830cb2ccaf52fcc4009" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;transpose_a&lt;/code&gt; and &lt;code&gt;adjoint_a&lt;/code&gt;, or &lt;code&gt;transpose_b&lt;/code&gt; and &lt;code&gt;adjoint_b&lt;/code&gt; are both set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae0924ae8667c5c84471509d0a658628ed5d8ec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;norm&lt;/code&gt; is &lt;code&gt;ortho&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec3e78557e5c96f8193574d0ad0fc7d8d8d2e9c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;type&lt;/code&gt; is not &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;axis&lt;/code&gt; is not &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; or greater than 0, or &lt;code&gt;norm&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;'ortho'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a92d40a893b7c86e8249ce930ca5e2a6a20ee4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;type&lt;/code&gt; is not &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt; is not &lt;code&gt;None,&lt;/code&gt;axis&lt;code&gt;is not&lt;/code&gt;-1&lt;code&gt;, or&lt;/code&gt;norm&lt;code&gt;is not&lt;/code&gt;None&lt;code&gt;or&lt;/code&gt;'ortho'`.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75f7037a8dae5ee2305c879a52a7319817ac8f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;units&lt;/code&gt;, &lt;code&gt;cell_type&lt;/code&gt;, and &lt;code&gt;rnn_cell_fn&lt;/code&gt; are not compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb97c99f0e8c819002a8226b1cff29cb1f58e6c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;values&lt;/code&gt; is empty, if &lt;code&gt;axis&lt;/code&gt; is out of bounds or if the input tensors have different ranks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bb248f9d8f49773d20db6d3166ea198b5454d4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;weight_column&lt;/code&gt; is not a &lt;code&gt;NumericColumn&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8719d70a286bddb5b807c9669f949dac8ee98ffd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;weights&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; or the shape is not compatible with &lt;code&gt;losses&lt;/code&gt;, or if the number of dimensions (rank) of either &lt;code&gt;losses&lt;/code&gt; or &lt;code&gt;weights&lt;/code&gt; is missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e656a4ed50bb9c016a37c5d508e249199386858" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;weights&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; and its shape doesn't match &lt;code&gt;predictions&lt;/code&gt;, or if either &lt;code&gt;metrics_collections&lt;/code&gt; or &lt;code&gt;updates_collections&lt;/code&gt; are not a list or tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770b3f60fdd801353a642300e550a3bc471b84ec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;weights&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; and its shape doesn't match &lt;code&gt;values&lt;/code&gt;, or if either &lt;code&gt;metrics_collections&lt;/code&gt; or &lt;code&gt;updates_collections&lt;/code&gt; are not a list or tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8587a55419a597237be3504629c6184de29d52" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If a row partitioning tensor has an inappropriate shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a36d1d7a48c75e3c4d8aba457d573a1517f4a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If a slice range is negative size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4895b1ede3ca55adf61abd3fb4abc12b98da44c4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If all replicas do not have equal numbers of input tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf624dca273b8a769a8fa245d9f3e665a9705a4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If an invalid &lt;code&gt;device_policy&lt;/code&gt; is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf952d016d140c8107059dab1390a96b0cc0fcb0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If an unknown keyword argument is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b08aafc3d3db3067d052058c305b654f16a279c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If an unsupported output stream is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373ce48682f275ef4b1b6d455a3b28739626735e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any argument does not have the expected shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3bbb86bbbbd3c5bf94863b621634ae6fab8a89" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any member of graph_parents is &lt;code&gt;None&lt;/code&gt; or not a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4f7d758b55019da88fb4f72ea9194df26f3519" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the &lt;code&gt;feature_columns&lt;/code&gt; is not a &lt;code&gt;SequenceDenseColumn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c183576b2ea419dcec00b684153db95410c96b3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the arguments is malformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a6615096ef4dec3cae44d1c04f4868ef85f92a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the byte counts are non-positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef588263ee476b9af20f15a2843ca2ae3143ecea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the following is not &lt;code&gt;True&lt;/code&gt;: &lt;code&gt;{is_self_adjoint, is_non_singular, is_positive_definite}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e4b5d77e904db0ca5008f2d884bed20f6b41cf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the given &lt;code&gt;feature_columns&lt;/code&gt; is not a &lt;code&gt;FeatureColumn&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f24d30229194ca96cfcf294b909c1e06b8b86d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the given &lt;code&gt;feature_columns&lt;/code&gt; is not a &lt;code&gt;_FeatureColumn&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5160cf0e410996f44e57a342fbff0844716d1643" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the input arguments is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dc00dac2b8c5166e8f0db25f365cef9734e21b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the keys is &lt;code&gt;HashedCategoricalColumn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba24ee788d1a76299e29f2570c0f6627a98f27d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the keys is neither a string nor &lt;code&gt;CategoricalColumn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027f79a9c2e758006e4c26e0fe204a967aca5939" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any of the keys or values in &lt;code&gt;var_list&lt;/code&gt; are not unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d736a96351a523591355ece559116fb23b3b235" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If any property name in &lt;code&gt;kwargs&lt;/code&gt; does not exist or is not allowed to be replaced, or both &lt;code&gt;save_checkpoints_steps&lt;/code&gt; and &lt;code&gt;save_checkpoints_secs&lt;/code&gt; are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632b0e91ae8596f6339165dbc16009fd28e97008" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If args contains no &lt;code&gt;RaggedTensors&lt;/code&gt;, or if the &lt;code&gt;nested_splits&lt;/code&gt; of the input &lt;code&gt;RaggedTensor&lt;/code&gt;s are not identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42801231cf223aa6937aa5ed884b5325aee5083" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If argument &lt;code&gt;shape&lt;/code&gt; requests a &lt;code&gt;SparseTensor&lt;/code&gt; with a different number of elements than &lt;code&gt;sp_input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b5b87b0c62d28a9f444fe86787542e54d0df66" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If argument validation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cc1db3f08132abf7c2805af09473496fea0f27" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If axis is not a constant scalar, or the direction is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138df4f84a634f70205035a152f30ef432156937" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If batch length of predictions is not the same and &lt;code&gt;yield_single_examples&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c245966d9658f1aba8067e2e170d09095258e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;lengths&lt;/code&gt; and &lt;code&gt;padding&lt;/code&gt; are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d6fab3be73382e941f004db3c1dd0eb49383b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;num_parallel_batches&lt;/code&gt; and &lt;code&gt;num_parallel_calls&lt;/code&gt; are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f2659e227fd60bf517cf4908a715335ced3769" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;queue_runner_def&lt;/code&gt; and &lt;code&gt;queue&lt;/code&gt; are both specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c831d26b5ae39e591201f1714294854861dd763" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;run_every_secs&lt;/code&gt; and &lt;code&gt;run_every_steps&lt;/code&gt; are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe7c806f4442b0fa42366bd5352086675c657f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;save_checkpoints_steps&lt;/code&gt; and &lt;code&gt;save_checkpoints_secs&lt;/code&gt; are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04206789f87c8f863d380546816399a9250071ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;steps&lt;/code&gt; and &lt;code&gt;max_steps&lt;/code&gt; are not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c7c97d7e009e5b8f0dd21cc2cdbd0ea9b3e98e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;train_op_fn&lt;/code&gt; and &lt;code&gt;optimizer&lt;/code&gt; are &lt;code&gt;None&lt;/code&gt; in TRAIN mode, or if both are set. If &lt;code&gt;mode&lt;/code&gt; is not in Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a76624f111dcc98d39af685cdaa6f51c39b94fb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both &lt;code&gt;variable_def&lt;/code&gt; and initial_value are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6240db7a9befd5d45030fda6086cb55548ad9a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both checkpoint_dir and checkpoint_filename_with_path are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f4761de828e01b254a36ec1e632f48ba3e25db" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both graph and graph_def are passed to the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493112d9d94d69caaf2fcb03565cefd3319ee426" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both linear_feature_columns and dnn_features_columns are empty at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8d92b1a09b2fac7edd4e1437286522ca5b22b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both predictions and labels are not 1-D vectors and have mismatched shapes, or if &lt;code&gt;weights&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; and its shape doesn't match &lt;code&gt;predictions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1595ab6ec9bf251baa7ec429bf664e6f05e2eb7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If both session and graph_def are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7be67bb22cb0747a18519c9caf3563e0e2f25c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If called with eager execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991ca4bb31d4371908d81acdfe78d8b8f43a175e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If called with sparse = True and ragged = True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9796b79355888b6f4d58d0df789073aad5fb4c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If called without a default &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;tf.compat.v1.Session&lt;/code&gt;&lt;/a&gt; registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ba7f54e0ca6449fb61928cc662cbfbfcb661d7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If checkpoint is True and no name was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97aa16bba9b1eccbbb852fd5207f28f86d5c29dc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If compression_type is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98d86c55103b89e812b59dd3f0a85c9ac6375fd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If delimiter is not a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95676a746d8d049f73a8243bfc98b87baeeb70af" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If eager execution is enabled after creating/executing a TensorFlow graph, or if options provided conflict with a previous call to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ae4997386382f5dd7614d9d056f9fc5eb7f8a7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If either &lt;code&gt;steps&lt;/code&gt; or &lt;code&gt;max_steps &amp;lt;= 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06a432d09e83833b4ac7721efed2848d8298ad9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If examples is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75235b6165d38659d96a8b342664490894bd1184" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If gamma is negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9758fd37ab59bf7cf95a41276ec35319dff5159d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If global step is not provided, the staleness cannot be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb418ef322415ca1aeb00b210ad714dbfd0de798" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If grad is of the wrong shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ea69c3d7edf6fdc58f96f075077a4ae3b355ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If hints are set incorrectly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fe8c691bbe61fb53e973a67710a1f368ad1264" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If histogram_freq is set and no validation data is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98dcad6bc7284b07a230547ad151587ef540c95" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If input/output depth does not match &lt;code&gt;filter&lt;/code&gt; shape, if padding is other than &lt;code&gt;&quot;VALID&quot;&lt;/code&gt; or &lt;code&gt;&quot;SAME&quot;&lt;/code&gt;, or if data_format is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fa3fd47108afe8039524c1ffb91fa66e708f85" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If input/output depth does not match &lt;code&gt;filter&lt;/code&gt;'s shape, if &lt;code&gt;output_shape&lt;/code&gt; is not at 3-element vector, if &lt;code&gt;padding&lt;/code&gt; is other than &lt;code&gt;'VALID'&lt;/code&gt; or &lt;code&gt;'SAME'&lt;/code&gt;, or if &lt;code&gt;data_format&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d181012f1a10235c6ba7ac6708f8fa3d413fbe80" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If input/output depth does not match &lt;code&gt;filter&lt;/code&gt;'s shape, or if padding is other than &lt;code&gt;'VALID'&lt;/code&gt; or &lt;code&gt;'SAME'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125e9a2633eff58dc783cd8f6faee7d35ef403c8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If input/output depth does not match &lt;code&gt;filters&lt;/code&gt; shape, if padding is other than &lt;code&gt;&quot;VALID&quot;&lt;/code&gt; or &lt;code&gt;&quot;SAME&quot;&lt;/code&gt;, or if data_format is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94381f347a0bc90e3fbc5b8ea274b45ae5205b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If input/output depth does not match &lt;code&gt;filters&lt;/code&gt;' shape, or if padding is other than &lt;code&gt;'VALID'&lt;/code&gt; or &lt;code&gt;'SAME'&lt;/code&gt;, or if the &lt;code&gt;rate&lt;/code&gt; is less than one, or if the output_shape is not a tensor with 4 elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b067d029e898024b9dd22b8eb253043ed4d854" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If input/output depth does not match &lt;code&gt;filters&lt;/code&gt;' shape, or if padding is other than &lt;code&gt;'VALID'&lt;/code&gt; or &lt;code&gt;'SAME'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698e590128a6fef1617b59919b8b3070486fe14f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If inputs is None or an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc00e8cdf267ac0fe90cb76ee1128bc5021822f8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If inputs or outputs is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291e3f6a7bc65724632d03699c8058ca017ed0c8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If iterator does not support checkpointing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0b9713f4b0a08fea9d27f8837bc238c0b56513" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If label is used in &lt;code&gt;feature_columns&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9099c24f56f19cffc5562760a8ebd76a5c5bf934" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If len(input_shard_axes) != len(inputs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a66281eea35cfb3be4bf4673413af9a1d6af6d5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If len(output_shard_axes) != len(outputs from &lt;code&gt;computation&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a276775b7de394a8d5d2ce802a4e630c37872a47" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If logits are scalars (need to have rank &amp;gt;= 1) or if the rank of the labels is not equal to the rank of the logits minus one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0219d0cd7ba3f27032205e913e1136e50d6f68" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If loss_scale_value is less than 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5147a128e38727d0e17fab4cfbaf96b081f8df5f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If mean or variance is not None when is_training is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e40b8d25bd1f98434b788d528579c79564b044" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If missing variables in current graph, or if missing checkpoints or tensors in checkpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74393396fcf8e41b87a77678e888e8428d0404da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If multiple partitioning arguments are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1836a22fa0c225f865eeba27cb1c43a62c0219e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If name is None, or not a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1341a0aa9f8621eaf30cb2bf424bc5075e800a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If name is malformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae66fc5a614cccd4f05a599d58df83b44e03946" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If no TPUs are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851605108b40534f15b90937173eb2bdb7bb5a9b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If no replica exists in the task which contains the logical core.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48803c8ff5fa1a4a7bc8b0c3af61381a239be5df" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If no structure is provided or if the structures do not match each other by type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f01fa3c8415478fdfa1b762a6a0f34086aa1fc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If none of the TPUs specified exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0091b766d17c06d32e5b637919d446b28ddd4cee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If none of the variables have gradients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212d36bac682152bb37b5455a18f6f8aa2724d89" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If not &lt;code&gt;logdir&lt;/code&gt; was passed to the constructor as the services need a log directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837c8c2e3336a1f227cd9f8cc474c8f5977e70e3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If not initialized with a &lt;code&gt;Layer&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f863937895c687e306a082e8e77159501474b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If not within a tpu_shard_context or group_assignment is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582ff503b9e00b2008f693139329de1f3f006cba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If nrows is specified but value_rowids is not None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083d86afffa4454b645d850c00510511b2d1a3e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If num_shards &amp;lt;= 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0bd8a7c0e6a091907eb800f7c59884492214ad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If num_tokens are smaller than replicas_to_aggregate - total_num_replicas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdd3710700327dddf65a19b142bd55f7d12166c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If objects in &lt;code&gt;kwargs&lt;/code&gt; are not trackable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9eef7b2ec9e7a6aa301f66cd69c3f63a9f0748" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If one of the arguments is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f76dbee4a76ab2f2fa8e6d7abecb58c92125bc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If p and logits are passed, or if neither are passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eba8b4c22e923d6b9b232d7f7a4029a1d23ee57" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If rank of &lt;code&gt;condition&lt;/code&gt; is greater than rank of expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253adeaac425fb1ce0dfb0bdd541b0ee0ab51880" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If ready_for_local_init_op is not None but local_init_op is None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6045b1a116ba308f9e6d910425c179ab8465d21" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If reduction is not a valid cross-shard reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a04b98144555c42cb1517c8bb578b304a7ae2e5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If result is empty but the gradient is nonzero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d1356283b92df0d831d0fb3a7ec6bd79b5c831" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If save_path is None or not a valid checkpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7c4bd231736cb21772831f1e44416c2f3647d4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If sep is not a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4452f0b39bf13758686852c3b4cade10e2f9bf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If session wasn't passed and no default session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1fef21aa9642e622631ee6b6155ae7e53f1cef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If shapes do not conform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508b250d6359c82fe5521d955dca1cf58bc92cae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If shapes is not a list of shapes, or the lengths of dtypes and shapes do not match, or if names is specified and the lengths of dtypes and names do not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c083a099204398c1f0e67ec6639813110098bf0b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If some arguments are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08110ddcee37a3dd25e6149707907c8b8643502" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If some of the variables are not &lt;code&gt;Variable&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a885c382a28287a1f400505329cf1a827ffb391" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If static checks determine &lt;code&gt;x&lt;/code&gt; has mismatched rank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec3cb8b13024b41424fa5ba82c36582ab28e684" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If static checks determine &lt;code&gt;x&lt;/code&gt; has wrong rank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4bd6978246d809f2a6c0d780d67b8579754a90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If static checks determine any shape constraint is violated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d188ddb3eca2a98d58ce62ea885c1b0f787e2087" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If tensor has the wrong shape or type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4b9ffe51f8efb0722e77ae6c52e0949b94499b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If tensor has the wrong type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9e185629a99cdfa6d3765296e340db0c50c112" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;Estimator&lt;/code&gt; has not produced a checkpoint yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9533a86ac96ee78e03fc2c41868bda1d99b091" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;graph_def&lt;/code&gt; would be too large.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3736be7b81e563022878b7d5c26fa3d68fef18a4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;initial_accumulator_value&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26990dfcef71e066a2eeb6912ab72372f9cff072" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;initial_accumulator_value&lt;/code&gt; or &lt;code&gt;epsilon&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7252fc083eba67e24a27dc341f888acb016477" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;initial_gradient_squared_accumulator_value&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c3b821a0cbf06aecc965abace64503d7901b7b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;shapes&lt;/code&gt; are not specified, and cannot be inferred from the elements of &lt;code&gt;tensor_list_list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61974afea44d3b4265247c4533463c260dece673" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;shapes&lt;/code&gt; are not specified, and cannot be inferred from the elements of &lt;code&gt;tensors&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08b14b0cd4bfdb01c2475199e345e0ed8216ac3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;shapes&lt;/code&gt; are not specified, and cannot be inferred from the elements of &lt;code&gt;tensors_list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195fd9597cfeae9bdd08a189f87057f33a324e89" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;value&lt;/code&gt; depth does not match &lt;code&gt;filters&lt;/code&gt;' shape, or if padding is other than &lt;code&gt;'VALID'&lt;/code&gt; or &lt;code&gt;'SAME'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afffeae4effd454342df1dbb1918bde564d9222e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;value&lt;/code&gt; depth does not match &lt;code&gt;kernel&lt;/code&gt;' shape, or if padding is other than &lt;code&gt;'VALID'&lt;/code&gt; or &lt;code&gt;'SAME'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd195fbfadbbd4a50bc4f9e194a49487da7869e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;value&lt;/code&gt; is a tensor not of given &lt;code&gt;dtype&lt;/code&gt; in graph mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed6e2130fb17d04f4de3c179527207221d5d363" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the &lt;code&gt;weights&lt;/code&gt; argument is specified and does not match the length of the &lt;code&gt;datasets&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6bece9813e7b44c8edd77de5fe6e804b84cbc4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the WarmStartSettings contains prev_var_name or VocabInfo configuration for variable names that are not used. This is to ensure a stronger check for variable configuration than relying on users to examine the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790a90da8d9d78dae12f4dfb1cc6fca9273e4a05" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the clip tensors would trigger array broadcasting that would make the returned tensor larger than the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e1d7d1d174d9daf05858277d4feb62bb2f0dd3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the clip_norm tensor is not a 0-D scalar tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbac98370837143b50b874f6042b8bd4015ded6a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the deprecated &lt;code&gt;split_dim&lt;/code&gt; and &lt;code&gt;axis&lt;/code&gt; are both non None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3997d645d4b97a46277eae4a7b1e2ab7f2189e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the dtype is not floating point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c64e666f6ee8517cbac8d1e130cd4d9de0b2da4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the dtype is not floating point or the input shape is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef3fa2433c0b2d66a8a4f07043d7ae1bb0d780d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/b&gt;: If the dtype is not numeric.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
