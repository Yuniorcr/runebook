<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="3d564d614d7fa8cf650fb71eb5febbaceaa15e34" translate="yes" xml:space="preserve">
          <source>the transformed path as a lazy range</source>
          <target state="translated">게으른 범위로 변환 된 경로</target>
        </trans-unit>
        <trans-unit id="ed7b7c5fd2afd7da327212b072cb256664ccd3c5" translate="yes" xml:space="preserve">
          <source>the type for which the init expression is returned</source>
          <target state="translated">init 표현식이 리턴되는 유형</target>
        </trans-unit>
        <trans-unit id="9831bc38b1b0e82793798e50c46d97ca10175f9a" translate="yes" xml:space="preserve">
          <source>the type for which the property is calculated</source>
          <target state="translated">속성이 계산되는 유형</target>
        </trans-unit>
        <trans-unit id="ecaf1085d51cb793a9df875239654fbd3776e5b9" translate="yes" xml:space="preserve">
          <source>the type that was merged</source>
          <target state="translated">병합 된 타입</target>
        </trans-unit>
        <trans-unit id="4ab538dcb8bc06e77a0f54db02a5c512d22f7421" translate="yes" xml:space="preserve">
          <source>the type to be returned by the delegate</source>
          <target state="translated">델리게이트가 돌려주는 타입</target>
        </trans-unit>
        <trans-unit id="bd329ca57a18b201983e4e01504497fb6c2641b8" translate="yes" xml:space="preserve">
          <source>the type to check qualifiers from</source>
          <target state="translated">한정자를 확인할 유형</target>
        </trans-unit>
        <trans-unit id="41920e5ee91fd5d2937155eeff3f37ee4bef1d08" translate="yes" xml:space="preserve">
          <source>the type to convert to</source>
          <target state="translated">변환 할 유형</target>
        </trans-unit>
        <trans-unit id="2f41897deb983ca19b2d13c7f76ca96e9e4b15e0" translate="yes" xml:space="preserve">
          <source>the type to generate the &lt;code&gt;TypeInfo&lt;/code&gt; object for</source>
          <target state="translated">에 대한 &lt;code&gt;TypeInfo&lt;/code&gt; 객체 를 생성하는 유형</target>
        </trans-unit>
        <trans-unit id="85c1376cf75422f4f5e3c1e8ef561406762dd682" translate="yes" xml:space="preserve">
          <source>the type to get the type of the &lt;code&gt;TypeInfo&lt;/code&gt; object for</source>
          <target state="translated">&lt;code&gt;TypeInfo&lt;/code&gt; 객체 의 형태를 얻는 형태</target>
        </trans-unit>
        <trans-unit id="1c12e00cbb9ca52207963bf6cd6c0a214073b74d" translate="yes" xml:space="preserve">
          <source>the type to return</source>
          <target state="translated">돌려주는 타입</target>
        </trans-unit>
        <trans-unit id="9d9b71dd0ef62ae2b899144bc21b7ae617afd0a5" translate="yes" xml:space="preserve">
          <source>the type to view the underlying representation as</source>
          <target state="translated">기본 표현을 다음과 같이 볼 유형</target>
        </trans-unit>
        <trans-unit id="a33c7508578f9f6f72be0500c8ca40af7f03d2d5" translate="yes" xml:space="preserve">
          <source>the types that each of the elements in the line should be returned as</source>
          <target state="translated">라인의 각 요소가 다음과 같이 리턴되어야하는 유형</target>
        </trans-unit>
        <trans-unit id="126a4cbf7ecbfbf26f9458dea373729c95fe9c23" translate="yes" xml:space="preserve">
          <source>the unary or binary op being done on the &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 에 대해 수행되는 단항 또는 이진 연산</target>
        </trans-unit>
        <trans-unit id="812c56339e4a02cb205fdc7b8483853b9fe7cd73" translate="yes" xml:space="preserve">
          <source>the username</source>
          <target state="translated">사용자 이름</target>
        </trans-unit>
        <trans-unit id="2dc5fa157e5bc30875334c55d70a3bf15239b8eb" translate="yes" xml:space="preserve">
          <source>the value after the cast, returned by reference if possible.</source>
          <target state="translated">캐스트 후의 값으로, 가능한 경우 참조로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="59e060834d4b36c6ddcf25f5bb70c7c133a449ce" translate="yes" xml:space="preserve">
          <source>the value being cast (&lt;code&gt;Rhs&lt;/code&gt; is the first argument to &lt;code&gt;Checked&lt;/code&gt;)</source>
          <target state="translated">캐스트되는 값 ( &lt;code&gt;Rhs&lt;/code&gt; 는 &lt;code&gt;Checked&lt;/code&gt; 의 첫 번째 인수입니다 )</target>
        </trans-unit>
        <trans-unit id="cd617dc1fae9af6efcd91900289cf8ae8f0cf071" translate="yes" xml:space="preserve">
          <source>the value of the environment variable if found, otherwise &lt;code&gt;null&lt;/code&gt; if the environment doesn't exist.</source>
          <target state="translated">발견 된 경우 환경 변수의 값, 그렇지 않은 경우 환경이 존재하지 않는 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5fdad62266b1d02a0dcc3cc722095d3979def45" translate="yes" xml:space="preserve">
          <source>the value of the variable</source>
          <target state="translated">변수의 값</target>
        </trans-unit>
        <trans-unit id="f08160a8b08e03bc9f46dbd16f06081825e08495" translate="yes" xml:space="preserve">
          <source>the value to evaluate.</source>
          <target state="translated">평가할 값</target>
        </trans-unit>
        <trans-unit id="3efa81df5533adf5cb58d1c1d9d344c2bda1c6f6" translate="yes" xml:space="preserve">
          <source>the value to repeat</source>
          <target state="translated">반복 할 값</target>
        </trans-unit>
        <trans-unit id="45d43e862ec5d55ece5ce397e6fd233e289c77ff" translate="yes" xml:space="preserve">
          <source>the value to return in case the &lt;code&gt;Nullable&lt;/code&gt; is null.</source>
          <target state="translated">&lt;code&gt;Nullable&lt;/code&gt; 이 null 인 경우 반환 할 값</target>
        </trans-unit>
        <trans-unit id="c5a4a211b6886ca86b73f369d3806834f1e103b5" translate="yes" xml:space="preserve">
          <source>the values to assemble together</source>
          <target state="translated">함께 모일 값</target>
        </trans-unit>
        <trans-unit id="ace3ab99c86162161ad2f208ad1144815d720853" translate="yes" xml:space="preserve">
          <source>the variable from where the void value came from, null if not known</source>
          <target state="translated">void 값이 나온 곳의 변수, 알 수없는 경우 null</target>
        </trans-unit>
        <trans-unit id="3dc20c2414e15a752078d207ea9735d1788158ae" translate="yes" xml:space="preserve">
          <source>the visitor to use when visiting this node</source>
          <target state="translated">이 노드를 방문 할 때 사용하는 방문자</target>
        </trans-unit>
        <trans-unit id="3aff50bb2cb2f231d554241ffda63b277b6f7efa" translate="yes" xml:space="preserve">
          <source>the whole match.</source>
          <target state="translated">전체 경기.</target>
        </trans-unit>
        <trans-unit id="ae00f35722097f3d98f0fd9565ff1a9b097c7643" translate="yes" xml:space="preserve">
          <source>the wrapped object, or null if src is not a wrapper created by &lt;a href=&quot;#wrap&quot;&gt;&lt;code&gt;wrap&lt;/code&gt;&lt;/a&gt; and Target is a class</source>
          <target state="translated">랩 된 객체. src가 &lt;a href=&quot;#wrap&quot;&gt; &lt;code&gt;wrap&lt;/code&gt; &lt;/a&gt; 작성된 랩퍼가 아니고 Target가 클래스 인 경우는 null</target>
        </trans-unit>
        <trans-unit id="21a55554dd59d6cd6a82b756ceb1bd103ab36f5c" translate="yes" xml:space="preserve">
          <source>theAlignment</source>
          <target state="translated">theAlignment</target>
        </trans-unit>
        <trans-unit id="2f8eacf3b0512201a953d768cfc846e3d171109a" translate="yes" xml:space="preserve">
          <source>theBlockSize</source>
          <target state="translated">theBlockSize</target>
        </trans-unit>
        <trans-unit id="0ea37d79709b72a0f097a81bda829439bf87a0db" translate="yes" xml:space="preserve">
          <source>then selects the</source>
          <target state="translated">그런 다음</target>
        </trans-unit>
        <trans-unit id="bd006a2d3d1f5875880dbc3a3bdbb711417fb3a4" translate="yes" xml:space="preserve">
          <source>then temporary destructors are evaluated right after the right-hand side expression has been evaluated and converted to &lt;code&gt;bool&lt;/code&gt;. Evaluation of destructors proceeds in reverse order of construction.</source>
          <target state="translated">그런 다음 오른쪽식이 평가되고 &lt;code&gt;bool&lt;/code&gt; 로 변환 된 직후에 임시 소멸자가 평가 됩니다. 소멸자의 평가는 건설 순서와 반대로 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="11133ca85229eadf415c4caa1d80f35db1ef6ed3" translate="yes" xml:space="preserve">
          <source>then the semantic equivalent, called a</source>
          <target state="translated">그런 다음 의미 론적 동등 물</target>
        </trans-unit>
        <trans-unit id="b6312de992de1c961a83041a35dcdf4a6b223137" translate="yes" xml:space="preserve">
          <source>there are any alignment gaps</source>
          <target state="translated">정렬 간격이 있습니다</target>
        </trans-unit>
        <trans-unit id="b6b268f6d9545d48546e2f18094d969ba96fd87a" translate="yes" xml:space="preserve">
          <source>there are any floating point fields that may contain NaN or &lt;code&gt;-0&lt;/code&gt; values</source>
          <target state="translated">NaN 또는 &lt;code&gt;-0&lt;/code&gt; 값을 포함 할 수있는 부동 소수점 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="49fdcbe66b715f5ff870c105a5d55ca4ddf7e94f" translate="yes" xml:space="preserve">
          <source>there can be exactly one dash between two hex-pairs, but not more</source>
          <target state="translated">두 개의 육각 쌍 사이에 정확히 하나의 대시가있을 수 있지만 더 이상</target>
        </trans-unit>
        <trans-unit id="9c92b844128ea71b27624bb73bd0fbb14dcd4bcd" translate="yes" xml:space="preserve">
          <source>there can be multiple characters enclosing the 16 hex pairs, as long as these characters do not contain [0-9a-fA-F]</source>
          <target state="translated">[0-9a-fA-F] 문자를 포함하지 않는 16 개의 16 진 쌍을 묶는 문자가 여러 개있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e97f6f5374c3cf1e9704a2c5c046393ab580ca8" translate="yes" xml:space="preserve">
          <source>there must be exactly 16 such pairs in the input, not less, not more</source>
          <target state="translated">입력에 정확히 16 개의 쌍이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c2543fff3bfa6f144c2f06a7de6cd10c0b650cae" translate="yes" xml:space="preserve">
          <source>this</source>
          <target state="translated">this</target>
        </trans-unit>
        <trans-unit id="82d095880e34eff1a6668c63cbb8157a907242a8" translate="yes" xml:space="preserve">
          <source>this &amp;gt; obj</source>
          <target state="translated">이&amp;gt; obj</target>
        </trans-unit>
        <trans-unit id="0cde15edd0100008f59530ebb0d54e150eafa247" translate="yes" xml:space="preserve">
          <source>this &amp;gt; rhs</source>
          <target state="translated">이&amp;gt; rhs</target>
        </trans-unit>
        <trans-unit id="aad1b28f2e4c7c23e6f59a9a68bd1a4b38afc840" translate="yes" xml:space="preserve">
          <source>this &amp;lt; obj</source>
          <target state="translated">이 &amp;lt;obj</target>
        </trans-unit>
        <trans-unit id="3a0b4790c8881d41094d92c886e6f1d0e5f455b8" translate="yes" xml:space="preserve">
          <source>this &amp;lt; rhs</source>
          <target state="translated">이 &amp;lt;rhs</target>
        </trans-unit>
        <trans-unit id="05e874653b073420016095ffe701b0ef0812aec4" translate="yes" xml:space="preserve">
          <source>this == obj</source>
          <target state="translated">이 == obj</target>
        </trans-unit>
        <trans-unit id="acc96739ad34a77420b64a0143b55cbd8b1304c8" translate="yes" xml:space="preserve">
          <source>this == rhs</source>
          <target state="translated">이 == rhs</target>
        </trans-unit>
        <trans-unit id="4e374f8c16fc70e0165d000e6eaf8c9dd743d358" translate="yes" xml:space="preserve">
          <source>this ident : specType = defaultType</source>
          <target state="translated">이 아이디 : specType = defaultType</target>
        </trans-unit>
        <trans-unit id="0d6eb993dfffbd7c9b926889a67b9e2197384ab6" translate="yes" xml:space="preserve">
          <source>this is @system because of the following pattern:</source>
          <target state="translated">다음 패턴으로 인해 @system입니다.</target>
        </trans-unit>
        <trans-unit id="6d5532bfaae6bc5f39c20ee8aa91233fa06bd713" translate="yes" xml:space="preserve">
          <source>this is a libcurl bug</source>
          <target state="translated">이것은 libcurl 버그입니다</target>
        </trans-unit>
        <trans-unit id="72117be5cb14101c16707dc9972bedc84226f5e9" translate="yes" xml:space="preserve">
          <source>this is a memory leak</source>
          <target state="translated">이것은 메모리 누수입니다</target>
        </trans-unit>
        <trans-unit id="d295ce0aaf52efbd1b505c16d863496288649a3b" translate="yes" xml:space="preserve">
          <source>this is an upload</source>
          <target state="translated">이것은 업로드입니다</target>
        </trans-unit>
        <trans-unit id="c7a7bc5a9abfe28d858c062e5cbee53132ea7b6a" translate="yes" xml:space="preserve">
          <source>this is the set of return values expected from the curl_sshkeycallback callback</source>
          <target state="translated">이것은 curl_sshkeycallback 콜백에서 예상되는 반환 값 집합입니다.</target>
        </trans-unit>
        <trans-unit id="52c6f6316f1747eebadb90544c929ba449712bd7" translate="yes" xml:space="preserve">
          <source>this is the set of status codes pass in to the callback</source>
          <target state="translated">이것은 콜백에 전달되는 상태 코드 세트입니다.</target>
        </trans-unit>
        <trans-unit id="2980da75abdde071d9b653bf64e09792ce7bbfde" translate="yes" xml:space="preserve">
          <source>this()(uint[] intervals...);</source>
          <target state="translated">this () (uint [] 간격 ...);</target>
        </trans-unit>
        <trans-unit id="80580f382fcd3343484d77f19b8c2ede9cf48d2c" translate="yes" xml:space="preserve">
          <source>this();</source>
          <target state="translated">this();</target>
        </trans-unit>
        <trans-unit id="e6b37b2f320aa6315240bedc7d1f9fb408ec9538" translate="yes" xml:space="preserve">
          <source>this(A* arr);</source>
          <target state="translated">이것 (A * arr);</target>
        </trans-unit>
        <trans-unit id="132ccf6abd1625c0e69c273da9cce3e56cd0b7b5" translate="yes" xml:space="preserve">
          <source>this(A...)(auto ref A args)</source>
          <target state="translated">this (A ...) (자동 참조 A 인수)</target>
        </trans-unit>
        <trans-unit id="20013a18298d3902882b7f84af4856ac70181203" translate="yes" xml:space="preserve">
          <source>this(C)(scope const C[] chars...)</source>
          <target state="translated">this (C) (범위 const C [] 문자 ...)</target>
        </trans-unit>
        <trans-unit id="b5c41b3030a9e81bf1758b60067a41660adc08a2" translate="yes" xml:space="preserve">
          <source>this(DefaultConstruct);</source>
          <target state="translated">this(DefaultConstruct);</target>
        </trans-unit>
        <trans-unit id="b3f0ddc77cc1d71072aa7fa175a072bb23558677" translate="yes" xml:space="preserve">
          <source>this(Elem[] elems...);</source>
          <target state="translated">this (Elem [] elems ...);</target>
        </trans-unit>
        <trans-unit id="2dcc92d0cf49a8f893aa96e6bb1ae57c7bf1e4a3" translate="yes" xml:space="preserve">
          <source>this(Expressions* exps);</source>
          <target state="translated">이것 (식 * exps);</target>
        </trans-unit>
        <trans-unit id="1679e1f92b21d14c274420d5a49ca799da3c3fa5" translate="yes" xml:space="preserve">
          <source>this(Factory plant);</source>
          <target state="translated">이것 (공장 공장);</target>
        </trans-unit>
        <trans-unit id="4c7065ce98d57715a77d5d3467dfe4fe46096dda" translate="yes" xml:space="preserve">
          <source>this(File f, dchar terminator = '\x0a');</source>
          <target state="translated">이것 (파일 f, dchar 종결 자 = '\ x0a');</target>
        </trans-unit>
        <trans-unit id="aa7920cb36e576598ccf86d271d0ba0cad5f3284" translate="yes" xml:space="preserve">
          <source>this(HeaderFormat format = HeaderFormat.determineFromData);</source>
          <target state="translated">this (HeaderFormat format = HeaderFormat.determineFromData);</target>
        </trans-unit>
        <trans-unit id="f4dcd048ed9be67f25def654a18469dcaf75d191" translate="yes" xml:space="preserve">
          <source>this(HeaderFormat header = HeaderFormat.deflate);</source>
          <target state="translated">this (HeaderFormat header = HeaderFormat.deflate);</target>
        </trans-unit>
        <trans-unit id="779b59629e08b243bf0cbd88ad41ec6dee2da37e" translate="yes" xml:space="preserve">
          <source>this(Input)(Input seq)</source>
          <target state="translated">this (입력) (입력 seq)</target>
        </trans-unit>
        <trans-unit id="99388cbee87039e9eb504c61debf5b7ade34a739" translate="yes" xml:space="preserve">
          <source>this(Module mod, uint level, Identifier ident);</source>
          <target state="translated">this (모듈 mod, uint 레벨, 식별자 ident);</target>
        </trans-unit>
        <trans-unit id="cb7c5098cba61f6967a62d6aecff261bdd5eab4e" translate="yes" xml:space="preserve">
          <source>this(ParentAllocator parent, size_t bytes);</source>
          <target state="translated">this (ParentAllocator 부모, size_t 바이트);</target>
        </trans-unit>
        <trans-unit id="a7aaab901e52b0d19099717dc7855b967c710c38" translate="yes" xml:space="preserve">
          <source>this(ParentAllocator parent, size_t bytes, size_t max);</source>
          <target state="translated">this (ParentAllocator parent, size_t bytes, size_t max);</target>
        </trans-unit>
        <trans-unit id="71e01907b21c6e25d0ef963a98e9ce19f514f7df" translate="yes" xml:space="preserve">
          <source>this(ParentAllocator parent, size_t bytes, size_t min, size_t max);</source>
          <target state="translated">this (ParentAllocator 상위, size_t 바이트, size_t min, size_t max);</target>
        </trans-unit>
        <trans-unit id="28e9e338c8a41cf7b6c08b2b92019fef32b458a5" translate="yes" xml:space="preserve">
          <source>this(ParentAllocator parent, size_t capacity);</source>
          <target state="translated">this (ParentAllocator 상위, size_t 용량);</target>
        </trans-unit>
        <trans-unit id="f3f95c7b56c30408c67f6479cc10dc462d929db9" translate="yes" xml:space="preserve">
          <source>this(ParentAllocator parent, size_t capacity, uint blockSize);</source>
          <target state="translated">this (ParentAllocator 상위, size_t 용량, uint blockSize);</target>
        </trans-unit>
        <trans-unit id="5388e7dd98ccfacb71cc00d5cb77bea62fd2fdbb" translate="yes" xml:space="preserve">
          <source>this(ParentAllocator parent, size_t n);</source>
          <target state="translated">this (ParentAllocator parent, size_t n);</target>
        </trans-unit>
        <trans-unit id="1b4406889223d387b50cb87b94ce78f8c2f133d3" translate="yes" xml:space="preserve">
          <source>this(ParentAllocator parent, ubyte[] buffer);</source>
          <target state="translated">this (ParentAllocator parent, ubyte [] 버퍼);</target>
        </trans-unit>
        <trans-unit id="4519698dd64db42c1e54d92a0fff85745c89a5f8" translate="yes" xml:space="preserve">
          <source>this(Policy policy = Policy.PREFER_WRITERS);</source>
          <target state="translated">this (정책 정책 = Policy.PREFER_WRITERS);</target>
        </trans-unit>
        <trans-unit id="f7ac1199a7286dbf7df8fe6acece0455d3851acd" translate="yes" xml:space="preserve">
          <source>this(R : T)(Complex!R z);</source>
          <target state="translated">this (R : T) (복잡한 R z);</target>
        </trans-unit>
        <trans-unit id="2925f67d27129a04e51943fc759b565a279005d6" translate="yes" xml:space="preserve">
          <source>this(R : T)(const R r);</source>
          <target state="translated">이것 (R : T) (const R r);</target>
        </trans-unit>
        <trans-unit id="baa4a1a1b944bcded56ee638d20451ed7875cc41" translate="yes" xml:space="preserve">
          <source>this(R input, size_t index = 0);</source>
          <target state="translated">this (R 입력, size_t 인덱스 = 0);</target>
        </trans-unit>
        <trans-unit id="ef8f7ee180962fe220a995fea0611760cafc9e63" translate="yes" xml:space="preserve">
          <source>this(R range);</source>
          <target state="translated">이것 (R 범위);</target>
        </trans-unit>
        <trans-unit id="2ed0eebb8b63daeaa60e4f62f30a008215e9b754" translate="yes" xml:space="preserve">
          <source>this(R ranges, StoppingPolicy sp = StoppingPolicy.shortest);</source>
          <target state="translated">this (R 범위, StoppingPolicy sp = StoppingPolicy.shortest);</target>
        </trans-unit>
        <trans-unit id="347be2fcd025080d2993418b79a3983862fc5c97" translate="yes" xml:space="preserve">
          <source>this(R rs, StoppingPolicy s = StoppingPolicy.shortest);</source>
          <target state="translated">this (R rs, StoppingPolicy s = StoppingPolicy.shortest);</target>
        </trans-unit>
        <trans-unit id="c389f0aecbc588ff69c92eb98ebd039a24fcc7a5" translate="yes" xml:space="preserve">
          <source>this(R1 r1, R2 r2);</source>
          <target state="translated">이것 (R1r1, R2r2);</target>
        </trans-unit>
        <trans-unit id="8c34a8cb8d106bac7f56cfcea1348a8978637413" translate="yes" xml:space="preserve">
          <source>this(R1, R2)(R1 name)</source>
          <target state="translated">이 (R1, R2) (R1 이름)</target>
        </trans-unit>
        <trans-unit id="94b176ba7b72b985318087edd4e8d94e8c578167" translate="yes" xml:space="preserve">
          <source>this(R1, R2)(R1 name, R2 mode)</source>
          <target state="translated">이 (R1, R2) (R1 이름, R2 모드)</target>
        </trans-unit>
        <trans-unit id="3c5e1e7889df8c95fd72b36f129ad32fb1d41d18" translate="yes" xml:space="preserve">
          <source>this(Range needle);</source>
          <target state="translated">이것 (범위 바늘);</target>
        </trans-unit>
        <trans-unit id="ad6204630849aed7ee80ed4d92f2e9ddcd9632e3" translate="yes" xml:space="preserve">
          <source>this(Range s, Range t, F lambda);</source>
          <target state="translated">이것 (범위 s, 범위 t, F 람다);</target>
        </trans-unit>
        <trans-unit id="6a3dfda7a2a6c02d174b93d4a4a57d3956eff890" translate="yes" xml:space="preserve">
          <source>this(Range)(Range r)</source>
          <target state="translated">이것 (범위) (범위 r)</target>
        </trans-unit>
        <trans-unit id="c0c6438b2ad4b12ce084272500121057ed673e5a" translate="yes" xml:space="preserve">
          <source>this(Range)(Range s)</source>
          <target state="translated">이것 (범위) (범위 s)</target>
        </trans-unit>
        <trans-unit id="8845d27f2fdb060aa1782d2e71f270da4925d731" translate="yes" xml:space="preserve">
          <source>this(RangeOfRanges input);</source>
          <target state="translated">this (RangeOfRanges 입력);</target>
        </trans-unit>
        <trans-unit id="6db5d8fe81c15bc206a80b7c8b287921633d1901" translate="yes" xml:space="preserve">
          <source>this(RangeOfRanges input, size_t n);</source>
          <target state="translated">this (RangeOfRanges 입력, size_t n);</target>
        </trans-unit>
        <trans-unit id="61e221d7ef22cacb74a03a3257d63f7abb211d56" translate="yes" xml:space="preserve">
          <source>this(RangeOfRanges ror);</source>
          <target state="translated">this (RangeOfRanges ror);</target>
        </trans-unit>
        <trans-unit id="08f804d3a282e6fe5e4168b726da7744b72aeff5" translate="yes" xml:space="preserve">
          <source>this(RefT p);</source>
          <target state="translated">이것 (RefT p);</target>
        </trans-unit>
        <trans-unit id="d30f258b22ec0f3a9e92e87e29666aff1501fab6" translate="yes" xml:space="preserve">
          <source>this(Rs input);</source>
          <target state="translated">이것 (Rs 입력);</target>
        </trans-unit>
        <trans-unit id="5072f9d7a1dd3dbb393d13e7edc458fa4bd623d3" translate="yes" xml:space="preserve">
          <source>this(Rx : T, Ry : T)(const Rx x, const Ry y);</source>
          <target state="translated">이것 (Rx : T, Ry : T) (const Rxx, const Ryy);</target>
        </trans-unit>
        <trans-unit id="e9bcfac8236ab38c8ed43293ac957d15181c20c3" translate="yes" xml:space="preserve">
          <source>this(Source source, size_t chunkCount);</source>
          <target state="translated">this (소스 소스, size_t chunkCount);</target>
        </trans-unit>
        <trans-unit id="8b3449b726ebeac78c06ae17a00d30497c6910fd" translate="yes" xml:space="preserve">
          <source>this(Source source, size_t chunkSize);</source>
          <target state="translated">this (소스 소스, size_t chunkSize);</target>
        </trans-unit>
        <trans-unit id="870fc366fdbc82fee565419ad25addae96307314" translate="yes" xml:space="preserve">
          <source>this(Store s, size_t initialSize = size_t.max);</source>
          <target state="translated">this (Store s, size_t initialSize = size_t.max);</target>
        </trans-unit>
        <trans-unit id="92172012d614d33c557193ef2c67b4eaacea81be" translate="yes" xml:space="preserve">
          <source>this(Stuff)(Stuff stuff)</source>
          <target state="translated">이것 (Stuff) (Stuff stuff)</target>
        </trans-unit>
        <trans-unit id="95cfbb8f694930cec1696120187bdb5893bd2791" translate="yes" xml:space="preserve">
          <source>this(T : VariantN!(tsize, Types), size_t tsize, Types...)(T value)</source>
          <target state="translated">this (T : VariantN! (tsize, Types), size_t tsize, Types ...) (T 값)</target>
        </trans-unit>
        <trans-unit id="d6bb0e478c4fddd104d12a6310c627dc7f61c4d5" translate="yes" xml:space="preserve">
          <source>this(T val);</source>
          <target state="translated">이것 (T val);</target>
        </trans-unit>
        <trans-unit id="15b23d425463281469d9b9ed06181ae75482905a" translate="yes" xml:space="preserve">
          <source>this(T value);</source>
          <target state="translated">this (T 값);</target>
        </trans-unit>
        <trans-unit id="b0cc8cc8f566f942097b2f85071dc2b358df01ee" translate="yes" xml:space="preserve">
          <source>this(T)(T arg)</source>
          <target state="translated">이것 (T) (T arg)</target>
        </trans-unit>
        <trans-unit id="ce5e9c5497d4542e8a3b129c8f899cbbb86ab3c6" translate="yes" xml:space="preserve">
          <source>this(T)(T value);</source>
          <target state="translated">this (T) (T 값);</target>
        </trans-unit>
        <trans-unit id="95193217f2d3b5efdeebd6201002ddc0c29ca3b8" translate="yes" xml:space="preserve">
          <source>this(T)(in T[] uuid)</source>
          <target state="translated">this (T) (T [] uuid에서)</target>
        </trans-unit>
        <trans-unit id="fa68f5da74447c963c4f31654eaa6cd5e031e3e4" translate="yes" xml:space="preserve">
          <source>this(T)(ref T arg)</source>
          <target state="translated">this (T) (참조 T arg)</target>
        </trans-unit>
        <trans-unit id="f5accb87915cde3ad1941f1273ee7ee9dc799ba1" translate="yes" xml:space="preserve">
          <source>this(T[N] args...);</source>
          <target state="translated">this (T [N] 인수 ...);</target>
        </trans-unit>
        <trans-unit id="391fa2f814766f88d517302a51af4f0f780e0853" translate="yes" xml:space="preserve">
          <source>this(Types values);</source>
          <target state="translated">this (값 입력);</target>
        </trans-unit>
        <trans-unit id="08d91090903e36cbf76b0a199f0cda7698ed1b66" translate="yes" xml:space="preserve">
          <source>this(U)(U another)</source>
          <target state="translated">this (U) (U other)</target>
        </trans-unit>
        <trans-unit id="7d8429fe45ec82ea5a5b479084bf8f2effc03b89" translate="yes" xml:space="preserve">
          <source>this(U)(U rhs)</source>
          <target state="translated">이것 (U)</target>
        </trans-unit>
        <trans-unit id="b0c5e5f39324cd8f5dd1083b1fc2f35a19cef0f1" translate="yes" xml:space="preserve">
          <source>this(U)(U[] values...)</source>
          <target state="translated">this (U) (U [] 값 ...)</target>
        </trans-unit>
        <trans-unit id="3bf8d73e19975648794b4faa91311fce5e00d1b9" translate="yes" xml:space="preserve">
          <source>this(U)(Unique!U u)</source>
          <target state="translated">this (U) (유니크! U u)</target>
        </trans-unit>
        <trans-unit id="f5dc29382e30bc99fff1205889385f7cce766dd3" translate="yes" xml:space="preserve">
          <source>this(U)(ref allocator!U);</source>
          <target state="translated">this (U) (참조 할당 자! U);</target>
        </trans-unit>
        <trans-unit id="687c951d7ce2213dc4b3ef58e01300cf063e35f8" translate="yes" xml:space="preserve">
          <source>this(U, size_t n)(U[n] values)</source>
          <target state="translated">this (U, size_t n) (U [n] 값)</target>
        </trans-unit>
        <trans-unit id="c2058415906e2fbe2bd4b0af1c3da7624e6690c1" translate="yes" xml:space="preserve">
          <source>this(VarDeclaration var);</source>
          <target state="translated">this (VarDeclaration var);</target>
        </trans-unit>
        <trans-unit id="f7ff757c957b0081bbaefffb863b243c45bdd0d5" translate="yes" xml:space="preserve">
          <source>this(Variant vals);</source>
          <target state="translated">이것 (Variant vals);</target>
        </trans-unit>
        <trans-unit id="5b25a7ebc02eed9e5510f53080553ddaedfffdf7" translate="yes" xml:space="preserve">
          <source>this(const(T)[] str);</source>
          <target state="translated">this (const (T) [] str);</target>
        </trans-unit>
        <trans-unit id="1ad74df05cd670972258762fb0341dc707d8a2a5" translate="yes" xml:space="preserve">
          <source>this(const(T)[] str, ref const(allocator_type) al);</source>
          <target state="translated">this (const (T) [] str, ref const (allocator_type) al);</target>
        </trans-unit>
        <trans-unit id="2b9519177060e3b1990fa343397a2c879a0184bb" translate="yes" xml:space="preserve">
          <source>this(const(Tag) tag);</source>
          <target state="translated">this (const (Tag) 태그);</target>
        </trans-unit>
        <trans-unit id="dac1ea32d3a449132e929059e8f90f8d36be4534" translate="yes" xml:space="preserve">
          <source>this(int level, HeaderFormat header = HeaderFormat.deflate);</source>
          <target state="translated">this (int level, HeaderFormat header = HeaderFormat.deflate);</target>
        </trans-unit>
        <trans-unit id="2d532322fca65dd79882e07c36fd5cf545aaea2b" translate="yes" xml:space="preserve">
          <source>this(ref Factory plant);</source>
          <target state="translated">이것은 (공장 공장 참조);</target>
        </trans-unit>
        <trans-unit id="83d79a61a7341690ee167be09719cec6d48a1318" translate="yes" xml:space="preserve">
          <source>this(ref RefT p);</source>
          <target state="translated">이것 (ref Ref p);</target>
        </trans-unit>
        <trans-unit id="91b3b9223f915e55af68f07cea254bb715cf4044" translate="yes" xml:space="preserve">
          <source>this(ref const Loc loc, AST.Module _module, const(char)[] input, bool doDocComment, DiagnosticReporter diagnosticReporter);</source>
          <target state="translated">this (ref const Loc loc, AST.Module _module, const (char) [] 입력, bool doDocComment, DiagnosticReporter diagnosticReporter);</target>
        </trans-unit>
        <trans-unit id="51c5ea8fd0b6479025da50f26241ef7c6f3648d8" translate="yes" xml:space="preserve">
          <source>this(ref const Loc loc, Expression e1, Expression e2);</source>
          <target state="translated">this (ref const Loc loc, Expression e1, Expression e2 참조);</target>
        </trans-unit>
        <trans-unit id="6dd6c15af1399dc218667042fbd3f777f861f049" translate="yes" xml:space="preserve">
          <source>this(ref const Loc loc, Expression e1, IntervalExp ie);</source>
          <target state="translated">this (ref const Loc loc, Expression e1, IntervalExp ie);</target>
        </trans-unit>
        <trans-unit id="a1a435dc5cef9ce73f9a171072aa38e504813a2c" translate="yes" xml:space="preserve">
          <source>this(ref const Loc loc, FuncDeclaration fd, Expression earg1);</source>
          <target state="translated">이것 (참조 const Loc loc, FuncDeclaration fd, expression earg1);</target>
        </trans-unit>
        <trans-unit id="599a9639613950d290b190e74d24624774e382cb" translate="yes" xml:space="preserve">
          <source>this(ref const Loc loc, Identifiers* pkg_identifiers, Dsymbols* decl);</source>
          <target state="translated">this (ref const Loc loc, Identifiers * pkg_identifiers, Dsymbols * decl 참조);</target>
        </trans-unit>
        <trans-unit id="3ab5c16270e77fbcfaf40d210e36ed752be7a36c" translate="yes" xml:space="preserve">
          <source>this(ref const Loc loc, Prot protection, Dsymbols* decl);</source>
          <target state="translated">이것 (참조 const Loc loc, Prot protection, Dsymbols * decl 참조);</target>
        </trans-unit>
        <trans-unit id="684129df3d7ff529627d1d669872505b9dc0fc3c" translate="yes" xml:space="preserve">
          <source>this(ref const Loc loc, TemplateDeclaration td, Objects* tiargs);</source>
          <target state="translated">this (ref const Loc loc, TemplateDeclaration td, Objects * tiargs 참조);</target>
        </trans-unit>
        <trans-unit id="777b56a5db24e4c4b797da2d6819e87e288c50ae" translate="yes" xml:space="preserve">
          <source>this(scope const(ubyte)[] secret);</source>
          <target state="translated">this (scope const (ubyte) [] secret);</target>
        </trans-unit>
        <trans-unit id="fb4afcfdc67a1807585b4c22631caa699901477f" translate="yes" xml:space="preserve">
          <source>this(size_t bytes);</source>
          <target state="translated">this (size_t 바이트);</target>
        </trans-unit>
        <trans-unit id="cf6808dbacb0f912fdf699f06ec5f1098371b89b" translate="yes" xml:space="preserve">
          <source>this(size_t bytes, size_t max);</source>
          <target state="translated">this (size_t 바이트, size_t max);</target>
        </trans-unit>
        <trans-unit id="f830b3fcd1ca6cbf5410c62b6cfff9751ff122d2" translate="yes" xml:space="preserve">
          <source>this(size_t bytes, size_t min, size_t max);</source>
          <target state="translated">this (size_t 바이트, size_t min, size_t max);</target>
        </trans-unit>
        <trans-unit id="c79da15eeff8f2878eca9123234457f412015fc7" translate="yes" xml:space="preserve">
          <source>this(size_t capacity);</source>
          <target state="translated">이것 (size_t capacity);</target>
        </trans-unit>
        <trans-unit id="b25edb0de5b97a2c0cce76ab4eb65e458635828e" translate="yes" xml:space="preserve">
          <source>this(size_t capacity, uint blockSize);</source>
          <target state="translated">this (size_t capacity, uint blockSize);</target>
        </trans-unit>
        <trans-unit id="75a6367a0e8664d254065a68d5ddb468198b12a7" translate="yes" xml:space="preserve">
          <source>this(size_t n);</source>
          <target state="translated">이것 (size_t n);</target>
        </trans-unit>
        <trans-unit id="086be992fd4151554c65cca4c8e99799c6af0655" translate="yes" xml:space="preserve">
          <source>this(size_t size);</source>
          <target state="translated">이것 (size_t 크기);</target>
        </trans-unit>
        <trans-unit id="73316e73c474cd30b7220156335e100c4aaf4bca" translate="yes" xml:space="preserve">
          <source>this(string filename);</source>
          <target state="translated">this (문자열 파일명);</target>
        </trans-unit>
        <trans-unit id="e69058ab26b82bec00c9bb188c83d4127f985cd7" translate="yes" xml:space="preserve">
          <source>this(string filename, Mode mode, ulong size, void* address, size_t window = 0);</source>
          <target state="translated">this (문자열 파일 이름, 모드 모드, ulong 크기, void * 주소, size_t 창 = 0);</target>
        </trans-unit>
        <trans-unit id="a235ff86071906e7a94cc7aac05069f3e530645f" translate="yes" xml:space="preserve">
          <source>this(string flag, string helpText, TargetOS os = TargetOS.all);</source>
          <target state="translated">this (문자열 플래그, 문자열 helpText, TargetOS os = TargetOS.all);</target>
        </trans-unit>
        <trans-unit id="9a292d49ddccec75fef9955449a177c1c104f682" translate="yes" xml:space="preserve">
          <source>this(string flag, string helpText, string ddocText, TargetOS os = TargetOS.all);</source>
          <target state="translated">this (문자열 플래그, 문자열 helpText, 문자열 ddocText, TargetOS os = TargetOS.all);</target>
        </trans-unit>
        <trans-unit id="b85620fe072484cbbb8ef5311be7e77359ffb2d1" translate="yes" xml:space="preserve">
          <source>this(string s);</source>
          <target state="translated">이것 (문자열 s);</target>
        </trans-unit>
        <trans-unit id="8ed43498e99854caf778ae8c77a869b5b50157dc" translate="yes" xml:space="preserve">
          <source>this(string xmlText_);</source>
          <target state="translated">this (string xmlText_);</target>
        </trans-unit>
        <trans-unit id="beecf9013005c8fe68ae16f5e4ad7f66c200d631" translate="yes" xml:space="preserve">
          <source>this(ubyte[] b);</source>
          <target state="translated">this (ubyte [] b);</target>
        </trans-unit>
        <trans-unit id="5cb65903006b540379fbad31bdee0df192876b5f" translate="yes" xml:space="preserve">
          <source>this(ubyte[] buffer);</source>
          <target state="translated">this (ubyte [] 버퍼);</target>
        </trans-unit>
        <trans-unit id="76f24231bb7a2ab490e9427b42f429d4f7112f34" translate="yes" xml:space="preserve">
          <source>this(ubyte[] data);</source>
          <target state="translated">this (ubyte [] 데이터);</target>
        </trans-unit>
        <trans-unit id="3fce0a842466b8c67f6971a5762b99fc6a126000" translate="yes" xml:space="preserve">
          <source>this(ubyte[] data, uint blockSize);</source>
          <target state="translated">this (ubyte [] data, uint blockSize);</target>
        </trans-unit>
        <trans-unit id="29627e6cb741ceb32a58dadccab0c19d2757917f" translate="yes" xml:space="preserve">
          <source>this(uint count = 0);</source>
          <target state="translated">this (uint count = 0);</target>
        </trans-unit>
        <trans-unit id="2b8c2e1595754ddb7abd4640b1c78e7ad99f6d4b" translate="yes" xml:space="preserve">
          <source>this(uint destbufsize);</source>
          <target state="translated">이것 (uint destbufsize);</target>
        </trans-unit>
        <trans-unit id="704c60947acc34ec0970861027cdb2b0a5a9489d" translate="yes" xml:space="preserve">
          <source>this(uint limit);</source>
          <target state="translated">이것 (한도);</target>
        </trans-unit>
        <trans-unit id="7158b726e60b242b57363e0033fb63b32a4b3792" translate="yes" xml:space="preserve">
          <source>this(void delegate() dg);</source>
          <target state="translated">this (void delegate () dg);</target>
        </trans-unit>
        <trans-unit id="004c7b0e5fa4a8a881fd26611436d4b0e2716634" translate="yes" xml:space="preserve">
          <source>this(void delegate() dg, size_t sz);</source>
          <target state="translated">this (void delegate () dg, size_t sz);</target>
        </trans-unit>
        <trans-unit id="f2ddd3ca3f0bc66e6f7a08b28459ecce9887f659" translate="yes" xml:space="preserve">
          <source>this(void delegate() dg, size_t sz, size_t guardPageSize);</source>
          <target state="translated">this (void delegate () dg, size_t sz, size_t guardPageSize);</target>
        </trans-unit>
        <trans-unit id="d71029469fb4de840a1b248766b8275bc807f93b" translate="yes" xml:space="preserve">
          <source>this(void function() fn);</source>
          <target state="translated">this (void function () fn);</target>
        </trans-unit>
        <trans-unit id="73fdbd6c65cc1e2e8907301a23b1ddec15a69982" translate="yes" xml:space="preserve">
          <source>this(void function() fn, size_t sz);</source>
          <target state="translated">this (void function () fn, size_t sz);</target>
        </trans-unit>
        <trans-unit id="28864751b43165489ea68859a30b338c803c2737" translate="yes" xml:space="preserve">
          <source>this(void function() fn, size_t sz, size_t guardPageSize);</source>
          <target state="translated">this (void function () fn, size_t sz, size_t guardPageSize);</target>
        </trans-unit>
        <trans-unit id="cde580bd6f012cac0bf8743d137b53519ad6910d" translate="yes" xml:space="preserve">
          <source>this(void[] buffer);</source>
          <target state="translated">this (void [] 버퍼);</target>
        </trans-unit>
        <trans-unit id="ea8b4eb9153202ed55af83427fd7a51cb645bf3c" translate="yes" xml:space="preserve">
          <source>thisexp.new(newargs) class baseclasses { } (arguments)</source>
          <target state="translated">thisexp.new (newargs) 클래스 기본 클래스 {} (인수)</target>
        </trans-unit>
        <trans-unit id="c3657cc193339f36aa8bafa429a331600232bea5" translate="yes" xml:space="preserve">
          <source>thisexp.new(newargs) newtype(arguments)</source>
          <target state="translated">thisexp.new (newargs) newtype (인수)</target>
        </trans-unit>
        <trans-unit id="15813982c4da2af5ffa7ef1ab93a90e30e85bb10" translate="yes" xml:space="preserve">
          <source>those fields need to prevent a infinite recursion when one field of struct initialized with 'this' pointer.</source>
          <target state="translated">이 필드들은 구조체의 한 필드가 'this'포인터로 초기화 될 때 무한 재귀를 방지해야합니다.</target>
        </trans-unit>
        <trans-unit id="08970613b12a33059a5ae478b8b943ea892483f3" translate="yes" xml:space="preserve">
          <source>thread id of the log message</source>
          <target state="translated">로그 메시지의 스레드 ID</target>
        </trans-unit>
        <trans-unit id="b802f384302cb24fbab0a44997e820bf2e8507bb" translate="yes" xml:space="preserve">
          <source>three</source>
          <target state="translated">three</target>
        </trans-unit>
        <trans-unit id="7f2bfb2719a05cfa825dfc8f5285a5fe575a6774" translate="yes" xml:space="preserve">
          <source>three convenient &quot;aliases&quot; that follow the name scheme better</source>
          <target state="translated">이름 체계를 더 잘 따르는 세 가지 편리한 &quot;별칭&quot;</target>
        </trans-unit>
        <trans-unit id="82e1e65e746095c03af26c6b1a234b5b2b001b20" translate="yes" xml:space="preserve">
          <source>three matches of length 1, namely &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;, &lt;code&gt;&quot;new&quot;&lt;/code&gt;, and &lt;code&gt;&quot;world&quot;&lt;/code&gt;;</source>
          <target state="translated">길이가 1 인 세 개의 일치 항목, 즉 &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; , &lt;code&gt;&quot;new&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;world&quot;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="203fd58b5adcd8ede9dc0b4d1f95d055653b56ed" translate="yes" xml:space="preserve">
          <source>three matches of length 2, namely (&lt;code&gt;&quot;Hello&quot;, &quot;new&quot;&lt;/code&gt;), (&lt;code&gt;&quot;Hello&quot;, &quot;world&quot;&lt;/code&gt;), and (&lt;code&gt;&quot;new&quot;, &quot;world&quot;&lt;/code&gt;);</source>
          <target state="translated">길이가 2 인 3 개의 일치 항목, 즉 ( &lt;code&gt;&quot;Hello&quot;, &quot;new&quot;&lt;/code&gt; ), ( &lt;code&gt;&quot;Hello&quot;, &quot;world&quot;&lt;/code&gt; ) 및 ( &lt;code&gt;&quot;new&quot;, &quot;world&quot;&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="f7dd748b39840a5abd92c296481229b4b3ed2843" translate="yes" xml:space="preserve">
          <source>through which the class object's other members can be accessed.</source>
          <target state="translated">이를 통해 클래스 객체의 다른 멤버에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1577e1b54f5b0cfddee04ba6ec8cd8335aea838" translate="yes" xml:space="preserve">
          <source>throw at runtime, the wrapper will throw an &lt;code&gt;AssertError&lt;/code&gt;.</source>
          <target state="translated">런타임에 던지면 래퍼는 &lt;code&gt;AssertError&lt;/code&gt; 를 던집니다 .</target>
        </trans-unit>
        <trans-unit id="cfcc7b68279924881f11e3dc214785384bebbd21" translate="yes" xml:space="preserve">
          <source>throw the given type of &lt;code&gt;Throwable&lt;/code&gt;. If a &lt;code&gt;Throwable&lt;/code&gt; of the given type is thrown, it is caught and does not escape assertNotThrown. Rather, an &lt;code&gt;AssertError&lt;/code&gt; is thrown. However, any other &lt;code&gt;Throwable&lt;/code&gt;s will escape.</source>
          <target state="translated">주어진 유형의 &lt;code&gt;Throwable&lt;/code&gt; 을 던집니다 . 주어진 타입 의 &lt;code&gt;Throwable&lt;/code&gt; 이 던져지면, 그것은 잡히고 assertNotThrown을 이스케이프하지 않습니다. 오히려 &lt;code&gt;AssertError&lt;/code&gt; 가 발생합니다. 그러나 다른 &lt;code&gt;Throwable&lt;/code&gt; 은 탈출합니다.</target>
        </trans-unit>
        <trans-unit id="ff4fb9fc0b4d0d8d14ea45b87c356388a7de8ac3" translate="yes" xml:space="preserve">
          <source>throw the header out too</source>
          <target state="translated">헤더도 버리십시오</target>
        </trans-unit>
        <trans-unit id="a0475cdd6c194d2e89252aeb6977e03e03d8f711" translate="yes" xml:space="preserve">
          <source>throwing the &lt;code&gt;AssertError&lt;/code&gt; exception in the D runtime library</source>
          <target state="translated">던지는 &lt;code&gt;AssertError&lt;/code&gt; 의 는 D 런타임 라이브러리에 예외를</target>
        </trans-unit>
        <trans-unit id="d7c2034174176c3b0107c7f6801ac8b75070842b" translate="yes" xml:space="preserve">
          <source>thrown object</source>
          <target state="translated">던져진 물건</target>
        </trans-unit>
        <trans-unit id="f08a21ad2b92fd63906ada9267c74c279d8849f9" translate="yes" xml:space="preserve">
          <source>ti TypeInfo of the element type. dst Points target memory. Its .length is equal to the element count, not byte length. src Points source memory. Its .length is equal to the element count, not byte length. It is always allocated on stack and never overlapping with dst. ptmp Temporary memory for element swapping.</source>
          <target state="translated">ti 요소 유형의 Info 정보. dst 포인트 대상 메모리. .length는 바이트 길이가 아닌 요소 수와 같습니다. src 소스 메모리를 가리 킵니다. .length는 바이트 길이가 아닌 요소 수와 같습니다. 항상 스택에 할당되며 dst와 겹치지 않습니다. ptmp 요소 교환을위한 임시 메모리.</target>
        </trans-unit>
        <trans-unit id="4f04df0a9e8bd039e5386eae41e21e4015562b0b" translate="yes" xml:space="preserve">
          <source>ti TypeInfo of the element type. dst Points target memory. Its .length is equal to the element count, not byte length. src Points source memory. Its .length is equal to the element count, not byte length. ptmp Temporary memory for element swapping.</source>
          <target state="translated">ti 요소 유형의 Info 정보. dst 포인트 대상 메모리. .length는 바이트 길이가 아닌 요소 수와 같습니다. src 소스 메모리를 가리 킵니다. .length는 바이트 길이가 아닌 요소 수와 같습니다. ptmp 요소 교환을위한 임시 메모리.</target>
        </trans-unit>
        <trans-unit id="3f9b5d386b324a092de01f2f20e0d31c0595dc46" translate="yes" xml:space="preserve">
          <source>ti sc instantiation scope fd tthis 'this' argument if !NULL fargs arguments to function</source>
          <target state="translated">ti sc 인스턴스화 범위 fd tthis 'this'인수 인 경우! NULL은 인수를 함수에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="041cbafb52e00aea36692f860ef766305aa6c15c" translate="yes" xml:space="preserve">
          <source>tightening</source>
          <target state="translated">tightening</target>
        </trans-unit>
        <trans-unit id="072d2936ff5114d22c476ee6d45f1b146be3c0c4" translate="yes" xml:space="preserve">
          <source>time_t &lt;strong id=&quot;curl_getdate&quot;&gt;curl_getdate&lt;/strong&gt;(const(char)* p, const(time_t)* unused);</source>
          <target state="translated">time_t &lt;strong id=&quot;curl_getdate&quot;&gt;curl_getdate&lt;/strong&gt; (const (char) * p, const (time_t) * 미사용);</target>
        </trans-unit>
        <trans-unit id="36b4bcd1ffd174fba64025a1e5e85fb84870d7af" translate="yes" xml:space="preserve">
          <source>time_t &lt;strong id=&quot;time&quot;&gt;time&lt;/strong&gt;;</source>
          <target state="translated">time_t &lt;strong id=&quot;time&quot;&gt;시간&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7196b5875f713c826bd279dbda843c897e2a60c2" translate="yes" xml:space="preserve">
          <source>times</source>
          <target state="translated">times</target>
        </trans-unit>
        <trans-unit id="c0de7f65b7a84d164ad18e6ea9d670c0bb46ea27" translate="yes" xml:space="preserve">
          <source>times, or an infinite range repeating that element indefinitely.</source>
          <target state="translated">해당 요소를 무한정 반복하는 시간 또는 무한 범위.</target>
        </trans-unit>
        <trans-unit id="f0f63e3f2e71e204a031629e2ea5850f99552f14" translate="yes" xml:space="preserve">
          <source>times, where</source>
          <target state="translated">시간, 어디서</target>
        </trans-unit>
        <trans-unit id="110fad4e307bcbf2b7a4e7cd7913ebd82dba9b4a" translate="yes" xml:space="preserve">
          <source>timezone abbreviation</source>
          <target state="translated">시간대 약어</target>
        </trans-unit>
        <trans-unit id="06cb8fe7bd5ee0dfc3b196ffee0426c268ae3b66" translate="yes" xml:space="preserve">
          <source>tip to show after printing all overloads</source>
          <target state="translated">모든 과부하를 인쇄 한 후 표시 할 팁</target>
        </trans-unit>
        <trans-unit id="e94cd6330b8cf912ab139faf9b3364d2084a0138" translate="yes" xml:space="preserve">
          <source>title of error message</source>
          <target state="translated">오류 메시지 제목</target>
        </trans-unit>
        <trans-unit id="6e1dcd7f80a704924abc150b0049041fbdc3eeea" translate="yes" xml:space="preserve">
          <source>tk is on the opening (. Look ahead and return token that is past the closing ).</source>
          <target state="translated">tk가 시작 중입니다 (. 닫고 닫기 토큰을 반환하십시오).</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="2d2b911a4f29dde370481d2b9b8f3b3921269555" translate="yes" xml:space="preserve">
          <source>to &lt;a href=&quot;declaration#Type&quot;&gt;&lt;i&gt;Type&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">하기 &lt;a href=&quot;declaration#Type&quot;&gt;&lt;i&gt;입력합니다&lt;/i&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa8e6a301e744b00d257d38cb0189b066476e1fd" translate="yes" xml:space="preserve">
          <source>to a &lt;a href=&quot;statement#%20%20%20%20%20%20%20%20ForeachStatement&quot;&gt;&lt;i&gt; ForeachStatement&lt;/i&gt;&lt;/a&gt; which will iterate over key-value pairs of the associative array. The returned pairs are represented by an opaque type with &lt;code&gt;.key&lt;/code&gt; and &lt;code&gt;.value&lt;/code&gt; properties for accessing the key and value of the pair, respectively. Note that this is a low-level interface to iterating over the associative array and is not compatible with the &lt;a href=&quot;https://dlang.org/phobos/std_typecons.html#Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; type in Phobos. For compatibility with &lt;code&gt;Tuple&lt;/code&gt;, use &lt;a href=&quot;https://dlang.org/phobos/std_array.html#byPair&quot;&gt;std.array.byPair&lt;/a&gt; instead.</source>
          <target state="translated">연관 배열의 키-값 쌍을 반복 하는 &lt;a href=&quot;statement#%20%20%20%20%20%20%20%20ForeachStatement&quot;&gt;&lt;i&gt;ForeachStatement &lt;/i&gt;&lt;/a&gt;반환 된 쌍은 각각 키 및 값 쌍에 액세스하기위한 &lt;code&gt;.key&lt;/code&gt; 및 &lt;code&gt;.value&lt;/code&gt; 속성이 있는 불투명 한 유형으로 표시됩니다 . 이것은 연관 배열을 반복하는 저수준 인터페이스 이며 Phobos 의 &lt;a href=&quot;https://dlang.org/phobos/std_typecons.html#Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt; 유형 과 호환되지 않습니다 . &lt;code&gt;Tuple&lt;/code&gt; 과의 호환성을 위해 &lt;a href=&quot;https://dlang.org/phobos/std_array.html#byPair&quot;&gt;std.array.byPair를&lt;/a&gt; 대신 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e1148dd1bdab31a6830a3f8c2440148bda7c76c" translate="yes" xml:space="preserve">
          <source>to a &lt;a href=&quot;statement#ForeachStatement&quot;&gt;&lt;i&gt;ForeachStatement&lt;/i&gt;&lt;/a&gt; which will iterate over the keys of the associative array.</source>
          <target state="translated">연관 배열의 키를 반복 하는 &lt;a href=&quot;statement#ForeachStatement&quot;&gt;&lt;i&gt;ForeachStatement&lt;/i&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db16a53cd4c48cc2deb94fdc5027d51520b319d0" translate="yes" xml:space="preserve">
          <source>to a &lt;a href=&quot;statement#ForeachStatement&quot;&gt;&lt;i&gt;ForeachStatement&lt;/i&gt;&lt;/a&gt; which will iterate over the values of the associative array.</source>
          <target state="translated">연관 배열의 값을 반복 하는 &lt;a href=&quot;statement#ForeachStatement&quot;&gt;&lt;i&gt;ForeachStatement&lt;/i&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80dc7c6b9dff9cbfc02cca767e61ed48bcc3aae1" translate="yes" xml:space="preserve">
          <source>to a global). If it cannot be statically guaranteed that</source>
          <target state="translated">글로벌로). 정적으로 보장 할 수없는 경우</target>
        </trans-unit>
        <trans-unit id="0b7b3b54ded16e8deb7a67e5b1305bdf82e1c099" translate="yes" xml:space="preserve">
          <source>to a struct</source>
          <target state="translated">구조체에</target>
        </trans-unit>
        <trans-unit id="c37df5ff5ec5dedb9ebe2edd060481a866dd7d85" translate="yes" xml:space="preserve">
          <source>to be used to skip initializations.</source>
          <target state="translated">초기화를 건너 뛰는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1ac1c96c3dcc0bebc9926a940ee34569b1a0f944" translate="yes" xml:space="preserve">
          <source>to get file/line from</source>
          <target state="translated">파일 / 라인을 가져 오려면</target>
        </trans-unit>
        <trans-unit id="6e5ae0b992b24637d5e3f78486bd5d10aadae33d" translate="yes" xml:space="preserve">
          <source>to get function from</source>
          <target state="translated">기능을 얻기 위해</target>
        </trans-unit>
        <trans-unit id="ab78d7c18104ae8530e94a1854f405c384af8cc6" translate="yes" xml:space="preserve">
          <source>to print a message to &lt;code&gt;stderr&lt;/code&gt;. This syntax is no longer supported, and has been superceded by:</source>
          <target state="translated">&lt;code&gt;stderr&lt;/code&gt; 에 메시지를 인쇄합니다 . 이 구문은 더 이상 지원되지 않으며 다음으로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="5c2898b75f58638f936243a608bc25011a6aa195" translate="yes" xml:space="preserve">
          <source>to the</source>
          <target state="translated">~로</target>
        </trans-unit>
        <trans-unit id="8437fbf82902cc050ae4f460e6fb17061335c686" translate="yes" xml:space="preserve">
          <source>to the base, but do not change its properties.</source>
          <target state="translated">기본으로, 그러나 속성을 변경하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="fa12f060514f3a561f9aa9fadeaa9a4bb24ca567" translate="yes" xml:space="preserve">
          <source>to the outer class instance of &lt;code&gt;Outer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Outer&lt;/code&gt; 의 외부 클래스 인스턴스에 .</target>
        </trans-unit>
        <trans-unit id="41ada2c8cd45c3e85442514a08e10b765840015d" translate="yes" xml:space="preserve">
          <source>to use a different list command</source>
          <target state="translated">다른 list 명령을 사용하려면</target>
        </trans-unit>
        <trans-unit id="e71105d92e345fcac16e349de8cfbb7f31be846c" translate="yes" xml:space="preserve">
          <source>to void initialise the elements of dynamic array use &lt;a href=&quot;https://dlang.org/phobos/std_array.html#uninitializedArray&quot;&gt;&lt;code&gt;std.array.uninitializedArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">동적 배열의 요소를 초기화하지 &lt;a href=&quot;https://dlang.org/phobos/std_array.html#uninitializedArray&quot;&gt; &lt;code&gt;std.array.uninitializedArray&lt;/code&gt; &lt;/a&gt; 려면 std.array.uninitializedArray를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ebe4b7eb4073d3a5445e3ab17f5945d443536e4" translate="yes" xml:space="preserve">
          <source>toCBuffer is running</source>
          <target state="translated">toCBuffer가 실행 중입니다</target>
        </trans-unit>
        <trans-unit id="e7eddeefe5b33095b546124bbe200432546e8fc6" translate="yes" xml:space="preserve">
          <source>toUpper can be used as an argument to &lt;a href=&quot;std_algorithm_iteration#map&quot;&gt;&lt;code&gt;std.algorithm.iteration.map&lt;/code&gt;&lt;/a&gt; to produce an algorithm that can convert a range of characters to upper case without allocating memory. A string can then be produced by using &lt;a href=&quot;std_algorithm_mutation#copy&quot;&gt;&lt;code&gt;std.algorithm.mutation.copy&lt;/code&gt;&lt;/a&gt; to send it to an &lt;a href=&quot;std_array#appender&quot;&gt;&lt;code&gt;std.array.appender&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">toUpper는 &lt;a href=&quot;std_algorithm_iteration#map&quot;&gt; &lt;code&gt;std.algorithm.iteration.map&lt;/code&gt; &lt;/a&gt; 의 인수로 사용되어 메모리를 할당하지 않고 문자 범위를 대문자로 변환 할 수있는 알고리즘을 생성 할 수 있습니다. 문자열은 다음 사용하여 제조 할 수있다 &lt;a href=&quot;std_algorithm_mutation#copy&quot;&gt; &lt;code&gt;std.algorithm.mutation.copy&lt;/code&gt; 를&lt;/a&gt; 로 전송 &lt;a href=&quot;std_array#appender&quot;&gt; &lt;code&gt;std.array.appender&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94bae142f2e1935178d9d5005bde3f90f00cf0eb" translate="yes" xml:space="preserve">
          <source>tocsym.d</source>
          <target state="translated">tocsym.d</target>
        </trans-unit>
        <trans-unit id="8a4ac17171b79396a99e97128e57dd0350946ebe" translate="yes" xml:space="preserve">
          <source>toctype.d</source>
          <target state="translated">toctype.d</target>
        </trans-unit>
        <trans-unit id="e470dae8bc6a18e42bfda34a71daa9d862013eaa" translate="yes" xml:space="preserve">
          <source>tocvdebug.d</source>
          <target state="translated">tocvdebug.d</target>
        </trans-unit>
        <trans-unit id="49af37dd6656017d66247527b7ce37b058c178a8" translate="yes" xml:space="preserve">
          <source>todt.d</source>
          <target state="translated">todt.d</target>
        </trans-unit>
        <trans-unit id="8e0000c30aaa2ee635b1afc77d3a428802d598fe" translate="yes" xml:space="preserve">
          <source>toir.d</source>
          <target state="translated">toir.d</target>
        </trans-unit>
        <trans-unit id="875599df54107a4c3f4e3edda77e46b9b453c3a3" translate="yes" xml:space="preserve">
          <source>tokens.d</source>
          <target state="translated">tokens.d</target>
        </trans-unit>
        <trans-unit id="0cf61d11351ab756752e82cd4c28e95d17ed7551" translate="yes" xml:space="preserve">
          <source>toobj.d</source>
          <target state="translated">toobj.d</target>
        </trans-unit>
        <trans-unit id="7ab30833251a45a2683d64c0b2f70d58e2376d21" translate="yes" xml:space="preserve">
          <source>tool support</source>
          <target state="translated">도구 지원</target>
        </trans-unit>
        <trans-unit id="91576d2316540153909f4e708e7d5f2fe85422f7" translate="yes" xml:space="preserve">
          <source>topology</source>
          <target state="translated">topology</target>
        </trans-unit>
        <trans-unit id="15f0bf726fef12674661b5d87d677b9cc53ef949" translate="yes" xml:space="preserve">
          <source>total bytes to download</source>
          <target state="translated">다운로드 할 총 바이트</target>
        </trans-unit>
        <trans-unit id="058fa36572d10d3be9e1eba84247d89461010b12" translate="yes" xml:space="preserve">
          <source>total bytes to upload</source>
          <target state="translated">업로드 할 총 바이트</target>
        </trans-unit>
        <trans-unit id="ade69d79024524b5a353c5c77af1c4640e51cc32" translate="yes" xml:space="preserve">
          <source>total number of GC cycles</source>
          <target state="translated">총 GC 사이클 수</target>
        </trans-unit>
        <trans-unit id="d63ed591dea6b56cb28a6170a2fdfe17398034d1" translate="yes" xml:space="preserve">
          <source>total time spent doing GC</source>
          <target state="translated">GC를하는 데 걸린 총 시간</target>
        </trans-unit>
        <trans-unit id="4a7ac1ff7c68f885e1cdb70d9e4aedca2e309d51" translate="yes" xml:space="preserve">
          <source>total time threads were paused doing GC</source>
          <target state="translated">GC를 수행하는 동안 스레드가 일시 중지 된 총 시간</target>
        </trans-unit>
        <trans-unit id="d0fa554885668a7da849d5aa5a4a76d7a8fad0b8" translate="yes" xml:space="preserve">
          <source>trace</source>
          <target state="translated">trace</target>
        </trans-unit>
        <trans-unit id="e595d70ce9c74f1d7fe6909bd042de31cbfc348d" translate="yes" xml:space="preserve">
          <source>traits.d</source>
          <target state="translated">traits.d</target>
        </trans-unit>
        <trans-unit id="88b15347335ceddc2b35f87a9ba95bdf04532ac1" translate="yes" xml:space="preserve">
          <source>transfer data in text/ASCII format</source>
          <target state="translated">텍스트 / ASCII 형식으로 데이터 전송</target>
        </trans-unit>
        <trans-unit id="dd8ce13ad1ba5d660b1c242d9f2cb063a8429155" translate="yes" xml:space="preserve">
          <source>transform</source>
          <target state="translated">transform</target>
        </trans-unit>
        <trans-unit id="66b8b8f6d7c90f70f6f5ea93d7a19cce642e5331" translate="yes" xml:space="preserve">
          <source>transitive</source>
          <target state="translated">transitive</target>
        </trans-unit>
        <trans-unit id="e64c759370765fbf9546578ca594477ace2e0aa6" translate="yes" xml:space="preserve">
          <source>transitive const</source>
          <target state="translated">전이 const</target>
        </trans-unit>
        <trans-unit id="f47a5dfc5f905f158f1570d543d0f8bc0b806ed6" translate="yes" xml:space="preserve">
          <source>translates to:</source>
          <target state="translated">다음과 같이 번역됩니다.</target>
        </trans-unit>
        <trans-unit id="a6d7193fe564abcef4e0556865f1dcf953101008" translate="yes" xml:space="preserve">
          <source>translation array</source>
          <target state="translated">번역 배열</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="d0366a3d85554a61391aa67ab8ee06b97b320bd8" translate="yes" xml:space="preserve">
          <source>true &lt;b&gt;iff&lt;/b&gt;&lt;code&gt;this&lt;/code&gt; is in the null state, otherwise false.</source>
          <target state="translated">진정한 &lt;b&gt;IFF &lt;/b&gt; &lt;code&gt;this&lt;/code&gt; , 널 상태로, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="de67b8f9733857e4637ea1fd0a52f12e42cf4746" translate="yes" xml:space="preserve">
          <source>true = &lt;code&gt;this&lt;/code&gt; can be used in place of &lt;code&gt;p&lt;/code&gt; false = nope</source>
          <target state="translated">진정한 = &lt;code&gt;this&lt;/code&gt; 대신 사용할 수 있습니다 &lt;code&gt;p&lt;/code&gt; 싫다 = 거짓</target>
        </trans-unit>
        <trans-unit id="b38791ce3e441b49cfbbc860173e4cff957ef711" translate="yes" xml:space="preserve">
          <source>true for errors, false for success</source>
          <target state="translated">오류의 경우 true, 성공의 경우 false</target>
        </trans-unit>
        <trans-unit id="4b915564b95f2a0692c32f4911dd870f85968f48" translate="yes" xml:space="preserve">
          <source>true for foreach, false for foreach_reverse</source>
          <target state="translated">foreach의 경우 true, foreach_reverse의 경우 false</target>
        </trans-unit>
        <trans-unit id="5a549c061afd521cb886a298425a1d57631d1a04" translate="yes" xml:space="preserve">
          <source>true for match</source>
          <target state="translated">일치하는 사실</target>
        </trans-unit>
        <trans-unit id="494e4e54096c7dac1951a838b776eb12cac4d0de" translate="yes" xml:space="preserve">
          <source>true for write fetch, false for read fetch</source>
          <target state="translated">쓰기 가져 오기의 경우 true, 읽기 가져 오기의 경우 false</target>
        </trans-unit>
        <trans-unit id="8b712d100343fb1f2793cf4499e2abf517961085" translate="yes" xml:space="preserve">
          <source>true found an 'out' contract</source>
          <target state="translated">'아웃'계약을 찾았습니다</target>
        </trans-unit>
        <trans-unit id="c26b9e84cb1bdd1970b65909befd739e57b0c38e" translate="yes" xml:space="preserve">
          <source>true if 'introducing' function</source>
          <target state="translated">'introducing'기능인 경우 true</target>
        </trans-unit>
        <trans-unit id="07cdf5d8e106a2ee7d8a506490f5fe7e9d887a6d" translate="yes" xml:space="preserve">
          <source>true if 0 bits</source>
          <target state="translated">0 비트이면 true</target>
        </trans-unit>
        <trans-unit id="8d661b34c159f8e0200dc4082087787c48265903" translate="yes" xml:space="preserve">
          <source>true if &lt;code&gt;T&lt;/code&gt; is a &lt;code&gt;Tuple&lt;/code&gt; type, false otherwise.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 가 &lt;code&gt;Tuple&lt;/code&gt; 유형 이면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="dad93b81e02a127ef1f600481efa71d51a05fd80" translate="yes" xml:space="preserve">
          <source>true if &lt;code&gt;path&lt;/code&gt; is a valid path.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 가 유효한 경로 이면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="749fd835eaeceba12bed894e26459ef99dc7b13d" translate="yes" xml:space="preserve">
          <source>true if &lt;code&gt;t&lt;/code&gt; is isolated from any inputs to the function</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; 가 함수의 입력에서 분리 된 경우 true</target>
        </trans-unit>
        <trans-unit id="967f6c767df52a4472866ef28407b28f68e4c625" translate="yes" xml:space="preserve">
          <source>true if &lt;code&gt;this&lt;/code&gt; is in the null state, otherwise false.</source>
          <target state="translated">true의 경우 &lt;code&gt;this&lt;/code&gt; , 널 상태로, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="6b44fb02712b9168af4b941bff7173a0b5c72d34" translate="yes" xml:space="preserve">
          <source>true if @safe</source>
          <target state="translated">@safe이면 true</target>
        </trans-unit>
        <trans-unit id="a258199ede5cc1868a6cbd1e0213aa4032d1c6b2" translate="yes" xml:space="preserve">
          <source>true if T represents a string that is subject to autodecoding  See Also: &lt;a href=&quot;#isNarrowString&quot;&gt;&lt;code&gt;isNarrowString&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">T는 또한 참조를 autodecoding이 적용됩니다 문자열을 나타내는 true의 경우 : &lt;a href=&quot;#isNarrowString&quot;&gt; &lt;code&gt;isNarrowString&lt;/code&gt; 를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5aacf9422085ce0ad4d3b5de02cae1398be822f2" translate="yes" xml:space="preserve">
          <source>true if absolute path name.</source>
          <target state="translated">절대 경로 이름이면 true입니다.</target>
        </trans-unit>
        <trans-unit id="316648f1aec2757c3a381b825deb8052a3767885" translate="yes" xml:space="preserve">
          <source>true if an expression of type t can be e1 in an array expression</source>
          <target state="translated">배열 표현식에서 t 유형의 표현식이 e1 일 수있는 경우 true</target>
        </trans-unit>
        <trans-unit id="de4463a500018dff0e4ea051d1c5a0b96a1cc98c" translate="yes" xml:space="preserve">
          <source>true if any entries were filled in by members of cd (not exclusively by base classes)</source>
          <target state="translated">cd의 멤버가 입력 한 항목이있는 경우 true (기본 클래스가 아닌)</target>
        </trans-unit>
        <trans-unit id="cc20bea31434a936e6a59ff31c47ea52749602ff" translate="yes" xml:space="preserve">
          <source>true if any errors happen.</source>
          <target state="translated">오류가 발생하면 true입니다.</target>
        </trans-unit>
        <trans-unit id="9b586e2c7124bbc9e25ad9f624c2b0b3ae1d6eb5" translate="yes" xml:space="preserve">
          <source>true if any errors occur.</source>
          <target state="translated">오류가 발생하면 true입니다.</target>
        </trans-unit>
        <trans-unit id="f3da6fa73b857eb8233b991d7ebff159a19b4202" translate="yes" xml:space="preserve">
          <source>true if any part of type t is speculative. if t is null, returns false.</source>
          <target state="translated">t 유형의 일부가 추측적인 경우 true입니다. t가 null이면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c58212313dcc06a24fb18286d7343772c4313093" translate="yes" xml:space="preserve">
          <source>true if array operation</source>
          <target state="translated">배열 연산의 경우 true</target>
        </trans-unit>
        <trans-unit id="49ddf55713cb74614f73d25a81d01a68b96d95c7" translate="yes" xml:space="preserve">
          <source>true if attributes are for a symbolic link</source>
          <target state="translated">속성이 심볼릭 링크 인 경우 true</target>
        </trans-unit>
        <trans-unit id="750f1d08a320a7fe2331a37183926a3d0d47c196" translate="yes" xml:space="preserve">
          <source>true if attributes specifies a directory</source>
          <target state="translated">속성이 디렉토리를 지정하면 true</target>
        </trans-unit>
        <trans-unit id="449f65f9ab7aced086b183fc8f3d115d6f786f34" translate="yes" xml:space="preserve">
          <source>true if body falls through to finally</source>
          <target state="translated">시체가 마침내 넘어지면 참</target>
        </trans-unit>
        <trans-unit id="ddea5bb4ce9584fb61a07df8ecf2a3cb26ccd51a" translate="yes" xml:space="preserve">
          <source>true if both &lt;code&gt;Tuple&lt;/code&gt;s are equal, otherwise false.</source>
          <target state="translated">두 &lt;code&gt;Tuple&lt;/code&gt; 이 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="6f34ebc9968695dd684ff6595e727eea244771ac" translate="yes" xml:space="preserve">
          <source>true if can</source>
          <target state="translated">할 수 있다면 참</target>
        </trans-unit>
        <trans-unit id="e063d227ea3b690fafffd899b678d5132a227d71" translate="yes" xml:space="preserve">
          <source>true if do array bounds checking for the current function</source>
          <target state="translated">현재 함수를 검사하는 배열 범위를 수행하는 경우 true</target>
        </trans-unit>
        <trans-unit id="bc937979fa2c7a43f3d42ff0108dd4bdff13ed86" translate="yes" xml:space="preserve">
          <source>true if e is a constant</source>
          <target state="translated">e가 상수이면 true</target>
        </trans-unit>
        <trans-unit id="89f37ce01eb1bc38c1e44508d6ca3f4040054988" translate="yes" xml:space="preserve">
          <source>true if error</source>
          <target state="translated">에러가 발생하면 true</target>
        </trans-unit>
        <trans-unit id="e575048d24182c500679fa6556ee3566738b6894" translate="yes" xml:space="preserve">
          <source>true if error occurs.</source>
          <target state="translated">오류가 발생하면 true입니다.</target>
        </trans-unit>
        <trans-unit id="2163932b72971af904cd6a2f80918e7350dd0ec4" translate="yes" xml:space="preserve">
          <source>true if errors in command line</source>
          <target state="translated">명령 행에 오류가있는 경우 true</target>
        </trans-unit>
        <trans-unit id="c7594695c6cd008b7a2be53bdaaf6cc370cb7180" translate="yes" xml:space="preserve">
          <source>true if errors in semantic3 this function's frame ptr</source>
          <target state="translated">시맨틱 3 오류가이 함수의 프레임 ptr 인 경우 true</target>
        </trans-unit>
        <trans-unit id="2a4fc97f236ca12cff409cff1df39111a5e00f91" translate="yes" xml:space="preserve">
          <source>true if escapes via assignment to global or through a parameter</source>
          <target state="translated">전역 또는 매개 변수를 통한 할당을 통해 이스케이프 된 경우 true</target>
        </trans-unit>
        <trans-unit id="a9bfe4e8a3a7e5f98ca484b07e6d9cb0ad3852c2" translate="yes" xml:space="preserve">
          <source>true if evaluates to true</source>
          <target state="translated">true로 평가되면 true</target>
        </trans-unit>
        <trans-unit id="1e2ded1ffae9878284f2a05ad45a543738fab750" translate="yes" xml:space="preserve">
          <source>true if execution should continue after testing is complete, false if not.</source>
          <target state="translated">테스트가 완료된 후 실행이 계속되면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="bd4e0ec28b2632b5356e4dcda30bfb1b8ff1abda" translate="yes" xml:space="preserve">
          <source>true if expression has no side effects</source>
          <target state="translated">식에 부작용이 없으면 true</target>
        </trans-unit>
        <trans-unit id="574b601903c342efcb4c11092f9fe1868b4bb951" translate="yes" xml:space="preserve">
          <source>true if found</source>
          <target state="translated">발견되면 참</target>
        </trans-unit>
        <trans-unit id="b8e80038cff24444d80a94cda82425eca7aa6c62" translate="yes" xml:space="preserve">
          <source>true if function is marked as @nogc, meaning a user error occurred</source>
          <target state="translated">함수가 @nogc로 표시되면 사용자 오류가 발생했음을 나타내는 true</target>
        </trans-unit>
        <trans-unit id="1817c13f913c8f05b6b47f82e30c335cd7039828" translate="yes" xml:space="preserve">
          <source>true if function was generated by the compiler rather than</source>
          <target state="translated">함수가 아닌 컴파일러가 함수를 생성 한 경우 true</target>
        </trans-unit>
        <trans-unit id="ac857f404d448b002640fc11415c8ad2ee6f6506" translate="yes" xml:space="preserve">
          <source>true if in a nothrow section of code</source>
          <target state="translated">코드의 nothrow 섹션에있는 경우 true</target>
        </trans-unit>
        <trans-unit id="af9ea77f32dae5305dda236997d9a7ad526c921b" translate="yes" xml:space="preserve">
          <source>true if in type id</source>
          <target state="translated">유형이 id 인 경우 true</target>
        </trans-unit>
        <trans-unit id="2141959f0b70533e712a14148c49b30114ebbf22" translate="yes" xml:space="preserve">
          <source>true if initialization succeeded or false if initialization failed.</source>
          <target state="translated">초기화에 성공하면 true, 초기화에 실패하면 false</target>
        </trans-unit>
        <trans-unit id="dc2476658974bd417e7627f2328901960facf48d" translate="yes" xml:space="preserve">
          <source>true if isFundamental was set by function</source>
          <target state="translated">isFundamental이 함수에 의해 설정된 경우 true</target>
        </trans-unit>
        <trans-unit id="46d4257abd60f900e669e657c4a959bfe066cb5f" translate="yes" xml:space="preserve">
          <source>true if it does</source>
          <target state="translated">그렇다면 true</target>
        </trans-unit>
        <trans-unit id="38c02b5ca2b1339568a5344676d7ba204886df63" translate="yes" xml:space="preserve">
          <source>true if it is necessary to expand a tuple into multiple variables (see lowerNonArrayAggregate).</source>
          <target state="translated">튜플을 여러 변수로 확장해야하는 경우 true입니다 (lowNonArrayAggregate 참조).</target>
        </trans-unit>
        <trans-unit id="86d7fe3e3a303ec772dae99a155a92f5bf465e8a" translate="yes" xml:space="preserve">
          <source>true if naked</source>
          <target state="translated">알몸이면 참</target>
        </trans-unit>
        <trans-unit id="a7e54b2387f250d00de2b922c77b41eb22bfa663" translate="yes" xml:space="preserve">
          <source>true if name is a symbolic link</source>
          <target state="translated">이름이 심볼릭 링크 인 경우 true</target>
        </trans-unit>
        <trans-unit id="5a71533b0a64aec96898e3e18432ee8ced01a65f" translate="yes" xml:space="preserve">
          <source>true if name specifies a directory</source>
          <target state="translated">이름이 디렉토리를 지정하면 true</target>
        </trans-unit>
        <trans-unit id="6f914f7160889f8c98aa7ea926f291759070e4c8" translate="yes" xml:space="preserve">
          <source>true if name specifies a file</source>
          <target state="translated">이름이 파일을 지정하면 true</target>
        </trans-unit>
        <trans-unit id="747149dbee0f062feafabf76b182c22b84484ad3" translate="yes" xml:space="preserve">
          <source>true if no cycle is found, false if one was.</source>
          <target state="translated">사이클이 발견되지 않으면 true이고, 사이클이 없으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="db84ee1b647992cc48ee9220131e2449fe8455fb" translate="yes" xml:space="preserve">
          <source>true if no exception unwinding is needed</source>
          <target state="translated">예외 해제가 필요하지 않은 경우는 true</target>
        </trans-unit>
        <trans-unit id="6b9d7624c04856a56181af012329b3eb3343411e" translate="yes" xml:space="preserve">
          <source>true if notified before the timeout and false if not.</source>
          <target state="translated">시간 초과 전에 알림을 받으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="70590fec65c1fb7241220d24a2463961920901a1" translate="yes" xml:space="preserve">
          <source>true if return type is to be inferred</source>
          <target state="translated">반환 유형을 유추 할 경우 true</target>
        </trans-unit>
        <trans-unit id="a2846c40daecfcaa4af33a359b1b3531db4a537e" translate="yes" xml:space="preserve">
          <source>true if return value from function is on the stack</source>
          <target state="translated">함수의 반환 값이 스택에 있으면 true</target>
        </trans-unit>
        <trans-unit id="7d8d1b3702ba52d6ce170a91a8ea431516b106da" translate="yes" xml:space="preserve">
          <source>true if s is visible by origin</source>
          <target state="translated">s가 원점으로 표시되면 true</target>
        </trans-unit>
        <trans-unit id="b3819266bd60bcf6af4e1065bfd827db1e1be0c4" translate="yes" xml:space="preserve">
          <source>true if s is visible in mod</source>
          <target state="translated">s가 mod에 표시되면 true</target>
        </trans-unit>
        <trans-unit id="246ea089f236b4bcef7ea588d08bb88316ea9c65" translate="yes" xml:space="preserve">
          <source>true if so</source>
          <target state="translated">그렇다면 true</target>
        </trans-unit>
        <trans-unit id="79c35a7f16c677bf17e9bb4932c34ebe8b072021" translate="yes" xml:space="preserve">
          <source>true if struct is POD</source>
          <target state="translated">구조체가 POD이면 true</target>
        </trans-unit>
        <trans-unit id="7945e1a4d926a0c6273699f3c254f8119e9d2388" translate="yes" xml:space="preserve">
          <source>true if successfully figured it out; feaggr updated with semantic analysis. false for failed, which is an error.</source>
          <target state="translated">성공적으로 알아 낸 경우 true; feaggr은 시맨틱 분석으로 업데이트되었습니다. 실패한 경우에는 false이며 이는 오류입니다.</target>
        </trans-unit>
        <trans-unit id="035f53dde470ed5571f1e080a05d9b366c4f6096" translate="yes" xml:space="preserve">
          <source>true if sym is the primary destructor for an aggregate</source>
          <target state="translated">sym이 집계의 기본 소멸자 인 경우 true</target>
        </trans-unit>
        <trans-unit id="6cd0f3a9d7ffe378c762d698e5f496777f37dedc" translate="yes" xml:space="preserve">
          <source>true if termination succeeded or false if termination failed.</source>
          <target state="translated">종료에 성공하면 true, 종료에 실패하면 false</target>
        </trans-unit>
        <trans-unit id="552fc379dacc1a094e1bcc7e7b2086a710c212bc" translate="yes" xml:space="preserve">
          <source>true if the InternetAddresses share the same address and port number.</source>
          <target state="translated">InternetAddresses가 동일한 주소 및 포트 번호를 공유하는 경우 true입니다.</target>
        </trans-unit>
        <trans-unit id="bbc80a84f4e2ce8cfb3d9d8a46223915b0e74732" translate="yes" xml:space="preserve">
          <source>true if the count was above zero and false if not.</source>
          <target state="translated">카운트가 0보다 크면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="980b336bae035f0344e286fe3964b116142130f9" translate="yes" xml:space="preserve">
          <source>true if the current FPU supports exception trapping</source>
          <target state="translated">현재 FPU가 예외 트래핑을 지원하면 true</target>
        </trans-unit>
        <trans-unit id="288f2d88941004c7dc6fcc5a02290ef7f949806a" translate="yes" xml:space="preserve">
          <source>true if the elements will be used for default initialization.</source>
          <target state="translated">요소가 기본 초기화에 사용될 경우 true입니다.</target>
        </trans-unit>
        <trans-unit id="93ea2452463c0c675fac60784d179efa3aca40fb" translate="yes" xml:space="preserve">
          <source>true if the expression is not valid or has void type.</source>
          <target state="translated">표현식이 유효하지 않거나 void 유형 인 경우 true입니다.</target>
        </trans-unit>
        <trans-unit id="93a50eeccb02fd296ee671cf316c0a48bd0a974c" translate="yes" xml:space="preserve">
          <source>true if the expression is not valid.</source>
          <target state="translated">식이 유효하지 않으면 true입니다.</target>
        </trans-unit>
        <trans-unit id="4908abb3a71bbf72bdebbefbbe7757ba5fd5f66b" translate="yes" xml:space="preserve">
          <source>true if the file name specified as input exists</source>
          <target state="translated">입력으로 지정된 파일 이름이 존재하면 true</target>
        </trans-unit>
        <trans-unit id="1128afa774e4007c81092f83ae36cd1d0e557c8e" translate="yes" xml:space="preserve">
          <source>true if the function return value is isolated from any inputs to the function</source>
          <target state="translated">함수 반환 값이 함수 입력과 분리 된 경우 true</target>
        </trans-unit>
        <trans-unit id="b055ece1d2bdf13b6d4f7bf2828093c74c594192" translate="yes" xml:space="preserve">
          <source>true if the function returns by ref</source>
          <target state="translated">함수가 ref로 반환하면 true</target>
        </trans-unit>
        <trans-unit id="3a5be52b231c6d4d1a01f6bbb0344ae384a41c6c" translate="yes" xml:space="preserve">
          <source>true if the function type is for a non-static member function</source>
          <target state="translated">함수 유형이 비 정적 멤버 함수에 대한 경우 true</target>
        </trans-unit>
        <trans-unit id="1e17520ccc6009852530712c92a7e5148b3ec67b" translate="yes" xml:space="preserve">
          <source>true if the given file attributes are for a file</source>
          <target state="translated">주어진 파일 속성이 파일에 대한 것이면 true</target>
        </trans-unit>
        <trans-unit id="583d5030190cec827fd145fad0842b192db009c6" translate="yes" xml:space="preserve">
          <source>true if the given range has balanced parenthesis within the given maximum nesting level; false otherwise.</source>
          <target state="translated">주어진 범위가 주어진 최대 중첩 수준 내에서 균형있는 괄호를 가지고 있으면 true이고; 그렇지 않으면 거짓.</target>
        </trans-unit>
        <trans-unit id="4514b2725c202be32aacb298b34f0d4a51e85b94" translate="yes" xml:space="preserve">
          <source>true if the lock was acquired and false if not.</source>
          <target state="translated">잠금이 획득되면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="11349a45af1f8fcb87b09d9e1a0d51a8d582430b" translate="yes" xml:space="preserve">
          <source>true if the name is available and tid is not known to represent a defunct thread.</source>
          <target state="translated">이름을 사용할 수 있고 tid가 소실 된 스레드를 나타내는 것으로 알려지지 않은 경우 true입니다.</target>
        </trans-unit>
        <trans-unit id="56cf58e59bd4936a84c49d7581840b125928b8a7" translate="yes" xml:space="preserve">
          <source>true if the name is registered, false if not.</source>
          <target state="translated">이름이 등록되어 있으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="8a7e98ac314b5a354272003feca413f8e66ba290" translate="yes" xml:space="preserve">
          <source>true if the operation is supported or type is not a vector</source>
          <target state="translated">연산이 지원되거나 유형이 벡터가 아닌 경우 true</target>
        </trans-unit>
        <trans-unit id="36ecb9713201e32a240521c317d7bb946f260ab5" translate="yes" xml:space="preserve">
          <source>true if the package is not accessible.  Because a global symbol table tree is used for imported packages/modules, access to them needs to be checked based on the imports in the scope chain (see &lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=313&quot;&gt;https://issues.dlang.org/show_bug.cgi?id=313&lt;/a&gt;).</source>
          <target state="translated">패키지에 액세스 할 수없는 경우 true 글로벌 심볼 테이블 트리는 가져온 패키지 / 모듈에 사용되므로 스코프 체인의 가져 오기를 기반으로 해당 액세스를 확인해야합니다 ( &lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=313&quot;&gt;https://issues.dlang.org/show_bug.cgi?id=313 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a7f2eb55d85aeef2a8ef21702dffdd049794497b" translate="yes" xml:space="preserve">
          <source>true if the store occurred, false if not.</source>
          <target state="translated">상점이 발생한 경우 true, 그렇지 않은 경우 false</target>
        </trans-unit>
        <trans-unit id="063d1ae6d8cbc3e05f4a802adb0d8666cde5c19b" translate="yes" xml:space="preserve">
          <source>true if the thread is running, false if not.</source>
          <target state="translated">스레드가 실행 중이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="89a7555b07bd63bed33628952cc26c9e14cddea7" translate="yes" xml:space="preserve">
          <source>true if the thread is the main thread</source>
          <target state="translated">스레드가 기본 스레드 인 경우 true</target>
        </trans-unit>
        <trans-unit id="f6a174618a76409ba021b051bb8fd07396dd030a" translate="yes" xml:space="preserve">
          <source>true if the value was found</source>
          <target state="translated">값이 발견되면 true</target>
        </trans-unit>
        <trans-unit id="6112e8af853b0300587b216b7fe91f5f7595fb3c" translate="yes" xml:space="preserve">
          <source>true if there are no more elements to be iterated.</source>
          <target state="translated">반복 할 요소가 더 이상 없으면 true입니다.</target>
        </trans-unit>
        <trans-unit id="01c38252b0387c7b9e3ddfa9de86929621645f8b" translate="yes" xml:space="preserve">
          <source>true if there are no more encoded characters to be iterated.</source>
          <target state="translated">반복 할 인코딩 된 문자가 더 이상 없으면 true입니다.</target>
        </trans-unit>
        <trans-unit id="88f356f2e59f201bd54b97d5dc8c2676bb645d62" translate="yes" xml:space="preserve">
          <source>true if there are no overloads of this function</source>
          <target state="translated">이 함수의 과부하가없는 경우는 true</target>
        </trans-unit>
        <trans-unit id="44b0932b3edd2c0acabc9e52a28190eb91be0b99" translate="yes" xml:space="preserve">
          <source>true if there is no more encoded data left.</source>
          <target state="translated">더 이상 인코딩 된 데이터가 남아 있지 않으면 true입니다.</target>
        </trans-unit>
        <trans-unit id="e263f000114179eb78976c8457dde54718bf94f5" translate="yes" xml:space="preserve">
          <source>true if there's a __monitor field</source>
          <target state="translated">__monitor 필드가 있으면 true</target>
        </trans-unit>
        <trans-unit id="484134b9c7bc41025c2e1cbeba9c821bb692c333" translate="yes" xml:space="preserve">
          <source>true if this is a daemon thread.</source>
          <target state="translated">이것이 데몬 스레드 인 경우 true입니다.</target>
        </trans-unit>
        <trans-unit id="6522f507d0d18308489abe19994b4e2d9c79c216" translate="yes" xml:space="preserve">
          <source>true if this is a scope class</source>
          <target state="translated">이것이 스코프 클래스 인 경우 참</target>
        </trans-unit>
        <trans-unit id="4847fc656a41364c58587a06e1bd4297cec0b89f" translate="yes" xml:space="preserve">
          <source>true if too costly</source>
          <target state="translated">너무 비싸면 참</target>
        </trans-unit>
        <trans-unit id="968fee7842b492a3fd9f0ef86ab43bc77ce6ded5" translate="yes" xml:space="preserve">
          <source>true if updating succeeds.</source>
          <target state="translated">업데이트가 성공하면 true입니다.</target>
        </trans-unit>
        <trans-unit id="c3675feae55bfa5fff8e050b2236f250ecaf4038" translate="yes" xml:space="preserve">
          <source>true if we can copy it</source>
          <target state="translated">복사 할 수 있으면 true</target>
        </trans-unit>
        <trans-unit id="3686fea6bb20f72022750b13903637f3cf1a64b9" translate="yes" xml:space="preserve">
          <source>true if when type goes out of scope, it needs a destructor applied. Only applies to value types, not ref types.</source>
          <target state="translated">유형이 범위를 벗어날 때 소멸자가 적용되어야하는 경우 true입니다. 참조 유형이 아닌 값 유형에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b2a1f5debe07a9744a07e7beae38c5a67d0540a6" translate="yes" xml:space="preserve">
          <source>true if xmm usage is supported</source>
          <target state="translated">xmm 사용법이 지원되는 경우 true</target>
        </trans-unit>
        <trans-unit id="e6e49611edd325826d15ec53d1d8dd57c9fe7655" translate="yes" xml:space="preserve">
          <source>true iff &lt;code&gt;os&lt;/code&gt; contains the current targetOS.</source>
          <target state="translated">true iff &lt;code&gt;os&lt;/code&gt; 는 현재 targetOS를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="fddab80ffefa9d15acd80cf232e553fa905e41d8" translate="yes" xml:space="preserve">
          <source>true means a &lt;code&gt;this&lt;/code&gt; is needed</source>
          <target state="translated">true는 &lt;code&gt;this&lt;/code&gt; 필요하다는 것을 의미 합니다</target>
        </trans-unit>
        <trans-unit id="0197f8851c47ac2edbdffade479cd1e796d91b35" translate="yes" xml:space="preserve">
          <source>true means it is accessible by walking the context pointers at runtime</source>
          <target state="translated">true는 런타임에 컨텍스트 포인터를 걸어 액세스 할 수 있음을 의미합니다</target>
        </trans-unit>
        <trans-unit id="f18eb7e259973494af813cf8bd66fb4438c45ab7" translate="yes" xml:space="preserve">
          <source>true means new data is summed with existing data in the listing file; false means a new listing file is always created.</source>
          <target state="translated">true는 새 데이터가 목록 파일의 기존 데이터와 합쳐 짐을 의미합니다. false는 새 리스팅 파일이 항상 작성됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="788d4df9134868c719d8b37c0bde9788b93b1dba" translate="yes" xml:space="preserve">
          <source>true means search current directory before searching path</source>
          <target state="translated">true는 경로를 검색하기 전에 현재 디렉토리를 검색 함을 의미합니다</target>
        </trans-unit>
        <trans-unit id="fef30d399c71d969ea4941ca71fe08b82c1daae5" translate="yes" xml:space="preserve">
          <source>true means we can do NRVO</source>
          <target state="translated">참은 우리가 NRVO를 할 수 있다는 것을 의미합니다</target>
        </trans-unit>
        <trans-unit id="aa51bfb350d8d984cba4d3ec6953e06339164752" translate="yes" xml:space="preserve">
          <source>true on error</source>
          <target state="translated">오류가 발생하면 true</target>
        </trans-unit>
        <trans-unit id="0e1ea59f6c8a08f9decc19440789eb8c1f7d89e9" translate="yes" xml:space="preserve">
          <source>true on error, false on success</source>
          <target state="translated">오류시 true, 성공시 false</target>
        </trans-unit>
        <trans-unit id="ae0721962ada4746c6c119c6fb959fdf3f9f43d3" translate="yes" xml:space="preserve">
          <source>true success false failed</source>
          <target state="translated">진정한 성공 거짓 실패</target>
        </trans-unit>
        <trans-unit id="b4999f329cdfd3e993f8f4efa9d9ce2d2c1f0a5f" translate="yes" xml:space="preserve">
          <source>true, false</source>
          <target state="translated">허위 사실</target>
        </trans-unit>
        <trans-unit id="f32acd2e964b1ffcab0ebd5c7bde6f282f748dab" translate="yes" xml:space="preserve">
          <source>try using SSL, proceed anyway otherwise</source>
          <target state="translated">SSL을 사용해보십시오. 그렇지 않으면 계속 진행하십시오.</target>
        </trans-unit>
        <trans-unit id="84d3229478b4bad2aec18a39e4a5b7dd6549632e" translate="yes" xml:space="preserve">
          <source>tunnel non-http operations through a HTTP proxy</source>
          <target state="translated">HTTP 프록시를 통한 비 http 작업 터널링</target>
        </trans-unit>
        <trans-unit id="767307f129877e3aa72715d41153d3c853027579" translate="yes" xml:space="preserve">
          <source>tuple of types if type is passed in one or more registers empty tuple if type is always passed on the stack null if the type is a &lt;code&gt;void&lt;/code&gt; or argtypes aren't supported by the target</source>
          <target state="translated">유형이 하나 이상의 레지스터에 전달되는 경우 유형의 튜플 유형이 &lt;code&gt;void&lt;/code&gt; 이거나 argtypes가 대상에서 지원되지 않는 경우 유형이 항상 스택에 전달되는 경우 빈 튜플</target>
        </trans-unit>
        <trans-unit id="2729807f0ce69cf97ebfd6d0332be1be5bb7a08e" translate="yes" xml:space="preserve">
          <source>tuple of types, each element can be passed in a register. A tuple of zero length means the type cannot be passed/returned in registers. null indicates a &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">튜플 형식의 경우 각 요소를 레지스터에 전달할 수 있습니다. 길이가 0 인 튜플은 형식을 레지스터로 전달 / 반환 할 수 없음을 의미합니다. null은 &lt;code&gt;void&lt;/code&gt; 를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="3bbfb4e82b0b53810a0d2d9d25af0c1fd88d3167" translate="yes" xml:space="preserve">
          <source>tuple record &lt;a href=&quot;std_format#formattedRead&quot;&gt;format&lt;/a&gt;</source>
          <target state="translated">튜플 레코드 &lt;a href=&quot;std_format#formattedRead&quot;&gt;형식&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb96381bd3e041d421f7a6b3394fa9a958d9c850" translate="yes" xml:space="preserve">
          <source>tv_sec_t &lt;strong id=&quot;seconds&quot;&gt;seconds&lt;/strong&gt;;</source>
          <target state="translated">tv_sec_t &lt;strong id=&quot;seconds&quot;&gt;초&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="40e02319743a149e5164c96c063f2b4b432e5efe" translate="yes" xml:space="preserve">
          <source>tv_usec_t &lt;strong id=&quot;microseconds&quot;&gt;microseconds&lt;/strong&gt;;</source>
          <target state="translated">tv_usec_t &lt;strong id=&quot;microseconds&quot;&gt;마이크로 초&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1e41707c42e71a455253e22687fbad824ea6ccd9" translate="yes" xml:space="preserve">
          <source>two or more ranges</source>
          <target state="translated">둘 이상의 범위</target>
        </trans-unit>
        <trans-unit id="b0017265131c865b70be7c2499cb885613b49557" translate="yes" xml:space="preserve">
          <source>tym_t &lt;strong id=&quot;totym&quot;&gt;totym&lt;/strong&gt;(Type tx);</source>
          <target state="translated">tym_t &lt;strong id=&quot;totym&quot;&gt;totym&lt;/strong&gt; (타입 tx);</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">type</target>
        </trans-unit>
        <trans-unit id="b9a098745cd58a30243b43bfef64bf7a60689b62" translate="yes" xml:space="preserve">
          <source>type 'this' is covariant with</source>
          <target state="translated">'this'유형은 공변량입니다</target>
        </trans-unit>
        <trans-unit id="eb3f18fbb8efd813d24df646402f7567fb25f137" translate="yes" xml:space="preserve">
          <source>type &lt;code&gt;T&lt;/code&gt;, returns a pointer to that value. Otherwise, returns &lt;code&gt;null&lt;/code&gt;. In cases where &lt;code&gt;T&lt;/code&gt; is statically disallowed, &lt;code&gt; peek&lt;/code&gt; will not compile.</source>
          <target state="translated">type &lt;code&gt;T&lt;/code&gt; 는 해당 값에 대한 포인터를 반환합니다. 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 경우에 &lt;code&gt;T&lt;/code&gt; 가 정적으로 허용되지 않습니다, &lt;code&gt; peek&lt;/code&gt; 컴파일되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5638c016a07ed10c6eaf8fd278bf06b905d26b5" translate="yes" xml:space="preserve">
          <source>type T1 hides a subsequent</source>
          <target state="translated">유형 T1은 후속을 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="ce27a93b1588adbb7bd9169731a0a2f2663d542c" translate="yes" xml:space="preserve">
          <source>type for which the dot expression is used</source>
          <target state="translated">도트 표현식이 사용되는 유형</target>
        </trans-unit>
        <trans-unit id="26884ff6712a32b3f52b717f1c957d0f9cdc254c" translate="yes" xml:space="preserve">
          <source>type index of array element</source>
          <target state="translated">배열 요소의 유형 색인</target>
        </trans-unit>
        <trans-unit id="c7d41328f059c88daa3e6cf65bec8585847c2aa8" translate="yes" xml:space="preserve">
          <source>type index of array index</source>
          <target state="translated">배열 인덱스의 유형 인덱스</target>
        </trans-unit>
        <trans-unit id="714ea2d7c1363bcb3d71089721caba8dbee614ef" translate="yes" xml:space="preserve">
          <source>type index of context pointer</source>
          <target state="translated">컨텍스트 포인터의 유형 색인</target>
        </trans-unit>
        <trans-unit id="68b8c026d6a158b75c9d966d06fcfa651fab2d16" translate="yes" xml:space="preserve">
          <source>type index of function</source>
          <target state="translated">함수형 인덱스</target>
        </trans-unit>
        <trans-unit id="6d333a9978dc7001a6d75c102844671f26fec49f" translate="yes" xml:space="preserve">
          <source>type index of key</source>
          <target state="translated">키의 타입 인덱스</target>
        </trans-unit>
        <trans-unit id="a9d64451e00b69efaf9045ff973ee27280a25021" translate="yes" xml:space="preserve">
          <source>type of &lt;code&gt;this&lt;/code&gt; parameter, null if none</source>
          <target state="translated">의 입력 &lt;code&gt;this&lt;/code&gt; 매개 변수,없는 경우는 null</target>
        </trans-unit>
        <trans-unit id="37d9ef71648bf043488ff00c96be3834ca27b0e8" translate="yes" xml:space="preserve">
          <source>type of &lt;code&gt;this&lt;/code&gt; pointer, null if not member function</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 포인터의 형태. 멤버 함수가 아닌 경우는 null</target>
        </trans-unit>
        <trans-unit id="545ca1cf4f9d285ba3f1f5c07f83bce5c7450a94" translate="yes" xml:space="preserve">
          <source>type of catch clause</source>
          <target state="translated">catch 절의 유형</target>
        </trans-unit>
        <trans-unit id="b493f03da1bfd954ae67d78d4bf8ca1a68f8aaf3" translate="yes" xml:space="preserve">
          <source>type of e</source>
          <target state="translated">전자의 종류</target>
        </trans-unit>
        <trans-unit id="9b3fb1018d52cc79d0cf79c60f552e6becdba782" translate="yes" xml:space="preserve">
          <source>type of parameter</source>
          <target state="translated">매개 변수 유형</target>
        </trans-unit>
        <trans-unit id="5de02b95fd5baa4f9bb0d3be895b42d6e85fbf27" translate="yes" xml:space="preserve">
          <source>type of second operand if &lt;code&gt;op&lt;/code&gt; is a binary operation</source>
          <target state="translated">&lt;code&gt;op&lt;/code&gt; 가 이진 연산 인 경우 두 번째 피연산자의 유형</target>
        </trans-unit>
        <trans-unit id="45203c697a635d5fab61af633ca938015b38253c" translate="yes" xml:space="preserve">
          <source>type of string literal</source>
          <target state="translated">문자열 리터럴의 유형</target>
        </trans-unit>
        <trans-unit id="96bc28c9bc545da80e88612af3e15a82f8ee0062" translate="yes" xml:space="preserve">
          <source>type of the data to check for pointers</source>
          <target state="translated">포인터를 확인할 데이터 유형</target>
        </trans-unit>
        <trans-unit id="d7dfad58c6eb27e83f20c697378faa7cb802482a" translate="yes" xml:space="preserve">
          <source>type of the existing &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">기존의 입력 &lt;code&gt;this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed1c1eda8eb1817665241fd5cd97fec621b51ac1" translate="yes" xml:space="preserve">
          <source>type of the file keeping your SSL-certificate (&quot;DER&quot;, &quot;PEM&quot;, &quot;ENG&quot;)</source>
          <target state="translated">SSL 인증서를 유지하는 파일 유형 ( &quot;DER&quot;, &quot;PEM&quot;, &quot;ENG&quot;)</target>
        </trans-unit>
        <trans-unit id="a453bc168791575a2dbde68e4b6bf06aadac33ce" translate="yes" xml:space="preserve">
          <source>type of the file keeping your private SSL-key (&quot;DER&quot;, &quot;PEM&quot;, &quot;ENG&quot;)</source>
          <target state="translated">개인 SSL 키를 유지하는 파일 유형 ( &quot;DER&quot;, &quot;PEM&quot;, &quot;ENG&quot;)</target>
        </trans-unit>
        <trans-unit id="9fb2153245a9c0b4e678c399d314e19b61673aec" translate="yes" xml:space="preserve">
          <source>type of wrapped object</source>
          <target state="translated">감싸 인 객체의 유형</target>
        </trans-unit>
        <trans-unit id="f26c5ffe4ee6bc05134174728e7ea8b642542727" translate="yes" xml:space="preserve">
          <source>type qualifier</source>
          <target state="translated">한정자</target>
        </trans-unit>
        <trans-unit id="2e3068dcb35b4f45cd2aa698f09f01eb9abb0021" translate="yes" xml:space="preserve">
          <source>type that TypeInfo is being generated for</source>
          <target state="translated">TypeInfo가 생성되는 유형</target>
        </trans-unit>
        <trans-unit id="68404028f0f6411d01d1b51d6fe3608b75d2d01f" translate="yes" xml:space="preserve">
          <source>type that is implicitly convertible to &lt;code&gt;dchars&lt;/code&gt;</source>
          <target state="translated">암시 적으로 &lt;code&gt;dchars&lt;/code&gt; 로 변환 할 수있는 유형</target>
        </trans-unit>
        <trans-unit id="6625f982b0f6f60d79f9a073a24b04d70e04109d" translate="yes" xml:space="preserve">
          <source>type that the initializer needs to become</source>
          <target state="translated">이니셜 라이저가 필요한 유형</target>
        </trans-unit>
        <trans-unit id="62c89ba41b5713fe7d3b93a480250232739764b0" translate="yes" xml:space="preserve">
          <source>type to be resolved</source>
          <target state="translated">해결 될 유형</target>
        </trans-unit>
        <trans-unit id="8947b6d098453da585a57dad445501da2b656d59" translate="yes" xml:space="preserve">
          <source>type to be tested</source>
          <target state="translated">테스트 할 유형</target>
        </trans-unit>
        <trans-unit id="117b869617f756db129e359ec61896b718b968ed" translate="yes" xml:space="preserve">
          <source>type to break down</source>
          <target state="translated">분류하는 유형</target>
        </trans-unit>
        <trans-unit id="d6d70877916290f62cb89a23e12ebefc43d6e868" translate="yes" xml:space="preserve">
          <source>type to cast e to</source>
          <target state="translated">e를 던질 유형</target>
        </trans-unit>
        <trans-unit id="9091e6130fc564a12f10a6b4bfc8bf1fef0c11be" translate="yes" xml:space="preserve">
          <source>type to check</source>
          <target state="translated">확인할 유형</target>
        </trans-unit>
        <trans-unit id="3db5859cdb63c92f6f0212a70c236f13a093fda4" translate="yes" xml:space="preserve">
          <source>type to check if it is isolated</source>
          <target state="translated">격리되어 있는지 확인하는 유형</target>
        </trans-unit>
        <trans-unit id="0dc193c98930e000ce19df782157e242d48704f5" translate="yes" xml:space="preserve">
          <source>type to inspect</source>
          <target state="translated">검사 할 유형</target>
        </trans-unit>
        <trans-unit id="e8261b87aa5824dc264c4f8c8fa0932d447871f3" translate="yes" xml:space="preserve">
          <source>type to test</source>
          <target state="translated">테스트 할 유형</target>
        </trans-unit>
        <trans-unit id="2b7f951b11e133ba1ffb9c6b49130e8b47f6074e" translate="yes" xml:space="preserve">
          <source>type to use for calculations at precision &lt;code&gt;F&lt;/code&gt;. There is no need to define a type for the</source>
          <target state="translated">정밀도 &lt;code&gt;F&lt;/code&gt; 에서 계산에 사용할 유형 입니다. 에 대한 유형을 정의 할 필요가 없습니다</target>
        </trans-unit>
        <trans-unit id="6287a3b931578310e96ecf1175a01da896222219" translate="yes" xml:space="preserve">
          <source>type* &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">타입 * &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="292ff349c927a27ea5be2a8c0f142b70b3b02fbd" translate="yes" xml:space="preserve">
          <source>type* &lt;code&gt;tx&lt;/code&gt;</source>
          <target state="translated">타입 * &lt;code&gt;tx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b6a51aa1a92291fb167bb995f779eb875dc6a22" translate="yes" xml:space="preserve">
          <source>type* &lt;strong id=&quot;Type_toCtype&quot;&gt;Type_toCtype&lt;/strong&gt;(Type t);</source>
          <target state="translated">type * &lt;strong id=&quot;Type_toCtype&quot;&gt;Type_toCtype&lt;/strong&gt; (타입 t);</target>
        </trans-unit>
        <trans-unit id="3e553b5f635940c3b605d8e2ef450157decb710c" translate="yes" xml:space="preserve">
          <source>typeid(int)</source>
          <target state="translated">typeid(int)</target>
        </trans-unit>
        <trans-unit id="9dd1e3487373175e9160aaff6c666da230ad0fe4" translate="yes" xml:space="preserve">
          <source>typeinf.d</source>
          <target state="translated">typeinf.d</target>
        </trans-unit>
        <trans-unit id="63674052bd203261be7691b8198e824ef0bd12ab" translate="yes" xml:space="preserve">
          <source>typeof(Lhs() + Rhs()) &lt;strong id=&quot;onOverflow&quot;&gt;onOverflow&lt;/strong&gt;(string x, Lhs, Rhs)(Lhs lhs, Rhs rhs);</source>
          <target state="translated">&lt;strong id=&quot;onOverflow&quot;&gt;오버플로&lt;/strong&gt; (string x, Lhs, Rhs) (Lhs lhs, Rhs rhs)의 typeof (Lhs () + Rhs () );</target>
        </trans-unit>
        <trans-unit id="dd69f15678775534881d224227e16ec74c220bbb" translate="yes" xml:space="preserve">
          <source>typeof(fmt) &lt;strong id=&quot;format&quot;&gt;format&lt;/strong&gt;(alias fmt, Args...)(Args args)</source>
          <target state="translated">typeof (fmt) &lt;strong id=&quot;format&quot;&gt;형식&lt;/strong&gt; (별칭 fmt, Args ...) (Args args)</target>
        </trans-unit>
        <trans-unit id="106c79f32a61002623b62fab54032c3a3e703b6c" translate="yes" xml:space="preserve">
          <source>typeof(mixin(x == &quot;cmp&quot; ? &quot;0&quot; : &quot;L() &quot; ~ x ~ &quot; R()&quot;)) &lt;strong id=&quot;opChecked&quot;&gt;opChecked&lt;/strong&gt;(string x, L, R)(const L lhs, const R rhs, ref bool overflow)</source>
          <target state="translated">typeof (mixin (x == &quot;cmp&quot;? &quot;0&quot;: &quot;L ()&quot;~ x ~ &quot;R ()&quot;)) &lt;strong id=&quot;opChecked&quot;&gt;opChecked&lt;/strong&gt; (string x, L, R) (const L lhs, const R rhs, ref bool 과다)</target>
        </trans-unit>
        <trans-unit id="a383ce4c9fd7fc7a56fdff6b37fc731491285ae6" translate="yes" xml:space="preserve">
          <source>typeof(this) &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t a, size_t b);</source>
          <target state="translated">typeof (this) &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt; (size_t a, size_t b);</target>
        </trans-unit>
        <trans-unit id="625282424c32b86fc3c86b63ecb767900fbcab07" translate="yes" xml:space="preserve">
          <source>typeof(this) &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t lower, size_t upper);</source>
          <target state="translated">typeof (this) &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt; (size_t 하위, size_t 상위);</target>
        </trans-unit>
        <trans-unit id="e8593db1849255fbbe98b657f6434d96405da5a6" translate="yes" xml:space="preserve">
          <source>typeof(var) &lt;code&gt;init&lt;/code&gt;</source>
          <target state="translated">typeof (var) &lt;code&gt;init&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a3132b280959503ccd6477c358bb34e8c832a78" translate="yes" xml:space="preserve">
          <source>typeof(~Lhs()) &lt;strong id=&quot;onOverflow&quot;&gt;onOverflow&lt;/strong&gt;(string x, Lhs)(Lhs lhs);</source>
          <target state="translated">typeof (~ Lhs ()) &lt;strong id=&quot;onOverflow&quot;&gt;onOverflow&lt;/strong&gt; (문자열 x, Lhs) (Lhs lhs);</target>
        </trans-unit>
        <trans-unit id="4fd3edceefeb0ac3ac55c042cd88c861bda8b4eb" translate="yes" xml:space="preserve">
          <source>typeof(~Lhs()) &lt;strong id=&quot;onOverflow&quot;&gt;onOverflow&lt;/strong&gt;(string x, Lhs)(ref Lhs lhs);</source>
          <target state="translated">typeof (~ Lhs ()) &lt;strong id=&quot;onOverflow&quot;&gt;onOverflow&lt;/strong&gt; (문자열 x, Lhs) (ref Lhs lhs);</target>
        </trans-unit>
        <trans-unit id="e7b1fff7007b635892a8f2c7c17f4fabc7aa2f8c" translate="yes" xml:space="preserve">
          <source>types</source>
          <target state="translated">types</target>
        </trans-unit>
        <trans-unit id="dddf2b0abf6d7320a0825ff2d15e0469868837bb" translate="yes" xml:space="preserve">
          <source>types cannot be implicitly cast to an enum type.</source>
          <target state="translated">유형은 암시 적으로 열거 형 유형으로 캐스트 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="37470da3358c939f048922cc8ba60a32938451d5" translate="yes" xml:space="preserve">
          <source>typesafe variadic function</source>
          <target state="translated">타입 세이프 variadic 함수</target>
        </trans-unit>
        <trans-unit id="0090c0fd7a122b2835540591ba9c470a739c5849" translate="yes" xml:space="preserve">
          <source>typesem.d</source>
          <target state="translated">typesem.d</target>
        </trans-unit>
        <trans-unit id="78f90bbd607b7fda45825c1b76078ce6bbda93b4" translate="yes" xml:space="preserve">
          <source>uClibc C runtime</source>
          <target state="translated">uClibc C 런타임</target>
        </trans-unit>
        <trans-unit id="ad3efa1e479d4ec52d1ea6895930252bbe21a6ed" translate="yes" xml:space="preserve">
          <source>ubyte</source>
          <target state="translated">ubyte</target>
        </trans-unit>
        <trans-unit id="76367d01e3c48f1b1f2425998d14ca7b76d1d667" translate="yes" xml:space="preserve">
          <source>ubyte &lt;code&gt;TType&lt;/code&gt;</source>
          <target state="translated">ubyte &lt;code&gt;TType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="921989be50a0e2b3f78b9a2b4383930ac651b84d" translate="yes" xml:space="preserve">
          <source>ubyte &lt;code&gt;lhsMod&lt;/code&gt;</source>
          <target state="translated">ubyte &lt;code&gt;lhsMod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1c7021e386eaf32a0433acf9b02908743c535dc" translate="yes" xml:space="preserve">
          <source>ubyte &lt;code&gt;minPercent&lt;/code&gt;</source>
          <target state="translated">ubyte &lt;code&gt;minPercent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42fede11de148983eb9b0254595d859a37eaca27" translate="yes" xml:space="preserve">
          <source>ubyte &lt;code&gt;op&lt;/code&gt;</source>
          <target state="translated">유 바이트 &lt;code&gt;op&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af48f1ec52648d891a80899f771118dc287ed6f2" translate="yes" xml:space="preserve">
          <source>ubyte &lt;strong id=&quot;associativity&quot;&gt;associativity&lt;/strong&gt;;</source>
          <target state="translated">ubyte &lt;strong id=&quot;associativity&quot;&gt;연관성&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0acedd1c9c28cdf528bbb923958340bc09938e3f" translate="yes" xml:space="preserve">
          <source>ubyte &lt;strong id=&quot;indexEnd&quot;&gt;indexEnd&lt;/strong&gt;;</source>
          <target state="translated">ubyte &lt;strong id=&quot;indexEnd&quot;&gt;indexEnd&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8574bec3a280320c2369fe6aaabf270307da04e7" translate="yes" xml:space="preserve">
          <source>ubyte &lt;strong id=&quot;indexStart&quot;&gt;indexStart&lt;/strong&gt;;</source>
          <target state="translated">ubyte &lt;strong id=&quot;indexStart&quot;&gt;indexStart&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="aee2354b6e58ae148bf86f73c15b46f1cb01cc9c" translate="yes" xml:space="preserve">
          <source>ubyte &lt;strong id=&quot;isCrtCtorDtor&quot;&gt;isCrtCtorDtor&lt;/strong&gt;;</source>
          <target state="translated">ubyte &lt;strong id=&quot;isCrtCtorDtor&quot;&gt;isCrtCtorDtor&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5e1bbb0ef93431675f26088e41ba01c57decd9c3" translate="yes" xml:space="preserve">
          <source>ubyte &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(ulong i);</source>
          <target state="translated">ubyte &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (ulong i);</target>
        </trans-unit>
        <trans-unit id="c7db0f81f06b73e91e1e7a23cd061da294fc3422" translate="yes" xml:space="preserve">
          <source>ubyte &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt;(ubyte value, ulong i);</source>
          <target state="translated">ubyte &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt; (ubyte 값, ulong i);</target>
        </trans-unit>
        <trans-unit id="e867712f360237c714280a24fc317187ff6e5194" translate="yes" xml:space="preserve">
          <source>ubyte.max = fully associative</source>
          <target state="translated">ubyte.max = 완전 연관</target>
        </trans-unit>
        <trans-unit id="975a22f3bf2454b4a0e8e516b4c4b8b2e86ce5f5" translate="yes" xml:space="preserve">
          <source>ubyte16</source>
          <target state="translated">ubyte16</target>
        </trans-unit>
        <trans-unit id="f37c19cd6666719918c85aad27b2e3aff08ce394" translate="yes" xml:space="preserve">
          <source>ubyte32</source>
          <target state="translated">ubyte32</target>
        </trans-unit>
        <trans-unit id="0280eaf723db19daf2ca8ca1ff812e4340b3a2e3" translate="yes" xml:space="preserve">
          <source>ubyte[16] &lt;code&gt;addr&lt;/code&gt;</source>
          <target state="translated">ubyte [16] &lt;code&gt;addr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e367bd3b454c9c689f9d32ac5ec0fa299fe3754" translate="yes" xml:space="preserve">
          <source>ubyte[16] &lt;strong id=&quot;data&quot;&gt;data&lt;/strong&gt;;</source>
          <target state="translated">ubyte [16] &lt;strong id=&quot;data&quot;&gt;데이터&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1f6a0db97442b9f145ea88c567a7e4b9e61eec29" translate="yes" xml:space="preserve">
          <source>ubyte[21] &lt;code&gt;fac&lt;/code&gt;</source>
          <target state="translated">ubyte [21] &lt;code&gt;fac&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f8fe55ba910169124f694d86a8cf277f20527b3" translate="yes" xml:space="preserve">
          <source>ubyte[4] &lt;strong id=&quot;crc32Of&quot;&gt;crc32Of&lt;/strong&gt;(T...)(T data);</source>
          <target state="translated">ubyte [4] &lt;strong id=&quot;crc32Of&quot;&gt;crc32Of&lt;/strong&gt; (T ...) (T 데이터);</target>
        </trans-unit>
        <trans-unit id="a327c32e3fcbcc6f17f1a841be2a28d568e06b40" translate="yes" xml:space="preserve">
          <source>ubyte[8] &lt;strong id=&quot;crc64ECMAOf&quot;&gt;crc64ECMAOf&lt;/strong&gt;(T...)(T data);</source>
          <target state="translated">ubyte [8] &lt;strong id=&quot;crc64ECMAOf&quot;&gt;crc64ECMAOf&lt;/strong&gt; (T ...) (T 데이터);</target>
        </trans-unit>
        <trans-unit id="49d4641ab1dd2a132e398ad99fea7eb72a630305" translate="yes" xml:space="preserve">
          <source>ubyte[8] &lt;strong id=&quot;crc64ISOOf&quot;&gt;crc64ISOOf&lt;/strong&gt;(T...)(T data);</source>
          <target state="translated">ubyte [8] &lt;strong id=&quot;crc64ISOOf&quot;&gt;crc64ISOOf&lt;/strong&gt; (T ...) (T 데이터);</target>
        </trans-unit>
        <trans-unit id="93978f1c69284898ac0af0b38b1253121617c393" translate="yes" xml:space="preserve">
          <source>ubyte[] &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">ubyte [] &lt;code&gt;b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03bb35a2d937c4a6e99902476299f32131de889a" translate="yes" xml:space="preserve">
          <source>ubyte[] &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="translated">ubyte [] &lt;code&gt;buffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="111153506e44c2cf76fc608014b0c38ebc04afd4" translate="yes" xml:space="preserve">
          <source>ubyte[] &lt;code&gt;store&lt;/code&gt;</source>
          <target state="translated">ubyte [] &lt;code&gt;store&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bbf01622ef425d22e7c448d1adf2a2b090ecf479" translate="yes" xml:space="preserve">
          <source>ubyte[] &lt;strong id=&quot;compress&quot;&gt;compress&lt;/strong&gt;(const(void)[] srcbuf);</source>
          <target state="translated">ubyte [] &lt;strong id=&quot;compress&quot;&gt;압축&lt;/strong&gt; (const (void) [] srcbuf);</target>
        </trans-unit>
        <trans-unit id="18faee4fed1ac07109b9c5df42bbd9ff3ee99d98" translate="yes" xml:space="preserve">
          <source>ubyte[] &lt;strong id=&quot;compress&quot;&gt;compress&lt;/strong&gt;(const(void)[] srcbuf, int level);</source>
          <target state="translated">ubyte [] &lt;strong id=&quot;compress&quot;&gt;압축&lt;/strong&gt; (const (void) [] srcbuf, int level);</target>
        </trans-unit>
        <trans-unit id="a43ee3ac169fa7b5d7afb501f7592bf0cb017cad" translate="yes" xml:space="preserve">
          <source>ubyte[] &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(R1, R2)(R1 source, R2 buffer)</source>
          <target state="translated">ubyte [] &lt;strong id=&quot;decode&quot;&gt;디코드&lt;/strong&gt; (R1, R2) (R1 소스, R2 버퍼)</target>
        </trans-unit>
        <trans-unit id="a3c7a6b2fd628b8c7326035bad03cc42ef518e61" translate="yes" xml:space="preserve">
          <source>ubyte[] &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(Range)(Range source)</source>
          <target state="translated">ubyte [] &lt;strong id=&quot;decode&quot;&gt;디코드&lt;/strong&gt; (범위) (범위 소스)</target>
        </trans-unit>
        <trans-unit id="00e4aab0c4ce9a8646190475f4198f71ccf53ea6" translate="yes" xml:space="preserve">
          <source>ubyte[] &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ArchiveMember de);</source>
          <target state="translated">ubyte [] &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt; (ArchiveMember de);</target>
        </trans-unit>
        <trans-unit id="8122b2110b64b3741886068ba17636a8e0503027" translate="yes" xml:space="preserve">
          <source>ubyte[] &lt;strong id=&quot;extra&quot;&gt;extra&lt;/strong&gt;;</source>
          <target state="translated">ubyte [] &lt;strong id=&quot;extra&quot;&gt;추가&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ad78dcf37a12e9a0b26facc6f40f9c7f6a948ffa" translate="yes" xml:space="preserve">
          <source>ucent</source>
          <target state="translated">ucent</target>
        </trans-unit>
        <trans-unit id="fcdbc880c3d7454f7aed7a672c34ebc2395648a2" translate="yes" xml:space="preserve">
          <source>uint</source>
          <target state="translated">uint</target>
        </trans-unit>
        <trans-unit id="6798e0167f9ba6df38b20d60891b9979ad602df8" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1768a096787b6f17f16891a3f96cc5f2022aacc5" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;actionRecordPtr&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;actionRecordPtr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb21f5f8b8c0e1b7f860942fff241d12a775eb4" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;addr&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;addr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5523e848dd593da6fa39c297dce6c4245506ddc4" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;adler&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;adler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78d0d91fb07443234693a1cec31d095f6b246672" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;attributes&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;attributes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c34cb60f570e3c8571e0887ebcf98c7fabd1ddf2" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;ba&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;ba&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f50c81c919ef4c60d6f36f425aed1e6527d1f0f" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;charnum&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;charnum&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44bd8ff1ca09b5592bbe88f9daae446dd0ae7c76" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;codePage&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;codePage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23f41df0da1d2c3a3f0edca4f7ef39a1f896c707" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;count&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;count&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7eb1c9bd762d7a577f4cd9215b9463acd7feb027" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;crc&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;crc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="668c930bfcba3f92cf5bece72e34d2ee7976491e" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;errno&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;errno&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="084f85794fb39b24110c0353eb16a1337e5ca021" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;indent&lt;/code&gt;</source>
          <target state="translated">UINT &lt;code&gt;indent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f4bb770b7c419fe8e3aeedbb4adcda5eca39dc1" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;itemCount&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;itemCount&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44bc23f2e968637ef72b1379763b9a4d93988ff5" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;level&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;level&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ec6d79cd9b45aabec575c0baf534bd072493a89" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;limit&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;limit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90f2abc0d34a178324c33ebfa71df4b755a6f2b8" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;linnum&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;linnum&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="391a133c92002f7e23b829d139fce2bfa415378c" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34880d8faefb7aa4b8ee5181f7c0cb226fa261fc" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1dfeb5ca4bf9e3cbe628a63d0ad5f34b50a6819" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;size&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cca75aeee3a5e3b4a6eb0d864bc6b380501d099" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;stacksize&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;stacksize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d59bc85e131a28a9edd46a8e49a868444248cef" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f3debfc5586de75ed86b87986343587c906663a" translate="yes" xml:space="preserve">
          <source>uint &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">uint &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05b8916d1f1f512674d90284108d161082a5e8a5" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;addrlen&quot;&gt;addrlen&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;addrlen&quot;&gt;addrlen&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="136edf15daa919b337f3871c575e601d10e81260" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;addu&quot;&gt;addu&lt;/strong&gt;()(uint x, uint y, ref bool overflow);</source>
          <target state="translated">uint &lt;strong id=&quot;addu&quot;&gt;addu&lt;/strong&gt; () (uint x, uint y, ref bool overflow);</target>
        </trans-unit>
        <trans-unit id="83fed137af292953466c797f4259da95b57c0dd0" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;adler32&quot;&gt;adler32&lt;/strong&gt;(uint adler, const(void)[] buf);</source>
          <target state="translated">uint &lt;strong id=&quot;adler32&quot;&gt;adler32&lt;/strong&gt; (uint adler, const (void) [] buf);</target>
        </trans-unit>
        <trans-unit id="05b4fe3d07372f054f45721dfffd8f73f884afe2" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;alignsize&quot;&gt;alignsize&lt;/strong&gt;(Type type);</source>
          <target state="translated">uint &lt;strong id=&quot;alignsize&quot;&gt;alignsize&lt;/strong&gt; (유형);</target>
        </trans-unit>
        <trans-unit id="d12fdfaeac65594c3ac92ca79b7c561272715405" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;among&quot;&gt;among&lt;/strong&gt;(alias pred = (a, b) =&amp;gt; a == b, Value, Values...)(Value value, Values values)</source>
          <target state="translated">UINT &lt;strong id=&quot;among&quot;&gt;중&lt;/strong&gt; (별칭 PRED = (a, b) =&amp;gt;를 == B, 값, 값 ...) (값 값 값 값)</target>
        </trans-unit>
        <trans-unit id="6904f42039c9b0612888cd29993a8aedc68f78ee" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;baseVtblOffset&quot;&gt;baseVtblOffset&lt;/strong&gt;(ClassDeclaration cd, BaseClass* bc);</source>
          <target state="translated">uint &lt;strong id=&quot;baseVtblOffset&quot;&gt;baseVtblOffset&lt;/strong&gt; (ClassDeclaration cd, BaseClass * bc);</target>
        </trans-unit>
        <trans-unit id="6cdcbc6bf3655b6ebd78e6f521b0edf35b1fed7c" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;classinfosize&quot;&gt;classinfosize&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;classinfosize&quot;&gt;classinfosize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="09b8739036cc910f9e038ab4b0879b4258f63b22" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;crc32&quot;&gt;crc32&lt;/strong&gt;(uint crc, const(void)[] buf);</source>
          <target state="translated">uint &lt;strong id=&quot;crc32&quot;&gt;crc32&lt;/strong&gt; (uint crc, const (void) [] buf);</target>
        </trans-unit>
        <trans-unit id="a18c6478827633620660f2c936442bc3e4ae87e7" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;criticalSectionSize&quot;&gt;criticalSectionSize&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;criticalSectionSize&quot;&gt;criticalSectionSize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0e948d435d7347a71c1c8878df1c9a26af8095e2" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;critsecsize&quot;&gt;critsecsize&lt;/strong&gt;();</source>
          <target state="translated">uint &lt;strong id=&quot;critsecsize&quot;&gt;critsecsize&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9271822008d184f5b2c983fe5a9deddc2c91b066" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;endsWith&quot;&gt;endsWith&lt;/strong&gt;(alias pred = &quot;a == b&quot;, Range, Needles...)(Range doesThisEnd, Needles withOneOfThese)</source>
          <target state="translated">uint &lt;strong id=&quot;endsWith&quot;&gt;endsWith&lt;/strong&gt; (별칭 pred = &quot;a == b&quot;, 범위, 바늘 ...) (범위는 ThisEnd, 바늘이있는 OneOfThese)</target>
        </trans-unit>
        <trans-unit id="3d784f061556c0945662a6cbbb7d65c875e7fc1b" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;errno&quot;&gt;errno&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;errno&quot;&gt;errno&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d62ab770ef8e49009094fc1897599b9bc91ee205" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;family&quot;&gt;family&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;family&quot;&gt;가족&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b3c93582dd1602c7837c08400312738c25f788d5" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;fieldalign&quot;&gt;fieldalign&lt;/strong&gt;(Type type);</source>
          <target state="translated">uint &lt;strong id=&quot;fieldalign&quot;&gt;fieldalign&lt;/strong&gt; (유형);</target>
        </trans-unit>
        <trans-unit id="e7927893b8e146dd93228cd3f150ef3e3e48a7ed" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;flags&quot;&gt;flags&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;flags&quot;&gt;플래그&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="13310a6b60e509edfe6500f03faff31a625b3928" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;formattedRead&quot;&gt;formattedRead&lt;/strong&gt;(R, Char, S...)(auto ref R r, const(Char)[] fmt, auto ref S args);</source>
          <target state="translated">uint &lt;strong id=&quot;formattedRead&quot;&gt;형식 읽기&lt;/strong&gt; (R, Char, S ...) (자동 참조 R r, const (Char) [] fmt, 자동 참조 S args);</target>
        </trans-unit>
        <trans-unit id="887c32c5af60360e8c90e297cecccfd1d09ca80d" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;formattedRead&quot;&gt;formattedRead&lt;/strong&gt;(alias fmt, R, S...)(auto ref R r, auto ref S args)</source>
          <target state="translated">uint &lt;strong id=&quot;formattedRead&quot;&gt;형식&lt;/strong&gt; 읽기 (별칭 fmt, R, S ...) (자동 참조 R r, 자동 참조 S args)</target>
        </trans-unit>
        <trans-unit id="120590cf24e99cf263356b482a2911167cf63248" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;formattedWrite&quot;&gt;formattedWrite&lt;/strong&gt;(Writer, Char, A...)(auto ref Writer w, scope const Char[] fmt, A args);</source>
          <target state="translated">uint &lt;strong id=&quot;formattedWrite&quot;&gt;formattedWrite&lt;/strong&gt; (Writer, Char, A ...) (자동 참조 작성기 w, 범위 구성 문자 Char [] fmt, A 인수);</target>
        </trans-unit>
        <trans-unit id="fcb16101872047e5da33504d4d2ead9415e9f221" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;formattedWrite&quot;&gt;formattedWrite&lt;/strong&gt;(alias fmt, Writer, A...)(auto ref Writer w, A args)</source>
          <target state="translated">uint &lt;strong id=&quot;formattedWrite&quot;&gt;formattedWrite&lt;/strong&gt; (별명 fmt, Writer, A ...) (자동 참조 작성기 w, A 인수)</target>
        </trans-unit>
        <trans-unit id="633b395a722fc8a18b7f202dd6d9152cddd7ca1e" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;getAttributes&quot;&gt;getAttributes&lt;/strong&gt;(R)(R name)</source>
          <target state="translated">uint &lt;strong id=&quot;getAttributes&quot;&gt;getAttributes&lt;/strong&gt; (R) (R 이름)</target>
        </trans-unit>
        <trans-unit id="8fa095d054b7ed161f3b916e29b480d2cb4edabb" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;getAttributes&quot;&gt;getAttributes&lt;/strong&gt;(R)(auto ref R name)</source>
          <target state="translated">uint &lt;strong id=&quot;getAttributes&quot;&gt;getAttributes&lt;/strong&gt; (R) (자동 참조 R 이름)</target>
        </trans-unit>
        <trans-unit id="5cff734da2e4563d15265a4ab47fab38bb1c2440" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;getLinkAttributes&quot;&gt;getLinkAttributes&lt;/strong&gt;(R)(R name)</source>
          <target state="translated">uint &lt;strong id=&quot;getLinkAttributes&quot;&gt;getLinkAttributes&lt;/strong&gt; (R) (R 이름)</target>
        </trans-unit>
        <trans-unit id="4b80b0c2e6b32bd732f290d0da1bf28a65eeb976" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;getLinkAttributes&quot;&gt;getLinkAttributes&lt;/strong&gt;(R)(auto ref R name)</source>
          <target state="translated">uint &lt;strong id=&quot;getLinkAttributes&quot;&gt;getLinkAttributes&lt;/strong&gt; (R) (자동 참조 R 이름)</target>
        </trans-unit>
        <trans-unit id="f463a6884beb80b6b234bd09d6dbbd6a56dc05ec" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;line&quot;&gt;line&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;line&quot;&gt;라인&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3dfccb7f10c532aac413a1d9af5a740423b39e44" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;lineSize&quot;&gt;lineSize&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;lineSize&quot;&gt;lineSize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="787a6e0f67bf3beea15e4968434bbe2a72429bc5" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;long_doublesize&quot;&gt;long_doublesize&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;long_doublesize&quot;&gt;long_doublesize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="97e7d8f23d0ccad26c0f77a0b4423455dcd4296d" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;longsize&quot;&gt;longsize&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;longsize&quot;&gt;longsize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2aa2bf21972394316394835f3ec4f600775f27a4" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;model&quot;&gt;model&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;model&quot;&gt;모델&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6e274eaf043fefa1b46d7b63b02b16dd42e7b940" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;mulu&quot;&gt;mulu&lt;/strong&gt;()(uint x, uint y, ref bool overflow);</source>
          <target state="translated">uint &lt;strong id=&quot;mulu&quot;&gt;mulu&lt;/strong&gt; () (uint x, uint y, ref bool overflow);</target>
        </trans-unit>
        <trans-unit id="22c8f4e44f99c5b844c5054de7596496d0053ae4" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;numCacheLevels&quot;&gt;numCacheLevels&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;numCacheLevels&quot;&gt;numCacheLevels&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="74eb65aad1a0a6e34d96048c80b625902d63b164" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;perm&quot;&gt;perm&lt;/strong&gt;;</source>
          <target state="translated">진토 &lt;strong id=&quot;perm&quot;&gt;파마&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="828cd081fab48d018fbd935e9cde20745d4289a1" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;ptrsize&quot;&gt;ptrsize&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;ptrsize&quot;&gt;ptrsize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e3a93178d05718cdd430fb8baee5c2a2a2b24c4d" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;readf&quot;&gt;readf&lt;/strong&gt;(A...)(scope const(char)[] format, auto ref A args);</source>
          <target state="translated">uint &lt;strong id=&quot;readf&quot;&gt;readf&lt;/strong&gt; (A ...) (scope const (char) [] 형식, 자동 참조 A 인수);</target>
        </trans-unit>
        <trans-unit id="294ae62ad4a552255c3adee5af552b847b82974c" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;readf&quot;&gt;readf&lt;/strong&gt;(Data...)(scope const(char)[] format, auto ref Data data);</source>
          <target state="translated">uint &lt;strong id=&quot;readf&quot;&gt;readf&lt;/strong&gt; (Data ...) (scope const (char) [] 형식, 자동 참조 데이터 데이터);</target>
        </trans-unit>
        <trans-unit id="c473801ff9b2c447464a5dd4e0f187f2c4a5bbfa" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;readf&quot;&gt;readf&lt;/strong&gt;(alias format, A...)(auto ref A args)</source>
          <target state="translated">uint &lt;strong id=&quot;readf&quot;&gt;readf&lt;/strong&gt; (별칭 형식, A ...) (자동 참조 A 인수)</target>
        </trans-unit>
        <trans-unit id="1b5f003152e16020df6abaa89981d56763f93e5d" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;readf&quot;&gt;readf&lt;/strong&gt;(alias format, Data...)(auto ref Data data)</source>
          <target state="translated">uint &lt;strong id=&quot;readf&quot;&gt;readf&lt;/strong&gt; (별칭 형식, 데이터 ...) (자동 참조 데이터 데이터)</target>
        </trans-unit>
        <trans-unit id="8cec1baec0b10e197af74423a17d270c86228852" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;realalignsize&quot;&gt;realalignsize&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;realalignsize&quot;&gt;realalignsize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="69d8ce8fb9e94d7cc2c875ae6cb1d0634f1f2b54" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;realpad&quot;&gt;realpad&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;realpad&quot;&gt;realpad&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="597a7cb9d99551d42063a68041623c4f7fc7a405" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;realsize&quot;&gt;realsize&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;realsize&quot;&gt;realsize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9c28b05365f3aed922a1a74d6673b8152e00217d" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;startsWith&quot;&gt;startsWith&lt;/strong&gt;(alias pred = (a, b) =&amp;gt; a == b, Range, Needles...)(Range doesThisStart, Needles withOneOfThese)</source>
          <target state="translated">uint &lt;strong id=&quot;startsWith&quot;&gt;startsWith&lt;/strong&gt; (별칭 : pred = (a, b) =&amp;gt; a == b, Range, Needles ...) (Range doesThisStart, Needles with OneOfThese)</target>
        </trans-unit>
        <trans-unit id="deaa7f05d8a40a010e22a8c18bdda707acadb58e" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;stepping&quot;&gt;stepping&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;stepping&quot;&gt;스테핑&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="09a2ca0dbf55fa96ae21e9dda3b10b151f255e28" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;stride&quot;&gt;stride&lt;/strong&gt;(S)(auto ref S str)</source>
          <target state="translated">uint &lt;strong id=&quot;stride&quot;&gt;보폭&lt;/strong&gt; (S) (자동 참조 S str)</target>
        </trans-unit>
        <trans-unit id="b3ec560248d50a4a5a20b9cce3600cd60a1e4a2a" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;stride&quot;&gt;stride&lt;/strong&gt;(S)(auto ref S str, size_t index = 0)</source>
          <target state="translated">uint &lt;strong id=&quot;stride&quot;&gt;보폭&lt;/strong&gt; (S) (자동 참조 S str, size_t 지수 = 0)</target>
        </trans-unit>
        <trans-unit id="e48bfe278086fc467d10e0786c5c0dc89f6a7ef4" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;stride&quot;&gt;stride&lt;/strong&gt;(S)(auto ref S str, size_t index)</source>
          <target state="translated">uint &lt;strong id=&quot;stride&quot;&gt;stride&lt;/strong&gt; (S) (자동 참조 S str, size_t 인덱스)</target>
        </trans-unit>
        <trans-unit id="c38462a6ce19146525e28749e1a2234fc127aa6d" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;strideBack&quot;&gt;strideBack&lt;/strong&gt;(S)(auto ref S str)</source>
          <target state="translated">uint &lt;strong id=&quot;strideBack&quot;&gt;strideBack&lt;/strong&gt; (S) (자동 참조 S str)</target>
        </trans-unit>
        <trans-unit id="017232b4d88d4f19dfcf2fcd04115edac08fa209" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;strideBack&quot;&gt;strideBack&lt;/strong&gt;(S)(auto ref S str, size_t index)</source>
          <target state="translated">uint &lt;strong id=&quot;strideBack&quot;&gt;strideBack&lt;/strong&gt; (S) (자동 참조 S str, size_t 색인)</target>
        </trans-unit>
        <trans-unit id="2350e5ac5e0e38e80f19b3ae1aa1ad856030c505" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;subu&quot;&gt;subu&lt;/strong&gt;()(uint x, uint y, ref bool overflow);</source>
          <target state="translated">uint &lt;strong id=&quot;subu&quot;&gt;subu&lt;/strong&gt; () (uint x, uint y, ref bool overflow);</target>
        </trans-unit>
        <trans-unit id="e1cf14194106681c49b93cf6b0da90d9f9a243cf" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;type2flags&quot;&gt;type2flags&lt;/strong&gt;(T)();</source>
          <target state="translated">uint &lt;strong id=&quot;type2flags&quot;&gt;type2 플래그&lt;/strong&gt; (T) ();</target>
        </trans-unit>
        <trans-unit id="b8985591a1185c71ba5af0fdca717f180100ef58" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;usednteh&quot;&gt;usednteh&lt;/strong&gt;;</source>
          <target state="translated">UINT &lt;strong id=&quot;usednteh&quot;&gt;usednteh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7c620f16ed26ec8f184987c10d25868a0693abed" translate="yes" xml:space="preserve">
          <source>uint &lt;strong id=&quot;version_num&quot;&gt;version_num&lt;/strong&gt;;</source>
          <target state="translated">uint &lt;strong id=&quot;version_num&quot;&gt;version_num&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="75b7d17e085c4ee640075ec9341e227554154752" translate="yes" xml:space="preserve">
          <source>uint* &lt;code&gt;poffset&lt;/code&gt;</source>
          <target state="translated">uint * &lt;code&gt;poffset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e85f56cdbea16dec9093329bb2449c429830e5c" translate="yes" xml:space="preserve">
          <source>uint16_t</source>
          <target state="translated">uint16_t</target>
        </trans-unit>
        <trans-unit id="b48de50013208f63284f12f10c3f8bae719012c7" translate="yes" xml:space="preserve">
          <source>uint32_t</source>
          <target state="translated">uint32_t</target>
        </trans-unit>
        <trans-unit id="414d6a26152a666b64272160dcd305180880365e" translate="yes" xml:space="preserve">
          <source>uint4</source>
          <target state="translated">uint4</target>
        </trans-unit>
        <trans-unit id="1423d427c67f6aeeca49996c099a7b405ab7acae" translate="yes" xml:space="preserve">
          <source>uint64_t</source>
          <target state="translated">uint64_t</target>
        </trans-unit>
        <trans-unit id="e0c0463b32fc07d8d003fd3d7c2aafeee72b97c5" translate="yes" xml:space="preserve">
          <source>uint8</source>
          <target state="translated">uint8</target>
        </trans-unit>
        <trans-unit id="124420692e282c70bea5a0d74fe0b667bda750f6" translate="yes" xml:space="preserve">
          <source>uint8_t</source>
          <target state="translated">uint8_t</target>
        </trans-unit>
        <trans-unit id="a4d6261c1ea2d6b8a916b60fe9453f56fea2d317" translate="yes" xml:space="preserve">
          <source>uint[] &lt;code&gt;data&lt;/code&gt;</source>
          <target state="translated">uint [] &lt;code&gt;data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea3fb5d375d28eba16cb425e3434d6a1fe84eb5b" translate="yes" xml:space="preserve">
          <source>uint[] &lt;strong id=&quot;addrList&quot;&gt;addrList&lt;/strong&gt;;</source>
          <target state="translated">uint [] &lt;strong id=&quot;addrList&quot;&gt;addrList&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dd66da844c15712eea9973d784a31234f33d589e" translate="yes" xml:space="preserve">
          <source>uint_fast16_t</source>
          <target state="translated">uint_fast16_t</target>
        </trans-unit>
        <trans-unit id="6a1a6023240297e2cbc9948ee6ed3b1674c9644b" translate="yes" xml:space="preserve">
          <source>uint_fast32_t</source>
          <target state="translated">uint_fast32_t</target>
        </trans-unit>
        <trans-unit id="f7dd8edf03e82c137f39e4cca7faaa6c5205ff0e" translate="yes" xml:space="preserve">
          <source>uint_fast64_t</source>
          <target state="translated">uint_fast64_t</target>
        </trans-unit>
        <trans-unit id="7a12d3f10b8efa6802b45ecc23bbda229ee20ce6" translate="yes" xml:space="preserve">
          <source>uint_fast8_t</source>
          <target state="translated">uint_fast8_t</target>
        </trans-unit>
        <trans-unit id="c14292d6df1b0a6f049a987303ab3d7a907c9f90" translate="yes" xml:space="preserve">
          <source>uint_least16_t</source>
          <target state="translated">uint_least16_t</target>
        </trans-unit>
        <trans-unit id="a5a50e57a80bc4464ef517b93768545278d824b6" translate="yes" xml:space="preserve">
          <source>uint_least32_t</source>
          <target state="translated">uint_least32_t</target>
        </trans-unit>
        <trans-unit id="c59a2373b4732dc57999c17e00fa05256fd45a09" translate="yes" xml:space="preserve">
          <source>uint_least64_t</source>
          <target state="translated">uint_least64_t</target>
        </trans-unit>
        <trans-unit id="601de4bedd443804cec606023b8e64526d106282" translate="yes" xml:space="preserve">
          <source>uint_least8_t</source>
          <target state="translated">uint_least8_t</target>
        </trans-unit>
        <trans-unit id="d71ab777d41f48a45a5d9d0eb21640076c14e79d" translate="yes" xml:space="preserve">
          <source>uintmax_t</source>
          <target state="translated">uintmax_t</target>
        </trans-unit>
        <trans-unit id="74e1a6ffffc390db559b4975b55796d988b20db6" translate="yes" xml:space="preserve">
          <source>uintptr_t</source>
          <target state="translated">uintptr_t</target>
        </trans-unit>
        <trans-unit id="ebabc9b6e6f06b857e70ff9361a38c584dafdb10" translate="yes" xml:space="preserve">
          <source>ulong</source>
          <target state="translated">ulong</target>
        </trans-unit>
        <trans-unit id="e64520e4b3ebf3d0e1f4d5a9e991c0276a31885d" translate="yes" xml:space="preserve">
          <source>ulong &lt;code&gt;decimal&lt;/code&gt;</source>
          <target state="translated">우롱 &lt;code&gt;decimal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9464b82e8617a99c9030c3c0e4fd88b4a2c09a35" translate="yes" xml:space="preserve">
          <source>ulong &lt;code&gt;perm&lt;/code&gt;</source>
          <target state="translated">울롱 &lt;code&gt;perm&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cffaf9bcd63881a4c9e04ca3b853d5dfec06d1b7" translate="yes" xml:space="preserve">
          <source>ulong &lt;code&gt;size&lt;/code&gt;</source>
          <target state="translated">우롱 &lt;code&gt;size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="114ddb6ebc92d733081e6a8d910e224381255529" translate="yes" xml:space="preserve">
          <source>ulong &lt;strong id=&quot;addu&quot;&gt;addu&lt;/strong&gt;()(ulong x, ulong y, ref bool overflow);</source>
          <target state="translated">울롱 &lt;strong id=&quot;addu&quot;&gt;아두&lt;/strong&gt; () (울롱 x, 울롱 y, ref bool overflow);</target>
        </trans-unit>
        <trans-unit id="33335be3005dd0836546e7ee02220b5474abfce8" translate="yes" xml:space="preserve">
          <source>ulong &lt;strong id=&quot;allocatedInCurrentThread&quot;&gt;allocatedInCurrentThread&lt;/strong&gt;;</source>
          <target state="translated">ULONG &lt;strong id=&quot;allocatedInCurrentThread&quot;&gt;allocatedInCurrentThread&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="18bffe3b5d18b00e3404c881ab123deb99b15e48" translate="yes" xml:space="preserve">
          <source>ulong &lt;strong id=&quot;getSize&quot;&gt;getSize&lt;/strong&gt;(R)(R name)</source>
          <target state="translated">ulong &lt;strong id=&quot;getSize&quot;&gt;getSize&lt;/strong&gt; (R) (R 이름)</target>
        </trans-unit>
        <trans-unit id="b1d557e1e4d68418bed6d4bb6589b5831c6010db" translate="yes" xml:space="preserve">
          <source>ulong &lt;strong id=&quot;getSize&quot;&gt;getSize&lt;/strong&gt;(R)(auto ref R name)</source>
          <target state="translated">ulong &lt;strong id=&quot;getSize&quot;&gt;getSize&lt;/strong&gt; (R) (자동 참조 R 이름)</target>
        </trans-unit>
        <trans-unit id="28f7a9cb927b9c0717011923349e43bfb8f88a03" translate="yes" xml:space="preserve">
          <source>ulong &lt;strong id=&quot;maxStaticDataSize&quot;&gt;maxStaticDataSize&lt;/strong&gt;;</source>
          <target state="translated">ulong &lt;strong id=&quot;maxStaticDataSize&quot;&gt;maxStaticDataSize&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1db0ccf2438ce6a6b8528a4a1ea23f17d84d44f2" translate="yes" xml:space="preserve">
          <source>ulong &lt;strong id=&quot;mulu&quot;&gt;mulu&lt;/strong&gt;()(ulong x, uint y, ref bool overflow);</source>
          <target state="translated">ULONG &lt;strong id=&quot;mulu&quot;&gt;무루&lt;/strong&gt; () (ULONG X, Y의 UINT, REF BOOL 오버플로);</target>
        </trans-unit>
        <trans-unit id="4b6edb68dd358397f9548a5a471a6252bcfe0dfd" translate="yes" xml:space="preserve">
          <source>ulong &lt;strong id=&quot;mulu&quot;&gt;mulu&lt;/strong&gt;()(ulong x, ulong y, ref bool overflow);</source>
          <target state="translated">ULONG &lt;strong id=&quot;mulu&quot;&gt;무루&lt;/strong&gt; () (ULONG X, Y ULONG, REF BOOL 오버플로);</target>
        </trans-unit>
        <trans-unit id="68d65e7f77229db0994b4fd41f8dd714f21d95f3" translate="yes" xml:space="preserve">
          <source>ulong &lt;strong id=&quot;parameterSize&quot;&gt;parameterSize&lt;/strong&gt;(ref const Loc loc, Type t);</source>
          <target state="translated">ulong &lt;strong id=&quot;parameterSize&quot;&gt;parameterSize&lt;/strong&gt; (참조 const Loc loc, 유형 t);</target>
        </trans-unit>
        <trans-unit id="ddca258a57d8eccdcdbfac08c356a8b29be82efb" translate="yes" xml:space="preserve">
          <source>ulong &lt;strong id=&quot;subu&quot;&gt;subu&lt;/strong&gt;()(ulong x, ulong y, ref bool overflow);</source>
          <target state="translated">ulong &lt;strong id=&quot;subu&quot;&gt;subu&lt;/strong&gt; () (ulong x, ulong y, ref bool overflow);</target>
        </trans-unit>
        <trans-unit id="51f2cfda53914ed27a7d7a40fc964c4c0abca4d0" translate="yes" xml:space="preserve">
          <source>ulong2</source>
          <target state="translated">ulong2</target>
        </trans-unit>
        <trans-unit id="c445fd89a57065ad33f31b22fd1896fa294d74d5" translate="yes" xml:space="preserve">
          <source>ulong4</source>
          <target state="translated">ulong4</target>
        </trans-unit>
        <trans-unit id="a9ed3d2d7ca5895249ebef9812b8e42798becd7e" translate="yes" xml:space="preserve">
          <source>ulong[] &lt;strong id=&quot;values&quot;&gt;values&lt;/strong&gt;;</source>
          <target state="translated">ulong [] &lt;strong id=&quot;values&quot;&gt;값&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c34732078307775c0a42ed8be0f39295ec04b174" translate="yes" xml:space="preserve">
          <source>unary</source>
          <target state="translated">unary</target>
        </trans-unit>
        <trans-unit id="ebe0e2bfc1e99b07011ec5af106614fd1cec2fb8" translate="yes" xml:space="preserve">
          <source>uncallable</source>
          <target state="translated">uncallable</target>
        </trans-unit>
        <trans-unit id="5e497dc8899bcb47c1f2802cfb194b0684a70a00" translate="yes" xml:space="preserve">
          <source>under the following circumstances:</source>
          <target state="translated">다음과 같은 상황에서 :</target>
        </trans-unit>
        <trans-unit id="9b6c18f8c76e1b936acf4b2e747599b0234f5fb7" translate="yes" xml:space="preserve">
          <source>underline the argument</source>
          <target state="translated">주장에 밑줄을 긋다</target>
        </trans-unit>
        <trans-unit id="05b3e863882cfca885c73ee64101710d6c0e71d2" translate="yes" xml:space="preserve">
          <source>uniform RNG</source>
          <target state="translated">균일 한 RNG</target>
        </trans-unit>
        <trans-unit id="0567b696b69c41cbcd371ff0eb9c47af2127c0a8" translate="yes" xml:space="preserve">
          <source>uninitialized value to be filled by source</source>
          <target state="translated">소스로 채워질 초기화되지 않은 값</target>
        </trans-unit>
        <trans-unit id="7a32673a1298f5259ed5dd11373722de41dcec08" translate="yes" xml:space="preserve">
          <source>uninitializedArray is &lt;code&gt;@system&lt;/code&gt; if the uninitialized element type has pointers.</source>
          <target state="translated">초기화되지 않은 요소 유형에 포인터가 있으면 uninitializedArray는 &lt;code&gt;@system&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="61b86f7ec206b16c96c45893b15156ced4fd43a2" translate="yes" xml:space="preserve">
          <source>uninitializedArray is &lt;code&gt;nothrow&lt;/code&gt; and weakly &lt;code&gt;pure&lt;/code&gt;.</source>
          <target state="translated">uninitializedArray는 &lt;code&gt;nothrow&lt;/code&gt; 와 약하게 &lt;code&gt;pure&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67ad5a07a2b999e38f2228365318c33459ab727a" translate="yes" xml:space="preserve">
          <source>union</source>
          <target state="translated">union</target>
        </trans-unit>
        <trans-unit id="65bc19a1905e4549eb91a19f15997fc860aef51c" translate="yes" xml:space="preserve">
          <source>union &lt;strong id=&quot;_N31&quot;&gt;_N31&lt;/strong&gt;;</source>
          <target state="translated">유니언 &lt;strong id=&quot;_N31&quot;&gt;_N31&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a616c5e6ee7f0f19c5d1002b7b01e6e9db307921" translate="yes" xml:space="preserve">
          <source>union fields</source>
          <target state="translated">연합 분야</target>
        </trans-unit>
        <trans-unit id="b0c77b22b4ae5f68687b2320f8889b16f8ab80f6" translate="yes" xml:space="preserve">
          <source>unions</source>
          <target state="translated">unions</target>
        </trans-unit>
        <trans-unit id="577f581211993c56c1e724ee1d23cf894cb9b801" translate="yes" xml:space="preserve">
          <source>unique elements, then there are exactly</source>
          <target state="translated">독특한 요소, 정확히</target>
        </trans-unit>
        <trans-unit id="917625318331cc88a4cff225fe7c0800dce625b6" translate="yes" xml:space="preserve">
          <source>units</source>
          <target state="translated">units</target>
        </trans-unit>
        <trans-unit id="218f4f6fe36c9a1922da81d9efdc6ee32e065e38" translate="yes" xml:space="preserve">
          <source>unnamed sections.</source>
          <target state="translated">명명되지 않은 섹션.</target>
        </trans-unit>
        <trans-unit id="c4a2d49b3e42f30eb98ab258ef1e94c0fc38866e" translate="yes" xml:space="preserve">
          <source>unordered, less, or greater</source>
          <target state="translated">정렬되지 않은, 적은 또는 큰</target>
        </trans-unit>
        <trans-unit id="9861ca25819cf567c1a1412d7e7cec57941c3856" translate="yes" xml:space="preserve">
          <source>unsigned</source>
          <target state="translated">unsigned</target>
        </trans-unit>
        <trans-unit id="68479dd5244f78935720c42144e4913a94a51d43" translate="yes" xml:space="preserve">
          <source>unsigned 128 bits (reserved for future use)</source>
          <target state="translated">부호없는 128 비트 (나중에 사용하기 위해 예약 됨)</target>
        </trans-unit>
        <trans-unit id="3abefb45da2511c533d7bad129b6b6ca7ff1d28f" translate="yes" xml:space="preserve">
          <source>unsigned 16 bit (UTF-16 code unit)</source>
          <target state="translated">부호없는 16 비트 (UTF-16 코드 단위)</target>
        </trans-unit>
        <trans-unit id="ceb8a1fbf25516959d84712049a497e313e70325" translate="yes" xml:space="preserve">
          <source>unsigned 16 bits</source>
          <target state="translated">부호없는 16 비트</target>
        </trans-unit>
        <trans-unit id="a392bd6b70c3efe7a9f4b62404c75d75558462b9" translate="yes" xml:space="preserve">
          <source>unsigned 32 bit (UTF-32 code unit)</source>
          <target state="translated">부호없는 32 비트 (UTF-32 코드 단위)</target>
        </trans-unit>
        <trans-unit id="9bea1858135159207d5f39364cae9a3a90cfc4e8" translate="yes" xml:space="preserve">
          <source>unsigned 32 bits</source>
          <target state="translated">부호없는 32 비트</target>
        </trans-unit>
        <trans-unit id="e0e9d7e55ec10fd68df2942661e025f11e13f731" translate="yes" xml:space="preserve">
          <source>unsigned 64 bits</source>
          <target state="translated">부호없는 64 비트</target>
        </trans-unit>
        <trans-unit id="6721e61d427041b402e653d42473889feae030bf" translate="yes" xml:space="preserve">
          <source>unsigned 8 bit (UTF-8 code unit)</source>
          <target state="translated">부호없는 8 비트 (UTF-8 코드 단위)</target>
        </trans-unit>
        <trans-unit id="e95c4e71e3f480c126dca4873e968c747123f38a" translate="yes" xml:space="preserve">
          <source>unsigned 8 bits</source>
          <target state="translated">부호없는 8 비트</target>
        </trans-unit>
        <trans-unit id="3dc11840724e97d93a4558d0250b1f937eb7198b" translate="yes" xml:space="preserve">
          <source>unsigned char</source>
          <target state="translated">부호없는 숯</target>
        </trans-unit>
        <trans-unit id="1c80457edcd122563e0a9b56b353d81cc47f2160" translate="yes" xml:space="preserve">
          <source>unsigned int szPma</source>
          <target state="translated">부호없는 int szPma</target>
        </trans-unit>
        <trans-unit id="c04b5809e43e0375bee30877d91d7042dc18975f" translate="yes" xml:space="preserve">
          <source>unsigned integral type large enough to hold a pointer</source>
          <target state="translated">포인터를 담을 수있을 정도로 큰 부호없는 정수형</target>
        </trans-unit>
        <trans-unit id="48fd659982bcd2730c1de57e9dff1d1667493a94" translate="yes" xml:space="preserve">
          <source>unsigned long</source>
          <target state="translated">부호없는 긴</target>
        </trans-unit>
        <trans-unit id="24b8e95b1aca633628fd5d2c7a5ac6d268c005ee" translate="yes" xml:space="preserve">
          <source>unsigned long long</source>
          <target state="translated">오랫동안 서명하지 않은</target>
        </trans-unit>
        <trans-unit id="995d911a51805fb95053a05be72eb2908963d90c" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
          <target state="translated">부호없는 짧은</target>
        </trans-unit>
        <trans-unit id="af4a62aa6e01d840b769f07731adde48e4e943b8" translate="yes" xml:space="preserve">
          <source>unspecified action</source>
          <target state="translated">지정되지 않은 동작</target>
        </trans-unit>
        <trans-unit id="861f40ef447977c0e1b58782049dfe09d8c24ebb" translate="yes" xml:space="preserve">
          <source>until a section name is encountered or the end of the comment.</source>
          <target state="translated">섹션 이름이 나올 때까지 또는 주석의 끝.</target>
        </trans-unit>
        <trans-unit id="d53be1e876a0311ea60046618861499b4da5fcf5" translate="yes" xml:space="preserve">
          <source>untyped</source>
          <target state="translated">untyped</target>
        </trans-unit>
        <trans-unit id="c341286f9cb44e165991638623f9f36b5306f4e9" translate="yes" xml:space="preserve">
          <source>up to</source>
          <target state="translated">까지</target>
        </trans-unit>
        <trans-unit id="c165cfbc80732e7882b552440496d2c61ad333cf" translate="yes" xml:space="preserve">
          <source>uphold. Any failure of this expression represents a logic error in the code that must be fixed in the source code. A program for which the assert contract is false is, by definition, invalid.</source>
          <target state="translated">받치다. 이 표현식의 실패는 소스 코드에서 수정해야하는 코드의 논리 오류를 나타냅니다. 어설 션 계약이 거짓 인 프로그램은 정의상 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="96ca632dbf23d5c4ff8c318905e601b4f7c7b302" translate="yes" xml:space="preserve">
          <source>upload file contents by using the regular read callback to get the data and pass the given pointer as custom pointer</source>
          <target state="translated">일반 읽기 콜백을 사용하여 파일 내용을 업로드하여 데이터를 가져오고 지정된 포인터를 사용자 정의 포인터로 전달</target>
        </trans-unit>
        <trans-unit id="f9d0e9b852ccdb58080652f254c4dc1986b54e18" translate="yes" xml:space="preserve">
          <source>upload file from buffer</source>
          <target state="translated">버퍼에서 파일 업로드</target>
        </trans-unit>
        <trans-unit id="be826d83e5dc7fb45fc8bcafc0fb7345a9c19ed4" translate="yes" xml:space="preserve">
          <source>upload file from pointer contents</source>
          <target state="translated">포인터 내용에서 파일 업로드</target>
        </trans-unit>
        <trans-unit id="be4a13994e7d547d6a5905cba919c2239a35d75d" translate="yes" xml:space="preserve">
          <source>upper bound of the uniform distribution</source>
          <target state="translated">균일 분포의 상한</target>
        </trans-unit>
        <trans-unit id="c5d5d3fc821a61f1ea65f8b4222d2d506da08fbc" translate="yes" xml:space="preserve">
          <source>upper bound passed if slice (array[lwr .. upr]), index if not a slice (array[upr])</source>
          <target state="translated">슬라이스 (array [lwr .. upr]) 인 경우 상한, 슬라이스가 아닌 경우 인덱스 (array [upr])</target>
        </trans-unit>
        <trans-unit id="90510263b9873fbb593790fa7b137aea63611a23" translate="yes" xml:space="preserve">
          <source>use &quot;AUTH SSL&quot;</source>
          <target state="translated">&quot;AUTH SSL&quot;사용</target>
        </trans-unit>
        <trans-unit id="8172403953d7e42e3579b2a87db97f17b00e215b" translate="yes" xml:space="preserve">
          <source>use &quot;AUTH TLS&quot;</source>
          <target state="translated">&quot;AUTH TLS&quot;사용</target>
        </trans-unit>
        <trans-unit id="906641b42969e8b7aa6eacc3de9fcac0aaaf32fc" translate="yes" xml:space="preserve">
          <source>use HEAD to get http document</source>
          <target state="translated">HEAD를 사용하여 http 문서 가져 오기</target>
        </trans-unit>
        <trans-unit id="d4a4b5179891f2132a21f5db7c0ee3e0dff89882" translate="yes" xml:space="preserve">
          <source>use Location: Luke!</source>
          <target state="translated">사용 위치 : 루크!</target>
        </trans-unit>
        <trans-unit id="cd51346740a4ee8293b0bba1ce9586e45c99a894" translate="yes" xml:space="preserve">
          <source>use of uninitialized variables</source>
          <target state="translated">초기화되지 않은 변수 사용</target>
        </trans-unit>
        <trans-unit id="dbdc1a08e7dc1750b851906bb814b119db6e520f" translate="yes" xml:space="preserve">
          <source>useReplacementDchar</source>
          <target state="translated">useReplacementDchar</target>
        </trans-unit>
        <trans-unit id="3f05537692b78e33229b33fd50a1b6ecc49dbdea" translate="yes" xml:space="preserve">
          <source>used by scp/sftp to verify the host's public key</source>
          <target state="translated">scp / sftp에서 호스트의 공개 키를 확인하는 데 사용</target>
        </trans-unit>
        <trans-unit id="7fd56a716f92019016deccd8c64eb740028ef3b9" translate="yes" xml:space="preserve">
          <source>used for NTLM authentication only and is set to the NTLM domain name</source>
          <target state="translated">NTLM 인증에만 사용되며 NTLM 도메인 이름으로 설정</target>
        </trans-unit>
        <trans-unit id="ea1c456b912f198de34f15fcdede2e1d3bb41bf9" translate="yes" xml:space="preserve">
          <source>used for actual clock ticks for &lt;a href=&quot;core_time#MonoTime&quot;&gt;&lt;code&gt;core.time.MonoTime&lt;/code&gt;&lt;/a&gt;, so it didn't make sense to use the term ticks here. So, for better or worse, std.datetime uses the term &quot;std time&quot; for this.</source>
          <target state="translated">&lt;a href=&quot;core_time#MonoTime&quot;&gt; &lt;code&gt;core.time.MonoTime&lt;/code&gt; 의&lt;/a&gt; 실제 클럭 틱에 사용되므로 여기서 틱이라는 용어를 사용하는 것은 의미가 없습니다. 따라서 더 좋든 나쁘 든 std.datetime에는 &quot;std time&quot;이라는 용어가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b03a5cd60a6ddc13a7f003f2cd68ec76408691cb" translate="yes" xml:space="preserve">
          <source>used for error messages</source>
          <target state="translated">오류 메시지에 사용</target>
        </trans-unit>
        <trans-unit id="d023db9175d7c74947b1a371b833cfef8385b833" translate="yes" xml:space="preserve">
          <source>used in the</source>
          <target state="translated">에 사용</target>
        </trans-unit>
        <trans-unit id="79d8c903c2b556515856057de177d66985eafde9" translate="yes" xml:space="preserve">
          <source>used to determine current function and module</source>
          <target state="translated">현재 기능 및 모듈을 결정하는 데 사용</target>
        </trans-unit>
        <trans-unit id="c70d02829b4a2faa94d317d3a486ceb2176f9283" translate="yes" xml:space="preserve">
          <source>used to pad end up to &lt;code&gt;width&lt;/code&gt; characters</source>
          <target state="translated">최대 &lt;code&gt;width&lt;/code&gt; 문자 까지 채우는 데 사용</target>
        </trans-unit>
        <trans-unit id="5e8529e06f9144dae63e00ff8f26bed9cdb9b7cc" translate="yes" xml:space="preserve">
          <source>used together with a single other type to force no auth or just that single type</source>
          <target state="translated">다른 단일 유형과 함께 사용하여 인증 또는 단일 유형을 강요하지 않음</target>
        </trans-unit>
        <trans-unit id="2799f334da8a12947e35cc0c5897381a55b45a12" translate="yes" xml:space="preserve">
          <source>used when decompressing. Try to automatically detect the stream format by looking at the data</source>
          <target state="translated">압축을 풀 때 사용됩니다. 데이터를보고 스트림 형식을 자동으로 감지하십시오.</target>
        </trans-unit>
        <trans-unit id="397b1509c4bd9e155860eded96bc666176347ace" translate="yes" xml:space="preserve">
          <source>user-defined operators if and only if the function called as a result of lowering returns by reference;</source>
          <target state="translated">함수가 참조로 리턴을 낮추는 결과로 호출 된 경우에만 사용자 정의 연산자;</target>
        </trans-unit>
        <trans-unit id="3085c37aa1fee42662a75cae06bea198bc8a726e" translate="yes" xml:space="preserve">
          <source>uses a different function than overloading</source>
          <target state="translated">과부하와 다른 기능을 사용합니다</target>
        </trans-unit>
        <trans-unit id="42cd4cc09795fd30ce71c875da59944b9099b15f" translate="yes" xml:space="preserve">
          <source>ushort</source>
          <target state="translated">ushort</target>
        </trans-unit>
        <trans-unit id="dbee82a6c5dd769ac92227762a0920e338c4853e" translate="yes" xml:space="preserve">
          <source>ushort &lt;code&gt;port&lt;/code&gt;</source>
          <target state="translated">ushort &lt;code&gt;port&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bf5bad53ef2ee8f4809dd4532cba8f0a3448cc1" translate="yes" xml:space="preserve">
          <source>ushort &lt;code&gt;range&lt;/code&gt;</source>
          <target state="translated">USHORT의 &lt;code&gt;range&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="704e01196f7642ae65c421dbd60356a733596aa2" translate="yes" xml:space="preserve">
          <source>ushort &lt;strong id=&quot;code&quot;&gt;code&lt;/strong&gt;;</source>
          <target state="translated">ushort &lt;strong id=&quot;code&quot;&gt;코드&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="608abe853afcc2163b763bdda42d36884a809938" translate="yes" xml:space="preserve">
          <source>ushort &lt;strong id=&quot;flags&quot;&gt;flags&lt;/strong&gt;;</source>
          <target state="translated">ushort &lt;strong id=&quot;flags&quot;&gt;플래그&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e5fef4b472cd777ee8c491f8a6969ff49a614ec0" translate="yes" xml:space="preserve">
          <source>ushort &lt;strong id=&quot;internalAttributes&quot;&gt;internalAttributes&lt;/strong&gt;;</source>
          <target state="translated">ushort &lt;strong id=&quot;internalAttributes&quot;&gt;internalAttributes&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9004ec20bb0704adaa5bfc696fe59c863355cd89" translate="yes" xml:space="preserve">
          <source>ushort &lt;strong id=&quot;majorVersion&quot;&gt;majorVersion&lt;/strong&gt;;</source>
          <target state="translated">ushort &lt;strong id=&quot;majorVersion&quot;&gt;majorVersion&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0095ccc7f85c3f9050eafe414794cbc30e203e04" translate="yes" xml:space="preserve">
          <source>ushort &lt;strong id=&quot;minorVersion&quot;&gt;minorVersion&lt;/strong&gt;;</source>
          <target state="translated">ushort &lt;strong id=&quot;minorVersion&quot;&gt;minorVersion&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="104ad925134872ac395e22b7e313f63d0c3e6de1" translate="yes" xml:space="preserve">
          <source>ushort &lt;strong id=&quot;port&quot;&gt;port&lt;/strong&gt;;</source>
          <target state="translated">짧은 &lt;strong id=&quot;port&quot;&gt;포트&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3d977ab2735520d10932dc1f18a73528b3c31222" translate="yes" xml:space="preserve">
          <source>ushort16</source>
          <target state="translated">ushort16</target>
        </trans-unit>
        <trans-unit id="78d5df604d7ea25c37d98032b7bc10db00cc12bd" translate="yes" xml:space="preserve">
          <source>ushort8</source>
          <target state="translated">ushort8</target>
        </trans-unit>
        <trans-unit id="49838d712d2d0c0bcc20962a52d92f2fd5d9eb86" translate="yes" xml:space="preserve">
          <source>using &lt;code&gt;opDollar&lt;/code&gt;, the result of &lt;code&gt;opSlice&lt;/code&gt; must be the result of &lt;a href=&quot;#take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#takeExactly&quot;&gt;&lt;code&gt;takeExactly&lt;/code&gt;&lt;/a&gt; on the original range (they both return the same type for infinite ranges). However, when using &lt;code&gt;opDollar&lt;/code&gt;, the result of &lt;code&gt;opSlice&lt;/code&gt; must be that of the original range type.</source>
          <target state="translated">사용 &lt;code&gt;opDollar&lt;/code&gt; 을 , 결과 &lt;code&gt;opSlice&lt;/code&gt; 이 결과이어야 &lt;a href=&quot;#take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#takeExactly&quot;&gt; &lt;code&gt;takeExactly&lt;/code&gt; &lt;/a&gt; 원래의 범위에서 (둘은 무한 범위에 대해 동일한 유형을 리턴). 그러나 &lt;code&gt;opDollar&lt;/code&gt; 를 사용하는 경우 opSlice 의 결과 는 원래 범위 유형 의 결과 &lt;code&gt;opSlice&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="b472809325de05a1c0483ecef541e3c371a6c73d" translate="yes" xml:space="preserve">
          <source>utf.d</source>
          <target state="translated">utf.d</target>
        </trans-unit>
        <trans-unit id="4ca581cfd64761fd53bda4b441f0279202bb789e" translate="yes" xml:space="preserve">
          <source>utils.d</source>
          <target state="translated">utils.d</target>
        </trans-unit>
        <trans-unit id="7a38d8cbd20d9932ba948efaa364bb62651d5ad4" translate="yes" xml:space="preserve">
          <source>v</source>
          <target state="translated">v</target>
        </trans-unit>
        <trans-unit id="4924abd27e1fa4d3a28ccce585bdd238e068594f" translate="yes" xml:space="preserve">
          <source>v = The value of the expression</source>
          <target state="translated">v = 표현식의 값</target>
        </trans-unit>
        <trans-unit id="0df0f4ef54e17d1eec1bc32264cc3e941af22cc6" translate="yes" xml:space="preserve">
          <source>va_list &lt;code&gt;ap&lt;/code&gt;</source>
          <target state="translated">va_list &lt;code&gt;ap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e0810ee425a566e481af264d32d466f1ea2da7c" translate="yes" xml:space="preserve">
          <source>val must be non-negative.</source>
          <target state="translated">val은 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="7b72a2030c501830bd91343cf317829e8df0e30f" translate="yes" xml:space="preserve">
          <source>valType ident : specValue = defaultValue</source>
          <target state="translated">valType ident : specValue = defaultValue</target>
        </trans-unit>
        <trans-unit id="87d5aacd4d16977aa184e90f617cbe45c0de29c7" translate="yes" xml:space="preserve">
          <source>valid if (1/</source>
          <target state="translated">(1 /</target>
        </trans-unit>
        <trans-unit id="f32b67c7e26342af42efabc674d441dca0a281c5" translate="yes" xml:space="preserve">
          <source>value</source>
          <target state="translated">value</target>
        </trans-unit>
        <trans-unit id="82cd73d2d09d7f96ca5ccd438ebb5b18796cd68f" translate="yes" xml:space="preserve">
          <source>value &lt;code&gt;v&lt;/code&gt; found in the input range &lt;code&gt;range&lt;/code&gt; satisfies the predicate &lt;code&gt;pred&lt;/code&gt;. Performs (at most) &amp;Omicron;(&lt;code&gt;range.length&lt;/code&gt;) evaluations of &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">입력 범위 &lt;code&gt;range&lt;/code&gt; 에서 찾은 value &lt;code&gt;v&lt;/code&gt; 는 술어 &lt;code&gt;pred&lt;/code&gt; 를 충족시킵니다 . &lt;code&gt;pred&lt;/code&gt; 의 (최대) &amp;Omicron; ( &lt;code&gt;range.length&lt;/code&gt; ) 평가를 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="fee04100cac9087a49e7ecd648f986a6a871225f" translate="yes" xml:space="preserve">
          <source>value as a &lt;code&gt;void*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;void*&lt;/code&gt; 로서의 값 .</target>
        </trans-unit>
        <trans-unit id="268da6430523430a06161b360711df419c1ea7ef" translate="yes" xml:space="preserve">
          <source>value as a function type.</source>
          <target state="translated">함수 타입으로서의 값.</target>
        </trans-unit>
        <trans-unit id="dee2885540d631291952dab9e0d4008d7cc3b94c" translate="yes" xml:space="preserve">
          <source>value for convenience. Note in particular that if</source>
          <target state="translated">편의를위한 가치. 특히</target>
        </trans-unit>
        <trans-unit id="5df30663947a2321c63000898c9b4289beba0919" translate="yes" xml:space="preserve">
          <source>value of the node to be removed</source>
          <target state="translated">제거 할 노드의 값</target>
        </trans-unit>
        <trans-unit id="24ceb5dd2eb67d29298c8915546e38bae9f08778" translate="yes" xml:space="preserve">
          <source>value of the variable</source>
          <target state="translated">변수의 값</target>
        </trans-unit>
        <trans-unit id="81a21d5ee26c3bd1bc7b364d3deaea5971025937" translate="yes" xml:space="preserve">
          <source>value passed to catch handler by unwinder</source>
          <target state="translated">언 와인 더에 의해 핸들러를 잡기 위해 전달 된 값</target>
        </trans-unit>
        <trans-unit id="3e05a97b09ae29413a1948249217c59b0eb50120" translate="yes" xml:space="preserve">
          <source>value to be moved into target</source>
          <target state="translated">목표로 옮길 값</target>
        </trans-unit>
        <trans-unit id="0666005f5880cdf8922e34c5c2113a8f22c59a70" translate="yes" xml:space="preserve">
          <source>value to store</source>
          <target state="translated">저장할 가치</target>
        </trans-unit>
        <trans-unit id="62b0d5ad1682081d9ef8b97cfdcdfa22937d0ec9" translate="yes" xml:space="preserve">
          <source>value type</source>
          <target state="translated">가치 유형</target>
        </trans-unit>
        <trans-unit id="1a8b4b18344ca97f4d16a15ecd4c240048f82736" translate="yes" xml:space="preserve">
          <source>value used to deterministically initialize internal state</source>
          <target state="translated">내부 상태를 결정적으로 초기화하는 데 사용되는 값</target>
        </trans-unit>
        <trans-unit id="0e45ac94378b76faeb1b4cdcb5a8a8d1d14e3b7c" translate="yes" xml:space="preserve">
          <source>value, it is not pointing to a valid object.</source>
          <target state="translated">값이 올바른 개체를 가리키고 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d61bd06cdd35d596212f0b9f84460ebf2548cc7" translate="yes" xml:space="preserve">
          <source>value, or point to a valid object of type</source>
          <target state="translated">값 또는 유효한 유형의 객체를 가리킴</target>
        </trans-unit>
        <trans-unit id="2c8fbf9d6b3f69530b7220c18f53e99afcdf67fe" translate="yes" xml:space="preserve">
          <source>values &lt;code&gt;v&lt;/code&gt; found in the input range &lt;code&gt;range&lt;/code&gt; satisfy the predicate &lt;code&gt;pred&lt;/code&gt;. Performs (at most) &amp;Omicron;(&lt;code&gt;range.length&lt;/code&gt;) evaluations of &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">입력 범위 &lt;code&gt;range&lt;/code&gt; 에서 찾은 값 &lt;code&gt;v&lt;/code&gt; 는 술어 &lt;code&gt;pred&lt;/code&gt; 를 만족시킵니다 . &lt;code&gt;pred&lt;/code&gt; 의 (최대) &amp;Omicron; ( &lt;code&gt;range.length&lt;/code&gt; ) 평가를 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="e5b4e786e382d03c28e9edfab2d8149378ae69df" translate="yes" xml:space="preserve">
          <source>var</source>
          <target state="translated">var</target>
        </trans-unit>
        <trans-unit id="b46d0172433dd6895dac7544b9dacbb87b361e9f" translate="yes" xml:space="preserve">
          <source>variable</source>
          <target state="translated">variable</target>
        </trans-unit>
        <trans-unit id="a614835d30b21ca6b480f9be9d1b4505e060c412" translate="yes" xml:space="preserve">
          <source>variable if there is one, null if not</source>
          <target state="translated">변수가 있으면 변수, 없으면 없으면 null</target>
        </trans-unit>
        <trans-unit id="8a2b3213fab96aedce05e9240bf39f38ca683e51" translate="yes" xml:space="preserve">
          <source>variable to replace with shidden</source>
          <target state="translated">shidden으로 대체 할 변수</target>
        </trans-unit>
        <trans-unit id="a58ba097ac363308a68a0ffa4a364de465a8a16d" translate="yes" xml:space="preserve">
          <source>variable to test against</source>
          <target state="translated">테스트 할 변수</target>
        </trans-unit>
        <trans-unit id="bc5af2310c7f15770a4ed0028648ce367e3e2ec0" translate="yes" xml:space="preserve">
          <source>variables</source>
          <target state="translated">variables</target>
        </trans-unit>
        <trans-unit id="e600b4930562dbe600f032f49345498ca2e90910" translate="yes" xml:space="preserve">
          <source>various kinds of XMLException</source>
          <target state="translated">다양한 종류의 XMLException</target>
        </trans-unit>
        <trans-unit id="027c1146b1b8f9274e5a4cfd7a959e328a326cd6" translate="yes" xml:space="preserve">
          <source>vector</source>
          <target state="translated">vector</target>
        </trans-unit>
        <trans-unit id="1bd6c76852aa256dba694cd2216290c7d0ff8373" translate="yes" xml:space="preserve">
          <source>vector element type</source>
          <target state="translated">벡터 요소 유형</target>
        </trans-unit>
        <trans-unit id="48fe93d8060f48a8995e7b1de3f2c34a526308dc" translate="yes" xml:space="preserve">
          <source>vector type size in bytes</source>
          <target state="translated">바이트 단위의 벡터 유형 크기</target>
        </trans-unit>
        <trans-unit id="737651090f9dd4f8c5fcdbf45657ca93b298d8f0" translate="yes" xml:space="preserve">
          <source>version as opposed to a</source>
          <target state="translated">에 반대되는 버전</target>
        </trans-unit>
        <trans-unit id="b37b1721ab2be6883956a477fe83d688c077b41a" translate="yes" xml:space="preserve">
          <source>version identifier</source>
          <target state="translated">버전 식별자</target>
        </trans-unit>
        <trans-unit id="e0d17e654a54ea2e80d5ccb6747bfd3ebb61f01a" translate="yes" xml:space="preserve">
          <source>version level</source>
          <target state="translated">버전 수준</target>
        </trans-unit>
        <trans-unit id="5c7cd739e4e3ff38f8389e84b1218a7b0406612c" translate="yes" xml:space="preserve">
          <source>version must be 1</source>
          <target state="translated">버전은 1이어야합니다</target>
        </trans-unit>
        <trans-unit id="bfd190f5456486754027935ce9caa900beed7ccd" translate="yes" xml:space="preserve">
          <source>version:</source>
          <target state="translated">version:</target>
        </trans-unit>
        <trans-unit id="8f3a07543988e4673dcae5e59c35323c5791f370" translate="yes" xml:space="preserve">
          <source>view</source>
          <target state="translated">view</target>
        </trans-unit>
        <trans-unit id="b4d81e50d6ed0b95e2274d3cd12372b9536dddf3" translate="yes" xml:space="preserve">
          <source>virtual function pointer table</source>
          <target state="translated">가상 함수 포인터 테이블</target>
        </trans-unit>
        <trans-unit id="4ed0428505b0b89fe7bc1a01928ef1bd4c77c1be" translate="yes" xml:space="preserve">
          <source>visitor</source>
          <target state="translated">visitor</target>
        </trans-unit>
        <trans-unit id="14b283b0f39ad01692373a5ceb701f7c1994ad96" translate="yes" xml:space="preserve">
          <source>visitor.d</source>
          <target state="translated">visitor.d</target>
        </trans-unit>
        <trans-unit id="e9cede9b80ea3abd89c755f1117337d429162c86" translate="yes" xml:space="preserve">
          <source>void</source>
          <target state="translated">void</target>
        </trans-unit>
        <trans-unit id="3412aac7c42289de36fa1eeb38dee655170e8b07" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;ObjectNotFound&quot;&gt;ObjectNotFound&lt;/strong&gt;(Identifier id);</source>
          <target state="translated">void &lt;strong id=&quot;ObjectNotFound&quot;&gt;ObjectNotFound&lt;/strong&gt; (식별자 ID);</target>
        </trans-unit>
        <trans-unit id="0ed0d811cefea74f2af0d45451d05f7aab1171b1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;QueryPerformanceCounter&quot;&gt;QueryPerformanceCounter&lt;/strong&gt;(timer_t* ctr);</source>
          <target state="translated">void &lt;strong id=&quot;QueryPerformanceCounter&quot;&gt;QueryPerformanceCounter&lt;/strong&gt; (timer_t * ctr);</target>
        </trans-unit>
        <trans-unit id="3132dd3661e52027a30d83e343b4677a3af68cff" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_Ccmp&quot;&gt;_Ccmp&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;_Ccmp&quot;&gt;_Ccmp&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="eef79a5dae431fbb8d2124baabac5ec7b9ef19d9" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_Cdiv&quot;&gt;_Cdiv&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;_Cdiv&quot;&gt;_Cdiv&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="1104f75dca8c2905e455a8c115921f505c416e70" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_Cmul&quot;&gt;_Cmul&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;_Cmul&quot;&gt;_Cmul&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6545cc910c81bf41738206ea0f988b9f4a9ebf82" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;__LDIV2__&quot;&gt;__LDIV2__&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;__LDIV2__&quot;&gt;__LDIV2__&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="148362d049948884b2152d1babfb7a9e74f1a61e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;__ULDIV2__&quot;&gt;__ULDIV2__&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;__ULDIV2__&quot;&gt;__ULDIV2__&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a36a585c31e3cc610e8f9acf5b61d5fe679124c7" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_c_trace_epi&quot;&gt;_c_trace_epi&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;_c_trace_epi&quot;&gt;_c_trace_epi&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f5987829769c7652dfd3039ae72a72bc0e76f364" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_arraybounds&quot;&gt;_d_arraybounds&lt;/strong&gt;(string file, uint line);</source>
          <target state="translated">void &lt;strong id=&quot;_d_arraybounds&quot;&gt;_d_arraybounds&lt;/strong&gt; (문자열 파일, uint 줄);</target>
        </trans-unit>
        <trans-unit id="5d5186b68c9f4ca139ba29cb34858d520c9b5cf2" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_arrayboundsp&quot;&gt;_d_arrayboundsp&lt;/strong&gt;(immutable(char*) file, uint line);</source>
          <target state="translated">void &lt;strong id=&quot;_d_arrayboundsp&quot;&gt;_d_arrayboundsp&lt;/strong&gt; (불변 (char *) 파일, uint 줄);</target>
        </trans-unit>
        <trans-unit id="241f32e6ce7c905368f0f3d0ecddd2d0b16305ee" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_arrayshrinkfit&quot;&gt;_d_arrayshrinkfit&lt;/strong&gt;(const TypeInfo ti, void[] arr);</source>
          <target state="translated">void &lt;strong id=&quot;_d_arrayshrinkfit&quot;&gt;_d_arrayshrinkfit&lt;/strong&gt; (const TypeInfo ti, void [] arr);</target>
        </trans-unit>
        <trans-unit id="adbe6e8aa780c8627ba8005f50056fb3854c6c9c" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_assert&quot;&gt;_d_assert&lt;/strong&gt;(string file, uint line);</source>
          <target state="translated">void &lt;strong id=&quot;_d_assert&quot;&gt;_d_assert&lt;/strong&gt; (문자열 파일, uint 줄);</target>
        </trans-unit>
        <trans-unit id="433d9317cc855cb9baf2537e10f867d3b6605dbc" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_assert_msg&quot;&gt;_d_assert_msg&lt;/strong&gt;(string msg, string file, uint line);</source>
          <target state="translated">void &lt;strong id=&quot;_d_assert_msg&quot;&gt;_d_assert_msg&lt;/strong&gt; (문자열 메시지, 문자열 파일, uint 줄);</target>
        </trans-unit>
        <trans-unit id="a057eb76ac35b4f170d279b1c374cf1ebf805480" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_assertp&quot;&gt;_d_assertp&lt;/strong&gt;(immutable(char)* file, uint line);</source>
          <target state="translated">void &lt;strong id=&quot;_d_assertp&quot;&gt;_d_assertp&lt;/strong&gt; (불변 (char) * 파일, uint 줄);</target>
        </trans-unit>
        <trans-unit id="13a5aa35417f752e89cda6ab771b83eca50f59a5" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_callfinalizer&quot;&gt;_d_callfinalizer&lt;/strong&gt;(void* p);</source>
          <target state="translated">void &lt;strong id=&quot;_d_callfinalizer&quot;&gt;_d_callfinalizer&lt;/strong&gt; (void * p);</target>
        </trans-unit>
        <trans-unit id="1c732c9d9b72b0d845cca8d3a6a626b8df1b79b5" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_callinterfacefinalizer&quot;&gt;_d_callinterfacefinalizer&lt;/strong&gt;(void* p);</source>
          <target state="translated">void &lt;strong id=&quot;_d_callinterfacefinalizer&quot;&gt;_d_call 인터페이스 파이널 라이저&lt;/strong&gt; (void * p);</target>
        </trans-unit>
        <trans-unit id="f0025fe618ad410eb39b7dc7e6798f78f285630d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_cover_register2&quot;&gt;_d_cover_register2&lt;/strong&gt;(string filename, size_t[] valid, uint[] data, ubyte minPercent);</source>
          <target state="translated">void &lt;strong id=&quot;_d_cover_register2&quot;&gt;_d_cover_register2&lt;/strong&gt; (문자열 파일 이름, size_t [] 유효, uint [] 데이터, ubyte minPercent);</target>
        </trans-unit>
        <trans-unit id="fa2c363199d92ac96e13a82caf2097b78f725455" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_delarray_t&quot;&gt;_d_delarray_t&lt;/strong&gt;(void[]* p, const TypeInfo_Struct ti);</source>
          <target state="translated">void &lt;strong id=&quot;_d_delarray_t&quot;&gt;_d_delarray_t&lt;/strong&gt; (void [] * p, const TypeInfo_Struct ti);</target>
        </trans-unit>
        <trans-unit id="d2cf0e4b70a7166c11040d7b8f7760a260051e9e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_delclass&quot;&gt;_d_delclass&lt;/strong&gt;(Object* p);</source>
          <target state="translated">void &lt;strong id=&quot;_d_delclass&quot;&gt;_d_delclass&lt;/strong&gt; (오브젝트 * p);</target>
        </trans-unit>
        <trans-unit id="9883af7a0bbef17df847e50fe57962dc2874fc95" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_delinterface&quot;&gt;_d_delinterface&lt;/strong&gt;(void** p);</source>
          <target state="translated">void &lt;strong id=&quot;_d_delinterface&quot;&gt;_d_del 인터페이스&lt;/strong&gt; (void ** p);</target>
        </trans-unit>
        <trans-unit id="a6f48d6d7b28cbee6eb6c46adbb8f59080ff5f8a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_delmemory&quot;&gt;_d_delmemory&lt;/strong&gt;(void** p);</source>
          <target state="translated">void &lt;strong id=&quot;_d_delmemory&quot;&gt;_d_delmemory&lt;/strong&gt; (void ** p);</target>
        </trans-unit>
        <trans-unit id="64084c9040af97b701e353d8637eea7627254098" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_delstruct&quot;&gt;_d_delstruct&lt;/strong&gt;(void** p, TypeInfo_Struct inf);</source>
          <target state="translated">void &lt;strong id=&quot;_d_delstruct&quot;&gt;_d_delstruct&lt;/strong&gt; (void ** p, TypeInfo_Struct inf);</target>
        </trans-unit>
        <trans-unit id="8b40db9b36306c1c6f9cd413896fd527a776118e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_invariant&quot;&gt;_d_invariant&lt;/strong&gt;(Object o);</source>
          <target state="translated">void &lt;strong id=&quot;_d_invariant&quot;&gt;_d_invariant&lt;/strong&gt; (Object o);</target>
        </trans-unit>
        <trans-unit id="b71bf7b9d0282ac7cb6e88eb2c9f4b84525e1a5d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_throwc&quot;&gt;_d_throwc&lt;/strong&gt;(Throwable h);</source>
          <target state="translated">void &lt;strong id=&quot;_d_throwc&quot;&gt;_d_throwc&lt;/strong&gt; (throwable h);</target>
        </trans-unit>
        <trans-unit id="ab36400fcf8c138e82e898e501b98d54be940805" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_throwdwarf&quot;&gt;_d_throwdwarf&lt;/strong&gt;(Throwable o);</source>
          <target state="translated">void &lt;strong id=&quot;_d_throwdwarf&quot;&gt;_d_throwdwarf&lt;/strong&gt; (throwable o);</target>
        </trans-unit>
        <trans-unit id="4d755cac81d0585c0eddd77549a59e30096fb3cd" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_unittest&quot;&gt;_d_unittest&lt;/strong&gt;(string file, uint line);</source>
          <target state="translated">void &lt;strong id=&quot;_d_unittest&quot;&gt;_d_unittest&lt;/strong&gt; (문자열 파일, uint 줄);</target>
        </trans-unit>
        <trans-unit id="995e5d47f5cc6c92d405b5ca5fd18ee4ab6f2a02" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_unittest_msg&quot;&gt;_d_unittest_msg&lt;/strong&gt;(string msg, string file, uint line);</source>
          <target state="translated">void &lt;strong id=&quot;_d_unittest_msg&quot;&gt;_d_unittest_msg&lt;/strong&gt; (문자열 메시지, 문자열 파일, uint 줄);</target>
        </trans-unit>
        <trans-unit id="6c776a4d93dba2a24af556dbae28838ef24530cc" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_d_unittestp&quot;&gt;_d_unittestp&lt;/strong&gt;(immutable(char)* file, uint line);</source>
          <target state="translated">void &lt;strong id=&quot;_d_unittestp&quot;&gt;_d_unittestp&lt;/strong&gt; (불변 (char) * 파일, uint 줄);</target>
        </trans-unit>
        <trans-unit id="fe9ae9729e817df61fd5285a2514e3e71318c86b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;_init&quot;&gt;_init&lt;/strong&gt;(ref const Param params);</source>
          <target state="translated">void &lt;strong id=&quot;_init&quot;&gt;_init&lt;/strong&gt; (ref const Param params);</target>
        </trans-unit>
        <trans-unit id="d6f7f4bdf3338a65ceec38d248d63d27080907d8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;accept&quot;&gt;accept&lt;/strong&gt;(Visitor v);</source>
          <target state="translated">무효 &lt;strong id=&quot;accept&quot;&gt;수락&lt;/strong&gt; (방문자 v);</target>
        </trans-unit>
        <trans-unit id="e9e44d581bee79b012ae9be6c5b186abaa68f205" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;acquire&quot;&gt;acquire&lt;/strong&gt;(Store s, size_t initialSize = size_t.max);</source>
          <target state="translated">void &lt;strong id=&quot;acquire&quot;&gt;취득&lt;/strong&gt; (Store s, size_t initialSize = size_t.max);</target>
        </trans-unit>
        <trans-unit id="364d312e47b0bdd27186ae4224455c9b02ae34e2" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;addCommand&quot;&gt;addCommand&lt;/strong&gt;(const(char)[] command);</source>
          <target state="translated">void &lt;strong id=&quot;addCommand&quot;&gt;addCommand&lt;/strong&gt; (const (char) [] 명령);</target>
        </trans-unit>
        <trans-unit id="d7a17147a014d80acf04712168560358a9919c29" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;addComment&quot;&gt;addComment&lt;/strong&gt;(const(char)* comment);</source>
          <target state="translated">void &lt;strong id=&quot;addComment&quot;&gt;addComment&lt;/strong&gt; (const (char) * 주석);</target>
        </trans-unit>
        <trans-unit id="d2162e324f8f0f0dc69f2f4928061665d68637e4" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;addDefaultVersionIdentifiers&quot;&gt;addDefaultVersionIdentifiers&lt;/strong&gt;(ref const Param params);</source>
          <target state="translated">void &lt;strong id=&quot;addDefaultVersionIdentifiers&quot;&gt;addDefaultVersionIdentifiers&lt;/strong&gt; (ref const Param params);</target>
        </trans-unit>
        <trans-unit id="9f92b4f2afd5e1e1b9091236224b20d8b79e6572" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;addImport&quot;&gt;addImport&lt;/strong&gt;(const(char)[] path);</source>
          <target state="translated">void &lt;strong id=&quot;addImport&quot;&gt;addImport&lt;/strong&gt; (const (char) [] 경로);</target>
        </trans-unit>
        <trans-unit id="a4c137493b912a06ff117ef5ff3b3ae8a4f2c690" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;addMember&quot;&gt;addMember&lt;/strong&gt;(Scope* sc, ScopeDsymbol sd);</source>
          <target state="translated">void &lt;strong id=&quot;addMember&quot;&gt;addMember&lt;/strong&gt; (Scope * sc, ScopeDsymbol sd);</target>
        </trans-unit>
        <trans-unit id="ce27ac0406d2366fcbc3514a98989dcce5563eb5" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;addMember&quot;&gt;addMember&lt;/strong&gt;(Scope* sc, ScopeDsymbol sds);</source>
          <target state="translated">void &lt;strong id=&quot;addMember&quot;&gt;addMember&lt;/strong&gt; (Scope * sc, ScopeDsymbol sds);</target>
        </trans-unit>
        <trans-unit id="37293d295aee8c081dc91b4036ae836a3520516d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;addRequestHeader&quot;&gt;addRequestHeader&lt;/strong&gt;(const(char)[] name, const(char)[] value);</source>
          <target state="translated">void &lt;strong id=&quot;addRequestHeader&quot;&gt;addRequestHeader&lt;/strong&gt; (const (char) [] 이름, const (char) [] 값);</target>
        </trans-unit>
        <trans-unit id="00bdd1c8a45243a64c2374b610b545edb3603d2a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;addStringImport&quot;&gt;addStringImport&lt;/strong&gt;(const(char)[] path);</source>
          <target state="translated">void &lt;strong id=&quot;addStringImport&quot;&gt;addStringImport&lt;/strong&gt; (const (char) [] 경로);</target>
        </trans-unit>
        <trans-unit id="5b26d8a443b23ca77387280bbd24c9e762389a49" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;append&quot;&gt;append&lt;/strong&gt;(R)(R name, const void[] buffer)</source>
          <target state="translated">void &lt;strong id=&quot;append&quot;&gt;append&lt;/strong&gt; (R) (R 이름, const void [] 버퍼)</target>
        </trans-unit>
        <trans-unit id="704f34da23ceee69f8529342fc8b898907afb6e7" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;append&quot;&gt;append&lt;/strong&gt;(R)(auto ref R name, const void[] buffer)</source>
          <target state="translated">void &lt;strong id=&quot;append&quot;&gt;append&lt;/strong&gt; (R) (자동 참조 R 이름, const void [] 버퍼)</target>
        </trans-unit>
        <trans-unit id="8c6bef81881b5936aaddd07376d7d8c24b149a5d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;append&quot;&gt;append&lt;/strong&gt;(T, Endian endianness = Endian.bigEndian, R)(R range, const T value)</source>
          <target state="translated">무효 &lt;strong id=&quot;append&quot;&gt;추가&lt;/strong&gt; (T, 엔디안 엔디안 = 엔디안. 빅 엔디안, R) (R 범위, const T 값)</target>
        </trans-unit>
        <trans-unit id="d36644362afe9b81a8efece9960f15f8b061096e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;argExpTypesToCBuffer&quot;&gt;argExpTypesToCBuffer&lt;/strong&gt;(OutBuffer* buf, Expressions* arguments);</source>
          <target state="translated">void &lt;strong id=&quot;argExpTypesToCBuffer&quot;&gt;argExpTypesToCBuffer&lt;/strong&gt; (OutBuffer * buf, 표현식 * 인수);</target>
        </trans-unit>
        <trans-unit id="4a6a1e76e01d38a92e953c8d63017147ee12bd01" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;assertThrown&quot;&gt;assertThrown&lt;/strong&gt;(T : Throwable = Exception, E)(lazy E expression, string msg = null, string file = __FILE__, size_t line = __LINE__);</source>
          <target state="translated">void &lt;strong id=&quot;assertThrown&quot;&gt;assertThrown&lt;/strong&gt; (T : Throwable = Exception, E) (게으른 E 표현식, 문자열 msg = null, 문자열 파일 = __FILE__, size_t line = __LINE__);</target>
        </trans-unit>
        <trans-unit id="c6e5694f6ed491165f920d8d07f7694d6d64f641" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;assignInPlace&quot;&gt;assignInPlace&lt;/strong&gt;(Expression dest, Expression src);</source>
          <target state="translated">void &lt;strong id=&quot;assignInPlace&quot;&gt;assignInPlace&lt;/strong&gt; (Expression dest, Expression src);</target>
        </trans-unit>
        <trans-unit id="cbe87d1a258dc51fe86ceedb8f64badf7de48059" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;assume&quot;&gt;assume&lt;/strong&gt;(Store s, size_t initialSize = size_t.max);</source>
          <target state="translated">void &lt;strong id=&quot;assume&quot;&gt;가정&lt;/strong&gt; (Store s, size_t initialSize = size_t.max);</target>
        </trans-unit>
        <trans-unit id="e009c05668d34dcf2bbbac9c115ee362a3b8abe8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;attributesApply&quot;&gt;attributesApply&lt;/strong&gt;(const TypeFunction tf, void delegate(string) dg, TRUSTformat trustFormat = TRUSTformatDefault);</source>
          <target state="translated">void &lt;strong id=&quot;attributesApply&quot;&gt;attributesApply&lt;/strong&gt; (const TypeFunction tf, void delegate (string) dg, TRUSTformat trustFormat = TRUSTformatDefault);</target>
        </trans-unit>
        <trans-unit id="6c773371065eb06d6c92245361e5f8507ec716ba" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;backend_init&quot;&gt;backend_init&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;backend_init&quot;&gt;backend_init&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="57101cf1c5c9ed344ea45ab3df24f3b502ff896b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;backend_term&quot;&gt;backend_term&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;backend_term&quot;&gt;백엔드 _ 기간&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="77d644ebc788482c97867dfaba0e68eb20f12e88" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;browse&quot;&gt;browse&lt;/strong&gt;(scope const(char)[] url);</source>
          <target state="translated">무효 &lt;strong id=&quot;browse&quot;&gt;탐색&lt;/strong&gt; (범위 const (char) [] url);</target>
        </trans-unit>
        <trans-unit id="1b37da6dacff90719f0024bec5871c125b97d8e5" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;buildCapture&quot;&gt;buildCapture&lt;/strong&gt;(FuncDeclaration fd);</source>
          <target state="translated">void &lt;strong id=&quot;buildCapture&quot;&gt;buildCapture&lt;/strong&gt; (FuncDeclaration fd);</target>
        </trans-unit>
        <trans-unit id="7bb8d03b4c36733a4ffd6a84003ec818027df88c" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;buildClosure&quot;&gt;buildClosure&lt;/strong&gt;(FuncDeclaration fd, IRState* irs);</source>
          <target state="translated">void &lt;strong id=&quot;buildClosure&quot;&gt;buildClosure&lt;/strong&gt; (FuncDeclaration fd, IRState * irs);</target>
        </trans-unit>
        <trans-unit id="29a02bf1a20fd652a3a8d09acf737c0da7c2d643" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;builtinDeinitialize&quot;&gt;builtinDeinitialize&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;builtinDeinitialize&quot;&gt;builtinDeinitialize&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9f2e6865505805612aaf5c38b18864ab563ed784" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;cantExp&quot;&gt;cantExp&lt;/strong&gt;(out UnionExp ue);</source>
          <target state="translated">void &lt;strong id=&quot;cantExp&quot;&gt;cantExp&lt;/strong&gt; ( &lt;strong id=&quot;cantExp&quot;&gt;UnionExpue&lt;/strong&gt; 아웃);</target>
        </trans-unit>
        <trans-unit id="d16c69b125027b3382d624525cec83f952486793" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;chdir&quot;&gt;chdir&lt;/strong&gt;(R)(R pathname)</source>
          <target state="translated">무효 &lt;strong id=&quot;chdir&quot;&gt;chdir&lt;/strong&gt; (R) (R 경로 이름)</target>
        </trans-unit>
        <trans-unit id="bed9905d7ba9777311a469ed8b1fe3934556aafa" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;chdir&quot;&gt;chdir&lt;/strong&gt;(R)(auto ref R pathname)</source>
          <target state="translated">void &lt;strong id=&quot;chdir&quot;&gt;chdir&lt;/strong&gt; (R) (자동 참조 R 경로 이름)</target>
        </trans-unit>
        <trans-unit id="e11c34d41a926bf8420154bafd69381446e0f2de" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;checkDeprecated&quot;&gt;checkDeprecated&lt;/strong&gt;(ref const Loc loc, Scope* sc);</source>
          <target state="translated">void &lt;strong id=&quot;checkDeprecated&quot;&gt;check 추천하지 않습니다&lt;/strong&gt; (ref const Loc loc, Scope * sc 참조);</target>
        </trans-unit>
        <trans-unit id="e996d8dc4b6d8ffbdcefdfd0fce5bdbe6fd2acce" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;cleanup&quot;&gt;cleanup&lt;/strong&gt;();</source>
          <target state="translated">공극 &lt;strong id=&quot;cleanup&quot;&gt;청소&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a8c7ce7da3697dc7b32beced5069f84abc67592b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;clear&quot;&gt;clear&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;clear&quot;&gt;취소&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="171e8bded9d01bcb5ad13d1bba500940d177c13e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;clear&quot;&gt;clear&lt;/strong&gt;(CurlOption option);</source>
          <target state="translated">무효 &lt;strong id=&quot;clear&quot;&gt;취소&lt;/strong&gt; (CurlOption 옵션);</target>
        </trans-unit>
        <trans-unit id="6f412dc2c1b374719651f9e8d90992556bdee936" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;clear&quot;&gt;clear&lt;/strong&gt;(T : Value[Key], Value, Key)(T aa);</source>
          <target state="translated">무효 &lt;strong id=&quot;clear&quot;&gt;클리어&lt;/strong&gt; (T : Value [Key], Value, Key) (T aa);</target>
        </trans-unit>
        <trans-unit id="810117e1c1b44b06eccbeef997557cbaed3bb615" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;clearAllCookies&quot;&gt;clearAllCookies&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;clearAllCookies&quot;&gt;clearAllCookies&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cf65c027b1733623503a98626eae2cfe34fb5b30" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;clearCommands&quot;&gt;clearCommands&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;clearCommands&quot;&gt;clearCommands&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="75587177275eb72b67e46588e9b142f3c0750642" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;clearIfSupported&quot;&gt;clearIfSupported&lt;/strong&gt;(CurlOption option);</source>
          <target state="translated">void &lt;strong id=&quot;clearIfSupported&quot;&gt;clearIfSupported&lt;/strong&gt; (CurlOption 옵션);</target>
        </trans-unit>
        <trans-unit id="f8783571f9d2207c9965cbb9bd6ec1b67d3f91ec" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;clearRequestHeaders&quot;&gt;clearRequestHeaders&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;clearRequestHeaders&quot;&gt;clearRequestHeaders&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="51d8f2412331b905f33355c802bf8dde9c3a2793" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;clearSessionCookies&quot;&gt;clearSessionCookies&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;clearSessionCookies&quot;&gt;clearSessionCookies&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c7669c61e9aeb8e877dce87988b7704e4db83fcc" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;clearStringTab&quot;&gt;clearStringTab&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;clearStringTab&quot;&gt;clearStringTab&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="373e7d1a231d657d9f1a73d1e8c121ab9eab57b3" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;completeSort&quot;&gt;completeSort&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, SwapStrategy ss = SwapStrategy.unstable, Lhs, Rhs)(SortedRange!(Lhs, less) lhs, Rhs rhs)</source>
          <target state="translated">void &lt;strong id=&quot;completeSort&quot;&gt;completeSort&lt;/strong&gt; (별칭 = &quot;a &amp;lt;b&quot;, SwapStrategy ss = SwapStrategy.unstable, Lhs, Rhs) (SortedRange! (Lhs, less) lhs, Rhs rhs)</target>
        </trans-unit>
        <trans-unit id="ef29ac18c2092b4feb9eb4919fdf8b65c6953495" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;copy&quot;&gt;copy&lt;/strong&gt;(RF, RT)(RF from, RT to, PreserveAttributes preserve = preserveAttributesDefault)</source>
          <target state="translated">무효 &lt;strong id=&quot;copy&quot;&gt;복사&lt;/strong&gt; (RF, RT)</target>
        </trans-unit>
        <trans-unit id="38084dd2d127bb2b919ee190d9a025e337108b97" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;copy&quot;&gt;copy&lt;/strong&gt;(RF, RT)(auto ref RF from, auto ref RT to, PreserveAttributes preserve = preserveAttributesDefault)</source>
          <target state="translated">void &lt;strong id=&quot;copy&quot;&gt;copy&lt;/strong&gt; (RF, RT) (자동 참조 RF에서 자동 참조 RT로, PreserveAttributes preserve = preserveAttributesDefault)</target>
        </trans-unit>
        <trans-unit id="b05699dad0bc07b34dc50bd85df4fe72e9fb0f9a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;cpp_type_info_ptr_toDt&quot;&gt;cpp_type_info_ptr_toDt&lt;/strong&gt;(ClassDeclaration cd, ref DtBuilder dtb);</source>
          <target state="translated">void &lt;strong id=&quot;cpp_type_info_ptr_toDt&quot;&gt;cpp_type_info_ptr_toDt&lt;/strong&gt; (ClassDeclaration cd, ref DtBuilder dtb);</target>
        </trans-unit>
        <trans-unit id="a24f7c1fac1dd43ee1928950acd378f612e5d58c" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;csvNextToken&quot;&gt;csvNextToken&lt;/strong&gt;(Range, Malformed ErrorLevel = Malformed.throwException, Separator, Output)(ref Range input, ref Output ans, Separator sep, Separator quote, bool startQuoted = false)</source>
          <target state="translated">void &lt;strong id=&quot;csvNextToken&quot;&gt;csvNextToken&lt;/strong&gt; (Range, Malformed ErrorLevel = Malformed.throwException, Separator, Output) (ref range input, ref Output ans, Separator sep, Separator quote, bool startQuoted = false)</target>
        </trans-unit>
        <trans-unit id="fe95aa2ab0f6592939d011c3bc4f116332b04fb9" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;curl_easy_cleanup&quot;&gt;curl_easy_cleanup&lt;/strong&gt;(CURL* curl);</source>
          <target state="translated">void &lt;strong id=&quot;curl_easy_cleanup&quot;&gt;curl_easy_cleanup&lt;/strong&gt; (CURL * 컬);</target>
        </trans-unit>
        <trans-unit id="55a119a929e75539b33f36a9b366a849ac49d145" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;curl_easy_reset&quot;&gt;curl_easy_reset&lt;/strong&gt;(CURL* curl);</source>
          <target state="translated">void &lt;strong id=&quot;curl_easy_reset&quot;&gt;curl_easy_reset&lt;/strong&gt; (CURL * 컬);</target>
        </trans-unit>
        <trans-unit id="4ed9dfaf5a3138e5de098ac10d262cc6657a2bd0" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;curl_formfree&quot;&gt;curl_formfree&lt;/strong&gt;(curl_httppost* form);</source>
          <target state="translated">void &lt;strong id=&quot;curl_formfree&quot;&gt;curl_formfree&lt;/strong&gt; (curl_httppost * 형식);</target>
        </trans-unit>
        <trans-unit id="f4917a9c4e272f613cd9f27ab4427050f1691fc1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;curl_free&quot;&gt;curl_free&lt;/strong&gt;(void* p);</source>
          <target state="translated">무효 &lt;strong id=&quot;curl_free&quot;&gt;컬&lt;/strong&gt; (void * p);</target>
        </trans-unit>
        <trans-unit id="a5b2f3f8ca68a03f0a8f6c27e96002fc74185320" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;curl_global_cleanup&quot;&gt;curl_global_cleanup&lt;/strong&gt;();</source>
          <target state="translated">보이드 &lt;strong id=&quot;curl_global_cleanup&quot;&gt;curl_global_cleanup&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="68d7040ca8627e8df54f6389576459e1a7bf1ef3" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;curl_slist_free_all&quot;&gt;curl_slist_free_all&lt;/strong&gt;(curl_slist*);</source>
          <target state="translated">void &lt;strong id=&quot;curl_slist_free_all&quot;&gt;curl_slist_free_all&lt;/strong&gt; (curl_slist *);</target>
        </trans-unit>
        <trans-unit id="61687865d8af1349baa4f1d1017e60ecc8c4fe52" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;defaultGetoptFormatter&quot;&gt;defaultGetoptFormatter&lt;/strong&gt;(Output)(Output output, string text, Option[] opt);</source>
          <target state="translated">void &lt;strong id=&quot;defaultGetoptFormatter&quot;&gt;defaultGetoptFormatter&lt;/strong&gt; (Output) (출력 결과, 문자열 텍스트, 옵션 [] opt);</target>
        </trans-unit>
        <trans-unit id="84465d586f333b0e03da72ef3c852170088de1b1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;defaultGetoptPrinter&quot;&gt;defaultGetoptPrinter&lt;/strong&gt;(string text, Option[] opt);</source>
          <target state="translated">void &lt;strong id=&quot;defaultGetoptPrinter&quot;&gt;defaultGetoptPrinter&lt;/strong&gt; (문자열 텍스트, 옵션 [] opt);</target>
        </trans-unit>
        <trans-unit id="ebfd1461f35bf51b39bd2f6d7faa35a7f00cc87f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;deinitialize&quot;&gt;deinitialize&lt;/strong&gt;();</source>
          <target state="translated">보이드 &lt;strong id=&quot;deinitialize&quot;&gt;의 초기화를&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="acdcad95991bc98949f2cc0063b145b0d822bf83" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;deinitializeDMD&quot;&gt;deinitializeDMD&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;deinitializeDMD&quot;&gt;초기화 DMD&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0b80f965972d819187da84664bfd227918285e03" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;del&quot;&gt;del&lt;/strong&gt;(Conn = AutoProtocol)(const(char)[] url, Conn conn = Conn())</source>
          <target state="translated">void &lt;strong id=&quot;del&quot;&gt;del&lt;/strong&gt; (Conn = 자동 프로토콜) (const (char) [] url, Conn conn = Conn ())</target>
        </trans-unit>
        <trans-unit id="f6387fedd59438a538eb79925118c1a37c686ee6" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;destroy&quot;&gt;destroy&lt;/strong&gt;(bool initialize = true, T : U[n], U, size_t n)(ref T obj)</source>
          <target state="translated">void &lt;strong id=&quot;destroy&quot;&gt;destroy&lt;/strong&gt; (bool initialize = true, T : U [n], U, size_t n) (ref T obj)</target>
        </trans-unit>
        <trans-unit id="d9ef68514d02f31025117870fb2ea64db26d10b8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;destroy&quot;&gt;destroy&lt;/strong&gt;(bool initialize = true, T)(T obj)</source>
          <target state="translated">무효 &lt;strong id=&quot;destroy&quot;&gt;파괴&lt;/strong&gt; (bool initialize = true, T) (T obj)</target>
        </trans-unit>
        <trans-unit id="b9e0b227ec9a133c4a7e6f2ac28a621dafb64b19" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;destroy&quot;&gt;destroy&lt;/strong&gt;(bool initialize = true, T)(ref T obj)</source>
          <target state="translated">void &lt;strong id=&quot;destroy&quot;&gt;destroy&lt;/strong&gt; (bool initialize = true, T) (ref T obj)</target>
        </trans-unit>
        <trans-unit id="292f9de23ae0e5d4bd7a7915e875d526ce209344" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dispose&quot;&gt;dispose&lt;/strong&gt;(A, T)(auto ref A alloc, auto ref T p)</source>
          <target state="translated">무효 &lt;strong id=&quot;dispose&quot;&gt;처리&lt;/strong&gt; (A, T) (자동 참조 A 할당, 자동 참조 T p)</target>
        </trans-unit>
        <trans-unit id="8aa244fcab82b32f62e0b6f66917c8f635489711" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dispose&quot;&gt;dispose&lt;/strong&gt;(A, T)(auto ref A alloc, auto ref T* p);</source>
          <target state="translated">무효 &lt;strong id=&quot;dispose&quot;&gt;처분&lt;/strong&gt; (A, T) (자동 참조 A 할당량, 자동 참조 T * p);</target>
        </trans-unit>
        <trans-unit id="646ab53dddfcea0facd3717d1bc6f620e3ba99e1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dispose&quot;&gt;dispose&lt;/strong&gt;(A, T)(auto ref A alloc, auto ref T[] array);</source>
          <target state="translated">무효 &lt;strong id=&quot;dispose&quot;&gt;처리&lt;/strong&gt; (A, T) (자동 참조 A 할당, 자동 참조 T [] 어레이);</target>
        </trans-unit>
        <trans-unit id="7c4b6cc6f79100bbbe431b2d04c58d9f1df50bca" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dispose&quot;&gt;dispose&lt;/strong&gt;(T)(T p)</source>
          <target state="translated">무효 &lt;strong id=&quot;dispose&quot;&gt;처리&lt;/strong&gt; (T) (T p)</target>
        </trans-unit>
        <trans-unit id="1af20024cd9a7392eb05ba39f75751829b14e265" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dispose&quot;&gt;dispose&lt;/strong&gt;(T)(T* p);</source>
          <target state="translated">무효 &lt;strong id=&quot;dispose&quot;&gt;처분&lt;/strong&gt; (T) (T * p);</target>
        </trans-unit>
        <trans-unit id="5f17b1f7a3d89461ebd78e151fee516eff41230a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dispose&quot;&gt;dispose&lt;/strong&gt;(T)(T[] array);</source>
          <target state="translated">무효 &lt;strong id=&quot;dispose&quot;&gt;처리&lt;/strong&gt; (T) (T [] 어레이);</target>
        </trans-unit>
        <trans-unit id="f710e0bb1ccc5db2a38c3f10a258723ebd6b068f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;disposeMultidimensionalArray&quot;&gt;disposeMultidimensionalArray&lt;/strong&gt;(T, Allocator)(auto ref Allocator alloc, auto ref T[] array);</source>
          <target state="translated">void &lt;strong id=&quot;disposeMultidimensionalArray&quot;&gt;disposeMultidimensionalArray&lt;/strong&gt; (T, Allocator) (자동 참조 할당 자 할당, 자동 참조 T [] 배열);</target>
        </trans-unit>
        <trans-unit id="770c820efa7454fb42b372c1fbb2526e886982dd" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dmd_coverDestPath&quot;&gt;dmd_coverDestPath&lt;/strong&gt;(string path);</source>
          <target state="translated">void &lt;strong id=&quot;dmd_coverDestPath&quot;&gt;dmd_coverDestPath&lt;/strong&gt; (문자열 경로);</target>
        </trans-unit>
        <trans-unit id="90bd31b512a9cfb3d37755b90c8714328b8c4d1b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dmd_coverDestPath&quot;&gt;dmd_coverDestPath&lt;/strong&gt;(string pathname);</source>
          <target state="translated">void &lt;strong id=&quot;dmd_coverDestPath&quot;&gt;dmd_coverDestPath&lt;/strong&gt; (문자열 경로 이름);</target>
        </trans-unit>
        <trans-unit id="2ffb0042578afb8a83b078f1da8f4053a06d015b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dmd_coverSetMerge&quot;&gt;dmd_coverSetMerge&lt;/strong&gt;(bool flag);</source>
          <target state="translated">void &lt;strong id=&quot;dmd_coverSetMerge&quot;&gt;dmd_coverSetMerge&lt;/strong&gt; (부울 플래그);</target>
        </trans-unit>
        <trans-unit id="bd2573ab8cf7f2bca3ddd02e8c52210bc4080c99" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dmd_coverSourcePath&quot;&gt;dmd_coverSourcePath&lt;/strong&gt;(string path);</source>
          <target state="translated">void &lt;strong id=&quot;dmd_coverSourcePath&quot;&gt;dmd_coverSourcePath&lt;/strong&gt; (문자열 경로);</target>
        </trans-unit>
        <trans-unit id="a0ed4520bfa6d4821e29d9c64ffd86818e54725a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dmd_coverSourcePath&quot;&gt;dmd_coverSourcePath&lt;/strong&gt;(string pathname);</source>
          <target state="translated">void &lt;strong id=&quot;dmd_coverSourcePath&quot;&gt;dmd_coverSourcePath&lt;/strong&gt; (문자열 경로 이름);</target>
        </trans-unit>
        <trans-unit id="33d07b279e991e8f564717d3113221cce70813ee" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;download&quot;&gt;download&lt;/strong&gt;(Conn = AutoProtocol)(const(char)[] url, string saveToPath, Conn conn = Conn())</source>
          <target state="translated">무효 &lt;strong id=&quot;download&quot;&gt;다운로드&lt;/strong&gt; (Conn = AutoProtocol) (const (char) [] url, 문자열 saveToPath, Conn conn = Conn ())</target>
        </trans-unit>
        <trans-unit id="c13b8c1ef20ebffa6828b51efc7dab88050dd23f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;dsymbolSemantic&quot;&gt;dsymbolSemantic&lt;/strong&gt;(Dsymbol dsym, Scope* sc);</source>
          <target state="translated">void &lt;strong id=&quot;dsymbolSemantic&quot;&gt;dsymbolSemantic&lt;/strong&gt; (Dsymbol dsym, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="6e5447b59ac7c0eb20c9fb5351c1016f21a05c27" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;eliminateMaybeScopes&quot;&gt;eliminateMaybeScopes&lt;/strong&gt;(VarDeclaration[] array);</source>
          <target state="translated">보이드 &lt;strong id=&quot;eliminateMaybeScopes&quot;&gt;eliminateMaybeScopes&lt;/strong&gt; (VarDeclaration [] 배열);</target>
        </trans-unit>
        <trans-unit id="3f4cad2ed35ce35b9ffa32b413ad244cd12d7330" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(E)(dchar c, void delegate(E) dg);</source>
          <target state="translated">void &lt;strong id=&quot;encode&quot;&gt;인코딩&lt;/strong&gt; (E) (dchar c, void delegate (E) dg);</target>
        </trans-unit>
        <trans-unit id="2f61750d7a1f1fe2c02919470025cbec40d391ea" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;ensureInitialized&quot;&gt;ensureInitialized&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;ensureInitialized&quot;&gt;ensureInitialized&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="3604bbe6534cf4f396493437baf08902f751886d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;ensurePathToNameExists&quot;&gt;ensurePathToNameExists&lt;/strong&gt;(Loc loc, const(char)[] name);</source>
          <target state="translated">void &lt;strong id=&quot;ensurePathToNameExists&quot;&gt;ensurePathToNameExists&lt;/strong&gt; (Loc loc, const (char) [] name);</target>
        </trans-unit>
        <trans-unit id="33b6a9cfd52c33c7942f775fb5c6d1730166b615" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;escapeDdocString&quot;&gt;escapeDdocString&lt;/strong&gt;(OutBuffer* buf, size_t start);</source>
          <target state="translated">void &lt;strong id=&quot;escapeDdocString&quot;&gt;escapeDdocString&lt;/strong&gt; (OutBuffer * buf, size_t 시작);</target>
        </trans-unit>
        <trans-unit id="9da874c6302e3dd55fcea4d6af14a488c8481a64" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;escapePath&quot;&gt;escapePath&lt;/strong&gt;(OutBuffer* buf, const(char)* fname);</source>
          <target state="translated">void &lt;strong id=&quot;escapePath&quot;&gt;escapePath&lt;/strong&gt; (OutBuffer * buf, const (char) * fname);</target>
        </trans-unit>
        <trans-unit id="3af356d4992a1864e6d92fcb62539195d2049847" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;except_fillInEHTable&quot;&gt;except_fillInEHTable&lt;/strong&gt;(Symbol* s);</source>
          <target state="translated">void &lt;strong id=&quot;except_fillInEHTable&quot;&gt;except_fillInEHTable&lt;/strong&gt; (Symbol * s);</target>
        </trans-unit>
        <trans-unit id="9ddafc68ae82246a703c38bfce15c3b19c1f5611" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(T)(T years, T months = 0, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)</source>
          <target state="translated">무효 &lt;strong id=&quot;expand&quot;&gt;확장&lt;/strong&gt; (T) (T 년, T 개월 = 0, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)</target>
        </trans-unit>
        <trans-unit id="5f7062094a9b93fc5792378c1c1f6d37edbf9e81" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(T)(T years, T months = 0, AllowDayOverflow allowOverflow = AllowDayOverflow.yes, Direction dir = Direction.both)</source>
          <target state="translated">무효 &lt;strong id=&quot;expand&quot;&gt;확장&lt;/strong&gt; (T) (T 년, T 개월 = 0, AllowDayOverflow allowOverflow = AllowDayOverflow.yes, 방향 dir = Direction.both)</target>
        </trans-unit>
        <trans-unit id="a9bf6b2dff52e4365413f2b3b2dc7a5c2e6364df" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;expandTuples&quot;&gt;expandTuples&lt;/strong&gt;(Expressions* exps);</source>
          <target state="translated">void &lt;strong id=&quot;expandTuples&quot;&gt;expandTuples&lt;/strong&gt; (표현식 * exps);</target>
        </trans-unit>
        <trans-unit id="651dad101f0ee637d45c9a1029cc04527f9e6d09" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;fft&quot;&gt;fft&lt;/strong&gt;(Ret, R)(R range, Ret buf);</source>
          <target state="translated">보이드 &lt;strong id=&quot;fft&quot;&gt;fft&lt;/strong&gt; (Ret, R) (R 범위, Ret buf);</target>
        </trans-unit>
        <trans-unit id="2127058557a14caa3b99fb448869d1c7d6ff799d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;fill&quot;&gt;fill&lt;/strong&gt;()(auto ref const(T) value);</source>
          <target state="translated">빈 공간 &lt;strong id=&quot;fill&quot;&gt;채우기&lt;/strong&gt; () (자동 참조 const (T) 값);</target>
        </trans-unit>
        <trans-unit id="7cb6a9e5688a125a33e27fe220f5e0e900d02913" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;fill&quot;&gt;fill&lt;/strong&gt;(InputRange, ForwardRange)(InputRange range, ForwardRange filler)</source>
          <target state="translated">무효 &lt;strong id=&quot;fill&quot;&gt;채우기&lt;/strong&gt; (InputRange, ForwardRange) (InputRange 범위, ForwardRange 필러)</target>
        </trans-unit>
        <trans-unit id="cbe3fcd14a7458a4346fef73829c0e05716f82f6" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;fill&quot;&gt;fill&lt;/strong&gt;(Range, Value)(auto ref Range range, auto ref Value value)</source>
          <target state="translated">빈 공간 &lt;strong id=&quot;fill&quot;&gt;채우기&lt;/strong&gt; (범위, 값) (자동 참조 범위 범위, 자동 참조 값)</target>
        </trans-unit>
        <trans-unit id="5026a1a799e38d515689eb72efdc5e762b002a59" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;findAllOuterAccessedVariables&quot;&gt;findAllOuterAccessedVariables&lt;/strong&gt;(FuncDeclaration fd, VarDeclarations* vars);</source>
          <target state="translated">void &lt;strong id=&quot;findAllOuterAccessedVariables&quot;&gt;findAllOuterAccessedVariables&lt;/strong&gt; (FuncDeclaration fd, VarDeclarations * vars);</target>
        </trans-unit>
        <trans-unit id="52fa68d10ac5e7cc2f1d7e6712e70478b163f32a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;fix16997&quot;&gt;fix16997&lt;/strong&gt;(Scope* sc, UnaExp ue);</source>
          <target state="translated">void &lt;strong id=&quot;fix16997&quot;&gt;fix16997&lt;/strong&gt; (Scope * sc, UnaExpue);</target>
        </trans-unit>
        <trans-unit id="da376122fd5e47264b2f02f311f5f3ce37f62232" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;flip&quot;&gt;flip&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;flip&quot;&gt;플립&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d6bedad30e961f9a3d1dec0a9b4ee1e4dbf9d44d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;flip&quot;&gt;flip&lt;/strong&gt;(size_t i);</source>
          <target state="translated">무효 &lt;strong id=&quot;flip&quot;&gt;플립&lt;/strong&gt; (size_t i);</target>
        </trans-unit>
        <trans-unit id="55818cb46c9ab901fad4ff4aa5c6f6d9b71b80a2" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;flushCookieJar&quot;&gt;flushCookieJar&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;flushCookieJar&quot;&gt;flushCookieJar&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6e39c2808070fe3cf6aded914457dc7e8d614a31" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;flushMixins&quot;&gt;flushMixins&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;flushMixins&quot;&gt;flushMixins&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="12d72912dd829606c9b2f53cb36d7f3ab846b874" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;foreachDsymbol&quot;&gt;foreachDsymbol&lt;/strong&gt;(Dsymbols* symbols, scope void delegate(Dsymbol) dg);</source>
          <target state="translated">void &lt;strong id=&quot;foreachDsymbol&quot;&gt;foreachDsymbol&lt;/strong&gt; (Dsymbols * 기호, scope void delegate (Dsymbol) dg);</target>
        </trans-unit>
        <trans-unit id="0b0b26b6deb29b26cdb331bc58f6d7ad9ef10e29" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;formatValue&quot;&gt;formatValue&lt;/strong&gt;(Writer, T, Char)(auto ref Writer w, auto ref T val, ref scope const FormatSpec!Char f);</source>
          <target state="translated">void &lt;strong id=&quot;formatValue&quot;&gt;formatValue&lt;/strong&gt; (Writer, T, Char) (자동 참조 작성기 w, 자동 참조 Tval, 참조 범위 const FormatSpec! Char f);</target>
        </trans-unit>
        <trans-unit id="ff3e1ec02702d3b6bca7e9a3e32caa1c0e84f53f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;fullSemantic&quot;&gt;fullSemantic&lt;/strong&gt;(Module m);</source>
          <target state="translated">무효 &lt;strong id=&quot;fullSemantic&quot;&gt;fullSemantic&lt;/strong&gt; (모듈 m);</target>
        </trans-unit>
        <trans-unit id="531eb492556da923f0ab82ae63b3ca4744534130" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;fullyQualifiedName&quot;&gt;fullyQualifiedName&lt;/strong&gt;(ref OutBuffer buf);</source>
          <target state="translated">void &lt;strong id=&quot;fullyQualifiedName&quot;&gt;fullyQualifiedName&lt;/strong&gt; (참조 OutBuffer buf);</target>
        </trans-unit>
        <trans-unit id="72645c240b0f62519be399baf06476aefe416d14" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;functionResolve&quot;&gt;functionResolve&lt;/strong&gt;(ref MatchAccumulator m, Dsymbol dstart, Loc loc, Scope* sc, Objects* tiargs, Type tthis, Expressions* fargs, const(char)** pMessage = null);</source>
          <target state="translated">void &lt;strong id=&quot;functionResolve&quot;&gt;functionResolve&lt;/strong&gt; (ref MatchAccumulator m, Dsymbol dstart, Loc loc, Scope * sc, Objects * tiargs, 타입 tthis, Expressions * fargs, const (char) ** pMessage = null);</target>
        </trans-unit>
        <trans-unit id="df11071c42325e42c515e8aa76706455a24a4555" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;gc_clrProxy&quot;&gt;gc_clrProxy&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;gc_clrProxy&quot;&gt;gc_clrProxy&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="45160a4237457d80188fc867d73e48457ab20057" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;gc_setProxy&quot;&gt;gc_setProxy&lt;/strong&gt;(void* p);</source>
          <target state="translated">void &lt;strong id=&quot;gc_setProxy&quot;&gt;gc_setProxy&lt;/strong&gt; (void * p);</target>
        </trans-unit>
        <trans-unit id="8099792910f2fff889f994794fc371ed3d5af85b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;genObjFile&quot;&gt;genObjFile&lt;/strong&gt;(Module m, bool multiobj);</source>
          <target state="translated">void &lt;strong id=&quot;genObjFile&quot;&gt;genObjFile&lt;/strong&gt; (모듈 m, bool multiobj);</target>
        </trans-unit>
        <trans-unit id="41db5b2e3ebce91b62b275d2ff04b097f4f2e9f2" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;genTypeInfo&quot;&gt;genTypeInfo&lt;/strong&gt;(Loc loc, Type torig, Scope* sc);</source>
          <target state="translated">void &lt;strong id=&quot;genTypeInfo&quot;&gt;genTypeInfo&lt;/strong&gt; (Loc loc, Type torig, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="be0777cc5a7cf5aa336bbdbfa27fee8aabba2e40" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;gendocfile&quot;&gt;gendocfile&lt;/strong&gt;(Module m);</source>
          <target state="translated">void &lt;strong id=&quot;gendocfile&quot;&gt;gendocfile&lt;/strong&gt; (모듈 m);</target>
        </trans-unit>
        <trans-unit id="28eafe7c980c9fa9e80414a241086ccffb13cb8c" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;getTimes&quot;&gt;getTimes&lt;/strong&gt;(R)(R name, out SysTime accessTime, out SysTime modificationTime)</source>
          <target state="translated">void &lt;strong id=&quot;getTimes&quot;&gt;getTimes&lt;/strong&gt; (R) (R 이름, 출력 SysTime 액세스 시간, 출력 SysTime 수정 시간)</target>
        </trans-unit>
        <trans-unit id="ca644dc8552f7f5f1a5cfbca6c4055b839c6c0bd" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;getTimes&quot;&gt;getTimes&lt;/strong&gt;(R)(auto ref R name, out SysTime accessTime, out SysTime modificationTime)</source>
          <target state="translated">void &lt;strong id=&quot;getTimes&quot;&gt;getTimes&lt;/strong&gt; (R) (자동 참조 R 이름, 출력 SysTime 액세스 시간, 출력 SysTime 수정 시간)</target>
        </trans-unit>
        <trans-unit id="b9c98932631222187667f34e5497509d3ad78101" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;getTimesWin&quot;&gt;getTimesWin&lt;/strong&gt;(R)(R name, out SysTime fileCreationTime, out SysTime fileAccessTime, out SysTime fileModificationTime)</source>
          <target state="translated">void &lt;strong id=&quot;getTimesWin&quot;&gt;getTimesWin&lt;/strong&gt; (R) (R 이름, 출력 SysTime 파일 작성 시간, SysTime 파일 액세스 시간 출력, SysTime 파일 출력 시간)</target>
        </trans-unit>
        <trans-unit id="eb197da558f837df96dc4909342d80222772ec0f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;getenv_setargv&quot;&gt;getenv_setargv&lt;/strong&gt;(const(char)* envvalue, Strings* args);</source>
          <target state="translated">void &lt;strong id=&quot;getenv_setargv&quot;&gt;getenv_setargv&lt;/strong&gt; (const (char) * envvalue, Strings * args);</target>
        </trans-unit>
        <trans-unit id="39349e4fb0186cfaa1695b9ff22038f77f2aa496" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;hookOpOpAssign&quot;&gt;hookOpOpAssign&lt;/strong&gt;(string x, L, R)(ref L lhs, R rhs);</source>
          <target state="translated">void &lt;strong id=&quot;hookOpOpAssign&quot;&gt;hookOpOpAssign&lt;/strong&gt; (문자열 x, L, R) (ref &lt;strong id=&quot;hookOpOpAssign&quot;&gt;Llhs&lt;/strong&gt; , R rhs);</target>
        </trans-unit>
        <trans-unit id="72b0a479b9b73024a4ecb6479e2dc7dcd78714f8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;initialize&quot;&gt;initialize&lt;/strong&gt;();</source>
          <target state="translated">무효화 &lt;strong id=&quot;initialize&quot;&gt;초기화&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="15b7be14c644b23a2ba25e248d60dc8b929f5991" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;initializeAll&quot;&gt;initializeAll&lt;/strong&gt;(Range)(Range range)</source>
          <target state="translated">void &lt;strong id=&quot;initializeAll&quot;&gt;initializeAll&lt;/strong&gt; (Range) (범위 범위)</target>
        </trans-unit>
        <trans-unit id="be8dfc979210b6fab7e88211212dc3a12a43ef46" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;inlineScanModule&quot;&gt;inlineScanModule&lt;/strong&gt;(Module m);</source>
          <target state="translated">void &lt;strong id=&quot;inlineScanModule&quot;&gt;inlineScanModule&lt;/strong&gt; (모듈 m);</target>
        </trans-unit>
        <trans-unit id="1da9107346f062c196c7aa5d4959b8c2364990c3" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;insertFinallyBlockCalls&quot;&gt;insertFinallyBlockCalls&lt;/strong&gt;(block* startblock);</source>
          <target state="translated">void &lt;strong id=&quot;insertFinallyBlockCalls&quot;&gt;insertFinallyBlockCalls&lt;/strong&gt; (block * startblock);</target>
        </trans-unit>
        <trans-unit id="6be21c922e7b6c86841e73a23bf50ca37f9c08a8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;insertFinallyBlockGotos&quot;&gt;insertFinallyBlockGotos&lt;/strong&gt;(block* startblock);</source>
          <target state="translated">void &lt;strong id=&quot;insertFinallyBlockGotos&quot;&gt;insertFinallyBlockGotos&lt;/strong&gt; (블록 * 시작 블록);</target>
        </trans-unit>
        <trans-unit id="36965fa919a2864bc8bec05cd779eb5264b82f7a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;insertInPlace&quot;&gt;insertInPlace&lt;/strong&gt;(T, U...)(ref T[] array, size_t pos, U stuff)</source>
          <target state="translated">void &lt;strong id=&quot;insertInPlace&quot;&gt;insertInPlace&lt;/strong&gt; (T, U ...) (ref T [] 배열, size_t pos, U stuff)</target>
        </trans-unit>
        <trans-unit id="d99e5ec7907aa670da7d93532c8a9cab1225b684" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;insertLabel&quot;&gt;insertLabel&lt;/strong&gt;(Statement s, Label* label);</source>
          <target state="translated">void &lt;strong id=&quot;insertLabel&quot;&gt;insertLabel&lt;/strong&gt; (명세서, 레이블 * 레이블);</target>
        </trans-unit>
        <trans-unit id="98f531262c5b92cd76b41954653b0d189938e1b6" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;inverseFft&quot;&gt;inverseFft&lt;/strong&gt;(Ret, R)(R range, Ret buf);</source>
          <target state="translated">void &lt;strong id=&quot;inverseFft&quot;&gt;inverseFft&lt;/strong&gt; (Ret, R) (R 범위, Ret buf);</target>
        </trans-unit>
        <trans-unit id="c5669b58a0dd80bb3589ded19d84a213de28916d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;kill&quot;&gt;kill&lt;/strong&gt;(Pid pid);</source>
          <target state="translated">void &lt;strong id=&quot;kill&quot;&gt;kill&lt;/strong&gt; (Pid pid);</target>
        </trans-unit>
        <trans-unit id="0311664bedf71f450e976e4324fc0c509921219a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;kill&quot;&gt;kill&lt;/strong&gt;(Pid pid, int codeOrSignal);</source>
          <target state="translated">void &lt;strong id=&quot;kill&quot;&gt;kill&lt;/strong&gt; (Pid pid, int codeOrSignal);</target>
        </trans-unit>
        <trans-unit id="1ef3f2c20e173f9e2523292ad9db1dc8a7befa7c" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;largestPartialIntersection&quot;&gt;largestPartialIntersection&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, RangeOfRanges, Range)(RangeOfRanges ror, Range tgt, SortOutput sorted = No.sortOutput);</source>
          <target state="translated">void &lt;strong id=&quot;largestPartialIntersection&quot;&gt;maximumPartialIntersection&lt;/strong&gt; (별칭 = = a &amp;lt;b &quot;, RangeOfRanges, Range) (RangeOfRanges ror, Range tgt, SortOutput sorted = No.sortOutput);</target>
        </trans-unit>
        <trans-unit id="613a1016d818ef8348431d525c9d4e3118ba0560" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;largestPartialIntersectionWeighted&quot;&gt;largestPartialIntersectionWeighted&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, RangeOfRanges, Range, WeightsAA)(RangeOfRanges ror, Range tgt, WeightsAA weights, SortOutput sorted = No.sortOutput);</source>
          <target state="translated">void &lt;strong id=&quot;largestPartialIntersectionWeighted&quot;&gt;biggestPartialIntersectionWeighted&lt;/strong&gt; (별칭 = &quot;a &amp;lt;b&quot;, RangeOfRanges, Range, WeightsAA) (RangeOfRanges ror, Range tgt, WeightsAA weights, SortOutput sorted = No.sortOutput);</target>
        </trans-unit>
        <trans-unit id="1d841fcf14f54dea9266b90385ae494c40dff6af" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;lock&quot;&gt;lock&lt;/strong&gt;(LockType lockType = LockType.readWrite, ulong start = 0, ulong length = 0);</source>
          <target state="translated">무효 &lt;strong id=&quot;lock&quot;&gt;잠금&lt;/strong&gt; (LockType lockType = LockType.readWrite, ulong 시작 = 0, ulong 길이 = 0);</target>
        </trans-unit>
        <trans-unit id="9f352d55e9a201ebf4cdaff9595dec357a797865" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(T)(const LogLevel ll, lazy T args, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__);</source>
          <target state="translated">void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt; (T) (const LogLevel ll, lazy T args, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__);</target>
        </trans-unit>
        <trans-unit id="f279311d71e7c9aaa029152702820e2a8d20e999" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(T)(lazy T arg, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__);</source>
          <target state="translated">무효 &lt;strong id=&quot;log&quot;&gt;로그&lt;/strong&gt; (T) (lazy T arg, int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__);</target>
        </trans-unit>
        <trans-unit id="e956c5833f0386d919a782f1c99ee74e2b8069e7" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(T)(lazy bool condition, lazy T args, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__);</source>
          <target state="translated">무효 &lt;strong id=&quot;log&quot;&gt;로그&lt;/strong&gt; (T) (게으른 부울 조건, 게으른 T args, int 라인 = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__);</target>
        </trans-unit>
        <trans-unit id="7dc7ea37bea05728357f6fd2fc2484c0a118fdf4" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(T, string moduleName = __MODULE__)(const LogLevel ll, lazy T arg, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__);</source>
          <target state="translated">void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt; (T, string moduleName = __MODULE __) (const LogLevel ll, lazy T arg, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__);</target>
        </trans-unit>
        <trans-unit id="f9e3728f3c44eba35243a202cf3afb3b5f5fbb56" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(T, string moduleName = __MODULE__)(const LogLevel ll, lazy bool condition, lazy T arg, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__);</source>
          <target state="translated">void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt; (T, string moduleName = __MODULE __) (const LogLevel ll, lazy bool condition, lazy T arg, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__);</target>
        </trans-unit>
        <trans-unit id="332dbda4dc1ee4fc075e4f31d03c46bbbbb55a4f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(T, string moduleName = __MODULE__)(const LogLevel ll, lazy bool condition, lazy T args, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__);</source>
          <target state="translated">void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt; (T, string moduleName = __MODULE __) (const LogLevel ll, lazy bool condition, lazy T args, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__);</target>
        </trans-unit>
        <trans-unit id="dd309c3097c8fcaf7c426a28087ff054edd44404" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(T, string moduleName = __MODULE__)(lazy bool condition, lazy T arg, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__);</source>
          <target state="translated">void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt; (T, string moduleName = __MODULE __) (lazy bool condition, lazy T arg, int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__);</target>
        </trans-unit>
        <trans-unit id="8d6c4f6be00e6e76018db948c2e973bbf1cd1d67" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(const LogLevel ll, lazy A args)</source>
          <target state="translated">무효 &lt;strong id=&quot;log&quot;&gt;로그&lt;/strong&gt; (int 줄 = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (const LogLevel ll, lazy A args)</target>
        </trans-unit>
        <trans-unit id="8b7ce2f1c769ac880f4e23263d1aa1bcd78a2ed7" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(const LogLevel ll, lazy bool condition, lazy A args)</source>
          <target state="translated">무효 &lt;strong id=&quot;log&quot;&gt;로그&lt;/strong&gt; (int 줄 = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (const LogLevel ll, 게으른 부울 상태, 게으른 A args)</target>
        </trans-unit>
        <trans-unit id="9f026970eee5165a6d1fd4fe5d7a4d2910898e09" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args)</source>
          <target state="translated">무효 &lt;strong id=&quot;log&quot;&gt;로그&lt;/strong&gt; (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy A args)</target>
        </trans-unit>
        <trans-unit id="0b00e70c830a48a7b68c404c2933bcc61f8b8bb8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy A args)</source>
          <target state="translated">무효 &lt;strong id=&quot;log&quot;&gt;로그&lt;/strong&gt; (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy bool condition, lazy A args)</target>
        </trans-unit>
        <trans-unit id="658b6043e3301dd87ccafcb8d40ec47d9de98247" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;logImpl&quot;&gt;logImpl&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args)</source>
          <target state="translated">void &lt;strong id=&quot;logImpl&quot;&gt;logImpl&lt;/strong&gt; (int 줄 = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy A args)</target>
        </trans-unit>
        <trans-unit id="d54a526efb51727ff21bf96a1c436d2b68bc73a0" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;logImpl&quot;&gt;logImpl&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy A args);</source>
          <target state="translated">void &lt;strong id=&quot;logImpl&quot;&gt;logImpl&lt;/strong&gt; (int 줄 = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (게으른 부울 상태, 게으른 A args);</target>
        </trans-unit>
        <trans-unit id="db9c094e60b1c7fb07ea34b295d2c325480fa455" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;logImplf&quot;&gt;logImplf&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">void &lt;strong id=&quot;logImplf&quot;&gt;logImplf&lt;/strong&gt; (int 줄 = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (게으른 부울 상태, 게으른 문자열 메시지, 게으른 A args);</target>
        </trans-unit>
        <trans-unit id="525cdfb8d04fa93d6b67cc896e17f28ebdeb395e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;logImplf&quot;&gt;logImplf&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">void &lt;strong id=&quot;logImplf&quot;&gt;logImplf&lt;/strong&gt; (int 줄 = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy string msg, lazy A args);</target>
        </trans-unit>
        <trans-unit id="13f64a98b7bac16469f3ea9a566a9bb5fc1a87db" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;logf&quot;&gt;logf&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(const LogLevel ll, lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">void &lt;strong id=&quot;logf&quot;&gt;logf&lt;/strong&gt; (int 줄 = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) ;</target>
        </trans-unit>
        <trans-unit id="befc8f7c47fb29ec6e2815ca95113392e66dddc2" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;logf&quot;&gt;logf&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(const LogLevel ll, lazy string msg, lazy A args);</source>
          <target state="translated">void &lt;strong id=&quot;logf&quot;&gt;logf&lt;/strong&gt; (int 줄 = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (const LogLevel ll, 게으른 문자열 msg, lazy A args);</target>
        </trans-unit>
        <trans-unit id="5d503f5c419ddae345403dff743b0d1fb3498135" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;logf&quot;&gt;logf&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">void &lt;strong id=&quot;logf&quot;&gt;logf&lt;/strong&gt; (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (게으른 부울 상태, 게으른 문자열 메시지, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="1028b49262b45371ffee539a70573c98ed602b4e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;logf&quot;&gt;logf&lt;/strong&gt;(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">void &lt;strong id=&quot;logf&quot;&gt;logf&lt;/strong&gt; (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy string msg, lazy A args);</target>
        </trans-unit>
        <trans-unit id="3c07004c9257e9b3727976f64a7e7bf18c94604f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;mailTo&quot;&gt;mailTo&lt;/strong&gt;()(const(char)[][] recipients...);</source>
          <target state="translated">void &lt;strong id=&quot;mailTo&quot;&gt;mailTo&lt;/strong&gt; () (const (char) [] [] 수신자 ...);</target>
        </trans-unit>
        <trans-unit id="ae2f24545c5a670c3c45e571f7dfc0eec873ff8a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;makeIndex&quot;&gt;makeIndex&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, SwapStrategy ss = SwapStrategy.unstable, Range, RangeIndex)(Range r, RangeIndex index)</source>
          <target state="translated">void &lt;strong id=&quot;makeIndex&quot;&gt;makeIndex&lt;/strong&gt; (별칭 = &quot;a &amp;lt;b&quot;, SwapStrategy ss = SwapStrategy.unstable, Range, RangeIndex) (범위 r, RangeIndex 인덱스)</target>
        </trans-unit>
        <trans-unit id="95add738c3861328e7a23098584495c2beed0ead" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;mangleToFuncSignature&quot;&gt;mangleToFuncSignature&lt;/strong&gt;(ref OutBuffer buf, FuncDeclaration fd);</source>
          <target state="translated">void &lt;strong id=&quot;mangleToFuncSignature&quot;&gt;mangleToFuncSignature&lt;/strong&gt; (OutBuffer buf, FuncDeclaration fd 참조);</target>
        </trans-unit>
        <trans-unit id="899a1c860b4bb0d2360274cd7425a91a4a72dd5b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;minimize&quot;&gt;minimize&lt;/strong&gt;();</source>
          <target state="translated">무효화 &lt;strong id=&quot;minimize&quot;&gt;최소화&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0ec740b5ed15bbb9300cf2ce82a88552c5499b8f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;mkdir&quot;&gt;mkdir&lt;/strong&gt;(R)(R pathname)</source>
          <target state="translated">void &lt;strong id=&quot;mkdir&quot;&gt;mkdir&lt;/strong&gt; (R) (R 경로명)</target>
        </trans-unit>
        <trans-unit id="86e48f78ed5775c565f5722cdc40eaa1f42c9be1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;mkdir&quot;&gt;mkdir&lt;/strong&gt;(R)(auto ref R pathname)</source>
          <target state="translated">void &lt;strong id=&quot;mkdir&quot;&gt;mkdir&lt;/strong&gt; (R) (자동 참조 R 경로 이름)</target>
        </trans-unit>
        <trans-unit id="6dda99189be4539fad00a6e5365b2c07adc6ed27" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;modifiersApply&quot;&gt;modifiersApply&lt;/strong&gt;(const TypeFunction tf, void delegate(string) dg);</source>
          <target state="translated">void &lt;strong id=&quot;modifiersApply&quot;&gt;modifiersApply&lt;/strong&gt; (const TypeFunction tf, void delegate (string) dg);</target>
        </trans-unit>
        <trans-unit id="b7a5619101d93f6060efa7aa9d73219127aa37bf" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;modifyReturns&quot;&gt;modifyReturns&lt;/strong&gt;(Scope* sc, Type tret);</source>
          <target state="translated">void &lt;strong id=&quot;modifyReturns&quot;&gt;modifyReturns&lt;/strong&gt; (Scope * sc, 유형 tret);</target>
        </trans-unit>
        <trans-unit id="23f39830af61fabad3a74e520312db9ee55fc8c6" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;moduleToBuffer&quot;&gt;moduleToBuffer&lt;/strong&gt;(OutBuffer* buf, Module m);</source>
          <target state="translated">void &lt;strong id=&quot;moduleToBuffer&quot;&gt;moduleToBuffer&lt;/strong&gt; (OutBuffer * buf, 모듈 m);</target>
        </trans-unit>
        <trans-unit id="77846a58e27068e4314da7155a9f4f8325b53bf0" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;move&quot;&gt;move&lt;/strong&gt;(T)(ref T source, ref T target);</source>
          <target state="translated">무효 &lt;strong id=&quot;move&quot;&gt;이동&lt;/strong&gt; (T) (참조 T 소스, 참조 T 목표);</target>
        </trans-unit>
        <trans-unit id="d2f6f4bfba23829993d3c3de0947ef8c11adff0a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;notMaybeScope&quot;&gt;notMaybeScope&lt;/strong&gt;(VarDeclaration v);</source>
          <target state="translated">void &lt;strong id=&quot;notMaybeScope&quot;&gt;notMaybeScope&lt;/strong&gt; (VarDeclaration v);</target>
        </trans-unit>
        <trans-unit id="7409536015357f0092769e146b86243680633ca9" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;notify&quot;&gt;notify&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;notify&quot;&gt;통지&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="399192a66a87052c9f8df5f94c05bcfedd36e11b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;notifyAll&quot;&gt;notifyAll&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;notifyAll&quot;&gt;notifyAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0f35a68463606b8e0b0f9daccc75bfd6018e8f98" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;nullify&quot;&gt;nullify&lt;/strong&gt;()();</source>
          <target state="translated">무효 &lt;strong id=&quot;nullify&quot;&gt;무효화&lt;/strong&gt; () ();</target>
        </trans-unit>
        <trans-unit id="49457146687df446d5015544dc2819d92c47b648" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;()(T value)</source>
          <target state="translated">무효 &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; () (T 값)</target>
        </trans-unit>
        <trans-unit id="4786064775a1e0fd96e19ff7f12143edd399df1b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;()(T value);</source>
          <target state="translated">무효 &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; () (T 값);</target>
        </trans-unit>
        <trans-unit id="0526b002bbbf1261a793a692cd247f413a2bf266" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(T rhs);</source>
          <target state="translated">무효 &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; (T rhs);</target>
        </trans-unit>
        <trans-unit id="1a491ca17e32eb84f77cd75669f9c57b9b63c429" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(U)(U rhs)</source>
          <target state="translated">무효 &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; (U) (U rhs)</target>
        </trans-unit>
        <trans-unit id="47eb6c56f0538bec76dc7fa94f0c2ad3a54fcb40" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(U)(Unique!U u)</source>
          <target state="translated">무효 &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; (U) (Unique! U u)</target>
        </trans-unit>
        <trans-unit id="1e35453ade469142af1b1637d897821c4efc3c1a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(typeof(null) rhs);</source>
          <target state="translated">무효 &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; (typeof (null) rhs);</target>
        </trans-unit>
        <trans-unit id="e214019253f2986d6b60dbcd1e6ef35d11b2aec5" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(typeof(this) rhs);</source>
          <target state="translated">무효 &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; (typeof (this) rhs);</target>
        </trans-unit>
        <trans-unit id="6333f37b1af1762cc0e85ddd0971b2caae7da270" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opDispatch&quot;&gt;opDispatch&lt;/strong&gt;(string fn, Args...)(Args args)</source>
          <target state="translated">void &lt;strong id=&quot;opDispatch&quot;&gt;opDispatch&lt;/strong&gt; (문자열 fn, Args ...) (Args args)</target>
        </trans-unit>
        <trans-unit id="812abb06513958d05523a3bd6f54fa72f8b8abb1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt;(E val, size_t index);</source>
          <target state="translated">void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt; ( &lt;strong id=&quot;opIndexAssign&quot;&gt;Eval&lt;/strong&gt; , size_t 인덱스);</target>
        </trans-unit>
        <trans-unit id="632252f70dc4b21bd6c246d1a352a80160a06804" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt;(E val, size_t n);</source>
          <target state="translated">무효 &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt; ( &lt;strong id=&quot;opIndexAssign&quot;&gt;Eval&lt;/strong&gt; , size_t n);</target>
        </trans-unit>
        <trans-unit id="fd6297e267ea4cfb41dedc309176ec78f5a3b905" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt;(ElementType v, size_t n);</source>
          <target state="translated">void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt; (ElementType v, size_t n);</target>
        </trans-unit>
        <trans-unit id="8fba32483d7303c0888a09b5d7fd667673a94d68" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt;(ElementType val, size_t n);</source>
          <target state="translated">void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt; (ElementType 값, size_t n);</target>
        </trans-unit>
        <trans-unit id="81a435ef2af84721ebae1d2597fbd17729c763f0" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt;(ElementType!R val, size_t n);</source>
          <target state="translated">void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt; (ElementType! &lt;strong id=&quot;opIndexAssign&quot;&gt;Rval&lt;/strong&gt; , size_t n);</target>
        </trans-unit>
        <trans-unit id="00bbcadb42df407ed39133a95aae09e9933e3d66" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt;(T value, size_t i);</source>
          <target state="translated">void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt; (T 값, size_t i);</target>
        </trans-unit>
        <trans-unit id="7706a09492b72569a0b853d07cf21b6ea932434c" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt;(bool value, size_t i);</source>
          <target state="translated">void &lt;strong id=&quot;opIndexAssign&quot;&gt;opIndexAssign&lt;/strong&gt; (bool 값, size_t i);</target>
        </trans-unit>
        <trans-unit id="88808ee721e71c5a817a250e76fa2612af9b5543" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opIndexOpAssign&quot;&gt;opIndexOpAssign&lt;/strong&gt;(string op)(bool value, size_t i);</source>
          <target state="translated">void &lt;strong id=&quot;opIndexOpAssign&quot;&gt;opIndexOpAssign&lt;/strong&gt; (문자열 op) (bool 값, size_t i);</target>
        </trans-unit>
        <trans-unit id="bf127fd1990c27934f3c8a469e1a165c1a12ac83" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt;(string op : &quot;~&quot;, U)(U rhs)</source>
          <target state="translated">void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt; (문자열 op : &quot;~&quot;, U) (U rhs)</target>
        </trans-unit>
        <trans-unit id="f47c855ba3b34376a12c9a3cb2dc81fea52e133d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt;(string op, Stuff)(auto ref Stuff stuff)</source>
          <target state="translated">void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt; (문자열 op, 물건) (자동 참조 물건)</target>
        </trans-unit>
        <trans-unit id="1ab0a16090086879f9f78c8be81dc5f3faf296ff" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opSliceAssign&quot;&gt;opSliceAssign&lt;/strong&gt;(T value);</source>
          <target state="translated">무효 &lt;strong id=&quot;opSliceAssign&quot;&gt;opSliceAssign&lt;/strong&gt; (T 값);</target>
        </trans-unit>
        <trans-unit id="12a65334b4a3e38eddbed62b6c51e667b9cc7219" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opSliceAssign&quot;&gt;opSliceAssign&lt;/strong&gt;(T value, size_t i, size_t j);</source>
          <target state="translated">void &lt;strong id=&quot;opSliceAssign&quot;&gt;opSliceAssign&lt;/strong&gt; (T 값, size_t i, size_t j);</target>
        </trans-unit>
        <trans-unit id="596321003faa6b599f47bc80ec030f95e6fdd7e7" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opSliceAssign&quot;&gt;opSliceAssign&lt;/strong&gt;(bool val);</source>
          <target state="translated">void &lt;strong id=&quot;opSliceAssign&quot;&gt;opSliceAssign&lt;/strong&gt; (bool val);</target>
        </trans-unit>
        <trans-unit id="e4b3a0563ee7a9336229eff2f411e9c6280d137a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opSliceAssign&quot;&gt;opSliceAssign&lt;/strong&gt;(bool val, size_t start, size_t end);</source>
          <target state="translated">void &lt;strong id=&quot;opSliceAssign&quot;&gt;opSliceAssign&lt;/strong&gt; (bool val, size_t start, size_t end);</target>
        </trans-unit>
        <trans-unit id="d8730b38b69b668c59212b86841c49489c9d7b31" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opSliceOpAssign&quot;&gt;opSliceOpAssign&lt;/strong&gt;(string op)(T value);</source>
          <target state="translated">void &lt;strong id=&quot;opSliceOpAssign&quot;&gt;opSliceOpAssign&lt;/strong&gt; (문자열 op) (T 값);</target>
        </trans-unit>
        <trans-unit id="1dd905bdbddf93075c20281982f605994f0807a2" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opSliceOpAssign&quot;&gt;opSliceOpAssign&lt;/strong&gt;(string op)(T value, size_t i, size_t j);</source>
          <target state="translated">void &lt;strong id=&quot;opSliceOpAssign&quot;&gt;opSliceOpAssign&lt;/strong&gt; (문자열 op) (T 값, size_t i, size_t j);</target>
        </trans-unit>
        <trans-unit id="6c56fbf745dd292e6c3dcbd8a14eecac4cb579ce" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opSliceUnary&quot;&gt;opSliceUnary&lt;/strong&gt;(string op)()</source>
          <target state="translated">void &lt;strong id=&quot;opSliceUnary&quot;&gt;opSliceUnary&lt;/strong&gt; (문자열 op) ()</target>
        </trans-unit>
        <trans-unit id="20dcdfb15276b2fe33668a1e360c7842c4f90de8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;opSliceUnary&quot;&gt;opSliceUnary&lt;/strong&gt;(string op)(size_t i, size_t j)</source>
          <target state="translated">void &lt;strong id=&quot;opSliceUnary&quot;&gt;opSliceUnary&lt;/strong&gt; (문자열 op) (size_t i, size_t j)</target>
        </trans-unit>
        <trans-unit id="b09a1f45a97511eb53b0e534e45f2a24f64a78e6" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;parse&quot;&gt;파싱&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="bd78ba89c55795d0072d9eca426eaf74f764c783" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;parseConfFile&quot;&gt;parseConfFile&lt;/strong&gt;(ref StringTable environment, const(char)[] filename, const(char)[] path, const(ubyte)[] buffer, const(Strings)* sections);</source>
          <target state="translated">void &lt;strong id=&quot;parseConfFile&quot;&gt;parseConfFile&lt;/strong&gt; (ref StringTable 환경, const (char) [] 파일 이름, const (char) [] 경로, const (ubyte) [] 버퍼, const (Strings) * 섹션);</target>
        </trans-unit>
        <trans-unit id="627d209bcffbe9c21193542c583beb56a44982e9" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;parseSections&quot;&gt;parseSections&lt;/strong&gt;(const(char)* comment);</source>
          <target state="translated">void &lt;strong id=&quot;parseSections&quot;&gt;parseSections&lt;/strong&gt; (const (char) * 주석);</target>
        </trans-unit>
        <trans-unit id="b2af155eca4695d10ffc473419cafb2ca3785b15" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;partialSort&quot;&gt;partialSort&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, SwapStrategy ss = SwapStrategy.unstable, Range)(Range r, size_t n)</source>
          <target state="translated">void &lt;strong id=&quot;partialSort&quot;&gt;partialSort&lt;/strong&gt; (별칭 = &quot;a &amp;lt;b&quot;, SwapStrategy ss = SwapStrategy.unstable, Range) (범위 r, size_t n)</target>
        </trans-unit>
        <trans-unit id="659dcd34ebaedf2036cc6b5a6327e0f5804f7f95" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;partialSort&quot;&gt;partialSort&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, SwapStrategy ss = SwapStrategy.unstable, Range1, Range2)(Range1 r1, Range2 r2)</source>
          <target state="translated">void &lt;strong id=&quot;partialSort&quot;&gt;partialSort&lt;/strong&gt; (별칭 = &quot;a &amp;lt;b&quot;, SwapStrategy ss = SwapStrategy.unstable, Range1, Range2) (Range1 r1, Range2 r2)</target>
        </trans-unit>
        <trans-unit id="8dff98cbec7d9d3af2e6f23e96d8869b2af163ae" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;pause&quot;&gt;pause&lt;/strong&gt;(bool sendingPaused, bool receivingPaused);</source>
          <target state="translated">void &lt;strong id=&quot;pause&quot;&gt;pause&lt;/strong&gt; (bool sentPaused, bool receivingPaused);</target>
        </trans-unit>
        <trans-unit id="2d54180b2ff5b53e7433b76a84535e3d2f874706" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;popBack&quot;&gt;popBack&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;popBack&quot;&gt;popBack&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ee606b2870841c46300cd46a44d6b54a2dd6eec1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;popBackExactly&quot;&gt;popBackExactly&lt;/strong&gt;(Range)(ref Range r, size_t n)</source>
          <target state="translated">void &lt;strong id=&quot;popBackExactly&quot;&gt;popBackExactly&lt;/strong&gt; (범위) (참조 범위 r, size_t n)</target>
        </trans-unit>
        <trans-unit id="4b2f4d7fcf7062666a416c2eb7c3bda73a001390" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;popFirstOf&quot;&gt;popFirstOf&lt;/strong&gt;(ref Range r);</source>
          <target state="translated">void &lt;strong id=&quot;popFirstOf&quot;&gt;popFirstOf&lt;/strong&gt; (참조 범위 r);</target>
        </trans-unit>
        <trans-unit id="ced4ee0c996aed63187986ed597f34ea68da6990" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;popFront&quot;&gt;popFront&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;popFront&quot;&gt;popFront&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="4d493b1ae6c3cdeb0b518691bfa4b73dee648d04" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;popFrontExactly&quot;&gt;popFrontExactly&lt;/strong&gt;(Range)(ref Range r, size_t n)</source>
          <target state="translated">void &lt;strong id=&quot;popFrontExactly&quot;&gt;popFrontExactly&lt;/strong&gt; (범위) (참조 범위 r, size_t n)</target>
        </trans-unit>
        <trans-unit id="1e0972cf30a0db16b5ab87b42bdd764d852a82af" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;popLastOf&quot;&gt;popLastOf&lt;/strong&gt;(ref Range r);</source>
          <target state="translated">void &lt;strong id=&quot;popLastOf&quot;&gt;popLastOf&lt;/strong&gt; (참조 범위 r);</target>
        </trans-unit>
        <trans-unit id="1acb4d7cf968bfc2791abe3316a43124703e30fe" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;pop_back&quot;&gt;pop_back&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;pop_back&quot;&gt;팝 _ 백&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="1764ccc637f61f8997e0fda2c4e8de7c05497c3a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;prefetch&quot;&gt;prefetch&lt;/strong&gt;(bool writeFetch, ubyte locality)(const(void)* address);</source>
          <target state="translated">무효 &lt;strong id=&quot;prefetch&quot;&gt;프리 페치&lt;/strong&gt; (bool writeFetch, ubyte locality) (const (void) * address);</target>
        </trans-unit>
        <trans-unit id="a035b089dc5e8203e85a9e8d0e829e7bb478fd73" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;prepare&quot;&gt;prepare&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">무효 &lt;strong id=&quot;prepare&quot;&gt;준비&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="7473cb63e043fdfdc27d39abeabfc7fc76d19756" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;printAST&quot;&gt;printAST&lt;/strong&gt;(Expression e, int indent = 0);</source>
          <target state="translated">void &lt;strong id=&quot;printAST&quot;&gt;printAST&lt;/strong&gt; (식 e, int 들여 쓰기 = 0);</target>
        </trans-unit>
        <trans-unit id="d309564eb4d8498d6b03c00a70e77126b78548e8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;printInternalFailure&quot;&gt;printInternalFailure&lt;/strong&gt;(FILE* stream);</source>
          <target state="translated">void &lt;strong id=&quot;printInternalFailure&quot;&gt;printInternalFailure&lt;/strong&gt; (FILE * 스트림);</target>
        </trans-unit>
        <trans-unit id="477ee4beeb2cd07e29305b63acb245f95cd47740" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;prioritySend&quot;&gt;prioritySend&lt;/strong&gt;(T...)(Tid tid, T vals);</source>
          <target state="translated">void &lt;strong id=&quot;prioritySend&quot;&gt;prioritySend&lt;/strong&gt; (T ...) (Tid tid, T vals);</target>
        </trans-unit>
        <trans-unit id="712c1e76e017d926b56a6920fed285d3c7517cc5" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;profilegc_setlogfilename&quot;&gt;profilegc_setlogfilename&lt;/strong&gt;(string name);</source>
          <target state="translated">무효 &lt;strong id=&quot;profilegc_setlogfilename&quot;&gt;프로파일 gc_setlogfilename&lt;/strong&gt; (문자열 이름);</target>
        </trans-unit>
        <trans-unit id="224fd72cb98b35b82d97e65f19705b79dd484e19" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;purityLevel&quot;&gt;purityLevel&lt;/strong&gt;();</source>
          <target state="translated">공극 &lt;strong id=&quot;purityLevel&quot;&gt;순도 수준&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="43d58d3b0f3a8f8f17945bddb4585eff524f67ff" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;push&quot;&gt;push&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;push&quot;&gt;푸시&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="71d57348cf5a3e083b3b830ccaafb0823103d639" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;(E);</source>
          <target state="translated">보이드 &lt;strong id=&quot;put&quot;&gt;풋&lt;/strong&gt; (E);</target>
        </trans-unit>
        <trans-unit id="62f7385dd2721d5d910e3909d2730677e0dce101" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;(R, E)(ref R r, E e);</source>
          <target state="translated">보이드 &lt;strong id=&quot;put&quot;&gt;풋&lt;/strong&gt; (R, E) (ref R r, E e);</target>
        </trans-unit>
        <trans-unit id="e897f4dfdb7d94568437695404e30cc525f0ab99" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;(Range)(Range items)</source>
          <target state="translated">무효 &lt;strong id=&quot;put&quot;&gt;퍼팅&lt;/strong&gt; (범위) (범위 항목)</target>
        </trans-unit>
        <trans-unit id="185186c7fcf98f32fde9b522ce226b767f97b37f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;(U)(U item)</source>
          <target state="translated">무효 &lt;strong id=&quot;put&quot;&gt;퍼트&lt;/strong&gt; (U)</target>
        </trans-unit>
        <trans-unit id="7279292270ffe4c70a504f164d0bbefefbe1dfe4" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;(alias fun, Args...)(Task!(fun, Args)* task)</source>
          <target state="translated">void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt; (별칭 재미, Args ...) (작업! (fun, Args) * 작업)</target>
        </trans-unit>
        <trans-unit id="6e6044f647e34f8e4fcb33e57f0c26ccbcacd4dd" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;(alias fun, Args...)(ref Task!(fun, Args) task)</source>
          <target state="translated">void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt; (별칭 재미, Args ...) (ref Task! (fun, Args) 작업)</target>
        </trans-unit>
        <trans-unit id="c73651adfcc6c83cee96a90cbe5fb411625b0800" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rawWrite&quot;&gt;rawWrite&lt;/strong&gt;(T)(in T[] buffer);</source>
          <target state="translated">void &lt;strong id=&quot;rawWrite&quot;&gt;rawWrite&lt;/strong&gt; (T) (T [] 버퍼);</target>
        </trans-unit>
        <trans-unit id="6191916a82a6ecbaad7e78c1a7bba4b84cbf1334" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;receive&quot;&gt;receive&lt;/strong&gt;(T...)(T ops);</source>
          <target state="translated">무효 &lt;strong id=&quot;receive&quot;&gt;수신&lt;/strong&gt; (T ...) (T ops);</target>
        </trans-unit>
        <trans-unit id="8a13963991dc763c624cf193e93a7de1fd95cda5" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;register&quot;&gt;register&lt;/strong&gt;(Klass : EncodingScheme)();</source>
          <target state="translated">무효 &lt;strong id=&quot;register&quot;&gt;레지스터&lt;/strong&gt; (Klass : EncodingScheme) ();</target>
        </trans-unit>
        <trans-unit id="722abc164cc5a2a2780f54ac4a3fd07757fddd6e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt;(R)(R name)</source>
          <target state="translated">무효 &lt;strong id=&quot;remove&quot;&gt;제거&lt;/strong&gt; (R) (R 이름)</target>
        </trans-unit>
        <trans-unit id="861acb35edbc4556fc216843ee53901199c9bf08" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt;(R)(auto ref R name)</source>
          <target state="translated">void &lt;strong id=&quot;remove&quot;&gt;remove&lt;/strong&gt; (R) (자동 참조 R 이름)</target>
        </trans-unit>
        <trans-unit id="3a440c6be5c424ebb39e6b5dd284ede37348d209" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;removeBack&quot;&gt;removeBack&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;removeBack&quot;&gt;removeBack&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="707325b4c2c58855657e7fa4c04b51c9a270e82d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;removeFront&quot;&gt;removeFront&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;removeFront&quot;&gt;removeFront&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9f311b09338aed4a18e218bb7d58d78b48e9561b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;removeInstance&quot;&gt;removeInstance&lt;/strong&gt;(TemplateInstance ti);</source>
          <target state="translated">void &lt;strong id=&quot;removeInstance&quot;&gt;removeInstance&lt;/strong&gt; (TemplateInstance ti);</target>
        </trans-unit>
        <trans-unit id="85a4bae4bc08ca13583106973891a9a857c58715" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rename&quot;&gt;rename&lt;/strong&gt;(RF, RT)(RF from, RT to)</source>
          <target state="translated">무효 &lt;strong id=&quot;rename&quot;&gt;이름 바꾸기&lt;/strong&gt; (RF, RT) (RF에서 RT로)</target>
        </trans-unit>
        <trans-unit id="92704e77f877a37e6caa31c8949faff6f35912b9" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rename&quot;&gt;rename&lt;/strong&gt;(RF, RT)(auto ref RF from, auto ref RT to)</source>
          <target state="translated">무효 &lt;strong id=&quot;rename&quot;&gt;이름 바꾸기&lt;/strong&gt; (RF, RT) (자동 참조 RF에서 자동 참조 RT로)</target>
        </trans-unit>
        <trans-unit id="16864b6e52478e058bcc0231dc9e07b39f9fe3f8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;replaceFront&quot;&gt;replaceFront&lt;/strong&gt;(ElementType!Store value);</source>
          <target state="translated">void &lt;strong id=&quot;replaceFront&quot;&gt;replaceFront&lt;/strong&gt; (ElementType! Store 값);</target>
        </trans-unit>
        <trans-unit id="f36bf5c4824e624ce22187959a910a9cb54762ca" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;replaceInPlace&quot;&gt;replaceInPlace&lt;/strong&gt;(T, Range)(ref T[] array, size_t from, size_t to, Range stuff)</source>
          <target state="translated">void &lt;strong id=&quot;replaceInPlace&quot;&gt;replaceInPlace&lt;/strong&gt; (T, Range) (ref T [] 배열, size_t에서 size_t에서 Range stuff)</target>
        </trans-unit>
        <trans-unit id="d0c39e2d6ba9c2ba0a5b9eae9751cc9c8f61856c" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;replaceInto&quot;&gt;replaceInto&lt;/strong&gt;(E, Sink, R1, R2)(Sink sink, E[] subject, R1 from, R2 to)</source>
          <target state="translated">void &lt;strong id=&quot;replaceInto&quot;&gt;replaceInto&lt;/strong&gt; (E, 싱크, R1, R2) (싱크 싱크, E [] 주제, R1에서 R2로)</target>
        </trans-unit>
        <trans-unit id="4782e450fff3a125252b2e68740df4055319b400" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;reportPerCallStatistics&quot;&gt;reportPerCallStatistics&lt;/strong&gt;(R)(auto ref R output);</source>
          <target state="translated">void &lt;strong id=&quot;reportPerCallStatistics&quot;&gt;reportPerCallStatistics&lt;/strong&gt; (R) (자동 참조 R 출력);</target>
        </trans-unit>
        <trans-unit id="13b09bd2e71c8468e971e069c9d4f1ed7244d7b1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;reportStatistics&quot;&gt;reportStatistics&lt;/strong&gt;(R)(auto ref R output);</source>
          <target state="translated">void &lt;strong id=&quot;reportStatistics&quot;&gt;reportStatistics&lt;/strong&gt; (R) (자동 참조 R 출력);</target>
        </trans-unit>
        <trans-unit id="0381e226914a85df658171e9ebc906de9ca9078a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;reserve&quot;&gt;reserve&lt;/strong&gt;(size_t e);</source>
          <target state="translated">무효 &lt;strong id=&quot;reserve&quot;&gt;예약&lt;/strong&gt; (size_t e);</target>
        </trans-unit>
        <trans-unit id="002e173e58d9a6c26967ed58331bd481273a4aca" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;reserve&quot;&gt;reserve&lt;/strong&gt;(size_t elements);</source>
          <target state="translated">무효 &lt;strong id=&quot;reserve&quot;&gt;예약&lt;/strong&gt; (size_t 요소);</target>
        </trans-unit>
        <trans-unit id="422b1f9874cab568ba53757d0a114b5fcfd620ad" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;reserve&quot;&gt;reserve&lt;/strong&gt;(size_t newCapacity);</source>
          <target state="translated">무효 &lt;strong id=&quot;reserve&quot;&gt;예약&lt;/strong&gt; (size_t newCapacity);</target>
        </trans-unit>
        <trans-unit id="772397c8e032906c4ca453f12e81510304c22431" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;resolve&quot;&gt;resolve&lt;/strong&gt;(Type mt, ref const Loc loc, Scope* sc, Expression* pe, Type* pt, Dsymbol* ps, bool intypeid = false);</source>
          <target state="translated">무효 &lt;strong id=&quot;resolve&quot;&gt;해결&lt;/strong&gt; (Type mt, ref const Loc loc, Scope * sc, Expression * pe, Type * pt, Dsymbol * ps, bool intypeid = false);</target>
        </trans-unit>
        <trans-unit id="2716e02d0f645335df90fb2cbb47a2acb3765e26" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;restoreEnvVars&quot;&gt;restoreEnvVars&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;restoreEnvVars&quot;&gt;restoreEnvVars&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="45ab12c5b77a321fa323bf494719a120a91fa201" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;reverse&quot;&gt;reverse&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;reverse&quot;&gt;역&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="be638c6c1da8cd0db20a359c5dd0a3f7a07bb7b4" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rmdir&quot;&gt;rmdir&lt;/strong&gt;(R)(R pathname)</source>
          <target state="translated">무효 &lt;strong id=&quot;rmdir&quot;&gt;rmdir&lt;/strong&gt; (R) (R 경로 이름)</target>
        </trans-unit>
        <trans-unit id="c0cc33d895c51673fe1ee040233dcd7a2c0d8730" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rmdir&quot;&gt;rmdir&lt;/strong&gt;(R)(auto ref R pathname)</source>
          <target state="translated">무효 &lt;strong id=&quot;rmdir&quot;&gt;rmdir&lt;/strong&gt; (R) (자동 참조 R 경로 이름)</target>
        </trans-unit>
        <trans-unit id="238bf9ad4e34a93bfda255d720cb2eacf4309be2" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rmdirRecurse&quot;&gt;rmdirRecurse&lt;/strong&gt;(DirEntry de);</source>
          <target state="translated">void &lt;strong id=&quot;rmdirRecurse&quot;&gt;rmdirRecurse&lt;/strong&gt; (DirEntry de);</target>
        </trans-unit>
        <trans-unit id="7b71102f5dacffc2804ca038ec988c660dc55423" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rmdirRecurse&quot;&gt;rmdirRecurse&lt;/strong&gt;(ref DirEntry de);</source>
          <target state="translated">void &lt;strong id=&quot;rmdirRecurse&quot;&gt;rmdirRecurse&lt;/strong&gt; (참조 DirEntry de);</target>
        </trans-unit>
        <trans-unit id="f83822c1af82f65237925c3c4fc0dd90c5f0599b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rmdirRecurse&quot;&gt;rmdirRecurse&lt;/strong&gt;(scope const(char)[] pathname);</source>
          <target state="translated">void &lt;strong id=&quot;rmdirRecurse&quot;&gt;rmdirRecurse&lt;/strong&gt; (범위 const (char) [] 경로명);</target>
        </trans-unit>
        <trans-unit id="b57fe8bfcd6789e4e719bf668396add1e16d8fd8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rt_moduleCtor&quot;&gt;rt_moduleCtor&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;rt_moduleCtor&quot;&gt;rt_moduleCtor&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e475076d3e6c6f686c36482472539a95dd36e926" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rt_moduleDtor&quot;&gt;rt_moduleDtor&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;rt_moduleDtor&quot;&gt;rt_moduleDtor&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="eb95d2310c8f3688f1aceec8923d71b35bc5f103" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rt_moduleTlsCtor&quot;&gt;rt_moduleTlsCtor&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;rt_moduleTlsCtor&quot;&gt;rt_moduleTlsCtor&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="7ddfe818c11157f06606b1aabe2a131ec827a699" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rt_moduleTlsDtor&quot;&gt;rt_moduleTlsDtor&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;rt_moduleTlsDtor&quot;&gt;rt_moduleTlsDtor&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="798eabe928bb6605f70819a0be8d3cfdc5080a71" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rt_setCollectHandler&quot;&gt;rt_setCollectHandler&lt;/strong&gt;(CollectHandler h);</source>
          <target state="translated">void &lt;strong id=&quot;rt_setCollectHandler&quot;&gt;rt_setCollectHandler&lt;/strong&gt; (CollectHandler h);</target>
        </trans-unit>
        <trans-unit id="7fea34aa16e0479694067bf44876ffdde1d8b326" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;rt_setTraceHandler&quot;&gt;rt_setTraceHandler&lt;/strong&gt;(TraceHandler h);</source>
          <target state="translated">void &lt;strong id=&quot;rt_setTraceHandler&quot;&gt;rt_setTraceHandler&lt;/strong&gt; (TraceHandler h);</target>
        </trans-unit>
        <trans-unit id="9decce263d5a7843681c1620f0439508571a9070" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;runModuleFuncs&quot;&gt;runModuleFuncs&lt;/strong&gt;(alias getfp)(const(immutable(ModuleInfo)*)[] modules);</source>
          <target state="translated">void &lt;strong id=&quot;runModuleFuncs&quot;&gt;runModuleFuncs&lt;/strong&gt; (별칭 getfp) (const (immutable (ModuleInfo) *) [] 모듈);</target>
        </trans-unit>
        <trans-unit id="841d6560e2685b9899be722e48f3e20a6d770dd9" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;scanElfObjModule&quot;&gt;scanElfObjModule&lt;/strong&gt;(void delegate(const(char)[] name, int pickAny) pAddSymbol, const(ubyte)[] base, const(char)* module_name, Loc loc);</source>
          <target state="translated">void &lt;strong id=&quot;scanElfObjModule&quot;&gt;scanElfObjModule&lt;/strong&gt; (void delegate (const (char) [] name, int pickAny) pAddSymbol, const (ubyte) [] base, const (char) * module_name, Loc loc);</target>
        </trans-unit>
        <trans-unit id="c1617f4e4ddbb5c339555ee5847d26fea5f851ee" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;seed&quot;&gt;seed&lt;/strong&gt;(T)(T range)</source>
          <target state="translated">보이드 &lt;strong id=&quot;seed&quot;&gt;시드&lt;/strong&gt; (T) (T 범위)</target>
        </trans-unit>
        <trans-unit id="ba59582cdb53982dea6c32a7bfd41f13182e5226" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;semantic2&quot;&gt;semantic2&lt;/strong&gt;(Dsymbol dsym, Scope* sc);</source>
          <target state="translated">무효 &lt;strong id=&quot;semantic2&quot;&gt;시맨틱 2&lt;/strong&gt; (Dsymbol dsym, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="1b1f1d2360162f5934ac132b5c06fe0f922d97e9" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;semantic3&quot;&gt;semantic3&lt;/strong&gt;(Dsymbol dsym, Scope* sc);</source>
          <target state="translated">무효 &lt;strong id=&quot;semantic3&quot;&gt;시맨틱 3&lt;/strong&gt; (Dsymbol dsym, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="db0043712955a7c4ea174d5f7c21b0b60b79093a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;semanticTypeInfo&quot;&gt;semanticTypeInfo&lt;/strong&gt;(Scope* sc, Type t);</source>
          <target state="translated">void &lt;strong id=&quot;semanticTypeInfo&quot;&gt;semanticTypeInfo&lt;/strong&gt; (Scope * sc, 타입 t);</target>
        </trans-unit>
        <trans-unit id="d99fb0c61453838fe71b257dd984c6d5f48ba9e4" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;send&quot;&gt;send&lt;/strong&gt;(T...)(Tid tid, T vals);</source>
          <target state="translated">무효 &lt;strong id=&quot;send&quot;&gt;전송&lt;/strong&gt; (T ...) (Tid tid, T vals);</target>
        </trans-unit>
        <trans-unit id="39e9b1e53d7fcab967624170778e60c4818ed74f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;set&quot;&gt;set&lt;/strong&gt;(CurlOption option, const(char)[] value);</source>
          <target state="translated">무효 &lt;strong id=&quot;set&quot;&gt;세트&lt;/strong&gt; (CurlOption 옵션, const (char) [] 값);</target>
        </trans-unit>
        <trans-unit id="82bbfc23d67993312aab92f8c42379cc486e139a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;set&quot;&gt;set&lt;/strong&gt;(CurlOption option, long value);</source>
          <target state="translated">무효 &lt;strong id=&quot;set&quot;&gt;설정&lt;/strong&gt; (CurlOption 옵션, 긴 값);</target>
        </trans-unit>
        <trans-unit id="e2392a3e693209f4e9cffb6ee7e4b0165125341f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;set&quot;&gt;set&lt;/strong&gt;(CurlOption option, void* value);</source>
          <target state="translated">무효 &lt;strong id=&quot;set&quot;&gt;설정&lt;/strong&gt; (CurlOption 옵션, void * 값);</target>
        </trans-unit>
        <trans-unit id="12d35a456ad28358c8a5f57a017a9be45c880e42" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setAttributes&quot;&gt;setAttributes&lt;/strong&gt;(R)(R name, uint attributes)</source>
          <target state="translated">void &lt;strong id=&quot;setAttributes&quot;&gt;setAttributes&lt;/strong&gt; (R) (R 이름, uint 속성)</target>
        </trans-unit>
        <trans-unit id="0b5b0ea457eee5ceb82dccaa63cea349732f57ce" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setAttributes&quot;&gt;setAttributes&lt;/strong&gt;(R)(auto ref R name, uint attributes)</source>
          <target state="translated">void &lt;strong id=&quot;setAttributes&quot;&gt;setAttributes&lt;/strong&gt; (R) (자동 참조 R 이름, uint 속성)</target>
        </trans-unit>
        <trans-unit id="96fb67934b93a8853393ea6f67341afd5b08b2b2" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setAuthentication&quot;&gt;setAuthentication&lt;/strong&gt;(const(char)[] username, const(char)[] password, const(char)[] domain = &quot;&quot;);</source>
          <target state="translated">void &lt;strong id=&quot;setAuthentication&quot;&gt;setAuthentication&lt;/strong&gt; (const (char) [] 사용자 이름, const (char) [] 암호, const (char) [] 도메인 = &quot;&quot;);</target>
        </trans-unit>
        <trans-unit id="0c8c988f1d9c5ab51e8529559bbb3f3d6f7845a8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setBounds&quot;&gt;setBounds&lt;/strong&gt;(size_t newMin, size_t newMax);</source>
          <target state="translated">무효 &lt;strong id=&quot;setBounds&quot;&gt;setBounds&lt;/strong&gt; (size_t newMin, size_t newMax);</target>
        </trans-unit>
        <trans-unit id="63ea7f55996a9c9a0541827b135c7c7ca1dfe32c" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setClosureVarOffset&quot;&gt;setClosureVarOffset&lt;/strong&gt;(FuncDeclaration fd);</source>
          <target state="translated">무효 &lt;strong id=&quot;setClosureVarOffset&quot;&gt;setClosureVarOffset&lt;/strong&gt; (FuncDeclaration fd);</target>
        </trans-unit>
        <trans-unit id="55281c016f15440f8637add90f5da7ed2dc25c51" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setCodeUnit&quot;&gt;setCodeUnit&lt;/strong&gt;(size_t i, dchar c);</source>
          <target state="translated">무효 &lt;strong id=&quot;setCodeUnit&quot;&gt;setCodeUnit&lt;/strong&gt; (size_t i, dchar c);</target>
        </trans-unit>
        <trans-unit id="03d416a872202b2e268cbd91b82e7ddfac246bd1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setCookie&quot;&gt;setCookie&lt;/strong&gt;(const(char)[] cookie);</source>
          <target state="translated">void &lt;strong id=&quot;setCookie&quot;&gt;setCookie&lt;/strong&gt; (const (char) [] 쿠키);</target>
        </trans-unit>
        <trans-unit id="d449a60bb48d7d476ddecfd4d29160cb11de3695" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setCookieJar&quot;&gt;setCookieJar&lt;/strong&gt;(const(char)[] path);</source>
          <target state="translated">void &lt;strong id=&quot;setCookieJar&quot;&gt;setCookieJar&lt;/strong&gt; (const (char) [] 경로);</target>
        </trans-unit>
        <trans-unit id="91bda042fb27293df7ee92aedab630de10cde8c6" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setMaxMailboxSize&quot;&gt;setMaxMailboxSize&lt;/strong&gt;(Tid tid, size_t messages, bool function(Tid) onCrowdingDoThis);</source>
          <target state="translated">void &lt;strong id=&quot;setMaxMailboxSize&quot;&gt;setMaxMailboxSize&lt;/strong&gt; (Tid tid, size_t 메시지, bool 함수 (Tid) onCrowdingDoThis);</target>
        </trans-unit>
        <trans-unit id="9140d82282e6219d53586ee0aca74b2172bc6731" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setPostData&quot;&gt;setPostData&lt;/strong&gt;(const(void)[] data, string contentType);</source>
          <target state="translated">void &lt;strong id=&quot;setPostData&quot;&gt;setPostData&lt;/strong&gt; (const (void) [] 데이터, 문자열 contentType);</target>
        </trans-unit>
        <trans-unit id="e5f6825b20ac50bf6a3464090d227c91586121eb" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setProxyAuthentication&quot;&gt;setProxyAuthentication&lt;/strong&gt;(const(char)[] username, const(char)[] password);</source>
          <target state="translated">void &lt;strong id=&quot;setProxyAuthentication&quot;&gt;setProxyAuthentication&lt;/strong&gt; (const (char) [] 사용자 이름, const (char) [] 암호);</target>
        </trans-unit>
        <trans-unit id="a063619390be44d6c5b9ffb8cede22714e710db3" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setScope&quot;&gt;setScope&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">void &lt;strong id=&quot;setScope&quot;&gt;setScope&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="7cf4e697d34e444119def01b09921d32df50d8d7" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setTarget&quot;&gt;setTarget&lt;/strong&gt;(ref Param params);</source>
          <target state="translated">void &lt;strong id=&quot;setTarget&quot;&gt;setTarget&lt;/strong&gt; (참조 매개 변수 매개 변수);</target>
        </trans-unit>
        <trans-unit id="18f2bced8656ee975b3bdf6bb88768a2ab2c6f14" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setTimeCondition&quot;&gt;setTimeCondition&lt;/strong&gt;(HTTP.TimeCond cond, SysTime timestamp);</source>
          <target state="translated">void &lt;strong id=&quot;setTimeCondition&quot;&gt;setTimeCondition&lt;/strong&gt; (HTTP.TimeCond cond, SysTime 타임 스탬프);</target>
        </trans-unit>
        <trans-unit id="cc366493844fcedcb0f4d128a68b0106dca6947d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setTimes&quot;&gt;setTimes&lt;/strong&gt;(R)(R name, SysTime accessTime, SysTime modificationTime)</source>
          <target state="translated">void &lt;strong id=&quot;setTimes&quot;&gt;setTimes&lt;/strong&gt; (R) (R 이름, SysTime 액세스 시간, SysTime 수정 시간)</target>
        </trans-unit>
        <trans-unit id="be0262c5882bb5fbd57c0e3e1094611de5afc43e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setTimes&quot;&gt;setTimes&lt;/strong&gt;(R)(auto ref R name, SysTime accessTime, SysTime modificationTime)</source>
          <target state="translated">void &lt;strong id=&quot;setTimes&quot;&gt;setTimes&lt;/strong&gt; (R) (자동 참조 R 이름, SysTime 액세스 시간, SysTime 수정 시간)</target>
        </trans-unit>
        <trans-unit id="c6ded43739ddf62b209b752008139298ecbfff7a" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;setUserAgent&quot;&gt;setUserAgent&lt;/strong&gt;(const(char)[] userAgent);</source>
          <target state="translated">void &lt;strong id=&quot;setUserAgent&quot;&gt;setUserAgent&lt;/strong&gt; (const (char) [] userAgent);</target>
        </trans-unit>
        <trans-unit id="d753165b8b35d5f260072a7d3b856dbe920b53c7" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;shift&quot;&gt;shift&lt;/strong&gt;(T)(T years, T months = 0, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)</source>
          <target state="translated">무효 &lt;strong id=&quot;shift&quot;&gt;이동&lt;/strong&gt; (T) (T 년, T 개월 = 0, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)</target>
        </trans-unit>
        <trans-unit id="4e5d9c3707ae681b6901192d1f6e79abd4627c47" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;shutdown&quot;&gt;shutdown&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;shutdown&quot;&gt;종료&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="99effd3b54ce4d5c603b8576d212eb082e8d5941" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;sortCtors&quot;&gt;sortCtors&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;sortCtors&quot;&gt;sortCtors&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ef775522e359dddeb7659bf8a58bd8fec35dd151" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;sortCtors&quot;&gt;sortCtors&lt;/strong&gt;(string cycleHandling);</source>
          <target state="translated">void &lt;strong id=&quot;sortCtors&quot;&gt;sortCtors&lt;/strong&gt; (문자열주기 처리);</target>
        </trans-unit>
        <trans-unit id="faf97bb1fbff975cb06b31eb7ec1add594556b9b" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;spawn&quot;&gt;spawn&lt;/strong&gt;(void delegate() op);</source>
          <target state="translated">무효 &lt;strong id=&quot;spawn&quot;&gt;스폰&lt;/strong&gt; (void delegate () op);</target>
        </trans-unit>
        <trans-unit id="883d886a1b3230102f5f4e5bfb1ecf1ddec0e8d5" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;start&quot;&gt;start&lt;/strong&gt;(void delegate() op);</source>
          <target state="translated">무효 &lt;strong id=&quot;start&quot;&gt;시작&lt;/strong&gt; (void delegate () op);</target>
        </trans-unit>
        <trans-unit id="820ea68fae9f0f37143bcec3841148bdb4b90ed7" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;swap&quot;&gt;swap&lt;/strong&gt;(T)(ref T lhs, ref T rhs)</source>
          <target state="translated">공극 &lt;strong id=&quot;swap&quot;&gt;스왑&lt;/strong&gt; (T) (ref Tlhs, Ref T rhs)</target>
        </trans-unit>
        <trans-unit id="d4dc85fe13ddc9bafabbc713dd0160530198fc99" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;swapAt&quot;&gt;swapAt&lt;/strong&gt;(R)(auto ref R r, size_t i1, size_t i2);</source>
          <target state="translated">void &lt;strong id=&quot;swapAt&quot;&gt;swapAt&lt;/strong&gt; (R) (자동 참조 R r, size_t i1, size_t i2);</target>
        </trans-unit>
        <trans-unit id="804a022d397e7c9e61526349aae68e9b6021f0dd" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;switchToFreeList&quot;&gt;switchToFreeList&lt;/strong&gt;();</source>
          <target state="translated">void &lt;strong id=&quot;switchToFreeList&quot;&gt;switchToFreeList&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="98a759cb83524eaeb874fb7197fdc12a4b1e3871" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;symlink&quot;&gt;symlink&lt;/strong&gt;(RO, RL)(RO original, RL link)</source>
          <target state="translated">void &lt;strong id=&quot;symlink&quot;&gt;symlink&lt;/strong&gt; (RO, RL) (RO 원본, RL 링크)</target>
        </trans-unit>
        <trans-unit id="45688cfddccb3422d7cdc0da7d90e3f96953fa58" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;thread_detachByAddr&quot;&gt;thread_detachByAddr&lt;/strong&gt;(ThreadID addr);</source>
          <target state="translated">void &lt;strong id=&quot;thread_detachByAddr&quot;&gt;thread_detachByAddr&lt;/strong&gt; (ThreadID addr);</target>
        </trans-unit>
        <trans-unit id="9f31bd42f8148f65428c9b560210c6f1fa1da889" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;thread_joinAll&quot;&gt;thread_joinAll&lt;/strong&gt;();</source>
          <target state="translated">무효 &lt;strong id=&quot;thread_joinAll&quot;&gt;thread_joinAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0e3dfeb570841d55e9607c075ef4f03686811106" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;toDebug&quot;&gt;toDebug&lt;/strong&gt;(EnumDeclaration ed);</source>
          <target state="translated">void &lt;strong id=&quot;toDebug&quot;&gt;toDebug&lt;/strong&gt; (EnumDeclaration ed);</target>
        </trans-unit>
        <trans-unit id="229292549f50a1617e39f1678e6a26c2ab32cf22" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;toFile&quot;&gt;toFile&lt;/strong&gt;(T)(T data, string fileName)</source>
          <target state="translated">void &lt;strong id=&quot;toFile&quot;&gt;toFile&lt;/strong&gt; (T) (T 데이터, 문자열 파일 이름)</target>
        </trans-unit>
        <trans-unit id="846b0a43f80a7c14ee489eb73898109fe7f305a1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;(W)(ref W writer, ref scope const FormatSpec!char fmt)</source>
          <target state="translated">void &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; (W) (참조 W 작성기, 참조 범위 const FormatSpec! char fmt)</target>
        </trans-unit>
        <trans-unit id="a13ca2fd02f5e14312a801bf3ed4f473e971efee" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;(Writer)(scope Writer sink, ref scope const FormatSpec!char fmt);</source>
          <target state="translated">void &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; (Writer) (범위 작성기 싱크, 참조 범위 const FormatSpec! char fmt);</target>
        </trans-unit>
        <trans-unit id="241be6a30d2f0a43dd69c4b9017ce36ee1ebcabd" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;(scope void delegate(const(char)[]) sink);</source>
          <target state="translated">void &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; (scope void delegate (const (char) []) sink);</target>
        </trans-unit>
        <trans-unit id="3bd3caba47bc02fa94e2d71dec13ac418962e951" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;(this T, W)(ref W writer, ref scope const FormatSpec!char fmt)</source>
          <target state="translated">void &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; (this T, W) (참조 W 작성기, 참조 범위 const FormatSpec! char fmt)</target>
        </trans-unit>
        <trans-unit id="060e4059f2d74cde47402d1ee79a35efed64c544" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;toTraceGC&quot;&gt;toTraceGC&lt;/strong&gt;(IRState* irs, elem* e, ref const Loc loc);</source>
          <target state="translated">void &lt;strong id=&quot;toTraceGC&quot;&gt;toTraceGC&lt;/strong&gt; (IRState * irs, elem * e, ref const Loc loc);</target>
        </trans-unit>
        <trans-unit id="41010e72fa7b14052c5b2f8967ac5bb3f8b1df15" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;topNIndex&quot;&gt;topNIndex&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, SwapStrategy ss = SwapStrategy.unstable, Range, RangeIndex)(Range r, RangeIndex index, SortOutput sorted = No.sortOutput)</source>
          <target state="translated">void &lt;strong id=&quot;topNIndex&quot;&gt;topNIndex&lt;/strong&gt; (별칭 = &quot;a &amp;lt;b&quot;, SwapStrategy ss = SwapStrategy.unstable, Range, RangeIndex) (범위 r, RangeIndex 인덱스, SortOutput 정렬 = No.sortOutput)</target>
        </trans-unit>
        <trans-unit id="278d1a0556d72810a4ecac150b5a7795691232eb" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;trace_setdeffilename&quot;&gt;trace_setdeffilename&lt;/strong&gt;(string name);</source>
          <target state="translated">void &lt;strong id=&quot;trace_setdeffilename&quot;&gt;trace_setdeffilename&lt;/strong&gt; (문자열 이름);</target>
        </trans-unit>
        <trans-unit id="eb8fa03f669fd7271a3ac02b2bcc08a57c447983" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;trace_setlogfilename&quot;&gt;trace_setlogfilename&lt;/strong&gt;(string name);</source>
          <target state="translated">void &lt;strong id=&quot;trace_setlogfilename&quot;&gt;trace_setlog 파일&lt;/strong&gt; 이름 (문자열 이름);</target>
        </trans-unit>
        <trans-unit id="96155f596f9596a14c90378db0cfbe44425014f0" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;transcode&quot;&gt;transcode&lt;/strong&gt;(Src, Dst)(Src[] s, out Dst[] r);</source>
          <target state="translated">무효 &lt;strong id=&quot;transcode&quot;&gt;트랜스 코드&lt;/strong&gt; (Src, Dst) (Src [] s, out Dst [] r);</target>
        </trans-unit>
        <trans-unit id="a1f441c2ae6d03292eaa862269eb1bb58b987555" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;translate&quot;&gt;translate&lt;/strong&gt;(C1, C2 = immutable(char), Buffer)(const(C1)[] str, in dchar[dchar] transTable, const(C2)[] toRemove, Buffer buffer)</source>
          <target state="translated">무효 &lt;strong id=&quot;translate&quot;&gt;변환&lt;/strong&gt; (C1, C2 = 불변 (char), 버퍼) (const (C1) [] str, dchar [dchar] transTable, const (C2) [] toRemove, 버퍼 버퍼)</target>
        </trans-unit>
        <trans-unit id="43e019fce6de5845dd9cf863664d0e7167324457" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;translate&quot;&gt;translate&lt;/strong&gt;(C1, S, C2 = immutable(char), Buffer)(C1[] str, in S[dchar] transTable, const(C2)[] toRemove, Buffer buffer)</source>
          <target state="translated">무효 &lt;strong id=&quot;translate&quot;&gt;변환&lt;/strong&gt; (C1, S, C2 = 불변 (char), 버퍼) (C1 [] str, S [dchar] transTable에서 const (C2) [] toRemove, 버퍼 버퍼)</target>
        </trans-unit>
        <trans-unit id="813489ccc559860062c784ec70c8b8af4212aedf" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;unSpeculative&quot;&gt;unSpeculative&lt;/strong&gt;(Scope* sc, RootObject o);</source>
          <target state="translated">비 &lt;strong id=&quot;unSpeculative&quot;&gt;규격&lt;/strong&gt; 무효 (Scope * sc, RootObject o);</target>
        </trans-unit>
        <trans-unit id="5ab9dca64b12147c92ed4a121674a8e7191ff44d" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;uninitializedFill&quot;&gt;uninitializedFill&lt;/strong&gt;(Range, Value)(Range range, Value value)</source>
          <target state="translated">void &lt;strong id=&quot;uninitializedFill&quot;&gt;uninitializedFill&lt;/strong&gt; (범위, 값) (범위 범위, 값)</target>
        </trans-unit>
        <trans-unit id="5c6de979ca032ca5d6a21ea968a51295c71424f3" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;unlock&quot;&gt;unlock&lt;/strong&gt;(ulong start = 0, ulong length = 0);</source>
          <target state="translated">무효 &lt;strong id=&quot;unlock&quot;&gt;잠금 해제&lt;/strong&gt; (ulong start = 0, ulong length = 0);</target>
        </trans-unit>
        <trans-unit id="af09a3f5c2a23014e3961ea133fc702e1e699fa5" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;update&quot;&gt;update&lt;/strong&gt;(K, V, C, U)(ref V[K] aa, K key, scope C create, scope U &lt;strong id=&quot;update&quot;&gt;update&lt;/strong&gt;)</source>
          <target state="translated">무효 &lt;strong id=&quot;update&quot;&gt;업데이트&lt;/strong&gt; (K, V, C, U) (참조 V [K] aa, K 키, 범위 C 생성, 범위 U &lt;strong id=&quot;update&quot;&gt;업데이트&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="afb108d74f72ff18b12fa309e45699ba06af7a60" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;updateRealEnvironment&quot;&gt;updateRealEnvironment&lt;/strong&gt;(ref StringTable environment);</source>
          <target state="translated">void &lt;strong id=&quot;updateRealEnvironment&quot;&gt;updateRealEnvironment&lt;/strong&gt; (ref StringTable 환경 참조);</target>
        </trans-unit>
        <trans-unit id="1ed07c14e085b23d2775a39286d2ae7bd7dd1312" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;upload&quot;&gt;upload&lt;/strong&gt;(Conn = AutoProtocol)(string loadFromPath, const(char)[] url, Conn conn = Conn())</source>
          <target state="translated">무효 &lt;strong id=&quot;upload&quot;&gt;업로드&lt;/strong&gt; (Conn = AutoProtocol) (string loadFromPath, const (char) [] url, Conn conn = Conn ())</target>
        </trans-unit>
        <trans-unit id="0a6de0be1dd48175d1a7bace3bff8ca69dbf6087" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt;()(va_list apx, TypeInfo ti, void* parmn);</source>
          <target state="translated">void &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt; () (va_list apx, TypeInfo ti, void * parmn);</target>
        </trans-unit>
        <trans-unit id="0b211813bf396cefe38b7a67640e332bb8f00ff4" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt;(T)(va_list apx, ref T parmn);</source>
          <target state="translated">무효 &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt; (T) (va_list apx, ref T parmn);</target>
        </trans-unit>
        <trans-unit id="5621fa520c0c4b23e179ef42a4277bc9765475a9" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;va_start&quot;&gt;va_start&lt;/strong&gt;(T)(out va_list ap, ref T parmn);</source>
          <target state="translated">무효 &lt;strong id=&quot;va_start&quot;&gt;va_start&lt;/strong&gt; (T) (out va_list ap, ref T parmn);</target>
        </trans-unit>
        <trans-unit id="6d910653e2522ffc99a1e78b21927cbe9d59ad56" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;wait&quot;&gt;wait&lt;/strong&gt;();</source>
          <target state="translated">보이드 &lt;strong id=&quot;wait&quot;&gt;대기&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="3648368e2b93890dacfc3536a80223fa48a856db" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;windowsHandleOpen&quot;&gt;windowsHandleOpen&lt;/strong&gt;(HANDLE handle, scope const(char)[] stdioOpenmode);</source>
          <target state="translated">void &lt;strong id=&quot;windowsHandleOpen&quot;&gt;windowsHandleOpen&lt;/strong&gt; (HANDLE 핸들, 범위 const (char) [] stdioOpenmode);</target>
        </trans-unit>
        <trans-unit id="5a8b6be12e7976a830553aa024a44101af4909b1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt;(R)(R name, const void[] buffer)</source>
          <target state="translated">void &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt; (R) (R 이름, const void [] 버퍼)</target>
        </trans-unit>
        <trans-unit id="f8161b91bdc7c63310f6611612969abdaf76a5d9" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt;(R)(auto ref R name, const void[] buffer)</source>
          <target state="translated">void &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt; (R) (자동 참조 R 이름, const void [] 버퍼)</target>
        </trans-unit>
        <trans-unit id="7df1325d2eddff06b51e9175232ea736ce05635f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt;(S...)(S args);</source>
          <target state="translated">무효 &lt;strong id=&quot;write&quot;&gt;쓰기&lt;/strong&gt; (S ...) (S args);</target>
        </trans-unit>
        <trans-unit id="08a8a36b1a150e392c054e3b49d2e1b601fa31ff" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt;(T, Endian endianness = Endian.bigEndian, R)(R range, const T value, size_t index)</source>
          <target state="translated">무효 &lt;strong id=&quot;write&quot;&gt;쓰기&lt;/strong&gt; (T, 엔디안 엔디안 = 엔디안. 빅 엔디안, R) (R 범위, const T 값, size_t 인덱스)</target>
        </trans-unit>
        <trans-unit id="bc4a625e77dcfc608af15918839df9850eede869" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt;(T, Endian endianness = Endian.bigEndian, R)(R range, const T value, size_t* index)</source>
          <target state="translated">무효 &lt;strong id=&quot;write&quot;&gt;쓰기&lt;/strong&gt; (T, 엔디안 엔디안 = 엔디안. 빅 엔디안, R) (R 범위, const T 값, size_t * 인덱스)</target>
        </trans-unit>
        <trans-unit id="3331138f9057b46984c170a7aac17b61bba381a1" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;write&quot;&gt;write&lt;/strong&gt;(T...)(T args)</source>
          <target state="translated">무효 &lt;strong id=&quot;write&quot;&gt;쓰기&lt;/strong&gt; (T ...) (T args)</target>
        </trans-unit>
        <trans-unit id="28b453fe68ebab906b11350635370d987d4b9b50" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;writeFile&quot;&gt;writeFile&lt;/strong&gt;(Loc loc, const(char)[] filename, const void[] data);</source>
          <target state="translated">void &lt;strong id=&quot;writeFile&quot;&gt;writeFile&lt;/strong&gt; (Loc loc, const (char) [] 파일 이름, const void [] 데이터);</target>
        </trans-unit>
        <trans-unit id="07e4d5735b20d643d7737a3d90248428c8bc4ed6" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;write_instance_pointers&quot;&gt;write_instance_pointers&lt;/strong&gt;(Type type, Symbol* s, uint offset);</source>
          <target state="translated">void &lt;strong id=&quot;write_instance_pointers&quot;&gt;write_instance_pointers&lt;/strong&gt; (유형 유형, Symbol * s, uint 오프셋);</target>
        </trans-unit>
        <trans-unit id="a94dd4a7835210bc71ce5bd4ca98e2d8943390c7" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;write_pointers&quot;&gt;write_pointers&lt;/strong&gt;(Type type, Symbol* s, uint offset);</source>
          <target state="translated">void &lt;strong id=&quot;write_pointers&quot;&gt;write_pointers&lt;/strong&gt; (Type type, Symbol * s, uint offset);</target>
        </trans-unit>
        <trans-unit id="2686f0eb6a2c418fb3f0d26026427d41d4fe6143" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;writef&quot;&gt;writef&lt;/strong&gt;(Char, A...)(in Char[] fmt, A args);</source>
          <target state="translated">void &lt;strong id=&quot;writef&quot;&gt;writef&lt;/strong&gt; (Char, A ...) (Char [] fmt, A args에서);</target>
        </trans-unit>
        <trans-unit id="b9b50281a6ba47348dc9d9da19bb65bc905115d8" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;writef&quot;&gt;writef&lt;/strong&gt;(Char, A...)(scope const(Char)[] fmt, A args);</source>
          <target state="translated">void &lt;strong id=&quot;writef&quot;&gt;writef&lt;/strong&gt; (Char, A ...) (scope const (Char) [] fmt, A args);</target>
        </trans-unit>
        <trans-unit id="f2c59a833901dcfa919847fc5ab52c4c75eb00bd" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;writef&quot;&gt;writef&lt;/strong&gt;(alias fmt, A...)(A args)</source>
          <target state="translated">void &lt;strong id=&quot;writef&quot;&gt;writef&lt;/strong&gt; (별칭 fmt, A ...) (A args)</target>
        </trans-unit>
        <trans-unit id="46028c1d5ce0d4fdc7e684c1934f0190254dd77e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;writefln&quot;&gt;writefln&lt;/strong&gt;(Char, A...)(in Char[] fmt, A args);</source>
          <target state="translated">void &lt;strong id=&quot;writefln&quot;&gt;writefln&lt;/strong&gt; (Char, A ...) ( &lt;strong id=&quot;writefln&quot;&gt;char&lt;/strong&gt; [] fmt, A args에서);</target>
        </trans-unit>
        <trans-unit id="48ebeecdd73b16b3756560464f620cc2f6c77577" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;writefln&quot;&gt;writefln&lt;/strong&gt;(Char, A...)(scope const(Char)[] fmt, A args);</source>
          <target state="translated">void &lt;strong id=&quot;writefln&quot;&gt;writefln&lt;/strong&gt; (Char, A ...) (scope const (Char) [] fmt, A args);</target>
        </trans-unit>
        <trans-unit id="5dd9a2c8023a160fb92dddd9d875d0dab8a7060e" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;writefln&quot;&gt;writefln&lt;/strong&gt;(alias fmt, A...)(A args)</source>
          <target state="translated">void &lt;strong id=&quot;writefln&quot;&gt;writefln&lt;/strong&gt; (별칭 fmt, A ...) (A args)</target>
        </trans-unit>
        <trans-unit id="9079a087353ea1b0bb68c8c66aaf1afbe9d9442c" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;writeln&quot;&gt;writeln&lt;/strong&gt;(S...)(S args);</source>
          <target state="translated">void &lt;strong id=&quot;writeln&quot;&gt;writeln&lt;/strong&gt; (S ...) (S args);</target>
        </trans-unit>
        <trans-unit id="055a580a6b06504089f8f708cdf60af41a92fc96" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;writeln&quot;&gt;writeln&lt;/strong&gt;(T...)(T args);</source>
          <target state="translated">보이드 &lt;strong id=&quot;writeln&quot;&gt;경우 Writeln&lt;/strong&gt; (T ...) (T의 인수);</target>
        </trans-unit>
        <trans-unit id="9c56dcb79e6d671848427fface768090bb3cf32f" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;yield&quot;&gt;yield&lt;/strong&gt;(T)(T value);</source>
          <target state="translated">보이드 &lt;strong id=&quot;yield&quot;&gt;수율&lt;/strong&gt; (T) (T 값);</target>
        </trans-unit>
        <trans-unit id="077a42f7ea72672ea7945d791614c9240d3c04eb" translate="yes" xml:space="preserve">
          <source>void &lt;strong id=&quot;yield&quot;&gt;yield&lt;/strong&gt;(T)(ref T value);</source>
          <target state="translated">공극 &lt;strong id=&quot;yield&quot;&gt;수율&lt;/strong&gt; (T) (참조 T 값);</target>
        </trans-unit>
        <trans-unit id="409a178932f075b1d2d340a227483580345f78cc" translate="yes" xml:space="preserve">
          <source>void delegate() &lt;code&gt;dg&lt;/code&gt;</source>
          <target state="translated">void delegate () &lt;code&gt;dg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="953f4543d2f1c60f8edc195c3e17f366c621eccc" translate="yes" xml:space="preserve">
          <source>void delegate() &lt;code&gt;op&lt;/code&gt;</source>
          <target state="translated">void delegate () &lt;code&gt;op&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40dc6494350b46ec613cf80ec2b2e21496a78d75" translate="yes" xml:space="preserve">
          <source>void delegate() nothrow &lt;code&gt;cbDllUnload&lt;/code&gt;</source>
          <target state="translated">void delegate () nothrow &lt;code&gt;cbDllUnload&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54fde564565afe9a91e2b13f0b6da5ffe2b25cce" translate="yes" xml:space="preserve">
          <source>void delegate() nothrow &lt;code&gt;dg&lt;/code&gt;</source>
          <target state="translated">void delegate () nothrow &lt;code&gt;dg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce105f9fb18f16de18b4bcf9a7a6189b6ae914c1" translate="yes" xml:space="preserve">
          <source>void delegate(Dsymbol) &lt;code&gt;dg&lt;/code&gt;</source>
          <target state="translated">무효 대의원 (기호) &lt;code&gt;dg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84c9a41eae4b2eaa78e048800f3f323a8293e128" translate="yes" xml:space="preserve">
          <source>void delegate(E)&lt;code&gt;dg&lt;/code&gt;</source>
          <target state="translated">무효 대표 (E) &lt;code&gt;dg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="362d4851dbaf880e98e6663eda44b204174ee193" translate="yes" xml:space="preserve">
          <source>void delegate(const(char)[] name, int pickAny) &lt;code&gt;pAddSymbol&lt;/code&gt;</source>
          <target state="translated">void delegate (const (char) [] name, int pickAny) &lt;code&gt;pAddSymbol&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abcb2864c49588b8affcaff4279d8078c9f9b381" translate="yes" xml:space="preserve">
          <source>void delegate(const(char)[]) &lt;code&gt;sink&lt;/code&gt;</source>
          <target state="translated">void delegate (const (char) []) &lt;code&gt;sink&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dfc28d7b8bba9008e28d75de4cac4441ce96af8" translate="yes" xml:space="preserve">
          <source>void delegate(in char[]) &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">void delegate (in char []) &lt;code&gt;callback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66559756b71d7b9d6c26bd007080e375527c99f0" translate="yes" xml:space="preserve">
          <source>void expression that calls the invariant</source>
          <target state="translated">불변을 호출하는 void 표현식</target>
        </trans-unit>
        <trans-unit id="889e0bb4620d6764158e5f3ad55b65d35f696973" translate="yes" xml:space="preserve">
          <source>void function() &lt;code&gt;fn&lt;/code&gt;</source>
          <target state="translated">무효 함수 () &lt;code&gt;fn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9455fb8fafe5fa30c7434a093e5e516c35378e11" translate="yes" xml:space="preserve">
          <source>void function(void*) &lt;strong id=&quot;xDelUser&quot;&gt;xDelUser&lt;/strong&gt;;</source>
          <target state="translated">무효 함수 (void *) &lt;strong id=&quot;xDelUser&quot;&gt;xDelUser&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="98e0475df65996a4b773272454ce891b7587fcd4" translate="yes" xml:space="preserve">
          <source>void function(void*) &lt;strong id=&quot;xFree&quot;&gt;xFree&lt;/strong&gt;;</source>
          <target state="translated">무효 함수 (void *) &lt;strong id=&quot;xFree&quot;&gt;xFree&lt;/strong&gt; ;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
