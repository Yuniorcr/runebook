<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="acbc7801b292b22fd84bb969c2c0f9ee879becf9" translate="yes" xml:space="preserve">
          <source>Interfacing to C</source>
          <target state="translated">C와 인터페이스</target>
        </trans-unit>
        <trans-unit id="00b1220db63301a90c567b7096023b21f5a7b981" translate="yes" xml:space="preserve">
          <source>Interfacing to C++</source>
          <target state="translated">C ++와 인터페이스</target>
        </trans-unit>
        <trans-unit id="3f32265411f24516436989da79a8b9c2fd589ebb" translate="yes" xml:space="preserve">
          <source>Interfacing to Objective-C</source>
          <target state="translated">Objective-C와 인터페이스</target>
        </trans-unit>
        <trans-unit id="e66a4ffa477a1f7eb282b4a707de158b622e6eab" translate="yes" xml:space="preserve">
          <source>Interfacing with C++</source>
          <target state="translated">C ++와 인터페이스</target>
        </trans-unit>
        <trans-unit id="63d3004e718ad2e15676793a202fef50196ce165" translate="yes" xml:space="preserve">
          <source>Internal logic error in SQLite</source>
          <target state="translated">SQLite의 내부 논리 오류</target>
        </trans-unit>
        <trans-unit id="d5242b6068ce3aa3e94925e147e46c817b1e87d1" translate="yes" xml:space="preserve">
          <source>Internal use only</source>
          <target state="translated">내부 전용</target>
        </trans-unit>
        <trans-unit id="dcfe56ee50b5246e8fc3d1efd71bcc80c9c2cbd3" translate="yes" xml:space="preserve">
          <source>International Domain Names support</source>
          <target state="translated">국제 도메인 이름 지원</target>
        </trans-unit>
        <trans-unit id="1c9eb8fe39b663da62bd55d532bbc1d6dc4480d5" translate="yes" xml:space="preserve">
          <source>Internet Control Message Protocol</source>
          <target state="translated">인터넷 제어 메시지 프로토콜</target>
        </trans-unit>
        <trans-unit id="4f4f826bb57cdd671bbd6bb81ae23885f0d13165" translate="yes" xml:space="preserve">
          <source>Internet Control Message Protocol level</source>
          <target state="translated">인터넷 제어 메시지 프로토콜 수준</target>
        </trans-unit>
        <trans-unit id="1eadf3559d5760f57d825a20ef7a765cc6fff6a8" translate="yes" xml:space="preserve">
          <source>Internet Group Management Protocol</source>
          <target state="translated">인터넷 그룹 관리 프로토콜</target>
        </trans-unit>
        <trans-unit id="486a00bfbd24a5012797e69fc29110b48c224e56" translate="yes" xml:space="preserve">
          <source>Internet Group Management Protocol level</source>
          <target state="translated">인터넷 그룹 관리 프로토콜 수준</target>
        </trans-unit>
        <trans-unit id="ccfc6a40d215b229ecf5eb8e225cff288aef8d60" translate="yes" xml:space="preserve">
          <source>Internet Protocol version 4</source>
          <target state="translated">인터넷 프로토콜 버전 4</target>
        </trans-unit>
        <trans-unit id="8f31285e4d3c0d1160715ca496686f163954b9a4" translate="yes" xml:space="preserve">
          <source>Internet Protocol version 4 level</source>
          <target state="translated">인터넷 프로토콜 버전 4 레벨</target>
        </trans-unit>
        <trans-unit id="8b3f601b89a80177e18ecc46b747bb6d436f1059" translate="yes" xml:space="preserve">
          <source>Internet Protocol version 6</source>
          <target state="translated">인터넷 프로토콜 버전 6</target>
        </trans-unit>
        <trans-unit id="a1072e310be98411b8cd11656cb7bff695706b85" translate="yes" xml:space="preserve">
          <source>Internet Protocol version 6 level</source>
          <target state="translated">인터넷 프로토콜 버전 6 레벨</target>
        </trans-unit>
        <trans-unit id="93cc60f22833d45c27c517bcc4c0654c96515575" translate="yes" xml:space="preserve">
          <source>Interprets variadic argument list &lt;code&gt;args&lt;/code&gt;, formats them according to &lt;code&gt;fmt&lt;/code&gt;, and sends the resulting characters to &lt;code&gt;w&lt;/code&gt;. The encoding of the output is the same as &lt;code&gt;Char&lt;/code&gt;. The type &lt;code&gt;Writer&lt;/code&gt; must satisfy &lt;code&gt;&lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;std.range.primitives.isOutputRange&lt;/a&gt;!(Writer, Char)&lt;/code&gt;.</source>
          <target state="translated">variadic argument list &lt;code&gt;args&lt;/code&gt; 를 해석 하고 &lt;code&gt;fmt&lt;/code&gt; 에 따라 형식화 한 다음 결과 문자를 &lt;code&gt;w&lt;/code&gt; 로 보냅니다 . 출력의 인코딩은 &lt;code&gt;Char&lt;/code&gt; 와 동일합니다 . &lt;code&gt;Writer&lt;/code&gt; 유형 은 &lt;code&gt;&lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;std.range.primitives.isOutputRange&lt;/a&gt;!(Writer, Char)&lt;/code&gt; 충족해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1215cbe2c98ef14d7aa50ec46f17432a95774205" translate="yes" xml:space="preserve">
          <source>Interrupt A Long-Running Query</source>
          <target state="translated">장기 실행 쿼리 중단</target>
        </trans-unit>
        <trans-unit id="3d60c3309aeba9fb9a2d2efeac2160bd862157e8" translate="yes" xml:space="preserve">
          <source>Interval &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">간격 &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6fe01334021f703c84b5da0607e6be23e76dade" translate="yes" xml:space="preserve">
          <source>Interval &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">간격 &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b5f0564cad1e60053ec849638012d9696df2ed9" translate="yes" xml:space="preserve">
          <source>Interval option specifier for &lt;code&gt;until&lt;/code&gt; (below) and others.</source>
          <target state="translated">&lt;code&gt;until&lt;/code&gt; (아래) 및 기타에 대한 간격 옵션 지정자 .</target>
        </trans-unit>
        <trans-unit id="52111c85baee81db8b2b3521d90bcf690e303a6e" translate="yes" xml:space="preserve">
          <source>Interval!TP &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">간격! TP &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b37eedf146eb2ebd5bc1c25708b31f56d1fc371d" translate="yes" xml:space="preserve">
          <source>IntervalRange &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">IntervalRange &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="607b0ac46a2df5a924b307d562abd8e57ec9ce2f" translate="yes" xml:space="preserve">
          <source>Intervals and Ranges of Time</source>
          <target state="translated">간격과 시간 범위</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="1fb7463147331b617ca5303fd1b3438ad66cc4fc" translate="yes" xml:space="preserve">
          <source>Introduction to std.datetime</source>
          <target state="translated">std.datetime 소개</target>
        </trans-unit>
        <trans-unit id="b3b4d20d3dfe4ef78d0bf43a93aa7f57bae176c5" translate="yes" xml:space="preserve">
          <source>Introspection</source>
          <target state="translated">Introspection</target>
        </trans-unit>
        <trans-unit id="a20a3e7ab504a9565c6aedca53d4fdbe5513a566" translate="yes" xml:space="preserve">
          <source>Invalid State</source>
          <target state="translated">잘못된 상태</target>
        </trans-unit>
        <trans-unit id="a1bff97e3a0d9f8589413296b0f1e0569f71930c" translate="yes" xml:space="preserve">
          <source>Invalid file name.</source>
          <target state="translated">잘못된 파일 이름.</target>
        </trans-unit>
        <trans-unit id="a6eb263d63885ee3d552ee7aff55324ad0e9ead4" translate="yes" xml:space="preserve">
          <source>Invalidates when this Grapheme leaves the scope, attempts to use it then would lead to memory corruption.</source>
          <target state="translated">이 Grapheme이 범위를 벗어나면 무효화되고이를 사용하려고하면 메모리 손상이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c6f0311284e9216efb54d8e9865ea4fdb6fb5cc" translate="yes" xml:space="preserve">
          <source>Invariant blocks should contain &lt;code&gt;assert&lt;/code&gt; expressions, and should throw &lt;code&gt;AssertError&lt;/code&gt;s when they fail. Since DMD version 2.081.0, invariants can also be written as expression statements, with &lt;code&gt;assert&lt;/code&gt; implied:</source>
          <target state="translated">불변 블록은 &lt;code&gt;assert&lt;/code&gt; 표현식을 포함 해야하며 실패 할 때 &lt;code&gt;AssertError&lt;/code&gt; 를 발생 시켜야합니다 . 와 DMD 버전 2.081.0 때문에, 불변 또한, 표현의 문장과 같이 쓸 수있다 &lt;code&gt;assert&lt;/code&gt; 암시 :</target>
        </trans-unit>
        <trans-unit id="1601557f501dcc1665159d7c25e7f800b4c4d376" translate="yes" xml:space="preserve">
          <source>Invariant checks.</source>
          <target state="translated">불변 점검.</target>
        </trans-unit>
        <trans-unit id="3390616cafac7ff314d6aadaf20e48034cbb3314" translate="yes" xml:space="preserve">
          <source>Invariants</source>
          <target state="translated">Invariants</target>
        </trans-unit>
        <trans-unit id="aaafc5af09fec54c46e5ca35204284fae32a4ed8" translate="yes" xml:space="preserve">
          <source>Invariants are implicitly &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">불변은 암묵적으로 &lt;code&gt;const&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="552014b091503ffa5bb90ba68ad234e50e75c24c" translate="yes" xml:space="preserve">
          <source>Invariants are used to specify characteristics of a class or struct that must always be true (except while executing a member function). For example, a class representing a date might have an invariant that the day must be 1..31 and the hour must be 0..23:</source>
          <target state="translated">변수는 항상 참이어야하는 클래스 또는 구조체의 특성을 지정하는 데 사용됩니다 (멤버 함수를 실행하는 동안 제외). 예를 들어, 날짜를 나타내는 클래스는 날짜가 1..31이어야하고 시간이 0..23이어야한다는 변함이 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d6016fe71d03226948598f177a7e24383a6ccfb" translate="yes" xml:space="preserve">
          <source>Inverse FFT that allows a user-supplied buffer to be provided. The buffer must be a random access range with slicing, and its elements must be some complex-like type.</source>
          <target state="translated">사용자 제공 버퍼를 제공 할 수있는 역 FFT. 버퍼는 슬라이싱이있는 임의의 액세스 범위 여야하며 해당 요소는 복잡한 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8f589f4c2f971c6116b057e5c215d537ca7cb43e" translate="yes" xml:space="preserve">
          <source>Inverse of Normal distribution function</source>
          <target state="translated">정규 분포 함수의 역</target>
        </trans-unit>
        <trans-unit id="c03358c4f54ce52294e142183e933b46fcb8b9f4" translate="yes" xml:space="preserve">
          <source>Inverse of complemented incomplete gamma integral</source>
          <target state="translated">보완 된 불완전한 감마 적분의 역수</target>
        </trans-unit>
        <trans-unit id="9bc72f0d8f316fcee653be902a9618f6a8a72f2c" translate="yes" xml:space="preserve">
          <source>Inverse of incomplete beta integral</source>
          <target state="translated">불완전한 베타 적분의 역수</target>
        </trans-unit>
        <trans-unit id="5f54f70c78f3db6ca340241c50fe53fee043bc4b" translate="yes" xml:space="preserve">
          <source>Inverse of the Log Minus Digamma function</source>
          <target state="translated">로그 마이너스 디 감마 함수의 역함수</target>
        </trans-unit>
        <trans-unit id="8f85e13b0d42fd1b4a5a865686a2d49695460bb5" translate="yes" xml:space="preserve">
          <source>Invoking the program with &quot;--output=myfile.txt --output=yourfile.txt&quot; or &quot;--output myfile.txt --output yourfile.txt&quot; will set &lt;code&gt;outputFiles&lt;/code&gt; to &lt;code&gt;[ &quot;myfile.txt&quot;, &quot;yourfile.txt&quot; ]&lt;/code&gt;.  Alternatively you can set &lt;a href=&quot;#arraySep&quot;&gt;&lt;code&gt;arraySep&lt;/code&gt;&lt;/a&gt; as the element separator:</source>
          <target state="translated">&quot;--output = myfile.txt --output = yourfile.txt&quot;또는 &quot;--output myfile.txt --output yourfile.txt&quot;로 프로그램을 호출하면 &lt;code&gt;outputFiles&lt;/code&gt; 가 &lt;code&gt;[ &quot;myfile.txt&quot;, &quot;yourfile.txt&quot; ]&lt;/code&gt; 설정됩니다. &quot;] . 또는 &lt;a href=&quot;#arraySep&quot;&gt; &lt;code&gt;arraySep&lt;/code&gt; &lt;/a&gt; 를 요소 구분 기호로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e1d20fac3714b4db9127e8efa778c74b54cd4e0b" translate="yes" xml:space="preserve">
          <source>Invoking the program with &quot;--output=myfile.txt&quot; or &quot;--output myfile.txt&quot; will set &lt;code&gt;outputFile&lt;/code&gt; to &quot;myfile.txt&quot;. If you want to pass a string containing spaces, you need to use the quoting that is appropriate to your shell, e.g. --output='my file.txt'.</source>
          <target state="translated">&quot;--output = myfile.txt&quot;또는 &quot;--output myfile.txt&quot;로 프로그램을 호출하면 &lt;code&gt;outputFile&lt;/code&gt; 이 &quot;myfile.txt&quot;로 설정됩니다. 공백이 포함 된 문자열을 전달하려면 쉘에 적합한 따옴표를 사용해야합니다 (예 : --output = 'my file.txt').</target>
        </trans-unit>
        <trans-unit id="93d64dcdad645b5a71f4e6d58798c14d358623b2" translate="yes" xml:space="preserve">
          <source>Invoking the program with &quot;--paranoid --paranoid --paranoid&quot; will set &lt;code&gt; paranoid&lt;/code&gt; to 3. Note that an incremental option never expects a parameter, e.g., in the command line &quot;--paranoid 42 --paranoid&quot;, the &quot;42&quot; does not set &lt;code&gt;paranoid&lt;/code&gt; to 42; instead, &lt;code&gt;paranoid&lt;/code&gt; is set to 2 and &quot;42&quot; is not considered as part of the normal program arguments.</source>
          <target state="translated">&quot;--paranoid --paranoid --paranoid&quot;로 프로그램을 호출하면 &lt;code&gt; paranoid&lt;/code&gt; 이 3으로 설정됩니다 . 증분 옵션은 매개 변수를 예상하지 않습니다. 예를 들어 명령 행 &quot;--paranoid 42 --paranoid&quot;, &quot;42 &quot;는 &lt;code&gt;paranoid&lt;/code&gt; 을 42로 설정하지 않습니다 . 대신, &lt;code&gt;paranoid&lt;/code&gt; 은 2로 설정되고 &quot;42&quot;는 정상적인 프로그램 인수의 일부로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b6eaac5b877b952f6bcf72430619aedf647b1a8" translate="yes" xml:space="preserve">
          <source>Invoking the program with e.g. &quot;--tune=alpha=0.5 --tune beta=0.6&quot; will set &lt;code&gt;tuningParms&lt;/code&gt; to [ &quot;alpha&quot; : 0.5, &quot;beta&quot; : 0.6 ].  Alternatively you can set &lt;a href=&quot;#arraySep&quot;&gt;&lt;code&gt;arraySep&lt;/code&gt;&lt;/a&gt; as the element separator:</source>
          <target state="translated">예를 들어 &quot;--tune = alpha = 0.5 --tune beta = 0.6&quot;으로 프로그램을 호출하면 &lt;code&gt;tuningParms&lt;/code&gt; 가 [ &quot;alpha&quot;: 0.5, &quot;beta&quot;: 0.6]으로 설정됩니다. 또는 &lt;a href=&quot;#arraySep&quot;&gt; &lt;code&gt;arraySep&lt;/code&gt; &lt;/a&gt; 를 요소 구분 기호로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a51b807dff53b59ce17fa8ba3b4efb7c37298356" translate="yes" xml:space="preserve">
          <source>Is 'this' a pointer to a static array holding two contexts.</source>
          <target state="translated">'this'는 두 컨텍스트를 보유하는 정적 배열에 대한 포인터입니다.</target>
        </trans-unit>
        <trans-unit id="d4f04607ce8bc35a535f2eafaf232f2ae5e08636" translate="yes" xml:space="preserve">
          <source>Is 3DNow prefetch supported?</source>
          <target state="translated">3DNow 프리 페치가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="c1091b8fd8404cafbdd2e1da298b3c08898531c9" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;From&lt;/code&gt; implicitly convertible to &lt;code&gt;To&lt;/code&gt;?</source>
          <target state="translated">가 &lt;code&gt;From&lt;/code&gt; 로 전환 암시 적 &lt;code&gt;To&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="6527c515f699697a6d232a689619fd938ee60f0e" translate="yes" xml:space="preserve">
          <source>Is AES supported</source>
          <target state="translated">AES 지원</target>
        </trans-unit>
        <trans-unit id="a8cd9e904825556bf96828e0f6d502417a5ff971" translate="yes" xml:space="preserve">
          <source>Is AMD 3DNOW Ext supported?</source>
          <target state="translated">AMD 3DNOW Ext가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="cefb7da98db99e806ecf4f9d16aa97f479cb52ce" translate="yes" xml:space="preserve">
          <source>Is AMD 3DNOW supported?</source>
          <target state="translated">AMD 3DNOW가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="3467fc8e189fda3cf33326fc0d09e8bdf079f9fb" translate="yes" xml:space="preserve">
          <source>Is AVX supported</source>
          <target state="translated">AVX가 지원됩니까</target>
        </trans-unit>
        <trans-unit id="780bb1bc188e3b5539f81c0d650a1e7ddcd84502" translate="yes" xml:space="preserve">
          <source>Is AVX2 supported</source>
          <target state="translated">AVX2 지원</target>
        </trans-unit>
        <trans-unit id="930e8f6c9f8db481832b42bf5d22e519ab0e0ba7" translate="yes" xml:space="preserve">
          <source>Is Dsymbol a variable that contains pointers?</source>
          <target state="translated">Dsymbol은 포인터를 포함하는 변수입니까?</target>
        </trans-unit>
        <trans-unit id="f393ec53178029468d90ccfedc6fdafe870ef6c6" translate="yes" xml:space="preserve">
          <source>Is FMA supported</source>
          <target state="translated">FMA 지원</target>
        </trans-unit>
        <trans-unit id="926d3c2bb40647642867740cf289a55c2684c607" translate="yes" xml:space="preserve">
          <source>Is FP16C supported</source>
          <target state="translated">FP16C가 지원됩니까</target>
        </trans-unit>
        <trans-unit id="a75e00d20bd98c427350c031bd2576f677c9bc19" translate="yes" xml:space="preserve">
          <source>Is HLE (hardware lock elision) supported</source>
          <target state="translated">HLE (하드웨어 잠금 제거)가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="5c63067c0b3183b5f4abc564381bb25d3d1231a7" translate="yes" xml:space="preserve">
          <source>Is LZCNT supported?</source>
          <target state="translated">LZCNT가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="80343d68528e1f0d53f3a2e549cd71634470e6e5" translate="yes" xml:space="preserve">
          <source>Is MMX supported?</source>
          <target state="translated">MMX가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="114c091c0c22495cd9a32fec40491702ce24f441" translate="yes" xml:space="preserve">
          <source>Is POPCNT supported?</source>
          <target state="translated">POPCNT가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="092c9f81639a5605a53fbcf69c7be6aa88dbd446" translate="yes" xml:space="preserve">
          <source>Is RTM (restricted transactional memory) supported</source>
          <target state="translated">RTM (제한된 트랜잭션 메모리)이 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="24109cfc7f69bcaf97712b43c58ddf2b22ea3c9a" translate="yes" xml:space="preserve">
          <source>Is SHA supported</source>
          <target state="translated">SHA 지원</target>
        </trans-unit>
        <trans-unit id="3511bb1b8685cb3d3a378cd1f674c89a05416048" translate="yes" xml:space="preserve">
          <source>Is SSE supported?</source>
          <target state="translated">SSE가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="d33bcfafec9efc7ddbbfe4306ce2e227725bf3cf" translate="yes" xml:space="preserve">
          <source>Is SSE2 supported?</source>
          <target state="translated">SSE2가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="2b949ad5258cac339f8f205f2bc83cc9e9a30c77" translate="yes" xml:space="preserve">
          <source>Is SSE3 supported?</source>
          <target state="translated">SSE3가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="56ee911e8f809a3ad52a479f6bd11d4cb88c2a3b" translate="yes" xml:space="preserve">
          <source>Is SSE4.1 supported?</source>
          <target state="translated">SSE4.1이 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="799b3ec53e6f94a6529a4281676d281ef3e42b2d" translate="yes" xml:space="preserve">
          <source>Is SSE4.2 supported?</source>
          <target state="translated">SSE4.2가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="a2be34e3269af3486a23b7806de85c13596ee981" translate="yes" xml:space="preserve">
          <source>Is SSE4a supported?</source>
          <target state="translated">SSE4a가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="529c14236ce5d57c81f18ee3d3a4955d0294b830" translate="yes" xml:space="preserve">
          <source>Is SSSE3 supported?</source>
          <target state="translated">SSSE3가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="404210ae982e5f7c6d767bb288604a99c837412d" translate="yes" xml:space="preserve">
          <source>Is SYSENTER/SYSEXIT supported?</source>
          <target state="translated">SYSENTER / SYSEXIT가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="450d6103658425cd9504ee4df7c88ea3022b9390" translate="yes" xml:space="preserve">
          <source>Is VEX-Encoded AES supported</source>
          <target state="translated">VEX 인코딩 AES 지원</target>
        </trans-unit>
        <trans-unit id="090d249f369062f8bff47b9ddec54f12692fd4a6" translate="yes" xml:space="preserve">
          <source>Is cmov supported?</source>
          <target state="translated">cmov가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="4682b61ccc8c6c8dc42bb1758c22ede1faa7aa70" translate="yes" xml:space="preserve">
          <source>Is cmpxchg8b supported?</source>
          <target state="translated">cmpxchg8b가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="4c79a0ed65f9de836b7df77c8ebe47ee651df5f2" translate="yes" xml:space="preserve">
          <source>Is fxsave/fxrstor supported?</source>
          <target state="translated">fxsave / fxrstor가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="10bf6a2965400ad25296374bbb8440c96335239a" translate="yes" xml:space="preserve">
          <source>Is hyperthreading supported?</source>
          <target state="translated">하이퍼 스레딩이 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="a5f2a790fe86ca51a7f46c97943c8a348c7f5979" translate="yes" xml:space="preserve">
          <source>Is pclmulqdq supported</source>
          <target state="translated">pclmulqdq가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="2a6a47b81fa80057015751ef0056cd96c0603472" translate="yes" xml:space="preserve">
          <source>Is rdrand supported</source>
          <target state="translated">드 랜드 지원</target>
        </trans-unit>
        <trans-unit id="6f50c3df0513611496a720e7e34cdb66b04a1e3a" translate="yes" xml:space="preserve">
          <source>Is rdseed supported</source>
          <target state="translated">rdseed 지원</target>
        </trans-unit>
        <trans-unit id="1b5795edb49e0d328ee0397e5dce20a3f8b369c8" translate="yes" xml:space="preserve">
          <source>Is rdtsc supported?</source>
          <target state="translated">rdtsc가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="dfd22e079be218467567ed6e211af022226073d8" translate="yes" xml:space="preserve">
          <source>Is the binary representation of x identical to y?</source>
          <target state="translated">x의 이진 표현은 y와 동일합니까?</target>
        </trans-unit>
        <trans-unit id="a87a317711c3473ef594a6e7226a2007eeb63603" translate="yes" xml:space="preserve">
          <source>Is this Object an error?</source>
          <target state="translated">이 개체가 오류입니까?</target>
        </trans-unit>
        <trans-unit id="c56d42e2850dbb730db38fb3fb842af85b06b699" translate="yes" xml:space="preserve">
          <source>Is this an IA64 (Itanium) processor?</source>
          <target state="translated">이 프로세서는 IA64 (Itanium) 프로세서입니까?</target>
        </trans-unit>
        <trans-unit id="590cbb39e0a9b8c9390941a2aa58bbc453391eef" translate="yes" xml:space="preserve">
          <source>Is this an Intel64 or AMD 64?</source>
          <target state="translated">이것이 Intel64 또는 AMD 64입니까?</target>
        </trans-unit>
        <trans-unit id="d0d49c2fad2d9f63ec74430d77ec2053e17a49b3" translate="yes" xml:space="preserve">
          <source>Is vpclmulqdq supported</source>
          <target state="translated">vpclmulqdq가 지원됩니까?</target>
        </trans-unit>
        <trans-unit id="08035875f56e0a7aaa6e8c7ee6e9504e25d6cf00" translate="yes" xml:space="preserve">
          <source>IsExpression</source>
          <target state="translated">IsExpression</target>
        </trans-unit>
        <trans-unit id="eee32f816f5a7cde2bef5f55991e6f12cf112eeb" translate="yes" xml:space="preserve">
          <source>IsExpression can evaluate the specified type speculatively, and even if it instantiates any symbols, they are normally unnecessary for the final executable. However, if those symbols leak to the actual code, compiler should remark them as non-speculative to generate their code and link to the final executable.</source>
          <target state="translated">IsExpression은 지정된 형식을 추측 적으로 평가할 수 있으며, 기호를 인스턴스화하더라도 최종 실행 파일에는 일반적으로 필요하지 않습니다. 그러나 이러한 기호가 실제 코드로 누출되는 경우 컴파일러는 코드를 생성하고 최종 실행 파일에 연결하기 위해 비추 론적이라고 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="49ab23d851863d880110f3e4fecbd30226e2ce4e" translate="yes" xml:space="preserve">
          <source>IsMarkedDg &lt;code&gt;isMarked&lt;/code&gt;</source>
          <target state="translated">IsMarkedDg &lt;code&gt;isMarked&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb1dcbf5199bd4639373c8360fb756c6fa15a754" translate="yes" xml:space="preserve">
          <source>Issue an error if an attempt to call a disabled method is made</source>
          <target state="translated">비활성화 된 메서드를 호출하려고하면 오류가 발생합니다</target>
        </trans-unit>
        <trans-unit id="4d017c10e9874a730f28063522651ca1ebea765b" translate="yes" xml:space="preserve">
          <source>Issuer certificate</source>
          <target state="translated">발급자 인증서</target>
        </trans-unit>
        <trans-unit id="4fe343344c692492a360f8a89fee5b22e51d1c7a" translate="yes" xml:space="preserve">
          <source>Issuing individual checked operations is flexible and efficient but often tedious. The &lt;a href=&quot;#Checked&quot;&gt;&lt;code&gt;Checked&lt;/code&gt;&lt;/a&gt; facility offers encapsulated integral wrappers that do all checking internally and have configurable behavior upon erroneous results. For example, &lt;code&gt;Checked!int&lt;/code&gt; is a type that behaves like &lt;code&gt;int&lt;/code&gt; but aborts execution immediately whenever involved in an operation that produces the arithmetically wrong result. The accompanying convenience function &lt;a href=&quot;#checked&quot;&gt;&lt;code&gt;checked&lt;/code&gt;&lt;/a&gt; uses type deduction to convert a value &lt;code&gt;x&lt;/code&gt; of integral type &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;Checked!T&lt;/code&gt; by means of &lt;code&gt;checked(x)&lt;/code&gt;. For example:</source>
          <target state="translated">개별 점검 작업을 수행하는 것은 유연하고 효율적이지만 종종 지루합니다. &lt;a href=&quot;#Checked&quot;&gt; &lt;code&gt;Checked&lt;/code&gt; &lt;/a&gt; 시설의 제공은 내부적으로 모든 검사를하고 잘못된 결과에 따라 구성 동작을 통합 래퍼를 캡슐화. 예를 들어, &lt;code&gt;Checked!int&lt;/code&gt; 같은 동작하는지 유형입니다 &lt;code&gt;int&lt;/code&gt; 하지만 중단 및 실행이 즉시마다 산술적으로 잘못된 결과를 생성하는 작업에 참여는. 첨부 편의 기능 &lt;a href=&quot;#checked&quot;&gt; &lt;code&gt;checked&lt;/code&gt; &lt;/a&gt; 값으로 변환하는 데 사용하는 형태 공제 &lt;code&gt;x&lt;/code&gt; 일체형의 &lt;code&gt;T&lt;/code&gt; 를 로 &lt;code&gt;Checked!T&lt;/code&gt; 에 의해 &lt;code&gt;checked(x)&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b6e2e0208dac0f7f4751f05b1125349dc8d7c5b3" translate="yes" xml:space="preserve">
          <source>It advances the input to the position following the conversion.</source>
          <target state="translated">변환 후의 위치로 입력을 진행시킵니다.</target>
        </trans-unit>
        <trans-unit id="46166dd58ab2730e4524ad59d57d2593327727bb" translate="yes" xml:space="preserve">
          <source>It also provides a faster, low level API working with data of size &lt;code&gt;Element.sizeof&lt;/code&gt;:</source>
          <target state="translated">또한 &lt;code&gt;Element.sizeof&lt;/code&gt; 크기의 데이터로 작업하는 더 빠르고 낮은 수준의 API를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="6d3cceeb2328306e2f02f11a51f27695f47f4e9b" translate="yes" xml:space="preserve">
          <source>It also provides number of templates that test for various range capabilities:</source>
          <target state="translated">또한 다양한 범위의 기능을 테스트하는 많은 템플릿을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5bbf72a08a99011dd111dd6ad452e903cd2d15d9" translate="yes" xml:space="preserve">
          <source>It also works with &lt;code&gt;@property&lt;/code&gt; functions:</source>
          <target state="translated">&lt;code&gt;@property&lt;/code&gt; 함수 와도 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="388df630c47cc2e867f2d3350d1778d5f83b482f" translate="yes" xml:space="preserve">
          <source>It can be used to conditionally compile declarations, not just statements.</source>
          <target state="translated">명령문뿐만 아니라 선언을 조건부로 컴파일하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a01fcab203354384dc4d73ca3e1bd07777c3122" translate="yes" xml:space="preserve">
          <source>It can only be used once in a method declaration</source>
          <target state="translated">메소드 선언에서 한 번만 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="0dae2f02f995eb1175253988c98f27cbe75176d3" translate="yes" xml:space="preserve">
          <source>It cannot be attached to a method or constructor that is a template</source>
          <target state="translated">템플리트 인 메소드 또는 생성자에 첨부 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0bbe25588da1b447488b6253a7ca8c0b345decd4" translate="yes" xml:space="preserve">
          <source>It cannot be the argument to &lt;a href=&quot;https://dlang.org/phobos/object.html#destroy&quot;&gt;&lt;code&gt;destroy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://dlang.org/phobos/object.html#destroy&quot;&gt; &lt;code&gt;destroy&lt;/code&gt; &lt;/a&gt; 하는 주장이 될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8b94459fe2cd15aac6dbdf1ba866c322026a497f" translate="yes" xml:space="preserve">
          <source>It defines the bidirectional and forward range primitives for arrays: &lt;a href=&quot;#empty&quot;&gt;&lt;code&gt;empty&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#front&quot;&gt;&lt;code&gt;front&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#back&quot;&gt;&lt;code&gt;back&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#popFront&quot;&gt;&lt;code&gt;popFront&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#popBack&quot;&gt;&lt;code&gt;popBack&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#save&quot;&gt;&lt;code&gt;save&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">배열의 양방향 및 순방향 범위 기본 요소를 정의합니다 ( &lt;a href=&quot;#empty&quot;&gt; &lt;code&gt;empty&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#front&quot;&gt; &lt;code&gt;front&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#back&quot;&gt; &lt;code&gt;back&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#popFront&quot;&gt; &lt;code&gt;popFront&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#popBack&quot;&gt; &lt;code&gt;popBack&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#save&quot;&gt; &lt;code&gt;save&lt;/code&gt; )&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65ecf79245a02b6d2395f79fbb54723afe4759a9" translate="yes" xml:space="preserve">
          <source>It derives from the interface &lt;code&gt;core.stdc.windows.com.IUnknown&lt;/code&gt;.</source>
          <target state="translated">인터페이스 &lt;code&gt;core.stdc.windows.com.IUnknown&lt;/code&gt; 인터페이스에서 파생됩니다 .</target>
        </trans-unit>
        <trans-unit id="b7a236332866cc1e66837407aa52f7caefef2e68" translate="yes" xml:space="preserve">
          <source>It does keep: live connections, the Session ID cache, the DNS cache and the cookies.</source>
          <target state="translated">라이브 연결, 세션 ID 캐시, DNS 캐시 및 쿠키를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="dd4fef0b32a7281d59a31a40d6f87fe5bfa58814" translate="yes" xml:space="preserve">
          <source>It does not introduce a new scope even if &lt;code&gt;{ }&lt;/code&gt; are used for conditionally compiled statements.</source>
          <target state="translated">&lt;code&gt;{ }&lt;/code&gt; 가 조건부 컴파일 된 명령문에 사용 되더라도 새로운 범위를 도입하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a5f6a69aa258b6687ed9d04070e059ea5562bf0a" translate="yes" xml:space="preserve">
          <source>It does not repeat information that the compiler already knows from parsing the code.</source>
          <target state="translated">컴파일러가 코드 구문 분석에서 이미 알고있는 정보는 반복하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7398e9c5d59f69e46f788c84807092237aa5e4d5" translate="yes" xml:space="preserve">
          <source>It does not throw if it could not convert the entire input.</source>
          <target state="translated">전체 입력을 변환 할 수없는 경우 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2873a218fbe5af0054d62beddeb0e65fcfb61635" translate="yes" xml:space="preserve">
          <source>It doesn't rely on embedded HTML, as such will impede extraction and formatting for other purposes.</source>
          <target state="translated">임베디드 HTML에 의존하지 않으므로 다른 목적으로 추출 및 서식을 방해 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1aba479bf876b78d7763f04b36ad2a837b806ed" translate="yes" xml:space="preserve">
          <source>It eliminates the need for IDL (interface description language) as a separate language.</source>
          <target state="translated">별도의 언어로 IDL (인터페이스 설명 언어)이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9be52d2dd0c55abff440ef5dc05f4f1413d2dc2c" translate="yes" xml:space="preserve">
          <source>It fits in EAX.</source>
          <target state="translated">EAX에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="5c9e2828459632652d41e10b6eaced3e8290b5c9" translate="yes" xml:space="preserve">
          <source>It indicates if a statement does transfer control to another block. A block is a sequence of statements enclosed in { }</source>
          <target state="translated">명령문이 제어를 다른 블록으로 전송하는지 여부를 나타냅니다. 블록은 {}로 묶인 일련의 명령문입니다.</target>
        </trans-unit>
        <trans-unit id="b4f712b66715ddaa764c3d26a22ac83adf4c4dc7" translate="yes" xml:space="preserve">
          <source>It is acceptable for an implementation to store bit flags into pointer values and GC-managed memory blocks, so long as such a trick is not visible to the application. In practice, this means that only a stop-the-world collector can do this.</source>
          <target state="translated">구현이 비트 플래그를 포인터 값과 GC 관리 메모리 블록에 저장하는 것은 허용되지만, 그러한 트릭이 응용 프로그램에 표시되지 않는 한 가능합니다. 실제로 이는 세계 일류 수집가 만이이를 수행 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6213c9975eabd46633dd5a1abb7787690a6d9654" translate="yes" xml:space="preserve">
          <source>It is also possible to &lt;code&gt;override&lt;/code&gt; the three methods &lt;code&gt;beginLogMsg&lt;/code&gt;, &lt;code&gt;logMsgPart&lt;/code&gt; and &lt;code&gt;finishLogMsg&lt;/code&gt; together, this option gives more flexibility.</source>
          <target state="translated">&lt;code&gt;beginLogMsg&lt;/code&gt; , &lt;code&gt;logMsgPart&lt;/code&gt; 및 &lt;code&gt;finishLogMsg&lt;/code&gt; 세 가지 메소드 를 &lt;code&gt;override&lt;/code&gt; 할 수도 있습니다 .이 옵션을 사용하면 유연성이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="62c19d777ce9c9b0fe6e64b8266c59dbe78a3247" translate="yes" xml:space="preserve">
          <source>It is also possible to indirectly interface with C++ code, either through a &lt;a href=&quot;interfacetoc&quot;&gt;C interface&lt;/a&gt; or a COM interface.</source>
          <target state="translated">&lt;a href=&quot;interfacetoc&quot;&gt;C 인터페이스&lt;/a&gt; 또는 COM 인터페이스를 통해 C ++ 코드와 간접적으로 인터페이스 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d898d765860a5d45edda7c7ed8509568c1f68566" translate="yes" xml:space="preserve">
          <source>It is an error if &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt; cannot be implicitly converted to a boolean type or if it cannot be evaluated at compile time.</source>
          <target state="translated">&lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt; 을 내재적으로 부울 유형으로 변환 할 수 없거나 컴파일시 평가할 수없는 경우 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="86e5855ead30ccc2c8c56869cbcf6e5f74be6875" translate="yes" xml:space="preserve">
          <source>It is an error if any</source>
          <target state="translated">있다면 오류입니다</target>
        </trans-unit>
        <trans-unit id="a81c091005be4792f067f57e1989fc7c8d13b625" translate="yes" xml:space="preserve">
          <source>It is an error to compare objects if one is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">객체가 &lt;code&gt;null&lt;/code&gt; 인 경우 객체를 비교하는 것은 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="50b2fd8434663e2c4ccea539ac2a01804fab3bbd" translate="yes" xml:space="preserve">
          <source>It is an error to declare a local variable that hides another local variable in the same function:</source>
          <target state="translated">동일한 함수에서 다른 로컬 변수를 숨기는 로컬 변수를 선언하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="deced31ce7ffb700a549b08afe6a6138a69db040" translate="yes" xml:space="preserve">
          <source>It is an error to have a local variable and a label with the same name.</source>
          <target state="translated">로컬 변수와 이름이 같은 레이블을 갖는 것은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="b508914e98b3adb1d20ab50fa10434c25d029458" translate="yes" xml:space="preserve">
          <source>It is an error to have one operand be signed and the other unsigned for a &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt; expression. Use casts to make both operands signed or both operands unsigned.</source>
          <target state="translated">하나의 피연산자가 서명되고 다른 피연산자는 &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; 표현식에 대해 부호가없는 것은 오류 입니다. 캐스트를 사용하여 두 피연산자 모두 또는 부호없는 피연산자를 모두 부호없이 만드십시오.</target>
        </trans-unit>
        <trans-unit id="f0e09315dbb83014f54364159107933f95171232" translate="yes" xml:space="preserve">
          <source>It is an error to index an array with an index that is less than 0 or greater than or equal to the array length. If an index is out of bounds, a RangeError exception is raised if detected at runtime, and an error if detected at compile time. A program may not rely on array bounds checking happening, for example, the following program is incorrect:</source>
          <target state="translated">배열 길이가 0보다 작거나 같은 인덱스를 사용하여 배열을 인덱싱하는 것은 오류입니다. 인덱스가 범위를 벗어난 경우 런타임에 감지되면 RangeError 예외가 발생하고 컴파일 타임에 감지되면 오류가 발생합니다. 프로그램이 발생하는 배열 범위 검사에 의존하지 않을 수 있습니다 (예 : 다음 프로그램이 올바르지 않음).</target>
        </trans-unit>
        <trans-unit id="f64a85acc1469fbd56318c719228c9c1fe16bf9c" translate="yes" xml:space="preserve">
          <source>It is an error to return the address of or a reference to a local variable.</source>
          <target state="translated">로컬 변수의 주소 또는 참조를 반환하는 것은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="b4576fb929afa6bbf00d340772ed152adcae3cb1" translate="yes" xml:space="preserve">
          <source>It is an error to use a local variable without first assigning it a value. The implementation may not always be able to detect these cases. Other language compilers sometimes issue a warning for this, but since it is always a bug, it should be an error.</source>
          <target state="translated">먼저 값을 할당하지 않고 지역 변수를 사용하는 것은 오류입니다. 구현시 항상 이러한 경우를 감지하지 못할 수도 있습니다. 다른 언어 컴파일러는 때때로 이것에 대해 경고를하지만, 항상 버그이기 때문에 오류가되어야합니다.</target>
        </trans-unit>
        <trans-unit id="1caf8aa0590016aadf8cff449e680fd2d8713321" translate="yes" xml:space="preserve">
          <source>It is defined to be exactly the reverse order that static construction was performed in. Static destructors for individual modules will only be run if the corresponding static constructor successfully completed.</source>
          <target state="translated">정적 구성이 수행 된 순서와 정확히 반대로 정의됩니다. 개별 모듈의 정적 소멸자는 해당 정적 생성자가 성공적으로 완료된 경우에만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="2c2f3bba7f5994912f6b95d05cb1814084516245" translate="yes" xml:space="preserve">
          <source>It is easy to make the error handling source code look good.</source>
          <target state="translated">오류 처리 소스 코드를보기 좋게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6ed05c87a248603343b54bb16aa1fab9bfe8f53" translate="yes" xml:space="preserve">
          <source>It is here to allow the deprecated behavior from the original algorithm until people have fixed their code.</source>
          <target state="translated">사람들이 코드를 고칠 때까지 원래 알고리즘에서 더 이상 사용되지 않는 동작을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="401996678962e7e20129e6958a7d5a0d314109af" translate="yes" xml:space="preserve">
          <source>It is illegal for a</source>
          <target state="translated">불법입니다</target>
        </trans-unit>
        <trans-unit id="37d2d71b2b05147b31590276dc23d6c43bb3d76c" translate="yes" xml:space="preserve">
          <source>It is illegal for constructors to mutually call each other.</source>
          <target state="translated">생성자가 서로를 호출하는 것은 불법입니다.</target>
        </trans-unit>
        <trans-unit id="2b7e7cafd673ed4d2e6ef523c1c9b32587567990" translate="yes" xml:space="preserve">
          <source>It is illegal to forward reference a debug specification:</source>
          <target state="translated">디버그 사양을 전달 참조하는 것은 불법입니다.</target>
        </trans-unit>
        <trans-unit id="f53c060570ada118f69ba3973c4ac1d18651ca16" translate="yes" xml:space="preserve">
          <source>It is illegal to refer to &lt;code&gt;this&lt;/code&gt; implicitly or explicitly prior to making a delegate constructor call.</source>
          <target state="translated">델리게이트 생성자 호출을하기 전에 &lt;code&gt;this&lt;/code&gt; 암시 적으로 또는 명시 적으로 언급하는 것은 불법 입니다.</target>
        </trans-unit>
        <trans-unit id="335e107a42af5a98628c149f6e1b4ca0b49e01e5" translate="yes" xml:space="preserve">
          <source>It is important to make sure that, if &lt;code&gt;opApply&lt;/code&gt; catches any exceptions, that those exceptions did not originate from the delegate passed to</source>
          <target state="translated">&lt;code&gt;opApply&lt;/code&gt; 가 예외를 발견하면 해당 예외가 전달 된 대리자에서 시작되지 않았 는지 확인하는 것이 중요 합니다.</target>
        </trans-unit>
        <trans-unit id="79663ac4e329be90782f60edf1e6177dca459550" translate="yes" xml:space="preserve">
          <source>It is important to note that as the resultant range is evaluated lazily, in the case of the version of &lt;code&gt;tee&lt;/code&gt; that takes a function, the function will not actually be executed until the range is &quot;walked&quot; using functions that evaluate ranges, such as &lt;a href=&quot;std_array#array&quot;&gt;&lt;code&gt;std.array.array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;std_algorithm_iteration#fold&quot;&gt;&lt;code&gt;std.algorithm.iteration.fold&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">결과 범위가 느리게 평가 되므로 함수를 사용하는 &lt;code&gt;tee&lt;/code&gt; 버전의 경우 &lt;a href=&quot;std_array#array&quot;&gt; &lt;code&gt;std.array.array&lt;/code&gt; &lt;/a&gt; 와 같은 범위를 평가하는 함수를 사용하여 범위를 &quot;걸을&quot;때까지 함수가 실제로 실행되지 않습니다. .array.array 또는 &lt;a href=&quot;std_algorithm_iteration#fold&quot;&gt; &lt;code&gt;std.algorithm.iteration.fold&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd820e0e37cf31d63e1d31e908c7138e4dab72e2" translate="yes" xml:space="preserve">
          <source>It is important to use the right version identifier for the right purpose. For example, use the vendor identifier when using a vendor specific feature. Use the operating system identifier when using an operating system specific feature, etc.</source>
          <target state="translated">올바른 목적으로 올바른 버전 식별자를 사용하는 것이 중요합니다. 예를 들어 공급 업체별 기능을 사용할 때는 공급 업체 식별자를 사용하십시오. 운영 체제 별 기능 등을 사용할 때는 운영 체제 식별자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f2a8e8ef94cccc304c27c70467bf612cabf2c765" translate="yes" xml:space="preserve">
          <source>It is inevitable that the D language will evolve over time. Therefore, the version identifier namespace beginning with &quot;D_&quot; is reserved for identifiers indicating D language specification or new feature conformance. Further, all identifiers derived from the ones listed above by appending any character(s) are reserved. This means that e.g. &lt;code&gt;ARM_foo&lt;/code&gt; and &lt;code&gt;Windows_bar&lt;/code&gt; are reserved while &lt;code&gt;foo_ARM&lt;/code&gt; and &lt;code&gt;bar_Windows&lt;/code&gt; are not.</source>
          <target state="translated">D 언어가 시간이 지남에 따라 진화한다는 것은 불가피합니다. 따라서 &quot;D_&quot;로 시작하는 버전 식별자 네임 스페이스는 D 언어 사양 또는 새로운 기능 준수를 나타내는 식별자 용으로 예약되어 있습니다. 또한, 임의의 문자 (들)를 추가함으로써 상기 열거 된 것으로부터 유도 된 모든 식별자는 예약되어있다. 즉, 예를 들어 &lt;code&gt;ARM_foo&lt;/code&gt; 및 &lt;code&gt;Windows_bar&lt;/code&gt; 는 예약되어 있지만 &lt;code&gt;foo_ARM&lt;/code&gt; 및 &lt;code&gt;bar_Windows&lt;/code&gt; 는 예약되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="87b18dd6b84ff4211bbe466a6c57cc9ae711b259" translate="yes" xml:space="preserve">
          <source>It is lowered to:</source>
          <target state="translated">다음과 같이 낮아집니다.</target>
        </trans-unit>
        <trans-unit id="f91d0be00faa70d257f22e2edf4d36bee26e53e0" translate="yes" xml:space="preserve">
          <source>It is not a 3 byte struct.</source>
          <target state="translated">3 바이트 구조체가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="168bb789a8929c7fb4c3b7215efb1856903be685" translate="yes" xml:space="preserve">
          <source>It is not a floating point type.</source>
          <target state="translated">부동 소수점 유형이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="19fdb6fcd666a00fa90a8ed40bb00013c2391043" translate="yes" xml:space="preserve">
          <source>It is not always obvious when the GC allocates memory, which in turn can trigger a collection, so the program can pause unexpectedly.</source>
          <target state="translated">GC가 메모리를 할당 할 때 항상 분명하지는 않으며, 이로 인해 콜렉션이 트리거 될 수 있으므로 프로그램이 예기치 않게 일시 정지 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cac6b46e927506f607254cff1ed6929147fa588" translate="yes" xml:space="preserve">
          <source>It is not an error if the return type does not contain any indirections.</source>
          <target state="translated">리턴 유형에 간접 지시 사항이없는 경우 오류가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="981cc7a3cecab94e0dd1f8ddc96a87527d95e530" translate="yes" xml:space="preserve">
          <source>It is not necessary to do this inside a code section, or if the special character is not immediately followed by a # or a letter.</source>
          <target state="translated">코드 섹션 내에서 또는 특수 문자 바로 뒤에 # 또는 문자가 오는 경우에는이 작업을 수행 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6319193259ecd329b1ff6f0a8e1c2a9fd8f24dd7" translate="yes" xml:space="preserve">
          <source>It is not possible to have both &lt;code&gt;return ref&lt;/code&gt; and &lt;code&gt;return scope&lt;/code&gt; semantics for the same parameter.</source>
          <target state="translated">동일한 매개 변수에 대해 &lt;code&gt;return ref&lt;/code&gt; 및 &lt;code&gt;return scope&lt;/code&gt; 시맨틱을 둘 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="443f05c094b69d1507e35079eeb79f6782e9920f" translate="yes" xml:space="preserve">
          <source>It is often necessary to deprecate a feature in a library, yet retain it for backwards compatibility. Such declarations can be marked as &lt;code&gt;deprecated&lt;/code&gt;, which means that the compiler can be instructed to produce an error if any code refers to deprecated declarations:</source>
          <target state="translated">라이브러리에서 기능을 폐기해야하지만 이전 버전과의 호환성을 위해 유지해야합니다. 이러한 선언은 &lt;code&gt;deprecated&lt;/code&gt; 로 표시 될 수 있습니다. 즉, 코드에서 사용되지 않는 선언을 참조하는 경우 컴파일러에서 오류를 생성하도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="899360132ed9309c950103047c7e2c814b318ec0" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;a href=&quot;#byLine&quot;&gt;&lt;code&gt;byLine&lt;/code&gt;&lt;/a&gt; and uses &lt;a href=&quot;std_format#formattedRead&quot;&gt;format&lt;/a&gt; under the hood.</source>
          <target state="translated">&lt;a href=&quot;#byLine&quot;&gt; &lt;code&gt;byLine&lt;/code&gt; &lt;/a&gt; 과 유사 하며 후드 아래에서 &lt;a href=&quot;std_format#formattedRead&quot;&gt;형식&lt;/a&gt; 을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="717aec823e7fb6c544e08d1714d73ef54e5ff0b7" translate="yes" xml:space="preserve">
          <source>It is sometimes useful to get or set the 16 bytes of a UUID directly.</source>
          <target state="translated">UUID의 16 바이트를 직접 가져 오거나 설정하는 것이 유용한 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9604c47d97361773acea3965fa6498d863d32be" translate="yes" xml:space="preserve">
          <source>It is standardized - consistent usage makes it more useful.</source>
          <target state="translated">표준화되어 있으며 일관된 사용으로보다 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0ea1205f3456f768018243f6d5512a314f402d18" translate="yes" xml:space="preserve">
          <source>It is straightforward to link C functions and libraries into D programs. But linking D functions and libraries into C programs is not straightforward.</source>
          <target state="translated">C 함수와 라이브러리를 D 프로그램에 연결하는 것은 간단합니다. 그러나 D 함수와 라이브러리를 C 프로그램에 연결하는 것은 간단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="700ae48bba8932b3ce97ed7ab816d7e993a4eec8" translate="yes" xml:space="preserve">
          <source>It is therefore recommended to always construct containers using &lt;a href=&quot;std_container_util#make&quot;&gt;&lt;code&gt;std.container.util.make&lt;/code&gt;&lt;/a&gt;.  This is in fact necessary to put containers into another container. For example, to construct an &lt;code&gt;Array&lt;/code&gt; of ten empty &lt;code&gt;Array&lt;/code&gt;s, use the following that calls &lt;code&gt;make&lt;/code&gt; ten times.</source>
          <target state="translated">따라서 항상 &lt;a href=&quot;std_container_util#make&quot;&gt; &lt;code&gt;std.container.util.make&lt;/code&gt; 를&lt;/a&gt; 사용하여 컨테이너를 구성하는 것이 좋습니다 . 이것은 실제로 컨테이너를 다른 컨테이너에 넣는 데 필요합니다. 예를 들어, 구성하는 &lt;code&gt;Array&lt;/code&gt; 열 빈의 &lt;code&gt;Array&lt;/code&gt; ,의를 호출하는 다음 사용 &lt;code&gt;make&lt;/code&gt; 열 번.</target>
        </trans-unit>
        <trans-unit id="c0f045f8d032f9691206ca37e7e3ca551f6091bd" translate="yes" xml:space="preserve">
          <source>It is used when representing a duration of time - such as how long to sleep with &lt;a href=&quot;core_thread#Thread.sleep&quot;&gt;&lt;code&gt;core.thread.Thread.sleep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;core_thread#Thread.sleep&quot;&gt; &lt;code&gt;core.thread.Thread.sleep&lt;/code&gt; &lt;/a&gt; 과 같은 잠자기 시간과 같은 지속 시간을 나타낼 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d17dae53faa2b792c553146cb98e6c93618b8a4c" translate="yes" xml:space="preserve">
          <source>It looks good as embedded documentation, not just after it is extracted and processed.</source>
          <target state="translated">압축을 풀고 처리 한 직후가 아니라 내장 문서처럼보기 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2f3af10aa872e5f155c2078162ede3e60918478c" translate="yes" xml:space="preserve">
          <source>It may seem like too small of a difference in time for the attacker to notice, but security researchers have shown that differences as small as &lt;a href=&quot;http://www.cs.rice.edu/~dwallach/pub/crosby-timing2009.pdf&quot;&gt; 20&amp;micro;s can be reliably distinguished&lt;/a&gt; even with network inconsistencies.</source>
          <target state="translated">공격자가 알아 차리는 데 시간 차이가 너무 작은 것처럼 보이지만 보안 연구원들은 네트워크 불일치에서도 &lt;a href=&quot;http://www.cs.rice.edu/~dwallach/pub/crosby-timing2009.pdf&quot;&gt;20&amp;micro;s&lt;/a&gt; 정도의 작은 차이를 확실하게 구별 할 수 있음 을 보여주었습니다 .</target>
        </trans-unit>
        <trans-unit id="e6bd568b36725af76c85e86c49755d1465281c06" translate="yes" xml:space="preserve">
          <source>It must be evaluatable at compile time.</source>
          <target state="translated">컴파일 타임에 평가할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="69ae13c3dc07d0583f5f9b4087b39b94ed079ad6" translate="yes" xml:space="preserve">
          <source>It must use the same tokens as the D language uses.</source>
          <target state="translated">D 언어와 동일한 토큰을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="849081081f66a4a05cbf4ef99fbb6b7ad19734c6" translate="yes" xml:space="preserve">
          <source>It only works with character ranges as input.</source>
          <target state="translated">문자 범위에서만 입력으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="26c52ead977622939ef1b1062f122f932ed614a0" translate="yes" xml:space="preserve">
          <source>It provides access to various aspects of the module. It is not generated for betterC.</source>
          <target state="translated">모듈의 다양한 측면에 대한 액세스를 제공합니다. betterC에 대해서는 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f97c61fa3add53b120631d892e86b2c2046852a3" translate="yes" xml:space="preserve">
          <source>It provides basic range functionality by defining several templates for testing whether a given object is a range, and what kind of range it is:</source>
          <target state="translated">주어진 객체가 범위인지, 그리고 어떤 종류의 범위인지 테스트하기 위해 여러 템플릿을 정의하여 기본 범위 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ad6aacf59fb942f6e1cdc563ab119d5d18d3e55f" translate="yes" xml:space="preserve">
          <source>It provides more information to the compiler, enabling more error checking and possibly better code generation.</source>
          <target state="translated">컴파일러에 더 많은 정보를 제공하여 더 많은 오류 검사 및 코드 생성 가능성을 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ba24c42088804a0d4be1a3309025dbeb98b12af" translate="yes" xml:space="preserve">
          <source>It should be possible for the user to use Doxygen or other documentation extractor if desired.</source>
          <target state="translated">원하는 경우 사용자가 Doxygen 또는 기타 문서 추출기를 사용할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="093b315d1b92cd8c4da60adb8a7239b6a8739b1d" translate="yes" xml:space="preserve">
          <source>It should look and feel different from code, so it won't be visually confused with code.</source>
          <target state="translated">코드와 모양과 느낌이 다르므로 코드와 시각적으로 혼동되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ab78acfffc9bf5190ce6cb7b40dbee5c908a5208" translate="yes" xml:space="preserve">
          <source>It takes the input by reference. (This means that rvalues - such as string literals - are not accepted: use &lt;code&gt;to&lt;/code&gt; instead.)</source>
          <target state="translated">참조로 입력을받습니다. (이 방법은 우변 있음 - 이러한 문자열 리터럴로는 - 허용되지 않습니다 : 사용 &lt;code&gt;to&lt;/code&gt; 대신.)</target>
        </trans-unit>
        <trans-unit id="e10cbd22ba1e750ba124936549407411b37b8cea" translate="yes" xml:space="preserve">
          <source>It takes three forms:</source>
          <target state="translated">세 가지 형태가 있습니다.</target>
        </trans-unit>
        <trans-unit id="050370d910aa58f3109ec31e86d6b4499d187cdf" translate="yes" xml:space="preserve">
          <source>It uses well defined standard rules of property name lookup. This includes fuzzy matching of names, so that 'White_Space', 'white-SpAce' and 'whitespace' are all considered equal and yield the same set of white space &lt;a href=&quot;#Character&quot;&gt;characters&lt;/a&gt;.</source>
          <target state="translated">잘 정의 된 속성 이름 조회 표준 규칙을 사용합니다. 여기에는 이름의 퍼지 일치가 포함되므로 'White_Space', 'white-SpAce'및 'whitespace'는 모두 동일하게 간주되며 동일한 공백 &lt;a href=&quot;#Character&quot;&gt;문자&lt;/a&gt; 세트를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="93a7b2f1dac61a8d7598e3760cd8188b02968b69" translate="yes" xml:space="preserve">
          <source>It will be a &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt; if the underlying data source is at least a forward range.</source>
          <target state="translated">그것은 것이다 &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;전방 영역&lt;/a&gt; 내부 데이터 소스는 적어도 전진 레인지이면.</target>
        </trans-unit>
        <trans-unit id="5ade996eab3bb94cd2a7d5f8def981c1ae053558" translate="yes" xml:space="preserve">
          <source>It's also possible to &lt;code&gt;put&lt;/code&gt; any width strings or characters into narrow strings -- put does the conversion for you.  Note that putting the same width character as the target buffer type is &lt;code&gt;nothrow&lt;/code&gt;, but transcoding can throw a &lt;a href=&quot;std_utf#UTFException&quot;&gt;&lt;code&gt;std.utf.UTFException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그것은 수도 &lt;code&gt;put&lt;/code&gt; 좁은 문자열로 어떤 폭 문자열이나 문자 - 풋은 당신을 위해 변환을 수행합니다. 주 목표 버퍼 유형으로 같은 폭 문자를 넣어하는 것을 &lt;code&gt;nothrow&lt;/code&gt; 하지만 트랜스 코딩이 던질 수 &lt;a href=&quot;std_utf#UTFException&quot;&gt; &lt;code&gt;std.utf.UTFException&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="15967cde9e56b07a7f1c26d7a69e1a075aff9a00" translate="yes" xml:space="preserve">
          <source>It's based on existing D comment forms, so it is completely independent of parsers only interested in D code.</source>
          <target state="translated">기존 D 주석 양식을 기반으로하므로 D 코드에만 관심있는 파서와 완전히 독립적입니다.</target>
        </trans-unit>
        <trans-unit id="df30e895e5cea990b692a026e7012b1b8ed9990f" translate="yes" xml:space="preserve">
          <source>It's easy and natural to write, i.e. minimal reliance on &amp;lt;tags&amp;gt; and other clumsy forms one would never see in a finished document.</source>
          <target state="translated">작성하기 쉽고 자연 스럽습니다. 즉, &amp;lt;tags&amp;gt; 및 완성 된 문서에서는 결코 볼 수없는 다른 서투른 형태에 대한 최소한의 의존입니다.</target>
        </trans-unit>
        <trans-unit id="90363d2d1fd187921f9df756c4f8841ea45cbd8c" translate="yes" xml:space="preserve">
          <source>It's good software engineering practice to minimize gratuitous portability problems in the code. Techniques to minimize potential portability problems are:</source>
          <target state="translated">코드에서 불필요한 이식성 문제를 최소화하는 것은 좋은 소프트웨어 엔지니어링 사례입니다. 잠재적 인 이식성 문제를 최소화하는 기술은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="676010a0cf026e4e46adb9fc97725347e3cf4b56" translate="yes" xml:space="preserve">
          <source>It's illegal to move a class instance even if you are sure there are no pointers to it. As such, it is illegal to move a scoped object.</source>
          <target state="translated">포인터가없는 경우에도 클래스 인스턴스를 이동하는 것은 불법입니다. 따라서 범위가 지정된 개체를 이동하는 것은 불법입니다.</target>
        </trans-unit>
        <trans-unit id="1d0ecd13133638bfea893649adf9f413f5146027" translate="yes" xml:space="preserve">
          <source>It's illegal to shift by the same or more bits than the size of the quantity being shifted:</source>
          <target state="translated">시프트되는 수량의 크기와 같거나 더 많은 비트만큼 시프트하는 것은 불법입니다.</target>
        </trans-unit>
        <trans-unit id="b5899aa25cbeb84be446d7f611f383682e9adef5" translate="yes" xml:space="preserve">
          <source>It's impossible to know from CommaExp.semantic if the result will be used, hence when there is a result (type != void), a deprecation message is always emitted. However, some construct can produce a result but won't use it (ExpStatement and for loop increment). Those should call this function to prevent unwanted deprecations to be emitted.</source>
          <target state="translated">결과가 사용되는지 CommaExp.semantic에서 알 수 없으므로 결과 (유형! = void)가 있으면 사용 중단 메시지가 항상 생성됩니다. 그러나 일부 구문은 결과를 생성 할 수 있지만 사용하지는 않습니다 (ExpStatement 및 for for 루프 증가). 원하지 않는 지원 중단이 발생하지 않도록이 기능을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="87a902f7796c154f6adbb449196d8425bb687de6" translate="yes" xml:space="preserve">
          <source>It's not allowed to mark an overridden method with the attributes &lt;a href=&quot;attribute#disable&quot;&gt;&lt;code&gt;@disable&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;attribute#deprecated&quot;&gt;&lt;code&gt;deprecated&lt;/code&gt;&lt;/a&gt;. To stop the compilation or to output the deprecation message, the compiler must be able to determine the target of the call, which can't be guaranteed when it is virtual.</source>
          <target state="translated">&lt;a href=&quot;attribute#disable&quot;&gt; &lt;code&gt;@disable&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;attribute#deprecated&quot;&gt; &lt;code&gt;deprecated&lt;/code&gt; &lt;/a&gt; 속성으로 재정의 된 메소드를 표시 할 수 없습니다 . 컴파일을 중지하거나 더 이상 사용되지 않는 메시지를 출력하려면 컴파일러가 호출 대상을 확인할 수 있어야합니다. 호출 대상은 가상 일 때는 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="06a4ac5a76e9f0b9bdc8fd8bfd509f3b58e40c69" translate="yes" xml:space="preserve">
          <source>It's not possible to create a Duration of months or years, because the variable number of days in a month or year makes it impossible to convert between months or years and smaller units without a specific date. So, nothing uses &lt;code&gt;Duration&lt;/code&gt;s when dealing with months or years. Rather, functions specific to months and years are defined. For instance, &lt;a href=&quot;std_datetime#Date&quot;&gt;&lt;code&gt;std.datetime.Date&lt;/code&gt;&lt;/a&gt; has &lt;code&gt;add!&quot;years&quot;&lt;/code&gt; and &lt;code&gt;add!&quot;months&quot;&lt;/code&gt; for adding years and months rather than creating a Duration of years or months and adding that to a &lt;a href=&quot;std_datetime#Date&quot;&gt;&lt;code&gt;std.datetime.Date&lt;/code&gt;&lt;/a&gt;. But Duration is used when dealing with weeks or smaller.</source>
          <target state="translated">월 또는 연도의 가변 일 수는 특정 날짜없이 월 또는 연 단위와 더 작은 단위간에 변환 할 수 없으므로 기간 또는 월을 생성 할 수 없습니다. 따라서 몇 달 또는 몇 년을 다룰 때 &lt;code&gt;Duration&lt;/code&gt; 은 사용하지 않습니다 . 오히려, 월과 연도에 특정한 기능이 정의됩니다. 예를 들어 &lt;a href=&quot;std_datetime#Date&quot;&gt; &lt;code&gt;std.datetime.Date&lt;/code&gt; &lt;/a&gt; 에는 기간 또는 월을 작성하고 &lt;a href=&quot;std_datetime#Date&quot;&gt; &lt;code&gt;std.datetime.Date&lt;/code&gt; 에&lt;/a&gt; 추가하는 대신 연도 및 월을 추가하기 위해 &lt;code&gt;add!&quot;years&quot;&lt;/code&gt; 및 &lt;code&gt;add!&quot;months&quot;&lt;/code&gt; 가 추가 되었습니다 . 그러나 기간은 몇 주 이하를 다룰 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f254fe5e637e0412db399e1267f254c7da7a7960" translate="yes" xml:space="preserve">
          <source>It's not recommended to rely on the template parameters or the exact type of a current &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt; set in &lt;code&gt;std.uni&lt;/code&gt;. The type and parameters may change when the standard allocators design is finalized. Use &lt;a href=&quot;#isCodepointSet&quot;&gt;&lt;code&gt;isCodepointSet&lt;/code&gt;&lt;/a&gt; with templates or just stick with the default alias &lt;a href=&quot;#CodepointSet&quot;&gt;&lt;code&gt;CodepointSet&lt;/code&gt;&lt;/a&gt; throughout the whole code base.</source>
          <target state="translated">&lt;code&gt;std.uni&lt;/code&gt; 에 설정된 현재 &lt;a href=&quot;#Code%20point&quot;&gt;코드 포인트&lt;/a&gt; 의 정확한 유형 또는 템플릿 매개 변수에 의존하지 않는 것이 좋습니다 . 표준 할당 자 설계가 완료되면 유형 및 매개 변수가 변경 될 수 있습니다. 사용 &lt;a href=&quot;#isCodepointSet&quot;&gt; &lt;code&gt;isCodepointSet&lt;/code&gt; &lt;/a&gt; 템플릿을하거나 별칭 기본에 충실 &lt;a href=&quot;#CodepointSet&quot;&gt; &lt;code&gt;CodepointSet&lt;/code&gt; &lt;/a&gt; 전체 코드베이스에 걸쳐.</target>
        </trans-unit>
        <trans-unit id="e42f2c0ae3ac2dbd97c749238e72a4938f4cb57d" translate="yes" xml:space="preserve">
          <source>It's possible that, due to greater use of temporaries and common subexpressions, optimized code may produce a more accurate answer than unoptimized code.</source>
          <target state="translated">임시 및 공통 하위 표현식을 많이 사용하기 때문에 최적화 된 코드가 최적화되지 않은 코드보다 더 정확한 답변을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26bfc917d4c2808b47a0c439b2041bcf1d3ffe79" translate="yes" xml:space="preserve">
          <source>It's primarily of use when &lt;code&gt;MonoTime.ticksPerSecond&lt;/code&gt; is greater than hecto-nanosecond resolution, and an application needs a higher precision than hecto-nanoceconds.</source>
          <target state="translated">&lt;code&gt;MonoTime.ticksPerSecond&lt;/code&gt; 가 hecto -nanosecond 해상도보다 크고 응용 프로그램이 hecto-nanoceconds보다 높은 정밀도를 요구할 때 주로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7493d4e3c56b61b05894f6661cfb0cba6fef7966" translate="yes" xml:space="preserve">
          <source>It's primarily used as the time zone in the result of &lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt;&lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;fromISOString&lt;/code&gt;, &lt;code&gt;fromISOExtString&lt;/code&gt;, and &lt;code&gt;fromSimpleString&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;std_datetime_systime#SysTime&quot;&gt; &lt;code&gt;std.datetime.systime.SysTime&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;fromISOString&lt;/code&gt; , &lt;code&gt;fromISOExtString&lt;/code&gt; 및 &lt;code&gt;fromSimpleString&lt;/code&gt; 의 결과에서 시간대로 주로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5ddbad8c19d68bb5a701a60afd8d7c7541591bb5" translate="yes" xml:space="preserve">
          <source>It's recognized that an application may need further enhancements and extensions, such as less commonly known algorithms, or tailoring existing ones for region specific needs. To help users with building any extra functionality beyond the core primitives, the module provides:</source>
          <target state="translated">응용 프로그램에 덜 일반적으로 알려진 알고리즘이나 지역별 요구에 맞게 기존 알고리즘을 조정하는 등의 추가 개선 및 확장이 필요할 수 있습니다. 사용자는 핵심 기본 요소 이외의 추가 기능을 구축 할 수 있도록 다음과 같은 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="68d3d6d38586ab9e2cf36ecb94fa00a82cfe0680" translate="yes" xml:space="preserve">
          <source>It's the same as &lt;code&gt;TickDuration(0)&lt;/code&gt;, but it's provided to be consistent with &lt;code&gt;Duration&lt;/code&gt; and &lt;code&gt;FracSec&lt;/code&gt;, which provide &lt;code&gt;zero&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;TickDuration(0)&lt;/code&gt; 과 동일 하지만 속성이 &lt;code&gt;zero&lt;/code&gt; &lt;code&gt;Duration&lt;/code&gt; 및 &lt;code&gt;FracSec&lt;/code&gt; 과 일치 하도록 제공 됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5fa71e6d58d5d0fca114db8f0a8c3a287da2aef" translate="yes" xml:space="preserve">
          <source>Itanium C++ ABI: Exception Handling ($Revision: 1.22 $)</source>
          <target state="translated">Itanium C ++ ABI : 예외 처리 ($ Revision : 1.22 $)</target>
        </trans-unit>
        <trans-unit id="9b3710c74713ad73b6fee6faa68d7c7089a3d821" translate="yes" xml:space="preserve">
          <source>Item in list for member initializer.</source>
          <target state="translated">멤버 이니셜 라이저 목록의 항목입니다.</target>
        </trans-unit>
        <trans-unit id="967e0f2ba10fa14510c5c3967d8f30ed26175886" translate="yes" xml:space="preserve">
          <source>Item[] &lt;strong id=&quot;items&quot;&gt;items&lt;/strong&gt;;</source>
          <target state="translated">아이템 [] &lt;strong id=&quot;items&quot;&gt;아이템&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bdc6a863777ef0dc2df1c117cbf561a6833206f4" translate="yes" xml:space="preserve">
          <source>Items to be read.</source>
          <target state="translated">읽을 항목.</target>
        </trans-unit>
        <trans-unit id="e3250ae0a20fa67a451aa0b4b6775210b20451c3" translate="yes" xml:space="preserve">
          <source>Items to write.</source>
          <target state="translated">쓸 아이템.</target>
        </trans-unit>
        <trans-unit id="7547deafe5aeaac079d28f1f346ec148fba5a3b0" translate="yes" xml:space="preserve">
          <source>Iterate a range of char, wchar, or dchars by code unit.</source>
          <target state="translated">코드 단위로 char, wchar 또는 dchars 범위를 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="b1704652b324c3acc4164b27ffcc4b641b7725a9" translate="yes" xml:space="preserve">
          <source>Iterate a string by &lt;a href=&quot;#Grapheme&quot;&gt;&lt;code&gt;Grapheme&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Grapheme&quot;&gt; &lt;code&gt;Grapheme&lt;/code&gt; &lt;/a&gt; 으로 문자열을 반복하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d5051ba4123d61c812f79621e111e7a827233fe" translate="yes" xml:space="preserve">
          <source>Iterate an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; of characters by char type &lt;code&gt;C&lt;/code&gt; by encoding the elements of the range.</source>
          <target state="translated">&lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;범위&lt;/a&gt; 의 요소를 인코딩하여 문자 유형 &lt;code&gt;C&lt;/code&gt; 로 문자 의 입력 범위 를 반복 하십시오.</target>
        </trans-unit>
        <trans-unit id="2bcec762ed6378cddf8fe09a083a3077c9a309f0" translate="yes" xml:space="preserve">
          <source>Iterate an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; of characters by char, wchar, or dchar. These aliases simply forward to &lt;a href=&quot;#byUTF&quot;&gt;&lt;code&gt;byUTF&lt;/code&gt;&lt;/a&gt; with the corresponding C argument.</source>
          <target state="translated">char, wchar 또는 dchar로 문자 의 &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;입력 범위&lt;/a&gt; 를 반복하십시오 . 이 별명 은 해당 C 인수와 함께 &lt;a href=&quot;#byUTF&quot;&gt; &lt;code&gt;byUTF&lt;/code&gt; &lt;/a&gt; 로 간단히 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="a3f29e0c66209fcd4d3a0e0f7bfe84443ed9bfc8" translate="yes" xml:space="preserve">
          <source>Iterate multiple ranges in lockstep using a &lt;code&gt;foreach&lt;/code&gt; loop. In contrast to &lt;a href=&quot;#zip&quot;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt; it allows reference access to its elements. If only a single range is passed in, the &lt;code&gt;Lockstep&lt;/code&gt; aliases itself away. If the ranges are of different lengths and &lt;code&gt;s&lt;/code&gt; == &lt;code&gt;StoppingPolicy.shortest&lt;/code&gt; stop after the shortest range is empty. If the ranges are of different lengths and &lt;code&gt;s&lt;/code&gt; == &lt;code&gt;StoppingPolicy.requireSameLength&lt;/code&gt;, throw an exception. &lt;code&gt;s&lt;/code&gt; may not be &lt;code&gt;StoppingPolicy.longest&lt;/code&gt;, and passing this will throw an exception.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; 루프를 사용하여 잠금 단계에서 여러 범위를 반복하십시오 . &lt;a href=&quot;#zip&quot;&gt; &lt;code&gt;zip&lt;/code&gt; &lt;/a&gt; 과 달리 요소에 대한 참조 액세스를 허용합니다. 단일 범위 만 전달되면 &lt;code&gt;Lockstep&lt;/code&gt; 별명 자체가 사라집니다. 범위의 길이가 다르고 &lt;code&gt;s&lt;/code&gt; == &lt;code&gt;StoppingPolicy.shortest&lt;/code&gt; 가 가장 짧은 범위가 비어있는 후 중지 합니다. 범위의 길이가 다르고 &lt;code&gt;s&lt;/code&gt; == &lt;code&gt;StoppingPolicy.requireSameLength&lt;/code&gt; 인 경우 예외를 발생시킵니다. &lt;code&gt;s&lt;/code&gt; 는 &lt;code&gt;StoppingPolicy.longest&lt;/code&gt; 가 아닐 수 있으며 이를 전달하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="46f6cb646c6843f945d7da582e76018151566d41" translate="yes" xml:space="preserve">
          <source>Iterate over &lt;code&gt;range&lt;/code&gt; with an attached index variable.</source>
          <target state="translated">첨부 된 색인 변수를 사용하여 &lt;code&gt;range&lt;/code&gt; 를 반복 하십시오.</target>
        </trans-unit>
        <trans-unit id="a6544d2b6a21967203cbbbbf85d9c93956a308c9" translate="yes" xml:space="preserve">
          <source>Iterate over all module infos.</source>
          <target state="translated">모든 모듈 정보를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="c6f1ecb57816d0f8ab8895d96ff555e6c40017b4" translate="yes" xml:space="preserve">
          <source>Iterate over ranges with windows</source>
          <target state="translated">창으로 범위를 반복</target>
        </trans-unit>
        <trans-unit id="0923c68159586a48770eb5eb395cea146e0dc546" translate="yes" xml:space="preserve">
          <source>Iterate several ranges in lockstep. The element type is a proxy tuple that allows accessing the current element in the &lt;code&gt;n&lt;/code&gt;th range by using &lt;code&gt;e[n]&lt;/code&gt;.</source>
          <target state="translated">잠금 단계에서 여러 범위를 반복하십시오. 요소 유형은 &lt;code&gt;e[n]&lt;/code&gt; 을 사용하여 &lt;code&gt;n&lt;/code&gt; 번째 범위 의 현재 요소에 액세스 할 수있는 프록시 튜플입니다 .</target>
        </trans-unit>
        <trans-unit id="cba848f6a93f568e8e0ff6bcad21ff094359be43" translate="yes" xml:space="preserve">
          <source>Iterate this dsymbol or members of this scoped dsymbol, then call &lt;code&gt;fp&lt;/code&gt; with the found symbol and &lt;code&gt;param&lt;/code&gt;.</source>
          <target state="translated">이 dsymbol 또는이 범위가 지정된 dsymbol의 멤버를 반복 한 다음 찾은 기호 및 &lt;code&gt;param&lt;/code&gt; 을 사용하여 &lt;code&gt;fp&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="396a4c4a83adbfe93e36ca56c3db62aa4de33668" translate="yes" xml:space="preserve">
          <source>Iterates</source>
          <target state="translated">Iterates</target>
        </trans-unit>
        <trans-unit id="4c7657311c0985cf818bd71ba4e38315b188c160" translate="yes" xml:space="preserve">
          <source>Iterates a bidirectional range backwards.</source>
          <target state="translated">양방향 범위를 거꾸로 반복합니다.</target>
        </trans-unit>
        <trans-unit id="81014f52c564f4b2a0a23cd199c9b45c770f9142" translate="yes" xml:space="preserve">
          <source>Iterates a bidirectional range backwards. The original range can be accessed by using the &lt;code&gt;source&lt;/code&gt; property. Applying retro twice to the same range yields the original range.</source>
          <target state="translated">양방향 범위를 거꾸로 반복합니다. &lt;code&gt;source&lt;/code&gt; 속성 을 사용하여 원래 범위에 액세스 할 수 있습니다 . 같은 범위에 레트로를 두 번 적용하면 원래 범위가됩니다.</target>
        </trans-unit>
        <trans-unit id="031fd6a3f37b8f60999d9b1f8c51e96e07a5e012" translate="yes" xml:space="preserve">
          <source>Iterates a random-access range starting from a given point and progressively extending left and right from that point. If no initial point is given, iteration starts from the middle of the range. Iteration spans the entire range.</source>
          <target state="translated">주어진 지점에서 시작하여 해당 지점에서 왼쪽과 오른쪽으로 점진적으로 확장되는 임의 액세스 범위를 반복합니다. 초기 점이 주어지지 않으면 범위의 중간부터 반복이 시작됩니다. 반복은 전체 범위에 걸쳐 있습니다.</target>
        </trans-unit>
        <trans-unit id="6155d3dc4b918ca7ad16f0811ad5e79c02bd03b2" translate="yes" xml:space="preserve">
          <source>Iterates a range with an attached index variable.</source>
          <target state="translated">첨부 된 인덱스 변수를 사용하여 범위를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="be520983ead745fdd9048145abd61e2d2031ef35" translate="yes" xml:space="preserve">
          <source>Iterates a range with stride</source>
          <target state="translated">보폭으로 범위를 반복</target>
        </trans-unit>
        <trans-unit id="0e3057ecac253c49baed9d03893907ec2f577311" translate="yes" xml:space="preserve">
          <source>Iterates over the unique elements in a range, which is assumed sorted.</source>
          <target state="translated">범위 내에서 고유 한 요소를 반복하며 정렬 된 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="e9d7e5b017841d823f90dd8b859e306591765919" translate="yes" xml:space="preserve">
          <source>Iterates range &lt;code&gt;r&lt;/code&gt; with stride &lt;code&gt;n&lt;/code&gt;. If the range is a random-access range, moves by indexing into the range; otherwise, moves by successive calls to &lt;code&gt;popFront&lt;/code&gt;. Applying stride twice to the same range results in a stride with a step that is the product of the two applications. It is an error for &lt;code&gt;n&lt;/code&gt; to be 0.</source>
          <target state="translated">stride &lt;code&gt;n&lt;/code&gt; 으로 &lt;code&gt;r&lt;/code&gt; 범위를 반복합니다 . 범위가 랜덤 액세스 범위 인 경우 범위로 색인화하여 이동합니다. 그렇지 않으면, &lt;code&gt;popFront&lt;/code&gt; 를 연속적으로 호출하여 이동 합니다. 보폭을 같은 범위에 두 번 적용하면 두 적용의 곱인 스텝이 보폭이됩니다. &lt;code&gt;n&lt;/code&gt; 이 0 인 것은 오류입니다 .</target>
        </trans-unit>
        <trans-unit id="41c0b28ede291ea7f7566d122e863aa0f535dcba" translate="yes" xml:space="preserve">
          <source>Iterates the passed arguments and return the maximum value.</source>
          <target state="translated">전달 된 인수를 반복하고 최대 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7d1e12925acc4cdc52d701ccd76ee602a77fe86f" translate="yes" xml:space="preserve">
          <source>Iterates the passed arguments and returns the minimum value.</source>
          <target state="translated">전달 된 인수를 반복하고 최소값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f9bb1a3e40031f0788544f6e843a3b9b81f2f50" translate="yes" xml:space="preserve">
          <source>Iterates the passed range and returns the maximal element. A custom mapping function can be passed to &lt;code&gt;map&lt;/code&gt;. In other languages this is sometimes called &lt;code&gt;argmax&lt;/code&gt;.</source>
          <target state="translated">전달 된 범위를 반복하고 최대 요소를 반환합니다. 사용자 정의 맵핑 기능을 &lt;code&gt;map&lt;/code&gt; 에 전달할 수 있습니다 . 다른 언어에서는 이것을 때때로 &lt;code&gt;argmax&lt;/code&gt; 라고 합니다 .</target>
        </trans-unit>
        <trans-unit id="5c4dd3d0ca41dc586c0601f5460e0bdf217d07ef" translate="yes" xml:space="preserve">
          <source>Iterates the passed range and returns the minimal element. A custom mapping function can be passed to &lt;code&gt;map&lt;/code&gt;. In other languages this is sometimes called &lt;code&gt;argmin&lt;/code&gt;.</source>
          <target state="translated">전달 된 범위를 반복하고 최소 요소를 반환합니다. 사용자 정의 맵핑 기능을 &lt;code&gt;map&lt;/code&gt; 에 전달할 수 있습니다 . 다른 언어에서는 이것을 때때로 &lt;code&gt;argmin&lt;/code&gt; 이라고 합니다 .</target>
        </trans-unit>
        <trans-unit id="ac5030d77c55effd0702acc270731f6b899947c4" translate="yes" xml:space="preserve">
          <source>Iterates through a file a chunk at a time by using &lt;code&gt;foreach&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; 를 사용하여 한 번에 청크를 파일을 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="bda215d2193432c1605c2f94eab1dd86c59fc050" translate="yes" xml:space="preserve">
          <source>Iterates through the lines of a file by using &lt;code&gt;foreach&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; 를 사용하여 파일 행을 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="00eca5d46e200a01deae26dbfef918eb9a307e2e" translate="yes" xml:space="preserve">
          <source>Iterating over &lt;code&gt;Lockstep&lt;/code&gt; in reverse and with an index is only possible when &lt;code&gt;s&lt;/code&gt; == &lt;code&gt;StoppingPolicy.requireSameLength&lt;/code&gt;, in order to preserve indexes. If an attempt is made at iterating in reverse when &lt;code&gt;s&lt;/code&gt; == &lt;code&gt;StoppingPolicy.shortest&lt;/code&gt;, an exception will be thrown.</source>
          <target state="translated">인덱스 를 유지하기 위해 &lt;code&gt;s&lt;/code&gt; == &lt;code&gt;StoppingPolicy.requireSameLength&lt;/code&gt; 일 때만 &lt;code&gt;Lockstep&lt;/code&gt; 를 반대로 반복 하고 인덱스를 사용하여 반복 할 수 있습니다 . &lt;code&gt;s&lt;/code&gt; == &lt;code&gt;StoppingPolicy.shortest&lt;/code&gt; 일 때 반대로 반복하려고 시도 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="7ab9c33240f90c018e5301ec386d9a17da67f57b" translate="yes" xml:space="preserve">
          <source>Iteratively joins all tracked threads. This function will block add, remove, and opApply until it completes.</source>
          <target state="translated">모든 추적 된 스레드를 반복적으로 결합합니다. 이 기능은 완료 될 때까지 추가, 제거 및 opApply를 차단합니다.</target>
        </trans-unit>
        <trans-unit id="ac5dbd0b8592025504a68619b35e97d48ae39f52" translate="yes" xml:space="preserve">
          <source>JSON type enumeration</source>
          <target state="translated">JSON 유형 열거</target>
        </trans-unit>
        <trans-unit id="37261b1315c409df97253a04fdcad2ac04e9f2e5" translate="yes" xml:space="preserve">
          <source>JSON value node</source>
          <target state="translated">JSON 값 노드</target>
        </trans-unit>
        <trans-unit id="19b9988b5b0ebaf897665e22703721b63cd55e3f" translate="yes" xml:space="preserve">
          <source>JSONOptions &lt;code&gt;options&lt;/code&gt;</source>
          <target state="translated">JSONOptions &lt;code&gt;options&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77047b2f2f7a1f46f4f773acebc94e1704d45d0a" translate="yes" xml:space="preserve">
          <source>JSONValue</source>
          <target state="translated">JSONValue</target>
        </trans-unit>
        <trans-unit id="6a908d3132e3f4771380420780f724bcb99aa35b" translate="yes" xml:space="preserve">
          <source>JSONValue &lt;strong id=&quot;parseJSON&quot;&gt;parseJSON&lt;/strong&gt;(T)(T json, JSONOptions options)</source>
          <target state="translated">JSONValue &lt;strong id=&quot;parseJSON&quot;&gt;구문&lt;/strong&gt; 분석 &lt;strong id=&quot;parseJSON&quot;&gt;JSON&lt;/strong&gt; (T) (T json, JSONOptions 옵션)</target>
        </trans-unit>
        <trans-unit id="ad2cc87635827ce36358659faec53896c2ffd9d7" translate="yes" xml:space="preserve">
          <source>JSONValue &lt;strong id=&quot;parseJSON&quot;&gt;parseJSON&lt;/strong&gt;(T)(T json, int maxDepth = -1, JSONOptions options = JSONOptions.none)</source>
          <target state="translated">JSONValue &lt;strong id=&quot;parseJSON&quot;&gt;구문&lt;/strong&gt; 분석 &lt;strong id=&quot;parseJSON&quot;&gt;JSON&lt;/strong&gt; (T) (T json, int maxDepth = -1, JSONOptions 옵션 = JSONOptions.none)</target>
        </trans-unit>
        <trans-unit id="75fe8ccb746c12e5fc2263d91bcd2e2c2a1c8f7e" translate="yes" xml:space="preserve">
          <source>Jacob Carlborg</source>
          <target state="translated">제이콥 칼 보그</target>
        </trans-unit>
        <trans-unit id="6e25ce2240148f400ce62910a8b1efe74e2c9a0e" translate="yes" xml:space="preserve">
          <source>Janice Caron</source>
          <target state="translated">제니스 카론</target>
        </trans-unit>
        <trans-unit id="7596e768bfc7370245a658fe8f76d22204852664" translate="yes" xml:space="preserve">
          <source>Java's &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/javadoc/index.html&quot;&gt;Javadoc&lt;/a&gt;, probably the most well-known</source>
          <target state="translated">아마도 가장 잘 알려진 Java의 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/javadoc/index.html&quot;&gt;Javadoc&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94e850a9fa9f98700106bfba6b5849640ea65567" translate="yes" xml:space="preserve">
          <source>JavaScript Object Notation</source>
          <target state="translated">자바 스크립트 객체 표기법</target>
        </trans-unit>
        <trans-unit id="4d3bb51ea74dbb54d8ffaf04425ff843127f10a5" translate="yes" xml:space="preserve">
          <source>Javanese</source>
          <target state="translated">Javanese</target>
        </trans-unit>
        <trans-unit id="5094055d2217aa7321a9d7bed6ee4d5794505c17" translate="yes" xml:space="preserve">
          <source>Jeremie Pelletier, David Herberth</source>
          <target state="translated">제레미 펠티에, 데이비드 허버트</target>
        </trans-unit>
        <trans-unit id="44f434a971d725063d7a2953337c698c7bac2ba2" translate="yes" xml:space="preserve">
          <source>Jesse Phillips</source>
          <target state="translated">제시 필립스</target>
        </trans-unit>
        <trans-unit id="8d398e7a2e7966fc969106c70e0482f689337c66" translate="yes" xml:space="preserve">
          <source>Johannes Pfau</source>
          <target state="translated">요하네스 파우</target>
        </trans-unit>
        <trans-unit id="f46447d52bfcc376c589171fb6036cd3ae4a5810" translate="yes" xml:space="preserve">
          <source>Join a couple of functions into one that executes the original functions one after the other, using one function's result for the next function's argument.</source>
          <target state="translated">다음 함수의 인수에 대해 하나의 함수 결과를 사용하여 원래 함수를 차례대로 실행하는 두 함수를 하나의 함수로 결합하십시오.</target>
        </trans-unit>
        <trans-unit id="0d0c43aa8867e08f397e43a619a1f600ed8f6361" translate="yes" xml:space="preserve">
          <source>Join_Control</source>
          <target state="translated">Join_Control</target>
        </trans-unit>
        <trans-unit id="dcb5bf332c4e4981c7768b8555ac3e4b7690dc4e" translate="yes" xml:space="preserve">
          <source>Joins a couple of functions into one that executes the original functions independently and returns a tuple with all the results.</source>
          <target state="translated">원래 함수를 독립적으로 실행하고 모든 결과와 함께 튜플을 반환하는 함수 두 개를 하나로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="aefc3c1587d67e993c50c46acea53d9b977ae451" translate="yes" xml:space="preserve">
          <source>Joins all non-daemon threads that are currently running. This is done by performing successive scans through the thread list until a scan consists of only daemon threads.</source>
          <target state="translated">현재 실행중인 모든 비 데몬 스레드를 결합합니다. 스캔이 디먼 스레드로만 구성 될 때까지 스레드 목록을 통해 연속 스캔을 수행하면됩니다.</target>
        </trans-unit>
        <trans-unit id="8bc86f684db60d70140fe1419b4325b73f7613a4" translate="yes" xml:space="preserve">
          <source>Jonas Drewsen. Some of the SMTP code contributed by Jimmy Cao.</source>
          <target state="translated">조나스 드류 센. Jimmy Cao가 제공 한 SMTP 코드 중 일부</target>
        </trans-unit>
        <trans-unit id="2792f94184c6127be37b21bcdd8b46ecd91706c9" translate="yes" xml:space="preserve">
          <source>Jonathan M Davis</source>
          <target state="translated">조나단 M 데이비스</target>
        </trans-unit>
        <trans-unit id="0729735c2be61b7d083c7452b2591194f6b9f3e4" translate="yes" xml:space="preserve">
          <source>Jonathan M. Davis &lt;a href=&quot;http://dconf.org/2015/talks/davis.html&quot;&gt;&lt;i&gt;Introduction to Ranges&lt;/i&gt;&lt;/a&gt; talk at DConf 2015 a vivid introduction from its core constructs to practical advice.</source>
          <target state="translated">조나단 M. 데이비스 &lt;a href=&quot;http://dconf.org/2015/talks/davis.html&quot;&gt;&lt;i&gt;레인지 스 소개&lt;/i&gt;&lt;/a&gt; 는 DConf 2015에서 핵심 구성부터 실질적인 조언까지 생생하게 소개합니다.</target>
        </trans-unit>
        <trans-unit id="97dbaf8e8c4490a101cf7e3f174555f70aa1c17b" translate="yes" xml:space="preserve">
          <source>JsonFieldFlags &lt;strong id=&quot;tryParseJsonField&quot;&gt;tryParseJsonField&lt;/strong&gt;(const(char)* fieldName);</source>
          <target state="translated">JsonFieldFlags &lt;strong id=&quot;tryParseJsonField&quot;&gt;tryParseJsonField&lt;/strong&gt; (const (char) * fieldName);</target>
        </trans-unit>
        <trans-unit id="2d8f6d6417b503e6fc00ddf97fea18ebdd19b03b" translate="yes" xml:space="preserve">
          <source>JsonFieldFlags.none on error, otherwise the JsonFieldFlags value corresponding to the given fieldName.</source>
          <target state="translated">오류 발생시 JsonFieldFlags.none, 그렇지 않은 경우 지정된 fieldName에 해당하는 JsonFieldFlags 값</target>
        </trans-unit>
        <trans-unit id="7426cf06bbe68f4942c2dee1dc1e5f14aacfb8fe" translate="yes" xml:space="preserve">
          <source>Julius C'ster</source>
          <target state="translated">줄리어스 씨스 터</target>
        </trans-unit>
        <trans-unit id="36a42ea8673555a38d9845c5a7215a17263890c6" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;Nullable!T&lt;/code&gt;, except that the null state is defined as a particular value. For example, &lt;code&gt;Nullable!(uint, uint.max)&lt;/code&gt; is an &lt;code&gt;uint&lt;/code&gt; that sets aside the value &lt;code&gt;uint.max&lt;/code&gt; to denote a null state. &lt;code&gt;Nullable!(T, nullValue)&lt;/code&gt; is more storage-efficient than &lt;code&gt;Nullable!T&lt;/code&gt; because it does not need to store an extra &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">null 상태가 특정 값으로 정의된다는 점을 제외하고 &lt;code&gt;Nullable!T&lt;/code&gt; 와 같습니다 . 예를 들어 &lt;code&gt;Nullable!(uint, uint.max)&lt;/code&gt; 은 &lt;code&gt;uint.max&lt;/code&gt; 값을 따로 설정 하여 널 상태를 나타내는 &lt;code&gt;uint&lt;/code&gt; 입니다 . &lt;code&gt;Nullable!(T, nullValue)&lt;/code&gt; 은 추가 &lt;code&gt;bool&lt;/code&gt; 을 저장할 필요가 없으므로 &lt;code&gt;Nullable!T&lt;/code&gt; 보다 저장 효율성이 높습니다 .</target>
        </trans-unit>
        <trans-unit id="ec9772fef62cdea0720dce405193ab48cbc57ed2" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;Nullable!T&lt;/code&gt;, except that the object refers to a value sitting elsewhere in memory. This makes assignments overwrite the initially assigned value. Internally &lt;code&gt;NullableRef!T&lt;/code&gt; only stores a pointer to &lt;code&gt;T&lt;/code&gt; (i.e., &lt;code&gt;Nullable!T.sizeof == (T*).sizeof&lt;/code&gt;).</source>
          <target state="translated">객체가 메모리의 다른 곳에 앉아있는 값을 참조한다는 점을 제외하고 &lt;code&gt;Nullable!T&lt;/code&gt; 와 같습니다 . 이렇게하면 할당이 초기에 할당 된 값을 덮어 씁니다. 내부적으로 &lt;code&gt;NullableRef!T&lt;/code&gt; 단지에 대한 포인터를 저장 &lt;code&gt;T&lt;/code&gt; (즉, &lt;code&gt;Nullable!T.sizeof == (T*).sizeof&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="63ea9136dd991394515bab1b8623b9c1fd950655" translate="yes" xml:space="preserve">
          <source>Just one &lt;a href=&quot;lex#Identifier&quot;&gt;&lt;i&gt;Identifier&lt;/i&gt;&lt;/a&gt; is rewritten to &lt;a href=&quot;function#Parameters&quot;&gt;&lt;i&gt;Parameters&lt;/i&gt;&lt;/a&gt;:</source>
          <target state="translated">하나의 &lt;a href=&quot;lex#Identifier&quot;&gt;&lt;i&gt;식별자&lt;/i&gt;&lt;/a&gt; 만 &lt;a href=&quot;function#Parameters&quot;&gt;&lt;i&gt;Parameters&lt;/i&gt;&lt;/a&gt; 로 다시 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="89f6b4c092b16dc6948f25e1798098f47a9883d5" translate="yes" xml:space="preserve">
          <source>Just the range to fold over; or the range and one seed per function; or the range, one seed per function, and the work unit size</source>
          <target state="translated">접을 수있는 범위; 또는 기능 당 범위 및 하나의 시드; 범위, 기능 당 하나의 시드 및 작업 단위 크기</target>
        </trans-unit>
        <trans-unit id="95821b707963ae42f0cd8570a73c7a770a76a918" translate="yes" xml:space="preserve">
          <source>K &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">K &lt;code&gt;key&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07f366da6fc6a861cbc87352b22ef074419fcb3a" translate="yes" xml:space="preserve">
          <source>Kai Nacke</source>
          <target state="translated">카이 나케</target>
        </trans-unit>
        <trans-unit id="35515824c39939c254cd4490c2c2aadbc065186f" translate="yes" xml:space="preserve">
          <source>Kai Nacke, Johannes Pfau, Nick Sabalausky</source>
          <target state="translated">카이 나케, 요하네스 푸우, 닉 사발 라우 스키</target>
        </trans-unit>
        <trans-unit id="ae170b17bf57b2dd3f07fcd95b9f2bb7e3b26355" translate="yes" xml:space="preserve">
          <source>Kaithi</source>
          <target state="translated">Kaithi</target>
        </trans-unit>
        <trans-unit id="557d6bd7caa0a06ffe47eadcbd352ca5b993f101" translate="yes" xml:space="preserve">
          <source>Kana Supplement</source>
          <target state="translated">가나 보충</target>
        </trans-unit>
        <trans-unit id="5c52b04b182fe59c46dbb680a685e8fae4abc9e4" translate="yes" xml:space="preserve">
          <source>Kanbun</source>
          <target state="translated">Kanbun</target>
        </trans-unit>
        <trans-unit id="765d8f89f8bd937afa34d37a8dd5511726f71e6c" translate="yes" xml:space="preserve">
          <source>Kangxi Radicals</source>
          <target state="translated">강서 급진파</target>
        </trans-unit>
        <trans-unit id="c3ed665577f91f82c451742a0c8875950d42b19f" translate="yes" xml:space="preserve">
          <source>Kannada</source>
          <target state="translated">Kannada</target>
        </trans-unit>
        <trans-unit id="26f11d685b82331f6a7c0ef049098224fd15a035" translate="yes" xml:space="preserve">
          <source>Karatsuba multiplication</source>
          <target state="translated">가라 쓰바 곱셈</target>
        </trans-unit>
        <trans-unit id="6842e5a778887793f59acc2ef5454c8c1ea0e92d" translate="yes" xml:space="preserve">
          <source>Katakana</source>
          <target state="translated">Katakana</target>
        </trans-unit>
        <trans-unit id="d1397b6fcf2a880567c752fd0440900ff604ccd3" translate="yes" xml:space="preserve">
          <source>Katakana Phonetic Extensions</source>
          <target state="translated">가타카나 음성 확장</target>
        </trans-unit>
        <trans-unit id="3dd63971d3f2b16b51633181c1aec91223d8af19" translate="yes" xml:space="preserve">
          <source>Kayah Li</source>
          <target state="translated">카야 리</target>
        </trans-unit>
        <trans-unit id="75ee154fd513c399937f6b79a87ebbade8c7cadd" translate="yes" xml:space="preserve">
          <source>Kayah_Li</source>
          <target state="translated">Kayah_Li</target>
        </trans-unit>
        <trans-unit id="d74eee745944f149824eb2fa0740f7f9e756246b" translate="yes" xml:space="preserve">
          <source>Keep for backward binary compatibility. This function can be removed in the future.</source>
          <target state="translated">이진 호환성을 유지하십시오. 이 기능은 나중에 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cefeb94879a4163ffc965d759c646922a56c39b1" translate="yes" xml:space="preserve">
          <source>Keep track of how often rt_init/rt_term were called.</source>
          <target state="translated">rt_init / rt_term이 얼마나 자주 호출되었는지 추적하십시오.</target>
        </trans-unit>
        <trans-unit id="36d88bb75bee3164971007d202183f35b6295316" translate="yes" xml:space="preserve">
          <source>KeepTerminator &lt;code&gt;keepTerminator&lt;/code&gt;</source>
          <target state="translated">KeepTerminator &lt;code&gt;keepTerminator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b4ac1ddd1c0236182fe28a432626c97133b74ac" translate="yes" xml:space="preserve">
          <source>Kenji Hara</source>
          <target state="translated">켄지하라</target>
        </trans-unit>
        <trans-unit id="74687127fcc3dc7bb5e761b8900f3a700141e5bf" translate="yes" xml:space="preserve">
          <source>KeyType</source>
          <target state="translated">KeyType</target>
        </trans-unit>
        <trans-unit id="1d89254a2bc78c1ff41c2f6767a0e00ee126b3bf" translate="yes" xml:space="preserve">
          <source>KeyValuePairs</source>
          <target state="translated">KeyValuePairs</target>
        </trans-unit>
        <trans-unit id="729e53c8eb86a949f666878c598d23f93a3545d7" translate="yes" xml:space="preserve">
          <source>Keys &lt;code&gt;keys&lt;/code&gt;</source>
          <target state="translated">키 &lt;code&gt;keys&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26f0271fc4a5ffcc2bb5f4dbe3a1fa04013275ee" translate="yes" xml:space="preserve">
          <source>Keys are implementation defined, allowing relevant data for exotic targets. A reliable subset exists which are always available:</source>
          <target state="translated">키는 구현 정의로, 이국적인 대상에 대한 관련 데이터를 허용합니다. 항상 사용 가능한 안정적인 하위 집합이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f530db58b3e5088dc7412c6d2298ba3f8456bdeb" translate="yes" xml:space="preserve">
          <source>Keywords</source>
          <target state="translated">Keywords</target>
        </trans-unit>
        <trans-unit id="0abd7895cc895899e75b610526a33fbc51c32818" translate="yes" xml:space="preserve">
          <source>Keywords are reserved identifiers.</source>
          <target state="translated">키워드는 예약 된 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="b6336831bbeb983ca82f9d4a77612af9bca7a91d" translate="yes" xml:space="preserve">
          <source>Kharoshthi</source>
          <target state="translated">Kharoshthi</target>
        </trans-unit>
        <trans-unit id="3db4bac2e32c1fd4c51c4ffc01f1ab523d35aa5f" translate="yes" xml:space="preserve">
          <source>Khmer</source>
          <target state="translated">Khmer</target>
        </trans-unit>
        <trans-unit id="8518bf9eb37b463a80281371ecf2cd1e0405096e" translate="yes" xml:space="preserve">
          <source>Khmer Symbols</source>
          <target state="translated">크메르어 기호</target>
        </trans-unit>
        <trans-unit id="1f207bb143ebf53a96f07da496ea625fd1ed3952" translate="yes" xml:space="preserve">
          <source>Kinds</source>
          <target state="translated">Kinds</target>
        </trans-unit>
        <trans-unit id="e86af5625d0fba3382c4196e55640871e3d19f3f" translate="yes" xml:space="preserve">
          <source>Kinds of Arrays</source>
          <target state="translated">배열의 종류</target>
        </trans-unit>
        <trans-unit id="63244e6f2aedb0bb8ad7366c81f1da96cdb83a3b" translate="yes" xml:space="preserve">
          <source>Klass</source>
          <target state="translated">Klass</target>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="a10f36f142913e26ae0e6f93a728d8bb0b212cf5" translate="yes" xml:space="preserve">
          <source>L &lt;code&gt;lhs&lt;/code&gt;</source>
          <target state="translated">L &lt;code&gt;lhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f01127b628fe96840398c36b4cd22d12c73d39f" translate="yes" xml:space="preserve">
          <source>LDC (LLVM D Compiler) is the compiler</source>
          <target state="translated">LDC (LLVM D 컴파일러)는 컴파일러입니다</target>
        </trans-unit>
        <trans-unit id="e59266bac956daa5032ba200109e96e1c5b1a2c0" translate="yes" xml:space="preserve">
          <source>LIBCURL_VERSION</source>
          <target state="translated">LIBCURL_VERSION</target>
        </trans-unit>
        <trans-unit id="ae21ee5993e6bb593834d6149c93b819f0663a8b" translate="yes" xml:space="preserve">
          <source>LIBCURL_VERSION_NUM</source>
          <target state="translated">LIBCURL_VERSION_NUM</target>
        </trans-unit>
        <trans-unit id="71ca01cf1a00a026c01e4f77e52bb217888eded6" translate="yes" xml:space="preserve">
          <source>LINK &lt;strong id=&quot;systemLinkage&quot;&gt;systemLinkage&lt;/strong&gt;();</source>
          <target state="translated">링크 시스템 &lt;strong id=&quot;systemLinkage&quot;&gt;연동&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="52700257cb800485676caed33f23e22b22745155" translate="yes" xml:space="preserve">
          <source>LLVM D Compiler (LDC)</source>
          <target state="translated">LLVM D 컴파일러 (LDC)</target>
        </trans-unit>
        <trans-unit id="447562b9012012a2aca5d204bad70095bfe8f420" translate="yes" xml:space="preserve">
          <source>LOOSE</source>
          <target state="translated">LOOSE</target>
        </trans-unit>
        <trans-unit id="a09b13dff976fe20f239fab7a59a35bde98835e6" translate="yes" xml:space="preserve">
          <source>LV</source>
          <target state="translated">LV</target>
        </trans-unit>
        <trans-unit id="33b636a601b7a02911b25e76cda4a549a1d9ebd1" translate="yes" xml:space="preserve">
          <source>LVT</source>
          <target state="translated">LVT</target>
        </trans-unit>
        <trans-unit id="15d9300627a09b46f74a6b87395d2a7f3411cc88" translate="yes" xml:space="preserve">
          <source>LVT_Syllable</source>
          <target state="translated">LVT_Syllable</target>
        </trans-unit>
        <trans-unit id="2cfbfa4fc186833e1d17b39a6ed4758a215c22ac" translate="yes" xml:space="preserve">
          <source>LV_Syllable</source>
          <target state="translated">LV_Syllable</target>
        </trans-unit>
        <trans-unit id="ba218d1261bfead2f97e926079c3ae7568071bf0" translate="yes" xml:space="preserve">
          <source>Label* &lt;code&gt;label&lt;/code&gt;</source>
          <target state="translated">라벨 * &lt;code&gt;label&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b86e48b918e6b8af7eaccee49db2cecb08b3997" translate="yes" xml:space="preserve">
          <source>Label** &lt;strong id=&quot;lookupLabel&quot;&gt;lookupLabel&lt;/strong&gt;(Statement s);</source>
          <target state="translated">레이블 ** &lt;strong id=&quot;lookupLabel&quot;&gt;lookupLabel&lt;/strong&gt; ( &lt;strong id=&quot;lookupLabel&quot;&gt;States&lt;/strong&gt; s);</target>
        </trans-unit>
        <trans-unit id="2fc1ef0d8a8c6fb5a183e6dd4055bf2e2a000b0f" translate="yes" xml:space="preserve">
          <source>LabelDsymbol &lt;strong id=&quot;returnLabel&quot;&gt;returnLabel&lt;/strong&gt;;</source>
          <target state="translated">LabelDsymbol &lt;strong id=&quot;returnLabel&quot;&gt;returnLabel&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="57a27a2a11471faebdb082dca955aba4bf532df9" translate="yes" xml:space="preserve">
          <source>Labeled Statements</source>
          <target state="translated">레이블이있는 진술</target>
        </trans-unit>
        <trans-unit id="2228985493d9e43e461c7be5525529248735ad9c" translate="yes" xml:space="preserve">
          <source>Labels</source>
          <target state="translated">Labels</target>
        </trans-unit>
        <trans-unit id="55e451de0e70b249932cac7139c9b15e9f160538" translate="yes" xml:space="preserve">
          <source>Labels are in a name space independent of declarations, variables, types, etc. Even so, labels cannot have the same name as local declarations. The label name space is the body of the function they appear in. Label name spaces do not nest, i.e. a label inside a block statement is accessible from outside that block.</source>
          <target state="translated">레이블은 선언, 변수, 유형 등과 독립적으로 네임 스페이스에 있습니다. 그럼에도 불구하고 레이블은 로컬 선언과 동일한 이름을 가질 수 없습니다. 레이블 네임 스페이스는 표시되는 함수의 본문입니다. 레이블 네임 스페이스는 중첩되지 않습니다. 즉, 블록 명령문 내부의 레이블은 해당 블록 외부에서 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a1475fce73eed0441ef9a6cf5dea0d92a68de5f" translate="yes" xml:space="preserve">
          <source>Labels are in a separate scope, one per function.</source>
          <target state="translated">레이블은 기능별로 하나씩 별도의 범위에 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab80f546ab7aedd542b6f7cf9ec336e3c5a2f337" translate="yes" xml:space="preserve">
          <source>Labels in one function cannot be referenced from another function.</source>
          <target state="translated">한 함수의 레이블은 다른 함수에서 참조 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1a3a859b8543db93b9d21e22a679ffb2ca537eef" translate="yes" xml:space="preserve">
          <source>Laboriously construct a C wrapper around the C++ code.</source>
          <target state="translated">C ++ 코드를 중심으로 C 래퍼를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="cab09d9adb98c17169fd258e9b9f83a3876c4fd1" translate="yes" xml:space="preserve">
          <source>Lambda</source>
          <target state="translated">Lambda</target>
        </trans-unit>
        <trans-unit id="ba9dfe5041cd205445df5b843e8a9dc628256415" translate="yes" xml:space="preserve">
          <source>Lambdas</source>
          <target state="translated">Lambdas</target>
        </trans-unit>
        <trans-unit id="d0a6871f11875319701fa244442052fe3b8ba59b" translate="yes" xml:space="preserve">
          <source>Language changes listed by -revert</source>
          <target state="translated">-revert로 나열된 언어 변경</target>
        </trans-unit>
        <trans-unit id="1086e1889ddc903c34fd68e5851b7ef08f6a0c1a" translate="yes" xml:space="preserve">
          <source>Language changes listed by -transition=id</source>
          <target state="translated">-transition = id로 나열된 언어 변경</target>
        </trans-unit>
        <trans-unit id="489e3618a7be2c6a60858c53fd8bf2fdf36a41ff" translate="yes" xml:space="preserve">
          <source>Language previews listed by -preview</source>
          <target state="translated">-미리보기로 나열된 언어 미리보기</target>
        </trans-unit>
        <trans-unit id="c1439807deac3e6c9290cfd97415a4b15f4ba6c8" translate="yes" xml:space="preserve">
          <source>Lao</source>
          <target state="translated">Lao</target>
        </trans-unit>
        <trans-unit id="4ff311dd115963220443dbbe7f3cdc78b24cc17c" translate="yes" xml:space="preserve">
          <source>Largest &lt;code&gt;Duration&lt;/code&gt; possible.</source>
          <target state="translated">가능한 최대 &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="441940b44967219249673ac5a62264158b9767e7" translate="yes" xml:space="preserve">
          <source>Largest &lt;code&gt;MonoTime&lt;/code&gt; possible.</source>
          <target state="translated">가능한 최대 &lt;code&gt;MonoTime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="775739b719ae1c33d45f0da7e4f74abc764e3ce2" translate="yes" xml:space="preserve">
          <source>Largest &lt;code&gt;TickDuration&lt;/code&gt; possible.</source>
          <target state="translated">최대 &lt;code&gt;TickDuration&lt;/code&gt; 이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="b80bfda35a980fed60097a392642bb35e7679260" translate="yes" xml:space="preserve">
          <source>Largest DBCONFIG</source>
          <target state="translated">가장 큰 DBCONFIG</target>
        </trans-unit>
        <trans-unit id="d9729c92038f752df4b88f1ce2cbf7fb4e98a3ff" translate="yes" xml:space="preserve">
          <source>Largest defined DBSTATUS</source>
          <target state="translated">가장 큰 정의 된 DBSTATUS</target>
        </trans-unit>
        <trans-unit id="143fb511beaf582b174d9c4ff5835a52b94bef09" translate="yes" xml:space="preserve">
          <source>Largest generated value.</source>
          <target state="translated">가장 큰 생성 값.</target>
        </trans-unit>
        <trans-unit id="031d120afc0f880f2e336a65b6264b1061756f53" translate="yes" xml:space="preserve">
          <source>Largest value of enum</source>
          <target state="translated">열거 형의 가장 큰 가치</target>
        </trans-unit>
        <trans-unit id="5e59d0b67e13689490707955441acfa15678fa32" translate="yes" xml:space="preserve">
          <source>Lars Tandle Kyllingstad, &lt;a href=&quot;http://digitalmars.com&quot;&gt;Walter Bright&lt;/a&gt;, Grzegorz Adam Hankiewicz, Thomas K&amp;uuml;hne, &lt;a href=&quot;http://erdani.org&quot;&gt;Andrei Alexandrescu&lt;/a&gt;</source>
          <target state="translated">Lars Tandle Kyllingstad, &lt;a href=&quot;http://digitalmars.com&quot;&gt;Walter Bright&lt;/a&gt; , Grzegorz Adam Hankiewicz, Thomas K&amp;uuml;hne, &lt;a href=&quot;http://erdani.org&quot;&gt;안드레이 알렉산더&lt;/a&gt; 스쿠</target>
        </trans-unit>
        <trans-unit id="e48d65b433854a00aa3b58538c5d44f7ce276d66" translate="yes" xml:space="preserve">
          <source>Lars Tandle Kyllingstad, Don Clugston</source>
          <target state="translated">Lars Tandle Kyllingstad, 돈 크러 스턴</target>
        </trans-unit>
        <trans-unit id="07235ffa8a70d2e51e9570c942d05e5b5851a313" translate="yes" xml:space="preserve">
          <source>Last Insert Rowid</source>
          <target state="translated">마지막 삽입 Rowid</target>
        </trans-unit>
        <trans-unit id="0763072f970fe33cb40f56a506a18430c6e430bb" translate="yes" xml:space="preserve">
          <source>Last but not least, a desired string sorting order differs by culture and language and is usually nothing like code point for code point comparison. The natural order of strings is obtained by applying &lt;a href=&quot;http://www.unicode.org/reports/tr10/&quot;&gt;the Unicode collation algorithm&lt;/a&gt; that should be implemented in the standard library.</source>
          <target state="translated">마지막으로, 원하는 문자열 정렬 순서는 문화와 언어에 따라 다르며 일반적으로 코드 포인트 비교를위한 코드 포인트와는 다릅니다. 문자열의 자연스러운 순서 는 표준 라이브러리에서 구현해야하는 &lt;a href=&quot;http://www.unicode.org/reports/tr10/&quot;&gt;유니 코드 데이터 정렬 알고리즘&lt;/a&gt; 을 적용 하여 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="cc6d1acb7397d0e5f9098c07f2c7d3aac9936d0e" translate="yes" xml:space="preserve">
          <source>LastExp</source>
          <target state="translated">LastExp</target>
        </trans-unit>
        <trans-unit id="e376b71fe7dd3dc385eba80f693a4c2924d5853c" translate="yes" xml:space="preserve">
          <source>Lastly, &lt;code&gt;x&lt;/code&gt; is set to &lt;code&gt;null&lt;/code&gt;. Any attempt to read or write the freed memory via other references will result in undefined behavior.</source>
          <target state="translated">마지막으로 &lt;code&gt;x&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 로 설정됩니다 . 다른 참조를 통해 해제 된 메모리를 읽거나 쓰려고하면 정의되지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9bde795b72be44b343c829314d764282997de688" translate="yes" xml:space="preserve">
          <source>Latin</source>
          <target state="translated">Latin</target>
        </trans-unit>
        <trans-unit id="82571d399af24c495758fdf2aafee5df861943f9" translate="yes" xml:space="preserve">
          <source>Latin Extended Additional</source>
          <target state="translated">라틴 확장 추가</target>
        </trans-unit>
        <trans-unit id="76afa1e916dcce2f445fbbe44abc694adfadc217" translate="yes" xml:space="preserve">
          <source>Latin Extended-A</source>
          <target state="translated">라틴어 확장 -A</target>
        </trans-unit>
        <trans-unit id="c4bc78ee217699a4bb7436be239e087264930a51" translate="yes" xml:space="preserve">
          <source>Latin Extended-B</source>
          <target state="translated">라틴어 확장 -B</target>
        </trans-unit>
        <trans-unit id="204b4ebb9b53ee3348fc9e967c0acfd748bea9b0" translate="yes" xml:space="preserve">
          <source>Latin Extended-C</source>
          <target state="translated">라틴어 확장 -C</target>
        </trans-unit>
        <trans-unit id="fbd8786d3fb197f080f06774e92557923807eec5" translate="yes" xml:space="preserve">
          <source>Latin Extended-D</source>
          <target state="translated">라틴어 확장 -D</target>
        </trans-unit>
        <trans-unit id="7f209e08d16789fe763be5b66fed5e229156bc03" translate="yes" xml:space="preserve">
          <source>Latin-1 (ISO-8859-1) Entities</source>
          <target state="translated">라틴 -1 (ISO-8859-1) 엔티티</target>
        </trans-unit>
        <trans-unit id="f76f4a63a6de1f8fde56d0d52b8de3cc7681c7c6" translate="yes" xml:space="preserve">
          <source>Latin-1 Supplement</source>
          <target state="translated">라틴 -1 보충</target>
        </trans-unit>
        <trans-unit id="ee2650a3acdca161fdd647691bd5c1914bdc316d" translate="yes" xml:space="preserve">
          <source>Layered Structure</source>
          <target state="translated">계층 구조</target>
        </trans-unit>
        <trans-unit id="bfa939b4bde1628cdf49d14c2332ebb064d40ef2" translate="yes" xml:space="preserve">
          <source>Lazily computes all permutations of &lt;code&gt;r&lt;/code&gt; using &lt;a href=&quot;http://en.wikipedia.org/wiki/Heap%27s_algorithm&quot;&gt;Heap's algorithm&lt;/a&gt;.</source>
          <target state="translated">지연 &lt;a href=&quot;http://en.wikipedia.org/wiki/Heap%27s_algorithm&quot;&gt;알고리즘을&lt;/a&gt; 사용하여 &lt;code&gt;r&lt;/code&gt; 의 모든 순열을 지연 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="7e2c1f0beaadd3254feecabea06e88d4b79b02dc" translate="yes" xml:space="preserve">
          <source>Lazily computes all permutations using Heap's algorithm.</source>
          <target state="translated">지연 알고리즘을 사용하여 모든 순열을 지연 계산합니다.</target>
        </trans-unit>
        <trans-unit id="107096b86eaeda16b3e3830aeea022c0ee83280a" translate="yes" xml:space="preserve">
          <source>Lazily computes the Cartesian product of two or more ranges. The product is a range of tuples of elements from each respective range.</source>
          <target state="translated">Lazily는 두 개 이상의 범위의 카티 전 곱을 계산합니다. 제품은 각 범위에서 요소의 튜플 범위입니다.</target>
        </trans-unit>
        <trans-unit id="5ccd41e6fdf7bb2cc2caeff24d6524d188618f62" translate="yes" xml:space="preserve">
          <source>Lazily computes the difference of &lt;code&gt;r1&lt;/code&gt; and &lt;code&gt;r2&lt;/code&gt;. The two ranges are assumed to be sorted by &lt;code&gt;less&lt;/code&gt;. The element types of the two ranges must have a common type.</source>
          <target state="translated">지연은 &lt;code&gt;r1&lt;/code&gt; 과 &lt;code&gt;r2&lt;/code&gt; 의 차이를 계산합니다 . 두 범위는 &lt;code&gt;less&lt;/code&gt; 정렬 된 것으로 가정합니다 . 두 범위의 요소 유형은 공통 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="11620253bf7b271db7d14cf8cdf8bc0f4e54e75c" translate="yes" xml:space="preserve">
          <source>Lazily computes the intersection of two or more &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input ranges&lt;/a&gt;&lt;code&gt;ranges&lt;/code&gt;. The ranges are assumed to be sorted by &lt;code&gt;less&lt;/code&gt;. The element types of the ranges must have a common type.</source>
          <target state="translated">두 개 이상의 &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;입력 범위 &lt;/a&gt; &lt;code&gt;ranges&lt;/code&gt; 의 교집합을 지연 계산합니다 . 범위는 &lt;code&gt;less&lt;/code&gt; 정렬 된 것으로 가정합니다 . 범위의 요소 유형은 공통 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="bcbe3c8fe89d00240758248fe29948f389fe9d2c" translate="yes" xml:space="preserve">
          <source>Lazily computes the intersection of two or more sorted ranges.</source>
          <target state="translated">Lazily는 둘 이상의 정렬 된 범위의 교집합을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="e56317731f2e65960db359b60cd199fb81c6c36a" translate="yes" xml:space="preserve">
          <source>Lazily computes the set difference of two or more sorted ranges.</source>
          <target state="translated">두 개 이상의 정렬 된 범위의 설정 차이를 지연 계산합니다.</target>
        </trans-unit>
        <trans-unit id="a7dc174d1b393408f652f2ee4cdbe7ec73d58a98" translate="yes" xml:space="preserve">
          <source>Lazily computes the symmetric difference of &lt;code&gt;r1&lt;/code&gt; and &lt;code&gt;r2&lt;/code&gt;, i.e. the elements that are present in exactly one of &lt;code&gt;r1&lt;/code&gt; and &lt;code&gt;r2&lt;/code&gt;. The two ranges are assumed to be sorted by &lt;code&gt;less&lt;/code&gt;, and the output is also sorted by &lt;code&gt;less&lt;/code&gt;. The element types of the two ranges must have a common type.</source>
          <target state="translated">&lt;code&gt;r1&lt;/code&gt; 과 &lt;code&gt;r2&lt;/code&gt; 의 대칭 차이 , 즉 &lt;code&gt;r1&lt;/code&gt; 과 &lt;code&gt;r2&lt;/code&gt; 중 정확히 하나에 존재하는 요소를 지연 계산합니다 . 두 범위는 &lt;code&gt;less&lt;/code&gt; 정렬 된 것으로 가정되고 출력도 &lt;code&gt;less&lt;/code&gt; 정렬됩니다 . 두 범위의 요소 유형은 공통 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="0a833e31b29c15d5d10ff03efb2b971994c72b99" translate="yes" xml:space="preserve">
          <source>Lazily computes the symmetric set difference of two or more sorted ranges.</source>
          <target state="translated">두 개 이상의 정렬 된 범위의 대칭 집합 차이를 지연 계산합니다.</target>
        </trans-unit>
        <trans-unit id="f5e63bd3d07f55a5748e5c534c9595eca39053b0" translate="yes" xml:space="preserve">
          <source>Lazily generate identifier for template instance. This is because 75% of the ident's are never needed.</source>
          <target state="translated">템플릿 인스턴스의 식별자를 느리게 생성합니다. 아이덴티티의 75 %가 필요하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="3bb485042cec806e50ef44dfce159b1476065631" translate="yes" xml:space="preserve">
          <source>Lazily initializes the scope to forward to.</source>
          <target state="translated">전달할 범위를 느리게 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="a262d4d77393c41d08604edd8fd36f4b129d8a3e" translate="yes" xml:space="preserve">
          <source>Lazily iterates &lt;code&gt;range&lt;/code&gt; until the element &lt;code&gt;e&lt;/code&gt; for which &lt;code&gt;pred(e, sentinel)&lt;/code&gt; is true.</source>
          <target state="translated">느리게 반복은 &lt;code&gt;range&lt;/code&gt; 소자까지 &lt;code&gt;e&lt;/code&gt; 용은 &lt;code&gt;pred(e, sentinel)&lt;/code&gt; 사실이다.</target>
        </trans-unit>
        <trans-unit id="37fa2575de04d25ca5f4a9acbfb7307d51258f3c" translate="yes" xml:space="preserve">
          <source>Lazily iterates a range until a specific value is found.</source>
          <target state="translated">특정 값을 찾을 때까지 범위를 느리게 반복합니다.</target>
        </trans-unit>
        <trans-unit id="855e8fb90512662d24bc8780e84a525e1cbb91c5" translate="yes" xml:space="preserve">
          <source>Lazily iterates unique consecutive elements of the given range (functionality akin to the &lt;a href=&quot;http://wikipedia.org/wiki/Uniq&quot;&gt;uniq&lt;/a&gt; system utility). Equivalence of elements is assessed by using the predicate &lt;code&gt;pred&lt;/code&gt;, by default &lt;code&gt;&quot;a == b&quot;&lt;/code&gt;. The predicate is passed to &lt;a href=&quot;std_functional#binaryFun&quot;&gt;&lt;code&gt;std.functional.binaryFun&lt;/code&gt;&lt;/a&gt;, and can either accept a string, or any callable that can be executed via &lt;code&gt;pred(element, element)&lt;/code&gt;. If the given range is bidirectional, &lt;code&gt;uniq&lt;/code&gt; also yields a &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;bidirectional range&lt;/a&gt;.</source>
          <target state="translated">주어진 범위 ( &lt;a href=&quot;http://wikipedia.org/wiki/Uniq&quot;&gt;uniq&lt;/a&gt; 시스템 유틸리티 와 유사한 기능)의 고유 한 연속 요소를 느리게 반복합니다 . 술어 &lt;code&gt;pred&lt;/code&gt; 를 사용하여 요소의 동등성을 평가 합니다 (기본적으로 &lt;code&gt;&quot;a == b&quot;&lt;/code&gt; . 술어는 &lt;a href=&quot;std_functional#binaryFun&quot;&gt; &lt;code&gt;std.functional.binaryFun&lt;/code&gt; 에&lt;/a&gt; 전달되며 문자열 또는 &lt;code&gt;pred(element, element)&lt;/code&gt; 를 통해 실행할 수있는 호출 가능 항목을 승인 할 수 있습니다 . 주어진 범위가 양방향 인 경우, &lt;code&gt;uniq&lt;/code&gt; 은 또한 &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;양방향 범위를&lt;/a&gt; 산출합니다 .</target>
        </trans-unit>
        <trans-unit id="dcd4c05189e44a024d61096cebf8a9000f337938" translate="yes" xml:space="preserve">
          <source>Lazily joins a range of ranges with a separator. The separator itself is a range. If a separator is not provided, then the ranges are joined directly without anything in between them (often called &lt;code&gt;flatten&lt;/code&gt; in other languages).</source>
          <target state="translated">범위의 범위를 구분 기호로 느리게 결합합니다. 구분자 자체는 범위입니다. 구분 기호가 제공되지 않으면 범위는 그 사이에 아무 것도없이 직접 결합됩니다 (종종 다른 언어 에서는 &lt;code&gt;flatten&lt;/code&gt; 이라고 함 ).</target>
        </trans-unit>
        <trans-unit id="78adbed58b69c14bab88204b103552a98acd8b88" translate="yes" xml:space="preserve">
          <source>Lazily merges two or more sorted ranges.</source>
          <target state="translated">둘 이상의 정렬 된 범위를 느리게 병합합니다.</target>
        </trans-unit>
        <trans-unit id="3f0c45896cd5857d56956a33e01c9a444f7528d6" translate="yes" xml:space="preserve">
          <source>Lazily pads a range to a specified length by adding a given element to the back of the range.</source>
          <target state="translated">지정된 요소를 범위 뒤에 추가하여 범위를 지정된 길이로 느리게 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="f494ee73f56475d2a1f3930ddb0e80428caf8a76" translate="yes" xml:space="preserve">
          <source>Lazily splits a range by a separator.</source>
          <target state="translated">범위를 구분 기호로 느리게 분할합니다.</target>
        </trans-unit>
        <trans-unit id="c63f40da4727f29b6b1fb052d750dd95793056b6" translate="yes" xml:space="preserve">
          <source>Lazily splits a range using an element or range as a separator. Separator ranges can be any narrow string type or sliceable range type.</source>
          <target state="translated">요소 또는 범위를 구분 기호로 사용하여 범위를 느리게 분할합니다. 구분자 범위는 좁은 문자열 유형 또는 슬라이스 가능한 범위 유형일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ccf00e916575e9b3f08279417e858a27e23af9d" translate="yes" xml:space="preserve">
          <source>Lazily splits the character-based range &lt;code&gt;s&lt;/code&gt; into words, using whitespace as the delimiter.</source>
          <target state="translated">느리게 문자 기반의 분할 범위 &lt;code&gt;s&lt;/code&gt; 구분자로 공백을 사용하여, 단어로.</target>
        </trans-unit>
        <trans-unit id="3389a918428772f39da31b4076e337a04baf8333" translate="yes" xml:space="preserve">
          <source>Lazily takes only up to &lt;code&gt;n&lt;/code&gt; elements of a range. This is particularly useful when using with infinite ranges.</source>
          <target state="translated">Lazily는 범위의 최대 &lt;code&gt;n&lt;/code&gt; 개 요소 만 취합니다 . 무한 범위와 함께 사용할 때 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="36687985b7156a39c23148c62ffcfbac01df34ce" translate="yes" xml:space="preserve">
          <source>Lazily transform a range of &lt;a href=&quot;#Grapheme&quot;&gt;&lt;code&gt;Grapheme&lt;/code&gt;&lt;/a&gt;s to a range of code points.</source>
          <target state="translated">&lt;a href=&quot;#Grapheme&quot;&gt; &lt;code&gt;Grapheme&lt;/code&gt; &lt;/a&gt; 범위를 코드 포인트 범위로 느리게 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bd36508e59e756caeb78e5c935ff99c61bf50c57" translate="yes" xml:space="preserve">
          <source>Lazy Parameters</source>
          <target state="translated">게으른 매개 변수</target>
        </trans-unit>
        <trans-unit id="9e98a803d8a3de17d9dde40743f7d0b0ef000790" translate="yes" xml:space="preserve">
          <source>Lazy Variadic Functions</source>
          <target state="translated">게으른 가변 함수</target>
        </trans-unit>
        <trans-unit id="4ee0307b3a4c3fedfc4c2c80cb3303a1c9f1efd0" translate="yes" xml:space="preserve">
          <source>Lazy decode</source>
          <target state="translated">지연 디코딩</target>
        </trans-unit>
        <trans-unit id="7734c6545eb4a90529d63e3a31cfe3c2fc1ac09d" translate="yes" xml:space="preserve">
          <source>Lazy parameters are currently, too restrictively, inferred by DMD to always throw even though they don't need to be. This makes it impossible to currently mark &lt;code&gt;either&lt;/code&gt; as &lt;code&gt;nothrow&lt;/code&gt;. See issue at &lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=12647&quot;&gt;Bugzilla 12647&lt;/a&gt;.</source>
          <target state="translated">게으른 매개 변수는 현재 너무 제한적으로 DMD에 의해 추론 될 필요는 없지만 항상 던지기 위해 유추됩니다. 이로 인해 현재 &lt;code&gt;nothrow&lt;/code&gt; 로 표시 &lt;code&gt;either&lt;/code&gt; 수 없습니다 . &lt;a href=&quot;https://issues.dlang.org/show_bug.cgi?id=12647&quot;&gt;Bugzilla 12647의&lt;/a&gt; 문제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="071289bb363736afa36a31dce99701fd42dd4a6b" translate="yes" xml:space="preserve">
          <source>Lazy range which is the concatenation of r1, r2 and ranges with path separators. The resulting element type is that of r1.</source>
          <target state="translated">게으른 범위는 r1, r2의 연결이며 경로 구분 기호와 범위입니다. 결과 요소 유형은 r1의 요소 유형입니다.</target>
        </trans-unit>
        <trans-unit id="de2d83046e13537c5df1729e5a3946298fa16c44" translate="yes" xml:space="preserve">
          <source>Leading separators, trailing separators, or no separators.</source>
          <target state="translated">선행 분리기, 후행 분리기 또는 분리기가 없습니다.</target>
        </trans-unit>
        <trans-unit id="38895ec4492ad75a4a86c9ace4229f7786f0b3e2" translate="yes" xml:space="preserve">
          <source>Leading_Jamo</source>
          <target state="translated">Leading_Jamo</target>
        </trans-unit>
        <trans-unit id="fd94160d0aa2ea752c72468cd1b2add9485192dc" translate="yes" xml:space="preserve">
          <source>Leaving a pointer to it in the static data segment, as the garbage collector will scan the static data segment.</source>
          <target state="translated">가비지 콜렉터가 정적 데이터 세그먼트를 스캔하므로 정적 데이터 세그먼트에 포인터를 두십시오.</target>
        </trans-unit>
        <trans-unit id="cfc4be551f2905e6978237e7d77f437233291957" translate="yes" xml:space="preserve">
          <source>Leaving a pointer to it on the stack (as a parameter or automatic variable), as the garbage collector will scan the stack.</source>
          <target state="translated">가비지 콜렉터가 스택을 스캔하므로 스택에 포인터를 매개 변수 또는 자동 변수로 두십시오.</target>
        </trans-unit>
        <trans-unit id="378514d607275e8ee888d65cae8f24d7c6f45b02" translate="yes" xml:space="preserve">
          <source>Left bound of initial range of &lt;code&gt;f&lt;/code&gt; known to contain the root.</source>
          <target state="translated">루트를 포함하는 것으로 알려진 초기 범위 &lt;code&gt;f&lt;/code&gt; 의 왼쪽 경계 .</target>
        </trans-unit>
        <trans-unit id="bfaa1709061a514729de6e5c8f858f0bf2d27571" translate="yes" xml:space="preserve">
          <source>Left bound of initial range of f known to contain the minimum.</source>
          <target state="translated">최소값을 포함하는 것으로 알려진 초기 범위 f의 왼쪽 경계.</target>
        </trans-unit>
        <trans-unit id="7a57a5cca8f620ef653afa4677312603d0eb35a4" translate="yes" xml:space="preserve">
          <source>Left justify &lt;code&gt;s&lt;/code&gt; in a field &lt;code&gt;width&lt;/code&gt; characters wide. &lt;code&gt;fillChar&lt;/code&gt; is the character that will be used to fill up the space in the field that &lt;code&gt;s&lt;/code&gt; doesn't fill.</source>
          <target state="translated">왼쪽 정당화 &lt;code&gt;s&lt;/code&gt; 필드에서 &lt;code&gt;width&lt;/code&gt; 넓은 문자. &lt;code&gt;fillChar&lt;/code&gt; 는 그 분야에서 공간을 채우기 위해 사용되는 문자 &lt;code&gt;s&lt;/code&gt; 기입하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e252b9f8988cde95614457fcc99883dd09f1324a" translate="yes" xml:space="preserve">
          <source>Left justify the result in the field. It overrides any 0 flag.</source>
          <target state="translated">필드에서 결과를 왼쪽으로 맞 춥니 다. 0 플래그를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="bf867e91cd944e7c2c4d6696d9a4bdcaa30b2078" translate="yes" xml:space="preserve">
          <source>Legacy module unit test handler</source>
          <target state="translated">레거시 모듈 유닛 테스트 핸들러</target>
        </trans-unit>
        <trans-unit id="71c39ee5d287555af96dcd575a5c855e58330dd8" translate="yes" xml:space="preserve">
          <source>Lego-like pieces that can be used to assemble application-specific allocators. The real allocation smarts are occurring at this level. This layer is of interest to advanced applications that want to configure their own allocators. A good illustration of typical uses of these building blocks is module &lt;a href=&quot;std_experimental_allocator_showcase&quot;&gt;&lt;code&gt;std.experimental.allocator.showcase&lt;/code&gt;&lt;/a&gt; which defines a collection of frequently- used preassembled allocator objects. The implementation and documentation entry point is &lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt;&lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt;&lt;/a&gt;. By design, the primitives of the static interface have the same signatures as the &lt;a href=&quot;#IAllocator&quot;&gt;&lt;code&gt;IAllocator&lt;/code&gt;&lt;/a&gt; primitives but are for the most part optional and driven by static introspection. The parameterized class &lt;a href=&quot;#CAllocatorImpl&quot;&gt;&lt;code&gt;CAllocatorImpl&lt;/code&gt;&lt;/a&gt; offers an immediate and useful means to package a static low-level allocator into an implementation of &lt;a href=&quot;#IAllocator&quot;&gt;&lt;code&gt;IAllocator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램 별 할당자를 조립하는 데 사용할 수있는 레고와 같은 조각. 실제 할당 스마트는이 수준에서 발생합니다. 이 계층은 자체 할당자를 구성하려는 고급 응용 프로그램에 관심이 있습니다. 이러한 빌딩 블록의 일반적인 사용에 대한 좋은 예는 &lt;a href=&quot;std_experimental_allocator_showcase&quot;&gt; &lt;code&gt;std.experimental.allocator.showcase&lt;/code&gt; &lt;/a&gt; 모듈입니다.이 모듈 은 자주 사용되는 사전 조립 된 할당 자 객체의 모음을 정의합니다. 구현 및 문서 진입 점은 &lt;a href=&quot;std_experimental_allocator_building_blocks&quot;&gt; &lt;code&gt;std.experimental.allocator.building_blocks&lt;/code&gt; &lt;/a&gt; 입니다. 설계 상 정적 인터페이스의 프리미티브는 &lt;a href=&quot;#IAllocator&quot;&gt; &lt;code&gt;IAllocator&lt;/code&gt; &lt;/a&gt; 프리미티브 와 동일한 시그니처를 갖지만 대부분 선택적이며 정적 인트로 스펙 션에 의해 구동됩니다. 매개 변수화 된 클래스 &lt;a href=&quot;#CAllocatorImpl&quot;&gt; &lt;code&gt;CAllocatorImpl&lt;/code&gt; &lt;/a&gt;정적 저레벨 할당자를 &lt;a href=&quot;#IAllocator&quot;&gt; &lt;code&gt;IAllocator&lt;/code&gt; &lt;/a&gt; 구현으로 패키지화 하는 즉각적이고 유용한 수단을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="3bade34ecbc5d996b2f301ebd4ba689e81c7c9ea" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="translated">Length</target>
        </trans-unit>
        <trans-unit id="548a74b725f624c9fdb6b48fe948844ad4ba15cf" translate="yes" xml:space="preserve">
          <source>Length &amp;amp; Index</source>
          <target state="translated">길이 및 색인</target>
        </trans-unit>
        <trans-unit id="a8a261464d376ab7ec4d0aff6dd2a8ddccaf2ea4" translate="yes" xml:space="preserve">
          <source>Length of the source array.</source>
          <target state="translated">소스 배열의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="fa58f0cd5f0d162bcdd0bb8e1a9f9fab638355f0" translate="yes" xml:space="preserve">
          <source>Length. Only if &lt;code&gt;hasLength!Source&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">길이. &lt;code&gt;hasLength!Source&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우에만</target>
        </trans-unit>
        <trans-unit id="2932c65a2b38d62eb561a2ad9e13e95ab6d5d8aa" translate="yes" xml:space="preserve">
          <source>Lepcha</source>
          <target state="translated">Lepcha</target>
        </trans-unit>
        <trans-unit id="89c036bdcb0bbedc59d932a4fa7bc23acfe0d446" translate="yes" xml:space="preserve">
          <source>Let the application define a custom write method for RTP data</source>
          <target state="translated">애플리케이션이 RTP 데이터에 대한 사용자 정의 쓰기 방법을 정의하도록합니다.</target>
        </trans-unit>
        <trans-unit id="937ea74e8f69c6f2d7124bc18246f8a660b1dec7" translate="yes" xml:space="preserve">
          <source>Let the application define custom chunk data pointer</source>
          <target state="translated">응용 프로그램이 사용자 지정 청크 데이터 포인터를 정의하도록합니다.</target>
        </trans-unit>
        <trans-unit id="5e0bcf64b358e91eb969a7948fad248efcb9751a" translate="yes" xml:space="preserve">
          <source>Let the server initiate the shutdown</source>
          <target state="translated">서버가 종료를 시작하게하십시오</target>
        </trans-unit>
        <trans-unit id="a89a34ec4663e88cca1a7e3de00a3e3430d08014" translate="yes" xml:space="preserve">
          <source>Let's consider the file is ASCII encoded with LF EOL. In general case we should use</source>
          <target state="translated">파일이 LF EOL로 ASCII 인코딩 된 것으로 가정하십시오. 일반적으로 우리는 사용해야합니다</target>
        </trans-unit>
        <trans-unit id="d07a72b4d32963582b6eae7916f61a4b8e60a331" translate="yes" xml:space="preserve">
          <source>Let's first make some observations and assumptions about errors:</source>
          <target state="translated">먼저 오류에 대한 몇 가지 관찰과 가정을하겠습니다.</target>
        </trans-unit>
        <trans-unit id="ee14050617b7b58e17aabccd61c241ccdafc6379" translate="yes" xml:space="preserve">
          <source>Letter</source>
          <target state="translated">Letter</target>
        </trans-unit>
        <trans-unit id="9396bf9200a37a33be1f189b9b3f63cbfdb0cb05" translate="yes" xml:space="preserve">
          <source>Letter case specifier.</source>
          <target state="translated">대소 문자 구분자.</target>
        </trans-unit>
        <trans-unit id="8ec2ddae534f2e9f786626d1461f045b3ea7a132" translate="yes" xml:space="preserve">
          <source>Letter_Number</source>
          <target state="translated">Letter_Number</target>
        </trans-unit>
        <trans-unit id="cfcd1e23ef9e122ab3fba825014a84415f49edb0" translate="yes" xml:space="preserve">
          <source>Letterlike Symbols</source>
          <target state="translated">글자 모양의 기호</target>
        </trans-unit>
        <trans-unit id="4ed7dbd610162ec2a8bbd97befecda7912a54468" translate="yes" xml:space="preserve">
          <source>Level 1 is fastest and the most memory hungry (a bit array).</source>
          <target state="translated">레벨 1이 가장 빠르며 메모리 사용량이 가장 많습니다 (비트 배열).</target>
        </trans-unit>
        <trans-unit id="fc694144a5b7ef693cb1ee99fd99fa168f951953" translate="yes" xml:space="preserve">
          <source>Level 4 is the slowest and has the smallest footprint.</source>
          <target state="translated">레벨 4가 가장 느리고 발자국이 가장 작습니다.</target>
        </trans-unit>
        <trans-unit id="75bac2861cadd9b0f5864b4833944f933a0bf887" translate="yes" xml:space="preserve">
          <source>Level 4 stays very practical (being faster and more predictable) compared to using direct lookup on the &lt;code&gt;set&lt;/code&gt; itself.</source>
          <target state="translated">레벨 4는 &lt;code&gt;set&lt;/code&gt; 자체 에서 직접 조회를 사용하는 것에 비해 매우 실용적입니다 (보다 빠르고 예측 가능) .</target>
        </trans-unit>
        <trans-unit id="8ad20abdb83c4a21d224a891c2b7c7c494f6fcf2" translate="yes" xml:space="preserve">
          <source>Lexical</source>
          <target state="translated">Lexical</target>
        </trans-unit>
        <trans-unit id="476ef6248b6dd64f9ad5670dee5d53dccca0f8e8" translate="yes" xml:space="preserve">
          <source>Lexical - documentation comments are identified and attached to tokens.</source>
          <target state="translated">어휘-문서 주석이 식별되어 토큰에 첨부됩니다.</target>
        </trans-unit>
        <trans-unit id="b605249a5e48b6c693e6ec1b2b1e13428184994b" translate="yes" xml:space="preserve">
          <source>Lexical Syntax</source>
          <target state="translated">어휘 구문</target>
        </trans-unit>
        <trans-unit id="6b297fc7c475ea0278237a59c66e5996eac30867" translate="yes" xml:space="preserve">
          <source>Lhs</source>
          <target state="translated">Lhs</target>
        </trans-unit>
        <trans-unit id="fc8137f8a9e13c5b635a4ba40e4e3901d90fcbaa" translate="yes" xml:space="preserve">
          <source>Lhs &lt;code&gt;lhs&lt;/code&gt;</source>
          <target state="translated">Lhs &lt;code&gt;lhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8bdc1af0abe67308adf385d7cdcceabf9cb6ab55" translate="yes" xml:space="preserve">
          <source>Lhs &lt;strong id=&quot;hookOpCast&quot;&gt;hookOpCast&lt;/strong&gt;(Lhs, Rhs)(Rhs rhs);</source>
          <target state="translated">Lhs &lt;strong id=&quot;hookOpCast&quot;&gt;hookOpCast&lt;/strong&gt; (Lhs, Rhs) (Rhs rhs);</target>
        </trans-unit>
        <trans-unit id="e40077902f44f1b09ccb2459863a81b02022efb2" translate="yes" xml:space="preserve">
          <source>Lhs &lt;strong id=&quot;onLowerBound&quot;&gt;onLowerBound&lt;/strong&gt;(Rhs, T)(Rhs rhs, T bound);</source>
          <target state="translated">Lhs &lt;strong id=&quot;onLowerBound&quot;&gt;onLowerBound&lt;/strong&gt; (Rhs, T) (Rhs rhs, T 경계);</target>
        </trans-unit>
        <trans-unit id="df063bf53c8e8cb3fd9aa4249d1fa6357775527c" translate="yes" xml:space="preserve">
          <source>Library used incorrectly</source>
          <target state="translated">라이브러리가 잘못 사용되었습니다</target>
        </trans-unit>
        <trans-unit id="de13bf1ab0b419f34cb1b3b43e094c84009a42db" translate="yes" xml:space="preserve">
          <source>License:</source>
          <target state="translated">License:</target>
        </trans-unit>
        <trans-unit id="a50ab4cf4ccadacece6a685a96a8d2bf5b03f087" translate="yes" xml:space="preserve">
          <source>Licensed under the Boost License 1.0.</source>
          <target state="translated">Boost License 1.0에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="ee1ab8e4255c8f881c480d8d54bca4a8a2c24209" translate="yes" xml:space="preserve">
          <source>Lifetime Management</source>
          <target state="translated">평생 관리</target>
        </trans-unit>
        <trans-unit id="e353dd7cee6d59762b4ca39b60327e65283ae7b3" translate="yes" xml:space="preserve">
          <source>Lifetime of Temporaries</source>
          <target state="translated">일시적인 일생</target>
        </trans-unit>
        <trans-unit id="4d7185d6c7e3e5b1495e2c640489530ecb9b7900" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ReplaceType&quot;&gt;&lt;code&gt;ReplaceType&lt;/code&gt;&lt;/a&gt;, but does not perform replacement in types for which &lt;code&gt;pred&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ReplaceType&quot;&gt; &lt;code&gt;ReplaceType&lt;/code&gt; &lt;/a&gt; 과 유사 하지만 &lt;code&gt;pred&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 평가 되는 유형에서는 교체를 수행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="bd33998b0ace4c944f0efc3096535b923482d5ba" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#soundexer&quot;&gt;&lt;code&gt;soundexer&lt;/code&gt;&lt;/a&gt;, but with different parameters and return value.</source>
          <target state="translated">&lt;a href=&quot;#soundexer&quot;&gt; &lt;code&gt;soundexer&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만 매개 변수와 반환 값이 다릅니다.</target>
        </trans-unit>
        <trans-unit id="2606b35e5c6c0f3c9d736f7c373c8b55857520eb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;contains&lt;/code&gt;, but the value is specified before the range.</source>
          <target state="translated">등 &lt;code&gt;contains&lt;/code&gt; 있지만, 값의 범위 전에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="2b288cc6cc51f7928ab9ad8fe1740aac1c58fab0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;isSorted&lt;/code&gt;, returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;values&lt;/code&gt; are ordered according to the comparison operation &lt;code&gt;less&lt;/code&gt;. Unlike &lt;code&gt;isSorted&lt;/code&gt;, takes values directly instead of structured in a range.</source>
          <target state="translated">&lt;code&gt;isSorted&lt;/code&gt; 와 마찬가지로 주어진 &lt;code&gt;values&lt;/code&gt; 이 비교 연산 &lt;code&gt;less&lt;/code&gt; 에 따라 정렬 되면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . &lt;code&gt;isSorted&lt;/code&gt; 와 달리 범위 내에서 구조화되는 대신 직접 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="50325585f34ee66ce178dbad88dde192b85ee604" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;take&lt;/code&gt;, but assumes the given range actually has</source>
          <target state="translated">마찬가지로 &lt;code&gt;take&lt;/code&gt; 있지만, 주어진 범위가 실제로 가지고 가정</target>
        </trans-unit>
        <trans-unit id="bbdaeb1b36bc514e26a308358d8185b3a8585d1b" translate="yes" xml:space="preserve">
          <source>Like bodies of &lt;a href=&quot;#ConditionalDeclaration&quot;&gt;&lt;i&gt;ConditionalDeclaration&lt;/i&gt;&lt;/a&gt;s, a &lt;code&gt;static foreach&lt;/code&gt; body does not introduce a new scope. Therefore, it can be used to generate declarations:</source>
          <target state="translated">&lt;a href=&quot;#ConditionalDeclaration&quot;&gt;&lt;i&gt;ConditionalDeclaration&lt;/i&gt;&lt;/a&gt; 의 본문과 마찬가지로 &lt;code&gt;static foreach&lt;/code&gt; 본문에는 새로운 범위가 도입되지 않습니다. 따라서 선언을 생성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="596f012fcab74c7f7a0fbb5751d3954bb4881d08" translate="yes" xml:space="preserve">
          <source>Like findBestMatch, iterate possible template candidates, but just looks only the necessity of type inference.</source>
          <target state="translated">findBestMatch와 마찬가지로 가능한 템플릿 후보를 반복하지만 형식 유추의 필요성 만 보입니다.</target>
        </trans-unit>
        <trans-unit id="8d23b1454364b12f21ad47d5ebb3ea9cdcdf0bab" translate="yes" xml:space="preserve">
          <source>Like in &lt;a href=&quot;#replaceFirst&quot;&gt;&lt;code&gt;replaceFirst&lt;/code&gt;&lt;/a&gt; family of functions there is an overload for the substitution guided by the &lt;code&gt;format&lt;/code&gt; string and the one with the user defined callback.</source>
          <target state="translated">&lt;a href=&quot;#replaceFirst&quot;&gt; &lt;code&gt;replaceFirst&lt;/code&gt; &lt;/a&gt; 함수 계열 에서와 같이 &lt;code&gt;format&lt;/code&gt; 문자열과 사용자 정의 콜백이 있는 대체 문자열에 의해 대체되는 과부하가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc66fa44d8868ee404a0494db572ba397dd68bd7" translate="yes" xml:space="preserve">
          <source>Like most parsers, it consumes its argument. This means:</source>
          <target state="translated">대부분의 파서와 마찬가지로 인수를 사용합니다. 이것은 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="45079d6fbbbd7e92a8db7a1ac24f7a5f82b14899" translate="yes" xml:space="preserve">
          <source>Like xoff(), but returns handle with which to patch 'offset' value.</source>
          <target state="translated">xoff ()와 비슷하지만 'offset'값을 패치 할 핸들을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2e7f519163cff0e363c25131c1b51c316fcca76a" translate="yes" xml:space="preserve">
          <source>Likewise, declare a boolean &lt;code&gt;rt_envvars_enabled&lt;/code&gt; to enable configuration via the environment variable &lt;code&gt;DRT_GCOPT&lt;/code&gt;:</source>
          <target state="translated">마찬가지로 환경 변수 &lt;code&gt;DRT_GCOPT&lt;/code&gt; 를 통해 구성을 가능하게하려면 부울 &lt;code&gt;rt_envvars_enabled&lt;/code&gt; 를 선언하십시오 .</target>
        </trans-unit>
        <trans-unit id="05ceb7325c8a826b5f89f8751e8a978ab3c8670c" translate="yes" xml:space="preserve">
          <source>Likewise, declare a boolean rt_envvars_enabled to enable configuration via the environment variable &lt;code&gt;DRT_&lt;/code&gt; followed by the option name, e.g. &lt;code&gt;DRT_GCOPT&lt;/code&gt;:</source>
          <target state="translated">마찬가지로, 부울 환경 변수를 통해 구성을 가능하게 rt_envvars_enabled 선언한다 &lt;code&gt;DRT_&lt;/code&gt; 는 옵션 이름 다음에, 예를 들어 &lt;code&gt;DRT_GCOPT&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0be788e5cd03f159b54ca8ea573d4290d5478fb0" translate="yes" xml:space="preserve">
          <source>Limbu</source>
          <target state="translated">Limbu</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="f0b7d22c2b2095983184f3f1451012e2dda7ffbe" translate="yes" xml:space="preserve">
          <source>Limited function template instantiation for using fd.leastAsSpecialized()</source>
          <target state="translated">fd.leastAsSpecialized () 사용을위한 제한된 함수 템플릿 인스턴스화</target>
        </trans-unit>
        <trans-unit id="575a8a2e7f326685ced3cd6e4c6b6e3bf22c896a" translate="yes" xml:space="preserve">
          <source>Limiting a program to this subset of runtime features is useful when targeting constrained environments where the use of such features is not practical or possible.</source>
          <target state="translated">프로그램을 이러한 런타임 기능의 하위 집합으로 제한하면 이러한 기능을 사용할 수 없거나 제한된 환경을 대상으로하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="94b2ecf33206fff8253255f672c5f85e4a9fb00a" translate="yes" xml:space="preserve">
          <source>Limits &amp;amp; machine dependent stuff.</source>
          <target state="translated">한계 및 기계 의존 물.</target>
        </trans-unit>
        <trans-unit id="79a87925d2fef04b39fdff35de5098824ce21fe8" translate="yes" xml:space="preserve">
          <source>Line comments terminate at the end of the line.</source>
          <target state="translated">줄 설명은 줄 끝에서 끝납니다.</target>
        </trans-unit>
        <trans-unit id="7f39a27437a342a87766f7dbc95e14bd677b6b05" translate="yes" xml:space="preserve">
          <source>Line inside of &lt;code&gt;file&lt;/code&gt; that called &lt;code&gt;_d_HookTraceImpl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_d_HookTraceImpl&lt;/code&gt; 이라는 &lt;code&gt;file&lt;/code&gt; 내부 줄</target>
        </trans-unit>
        <trans-unit id="9f11a4e0ac04365ef99741245ab0220d1dcbe4cc" translate="yes" xml:space="preserve">
          <source>Line number at which parse failure occurred</source>
          <target state="translated">구문 분석 실패가 발생한 행 번호</target>
        </trans-unit>
        <trans-unit id="cafda09317daae42601c48fe90d8c9c7a0d5763e" translate="yes" xml:space="preserve">
          <source>Line separator (&lt;code&gt;'\n'&lt;/code&gt; by default).</source>
          <target state="translated">줄 구분 기호 ( 기본적으로 &lt;code&gt;'\n'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9062ccfc4d55904c6dc14247f7eba3c693cbc576" translate="yes" xml:space="preserve">
          <source>Line separator (&lt;code&gt;'\n'&lt;/code&gt; by default). Use &lt;a href=&quot;std_ascii#newline&quot;&gt;&lt;code&gt;std.ascii.newline&lt;/code&gt;&lt;/a&gt; for portability (unless the file was opened in text mode).</source>
          <target state="translated">줄 구분 기호 ( 기본적으로 &lt;code&gt;'\n'&lt;/code&gt; ). 파일을 텍스트 모드로 열지 않은 경우 이식성을 위해 &lt;a href=&quot;std_ascii#newline&quot;&gt; &lt;code&gt;std.ascii.newline&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="562e54a009e2e7477315da16ad031e93fffe67de" translate="yes" xml:space="preserve">
          <source>Line terminator (by default, &lt;code&gt;'\n'&lt;/code&gt;).</source>
          <target state="translated">줄 종결 자 (기본적으로 &lt;code&gt;'\n'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="94351b3bdac97b327954428ec91bd94c19cb0065" translate="yes" xml:space="preserve">
          <source>Line terminator (by default, &lt;code&gt;'\n'&lt;/code&gt;). Use &lt;a href=&quot;std_ascii#newline&quot;&gt;&lt;code&gt;std.ascii.newline&lt;/code&gt;&lt;/a&gt; for portability (unless the file was opened in text mode).</source>
          <target state="translated">줄 종결 자 (기본적으로 &lt;code&gt;'\n'&lt;/code&gt; ) 파일을 텍스트 모드로 열지 않은 경우 이식성을 위해 &lt;a href=&quot;std_ascii#newline&quot;&gt; &lt;code&gt;std.ascii.newline&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a4bacbb1e223a3267919fd0799232ddbd34aa37" translate="yes" xml:space="preserve">
          <source>Line_Separator</source>
          <target state="translated">Line_Separator</target>
        </trans-unit>
        <trans-unit id="e7df5d5ce001a36983b9d9236abbf093184cc21e" translate="yes" xml:space="preserve">
          <source>Linear B Ideograms</source>
          <target state="translated">선형 B 이데 오 그램</target>
        </trans-unit>
        <trans-unit id="3725027407be653f4f6f73e1060fa298f81067d5" translate="yes" xml:space="preserve">
          <source>Linear B Syllabary</source>
          <target state="translated">선형 B 실라 바리</target>
        </trans-unit>
        <trans-unit id="4aec3d1c77926be5858da9de4639f131c32b6290" translate="yes" xml:space="preserve">
          <source>Linear Congruential Engines</source>
          <target state="translated">선형 합동 엔진</target>
        </trans-unit>
        <trans-unit id="2c0ea1ac864923255fd78db23ede4ab7573a54c1" translate="yes" xml:space="preserve">
          <source>Linear Congruential generator.</source>
          <target state="translated">선형 합동 발생기.</target>
        </trans-unit>
        <trans-unit id="3835d6a4986ea73e86742e9a7f3ef9b58c7dcb04" translate="yes" xml:space="preserve">
          <source>Linear_B</source>
          <target state="translated">Linear_B</target>
        </trans-unit>
        <trans-unit id="f9c093b4e3f67b0f50e7c549106bb82a8bb17374" translate="yes" xml:space="preserve">
          <source>Lines of text that directly follow a quoted line are considered part of the quote:</source>
          <target state="translated">인용 된 줄 바로 다음에 나오는 텍스트 줄은 인용의 일부로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="33ffd5e6d3f1a75027023ae7e4429a6fa5fe0802" translate="yes" xml:space="preserve">
          <source>Linger information for use with SocketOption.LINGER.</source>
          <target state="translated">SocketOption.LINGER와 함께 사용하기위한 링거 정보.</target>
        </trans-unit>
        <trans-unit id="6efcfa4383191737a4fd58b78fbbf6afc2429322" translate="yes" xml:space="preserve">
          <source>Linger on close if unsent data is present</source>
          <target state="translated">보내지 않은 데이터가있는 경우 닫힘</target>
        </trans-unit>
        <trans-unit id="aa29d5efd34035837a47ccdc40b4c4e6e767dff3" translate="yes" xml:space="preserve">
          <source>Linger time.</source>
          <target state="translated">웃음 시간.</target>
        </trans-unit>
        <trans-unit id="c07936d974c4dc9cedda3fb3c4619d6d1e2130c2" translate="yes" xml:space="preserve">
          <source>Linkage Attribute</source>
          <target state="translated">연계 속성</target>
        </trans-unit>
        <trans-unit id="5d5a19b223d7bf77f8ce49dd34f4ecf21571d14e" translate="yes" xml:space="preserve">
          <source>LinkageType</source>
          <target state="translated">LinkageType</target>
        </trans-unit>
        <trans-unit id="f89598da16ee5888741184d17b4b7e6268f1f50e" translate="yes" xml:space="preserve">
          <source>Linker directives are only supported for MS-COFF output.</source>
          <target state="translated">링커 지시문은 MS-COFF 출력에만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="f14f99e5af534b7ca9839de375475b98445e0f1b" translate="yes" xml:space="preserve">
          <source>Links to D documentation generators</source>
          <target state="translated">D 문서 생성기 링크</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="609a0fb2d74c6bd2b8aaca86410e249f1dbed0f8" translate="yes" xml:space="preserve">
          <source>Linux also supports an abstract address namespace, in which addresses are independent of the file system. A socket address is abstract iff &lt;code&gt;path&lt;/code&gt; starts with a null byte (&lt;code&gt;'\0'&lt;/code&gt;). Null bytes in other positions of an abstract address are allowed and have no special meaning.</source>
          <target state="translated">Linux는 주소가 파일 시스템과 독립적 인 추상 주소 네임 스페이스도 지원합니다. 소켓 주소는 &lt;code&gt;path&lt;/code&gt; 가 널 바이트 ( &lt;code&gt;'\0'&lt;/code&gt; ) 로 시작하는 경우 추상 입니다. 추상 주소의 다른 위치에있는 널 바이트는 허용되며 특별한 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="79f9578b547044b5676affbe3022bba5ca82f0a9" translate="yes" xml:space="preserve">
          <source>Linux, FreeBSD and OS X</source>
          <target state="translated">리눅스, FreeBSD 및 OS X</target>
        </trans-unit>
        <trans-unit id="053354be10bdf27de5999e46f82f09929ff8e8ba" translate="yes" xml:space="preserve">
          <source>Linux,OpenBSD,Solaris-Only</source>
          <target state="translated">Linux,OpenBSD,Solaris-Only</target>
        </trans-unit>
        <trans-unit id="d5716bdcdebf98cda6d6ad1eefe71dfeb870afa8" translate="yes" xml:space="preserve">
          <source>Linux,OpenBSD-Only</source>
          <target state="translated">Linux,OpenBSD-Only</target>
        </trans-unit>
        <trans-unit id="5c60e74c7c3bd1691653556adba9eac9ee819b43" translate="yes" xml:space="preserve">
          <source>Linux-Only</source>
          <target state="translated">Linux-Only</target>
        </trans-unit>
        <trans-unit id="659c4d46f392b5779315d4148506c9ae066a3900" translate="yes" xml:space="preserve">
          <source>List is a complete package of functions to deal with singly linked lists of pointers or integers.</source>
          <target state="translated">List는 단독으로 링크 된 포인터 또는 정수 목록을 처리하는 완전한 기능 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="2169dc30c9f5d1a288648fed4339b09f7a36c11c" translate="yes" xml:space="preserve">
          <source>List items can include content like new paragraphs, headings, embedded code, or child list items. Simply indent the content to match the indent of the text after the list symbol:</source>
          <target state="translated">목록 항목에는 새 단락, 제목, 포함 된 코드 또는 자식 목록 항목과 같은 내용이 포함될 수 있습니다. 목록 기호 뒤의 텍스트 들여 쓰기와 일치하도록 내용을 들여 쓰기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="5b80c969520195f49a23d681c7e470ffeb2f8e58" translate="yes" xml:space="preserve">
          <source>List of Time Zones</source>
          <target state="translated">시간대 목록</target>
        </trans-unit>
        <trans-unit id="47f0d42b5eabb30594dcebf877a48158279b594c" translate="yes" xml:space="preserve">
          <source>List of non-inherited methods.</source>
          <target state="translated">상속되지 않은 메소드 목록</target>
        </trans-unit>
        <trans-unit id="58d70697d21566547884eb0d25632b01c5aa1e1d" translate="yes" xml:space="preserve">
          <source>List of other symbols and URLs to related items.</source>
          <target state="translated">관련 항목에 대한 다른 기호 및 URL 목록</target>
        </trans-unit>
        <trans-unit id="c518fb067439705f3ff5fa5b4a62b9be3afa31ae" translate="yes" xml:space="preserve">
          <source>Listen</source>
          <target state="translated">Listen</target>
        </trans-unit>
        <trans-unit id="a6d4e1cf6d50aec9a81f8621becb65e0c7bff808" translate="yes" xml:space="preserve">
          <source>Listen for an incoming connection. &lt;code&gt;bind&lt;/code&gt; must be called before you can &lt;code&gt;listen&lt;/code&gt;. The &lt;code&gt;backlog&lt;/code&gt; is a request of how many pending incoming connections are queued until &lt;code&gt;accept&lt;/code&gt;ed.</source>
          <target state="translated">들어오는 연결을 듣습니다. &lt;code&gt;listen&lt;/code&gt; 전에 &lt;code&gt;bind&lt;/code&gt; 를 호출해야합니다 . &lt;code&gt;backlog&lt;/code&gt; 그는 &lt;code&gt;accept&lt;/code&gt; 될 때까지 대기중인 수신 연결 수에 대한 요청입니다 .</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="b1c9beb2cd4d7b1946bcd4731626c18eb9ca18ed" translate="yes" xml:space="preserve">
          <source>Lists any known bugs.</source>
          <target state="translated">알려진 버그를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="2b60e4e3728775ac5fb1376234a7439665441c9c" translate="yes" xml:space="preserve">
          <source>Lists exceptions thrown and under what circumstances they are thrown.</source>
          <target state="translated">발생 된 예외와 발생 된 상황을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="fb8d3829a5b09c1f096a8c468af41889c5c3afa6" translate="yes" xml:space="preserve">
          <source>Lists the author(s) of the declaration.</source>
          <target state="translated">선언의 작성자를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="a5b64a6325e7fd542159a3c84889b713d8f57a43" translate="yes" xml:space="preserve">
          <source>Lisu</source>
          <target state="translated">Lisu</target>
        </trans-unit>
        <trans-unit id="1eed1a889b6fdc57925d393d26612d90c4362fd7" translate="yes" xml:space="preserve">
          <source>Literal backslash: &lt;code&gt;\&lt;/code&gt;</source>
          <target state="translated">리터럴 백 슬래시 : &lt;code&gt;\&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="379a53a04ce7502b5938fbcc362e60ac11c2521f" translate="yes" xml:space="preserve">
          <source>Literal double-quote: &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">리터럴 큰 따옴표 : &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62a779e4049ed74f81ccd9b4787d528847e87647" translate="yes" xml:space="preserve">
          <source>Literal question mark: &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">리터럴 물음표 : &lt;code&gt;?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7496c0677fb192ed8cf7df54298bd439105963f" translate="yes" xml:space="preserve">
          <source>Literal single-quote: &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">리터럴 작은 따옴표 : &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="4f2ba44c3be0c8a5d7a4cbc08264bfdf2061b1ea" translate="yes" xml:space="preserve">
          <source>Literals do not match &lt;code&gt;ref&lt;/code&gt; or &lt;code&gt;out&lt;/code&gt; parameters.</source>
          <target state="translated">리터럴은 &lt;code&gt;ref&lt;/code&gt; 또는 &lt;code&gt;out&lt;/code&gt; 매개 변수 와 일치하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="131c60cf3a2f25a830939a99e6f47031b880a38c" translate="yes" xml:space="preserve">
          <source>Little endian byte order</source>
          <target state="translated">리틀 엔디안 바이트 순서</target>
        </trans-unit>
        <trans-unit id="91575e88330ca0a393b09df24c2f9572b830580f" translate="yes" xml:space="preserve">
          <source>Ll</source>
          <target state="translated">Ll</target>
        </trans-unit>
        <trans-unit id="aea4161c704cbae70375999c4bfe2ae3b29ed465" translate="yes" xml:space="preserve">
          <source>Lm</source>
          <target state="translated">Lm</target>
        </trans-unit>
        <trans-unit id="bb5cf318ffa3931019af265b70dc5e1329293274" translate="yes" xml:space="preserve">
          <source>Lo</source>
          <target state="translated">Lo</target>
        </trans-unit>
        <trans-unit id="c1fd24450afa2a8ca3ccb54f712f70e15f33b7ed" translate="yes" xml:space="preserve">
          <source>Load An Extension</source>
          <target state="translated">확장로드</target>
        </trans-unit>
        <trans-unit id="fdd8edd214a1cae7f44b10e45c660af957f2b328" translate="yes" xml:space="preserve">
          <source>Load this module.</source>
          <target state="translated">이 모듈을로드하십시오.</target>
        </trans-unit>
        <trans-unit id="80b5c5da98b56af5e41eefd69e7fa8b2a9b575bf" translate="yes" xml:space="preserve">
          <source>Load unaligned vector from address. This is a compiler intrinsic.</source>
          <target state="translated">주소에서 정렬되지 않은 벡터를로드합니다. 이것은 컴파일러 고유의 것입니다.</target>
        </trans-unit>
        <trans-unit id="494260ec047bea19460fac6ca8324736557ff1c6" translate="yes" xml:space="preserve">
          <source>Loadable Extension Thunk</source>
          <target state="translated">로드 가능한 확장 기능</target>
        </trans-unit>
        <trans-unit id="8e0a262d18ece63c9f981e3d7fa4031b25837d39" translate="yes" xml:space="preserve">
          <source>Loads 'val' from memory and returns it. The memory barrier specified by 'ms' is applied to the operation, which is fully sequenced by default. Valid memory orders are MemoryOrder.raw, MemoryOrder.acq, and MemoryOrder.seq.</source>
          <target state="translated">메모리에서 'val'을로드하고 반환합니다. 'ms'로 지정된 메모리 배리어는 작업에 적용되며 기본적으로 완전히 순서가 지정됩니다. 유효한 메모리 순서는 MemoryOrder.raw, MemoryOrder.acq 및 MemoryOrder.seq입니다.</target>
        </trans-unit>
        <trans-unit id="7d13b1375e4f7756b923fbdcc4876658d18b6a55" translate="yes" xml:space="preserve">
          <source>Loads the source buffer from the given read result into &lt;code&gt;this.srcBuffer&lt;/code&gt;.</source>
          <target state="translated">지정된 읽기 결과에서 소스 버퍼를 &lt;code&gt;this.srcBuffer&lt;/code&gt; 로 로드 합니다.</target>
        </trans-unit>
        <trans-unit id="f476477ef22d4251d73a1d30ca07cf1a34cf5284" translate="yes" xml:space="preserve">
          <source>Loc &lt;code&gt;loc&lt;/code&gt;</source>
          <target state="translated">Loc &lt;code&gt;loc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77785440d50120aa4076ce82e0ec9ab3821b96ba" translate="yes" xml:space="preserve">
          <source>Loc &lt;strong id=&quot;endloc&quot;&gt;endloc&lt;/strong&gt;;</source>
          <target state="translated">Loc &lt;strong id=&quot;endloc&quot;&gt;endloc&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a9aae3f07ee9e73ec7a53299b4ed9cc98dfe9890" translate="yes" xml:space="preserve">
          <source>Loc &lt;strong id=&quot;loc&quot;&gt;loc&lt;/strong&gt;;</source>
          <target state="translated">Loc &lt;strong id=&quot;loc&quot;&gt;loc&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9e7bda6f355468bf77617112c233388cb6f50302" translate="yes" xml:space="preserve">
          <source>Local Static Variables</source>
          <target state="translated">지역 정적 변수</target>
        </trans-unit>
        <trans-unit id="ff5148d6cff2251fbb44fa24ac71e87831f6949a" translate="yes" xml:space="preserve">
          <source>Local Variables</source>
          <target state="translated">지역 변수</target>
        </trans-unit>
        <trans-unit id="5545f9d00ac24df06f6380d708b888c2531d70c7" translate="yes" xml:space="preserve">
          <source>Local communication</source>
          <target state="translated">지역 커뮤니케이션</target>
        </trans-unit>
        <trans-unit id="ac3f517d85e8ae01e24937891c726f4900fea00c" translate="yes" xml:space="preserve">
          <source>Local data (i.e. CompileCtfeFunction*) for module dinterpret</source>
          <target state="translated">모듈 해석에 대한 로컬 데이터 (예 : CompileCtfeFunction *)</target>
        </trans-unit>
        <trans-unit id="9fb1bb63dc564bca6c7a5e9e93d9c43b4a80c6ce" translate="yes" xml:space="preserve">
          <source>Local endpoint &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">로컬 엔드 포인트 &lt;code&gt;Address&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9f3aff2a7b7305a6652f831edf8db6d7016ee1e" translate="yes" xml:space="preserve">
          <source>Local names</source>
          <target state="translated">현지 이름</target>
        </trans-unit>
        <trans-unit id="be6a7350c875b8c9d9ccbb7b7de839744ca0d05e" translate="yes" xml:space="preserve">
          <source>Local port number to bind the socket to</source>
          <target state="translated">소켓을 바인딩 할 로컬 포트 ​​번호</target>
        </trans-unit>
        <trans-unit id="e6b918332efc4d2c7cdd3b68e4cf1785c7f99f6d" translate="yes" xml:space="preserve">
          <source>Local sections on the stack</source>
          <target state="translated">스택의 로컬 섹션</target>
        </trans-unit>
        <trans-unit id="a27f49b6ed675d7b78f3cdf3fe5896202b1d4d8a" translate="yes" xml:space="preserve">
          <source>Local variables in functions can be declared as static or &lt;code&gt;__gshared&lt;/code&gt; in which case they are statically allocated rather than being allocated on the stack. As such, their value persists beyond the exit of the function.</source>
          <target state="translated">함수의 지역 변수는 static 또는 &lt;code&gt;__gshared&lt;/code&gt; 로 선언 될 수 있으며이 경우 스택에 할당되지 않고 정적으로 할당됩니다. 따라서 해당 값은 함수 종료 이후에도 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="d60a34babb78e25baf9b8dca57cc7a6a57f9a62c" translate="yes" xml:space="preserve">
          <source>Locates a dynamic library with the supplied library name and dynamically loads it into the caller's address space. If the library contains a D runtime it will be integrated with the current runtime.</source>
          <target state="translated">제공된 라이브러리 이름으로 동적 라이브러리를 찾아 호출자의 주소 공간에 동적으로로드합니다. 라이브러리에 D 런타임이 포함되어 있으면 현재 런타임과 통합됩니다.</target>
        </trans-unit>
        <trans-unit id="4aacb69957ad5cddfad921cdf6c0106c5bee9a10" translate="yes" xml:space="preserve">
          <source>Location information of the call</source>
          <target state="translated">통화 위치 정보</target>
        </trans-unit>
        <trans-unit id="73ff6861f35f866aec7aeeb578457a4566a437cd" translate="yes" xml:space="preserve">
          <source>Location of deprecation</source>
          <target state="translated">지원 중단 위치</target>
        </trans-unit>
        <trans-unit id="57b91c66877cf6b374fbb1200642748e28d59b53" translate="yes" xml:space="preserve">
          <source>Location of error</source>
          <target state="translated">오류의 위치</target>
        </trans-unit>
        <trans-unit id="4fc6c901a903b2735a7904abeb7a095eb0c123e1" translate="yes" xml:space="preserve">
          <source>Location of the deprecation</source>
          <target state="translated">지원 중단 위치</target>
        </trans-unit>
        <trans-unit id="a6401740004452bbcf66d3042a6f5de680dddeba" translate="yes" xml:space="preserve">
          <source>Location of warning</source>
          <target state="translated">경고의 위치</target>
        </trans-unit>
        <trans-unit id="4b59a58b9ea59e25faf234bc5204489fb27642f9" translate="yes" xml:space="preserve">
          <source>Locks are not inherited by child processes.</source>
          <target state="translated">하위 프로세스는 잠금을 상속하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a33487e1736bf9e6609b67ba3b4f3dff1091e2f" translate="yes" xml:space="preserve">
          <source>Locks created using &lt;code&gt;lock&lt;/code&gt; and &lt;code&gt;tryLock&lt;/code&gt; have the following properties:</source>
          <target state="translated">&lt;code&gt;lock&lt;/code&gt; 및 &lt;code&gt;tryLock&lt;/code&gt; 을 사용하여 작성된 잠금 에는 다음 특성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1078bb655a08aae4699ba7fac16a102730785485" translate="yes" xml:space="preserve">
          <source>Locks the specified file segment. If the file segment is already locked by another process, waits until the existing lock is released. If both &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; are zero, the entire file is locked.</source>
          <target state="translated">지정된 파일 세그먼트를 잠급니다. 다른 프로세스에서 파일 세그먼트를 이미 잠근 경우 기존 잠금이 해제 될 때까지 기다립니다. 두 경우 &lt;code&gt;start&lt;/code&gt; 과 &lt;code&gt;length&lt;/code&gt; 제로이며, 전체 파일이 잠겨 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fdb3aa6c3fd683c9aaf2374307211453b556f8d" translate="yes" xml:space="preserve">
          <source>Lockstep!Ranges &lt;strong id=&quot;lockstep&quot;&gt;lockstep&lt;/strong&gt;(Ranges...)(Ranges ranges)</source>
          <target state="translated">&lt;strong id=&quot;lockstep&quot;&gt;락 스텝&lt;/strong&gt; ! 범위 &lt;strong id=&quot;lockstep&quot;&gt;락 스텝&lt;/strong&gt; (범위 ...) (범위 범위)</target>
        </trans-unit>
        <trans-unit id="39496871de00ee058f37e6cbb0be193e3214e5e3" translate="yes" xml:space="preserve">
          <source>Lockstep!Ranges &lt;strong id=&quot;lockstep&quot;&gt;lockstep&lt;/strong&gt;(Ranges...)(Ranges ranges, StoppingPolicy s)</source>
          <target state="translated">Lockstep! Ranges &lt;strong id=&quot;lockstep&quot;&gt;lockstep&lt;/strong&gt; (Ranges ...) (범위 범위, StoppingPolicy s)</target>
        </trans-unit>
        <trans-unit id="fad1f4632354649775fa0e5d50b9164b567e59f6" translate="yes" xml:space="preserve">
          <source>Log Minus Digamma function</source>
          <target state="translated">마이너스 디 감마 로그 함수</target>
        </trans-unit>
        <trans-unit id="2a6fa3a2602f79946a73d76e4d612ad28acdfb88" translate="yes" xml:space="preserve">
          <source>Log messages that describe fatal errors should use this level.</source>
          <target state="translated">치명적인 오류를 설명하는 로그 메시지는이 수준을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9945a7ae687a5abee282c11e943964628be93a09" translate="yes" xml:space="preserve">
          <source>Log the string to stderr, this will print something like this in the terminal:</source>
          <target state="translated">문자열을 stderr에 기록하면 터미널에서 다음과 같이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="02b7320cd2ebcb2d92d9355bfdee38ca004f34cb" translate="yes" xml:space="preserve">
          <source>LogEntry &lt;code&gt;payload&lt;/code&gt;</source>
          <target state="translated">LogEntry &lt;code&gt;payload&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34c61f0216de15bd2af4a77e158df88206381def" translate="yes" xml:space="preserve">
          <source>LogEntry is a aggregation combining all information associated with a log message. This aggregation will be passed to the method writeLogMsg.</source>
          <target state="translated">LogEntry는 로그 메시지와 관련된 모든 정보를 결합한 집계입니다. 이 집계는 writeLogMsg 메소드로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="74c012ac32756bbfd453a39643d2591c98930a80" translate="yes" xml:space="preserve">
          <source>LogLevel</source>
          <target state="translated">LogLevel</target>
        </trans-unit>
        <trans-unit id="46823fbe7f7dbcfd76f32da557302d10d151cb8a" translate="yes" xml:space="preserve">
          <source>LogLevel &lt;code&gt;ll&lt;/code&gt;</source>
          <target state="translated">LogLevel &lt;code&gt;ll&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02c5d167afffbb7dbf4712fabfc250b90a1311bc" translate="yes" xml:space="preserve">
          <source>LogLevel &lt;code&gt;lv&lt;/code&gt;</source>
          <target state="translated">LogLevel &lt;code&gt;lv&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecc9d7efba9afc89574f5d3bf86e3d7baaac302b" translate="yes" xml:space="preserve">
          <source>LogLevel &lt;strong id=&quot;logLevel&quot;&gt;logLevel&lt;/strong&gt;;</source>
          <target state="translated">LogLevel &lt;strong id=&quot;logLevel&quot;&gt;logLevel&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4ed40fc6e5a5852438d7391404942ae2521d7f56" translate="yes" xml:space="preserve">
          <source>Logger &lt;code&gt;newLogger&lt;/code&gt;</source>
          <target state="translated">로거 &lt;code&gt;newLogger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28189bc68fa5c89294fb2f918a4e83d73a420934" translate="yes" xml:space="preserve">
          <source>Logger &lt;strong id=&quot;logger&quot;&gt;logger&lt;/strong&gt;;</source>
          <target state="translated">로거 &lt;strong id=&quot;logger&quot;&gt;로거&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="84c998ac72938ace2c01090c22dde31485e70020" translate="yes" xml:space="preserve">
          <source>Logging Fundamentals</source>
          <target state="translated">로깅 기본 사항</target>
        </trans-unit>
        <trans-unit id="ff5d5c519f4c3bb77429911d9e4777ff8d9f0131" translate="yes" xml:space="preserve">
          <source>Logical negation</source>
          <target state="translated">논리적 부정</target>
        </trans-unit>
        <trans-unit id="92491dfcf77a677e2579a8fdd5849bc43c91a9a3" translate="yes" xml:space="preserve">
          <source>Logical_Order_Exception</source>
          <target state="translated">Logical_Order_Exception</target>
        </trans-unit>
        <trans-unit id="70560736acb9ecf186c4fe18c6fbf72b37079b60" translate="yes" xml:space="preserve">
          <source>Logs a part of the log message.</source>
          <target state="translated">로그 메시지의 일부를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="375bd085e65737a7ace18bd867e945918a24086b" translate="yes" xml:space="preserve">
          <source>Long form</source>
          <target state="translated">긴 형태</target>
        </trans-unit>
        <trans-unit id="ff41efc01d76dc10a97a12c09a243b0ca354e0cf" translate="yes" xml:space="preserve">
          <source>Look 2 tokens ahead at value.</source>
          <target state="translated">가치에 앞서 두 개의 토큰을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="afc94f6c3a556315eed1cb174ad15bb185dcbc4f" translate="yes" xml:space="preserve">
          <source>Look ahead at next token's value.</source>
          <target state="translated">다음 토큰의 가치를 미리보십시오.</target>
        </trans-unit>
        <trans-unit id="5622d20c099b662e6a0a373dd68292f6a0ba3406" translate="yes" xml:space="preserve">
          <source>Look at all the variables in this function that are referenced by nested functions, and determine if a closure needs to be created for them.</source>
          <target state="translated">중첩 함수에서 참조하는이 함수의 모든 변수를보고 클로저를 작성해야하는지 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="654b5c9229aa50c7d6a646cb9a83a6131f5de84e" translate="yes" xml:space="preserve">
          <source>Look at the chain of inflight exceptions and pick the class type that'll be looked for in catch clauses.</source>
          <target state="translated">기내 예외 체인을보고 catch 절에서 찾을 클래스 유형을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="70c9a19c6fcf57b59739caeb1b4f8d412200e169" translate="yes" xml:space="preserve">
          <source>Look for GC-allocations</source>
          <target state="translated">GC 할당 찾기</target>
        </trans-unit>
        <trans-unit id="20561c6b5a8c54db867f0cd788574c6f1aaba303" translate="yes" xml:space="preserve">
          <source>Look for bugs in constructing types.</source>
          <target state="translated">유형을 구성 할 때 발생하는 버그를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="d1a79a1301c397a748fd769d70432ac6b93cb4bc" translate="yes" xml:space="preserve">
          <source>Look for constructor declaration.</source>
          <target state="translated">생성자 선언을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="55662975ec462a6b77f0e621733ca4e99a96109f" translate="yes" xml:space="preserve">
          <source>Look for member of the form: const(MemberInfo)[] getMembers(string); Returns NULL if not found</source>
          <target state="translated">다음 형식의 멤버를 찾으십시오. const (MemberInfo) [] getMembers (string); 찾을 수 없으면 NULL을 반환</target>
        </trans-unit>
        <trans-unit id="a5ecbeff661b0c09d7052aed23032d114c945947" translate="yes" xml:space="preserve">
          <source>Look for references to variables in a scope enclosing the new function literal.</source>
          <target state="translated">새 함수 리터럴을 포함하는 범위의 변수에 대한 참조를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="dca0eb22e1b34ba0a7ee58c95403fe1142a825cc" translate="yes" xml:space="preserve">
          <source>Look up classType in Action Table.</source>
          <target state="translated">조치 테이블에서 classType을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="bf6f8e6a744477193839c88af310acdab947187c" translate="yes" xml:space="preserve">
          <source>Look up identifier in symbol table.</source>
          <target state="translated">심볼 테이블에서 식별자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="6b1faf6e7e2ade4943d73b78287350be64b06d22" translate="yes" xml:space="preserve">
          <source>Looks for correct spelling. Currently only looks a 'distance' of one from the seed[]. This does an exhaustive search, so can potentially be very slow.</source>
          <target state="translated">올바른 철자를 찾습니다. 현재는 씨앗에서 하나의 '거리'만 보인다 []. 이것은 철저한 검색을 수행하므로 잠재적으로 매우 느릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7ba5beab41b9fc718625eff0ab12ec104ab4ac0" translate="yes" xml:space="preserve">
          <source>Looks for undefined identifier s to see if it might be undefined because an import was not specified. Not meant to be a comprehensive list of names in each module, just the most common ones.</source>
          <target state="translated">가져 오기가 지정되지 않아 정의되지 않은 식별자를 찾아 정의되지 않은 식별자를 찾습니다. 각 모듈의 포괄적 인 이름 목록이 아니라 가장 일반적인 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b8a0d0e70a93b9315eed33e543f65f34ea9905b6" translate="yes" xml:space="preserve">
          <source>Looks up &lt;code&gt;key&lt;/code&gt;; if it exists applies the &lt;code&gt;update&lt;/code&gt; delegate else evaluates the &lt;code&gt;create&lt;/code&gt; delegate and adds it to the associative array</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 찾습니다 . 존재하는 경우 &lt;code&gt;update&lt;/code&gt; 델리게이트 가 적용되며, 그렇지 않으면 &lt;code&gt;create&lt;/code&gt; 델리게이트를 평가 하여 연관 배열에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f04ca992dc16f517e75024c08b7ac020854cbc1a" translate="yes" xml:space="preserve">
          <source>Looks up &lt;code&gt;key&lt;/code&gt;; if it exists returns corresponding value else evaluates &lt;code&gt;value&lt;/code&gt;, adds it to the associative array and returns it.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 찾습니다 . 그 밖의 값을 평가하여 대응 복귀 있으면 &lt;code&gt;value&lt;/code&gt; 상기 연관 배열 복귀 그것을 추가한다.</target>
        </trans-unit>
        <trans-unit id="c6a8bc0d3f8751a41d3178fa2ecd99ad6f8c6478" translate="yes" xml:space="preserve">
          <source>Looks up &lt;code&gt;key&lt;/code&gt;; if it exists returns corresponding value else evaluates and returns &lt;code&gt;defVal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 찾습니다 . 존재하는 경우 해당 값을 반환하고 그렇지 않으면 &lt;code&gt;defVal&lt;/code&gt; 을 평가하고 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="dd483a2f65cbf5a83a8c5f6ad516313d73801935" translate="yes" xml:space="preserve">
          <source>Looks up key; if it exists applies the update callable else evaluates the create callable and adds it to the associative array</source>
          <target state="translated">키를 찾습니다. 존재하는 경우 업데이트 호출 가능을 적용하고 그렇지 않으면 호출 가능 생성 작성을 평가하여 연관 배열에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="be2ee07f892035b2ec1c706668252bc84555ddb4" translate="yes" xml:space="preserve">
          <source>Looks up key; if it exists returns corresponding value else evaluates and returns defaultValue.</source>
          <target state="translated">키를 찾습니다. 존재하는 경우 해당 값을 반환하고 그렇지 않으면 defaultValue를 평가하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1875c1f85b6a7543e96c3d340bf104b96893e8d2" translate="yes" xml:space="preserve">
          <source>Looks up key; if it exists returns corresponding value else evaluates value, adds it to the associative array and returns it.</source>
          <target state="translated">키를 찾습니다. 존재하는 경우 해당 값을 리턴하고 그렇지 않으면 값을 평가하여 연관 배열에 추가 한 후 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2cc04a00b4346a66399ef51dd8da620552ded35a" translate="yes" xml:space="preserve">
          <source>Lookup *pkey in aa. Called only from implementation of (aa[key]) expressions when value is mutable.</source>
          <target state="translated">조회 * pkey aa. 값이 변경 가능한 경우 (aa [key]) 표현식 구현에서만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5acb595c30bd73abf9112d17b6787c68f70f18a1" translate="yes" xml:space="preserve">
          <source>Lookup *pkey in aa. Called only from implementation of (aa[key]) expressions when value is not mutable.</source>
          <target state="translated">조회 * pkey aa. 값을 변경할 수없는 경우 (aa [key]) 표현식 구현에서만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="791d64d6dd1c9c7807ef99641d73b8a3fa427ce6" translate="yes" xml:space="preserve">
          <source>Lookup *pkey in aa. Called only from implementation of (key in aa) expressions.</source>
          <target state="translated">조회 * pkey aa. (key in aa) 표현식의 구현에서만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2d5714819469c13b59fdfd000487590810a7c91a" translate="yes" xml:space="preserve">
          <source>Lookup *pkey in aa. Called only from implementation of require</source>
          <target state="translated">조회 * pkey aa. require 구현에서만 호출</target>
        </trans-unit>
        <trans-unit id="488171ff26cd71419d21a0a9adfd632513f34bae" translate="yes" xml:space="preserve">
          <source>Lookup named submatch.</source>
          <target state="translated">이름이 일치하지 않는 조회.</target>
        </trans-unit>
        <trans-unit id="1b640962460641e4c30f8b4a0277ba5e6244fda9" translate="yes" xml:space="preserve">
          <source>Loop over the chain of Throwables.</source>
          <target state="translated">Throwable 체인을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="1a1cf7f9d7a7fa0e0c2b6385a443cec04154dd41" translate="yes" xml:space="preserve">
          <source>Low Surrogates</source>
          <target state="translated">낮은 대리모</target>
        </trans-unit>
        <trans-unit id="48523acb4bcd854d9aa1ea2802e3b41bb7296532" translate="yes" xml:space="preserve">
          <source>Low level</source>
          <target state="translated">저수준</target>
        </trans-unit>
        <trans-unit id="b40b74c86ad687d5579e947e3f92577b31a5eda2" translate="yes" xml:space="preserve">
          <source>Low level bit manipulation.</source>
          <target state="translated">낮은 수준의 비트 조작.</target>
        </trans-unit>
        <trans-unit id="f2e86eaa57ddf3a17dd614f833e423ebc213f8c4" translate="yes" xml:space="preserve">
          <source>Low level messaging API for threads.</source>
          <target state="translated">스레드를위한 저수준 메시징 API.</target>
        </trans-unit>
        <trans-unit id="dcbca8259d75e252eae0048dd86f40340f8d0cd8" translate="yes" xml:space="preserve">
          <source>Low-Level Control Of Database Files</source>
          <target state="translated">데이터베이스 파일의 저수준 제어</target>
        </trans-unit>
        <trans-unit id="89f7441b4ba65a8bf1a560585634d07db89e7fca" translate="yes" xml:space="preserve">
          <source>Low-level process creation</source>
          <target state="translated">저수준 프로세스 생성</target>
        </trans-unit>
        <trans-unit id="2bd438fab42ba2532b308f2c0479c2cede33e8d9" translate="yes" xml:space="preserve">
          <source>Lower case letters</source>
          <target state="translated">소문자</target>
        </trans-unit>
        <trans-unit id="3011ca9e161c4e7602061857963040cfcefd24e6" translate="yes" xml:space="preserve">
          <source>Lower level control over parsing CSV</source>
          <target state="translated">CSV 구문 분석에 대한 하위 레벨 제어</target>
        </trans-unit>
        <trans-unit id="b563fa15108a7c5ade041259f86d89b7a18d8930" translate="yes" xml:space="preserve">
          <source>Lowercase</source>
          <target state="translated">Lowercase</target>
        </trans-unit>
        <trans-unit id="abf8ce4a5f4a2b06b346bb8ef9b168681a52fab2" translate="yes" xml:space="preserve">
          <source>Lowercase_Letter</source>
          <target state="translated">Lowercase_Letter</target>
        </trans-unit>
        <trans-unit id="b7c7ce791998816ed0e71e16db0d586762b3248a" translate="yes" xml:space="preserve">
          <source>Lowest generated value (&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;c == 0&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; otherwise).</source>
          <target state="translated">최저 생성 된 값 ( &lt;code&gt;1&lt;/code&gt; 경우 &lt;code&gt;c == 0&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; , 그렇지).</target>
        </trans-unit>
        <trans-unit id="65a7ee0f0dd9333831b9dc305ef620113ec1e149" translate="yes" xml:space="preserve">
          <source>Lowest possible assignable &lt;code&gt;LogLevel&lt;/code&gt;.</source>
          <target state="translated">할당 가능한 가장 낮은 &lt;code&gt;LogLevel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdd31e29a8533fa78639eaa1635910fd1573da09" translate="yes" xml:space="preserve">
          <source>LsdaResult</source>
          <target state="translated">LsdaResult</target>
        </trans-unit>
        <trans-unit id="93a7e558e0aeedd54f6dee5a37efe3afb6f4c131" translate="yes" xml:space="preserve">
          <source>LsdaResult &lt;strong id=&quot;scanLSDA&quot;&gt;scanLSDA&lt;/strong&gt;(const(ubyte)* lsda, _Unwind_Ptr ip, _Unwind_Exception_Class exceptionClass, bool cleanupsOnly, bool preferHandler, _Unwind_Exception* exceptionObject, out _Unwind_Ptr landingPad, out int handler);</source>
          <target state="translated">LsdaResult &lt;strong id=&quot;scanLSDA&quot;&gt;scanLSDA&lt;/strong&gt; (const (ubyte) * lsda, _Unwind_Ptr ip, _Unwind_Exception_Class exceptionClass, bool cleanupsOnly, bool preferHandler, _Unwind_Exception * exceptionObject, out _Unwind_Ptr 랜딩 패드, out int 핸들러);</target>
        </trans-unit>
        <trans-unit id="f41a055096fba2f5ebbddc8916d81727739dbdb3" translate="yes" xml:space="preserve">
          <source>Lt</source>
          <target state="translated">Lt</target>
        </trans-unit>
        <trans-unit id="eef6ef9869ba818327c7d9505b56279d719e493a" translate="yes" xml:space="preserve">
          <source>Lu</source>
          <target state="translated">Lu</target>
        </trans-unit>
        <trans-unit id="717f61ff64cc1d6b73a3c57e533103b3f6a567a9" translate="yes" xml:space="preserve">
          <source>LwrExpression</source>
          <target state="translated">LwrExpression</target>
        </trans-unit>
        <trans-unit id="f9156a05ab3755f6c7a6aab965a12bc73fd9cc2c" translate="yes" xml:space="preserve">
          <source>Lycian</source>
          <target state="translated">Lycian</target>
        </trans-unit>
        <trans-unit id="253fa34d4b816ad16ebad60a0945ef037709d0b8" translate="yes" xml:space="preserve">
          <source>Lydian</source>
          <target state="translated">Lydian</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="b6d557e553638176bbc7442ef35ab7cffd41c1e4" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;callMatch&quot;&gt;callMatch&lt;/strong&gt;(Type tthis, Expression[] args, int flag = 0, const(char)** pMessage = null, Scope* sc = null);</source>
          <target state="translated">MATCH &lt;strong id=&quot;callMatch&quot;&gt;callMatch&lt;/strong&gt; (타입 tthis, Expression [] 인수, int 플래그 = 0, const (char) ** pMessage = null, Scope * sc = null);</target>
        </trans-unit>
        <trans-unit id="63c0d0982dd717fe106c7dfaf4dbef053e569f37" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;constConv&quot;&gt;constConv&lt;/strong&gt;(Type to);</source>
          <target state="translated">MATCH &lt;strong id=&quot;constConv&quot;&gt;constConv&lt;/strong&gt; (유형);</target>
        </trans-unit>
        <trans-unit id="7189716dd2570ff5122c43fe6e3e0126d15533a1" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;deduceFunctionTemplateMatch&quot;&gt;deduceFunctionTemplateMatch&lt;/strong&gt;(TemplateInstance ti, Scope* sc, ref FuncDeclaration fd, Type tthis, Expressions* fargs);</source>
          <target state="translated">MATCH &lt;strong id=&quot;deduceFunctionTemplateMatch&quot;&gt;deduceFunctionTemplateMatch&lt;/strong&gt; (TemplateInstance ti, Scope * sc, ref FuncDeclaration fd, 유형 tthis, Expressions * fargs);</target>
        </trans-unit>
        <trans-unit id="8f902d50b36da53875defe35cdfd37c8db415308" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;implicitConvTo&quot;&gt;implicitConvTo&lt;/strong&gt;(Expression e, Type t);</source>
          <target state="translated">&lt;strong id=&quot;implicitConvTo&quot;&gt;implicitConvTo&lt;/strong&gt; 일치 (표현식 e, 유형 t);</target>
        </trans-unit>
        <trans-unit id="17f9b85399cd8eacf845a08f0ddd5c81dc4efaaf" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;implicitConvTo&quot;&gt;implicitConvTo&lt;/strong&gt;(Type to);</source>
          <target state="translated">MATCH &lt;strong id=&quot;implicitConvTo&quot;&gt;implicitConvTo&lt;/strong&gt; (유형);</target>
        </trans-unit>
        <trans-unit id="01016d25cb7f7307f5c30d54b28b7e62898ef0f4" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;leastAsSpecialized&quot;&gt;leastAsSpecialized&lt;/strong&gt;(Scope* sc, TemplateDeclaration td2, Expressions* fargs);</source>
          <target state="translated">MATCH &lt;strong id=&quot;leastAsSpecialized&quot;&gt;leastAsSpecialized&lt;/strong&gt; (Scope * sc, TemplateDeclaration td2, Expressions * fargs);</target>
        </trans-unit>
        <trans-unit id="918dc11643797c59c58daf42cb0ca1d4a73b4d76" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;matchArg&quot;&gt;matchArg&lt;/strong&gt;(TemplateParameter tp, Loc instLoc, Scope* sc, Objects* tiargs, size_t i, TemplateParameters* parameters, Objects* dedtypes, Declaration* psparam);</source>
          <target state="translated">MATCH &lt;strong id=&quot;matchArg&quot;&gt;matchArg&lt;/strong&gt; (TemplateParameter tp, Loc instLoc, Scope * sc, Objects * tiargs, size_t i, TemplateParameters * parameters, Objects * dedtypes, Declaration * psparam);</target>
        </trans-unit>
        <trans-unit id="f9fa496f162d5b1d5225ec4710970983096606da" translate="yes" xml:space="preserve">
          <source>MATCH &lt;strong id=&quot;matchWithInstance&quot;&gt;matchWithInstance&lt;/strong&gt;(Scope* sc, TemplateInstance ti, Objects* dedtypes, Expressions* fargs, int flag);</source>
          <target state="translated">MATCH &lt;strong id=&quot;matchWithInstance&quot;&gt;matchWithInstance&lt;/strong&gt; (Scope * sc, TemplateInstance ti, Objects * dedtypes, Expressions * fargs, int flag);</target>
        </trans-unit>
        <trans-unit id="5843e5e021e20b605f42acd4c88a16a007841d32" translate="yes" xml:space="preserve">
          <source>MATCH.exact 'this' == 'to' MATCH.constant 'to' is const MATCH.nomatch conversion to mutable or invariant</source>
          <target state="translated">MATCH.exact 'this'== 'to'MATCH.constant 'to'는 const MATCH.nomatch를 가변 또는 불변으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="03d0a50e82b0494ec2b0ced95d0effb00b5a4de8" translate="yes" xml:space="preserve">
          <source>MATCH.nomatch, MATCH.convert, MATCH.constant, MATCH.exact</source>
          <target state="translated">MATCH.Nomatch, MATCH.convert, MATCH.constant, MATCH.exact</target>
        </trans-unit>
        <trans-unit id="eceb0459a5cb4578982ccd6ce7529eeed14e4cab" translate="yes" xml:space="preserve">
          <source>MATCHxxxx</source>
          <target state="translated">MATCHxxxx</target>
        </trans-unit>
        <trans-unit id="a5f71adafc8958cac2aa5aebe8cd541186115a14" translate="yes" xml:space="preserve">
          <source>MIME type of the data, for example, &quot;text/plain&quot; or &quot;application/octet-stream&quot;. See also: &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_media_type&quot;&gt; Internet media type&lt;/a&gt; on Wikipedia.</source>
          <target state="translated">데이터의 MIME 유형 (예 : &quot;text / plain&quot;또는 &quot;application / octet-stream&quot;) Wikipedia의 &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_media_type&quot;&gt;인터넷 미디어 유형&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d4631fbf4689affb8ff105bbf8ac5b78adddcd3" translate="yes" xml:space="preserve">
          <source>ML-style functional exception handling. Runs the supplied expression and returns its result. If the expression throws a &lt;code&gt;Throwable&lt;/code&gt;, runs the supplied error handler instead and return its result. The error handler's type must be the same as the expression's type.</source>
          <target state="translated">ML 스타일의 기능적 예외 처리. 제공된 표현식을 실행하고 결과를 리턴합니다. 식이 &lt;code&gt;Throwable&lt;/code&gt; 을 던지면 제공된 오류 처리기를 대신 실행하고 결과를 반환합니다. 오류 처리기 유형은 표현식 유형과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="33379ede9c84ed9d3104a88adf47b86b54d3c4fa" translate="yes" xml:space="preserve">
          <source>MOD &lt;code&gt;mod&lt;/code&gt;</source>
          <target state="translated">MOD &lt;code&gt;mod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="701271424e18847db6f579468d2cd5078329cdaa" translate="yes" xml:space="preserve">
          <source>MOD &lt;strong id=&quot;deduceWild&quot;&gt;deduceWild&lt;/strong&gt;(Type t, bool isRef);</source>
          <target state="translated">MOD &lt;strong id=&quot;deduceWild&quot;&gt;deduceWild&lt;/strong&gt; (타입 t, bool isRef);</target>
        </trans-unit>
        <trans-unit id="76b10e3dcb4a133c7bb6262af258f9831130f8e8" translate="yes" xml:space="preserve">
          <source>MOD bits</source>
          <target state="translated">MOD 비트</target>
        </trans-unit>
        <trans-unit id="84cc32aac369a52d44f13e6b163b25f342633b78" translate="yes" xml:space="preserve">
          <source>MSVC allocates on default initialisation in debug, which can't be modelled by D &lt;code&gt;struct&lt;/code&gt;</source>
          <target state="translated">MSVC는 디버그에서 기본 초기화를 할당하며 D &lt;code&gt;struct&lt;/code&gt; 로는 모델링 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b48af28979910507a72300805b16b39786c09205" translate="yes" xml:space="preserve">
          <source>Mac OS X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5fc92b2d874256f372cac5c2a5b3a773e873c8" translate="yes" xml:space="preserve">
          <source>Macro Definitions Generated by Ddoc</source>
          <target state="translated">Ddoc에 의해 생성 된 매크로 정의</target>
        </trans-unit>
        <trans-unit id="f267b7710be73b007f894278ea6b282b0c3b62d8" translate="yes" xml:space="preserve">
          <source>Macro Definitions from .ddoc Files on the Command Line</source>
          <target state="translated">명령 줄에서 .ddoc 파일의 매크로 정의</target>
        </trans-unit>
        <trans-unit id="b244d94b9e3687038ccb11df99431228edef706c" translate="yes" xml:space="preserve">
          <source>Macro Definitions from &lt;code&gt;sc.ini&lt;/code&gt;'s DDOCFILE</source>
          <target state="translated">&lt;code&gt;sc.ini&lt;/code&gt; 의 DDOCFILE 에서 매크로 정의</target>
        </trans-unit>
        <trans-unit id="d9287b4f065fa8285b646a8b8eb23fd987c1ed50" translate="yes" xml:space="preserve">
          <source>Macro and Escape text substitution is performed to produce the final result.</source>
          <target state="translated">매크로 및 이스케이프 텍스트 대체가 최종 결과를 생성하기 위해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="0342437ac2c198171fe2e3235a577c880ee3a26d" translate="yes" xml:space="preserve">
          <source>Macro definitions come from the following sources, in the specified order:</source>
          <target state="translated">매크로 정의는 지정된 순서로 다음 소스에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="64c2f043d46921aa3d0d7e83b419b8b713824341" translate="yes" xml:space="preserve">
          <source>Macro names beginning with &quot;D_&quot; and &quot;DDOC_&quot; are reserved.</source>
          <target state="translated">&quot;D_&quot;및 &quot;DDOC_&quot;로 시작하는 매크로 이름은 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5300aeedfdbb4e7dc6ac9411b36bf223f7cb19b1" translate="yes" xml:space="preserve">
          <source>Macro redefinitions replace previous definitions of the same name. This means that the sequence of macro definitions from the various sources forms a hierarchy.</source>
          <target state="translated">매크로 재정의는 동일한 이름의 이전 정의를 대체합니다. 이는 다양한 소스의 매크로 정의 시퀀스가 ​​계층 구조를 형성 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="ab4342746df71224401959d238150c1f6538a7c1" translate="yes" xml:space="preserve">
          <source>Macros can have arguments. Any text from the end of the identifier to the closing &amp;lsquo;)&amp;rsquo; is the &amp;amp;dollar;0 argument. A &amp;amp;dollar;0 in the replacement text is replaced with the argument text. If there are commas in the argument text, &amp;amp;dollar;1 will represent the argument text up to the first comma, &amp;amp;dollar;2 from the first comma to the second comma, etc., up to &amp;amp;dollar;9. &amp;amp;dollar;+ represents the text from the first comma to the closing &amp;lsquo;)&amp;rsquo;. The argument text can contain nested parentheses, &quot;&quot; or '' strings, &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;!--&lt;/code&gt;&lt;code&gt;...&lt;/code&gt;&lt;code&gt;--&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; comments, or tags. If stray, unnested parentheses are used, they can be &lt;a href=&quot;#punctuation_escapes&quot;&gt;backslash-escaped&lt;/a&gt;: &lt;code&gt;\(&lt;/code&gt; or &lt;code&gt;\)&lt;/code&gt;.</source>
          <target state="translated">매크로는 인수를 가질 수 있습니다. 식별자의 끝에서 닫는 ')'까지의 모든 텍스트는 &amp;amp; dollar; 0 인수입니다. 대체 텍스트의 &amp;amp; 0은 인수 텍스트로 바뀝니다. 인수 텍스트에 쉼표가있는 경우 &amp;amp; 1은 첫 번째 쉼표까지의 인수 텍스트를 나타내고, 첫 번째 쉼표에서 두 번째 쉼표 등과 같은 최대 2 개의 인수 텍스트를 나타내는 최대 $ 9입니다. +는 첫 번째 쉼표에서 닫는 ')'까지의 텍스트를 나타냅니다. 인수 텍스트가 중첩 된 괄호를 포함 할 수 있습니다 &quot;&quot;또는 ''문자열 &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;!--&lt;/code&gt; &lt;code&gt;...&lt;/code&gt; &lt;code&gt;--&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 의견 또는 태그입니다. 길잃은, 중첩되지 괄호를 사용하는 경우, 그들은 할 수 있습니다 &lt;a href=&quot;#punctuation_escapes&quot;&gt;백 슬래시 이스케이프&lt;/a&gt; : &lt;code&gt;\(&lt;/code&gt; 또는 &lt;code&gt;\)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3c3c4c2ccfe8372f6cd2e069e3461d5720e2dc7" translate="yes" xml:space="preserve">
          <source>Macros to ease generating code modregrm: generate mod reg r/m field modregxrm: reg could be R8..R15 modregrmx: rm could be R8..R15 modregxrmx: reg or rm could be R8..R15</source>
          <target state="translated">코드 생성을 용이하게하는 매크로 modregrm : mod reg 생성 r / m 필드 modregxrm : reg는 R8..R15 일 수 있습니다. mod15는 rm 일 수 있습니다. R15 modregxrmx : reg 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b01d69d3c594ccd1f39b3609dda80d687b27a74" translate="yes" xml:space="preserve">
          <source>Mahjong Tiles</source>
          <target state="translated">마작 타일</target>
        </trans-unit>
        <trans-unit id="415d5e06ca564fdf93a52865ce8d28f3a5acb8bf" translate="yes" xml:space="preserve">
          <source>Main date types</source>
          <target state="translated">주요 날짜 유형</target>
        </trans-unit>
        <trans-unit id="66e415faddc4e0d878f47329f905001f0f264f9c" translate="yes" xml:space="preserve">
          <source>Main functionality</source>
          <target state="translated">주요 기능</target>
        </trans-unit>
        <trans-unit id="89997588a647b351fb1614fbf191614c691cf9dc" translate="yes" xml:space="preserve">
          <source>Main types</source>
          <target state="translated">주요 유형</target>
        </trans-unit>
        <trans-unit id="be35592b858c062b5b0300f1bbcabf23cb933bac" translate="yes" xml:space="preserve">
          <source>Mainly just a placeholder</source>
          <target state="translated">주로 자리 표시 자</target>
        </trans-unit>
        <trans-unit id="6c880a7e58cb5a48462791228162b04b3cb63f18" translate="yes" xml:space="preserve">
          <source>Mainly just a placeholder of Package, Module, Nspace, and TemplateInstance (including TemplateMixin)</source>
          <target state="translated">주로 Package, Module, Nspace 및 TemplateInstance (TemplateMixin 포함)의 자리 표시 자</target>
        </trans-unit>
        <trans-unit id="6709119b1651a47a086b7f828dc2d3ff1312b000" translate="yes" xml:space="preserve">
          <source>Maintain another reference to that same data in another thread that the GC does know about.</source>
          <target state="translated">GC가 알고있는 다른 스레드에서 동일한 데이터에 대한 다른 참조를 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="e4472e37b338e67a89fd1b5d36c98992fe68aa60" translate="yes" xml:space="preserve">
          <source>Major HTTP version ie. 1 in HTTP/1.0.</source>
          <target state="translated">주요 HTTP 버전. HTTP / 1.0에서 1입니다.</target>
        </trans-unit>
        <trans-unit id="a94431ee22f05f141107f9355ed3127d0f0c4d5a" translate="yes" xml:space="preserve">
          <source>Make</source>
          <target state="translated">Make</target>
        </trans-unit>
        <trans-unit id="3ba97147877901fcf3ccf5fc1131336b182b7b33" translate="yes" xml:space="preserve">
          <source>Make a common block for s.</source>
          <target state="translated">s에 대한 공통 블록을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6bfea7cf8f1b26e91c42e125bf884c70d3ad164a" translate="yes" xml:space="preserve">
          <source>Make a dual-context container for use as a &lt;code&gt;this&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 인수 로 사용하기 위해 이중 컨텍스트 컨테이너를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1abfcba754e1c0302a58d5e32f10b1091f1ebe7e" translate="yes" xml:space="preserve">
          <source>Make a new directory &lt;code&gt;pathname&lt;/code&gt;.</source>
          <target state="translated">새 디렉토리 &lt;code&gt;pathname&lt;/code&gt; 만드십시오 .</target>
        </trans-unit>
        <trans-unit id="c1a6e13f0addb5f5646c2abd0cb0b65b975d7ea4" translate="yes" xml:space="preserve">
          <source>Make a specific point in time in the New York timezone</source>
          <target state="translated">뉴욕 시간대에서 특정 시점 만들기</target>
        </trans-unit>
        <trans-unit id="b3f8f13ef7892bd05bbf45497a5da917ae81e2c9" translate="yes" xml:space="preserve">
          <source>Make directory and all parent directories as needed.</source>
          <target state="translated">필요에 따라 디렉토리 및 모든 상위 디렉토리를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="6da7393f911740ab04336b2af60f186b865c60f5" translate="yes" xml:space="preserve">
          <source>Make sure that the runtime hook &lt;code&gt;id&lt;/code&gt; exists.</source>
          <target state="translated">런타임 후크 &lt;code&gt;id&lt;/code&gt; 가 존재 하는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="525e5a74e45c1668b80e6f1f69958698da6f4d6e" translate="yes" xml:space="preserve">
          <source>Make the next option a required option</source>
          <target state="translated">다음 옵션을 필수 옵션으로 설정</target>
        </trans-unit>
        <trans-unit id="a77836e1ee565bdbac321b50fccddb3229a3e1a6" translate="yes" xml:space="preserve">
          <source>Make type mutable.</source>
          <target state="translated">유형을 변경 가능하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4605f2e5776569eac7f1701721da7c9b10116ccc" translate="yes" xml:space="preserve">
          <source>Make type unshared. 0 =&amp;gt; 0 const =&amp;gt; const immutable =&amp;gt; immutable shared =&amp;gt; 0 shared const =&amp;gt; const wild =&amp;gt; wild wild const =&amp;gt; wild const shared wild =&amp;gt; wild shared wild const =&amp;gt; wild const</source>
          <target state="translated">유형을 공유하지 마십시오. 0 =&amp;gt; 0 const =&amp;gt; const immutable =&amp;gt; immutable shared =&amp;gt; 0 shared const =&amp;gt; const wild =&amp;gt; wild wild const =&amp;gt; wild const shared wild =&amp;gt; wild shared wild const =&amp;gt; wild const</target>
        </trans-unit>
        <trans-unit id="9e6b91f833a3dc15ae3a2a05397995784c41e6ab" translate="yes" xml:space="preserve">
          <source>Makes a copy of the given array on newly allocated memory.</source>
          <target state="translated">새로 할당 된 메모리에 지정된 배열의 복사본을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5dcc70498836fb07f79353bc8ef2dfbc632b1248" translate="yes" xml:space="preserve">
          <source>Makes a null-terminated copy of the given string on newly allocated memory. The null-terminator won't be part of the returned string slice. It will be at position &lt;code&gt;n&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the length of the input string.</source>
          <target state="translated">새로 할당 된 메모리에서 지정된 문자열의 Null 종료 복사본을 만듭니다. 널 종료자는 리턴 된 문자열 슬라이스의 일부가 아닙니다. 이 위치에있을 것이다 &lt;code&gt;n&lt;/code&gt; 여기서, &lt;code&gt;n&lt;/code&gt; 입력 스트링의 길이이다.</target>
        </trans-unit>
        <trans-unit id="c56fa23eba2ab1fc971b9c8c2bace5681b9baed6" translate="yes" xml:space="preserve">
          <source>Makes sure the payload was properly initialized. Such a call is typically inserted before using the payload.</source>
          <target state="translated">페이로드가 올바르게 초기화되었는지 확인하십시오. 이러한 호출은 일반적으로 페이로드를 사용하기 전에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="cdf9329928a453eb7ea93527766dc15a786af057" translate="yes" xml:space="preserve">
          <source>Making a copy of the data using &lt;a href=&quot;https://dlang.org/phobos/std_experimental_allocator.html&quot;&gt;&lt;code&gt;std.experimental.allocator&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;core.stdc.stdlib.malloc&lt;/code&gt; and passing the copy instead.</source>
          <target state="translated">&lt;a href=&quot;https://dlang.org/phobos/std_experimental_allocator.html&quot;&gt; &lt;code&gt;std.experimental.allocator&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;core.stdc.stdlib.malloc&lt;/code&gt; 을 사용하여 데이터 사본을 작성하고 대신 사본을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="d4347a59dcc14e96dcb9203070618e3dae91bd4b" translate="yes" xml:space="preserve">
          <source>Making a copy of the data using core.stdc.stdlib.malloc() and passing the copy instead.</source>
          <target state="translated">core.stdc.stdlib.malloc ()을 사용하여 데이터 사본을 작성하고 대신 사본을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="c730df3afaaac142f305e8f798eca241f12abf9f" translate="yes" xml:space="preserve">
          <source>Malayalam</source>
          <target state="translated">Malayalam</target>
        </trans-unit>
        <trans-unit id="ae60c0645f8b0ef8bf786de73f43479ecba0ff5d" translate="yes" xml:space="preserve">
          <source>Manage flow analysis for constructors.</source>
          <target state="translated">생성자에 대한 흐름 분석을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="63617cfe427854e42387ca5fb2dd42a8d02042c4" translate="yes" xml:space="preserve">
          <source>Mandaic</source>
          <target state="translated">Mandaic</target>
        </trans-unit>
        <trans-unit id="dc3a58f069313e89dc8f96321457748a4819acb0" translate="yes" xml:space="preserve">
          <source>Mangle function signatures ('this' qualifier, and parameter types) to check conflicts in function overloads. It's different from fd.type.deco. For example, fd.type.deco would be null if fd is an auto function.</source>
          <target state="translated">함수 오버로드의 충돌을 확인하기 위해 함수 서명 ( 'this'한정자 및 매개 변수 유형)을 얽습니다. fd.type.deco와 다릅니다. 예를 들어 fd가 자동 함수 인 경우 fd.type.deco는 null입니다.</target>
        </trans-unit>
        <trans-unit id="ced58ad2f9818afd78e1b67efec7988d477fb723" translate="yes" xml:space="preserve">
          <source>Mangle the given symbol for C++ ABI.</source>
          <target state="translated">C ++ ABI에 대해 주어진 기호를 엉망으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5f2b13060b64fd11b1052222629bef3facad8f88" translate="yes" xml:space="preserve">
          <source>Mangles a D function.</source>
          <target state="translated">D 함수를 엉망으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a34594bca42d9e54bcfa5ae318f82eb8738df791" translate="yes" xml:space="preserve">
          <source>Mangles a D symbol.</source>
          <target state="translated">D 기호를 엉킨 다.</target>
        </trans-unit>
        <trans-unit id="148f8cf1414dcfee88fdea6836cf667aec741ed3" translate="yes" xml:space="preserve">
          <source>Mangling refers to how a symbol is represented in text form in the generated object file. &lt;code&gt;.mangleof&lt;/code&gt; returns a string literal of the representation of the type or symbol it is applied to. The mangling of types and symbols with D linkage is defined by &lt;a href=&quot;abi#name_mangling&quot;&gt;Name Mangling&lt;/a&gt;.</source>
          <target state="translated">Mangling은 생성 된 객체 파일에서 심볼이 텍스트 형식으로 표시되는 방식을 나타냅니다. &lt;code&gt;.mangleof&lt;/code&gt; 는 적용되는 유형 또는 기호의 표현에 대한 문자열 리터럴을 리턴합니다. D 연결을 사용하는 유형 및 기호의 조작은 &lt;a href=&quot;abi#name_mangling&quot;&gt;Name Mangling에&lt;/a&gt; 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="1fe7f3349feabe9c89e0c56bcd790f4f6db52a02" translate="yes" xml:space="preserve">
          <source>Manifest Constants</source>
          <target state="translated">매니페스트 상수</target>
        </trans-unit>
        <trans-unit id="dbbdf8dc2eb670e040ba223dcb25ad582879b9f4" translate="yes" xml:space="preserve">
          <source>Manifest constants are not lvalues, meaning their address cannot be taken. They exist only in the memory of the compiler.</source>
          <target state="translated">매니페스트 상수는 lvalue가 아니므로 주소를 가져올 수 없습니다. 그것들은 컴파일러의 메모리에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="a6bd23ae5d1ad3b51438e4d31cc4052a69e2527b" translate="yes" xml:space="preserve">
          <source>Manipulate builtin arrays.</source>
          <target state="translated">내장 배열을 조작합니다.</target>
        </trans-unit>
        <trans-unit id="b3d27b0d4934910380362c1298dce9010e6bd996" translate="yes" xml:space="preserve">
          <source>Manipulate files and directories.</source>
          <target state="translated">파일과 디렉토리를 조작하십시오.</target>
        </trans-unit>
        <trans-unit id="c5b5a6b88c43d3a6c6daa4ed63f323e6a3048a07" translate="yes" xml:space="preserve">
          <source>Manipulate strings that represent filesystem paths.</source>
          <target state="translated">파일 시스템 경로를 나타내는 문자열을 조작하십시오.</target>
        </trans-unit>
        <trans-unit id="3e4d28d389556bd825a440f859d3401675a6c5c2" translate="yes" xml:space="preserve">
          <source>Manipulates environment variables using an associative-array-like interface.</source>
          <target state="translated">연관 배열 형 인터페이스를 사용하여 환경 변수를 조작합니다.</target>
        </trans-unit>
        <trans-unit id="a0c12fb39a6a73583409d354fb81a52d9a2e0a56" translate="yes" xml:space="preserve">
          <source>Manu Evans</source>
          <target state="translated">마누 에반스</target>
        </trans-unit>
        <trans-unit id="a747304ebc9a5c399ecad10827e0d5fb3537bd7f" translate="yes" xml:space="preserve">
          <source>Manual D main (for druntime initialization), which forwards to &lt;code&gt;tryMain&lt;/code&gt;.</source>
          <target state="translated">, 전달에 (druntime 초기화에 대한) 수동 D의 주요 &lt;code&gt;tryMain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fbeb16d0215c18c2ad3b7f92b0e101cadbbba80" translate="yes" xml:space="preserve">
          <source>Manually initialize the client RTSP CSeq for this handle</source>
          <target state="translated">이 핸들에 대한 클라이언트 RTSP CSeq를 수동으로 초기화</target>
        </trans-unit>
        <trans-unit id="0297a4524810d6d4a3159e7c6f28143e0ac281d1" translate="yes" xml:space="preserve">
          <source>Manually initialize the server RTSP CSeq for this handle</source>
          <target state="translated">이 핸들에 대한 서버 RTSP CSeq를 수동으로 초기화</target>
        </trans-unit>
        <trans-unit id="1dcb8e75d7969bc3abd2e7c3effeca48107c2001" translate="yes" xml:space="preserve">
          <source>Many aggregate range operations turn out to be solved with &lt;code&gt;reduce&lt;/code&gt; quickly and easily. The example below illustrates &lt;code&gt;reduce&lt;/code&gt;'s remarkable power and flexibility.</source>
          <target state="translated">많은 집계 범위 작업이 빠르고 쉽게 &lt;code&gt;reduce&lt;/code&gt; 해결되는 것으로 나타났습니다 . 아래 예제는 놀라운 성능과 유연성을 보여 &lt;code&gt;reduce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc2ca31ee175eeb6b7d2fc289d02204152e17221" translate="yes" xml:space="preserve">
          <source>Many array operations, also known as vector operations, can be expressed at a high level rather than as a loop. For example, the loop:</source>
          <target state="translated">벡터 연산이라고도하는 많은 배열 연산을 루프가 아니라 높은 수준으로 표현할 수 있습니다. 예를 들어, 루프 :</target>
        </trans-unit>
        <trans-unit id="a74103b79f7a383e8126d38c82beb9f82d879e84" translate="yes" xml:space="preserve">
          <source>Many functions in this package are parameterized with a &lt;a href=&quot;http://dlang.org/glossary.html#predicate&quot;&gt;predicate&lt;/a&gt;. The predicate may be any suitable callable type (a function, a delegate, a &lt;a href=&quot;http://dlang.org/glossary.html#functor&quot;&gt;functor&lt;/a&gt;, or a lambda), or a compile-time string. The string may consist of &lt;b&gt;any&lt;/b&gt; legal D expression that uses the symbol &lt;code&gt;a&lt;/code&gt; (for unary functions) or the symbols &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (for binary functions). These names will NOT interfere with other homonym symbols in user code because they are evaluated in a different context. The default for all binary comparison predicates is &lt;code&gt;&quot;a == b&quot;&lt;/code&gt; for unordered operations and &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; for ordered operations.</source>
          <target state="translated">이 패키지의 많은 함수는 &lt;a href=&quot;http://dlang.org/glossary.html#predicate&quot;&gt;술어&lt;/a&gt; 로 매개 변수화됩니다 . 술어는 적절한 호출 가능한 유형 (함수, 대리자, &lt;a href=&quot;http://dlang.org/glossary.html#functor&quot;&gt;functor&lt;/a&gt; 또는 람다) 또는 컴파일 타임 문자열 일 수 있습니다. 문자열로 구성 될 수 &lt;b&gt;있는&lt;/b&gt; 심볼 사용 법적 D 발현 &lt;code&gt;a&lt;/code&gt; (단항 기능) 또는 심볼 및 &lt;code&gt;b&lt;/code&gt; (진 기능). 이러한 이름은 다른 컨텍스트에서 평가되기 때문에 사용자 코드의 다른 동음 기호를 방해하지 않습니다. 모든 이진 비교 술어의 기본값은 정렬되지 않은 조작의 경우 &lt;code&gt;&quot;a == b&quot;&lt;/code&gt; 이고 정렬 된 조작의 경우 &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; 입니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dca517d4d22249072adc31efed00eaae12a4434" translate="yes" xml:space="preserve">
          <source>Many languages overload the + operator to mean concatenation. This confusingly leads to, does:</source>
          <target state="translated">많은 언어는 연결을 의미하기 위해 + 연산자를 오버로드합니다. 이 혼란스러운 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0e9603791fcc610a28e818534a769f77b36897c4" translate="yes" xml:space="preserve">
          <source>Many more functions will be added to this module. The naming convention for the distribution functions (gammaIncomplete, etc) is not yet finalized and will probably change.</source>
          <target state="translated">이 모듈에는 더 많은 기능이 추가 될 것입니다. 분포 함수 (gammaIncomplete 등)의 명명 규칙은 아직 확정되지 않았으며 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b3c0f640962fe45a5bb8aa72a2bf3ed127a738c" translate="yes" xml:space="preserve">
          <source>Map (higher-order function)</source>
          <target state="translated">맵 (고차 함수)</target>
        </trans-unit>
        <trans-unit id="d023b2e06ae9ecd57655e63d888c6a38d365c1c2" translate="yes" xml:space="preserve">
          <source>Mapping of a byte sequence to &lt;b&gt;Byte Order Mark (BOM)&lt;/b&gt;</source>
          <target state="translated">바이트 순서를 &lt;b&gt;바이트 순서 표시 (BOM)에&lt;/b&gt; 맵핑&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="31e9697d43a1a66f2e45db652019fb9a6216df22" translate="yes" xml:space="preserve">
          <source>Mark</source>
          <target state="translated">Mark</target>
        </trans-unit>
        <trans-unit id="6ffcc0a259f655515f96cc8b2d001cfa106d6adf" translate="yes" xml:space="preserve">
          <source>Mark the operand as will never be dereferenced, which is useful info for @safe checks. Do before semantic() on operands rewrites them.</source>
          <target state="translated">@safe 점검에 유용한 정보 인 피연산자를 역 참조되지 않도록 표시하십시오. 피연산자의 semantic ()이 다시 쓰기 전에 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="7b1aaf9a9b88a6df8d74ea8b9437f9bf9b28ca98" translate="yes" xml:space="preserve">
          <source>Mark the operands as will never be dereferenced, which is useful info for @safe checks. Do before semantic() on operands rewrites them.</source>
          <target state="translated">피연산자를 역 참조되지 않도록 표시합니다. 이는 @safe 검사에 유용한 정보입니다. 피연산자의 semantic ()이 다시 쓰기 전에 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6502c1ba20a549a34759225baf0e5d40999bf988" translate="yes" xml:space="preserve">
          <source>Mark this as a Rng</source>
          <target state="translated">이것을 Rng로 표시</target>
        </trans-unit>
        <trans-unit id="2bf4fa7c0956cb1fdd3ecbee1e7ce54d5a6bb263" translate="yes" xml:space="preserve">
          <source>Mark variable v as modified if it is inside a constructor that var is a field in.</source>
          <target state="translated">var가 필드 인 생성자 내에 있으면 변수 v를 수정 된 것으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="43791f7af0838eabc46d0824572db10f91b02285" translate="yes" xml:space="preserve">
          <source>Martin Kinkelin</source>
          <target state="translated">마틴 킨 켈린</target>
        </trans-unit>
        <trans-unit id="5637a4a34d1c67892335f2ad5244cdfa55d85c6d" translate="yes" xml:space="preserve">
          <source>Martin Nowak</source>
          <target state="translated">마틴 노박</target>
        </trans-unit>
        <trans-unit id="634e2099c6e661c76d0ed1209ae09cbdd335ffa4" translate="yes" xml:space="preserve">
          <source>Martin Nowak, Walter Bright, &lt;a href=&quot;http://www.digitalmars.com&quot;&gt;http://www.digitalmars.com&lt;/a&gt;</source>
          <target state="translated">Martin Nowak, Walter Bright, &lt;a href=&quot;http://www.digitalmars.com&quot;&gt;http://www.digitalmars.com&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd5bb36f0c221e6191a45e9c1239a0ef757bb11e" translate="yes" xml:space="preserve">
          <source>Masahiro Nakagawa, Daniel Murphy (Single value Encoder and Decoder)</source>
          <target state="translated">나카가와 마사히로, 다니엘 머피 (단일 인코더 및 디코더)</target>
        </trans-unit>
        <trans-unit id="3b4d8cf3890734f4fadb4d37ea781cb0ac9e5158" translate="yes" xml:space="preserve">
          <source>Masks for register pairs. Note that index registers are always LSWs. This is for the convenience of implementing far pointers.</source>
          <target state="translated">레지스터 쌍용 마스크. 인덱스 레지스터는 항상 LSW입니다. 이것은 멀리 포인터를 구현할 때 편리합니다.</target>
        </trans-unit>
        <trans-unit id="40deae84f1abfc7e207419de3291a71df137054a" translate="yes" xml:space="preserve">
          <source>Master list of D compiler vendors.</source>
          <target state="translated">D 컴파일러 공급 업체의 마스터 목록.</target>
        </trans-unit>
        <trans-unit id="bdbdc9dc0b30e98355e6da908f27cfdf0b692c8d" translate="yes" xml:space="preserve">
          <source>Match function arguments against a specific template function.</source>
          <target state="translated">함수 인수를 특정 템플릿 함수와 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="c3be1112e4fade99753f0a12ea4510c5118cf76f" translate="yes" xml:space="preserve">
          <source>Match position rather than character</source>
          <target state="translated">캐릭터가 아닌 위치 일치</target>
        </trans-unit>
        <trans-unit id="c6689129157a0cd7e210456aa61647929d8c6a12" translate="yes" xml:space="preserve">
          <source>Match single characters</source>
          <target state="translated">단일 문자와 일치</target>
        </trans-unit>
        <trans-unit id="148aa05679c67c07ca0b45d24720b741e8965e9e" translate="yes" xml:space="preserve">
          <source>Match to a particular TemplateParameter.</source>
          <target state="translated">특정 TemplateParameter와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d67f60e052c647bc8e8157aba95edd1135747518" translate="yes" xml:space="preserve">
          <source>Match. If the codepoint is found in the set then range &lt;code&gt;inp&lt;/code&gt; is advanced by its size in &lt;a href=&quot;#Code%20unit&quot;&gt;code units&lt;/a&gt;, otherwise the range is not modifed.</source>
          <target state="translated">시합. 코드 포인트가 세트에서 발견되면 범위 &lt;code&gt;inp&lt;/code&gt; 의 크기가 &lt;a href=&quot;#Code%20unit&quot;&gt;코드 단위로 증가합니다&lt;/a&gt; . 그렇지 않으면 범위가 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="376518d2ef13168fcac562d64282005ad23bc928" translate="yes" xml:space="preserve">
          <source>MatchAccumulator &lt;code&gt;m&lt;/code&gt;</source>
          <target state="translated">매치 어큐뮬레이터 &lt;code&gt;m&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb15661c397d61fb56d9df6a184e4fb0749edfcf" translate="yes" xml:space="preserve">
          <source>Matches 0 or more instances of any character.</source>
          <target state="translated">모든 문자의 0 개 이상의 인스턴스와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="1b9ff915f17d527a366476bc5fa2efc5bd3344df" translate="yes" xml:space="preserve">
          <source>Matches \ character.</source>
          <target state="translated">\ 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d260610c825342c8a67d6079303a94f547805d4d" translate="yes" xml:space="preserve">
          <source>Matches a carriage return character.</source>
          <target state="translated">캐리지 리턴 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="3d4ef72de0c62fe37341c3d09484f217488c5b53" translate="yes" xml:space="preserve">
          <source>Matches a character that belongs to the Unicode PropertyName set. Single letter abbreviations can be used without surrounding {,}.</source>
          <target state="translated">유니 코드 PropertyName 세트에 속하는 문자를 찾습니다. 단일 문자 약어는 {,}를 둘러싸 지 않고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93f07d191bb83f6c2008b9d72fa87801f16649a3" translate="yes" xml:space="preserve">
          <source>Matches a character that does not belong to the Unicode PropertyName set. Single letter abbreviations can be used without surrounding {,}.</source>
          <target state="translated">유니 코드 PropertyName 세트에 속하지 않는 문자와 일치합니다. 단일 문자 약어는 {,}를 둘러싸 지 않고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="566d7f7e38c4f32d92f952f44e41d0f5e20341c0" translate="yes" xml:space="preserve">
          <source>Matches a character with hexadecimal value of XX.</source>
          <target state="translated">16 진수 값이 XX 인 문자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f8e9580dd531ce650e18ada33bfae29a8575ead2" translate="yes" xml:space="preserve">
          <source>Matches a character with hexadecimal value of XXXX.</source>
          <target state="translated">16 진수 값이 XXXX 인 문자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="38acb7b15bf078182213f163b848e68097571ebb" translate="yes" xml:space="preserve">
          <source>Matches a character with hexadecimal value of YYYYYY.</source>
          <target state="translated">16 진수 값이 YYYYYY 인 문자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="4b5eb461f7e32007ad36804786e028b3b6d3dc0b" translate="yes" xml:space="preserve">
          <source>Matches a formfeed character.</source>
          <target state="translated">용지 공급 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="77e95872193cd47012e519a74ae3e1c87ca38f7d" translate="yes" xml:space="preserve">
          <source>Matches a linefeed character.</source>
          <target state="translated">줄 바꿈 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="3e897b344e0757fd41067b191889c5addfadb41f" translate="yes" xml:space="preserve">
          <source>Matches a pattern against a path.</source>
          <target state="translated">경로와 패턴을 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="d66a7d7700d7a95eb1d2874bde9effcf95c0d4ea" translate="yes" xml:space="preserve">
          <source>Matches a single character that belongs to this character class.</source>
          <target state="translated">이 문자 클래스에 속하는 단일 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="83324b7e2c1bc20326ff487b5840c55c39dc6197" translate="yes" xml:space="preserve">
          <source>Matches a single character that does &lt;em&gt;not&lt;/em&gt; belong to this character class.</source>
          <target state="translated">이 문자 클래스에 속하지 &lt;em&gt;않는&lt;/em&gt; 단일 문자와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="cab02f886f635ace9cbacc9188ee8abb79f5d542" translate="yes" xml:space="preserve">
          <source>Matches a tab character.</source>
          <target state="translated">탭 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="e236db248100ae3fd28caffc37fe9c48f80f9bb6" translate="yes" xml:space="preserve">
          <source>Matches a vertical tab character.</source>
          <target state="translated">세로 탭 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9e6b2c792fd634e9622e84bef86fbd0a77a6417b" translate="yes" xml:space="preserve">
          <source>Matches any Unicode digit.</source>
          <target state="translated">모든 유니 코드 숫자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8fa150f9ecc4530d1ba9af253009cc3456029976" translate="yes" xml:space="preserve">
          <source>Matches any character except Unicode digits.</source>
          <target state="translated">유니 코드 숫자를 제외한 모든 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="5d5fafcbb22ed76de0bbd720f8c34d2e0299c44a" translate="yes" xml:space="preserve">
          <source>Matches any character except ones in Cyrillic &lt;em&gt;script&lt;/em&gt;.</source>
          <target state="translated">키릴에서 제외한 모든 문자와 일치 &lt;em&gt;스크립트&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="924bc1a5b59a3dce4f3c80cc62dab13e152ebb85" translate="yes" xml:space="preserve">
          <source>Matches any character except ones in the BasicLatin Unicode &lt;em&gt;block&lt;/em&gt;.</source>
          <target state="translated">BasicLatin Unicode &lt;em&gt;블록&lt;/em&gt; 의 문자를 제외한 모든 문자와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="6021ff274bc8c771ce0e596bb4aaa530db0a929a" translate="yes" xml:space="preserve">
          <source>Matches any character except those recognized as</source>
          <target state="translated">로 인식되는 문자를 제외한 모든 문자와 일치</target>
        </trans-unit>
        <trans-unit id="d45f9d47fbc3385960d4045204b8fa2e386214d5" translate="yes" xml:space="preserve">
          <source>Matches any character that is part of Cyrillic &lt;em&gt;script&lt;/em&gt;.</source>
          <target state="translated">키릴 문자 &lt;em&gt;스크립트의&lt;/em&gt; 일부인 모든 문자와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="d03c91729f38a9723ae90c15a2197e33622f23ef" translate="yes" xml:space="preserve">
          <source>Matches any character that is part of the BasicLatin Unicode &lt;em&gt;block&lt;/em&gt;.</source>
          <target state="translated">BasicLatin Unicode &lt;em&gt;블록의&lt;/em&gt; 일부인 모든 문자와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="fb574dadab1447a560dffc656e147119382698b5" translate="yes" xml:space="preserve">
          <source>Matches any non-word character.</source>
          <target state="translated">비 단어 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="3403b0fa145ced1d792923f6d49e5db2d7819435" translate="yes" xml:space="preserve">
          <source>Matches any word character (note: this includes numbers).</source>
          <target state="translated">모든 단어 문자와 일치합니다 (참고 : 숫자 포함).</target>
        </trans-unit>
        <trans-unit id="80da2f0135b2a31162fa38adfbd74f0e45d4aeea" translate="yes" xml:space="preserve">
          <source>Matches at the begining of input or line (in multiline mode).</source>
          <target state="translated">입력 또는 라인 시작시 일치합니다 (여러 줄 모드에서).</target>
        </trans-unit>
        <trans-unit id="22405e45d9f4b57fd785c56e62bdefc784bbacad" translate="yes" xml:space="preserve">
          <source>Matches at the end of input or line (in multiline mode).</source>
          <target state="translated">입력 또는 라인 끝에서 일치합니다 (여러 줄 모드에서).</target>
        </trans-unit>
        <trans-unit id="9e52d31b85e40923acff9955825d7752c6e3d5f3" translate="yes" xml:space="preserve">
          <source>Matches at word boundary.</source>
          <target state="translated">단어 경계에서 일치합니다.</target>
        </trans-unit>
        <trans-unit id="577bd19069cccb78c878150d0873c8b87bf7a56a" translate="yes" xml:space="preserve">
          <source>Matches either of the specified strings.</source>
          <target state="translated">지정된 문자열 중 하나와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="7032474b5acce6809313391bc66533e639b25d58" translate="yes" xml:space="preserve">
          <source>Matches exactly one instance of any character.</source>
          <target state="translated">모든 문자의 정확히 하나의 인스턴스와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="36a44fb433346fca4b9bc3c5d901586ff1246b65" translate="yes" xml:space="preserve">
          <source>Matches named subexpression regex labeling it with name 'name'. When referring to a matched portion of text, names work like aliases in addition to direct numbers.</source>
          <target state="translated">이름이 'name'인 레이블이 붙은 하위 표현식 정규 표현식과 일치합니다. 일치하는 텍스트 부분을 참조 할 때 이름은 직접 숫자 외에 별명처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="00d1e608ef75a418f8d7948d0b6823e3bc89b904" translate="yes" xml:space="preserve">
          <source>Matches one instance of any character that appears between the brackets.</source>
          <target state="translated">대괄호 사이에 나타나는 모든 문자의 한 인스턴스와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="f1226391146d3924b763eb9ef0e5cf228cb4de36" translate="yes" xml:space="preserve">
          <source>Matches one instance of any character that does not appear between the brackets after the exclamation mark.</source>
          <target state="translated">느낌표 다음에 대괄호 사이에 나타나지 않는 문자의 한 인스턴스와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="988aaf14193608b4daf8a5deb48eaea59a3dcec1" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression 0 or more times. Greedy version - tries as many times as possible.</source>
          <target state="translated">이전 문자 / 부 표현식을 0 번 이상 일치시킵니다. 욕심 버전-가능한 한 많은 시도.</target>
        </trans-unit>
        <trans-unit id="dc5890e4e43176bad35bb66bd98239c5e9dce6e5" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression 0 or more times. Lazy version - stops as early as possible.</source>
          <target state="translated">이전 문자 / 부 표현식을 0 번 이상 일치시킵니다. 게으른 버전-가능한 빨리 중지합니다.</target>
        </trans-unit>
        <trans-unit id="7057e108d200837d3f3e3900e17b1ad6f500a9ff" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression 1 or more times. Greedy version - tries as many times as possible.</source>
          <target state="translated">이전 문자 / 부 표현식을 1 회 이상 일치시킵니다. 욕심 버전-가능한 한 많은 시도.</target>
        </trans-unit>
        <trans-unit id="3452a18b749bc5cf311ba5e68ced61439cf96c5b" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression 1 or more times. Lazy version - stops as early as possible.</source>
          <target state="translated">이전 문자 / 부 표현식을 1 회 이상 일치시킵니다. 게으른 버전-가능한 빨리 중지합니다.</target>
        </trans-unit>
        <trans-unit id="2ffd12f9ff030816a3d8b080af1d2850b99b06d2" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression exactly n times.</source>
          <target state="translated">이전 문자 / 부 표현식을 정확히 n 번 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="e30e49830de16035498306cf102e3cf0560e438f" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression n times or more. Greedy version - tries as many times as possible.</source>
          <target state="translated">이전 문자 / 부 표현식을 n 번 이상 일치시킵니다. 욕심 버전-가능한 한 많은 시도.</target>
        </trans-unit>
        <trans-unit id="559dc120300f9b03ed2c4d11de66b47f805dff5b" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression n times or more. Lazy version - stops as early as possible.</source>
          <target state="translated">이전 문자 / 부 표현식을 n 번 이상 일치시킵니다. 게으른 버전-가능한 빨리 중지합니다.</target>
        </trans-unit>
        <trans-unit id="718cd66ef291724dca1b1655e4689eb3f6e7962c" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression n to m times. Greedy version - tries as many times as possible, but no more than m times.</source>
          <target state="translated">이전 문자 / 부 표현식 n과 m 배를 찾습니다. 욕심 버전-가능한 한 여러 번 시도하지만 m 번 이상 시도하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c8c46caef3efc96dcf2d80650ac81f7704565b52" translate="yes" xml:space="preserve">
          <source>Matches previous character/subexpression n to m times. Lazy version - stops as early as possible, but no less then n times.</source>
          <target state="translated">이전 문자 / 부 표현식 n과 m 배를 일치시킵니다. 게으른 버전-가능한 한 빨리 중지하지만 n 배 이상입니다.</target>
        </trans-unit>
        <trans-unit id="55fad56791bcac5e8467a93ff520f840617fad9a" translate="yes" xml:space="preserve">
          <source>Matches subexpression A, or failing that, matches B.</source>
          <target state="translated">하위 표현식 A와 일치하거나 실패하면 B와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="0152891decac3dd1755184ed1399dcc0dad87f92" translate="yes" xml:space="preserve">
          <source>Matches subexpression regex, &lt;em&gt;not&lt;/em&gt; saving matched portion of text. Useful to speed up matching.</source>
          <target state="translated">일치 하는 텍스트 부분을 저장 &lt;em&gt;하지 않고&lt;/em&gt; 하위 표현식 정규식 과 일치합니다. 일치 속도를 높이는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="eb8c9711322ff24a78ef813a8c7d9cf871d789fe" translate="yes" xml:space="preserve">
          <source>Matches subexpression regex, saving matched portion of text for later retrieval.</source>
          <target state="translated">하위 표현식 정규식과 일치하여 나중에 검색 할 수 있도록 일치하는 텍스트 부분을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="6601b3118fcc0e244e360384257b8e903b4ea7f8" translate="yes" xml:space="preserve">
          <source>Matches the character c itself.</source>
          <target state="translated">문자 c 자체와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8c3dc8c9444ac4e63e48c719abc51544ef470a8f" translate="yes" xml:space="preserve">
          <source>Matches the character itself.</source>
          <target state="translated">캐릭터 자체와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="4cecc7435bfa871d524952f5bff148bdc2b51957" translate="yes" xml:space="preserve">
          <source>Matches the control character corresponding to letter C</source>
          <target state="translated">문자 C에 해당하는 제어 문자와 일치</target>
        </trans-unit>
        <trans-unit id="abd6e41a9323e0a9e48fa76b6daf09b0566eaa14" translate="yes" xml:space="preserve">
          <source>Matches when &lt;em&gt;not&lt;/em&gt; at word boundary.</source>
          <target state="translated">단어 경계에 &lt;em&gt;없을&lt;/em&gt; 때 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="c97355716d3d517fe5e4d25c561b4a081f053fef" translate="yes" xml:space="preserve">
          <source>Matches whitespace, same as \p{White_Space}.</source>
          <target state="translated">\ p {White_Space}와 같은 공백과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="5150558ec125a3f4852d898bf9fb73076c3ddf80" translate="yes" xml:space="preserve">
          <source>Matching</source>
          <target state="translated">Matching</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="593ab8a4827c0f6a24bb66511456c27b983c3d36" translate="yes" xml:space="preserve">
          <source>Math notation</source>
          <target state="translated">수학 표기법</target>
        </trans-unit>
        <trans-unit id="cf36f25f0559cb79154e20b8ea575a6b21bd026f" translate="yes" xml:space="preserve">
          <source>Math_Symbol</source>
          <target state="translated">Math_Symbol</target>
        </trans-unit>
        <trans-unit id="6a2f1fef8d0b8728fe438f495de2e1ae827aab61" translate="yes" xml:space="preserve">
          <source>Mathematical Alphanumeric Symbols</source>
          <target state="translated">수학 영숫자 기호</target>
        </trans-unit>
        <trans-unit id="0a46c733f98e0b91d3ba8029a4593062b6eca0a2" translate="yes" xml:space="preserve">
          <source>Mathematical Operators</source>
          <target state="translated">수학 연산자</target>
        </trans-unit>
        <trans-unit id="9d3f9c0127bce6fc83c843d0dd0b886857f901b2" translate="yes" xml:space="preserve">
          <source>Mathematical Special Functions</source>
          <target state="translated">수학 특수 함수</target>
        </trans-unit>
        <trans-unit id="303c3bfeb0c566d68c9cf9bc9d6feb84cfa3e99a" translate="yes" xml:space="preserve">
          <source>Mathematically,</source>
          <target state="translated">Mathematically,</target>
        </trans-unit>
        <trans-unit id="e75225470130f13024b089d576a9938f9308ab12" translate="yes" xml:space="preserve">
          <source>Mathematically, acosh(x) = log(x + sqrt( x*x - 1))</source>
          <target state="translated">수학적으로 acosh (x) = log (x + sqrt (x * x-1))</target>
        </trans-unit>
        <trans-unit id="502c0bcf3d4b5cef68953c91b886223b99eb3579" translate="yes" xml:space="preserve">
          <source>Mathematically, atanh(x) = log( (1+x)/(1-x) ) / 2</source>
          <target state="translated">수학적으로 atanh (x) = log ((1 + x) / (1-x)) / 2</target>
        </trans-unit>
        <trans-unit id="354081ac0eaf5ecbff2a21240af5c85107f9d3b8" translate="yes" xml:space="preserve">
          <source>Mathematically, if z.re &amp;gt; 0 then &amp;Gamma;(z) = &lt;em&gt;&amp;int;&lt;sub&gt;&lt;small&gt;0&lt;/small&gt;&lt;/sub&gt;&lt;sup&gt;&amp;infin;&lt;/sup&gt;&lt;/em&gt; t&lt;sup&gt;z-1&lt;/sup&gt;e&lt;sup&gt;-t&lt;/sup&gt; dt</source>
          <target state="translated">수학적으로 z.re&amp;gt; 0이면 &amp;Gamma; (z) = &lt;em&gt;&amp;int; &lt;sub&gt;&lt;small&gt;0&lt;/small&gt;&lt;/sub&gt;&lt;sup&gt; &amp;infin;&lt;/sup&gt;&lt;/em&gt; t &lt;sup&gt;z-1&lt;/sup&gt; e &lt;sup&gt;-t&lt;/sup&gt; dt</target>
        </trans-unit>
        <trans-unit id="d0b76b554e18654fc7afe37a2d36ca2278c9a0bd" translate="yes" xml:space="preserve">
          <source>Max amount of cached alive connections</source>
          <target state="translated">캐시 된 활성 연결의 최대량</target>
        </trans-unit>
        <trans-unit id="d5b26c0e81e6d1a04cf9525857321ed542c48ef8" translate="yes" xml:space="preserve">
          <source>MaxType!T &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;(T...)(T args)</source>
          <target state="translated">MaxType! T &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt; (T ...) (T 인수)</target>
        </trans-unit>
        <trans-unit id="0dd9def42e4e971e29f54b75773752e9cfc0c934" translate="yes" xml:space="preserve">
          <source>Maximum absolute difference. Defaults to &lt;code&gt;1e-5&lt;/code&gt;.</source>
          <target state="translated">최대 절대 차이. 기본값은 &lt;code&gt;1e-5&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2b7b018d266ff7216df8a5bed74f6143c9da1187" translate="yes" xml:space="preserve">
          <source>Maximum allowable difference relative to &lt;code&gt;rhs&lt;/code&gt;. Defaults to &lt;code&gt;1e-2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rhs&lt;/code&gt; 에 대한 최대 허용 차이 . 기본값은 &lt;code&gt;1e-2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="173bf02e3e5d647f57619cdb3f8fe81ffcb9080f" translate="yes" xml:space="preserve">
          <source>Maximum number of http redirects to follow</source>
          <target state="translated">따라야 할 최대 HTTP 리디렉션 수</target>
        </trans-unit>
        <trans-unit id="549e94c2379df9e88c8b21145c9bed436b888bf9" translate="yes" xml:space="preserve">
          <source>Maximum size eligible for freelisting. Construction with this parameter is defined only if &lt;code&gt;maxSize == chooseAtRuntime&lt;/code&gt; or &lt;code&gt;maxSize == unbounded&lt;/code&gt;.</source>
          <target state="translated">프리리스트에 적합한 최대 크기. 이 매개 변수를 사용한 구성은 &lt;code&gt;maxSize == chooseAtRuntime&lt;/code&gt; 또는 &lt;code&gt;maxSize == unbounded&lt;/code&gt; 경우에만 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="5bc432c657fe4144bd45d936698c166acecd18fa" translate="yes" xml:space="preserve">
          <source>Maximum xShmLock index</source>
          <target state="translated">최대 xShmLock 색인</target>
        </trans-unit>
        <trans-unit id="a70fc4b531788cfa4bd3091286f5c9f6c8385cb7" translate="yes" xml:space="preserve">
          <source>May throw a &lt;code&gt;UTFException&lt;/code&gt; if &lt;code&gt;str[index]&lt;/code&gt; is not one past the end of a valid UTF sequence.</source>
          <target state="translated">던져 수 &lt;code&gt;UTFException&lt;/code&gt; 을 경우 &lt;code&gt;str[index]&lt;/code&gt; 유효한 UTF 시퀀스의 끝을지나 아니다.</target>
        </trans-unit>
        <trans-unit id="e5fa0097c5f6c3d6966b6fd938ee6ef58844d1cb" translate="yes" xml:space="preserve">
          <source>May throw a &lt;code&gt;UTFException&lt;/code&gt; if &lt;code&gt;str[index]&lt;/code&gt; is not the start of a valid UTF sequence.</source>
          <target state="translated">던져 수 &lt;code&gt;UTFException&lt;/code&gt; 을 경우 &lt;code&gt;str[index]&lt;/code&gt; 유효한 UTF 시퀀스의 시작이 아니다.</target>
        </trans-unit>
        <trans-unit id="4cf2cc5419330915ceb88f803da616df3e656fb1" translate="yes" xml:space="preserve">
          <source>Mc</source>
          <target state="translated">Mc</target>
        </trans-unit>
        <trans-unit id="94563ec383e29aa3743abd9b337b2e084fb199fb" translate="yes" xml:space="preserve">
          <source>Me</source>
          <target state="translated">Me</target>
        </trans-unit>
        <trans-unit id="236346d53333e28078765d761ee605b09c5c66e1" translate="yes" xml:space="preserve">
          <source>Meaning:</source>
          <target state="translated">Meaning:</target>
        </trans-unit>
        <trans-unit id="ae0a51f3f8c1bd633457792e73d95ebdfb47fabe" translate="yes" xml:space="preserve">
          <source>Measure a time in milliseconds, microseconds, or nanoseconds</source>
          <target state="translated">밀리 초, 마이크로 초 또는 나노초 단위의 시간 측정</target>
        </trans-unit>
        <trans-unit id="5a8ad743c5f100acd20d0277cefb86b571133693" translate="yes" xml:space="preserve">
          <source>Measures the maximum bytes allocated over the time. This is useful for dimensioning allocators.</source>
          <target state="translated">시간에 따라 할당 된 최대 바이트를 측정합니다. 할당자를 치수를 재는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ebcd785babc414ca5f7b40b1e241144407a1963a" translate="yes" xml:space="preserve">
          <source>Measures the sum of extra bytes allocated beyond the bytes requested, i.e. the &lt;a href=&quot;http://goo.gl/YoKffF&quot;&gt;internal fragmentation&lt;/a&gt;. This is the current effective number of slack bytes, and it goes up and down with time.</source>
          <target state="translated">요청 된 바이트를 초과하여 할당 된 여분의 바이트, 즉 &lt;a href=&quot;http://goo.gl/YoKffF&quot;&gt;내부 조각화&lt;/a&gt; 의 합계를 측정합니다 . 이것은 현재 유효 슬랙 바이트 수이며 시간이 지남에 따라 증가 및 감소합니다.</target>
        </trans-unit>
        <trans-unit id="3428bf3e3bb069070bf76af2715fdc04ab1cc564" translate="yes" xml:space="preserve">
          <source>Meetei Mayek</source>
          <target state="translated">Meetei Mayek</target>
        </trans-unit>
        <trans-unit id="c29a4366fb08674ddc833d9c2d648bc22d81049a" translate="yes" xml:space="preserve">
          <source>Meetei Mayek Extensions</source>
          <target state="translated">Meetei Mayek 확장</target>
        </trans-unit>
        <trans-unit id="a66ec7d3e2375014d1ffe12adf1704c1f323a128" translate="yes" xml:space="preserve">
          <source>Meetei_Mayek</source>
          <target state="translated">Meetei_Mayek</target>
        </trans-unit>
        <trans-unit id="13754495aca84346deb594b0d23bc4d086989ee4" translate="yes" xml:space="preserve">
          <source>Member Functions</source>
          <target state="translated">멤버 함수</target>
        </trans-unit>
        <trans-unit id="019a4c7b4ab7db0b7225cbe8eaee02aa570d3b44" translate="yes" xml:space="preserve">
          <source>Member fields of a synchronized class cannot be public:</source>
          <target state="translated">동기화 된 클래스의 멤버 필드는 공용 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d04f0e51c5452147e13f2fc623076db7f9982260" translate="yes" xml:space="preserve">
          <source>Member functions declared as abstract can still have function bodies. This is so that even though they must be overridden, they can still provide &amp;lsquo;base class functionality&amp;rsquo;, e.g. through &lt;code&gt;super.foo()&lt;/code&gt; in a derived class. Note that the class is still abstract and cannot be instantiated directly.</source>
          <target state="translated">abstract로 선언 된 멤버 함수에는 여전히 함수 본문이있을 수 있습니다. 따라서 재정의해야하지만 파생 클래스의 &lt;code&gt;super.foo()&lt;/code&gt; 을 통해 '기본 클래스 기능'을 계속 제공 할 수 있습니다 . 클래스는 여전히 추상적이며 직접 인스턴스화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="94bc1832afe1d646c790e7dacf415889c81edee1" translate="yes" xml:space="preserve">
          <source>Member functions of non-synchronized classes can be individually marked as synchronized.</source>
          <target state="translated">동기화되지 않은 클래스의 멤버 함수는 개별적으로 동기화 된 것으로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a4bd789ee2475a604bf6ff4993b3e6cecd51772" translate="yes" xml:space="preserve">
          <source>Member functions which are &lt;code&gt;private&lt;/code&gt; or &lt;code&gt;package&lt;/code&gt; are never virtual, and hence cannot be overridden.</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; 또는 &lt;code&gt;package&lt;/code&gt; 멤버 함수 는 결코 가상적이지 않으므로 재정의 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="730bfd462ce7ea2565aafe9ffe8c9ce0ab84dc5f" translate="yes" xml:space="preserve">
          <source>Member functions with the Objective-C linkage has an additional hidden, anonymous, parameter which is the selector the function was called with.</source>
          <target state="translated">Objective-C 연계가있는 멤버 함수에는 함수가 호출 된 선택기 인 추가 숨겨진 익명 매개 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b4cee7f1b1fb6a636414a18e51281d77ef7373e" translate="yes" xml:space="preserve">
          <source>Member functions, constructors, destructors, operating overloading, etc.</source>
          <target state="translated">멤버 함수, 생성자, 소멸자, 운영 과부하 등</target>
        </trans-unit>
        <trans-unit id="75c82559a505947763aebe88eed8911e94db5f71" translate="yes" xml:space="preserve">
          <source>Member names not found in a class or struct can be forwarded to a template function named &lt;code&gt;opDispatch&lt;/code&gt; for resolution.</source>
          <target state="translated">클래스 나 구조체에없는 멤버 이름 은 해결을 위해 &lt;code&gt;opDispatch&lt;/code&gt; 라는 템플릿 함수로 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="380b024ed26a6ddc44f49ea617bc4dc47f59b8b6" translate="yes" xml:space="preserve">
          <source>Member template functions cannot be virtual and hence cannot be overridden.</source>
          <target state="translated">멤버 템플릿 기능은 가상 일 수 없으므로 재정의 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1cb449c1126609b4b41e1d87f65f0d7cd19b49b9" translate="yes" xml:space="preserve">
          <source>Members</source>
          <target state="translated">Members</target>
        </trans-unit>
        <trans-unit id="d8ffb4f7a80ae39a133b7a5a35dbf287204e2686" translate="yes" xml:space="preserve">
          <source>Members of a base class can be accessed by prepending the name of the base class followed by a dot:</source>
          <target state="translated">기본 클래스 이름 앞에 점을 붙여 기본 클래스의 멤버에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38b88ba291aedc801f0cf1ace141ae388b9947cc" translate="yes" xml:space="preserve">
          <source>Memory Allocation</source>
          <target state="translated">메모리 할당</target>
        </trans-unit>
        <trans-unit id="57b0394c856fac60e784f92bcfff68951cf81266" translate="yes" xml:space="preserve">
          <source>Memory Allocation Routines</source>
          <target state="translated">메모리 할당 루틴</target>
        </trans-unit>
        <trans-unit id="3a30329db6460c4ed15bebe4d427af9052e6678f" translate="yes" xml:space="preserve">
          <source>Memory Allocation Subsystem</source>
          <target state="translated">메모리 할당 서브 시스템</target>
        </trans-unit>
        <trans-unit id="f5bd12480983914d8406751d31133ba86381302d" translate="yes" xml:space="preserve">
          <source>Memory Allocator Statistics</source>
          <target state="translated">메모리 할당 자 통계</target>
        </trans-unit>
        <trans-unit id="e0efdce50032a40b3a3914e5fc8bfa6cd4288bb5" translate="yes" xml:space="preserve">
          <source>Memory Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de1129facae4051e8fdee7abb0f38e9a1213e56" translate="yes" xml:space="preserve">
          <source>Memory Safety</source>
          <target state="translated">메모리 안전</target>
        </trans-unit>
        <trans-unit id="b61b70edbe3a97caa2ecb5ac100b7aca209a1cba" translate="yes" xml:space="preserve">
          <source>Memory allocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdbc7f2417ef638487194e74177e17fd205af0b" translate="yes" xml:space="preserve">
          <source>Memory allocation function</source>
          <target state="translated">메모리 할당 기능</target>
        </trans-unit>
        <trans-unit id="ac799873aaaeaed7f28a8dcd45e4b44ea97f1ebf" translate="yes" xml:space="preserve">
          <source>Memory safety does not imply that code is portable, uses only sound programming practices, is free of byte order dependencies, or other bugs. It is focussed only on eliminating memory corruption possibilities.</source>
          <target state="translated">메모리 안전은 코드가 이식 가능하다는 것을 의미하지 않으며, 사운드 프로그래밍 방식 만 사용하고 바이트 순서 종속성이나 기타 버그가 없습니다. 메모리 손상 가능성을 제거하는 데에만 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="8745e9a708aba0d2943782621706fd0939c4d32e" translate="yes" xml:space="preserve">
          <source>Memory safety protections</source>
          <target state="translated">메모리 안전 보호</target>
        </trans-unit>
        <trans-unit id="e7c6afbb979807b3801d17fed1c71c2877b27c2e" translate="yes" xml:space="preserve">
          <source>Memory usage is 8 bytes per each contiguous interval in a set. The value semantics are achieved by using the &lt;a href=&quot;http://en.wikipedia.org/wiki/Copy-on-write&quot;&gt;COW&lt;/a&gt; technique and thus it's not safe to cast this type to shared.</source>
          <target state="translated">메모리 사용량은 한 세트의 각 연속 간격 당 8 바이트입니다. 값 의미론은 &lt;a href=&quot;http://en.wikipedia.org/wiki/Copy-on-write&quot;&gt;COW&lt;/a&gt; 기술 을 사용하여 달성 되므로이 유형을 공유로 캐스트하는 것은 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4b41ea4fb6a604fb88f6b0c86c204fa450c81da1" translate="yes" xml:space="preserve">
          <source>Memory-Safe-D-Spec</source>
          <target state="translated">Memory-Safe-D-Spec</target>
        </trans-unit>
        <trans-unit id="c247f5fb6586475135ee70daab74580914c6fb6b" translate="yes" xml:space="preserve">
          <source>Memory-safe code &lt;a href=&quot;function#function-safety&quot;&gt;cannot use certain language features&lt;/a&gt;, such as:</source>
          <target state="translated">메모리 안전 코드 &lt;a href=&quot;function#function-safety&quot;&gt;는&lt;/a&gt; 다음과 같은 특정 언어 기능을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="473d96fd623e27fc2d73e66bac82fb8aa418af0a" translate="yes" xml:space="preserve">
          <source>Merge &lt;code&gt;b&lt;/code&gt; flow analysis results into &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; 흐름 분석 결과를 &lt;code&gt;a&lt;/code&gt; 로 병합 합니다 .</target>
        </trans-unit>
        <trans-unit id="96ca7f2df1a2bb46a631ddf55db0107e8a0f6dcf" translate="yes" xml:space="preserve">
          <source>Merge function attributes pure, nothrow, @safe, @nogc, and @disable from f into s1.</source>
          <target state="translated">f에서 s1로 pure, nothrow, @safe, @nogc 및 @disable 함수 속성 병합</target>
        </trans-unit>
        <trans-unit id="18b4df384210c098ee9c1e6e0d3d8ee231c3a119" translate="yes" xml:space="preserve">
          <source>Merge into this function the 'in' contracts of all it overrides. 'in's are OR'd together, i.e. only one of them needs to pass.</source>
          <target state="translated">이 함수로 오버라이드 된 모든 'in'계약을 병합하십시오. '에'는 함께 OR입니다. 즉, 그들 중 하나만 통과하면됩니다.</target>
        </trans-unit>
        <trans-unit id="e39e3795a7731eaa4793023cc894fafa2b4ab3fe" translate="yes" xml:space="preserve">
          <source>Merge into this function the 'out' contracts of all it overrides. 'out's are AND'd together, i.e. all of them need to pass.</source>
          <target state="translated">이 기능을 '오버'계약보다 우선합니다. 'out 's는 AND이며, 즉 모두 통과해야합니다.</target>
        </trans-unit>
        <trans-unit id="02db82771755ecdf0b22312c3b847d054cdfe1f4" translate="yes" xml:space="preserve">
          <source>Merge mod bits to form common mod.</source>
          <target state="translated">모드 비트를 병합하여 공통 모드를 형성하십시오.</target>
        </trans-unit>
        <trans-unit id="c109861e51d1c86a02e432754a712c3fe0fa9fd9" translate="yes" xml:space="preserve">
          <source>Merge multiple sorted ranges &lt;code&gt;rs&lt;/code&gt; with less-than predicate function &lt;code&gt;pred&lt;/code&gt; into one single sorted output range containing the sorted union of the elements of inputs. Duplicates are not eliminated, meaning that the total number of elements in the output is the sum of all elements in the ranges passed to it; the &lt;code&gt;length&lt;/code&gt; member is offered if all inputs also have &lt;code&gt;length&lt;/code&gt;. The element types of all the inputs must have a common type &lt;code&gt;CommonType&lt;/code&gt;.</source>
          <target state="translated">병합은 여러 범위의 정렬 &lt;code&gt;rs&lt;/code&gt; 보다 작음 술어 기능 &lt;code&gt;pred&lt;/code&gt; 입력 요소들의 정렬 된 조합을 포함하는 하나 개의 정렬 된 출력 범위로. 중복이 제거되지 않습니다. 즉, 출력의 총 요소 수는 전달 된 범위에있는 모든 요소의 합입니다. &lt;code&gt;length&lt;/code&gt; 모든 입력도있는 경우 회원이 제공됩니다 &lt;code&gt;length&lt;/code&gt; . 모든 입력의 요소 유형에는 공통 유형 &lt;code&gt;CommonType&lt;/code&gt; 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="0e1d499c82c414943f5481100c85ef8982e1adc8" translate="yes" xml:space="preserve">
          <source>Merge!(less, Rs) &lt;strong id=&quot;merge&quot;&gt;merge&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, Rs...)(Rs rs)</source>
          <target state="translated">병합! (보다 적음, Rs) &lt;strong id=&quot;merge&quot;&gt;병합&lt;/strong&gt; (별칭 = &quot;a &amp;lt;b&quot;, Rs ...) (Rs rs)</target>
        </trans-unit>
        <trans-unit id="ecd689f30483b3176616a4f345aa11ac1af0123e" translate="yes" xml:space="preserve">
          <source>Merges a range of sorted ranges.</source>
          <target state="translated">정렬 된 범위의 범위를 병합합니다.</target>
        </trans-unit>
        <trans-unit id="3ee86161e1a8c504c0b3ad79f0b486e252c299a5" translate="yes" xml:space="preserve">
          <source>Merges multiple sets. The input sets are passed as a range of ranges and each is assumed to be sorted by &lt;code&gt;less&lt;/code&gt;. Computation is done lazily, one union element at a time. The complexity of one &lt;code&gt;popFront&lt;/code&gt; operation is &amp;Omicron;(&lt;code&gt;log(ror.length)&lt;/code&gt;). However, the length of &lt;code&gt;ror&lt;/code&gt; decreases as ranges in it are exhausted, so the complexity of a full pass through &lt;code&gt;MultiwayMerge&lt;/code&gt; is dependent on the distribution of the lengths of ranges contained within &lt;code&gt;ror&lt;/code&gt;. If all ranges have the same length &lt;code&gt;n&lt;/code&gt; (worst case scenario), the complexity of a full pass through &lt;code&gt;MultiwayMerge&lt;/code&gt; is &amp;Omicron;(&lt;code&gt;n * ror.length * log(ror.length)&lt;/code&gt;), i.e., &lt;code&gt;log(ror.length)&lt;/code&gt; times worse than just spanning all ranges in turn. The output comes sorted (unstably) by &lt;code&gt;less&lt;/code&gt;.</source>
          <target state="translated">여러 세트를 병합합니다. 입력 집합은 범위의 범위로 전달되며 각각은 &lt;code&gt;less&lt;/code&gt; 정렬 된 것으로 가정됩니다 . 계산은 한 번에 하나의 공용체 요소로 느리게 수행됩니다. 하나의 &lt;code&gt;popFront&lt;/code&gt; 연산 의 복잡도 는 &amp;Omicron; ( &lt;code&gt;log(ror.length)&lt;/code&gt; )입니다. 그러나 범위가 소진되면 &lt;code&gt;ror&lt;/code&gt; 의 길이가 감소하므로 &lt;code&gt;MultiwayMerge&lt;/code&gt; 를 통한 전체 패스의 복잡성은 &lt;code&gt;ror&lt;/code&gt; 에 포함 된 범위의 길이 분포에 따라 달라집니다 . 모든 범위가 같은 길이있는 경우 &lt;code&gt;n&lt;/code&gt; (최악의 경우)을 통해 전체 과정의 복잡성 &lt;code&gt;MultiwayMerge&lt;/code&gt; 이 &amp;Omicron;이다 ( &lt;code&gt;n * ror.length * log(ror.length)&lt;/code&gt; ), 즉, &lt;code&gt;log(ror.length)&lt;/code&gt; 모든 범위를 차례로 확장하는 것보다 log (ror.length) 시간이 더 나쁩니다. 출력은 &lt;code&gt;less&lt;/code&gt; 로 (안정적으로) 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="c45302b65966374aac57034c7b9f57e0b5ffd393" translate="yes" xml:space="preserve">
          <source>Meroitic Cursive</source>
          <target state="translated">Meroitic 필기체</target>
        </trans-unit>
        <trans-unit id="0dfb86cb098d5f5d08325cb7f5549fffa8c54aa5" translate="yes" xml:space="preserve">
          <source>Meroitic Hieroglyphs</source>
          <target state="translated">Meroitic 상형 문자</target>
        </trans-unit>
        <trans-unit id="fad43e700acf724fbc03a57e905d1e33999d5a95" translate="yes" xml:space="preserve">
          <source>Meroitic_Cursive</source>
          <target state="translated">Meroitic_Cursive</target>
        </trans-unit>
        <trans-unit id="16256e81ed15ae584494444b4607752969d09a87" translate="yes" xml:space="preserve">
          <source>Meroitic_Hieroglyphs</source>
          <target state="translated">Meroitic_Hieroglyphs</target>
        </trans-unit>
        <trans-unit id="441df2997a0bdfabc9155cb3f1b9eb0bfcd1b8d7" translate="yes" xml:space="preserve">
          <source>Mersenne Twister Engines</source>
          <target state="translated">메르 센 트위스터 엔진</target>
        </trans-unit>
        <trans-unit id="e35d33912d5bd7fc92d12ad758d85ef83755b678" translate="yes" xml:space="preserve">
          <source>Message describing the error.</source>
          <target state="translated">오류를 설명하는 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="e5f4b8e2eaa86c20a211c5730b176738e052b5df" translate="yes" xml:space="preserve">
          <source>Message logging is a common approach to expose runtime information of a program. Logging should be easy, but also flexible and powerful, therefore &lt;code&gt;D&lt;/code&gt; provides a standard interface for logging.  The easiest way to create a log message is to write:</source>
          <target state="translated">메시지 로깅은 프로그램의 런타임 정보를 노출하는 일반적인 방법입니다. 로깅은 쉽고 유연하고 강력해야하므로 &lt;code&gt;D&lt;/code&gt; 는 로깅을위한 표준 인터페이스를 제공합니다. 로그 메시지를 작성하는 가장 쉬운 방법은 다음과 같이 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1a14b3e6b388251b68ea9615ecf15beddb585962" translate="yes" xml:space="preserve">
          <source>Messages are logged if the &lt;code&gt;LogLevel&lt;/code&gt; of the log message is greater than or equal to the &lt;code&gt;LogLevel&lt;/code&gt; of the used &lt;code&gt;Logger&lt;/code&gt; and additionally if the &lt;code&gt;LogLevel&lt;/code&gt; of the log message is greater than or equal to the global &lt;code&gt;LogLevel&lt;/code&gt;. If a condition is passed into the log call, this condition must be true.  The global &lt;code&gt;LogLevel&lt;/code&gt; is accessible by using &lt;code&gt;globalLogLevel&lt;/code&gt;. To assign a &lt;code&gt;LogLevel&lt;/code&gt; of a &lt;code&gt;Logger&lt;/code&gt; use the &lt;code&gt;logLevel&lt;/code&gt; property of the logger.</source>
          <target state="translated">경우 생성 메시지가 기록된다 &lt;code&gt;LogLevel&lt;/code&gt; 에 로그 메시지가 또는는 동일한보다 큰 &lt;code&gt;LogLevel&lt;/code&gt; 에 사용한의 &lt;code&gt;Logger&lt;/code&gt; 및 부가 경우 &lt;code&gt;LogLevel&lt;/code&gt; 에 로그 메시지가 글로벌 같거나보다 큰 &lt;code&gt;LogLevel&lt;/code&gt; 에 . 조건이 로그 호출로 전달되면이 조건은 true 여야합니다. &lt;code&gt;globalLogLevel&lt;/code&gt; 을 사용하여 글로벌 &lt;code&gt;LogLevel&lt;/code&gt; 에 액세스 할 수 있습니다 . 지정하려면 &lt;code&gt;LogLevel&lt;/code&gt; 에 의 &lt;code&gt;Logger&lt;/code&gt; 사용 &lt;code&gt;logLevel&lt;/code&gt; 로거의 특성을.</target>
        </trans-unit>
        <trans-unit id="674200f0791d0391b26e7ab0cb61f591c00e9006" translate="yes" xml:space="preserve">
          <source>Messages that inform about critical errors should be logged with this level.</source>
          <target state="translated">중대한 오류를 알리는 메시지는이 수준으로 기록해야합니다.</target>
        </trans-unit>
        <trans-unit id="3b1389e0e832a05337d6ccb31e50ea1425ca91a8" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">방법 이름</target>
        </trans-unit>
        <trans-unit id="5432728a99110699123ab292c79d8929b4a93cff" translate="yes" xml:space="preserve">
          <source>Method name to call.</source>
          <target state="translated">호출 할 메소드 이름.</target>
        </trans-unit>
        <trans-unit id="c33db9381eac351f01f1ebcace4d045842265eb0" translate="yes" xml:space="preserve">
          <source>Methods of a final class are &lt;code&gt;final&lt;/code&gt; by default.</source>
          <target state="translated">final 클래스의 메소드는 기본적으로 &lt;code&gt;final&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="536a2a35026e0b6a919478b3ed257a839d2e1750" translate="yes" xml:space="preserve">
          <source>Methods returning &lt;code&gt;Ternary&lt;/code&gt; return &lt;code&gt;Ternary.yes&lt;/code&gt; upon success, &lt;code&gt;Ternary.no&lt;/code&gt; upon failure, and &lt;code&gt;Ternary.unknown&lt;/code&gt; if the primitive is not implemented by the allocator instance.</source>
          <target state="translated">반환 방법 &lt;code&gt;Ternary&lt;/code&gt; 반환 &lt;code&gt;Ternary.yes&lt;/code&gt; 성공에 따라, &lt;code&gt;Ternary.no&lt;/code&gt; 을 실패시와 &lt;code&gt;Ternary.unknown&lt;/code&gt; 은 원시적 인 경우 할당 인스턴스에 의해 구현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cc7e0e02c16756d9acee15cd9d7a7473daeb068d" translate="yes" xml:space="preserve">
          <source>Miao</source>
          <target state="translated">Miao</target>
        </trans-unit>
        <trans-unit id="4014a3a1206afc2fb8f2e5f9f2071d7a3abf5198" translate="yes" xml:space="preserve">
          <source>Microsoft 32 bit Windows systems</source>
          <target state="translated">Microsoft 32 비트 Windows 시스템</target>
        </trans-unit>
        <trans-unit id="b6f7d07f6d0d4d6ca14a809acf6053a583de57a5" translate="yes" xml:space="preserve">
          <source>Microsoft 32-bit Windows systems</source>
          <target state="translated">Microsoft 32 비트 Windows 시스템</target>
        </trans-unit>
        <trans-unit id="0a7f8a6a3c059af73acb9cd574b05b2a9543c4ad" translate="yes" xml:space="preserve">
          <source>Microsoft 64 bit Windows systems</source>
          <target state="translated">Microsoft 64 비트 Windows 시스템</target>
        </trans-unit>
        <trans-unit id="ac72b2ac11f991f699272cc1db01bb25e6d51711" translate="yes" xml:space="preserve">
          <source>Microsoft 64-bit Windows systems</source>
          <target state="translated">Microsoft 64 비트 Windows 시스템</target>
        </trans-unit>
        <trans-unit id="ed82c6f8a58bc49b4d9060c4f66fdffc94ae06da" translate="yes" xml:space="preserve">
          <source>Microsoft C runtime</source>
          <target state="translated">Microsoft C 런타임</target>
        </trans-unit>
        <trans-unit id="ebd6d05a731e12a86c8b4e80bc60f72f287734f6" translate="yes" xml:space="preserve">
          <source>Microsoft COFF object file format</source>
          <target state="translated">Microsoft COFF 오브젝트 파일 형식</target>
        </trans-unit>
        <trans-unit id="c16c96e5cb2017286d8a64c25450e71226f0000b" translate="yes" xml:space="preserve">
          <source>Microsoft Corporation backward compatibility</source>
          <target state="translated">Microsoft Corporation 이전 버전과의 호환성</target>
        </trans-unit>
        <trans-unit id="9bde9e716692327663fd157039cda187ce1ee7df" translate="yes" xml:space="preserve">
          <source>Microsoft Windows systems</source>
          <target state="translated">Microsoft Windows 시스템</target>
        </trans-unit>
        <trans-unit id="eecec507337963babdc80d1f001447bcfa1ad938" translate="yes" xml:space="preserve">
          <source>Mike Cote, John Micco and &lt;a href=&quot;http://www.digitalmars.com&quot;&gt;Walter Bright&lt;/a&gt;</source>
          <target state="translated">마이크 코트, 존 미코, &lt;a href=&quot;http://www.digitalmars.com&quot;&gt;월터 브라이트&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce0263fbd5d81126a5accf38c2a8cfa720a38f5f" translate="yes" xml:space="preserve">
          <source>Mike Cote, John Micco, &lt;a href=&quot;http://www.digitalmars.com&quot;&gt;Walter Bright&lt;/a&gt;,</source>
          <target state="translated">마이크 코트, 존 미코, &lt;a href=&quot;http://www.digitalmars.com&quot;&gt;월터 브라이트&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="646bada43bacb04d883be0a800cf55c1bff27489" translate="yes" xml:space="preserve">
          <source>MinType!T &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;(T...)(T args)</source>
          <target state="translated">MinType! T &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt; (T ...) (T args)</target>
        </trans-unit>
        <trans-unit id="96619c2744574ba83e062f07794a4bce5e184561" translate="yes" xml:space="preserve">
          <source>Minimum global level this condition needs to pass. Only used if &lt;code&gt;ident&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 조건을 통과해야하는 최소 전역 수준. &lt;code&gt;ident&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 인 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="72ac10aa985b72fc878006245095a438f4afd28d" translate="yes" xml:space="preserve">
          <source>Minimum number of input bytes to process</source>
          <target state="translated">처리 할 최소 입력 바이트 수</target>
        </trans-unit>
        <trans-unit id="23735bdebe5dd753b2eecb3ee5464f912043405c" translate="yes" xml:space="preserve">
          <source>Minimum number of output bytes to process</source>
          <target state="translated">처리 할 최소 출력 바이트 수</target>
        </trans-unit>
        <trans-unit id="7520451067e6f7c0bfa18e9bfe94463900128da6" translate="yes" xml:space="preserve">
          <source>Minimum size eligible for freelisting. Construction with this parameter is defined only if &lt;code&gt;minSize == chooseAtRuntime&lt;/code&gt;. If this condition is met and no &lt;code&gt;min&lt;/code&gt; parameter is present, &lt;code&gt;min&lt;/code&gt; is initialized with &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">프리리스트에 적합한 최소 크기. 이 매개 변수를 사용한 구성은 &lt;code&gt;minSize == chooseAtRuntime&lt;/code&gt; 경우에만 정의됩니다 . 이 조건이 충족되는 경우 어떠한 &lt;code&gt;min&lt;/code&gt; 파라미터가 존재하지 않는, &lt;code&gt;min&lt;/code&gt; 로 초기화 &lt;code&gt;max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fbfeb63cedecc26008c4032bda53482f765205a" translate="yes" xml:space="preserve">
          <source>Minimum width, default &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">최소 너비, 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b86e7a6a020ac76991cd6c26e23328074d134a16" translate="yes" xml:space="preserve">
          <source>Minor HTTP version ie. 0 in HTTP/1.0.</source>
          <target state="translated">작은 HTTP 버전 즉. HTTP / 1.0에서는 0입니다.</target>
        </trans-unit>
        <trans-unit id="ef8cde8759f0faa5c37800217783e19162b32772" translate="yes" xml:space="preserve">
          <source>Minor differences can be handled by constant defined in a system specific import, and then using that constant in an</source>
          <target state="translated">시스템 별 가져 오기에 정의 된 상수에 의해 작은 차이를 처리 한 다음 해당 상수를</target>
        </trans-unit>
        <trans-unit id="276eb814fa83eb8650d994da85c3e0fe04f261ce" translate="yes" xml:space="preserve">
          <source>Minute of the hour [0 - 60).</source>
          <target state="translated">시간 분 [0-60).</target>
        </trans-unit>
        <trans-unit id="6fe63922288d3720f67a6b936f7e7d8469da7b2c" translate="yes" xml:space="preserve">
          <source>Minutes past the current hour.</source>
          <target state="translated">현재 시간을 지난 분.</target>
        </trans-unit>
        <trans-unit id="9eb18cc6cb54a3c25688822c68aea8834585db05" translate="yes" xml:space="preserve">
          <source>Minutes past the hour.</source>
          <target state="translated">시간이 지 났어요</target>
        </trans-unit>
        <trans-unit id="9fcc2a870494a945127b62192effb291451b3f6c" translate="yes" xml:space="preserve">
          <source>Misaligned pointers may be used if the underlying hardware supports them &lt;b&gt;and&lt;/b&gt; the pointer is never used to point into the GC heap.</source>
          <target state="translated">잘못 정렬 된 포인터는 그 기본 하드웨어가 지원하는 경우 사용할 수 있습니다 &lt;b&gt;및&lt;/b&gt; 포인터는 GC 힙에 포인트로 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0a893ece8e469a3ca3d935c49f41d08d04b75ecc" translate="yes" xml:space="preserve">
          <source>Misc</source>
          <target state="translated">Misc</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="541cc60b15fef5f9a0d86353e83aac8f8978605b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Mathematical Symbols-A</source>
          <target state="translated">기타 수학 기호 -A</target>
        </trans-unit>
        <trans-unit id="11779b66b9fb2d0a37251ee4317a6797b1ced04b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Mathematical Symbols-B</source>
          <target state="translated">기타 수학 기호 -B</target>
        </trans-unit>
        <trans-unit id="a5ae444d30ca53b5d78b290b90087547ee9d3bad" translate="yes" xml:space="preserve">
          <source>Miscellaneous Symbols</source>
          <target state="translated">기타 기호</target>
        </trans-unit>
        <trans-unit id="d40df653d33c1970b2f4ff4a287cf2530bc9a141" translate="yes" xml:space="preserve">
          <source>Miscellaneous Symbols And Pictographs</source>
          <target state="translated">기타 기호 및 상형</target>
        </trans-unit>
        <trans-unit id="cc7c226cc2dbc1d256d3a82995b8efaa4183a299" translate="yes" xml:space="preserve">
          <source>Miscellaneous Symbols and Arrows</source>
          <target state="translated">기타 기호 및 화살표</target>
        </trans-unit>
        <trans-unit id="b4173dcb7119b89bcf0b405aae468ee1b3ada77b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Technical</source>
          <target state="translated">기타 기술</target>
        </trans-unit>
        <trans-unit id="91b6cb48d150ba0933d7fc6f4df7440a745c169f" translate="yes" xml:space="preserve">
          <source>Mismatched arguments and formats result in a &lt;code&gt; FormatException&lt;/code&gt; being thrown.</source>
          <target state="translated">일치하지 않는 인수 및 형식으로 인해 &lt;code&gt; FormatException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9f4313428de55c91dd490c268154ae445becae4a" translate="yes" xml:space="preserve">
          <source>Mixin Declaration</source>
          <target state="translated">믹스 인 선언</target>
        </trans-unit>
        <trans-unit id="970c2320d1bfe8e77dd4e7dd5bb34d2e4ac013f5" translate="yes" xml:space="preserve">
          <source>Mixin Expressions</source>
          <target state="translated">믹스 인 표현</target>
        </trans-unit>
        <trans-unit id="05c3d721d13b6e356ee3eef96ba0569377ee567e" translate="yes" xml:space="preserve">
          <source>Mixin Scope</source>
          <target state="translated">믹스 인 범위</target>
        </trans-unit>
        <trans-unit id="4ca673828825e6fb0a1c7aa7b3baac8a4415fa74" translate="yes" xml:space="preserve">
          <source>Mixin Statement</source>
          <target state="translated">믹스 인 진술</target>
        </trans-unit>
        <trans-unit id="a55840005f5cf42b3920857662d4a3179c53e14d" translate="yes" xml:space="preserve">
          <source>Mixin declarations, like: mixin(&quot;int x&quot;); &lt;a href=&quot;https://dlang.org/spec/module.html#mixin-declaration&quot;&gt;https://dlang.org/spec/module.html#mixin-declaration&lt;/a&gt;</source>
          <target state="translated">다음과 같은 믹스 인 선언 : mixin ( &quot;int x&quot;); &lt;a href=&quot;https://dlang.org/spec/module.html#mixin-declaration&quot;&gt;https://dlang.org/spec/module.html#mixin-declaration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1246e35b912ba38445c7ecaa8bf8ad7a769360a5" translate="yes" xml:space="preserve">
          <source>Mixin to create a signal within a class object.</source>
          <target state="translated">믹스하여 클래스 객체 내에 신호를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="47620c2433a5ab559d0c8a5a645ecf0ac1a65079" translate="yes" xml:space="preserve">
          <source>MixinTemplateName</source>
          <target state="translated">MixinTemplateName</target>
        </trans-unit>
        <trans-unit id="ef39b028b40565a8271f3d2ef7d30563984e8bc1" translate="yes" xml:space="preserve">
          <source>Mixing memory management strategies (GC + manual memory management) can be tricky, hence removing D's GC from the equation may be worthwhile sometimes.</source>
          <target state="translated">혼합 메모리 관리 전략 (GC + 수동 메모리 관리)은 까다로울 수 있으므로 방정식에서 D의 GC를 제거하는 것이 때때로 가치가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="602c1de155aef24628d7038834874c6fffc0b6fa" translate="yes" xml:space="preserve">
          <source>Mixing struct constructors and &lt;code&gt;static opCall&lt;/code&gt; is not allowed.</source>
          <target state="translated">구조체 생성자와 &lt;code&gt;static opCall&lt;/code&gt; 혼합하는 것은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4103da3e3d11e8682ca7214516c5066dddbce1b" translate="yes" xml:space="preserve">
          <source>Mixins are evaluated in the scope of where they appear, not the scope of the template declaration:</source>
          <target state="translated">믹스 인은 템플릿 선언의 범위가 아니라 표시되는 범위에서 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="c2e7f916aaa9cd501280e6c15b4f67cd1691d8dc" translate="yes" xml:space="preserve">
          <source>Mixins can add virtual functions to a class:</source>
          <target state="translated">믹스 인은 클래스에 가상 함수를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f55b2564a92bcf6859a24f6ce115142e96f27a3d" translate="yes" xml:space="preserve">
          <source>Mixins can be parameterized:</source>
          <target state="translated">믹스 인은 파라미터 화 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="0e0cc6d6a4019a943d3fb16059acca448a091f6c" translate="yes" xml:space="preserve">
          <source>Mixins can parameterize symbols using alias parameters:</source>
          <target state="translated">믹스 인은 별칭 파라미터를 사용하여 심볼을 파라미터화할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d3456e398172f180f8497d1149d800d0157031d" translate="yes" xml:space="preserve">
          <source>MmFile objects control the memory mapped file resource.</source>
          <target state="translated">MmFile 객체는 메모리 매핑 된 파일 리소스를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="35175076c72c31fd517a5a9c6d72204f71d15dc7" translate="yes" xml:space="preserve">
          <source>Mn</source>
          <target state="translated">Mn</target>
        </trans-unit>
        <trans-unit id="d92d632ad70c36fb1672c13251c63eac88e413a9" translate="yes" xml:space="preserve">
          <source>Mode &lt;code&gt;mode&lt;/code&gt;</source>
          <target state="translated">모드 &lt;code&gt;mode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88822b475ea7dae25ac66418498e7b0921c4b86a" translate="yes" xml:space="preserve">
          <source>Mode &lt;strong id=&quot;mode&quot;&gt;mode&lt;/strong&gt;();</source>
          <target state="translated">모드 &lt;strong id=&quot;mode&quot;&gt;모드&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5c58c26e6b83749e7dad65a9fe45675deb95b104" translate="yes" xml:space="preserve">
          <source>Mode to use for decoding.</source>
          <target state="translated">디코딩에 사용할 모드입니다.</target>
        </trans-unit>
        <trans-unit id="bf450e500975a036b6274b77d63a23a31754d542" translate="yes" xml:space="preserve">
          <source>Modern Features?</source>
          <target state="translated">현대적인 특징?</target>
        </trans-unit>
        <trans-unit id="4bd2738f029c8a83162857e80150020a1b8efa00" translate="yes" xml:space="preserve">
          <source>Modifiable &lt;strong id=&quot;checkModifiable&quot;&gt;checkModifiable&lt;/strong&gt;(Scope* sc, int flag = 0);</source>
          <target state="translated">수정 가능한 &lt;strong id=&quot;checkModifiable&quot;&gt;checkModifiable&lt;/strong&gt; (Scope * sc, int 플래그 = 0);</target>
        </trans-unit>
        <trans-unit id="08b349ac1c097b91fcbd83115613e840381fbc40" translate="yes" xml:space="preserve">
          <source>Modifiable.yes or Modifiable.initialization</source>
          <target state="translated">Modifiable.yes 또는 Modifiable.initialization</target>
        </trans-unit>
        <trans-unit id="e1a38da29f4d24e5a1f0e3b0d0a11f0ec65a4ef0" translate="yes" xml:space="preserve">
          <source>Modification of pointer values.</source>
          <target state="translated">포인터 값 수정.</target>
        </trans-unit>
        <trans-unit id="f260e757cec75096bc3eefbfb1c4a14720832017" translate="yes" xml:space="preserve">
          <source>Modifier</source>
          <target state="translated">Modifier</target>
        </trans-unit>
        <trans-unit id="c28e47f6044e41ff0471e331bc5947f7ad950346" translate="yes" xml:space="preserve">
          <source>Modifier Tone Letters</source>
          <target state="translated">수정 자 톤 문자</target>
        </trans-unit>
        <trans-unit id="8346f1ccfc1c83e1327c9516f54835e7836ddef2" translate="yes" xml:space="preserve">
          <source>Modifier_Letter</source>
          <target state="translated">Modifier_Letter</target>
        </trans-unit>
        <trans-unit id="31a38c9c5af3c6a38d76df500b9d21534d32817b" translate="yes" xml:space="preserve">
          <source>Modifier_Symbol</source>
          <target state="translated">Modifier_Symbol</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="9fe408e12dc6ee8d44c87b38b82ff435c397a441" translate="yes" xml:space="preserve">
          <source>Modify</source>
          <target state="translated">Modify</target>
        </trans-unit>
        <trans-unit id="e7532a054e72ed2b2ee923a9b28bf5cd38743380" translate="yes" xml:space="preserve">
          <source>Modify all expression type of return statements to tret.</source>
          <target state="translated">모든 표현식 유형의 리턴 명령문을 tret로 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="6658e9ce5ba737387d02a8c5def43fd4cf55b431" translate="yes" xml:space="preserve">
          <source>Module &lt;code&gt;m&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;m&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="937ba920fb486031428c2fad0ad46f6224397871" translate="yes" xml:space="preserve">
          <source>Module &lt;code&gt;mod&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;mod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53369c001691b815ca3a05eecd1682d09a8470cd" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;entrypoint&quot;&gt;entrypoint&lt;/strong&gt;;</source>
          <target state="translated">모듈 &lt;strong id=&quot;entrypoint&quot;&gt;진입 점&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c8bf8cd6d1bd90507075fdd4361174c0fa37286c" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;importedFrom&quot;&gt;importedFrom&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;importedFrom&quot;&gt;수입&lt;/strong&gt; 모듈 ;</target>
        </trans-unit>
        <trans-unit id="ff53f93875f0242523e6c98ab579d326f23c343e" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;();</source>
          <target state="translated">모듈 &lt;strong id=&quot;parse&quot;&gt;파싱&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="512a40abc1493f140d5c39a8e2d19f624b504462" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;parse&quot;&gt;parse&lt;/strong&gt;(AST)(DiagnosticReporter diagnosticReporter);</source>
          <target state="translated">모듈 &lt;strong id=&quot;parse&quot;&gt;파싱&lt;/strong&gt; (AST) (DiagnosticReporter diagnosticReporter);</target>
        </trans-unit>
        <trans-unit id="c79df9fc0acbd8cd2ea949b87e97fb853b994bf3" translate="yes" xml:space="preserve">
          <source>Module &lt;strong id=&quot;rootHasMain&quot;&gt;rootHasMain&lt;/strong&gt;;</source>
          <target state="translated">모듈 &lt;strong id=&quot;rootHasMain&quot;&gt;rootHasMain&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b60388160a0e83135f7049a2a65562bf3b5b53e0" translate="yes" xml:space="preserve">
          <source>Module Declaration</source>
          <target state="translated">모듈 선언</target>
        </trans-unit>
        <trans-unit id="fd27d97553a2a8a4d766210d868e6015f60e1ae7" translate="yes" xml:space="preserve">
          <source>Module Initialization and Termination</source>
          <target state="translated">모듈 초기화 및 종료</target>
        </trans-unit>
        <trans-unit id="ca4ce7b8e6017ea6f7141a9e94c2ffc705fd320b" translate="yes" xml:space="preserve">
          <source>Module Scope Operator</source>
          <target state="translated">모듈 범위 연산자</target>
        </trans-unit>
        <trans-unit id="6483f83ef8550752d7a2e299c6b850018ec74cd5" translate="yes" xml:space="preserve">
          <source>Module constructor and destructor routines.</source>
          <target state="translated">모듈 생성자와 소멸자 루틴.</target>
        </trans-unit>
        <trans-unit id="2d4c60ff894bd0aa405d27e42fcae8268f876f90" translate="yes" xml:space="preserve">
          <source>Module containing core time functionality, such as &lt;a href=&quot;#Duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; (which represents a duration of time) or &lt;a href=&quot;#MonoTime&quot;&gt;&lt;code&gt;MonoTime&lt;/code&gt;&lt;/a&gt; (which represents a timestamp of the system's monotonic clock).</source>
          <target state="translated">&lt;a href=&quot;#Duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; ( 지속 시간 을 나타냄) 또는 &lt;a href=&quot;#MonoTime&quot;&gt; &lt;code&gt;MonoTime&lt;/code&gt; &lt;/a&gt; (시스템의 단조로운 시계의 시간 소인을 나타냄 ) 과 같은 핵심 시간 기능을 포함하는 모듈 .</target>
        </trans-unit>
        <trans-unit id="0a81435755ae74b4d015fcd51a7cfdac0b3182d8" translate="yes" xml:space="preserve">
          <source>Module containing some basic benchmarking and timing functionality.</source>
          <target state="translated">기본적인 벤치마킹 및 타이밍 기능을 포함하는 모듈.</target>
        </trans-unit>
        <trans-unit id="a0a8a168e341b16dc8158618161a129b9b407119" translate="yes" xml:space="preserve">
          <source>Module in which the D main is</source>
          <target state="translated">D 메인이있는 모듈</target>
        </trans-unit>
        <trans-unit id="58b8208bcfdac835bd589f0a0f394caee9130541" translate="yes" xml:space="preserve">
          <source>Module names</source>
          <target state="translated">모듈 이름</target>
        </trans-unit>
        <trans-unit id="70899daeefb999b373eb42fec0ee19192cad4996" translate="yes" xml:space="preserve">
          <source>Module symbols can be imported.</source>
          <target state="translated">모듈 기호를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2b694f1832151dfbd90f5a6a709070e10c8d5ee" translate="yes" xml:space="preserve">
          <source>Module this node belongs to</source>
          <target state="translated">이 노드가 속한 모듈</target>
        </trans-unit>
        <trans-unit id="fa098333373ac1a458273e0aff013b55525016b7" translate="yes" xml:space="preserve">
          <source>Module unit test handler</source>
          <target state="translated">모듈 유닛 테스트 핸들러</target>
        </trans-unit>
        <trans-unit id="8e4dbc79efde2a2b6f620f3e85fc1dec81fe54f7" translate="yes" xml:space="preserve">
          <source>ModuleDeclaration</source>
          <target state="translated">ModuleDeclaration</target>
        </trans-unit>
        <trans-unit id="1d70436f71331e7691f5e4a6575b7798509f7215" translate="yes" xml:space="preserve">
          <source>ModuleFullyQualifiedName</source>
          <target state="translated">ModuleFullyQualifiedName</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="cb6c75d384ba2ee83daf2876f5a399b7c1f0f1fe" translate="yes" xml:space="preserve">
          <source>Modules &lt;strong id=&quot;createModules&quot;&gt;createModules&lt;/strong&gt;(ref Strings files, ref Strings libmodules);</source>
          <target state="translated">모듈 &lt;strong id=&quot;createModules&quot;&gt;createModules&lt;/strong&gt; (참조 문자열 파일, 참조 문자열 libmodules);</target>
        </trans-unit>
        <trans-unit id="3da6e793084964d8a57e69c238db9dd58256809c" translate="yes" xml:space="preserve">
          <source>Modules are always compiled at global scope, and are unaffected by surrounding attributes or other modifiers.</source>
          <target state="translated">모듈은 항상 전역 범위에서 컴파일되며 주변 속성 또는 기타 수정 자의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ee05c4b1bd6be476eb53ca950de0eb4c248b18b7" translate="yes" xml:space="preserve">
          <source>Modules automatically provide a namespace scope for their contents. Modules superficially resemble classes, but differ in that:</source>
          <target state="translated">모듈은 내용에 대한 네임 스페이스 범위를 자동으로 제공합니다. 모듈은 표면적으로 클래스와 비슷하지만 다음과는 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b416e3eb463a331e85667194c836c015f4d354e1" translate="yes" xml:space="preserve">
          <source>Modules can be grouped together in hierarchies called</source>
          <target state="translated">모듈을 계층 구조로 그룹화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e78263eed2a0541f7c20a04b773beb7d10b627d" translate="yes" xml:space="preserve">
          <source>Modules do not inherit, they have no super modules, etc.</source>
          <target state="translated">모듈은 상속받지 않으며 수퍼 모듈 등이 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe99ae5c5906ceceb6d714060f49ed25dbefbd27" translate="yes" xml:space="preserve">
          <source>Modules have a one-to-one correspondence with source files. The module name is, by default, the file name with the path and extension stripped off, and can be set explicitly with the module declaration.</source>
          <target state="translated">모듈은 소스 파일과 일대일로 대응됩니다. 기본적으로 모듈 이름은 경로와 확장명이 제거 된 파일 이름이며 모듈 선언으로 명시 적으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="077b9b7259692d5a93f09beb6ff63b63184c5793" translate="yes" xml:space="preserve">
          <source>Modules offer several guarantees:</source>
          <target state="translated">모듈은 몇 가지 보증을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="58a0f28806f53fd75308c3f2a793267cf1428ae8" translate="yes" xml:space="preserve">
          <source>Modulus</source>
          <target state="translated">Modulus</target>
        </trans-unit>
        <trans-unit id="c3bdbab40a4be4ac1b8eb1ccb2dbb2eaf8ed480f" translate="yes" xml:space="preserve">
          <source>Mongolian</source>
          <target state="translated">Mongolian</target>
        </trans-unit>
        <trans-unit id="1c76a58fbf51dcfb4f86986f8351b250a767af1c" translate="yes" xml:space="preserve">
          <source>MonoTimeImpl &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="translated">MonoTimeImpl &lt;strong id=&quot;max&quot;&gt;최대&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="75204b25a4143c50617e7f536fd89fa5538edf26" translate="yes" xml:space="preserve">
          <source>MonoTimeImpl &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;();</source>
          <target state="translated">MonoTimeImpl &lt;strong id=&quot;min&quot;&gt;분&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="fee0ee10984bd3ac7bbdf08b79f3b112f28e5f09" translate="yes" xml:space="preserve">
          <source>MonoTimeImpl &lt;strong id=&quot;zero&quot;&gt;zero&lt;/strong&gt;();</source>
          <target state="translated">MonoTimeImpl &lt;strong id=&quot;zero&quot;&gt;0&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="eede0f12587dd7beec0a1e43ee87fff438df01b9" translate="yes" xml:space="preserve">
          <source>Month &lt;code&gt;month&lt;/code&gt;</source>
          <target state="translated">월 &lt;code&gt;month&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="770498cc7209865e7142aee60b35cd4ef1a665ec" translate="yes" xml:space="preserve">
          <source>Month of a Gregorian Year.</source>
          <target state="translated">그레고리력의 달.</target>
        </trans-unit>
        <trans-unit id="a982879f5e351a31dc81a576cd9f499ed195b9ca" translate="yes" xml:space="preserve">
          <source>Month of the year (January is 1).</source>
          <target state="translated">올해의 달 (1 월은 1)</target>
        </trans-unit>
        <trans-unit id="267248d9e2a350a08fb014509dd997369fd505b0" translate="yes" xml:space="preserve">
          <source>More precisely, an expression of the form &lt;code&gt;arr[&lt;/code&gt;</source>
          <target state="translated">보다 정확하게는 &lt;code&gt;arr[&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51359e07cc3dafc35c2e930e5c6893f3b29a6a3e" translate="yes" xml:space="preserve">
          <source>More than one qualifier may apply to a type. The order of application is irrelevant, for example given an unqualified type &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;const shared T&lt;/code&gt; and &lt;code&gt;shared const T&lt;/code&gt; are the same type. For that reason, this document depicts qualifier combinations without parentheses unless necessary and in alphabetic order.</source>
          <target state="translated">유형에 둘 이상의 규정자가 적용될 수 있습니다. 적용 순서는, 예를 들면 비정규 형 주어진 무관 &lt;code&gt;T&lt;/code&gt; , &lt;code&gt;const shared T&lt;/code&gt; 및 &lt;code&gt;shared const T&lt;/code&gt; 동일한 유형이있다. 따라서이 문서는 필요하지 않고 알파벳 순서로 괄호없이 한정자 조합을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6b91b6e5e4417fbf29a4b247eba962d491f1a192" translate="yes" xml:space="preserve">
          <source>Most Objective-C code is bundled in something called a &quot;Framework&quot;. This is basically a regular directory, with the &lt;code&gt;.framework&lt;/code&gt; extension and a specific directory layout. A framework contains a dynamic library, all public header files and any resources (images, sounds and so on) required by the framework.</source>
          <target state="translated">대부분의 Objective-C 코드는 &quot;프레임 워크&quot;로 묶여 있습니다. 이것은 기본적으로 일반 디렉토리이며 &lt;code&gt;.framework&lt;/code&gt; 확장자와 특정 디렉토리 레이아웃입니다. 프레임 워크에는 동적 라이브러리, 모든 공용 헤더 파일 및 프레임 워크에 필요한 모든 리소스 (이미지, 사운드 등)가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="bfb12bc22804b44b167d93aec3f3c70407b2e35d" translate="yes" xml:space="preserve">
          <source>Most functions do not perform any memory allocations, and if a string is returned, it is usually a slice of an input string. If a function allocates, this is explicitly mentioned in the documentation.</source>
          <target state="translated">대부분의 함수는 메모리 할당을 수행하지 않으며 문자열이 반환되면 일반적으로 입력 문자열의 한 조각입니다. 함수가 할당되면 설명서에 명시 적으로 언급되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="774795e055d4e2dccab7943b620741f1d26bed50" translate="yes" xml:space="preserve">
          <source>Most negative &lt;code&gt;Duration&lt;/code&gt; possible.</source>
          <target state="translated">가능한 가장 부정적인 &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="581c4c1b8a2332d611ce4416497bc282ce6dfdaa" translate="yes" xml:space="preserve">
          <source>Most negative &lt;code&gt;MonoTime&lt;/code&gt; possible.</source>
          <target state="translated">가장 부정적인 &lt;code&gt;MonoTime&lt;/code&gt; 가능.</target>
        </trans-unit>
        <trans-unit id="ddbd3dbc157ec8539b793dbad7b600adfc5f9e59" translate="yes" xml:space="preserve">
          <source>Most negative &lt;code&gt;TickDuration&lt;/code&gt; possible.</source>
          <target state="translated">가장 부정적인 &lt;code&gt;TickDuration&lt;/code&gt; 이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="1009e1ed86d39d0ca096eb1687471230fd67e3f4" translate="yes" xml:space="preserve">
          <source>Most numbers are ordered naturally.</source>
          <target state="translated">대부분의 숫자는 자연스럽게 주문됩니다.</target>
        </trans-unit>
        <trans-unit id="4812af24b14425f80ec6fa5d4117b8b760e8ef9a" translate="yes" xml:space="preserve">
          <source>Most of the logic to implement scoped pointers and scoped references is here.</source>
          <target state="translated">범위가 지정된 포인터 및 범위가 지정된 참조를 구현하는 대부분의 논리가 여기에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c833ba71d68fc55966f6e1456e6db2fd0300c96d" translate="yes" xml:space="preserve">
          <source>Most programs should not use the coarse clock, exactly because it's less precise, and most programs don't need to get the time often enough to care, but for those rare programs that need to get the time extremely frequently (e.g. hundreds of thousands of times a second) but don't care about high precision, the coarse clock might be appropriate.</source>
          <target state="translated">대부분의 프로그램은 정확하지 않기 때문에 대략적인 시계를 사용해서는 안되며, 대부분의 프로그램은 시간을 자주 돌봐야 할 필요는 없지만 시간을 매우 자주 필요로하는 드문 프로그램 (예 : 수십만 초 정도) 그러나 높은 정밀도에 신경 쓰지 않으면 거친 시계가 적합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa1b6e1a33d26c83c47eddc206c5ac1e624e5155" translate="yes" xml:space="preserve">
          <source>Most programs should not use this directly, but it's exposed for those few programs that need it.</source>
          <target state="translated">대부분의 프로그램은 이것을 직접 사용해서는 안되지만, 필요한 몇 가지 프로그램에 노출되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e894652e8d984064189391f996d60397e2a48ec" translate="yes" xml:space="preserve">
          <source>Move a BLOB Handle to a New Row</source>
          <target state="translated">BLOB 핸들을 새 행으로 이동</target>
        </trans-unit>
        <trans-unit id="add02f8fc89679f014286c95aa282291626003eb" translate="yes" xml:space="preserve">
          <source>Moves &lt;code&gt;source&lt;/code&gt; into &lt;code&gt;target&lt;/code&gt;, via a destructive copy when necessary.</source>
          <target state="translated">필요한 경우 파괴적 사본을 통해 &lt;code&gt;source&lt;/code&gt; 를 &lt;code&gt;target&lt;/code&gt; 으로 이동 합니다.</target>
        </trans-unit>
        <trans-unit id="16a236d46c92b4a5ca559f8a89c2b3c577b168e0" translate="yes" xml:space="preserve">
          <source>Moves all elements from one range to another.</source>
          <target state="translated">모든 요소를 ​​한 범위에서 다른 범위로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="8479b9f61cb11354afd2e1600228140ad6b9d6dc" translate="yes" xml:space="preserve">
          <source>Moves as many elements as possible from one range to another.</source>
          <target state="translated">한 범위에서 다른 범위로 가능한 많은 요소를 이동합니다.</target>
        </trans-unit>
        <trans-unit id="960405f6c4b3aa5de72b116119525712115be474" translate="yes" xml:space="preserve">
          <source>Moves element at index &lt;code&gt;i&lt;/code&gt; of &lt;code&gt;r&lt;/code&gt; out and returns it. Leaves &lt;code&gt; r[i]&lt;/code&gt; in a destroyable state that does not allocate any resources (usually equal to its &lt;code&gt;.init&lt;/code&gt; value).</source>
          <target state="translated">인덱스에서 이동 요소 &lt;code&gt;i&lt;/code&gt; 의 &lt;code&gt;r&lt;/code&gt; 밖으로 돌아갑니다 그것. 잎은 &lt;code&gt; r[i]&lt;/code&gt; 어떤 자원을 할당하지 않는 파괴 할 상태 (일반적으로는 동일 &lt;code&gt;.init&lt;/code&gt; 의 값).</target>
        </trans-unit>
        <trans-unit id="78ea6259d5295d73b4c9b122251d954bd3288ccc" translate="yes" xml:space="preserve">
          <source>Moves out the back.</source>
          <target state="translated">뒤로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="e8dbe19673ddfdfe7531306a22cbece7e08fa915" translate="yes" xml:space="preserve">
          <source>Moves out the front.</source>
          <target state="translated">앞쪽으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="21464138e9b7b84f1e21b5677eb4772e282fc223" translate="yes" xml:space="preserve">
          <source>Moves the back of &lt;code&gt;r&lt;/code&gt; out and returns it. Leaves &lt;code&gt;r.back&lt;/code&gt; in a destroyable state that does not allocate any resources (usually equal to its &lt;code&gt;.init&lt;/code&gt; value).</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; 의 뒤로 이동하여 리턴합니다. 잎은 &lt;code&gt;r.back&lt;/code&gt; (보통 그와 같은 모든 자원을 할당하지 않는 파괴 할 상태에 &lt;code&gt;.init&lt;/code&gt; 의 값).</target>
        </trans-unit>
        <trans-unit id="89199b203d67cc4472b5a42c11f218296b0fa959" translate="yes" xml:space="preserve">
          <source>Moves the front of &lt;code&gt;r&lt;/code&gt; out and returns it. Leaves &lt;code&gt;r.front&lt;/code&gt; in a destroyable state that does not allocate any resources (usually equal to its &lt;code&gt;.init&lt;/code&gt; value).</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; 의 앞을 이동하여 리턴합니다. 잎은 &lt;code&gt;r.front&lt;/code&gt; (보통 그와 같은 모든 자원을 할당하지 않는 파괴 할 상태에 &lt;code&gt;.init&lt;/code&gt; 의 값).</target>
        </trans-unit>
        <trans-unit id="22eb7096554b6e74868e7d16970a1dc126973c23" translate="yes" xml:space="preserve">
          <source>Much of the D documentation itself is generated this way, including this page. Such documentation is marked at the bottom as being generated by Ddoc.</source>
          <target state="translated">이 페이지를 포함하여 많은 D 문서 자체가 이런 식으로 생성됩니다. 이러한 문서는 하단에 Ddoc에 의해 생성 된 것으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d60ee27cc756708ec2d1a2d75f87ef3c6b16e014" translate="yes" xml:space="preserve">
          <source>Mul Expressions</source>
          <target state="translated">뮬 식</target>
        </trans-unit>
        <trans-unit id="7e13b5b1d94de82bc38c31c61776089164a0d74c" translate="yes" xml:space="preserve">
          <source>Mul expressions for floating point operands are not associative.</source>
          <target state="translated">부동 소수점 피연산자에 대한 뮬 표현식은 연관성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="bf7dc9a1dd03ca0b5671d66051467ce10dce0721" translate="yes" xml:space="preserve">
          <source>Multi-disk zips not supported.</source>
          <target state="translated">다중 디스크 zip은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="098b25f016e7cee3aeb46b0951ffba8ca7a4aba9" translate="yes" xml:space="preserve">
          <source>Multi-line mode, match ^, $ on start and end line separators as well as start and end of input.</source>
          <target state="translated">멀티 라인 모드, 시작 및 끝 라인 구분 기호에서 ^, $, 입력 시작 및 끝과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="7df91ee85cfe006da084d6eec2205103d82b62a7" translate="yes" xml:space="preserve">
          <source>MultiLogger logs to multiple &lt;code&gt;Logger&lt;/code&gt;. The &lt;code&gt;Logger&lt;/code&gt;s are stored in an &lt;code&gt;Logger[]&lt;/code&gt; in their order of insertion.</source>
          <target state="translated">MultiLogger는 여러 &lt;code&gt;Logger&lt;/code&gt; 에 로그합니다 . &lt;code&gt;Logger&lt;/code&gt; (S)가 저장되는 &lt;code&gt;Logger[]&lt;/code&gt; 의 삽입 순서이다.</target>
        </trans-unit>
        <trans-unit id="740922ac20ba9136af0a0a62b3c2c734d9f20fc6" translate="yes" xml:space="preserve">
          <source>Multiple</source>
          <target state="translated">Multiple</target>
        </trans-unit>
        <trans-unit id="29e590b1115ee1a9a48191676c1dd3a4d12cb97a" translate="yes" xml:space="preserve">
          <source>Multiple functions can be passed to &lt;code&gt;map&lt;/code&gt;. In that case, the element type of &lt;code&gt;map&lt;/code&gt; is a tuple containing one element for each function.</source>
          <target state="translated">여러 함수를 &lt;code&gt;map&lt;/code&gt; 에 전달할 수 있습니다 . 이 경우 &lt;code&gt;map&lt;/code&gt; 의 요소 유형은 각 함수마다 하나의 요소를 포함하는 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="abca3b636846e1599131fb30115e7624fb04c581" translate="yes" xml:space="preserve">
          <source>Multiple identifiers in the</source>
          <target state="translated">의 여러 식별자</target>
        </trans-unit>
        <trans-unit id="02d184893da2dc41280aed339b733b86a1d5d7d9" translate="yes" xml:space="preserve">
          <source>Multiple indices can be passed into &lt;code&gt;remove&lt;/code&gt;. In that case, elements at the respective indices are all removed. The indices must be passed in increasing order, otherwise an exception occurs.</source>
          <target state="translated">여러 개의 인덱스를 &lt;code&gt;remove&lt;/code&gt; 에 전달할 수 있습니다 . 이 경우 각 인덱스의 요소가 모두 제거됩니다. 인덱스는 오름차순으로 전달되어야하며, 그렇지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ad9e29f23e6c577c3330b7f72495b39a5263c9d7" translate="yes" xml:space="preserve">
          <source>Multiple instantiations of a</source>
          <target state="translated">여러 인스턴스화</target>
        </trans-unit>
        <trans-unit id="440d1a8a232140baee2e245b3e53c432fe0e99fc" translate="yes" xml:space="preserve">
          <source>Multiple substitutes</source>
          <target state="translated">여러 대용품</target>
        </trans-unit>
        <trans-unit id="d488fe5f5a2700bbcfa9a073ec3ff1f6ecfd5b57" translate="yes" xml:space="preserve">
          <source>Multiplies an integral value and a &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">정수 값과 &lt;code&gt;Duration&lt;/code&gt; 을 곱합니다 .</target>
        </trans-unit>
        <trans-unit id="56a0e7e79948bc24fcfd6b23d109776c18e4bdf1" translate="yes" xml:space="preserve">
          <source>Multiplies or divides the duration by an integer value.</source>
          <target state="translated">기간을 정수 값으로 곱하거나 나눕니다.</target>
        </trans-unit>
        <trans-unit id="0954814fc4bb5f73545aacc2e2398a5d8549c662" translate="yes" xml:space="preserve">
          <source>Multiplies/Divides the duration by an integer value as well as assigning the result to this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">지속 시간을 정수 값으로 나누고 결과를이 &lt;code&gt;Duration&lt;/code&gt; 에 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="b7cc0cb1ca5c98043347b03c80d00881ef4f41c9" translate="yes" xml:space="preserve">
          <source>Multiply two complex floating point numbers, x and y.</source>
          <target state="translated">두 개의 복잡한 부동 소수점 숫자 x와 y를 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="7c62087494680c6ab390a67b385387fc2371ff36" translate="yes" xml:space="preserve">
          <source>Multiply two signed integers, checking for overflow.</source>
          <target state="translated">오버플로를 확인하여 부호있는 정수 두 개를 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="5ace69a7d289fcbc18bab280e6a93de8a21ddc54" translate="yes" xml:space="preserve">
          <source>Multiply two unsigned integers, checking for overflow (aka carry).</source>
          <target state="translated">오버 플로우 (일명 캐리)를 확인하면서 부호없는 정수 두 개를 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="5880acb922eaf637f5fe6ee51c64bbc5576e150e" translate="yes" xml:space="preserve">
          <source>MultiwayMerge!(less, RangeOfRanges) &lt;strong id=&quot;multiwayMerge&quot;&gt;multiwayMerge&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, RangeOfRanges)(RangeOfRanges ror);</source>
          <target state="translated">MultiwayMerge! (덜, RangeOfRanges) &lt;strong id=&quot;multiwayMerge&quot;&gt;multiwayMerge&lt;/strong&gt; (별칭 = &quot;a &amp;lt;b&quot;, RangeOfRanges) (RangeOfRanges ror);</target>
        </trans-unit>
        <trans-unit id="efa03890066c23a8b19ca12948a9e10fceae838f" translate="yes" xml:space="preserve">
          <source>MurmurHash3 comes in three flavors, listed in increasing order of throughput:</source>
          <target state="translated">MurmurHash3는 처리량의 증가 순서에 따라 세 가지 맛으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="4f19edd3144a2656247fe56232af4c5408c8b7ee" translate="yes" xml:space="preserve">
          <source>Musical Symbols</source>
          <target state="translated">뮤지컬 기호</target>
        </trans-unit>
        <trans-unit id="13bcc5c25bae00735d267b69807a37eb90d90472" translate="yes" xml:space="preserve">
          <source>Mutation</source>
          <target state="translated">Mutation</target>
        </trans-unit>
        <trans-unit id="c0b02d18cf57f54fa894db9640ab1fdf261c7702" translate="yes" xml:space="preserve">
          <source>Mutex &lt;code&gt;m&lt;/code&gt;</source>
          <target state="translated">뮤텍스 &lt;code&gt;m&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc7eaf9d7996275cabd58454896268bb0c4057bf" translate="yes" xml:space="preserve">
          <source>Mutex &lt;code&gt;mutex&lt;/code&gt;</source>
          <target state="translated">뮤텍스 &lt;code&gt;mutex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee9066f4d731d8a141c6e684743ee9a9527de8b6" translate="yes" xml:space="preserve">
          <source>Mutex Handle</source>
          <target state="translated">뮤텍스 핸들</target>
        </trans-unit>
        <trans-unit id="9f117864c1709baa2c76d7b2cfa8d17c9f1bfe11" translate="yes" xml:space="preserve">
          <source>Mutex Methods Object</source>
          <target state="translated">뮤텍스 메소드 객체</target>
        </trans-unit>
        <trans-unit id="9ca067080a430d66f997055e5f2d644e22736a96" translate="yes" xml:space="preserve">
          <source>Mutex Verification Routines</source>
          <target state="translated">뮤텍스 검증 루틴</target>
        </trans-unit>
        <trans-unit id="7703eaffd0654744dd25ed0b2c8483a972228de2" translate="yes" xml:space="preserve">
          <source>Mutex for mutually exclusive access.</source>
          <target state="translated">상호 배타적 액세스를위한 뮤텍스.</target>
        </trans-unit>
        <trans-unit id="82f2c9599c5c14be2ce92b9de958cb57db81b38f" translate="yes" xml:space="preserve">
          <source>Mutexes</source>
          <target state="translated">Mutexes</target>
        </trans-unit>
        <trans-unit id="928b7c48a60ad93b81bc3bee9d274c5f2aed9ad3" translate="yes" xml:space="preserve">
          <source>Myanmar</source>
          <target state="translated">Myanmar</target>
        </trans-unit>
        <trans-unit id="355376d91cd047a2d8fdca64b43c804618ed3101" translate="yes" xml:space="preserve">
          <source>Myanmar Extended-A</source>
          <target state="translated">미얀마 확장 -A</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="de9d4243b85d288bbb9d4e29d9b8114613e21d53" translate="yes" xml:space="preserve">
          <source>N-ary predicate that reverses the order of arguments, e.g., given &lt;code&gt;pred(a, b, c)&lt;/code&gt;, returns &lt;code&gt;pred(c, b, a)&lt;/code&gt;.</source>
          <target state="translated">예를 들어 주어진 &lt;code&gt;pred(a, b, c)&lt;/code&gt; 와 같이 인수의 순서를 반대로하는 N-ary 술어 는 &lt;code&gt;pred(c, b, a)&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a9d371451b6909ac85117130b9153a96499a362c" translate="yes" xml:space="preserve">
          <source>NAME</source>
          <target state="translated">NAME</target>
        </trans-unit>
        <trans-unit id="d82a19a46f2f7da0f84cb56740a41e0148eda5c1" translate="yes" xml:space="preserve">
          <source>NAN</source>
          <target state="translated">NAN</target>
        </trans-unit>
        <trans-unit id="e2f31d8d8e29c1c65e1a03cf1b1495f55b89828e" translate="yes" xml:space="preserve">
          <source>NANs of the same sign are ordered by the payload ('negative' ones - in reverse order).</source>
          <target state="translated">동일한 부호의 NAN은 페이로드에 의해 주문됩니다 ( '음수'-반대 순서).</target>
        </trans-unit>
        <trans-unit id="5d468ae642bb247a8e01e4ff6b3d5521a502f435" translate="yes" xml:space="preserve">
          <source>NANs of the same sign are ordered by the payload.</source>
          <target state="translated">페이로드에서 동일한 부호의 NAN을 주문합니다.</target>
        </trans-unit>
        <trans-unit id="3d4b99ee66548ff50c18139181185129923f01ff" translate="yes" xml:space="preserve">
          <source>NCS backward compatibility</source>
          <target state="translated">NCS 이전 버전과의 호환성</target>
        </trans-unit>
        <trans-unit id="f32955bf4c7fd11cc57b3ad4ab0172c20d35e0aa" translate="yes" xml:space="preserve">
          <source>NDP[8] &lt;strong id=&quot;_8087elems&quot;&gt;_8087elems&lt;/strong&gt;;</source>
          <target state="translated">NDP [8] &lt;strong id=&quot;_8087elems&quot;&gt;_8087elems&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dc1bfb052f62695e8afc872dbacb4c070b0c10e5" translate="yes" xml:space="preserve">
          <source>NEWREG</source>
          <target state="translated">NEWREG</target>
        </trans-unit>
        <trans-unit id="8e64e5eebed2a307131d496e00360f4a910e75dc" translate="yes" xml:space="preserve">
          <source>NKo</source>
          <target state="translated">NKo</target>
        </trans-unit>
        <trans-unit id="965befa21e77d9af06a32a773577d2548bb3c644" translate="yes" xml:space="preserve">
          <source>NL line feed, new line</source>
          <target state="translated">NL 줄 바꿈, 줄 바꿈</target>
        </trans-unit>
        <trans-unit id="8ac00a7e70abeeaf254830eb6d9428e78c8d7ef4" translate="yes" xml:space="preserve">
          <source>NN</source>
          <target state="translated">NN</target>
        </trans-unit>
        <trans-unit id="81baa761ece464984c4726ca74944a94c4dca7bc" translate="yes" xml:space="preserve">
          <source>NO LONGER USED</source>
          <target state="translated">더 이상 사용하지 않음</target>
        </trans-unit>
        <trans-unit id="0654a028e5aea48c8fbb09871b8f397a186c883b" translate="yes" xml:space="preserve">
          <source>NONE</source>
          <target state="translated">NONE</target>
        </trans-unit>
        <trans-unit id="556cfa38702a7b11d3a265b69b1a1f579954c6ad" translate="yes" xml:space="preserve">
          <source>NOT USED</source>
          <target state="translated">사용하지 않음</target>
        </trans-unit>
        <trans-unit id="a8ad860c15810cce0e7beac1c91da3ab2cb22c47" translate="yes" xml:space="preserve">
          <source>NOTE</source>
          <target state="translated">NOTE</target>
        </trans-unit>
        <trans-unit id="22f6c302a991a23878dc1d3fd193f165c6d7378d" translate="yes" xml:space="preserve">
          <source>NOTE 2:</source>
          <target state="translated">노트 2:</target>
        </trans-unit>
        <trans-unit id="92dfb30e422cabeb6b909c9930e19e573ebc5371" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;delete&lt;/code&gt; has been deprecated. Instead, please use &lt;a href=&quot;https://dlang.org/phobos/object.html#destroy&quot;&gt;&lt;code&gt;destroy&lt;/code&gt;&lt;/a&gt; if feasible, or &lt;a href=&quot;https://dlang.org/phobos/core_memory.html#__delete&quot;&gt;&lt;code&gt;core.memory.__delete&lt;/code&gt;&lt;/a&gt; as a last resort.</source>
          <target state="translated">참고 : &lt;code&gt;delete&lt;/code&gt; 가 더 이상 사용되지 않습니다. 대신, 가능한 경우 &lt;a href=&quot;https://dlang.org/phobos/object.html#destroy&quot;&gt; &lt;code&gt;destroy&lt;/code&gt; &lt;/a&gt; 를 사용 하거나 , 최후의 수단으로 &lt;a href=&quot;https://dlang.org/phobos/core_memory.html#__delete&quot;&gt; &lt;code&gt;core.memory.__delete&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="41627eab8a13abe6cd0a95719c7b5b2435940124" translate="yes" xml:space="preserve">
          <source>NOTE: Not yet implemented.</source>
          <target state="translated">참고 : 아직 구현되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a142d11fd8e1893f7241ef23da3ac42b73c007c2" translate="yes" xml:space="preserve">
          <source>NP form feed, new page</source>
          <target state="translated">NP 양식 피드, 새 페이지</target>
        </trans-unit>
        <trans-unit id="026eac853e081a2793439a30ef3a00433e26f261" translate="yes" xml:space="preserve">
          <source>NTLM</source>
          <target state="translated">NTLM</target>
        </trans-unit>
        <trans-unit id="b9b6768f79f1577e799b1efce766e4e8e86e2dd4" translate="yes" xml:space="preserve">
          <source>NTLM auth is supported</source>
          <target state="translated">NTLM 인증이 지원됩니다</target>
        </trans-unit>
        <trans-unit id="c9515fcc91e92808d85b39d93f92900ad927ccb8" translate="yes" xml:space="preserve">
          <source>NULL Function Name</source>
          <target state="translated">NULL 함수 이름</target>
        </trans-unit>
        <trans-unit id="fe1cc67b4afd83bc08c13bcd7b64a2b5b268c52b" translate="yes" xml:space="preserve">
          <source>NULL NULL</source>
          <target state="translated">NULL NULL</target>
        </trans-unit>
        <trans-unit id="c87d41aff24ba6f4ec554d24dce699e7d1692a05" translate="yes" xml:space="preserve">
          <source>NULL file not found !=NULL mem.xmalloc'd file name</source>
          <target state="translated">NULL 파일을 찾을 수 없습니다! = NULL mem.xmalloc'd 파일 이름</target>
        </trans-unit>
        <trans-unit id="9eaa2cbecdcbd2183d8b68e5b96e784ce915bf78" translate="yes" xml:space="preserve">
          <source>NaN value</source>
          <target state="translated">NaN 값</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="b86ccc3e7cba86e65ae5df758ab1c57554830621" translate="yes" xml:space="preserve">
          <source>Name Mangling</source>
          <target state="translated">이름 맹 글링</target>
        </trans-unit>
        <trans-unit id="daa5b774be0bfcbd2e2835e6bd0980fb6e06778a" translate="yes" xml:space="preserve">
          <source>Name Of A Host Parameter</source>
          <target state="translated">호스트 매개 변수 이름</target>
        </trans-unit>
        <trans-unit id="cb9e33f6b09bb7fe5d38a783b74c6905b2f43077" translate="yes" xml:space="preserve">
          <source>Name Of The Folder Holding Database Files</source>
          <target state="translated">데이터베이스 파일을 보유한 폴더의 이름</target>
        </trans-unit>
        <trans-unit id="7749c218b18b42cbe27f3f870da40b8d3d708ba1" translate="yes" xml:space="preserve">
          <source>Name Of The Folder Holding Temporary Files</source>
          <target state="translated">임시 파일을 보유한 폴더의 이름</target>
        </trans-unit>
        <trans-unit id="e59df65314daa841d45f5a3e14ba76e2f9e9c8c1" translate="yes" xml:space="preserve">
          <source>Name of file for which the error occurred.</source>
          <target state="translated">오류가 발생한 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d559607a1a6446ab7620756e13a0b5f234bf2473" translate="yes" xml:space="preserve">
          <source>Name of production rule which failed to parse, or specific error message</source>
          <target state="translated">구문 분석하지 못한 프로덕션 규칙 이름 또는 특정 오류 메시지</target>
        </trans-unit>
        <trans-unit id="e31cbabb3f72b2a73875e1063140161450989ac1" translate="yes" xml:space="preserve">
          <source>Name of proxy to use.</source>
          <target state="translated">사용할 프록시 이름.</target>
        </trans-unit>
        <trans-unit id="4743065d5c24dea8c1049fa1ad276414cb966a5e" translate="yes" xml:space="preserve">
          <source>Name of symbol to test that resides in &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 에있는 테스트 할 기호의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="926beea7a204b67e08849a9f0f8baf4eade0c1be" translate="yes" xml:space="preserve">
          <source>Name of this class.</source>
          <target state="translated">이 클래스의 이름</target>
        </trans-unit>
        <trans-unit id="5bd20c9269fc21e28a5ca023c75d67f561fd2907" translate="yes" xml:space="preserve">
          <source>Name string is a URL</source>
          <target state="translated">이름 문자열은 URL입니다</target>
        </trans-unit>
        <trans-unit id="3e9d951df5185dacb50ff8e872d8f60652b3003f" translate="yes" xml:space="preserve">
          <source>Name string is a fully-qualified domain name</source>
          <target state="translated">이름 문자열은 정규화 된 도메인 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0ec414128b6f1f85f67f2bea1a748a95de4410a8" translate="yes" xml:space="preserve">
          <source>Name string is an ISO OID</source>
          <target state="translated">이름 문자열은 ISO OID입니다</target>
        </trans-unit>
        <trans-unit id="f9b19d50c25b3743eb4adeadeaa3e5a0ab484c83" translate="yes" xml:space="preserve">
          <source>Name string is an X.500 DN (in DER or a text output format)</source>
          <target state="translated">이름 문자열은 X.500 DN입니다 (DER 또는 텍스트 출력 형식).</target>
        </trans-unit>
        <trans-unit id="5d41d633c54bc35ed0b102d16a59c09042d7e6f8" translate="yes" xml:space="preserve">
          <source>Name to append to path</source>
          <target state="translated">경로에 추가 할 이름</target>
        </trans-unit>
        <trans-unit id="57e44b2dd9241e59e5da1fe5cf27cc5a6f2a79e1" translate="yes" xml:space="preserve">
          <source>Named Character Entities</source>
          <target state="translated">명명 된 캐릭터 엔티티</target>
        </trans-unit>
        <trans-unit id="61a5eb217e7e482d8acfda053982ce228847a019" translate="yes" xml:space="preserve">
          <source>Named Enum Properties</source>
          <target state="translated">명명 된 열거 형 속성</target>
        </trans-unit>
        <trans-unit id="0f9a079f7fd37c78ad2d46952b2843d67f7e8c61" translate="yes" xml:space="preserve">
          <source>Named Enums</source>
          <target state="translated">명명 된 열거 형</target>
        </trans-unit>
        <trans-unit id="3880787f5865cac8472d36131fe148caae5fca26" translate="yes" xml:space="preserve">
          <source>Named character entity from the HTML5 specification. See &lt;a href=&quot;entity#NamedCharacterEntity&quot;&gt;&lt;i&gt;NamedCharacterEntity&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">HTML5 사양의 명명 된 문자 엔터티 &lt;a href=&quot;entity#NamedCharacterEntity&quot;&gt;&lt;i&gt;NamedCharacterEntity를&lt;/i&gt;&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="67bbc13122b700cc80fcad9791161657d846a9cd" translate="yes" xml:space="preserve">
          <source>Named enum members may not have individual</source>
          <target state="translated">명명 된 열거 형 멤버에는 개인이 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="680bdf9cb66385985bc0370016c9c0b2510bfa40" translate="yes" xml:space="preserve">
          <source>Named enums are used to declare related constants and group them by giving them a unique type. The &lt;a href=&quot;#EnumMembers&quot;&gt;&lt;i&gt;EnumMembers&lt;/i&gt;&lt;/a&gt; are declared in the scope of the named enum. The named enum declares a new type, and all the</source>
          <target state="translated">명명 된 열거 형은 관련 상수를 선언하고 고유 한 유형을 부여하여 그룹화하는 데 사용됩니다. &lt;a href=&quot;#EnumMembers&quot;&gt;&lt;i&gt;EnumMembers은&lt;/i&gt;&lt;/a&gt; 명명 된 열거 형의 범위에 선언되어있다. 명명 된 열거 형은 새로운 유형을 선언하며</target>
        </trans-unit>
        <trans-unit id="80e6a3723926ccc64d8cb3caf791cfc7436d9eeb" translate="yes" xml:space="preserve">
          <source>Named sections follow the</source>
          <target state="translated">명명 된 섹션은</target>
        </trans-unit>
        <trans-unit id="7572bcf7df65774ff78b8059cf1d76bfd458d709" translate="yes" xml:space="preserve">
          <source>Named subexpressions, with Python syntax.</source>
          <target state="translated">파이썬 구문을 사용한 명명 된 하위 표현식.</target>
        </trans-unit>
        <trans-unit id="2b7c08c3ab75f37e2da656c1aab228f5f3a793b1" translate="yes" xml:space="preserve">
          <source>Names</source>
          <target state="translated">Names</target>
        </trans-unit>
        <trans-unit id="18279a42718c13f69852b27bda71bca286baf482" translate="yes" xml:space="preserve">
          <source>Namespace identifier resolved during semantic.</source>
          <target state="translated">시맨틱 중에 네임 스페이스 식별자가 해결되었습니다.</target>
        </trans-unit>
        <trans-unit id="16eb70d8d96eda3f848bd01fad9c8740968e54df" translate="yes" xml:space="preserve">
          <source>Namespaces create a new named scope that is imported into its enclosing scope.</source>
          <target state="translated">네임 스페이스는 엔 클로징 범위로 가져 오는 새로운 명명 된 범위를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f1ac1397736e022a1d1f2150f9efcc470a2f2b26" translate="yes" xml:space="preserve">
          <source>Narrow strings are handled as a special case in an overload.</source>
          <target state="translated">좁은 문자열은 과부하에서 특별한 경우로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="d1baa0f5a64eb81bc7adf3575d07ce443439b75e" translate="yes" xml:space="preserve">
          <source>Narrows down the search for sets of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; to all Unicode blocks.</source>
          <target state="translated">&lt;a href=&quot;#Code%20point&quot;&gt;코드 포인트&lt;/a&gt; 검색 을 모든 유니 코드 블록으로 좁 힙니다 .</target>
        </trans-unit>
        <trans-unit id="972986128033c9c5a0fa48b5cba6b81b431ea5b8" translate="yes" xml:space="preserve">
          <source>Narrows down the search for sets of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; to all Unicode scripts.</source>
          <target state="translated">&lt;a href=&quot;#Code%20point&quot;&gt;코드&lt;/a&gt; 세트 검색 범위를 좁혀 모든 유니 코드 스크립트를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="a0d5df10c5743ed78b049b016736baea220da828" translate="yes" xml:space="preserve">
          <source>Natural logarithm of the gamma function, &amp;Gamma;(x)</source>
          <target state="translated">감마 함수의 자연 로그, &amp;Gamma; (x)</target>
        </trans-unit>
        <trans-unit id="9af04929dbb837f665a10a968e5ddf32830b2b68" translate="yes" xml:space="preserve">
          <source>Nd</source>
          <target state="translated">Nd</target>
        </trans-unit>
        <trans-unit id="5ff045772783a219420ce41451947dd63b0d24fc" translate="yes" xml:space="preserve">
          <source>Nearly the full language remains available. Highlights include:</source>
          <target state="translated">거의 모든 언어를 사용할 수 있습니다. 주요 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d19f92de109ac46a4d1496b1a25770fce9bf58d9" translate="yes" xml:space="preserve">
          <source>NeedInterpret &lt;code&gt;needInterpret&lt;/code&gt;</source>
          <target state="translated">NeedInterpret 필요 &lt;code&gt;needInterpret&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75fa110366f333fd5bab311830e3dde315a57f85" translate="yes" xml:space="preserve">
          <source>Needles &lt;code&gt;needles&lt;/code&gt;</source>
          <target state="translated">바늘 &lt;code&gt;needles&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ca161e3cc3002c027a2393428d0e306fbbaf695" translate="yes" xml:space="preserve">
          <source>Needles &lt;code&gt;withOneOfThese&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;withOneOfThese&lt;/code&gt; 바늘</target>
        </trans-unit>
        <trans-unit id="252cb1c005cf9e2d7b10d76452dacceef651591d" translate="yes" xml:space="preserve">
          <source>Needs to be run after all arguments parsing (command line, DFLAGS environment variable and config file) in order to add final flags (such as &lt;code&gt;X86_64&lt;/code&gt; or the &lt;code&gt;CRuntime&lt;/code&gt; used).</source>
          <target state="translated">최종 플래그 (예 : &lt;code&gt;X86_64&lt;/code&gt; 또는 사용 된 &lt;code&gt;CRuntime&lt;/code&gt; ) 를 추가하려면 모든 인수 구문 분석 (명령 행, DFLAGS 환경 변수 및 구성 파일) 후에 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="773b47405b1ade5cb7def242c625aee9a0503c8c" translate="yes" xml:space="preserve">
          <source>NegExp, UAddExp, or ComExp which is revised per rules</source>
          <target state="translated">규칙에 따라 수정 된 NegExp, UAddExp 또는 ComExp</target>
        </trans-unit>
        <trans-unit id="86ed584de044b5671abdde74aefb4ce336bc1352" translate="yes" xml:space="preserve">
          <source>NegInfInterval &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">NegInfInterval &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d37436b24a16d602498d52710fab24c4c0728fb" translate="yes" xml:space="preserve">
          <source>NegInfInterval &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">NegInfInterval &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06abdfa680cc88d985771cbd0b3ca58828a2c451" translate="yes" xml:space="preserve">
          <source>NegInfInterval!TP &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">NegInfInterval! TP &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6035d6e362cc58462f47d6189969232e8adefdb5" translate="yes" xml:space="preserve">
          <source>NegInfIntervalRange &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">NegInfIntervalRange &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b509d53b6c53336b97c7a2d0d8fd0931d01cf01" translate="yes" xml:space="preserve">
          <source>Negate an integer.</source>
          <target state="translated">정수를 부정하십시오.</target>
        </trans-unit>
        <trans-unit id="d65959b6815872890e463de3dd8c9f108e73ed07" translate="yes" xml:space="preserve">
          <source>Negates predicate &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pred&lt;/code&gt; predicates를 무효화합니다 .</target>
        </trans-unit>
        <trans-unit id="b2be9e5f14286a848786e1067cc531abff2e5a28" translate="yes" xml:space="preserve">
          <source>Negates the passed template predicate.</source>
          <target state="translated">전달 된 템플리트 술어를 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="377568a17aa50c7d08c08a483a0eaa6ac8ab5550" translate="yes" xml:space="preserve">
          <source>Negative acknowledge</source>
          <target state="translated">부정적인 인정</target>
        </trans-unit>
        <trans-unit id="2daad810c80df74440602a7aceea31f882914c35" translate="yes" xml:space="preserve">
          <source>Negotiate auth support</source>
          <target state="translated">인증 지원 협상</target>
        </trans-unit>
        <trans-unit id="a29c776e4dbfe3a513f9eff63083ad09174aeb63" translate="yes" xml:space="preserve">
          <source>Neither of the above postblits is defined for structs that don't define &lt;code&gt;this(this)&lt;/code&gt; and don't have fields that transitively define it. If a struct does not define a postblit (implicit or explicit) but defines functions that use the same name/signature as the internally generated postblits, the compiler is able to identify that the functions are not actual postblits and does not insert calls to them when the struct is copied. Example:</source>
          <target state="translated">위의 포스트 블릿 중 어느 것도 &lt;code&gt;this(this)&lt;/code&gt; 정의하지 않고 이것을 전 이적으로 정의하는 필드가없는 구조체에 대해 정의 되지 않았습니다. 구조체가 포스트 블릿 (암시 적 또는 명시 적)을 정의하지 않지만 내부적으로 생성 된 포스트 블릿과 동일한 이름 / 서명을 사용하는 함수를 정의하는 경우 컴파일러는 함수가 실제 포스트 블릿이 아니며 호출 할 때 함수를 삽입하지 않는 것을 식별 할 수 있습니다 구조체가 복사됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="fbdc670d6c3fa0c3348a1095041949b891ee8b90" translate="yes" xml:space="preserve">
          <source>Neither part of the address may begin with a dot</source>
          <target state="translated">주소의 어느 부분도 점으로 시작할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="adecc7ca86d9dceca1b8a8af2434d1f53d82528b" translate="yes" xml:space="preserve">
          <source>Neither part of the address may end with a dot</source>
          <target state="translated">주소의 어느 부분도 점으로 끝날 수 없습니다</target>
        </trans-unit>
        <trans-unit id="c7aed298b0805dc753e9e811fcc17786fa078e4f" translate="yes" xml:space="preserve">
          <source>Neither the</source>
          <target state="translated">어느 쪽도</target>
        </trans-unit>
        <trans-unit id="d54ff6b0bd3497e2fc52575cdc71b5c7d66565ca" translate="yes" xml:space="preserve">
          <source>Neither the type of the &lt;code&gt;return ref&lt;/code&gt; parameter(s) nor the type of the return value is considered when determining the lifetime of the return value.</source>
          <target state="translated">어느 쪽의 형태 &lt;code&gt;return ref&lt;/code&gt; 반환 값의 수명을 결정할 때, 매개 변수 (들) 나 리턴 값의 타입이 고려되지 않는다.</target>
        </trans-unit>
        <trans-unit id="01b40ef9e87e1aa8159c98216ddccbf41a39cea4" translate="yes" xml:space="preserve">
          <source>Nested Classes</source>
          <target state="translated">중첩 클래스</target>
        </trans-unit>
        <trans-unit id="6ceba4234e15aa5ab2bd2d8b94c4dcba7693959f" translate="yes" xml:space="preserve">
          <source>Nested Functions</source>
          <target state="translated">중첩 함수</target>
        </trans-unit>
        <trans-unit id="bc233cc472db43781bf227ced2be0151fbaa6765" translate="yes" xml:space="preserve">
          <source>Nested Structs</source>
          <target state="translated">중첩 구조</target>
        </trans-unit>
        <trans-unit id="18abd9c388e5b52a8ab76caf29e0af466e0fc751" translate="yes" xml:space="preserve">
          <source>Nested Templates</source>
          <target state="translated">중첩 템플릿</target>
        </trans-unit>
        <trans-unit id="d7b8bd3fd9842e6b5f5443071f6160290a2688fd" translate="yes" xml:space="preserve">
          <source>Nested functions always have the D function linkage type.</source>
          <target state="translated">중첩 함수는 항상 D 함수 연결 유형을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="59b742f5047d7f2f070cdc497bf94356170baca1" translate="yes" xml:space="preserve">
          <source>Nested functions can be accessed only if the name is in scope.</source>
          <target state="translated">이름이 범위 내에있는 경우에만 중첩 함수에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="687841a342e2af7eaa9fb5771e49ff2ecd7c7c55" translate="yes" xml:space="preserve">
          <source>Nested functions cannot be overloaded.</source>
          <target state="translated">중첩 함수는 오버로드 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="de56879ae392c0f410b6a4803a848b74acc25efa" translate="yes" xml:space="preserve">
          <source>Nested functions have access to the variables and other symbols defined by the lexically enclosing function. This access includes both the ability to read and write them.</source>
          <target state="translated">중첩 함수는 어휘로 묶는 함수에 의해 정의 된 변수 및 기타 기호에 액세스 할 수 있습니다. 이 액세스에는 읽고 쓰는 기능이 모두 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="81d040d8cbecb1f3ea6ea11fdae7060537a65415" translate="yes" xml:space="preserve">
          <source>Nested functions, nested structs, delegates and lambdas</source>
          <target state="translated">중첩 함수, 중첩 구조체, 델리게이트 및 람다</target>
        </trans-unit>
        <trans-unit id="e58fbc07285bd7225d930bd7dd9f892a522af9f6" translate="yes" xml:space="preserve">
          <source>Nested structs/classes cannot be created.</source>
          <target state="translated">중첩 된 구조체 / 클래스를 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="84758e8ed7fb7e044ecd7ee4b8be21ee953041d9" translate="yes" xml:space="preserve">
          <source>Nesting Delimiters</source>
          <target state="translated">중첩 구분 기호</target>
        </trans-unit>
        <trans-unit id="2a8e9132760d41d72a6889c4990ba4d0970d98d7" translate="yes" xml:space="preserve">
          <source>Nesting block comments can span multiple lines and can nest.</source>
          <target state="translated">중첩 블록 주석은 여러 줄에 걸쳐있을 수 있으며 중첩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e9e1f6f189ff8e4d505c81b54a796d5e66a2542" translate="yes" xml:space="preserve">
          <source>NetBSD</source>
          <target state="translated">NetBSD</target>
        </trans-unit>
        <trans-unit id="f72e37a825c66ec1f9c150b1cff07ef3b471399e" translate="yes" xml:space="preserve">
          <source>Networking client functionality as provided by &lt;a href=&quot;http://curl.haxx.se/libcurl&quot;&gt;libcurl&lt;/a&gt;. The libcurl library must be installed on the system in order to use this module.</source>
          <target state="translated">에 의해 제공되는 네트워킹 클라이언트 기능 &lt;a href=&quot;http://curl.haxx.se/libcurl&quot;&gt;libcurl에&lt;/a&gt; . 이 모듈을 사용하려면 libcurl 라이브러리가 시스템에 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="581aefeada059f802da1d583ea93e3161c11eedd" translate="yes" xml:space="preserve">
          <source>Networking client functionality as provided by libcurl.</source>
          <target state="translated">libcurl에서 제공하는 네트워킹 클라이언트 기능</target>
        </trans-unit>
        <trans-unit id="ebe07da3dd45bd0d24ce7337762bb47dbdca8703" translate="yes" xml:space="preserve">
          <source>Never defined; used to just disable a section of code</source>
          <target state="translated">절대 정의되지 않았습니다. 코드 섹션을 비활성화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bbdcd23a18b9ea161014043c83bf82b0c775856d" translate="yes" xml:space="preserve">
          <source>Never do checking</source>
          <target state="translated">확인하지 마십시오</target>
        </trans-unit>
        <trans-unit id="0fc947765f94c215d01465bd1d5f3c6b067a780d" translate="yes" xml:space="preserve">
          <source>New Expressions</source>
          <target state="translated">새로운 표현</target>
        </trans-unit>
        <trans-unit id="814ede89739aeda2dd2ef09f7a84f1a31b54f537" translate="yes" xml:space="preserve">
          <source>New Tai Lue</source>
          <target state="translated">뉴타 이루</target>
        </trans-unit>
        <trans-unit id="00ca8599d50ec8f4a491f84862a1372294230642" translate="yes" xml:space="preserve">
          <source>New thread with anonymous function</source>
          <target state="translated">익명의 기능을 가진 새로운 스레드</target>
        </trans-unit>
        <trans-unit id="4730a25585b21bc83b2fb6fd8c21ccef35173c07" translate="yes" xml:space="preserve">
          <source>NewAnonClassExpression</source>
          <target state="translated">NewAnonClassExpression</target>
        </trans-unit>
        <trans-unit id="aeae939b51fa073aeb7c50b858bfbe0a984f939c" translate="yes" xml:space="preserve">
          <source>NewExpression</source>
          <target state="translated">NewExpression</target>
        </trans-unit>
        <trans-unit id="47cc38a5f6affc6fd9f8a8683e76dfafa574aed8" translate="yes" xml:space="preserve">
          <source>New_Tai_Lue</source>
          <target state="translated">New_Tai_Lue</target>
        </trans-unit>
        <trans-unit id="406e5a30366bef1c2bdc60eb13855fbae99b6877" translate="yes" xml:space="preserve">
          <source>Newline sequence for this system.</source>
          <target state="translated">이 시스템의 개행 순서.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
