<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="saltstack">
    <body>
      <group id="saltstack">
        <trans-unit id="d4100bbfd960cbfec69fa1ee538c05e4db8e703a" translate="yes" xml:space="preserve">
          <source>Return events to Elasticsearch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdac9c0ee46cae1708e0fc4cb2c38d2b1a0e14a" translate="yes" xml:space="preserve">
          <source>Return events to Mongodb server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da81b0958364cffd81a2c4a7cd90636fbe37f9e1" translate="yes" xml:space="preserve">
          <source>Return existing column families for all keyspaces or just the provided one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9830754eeb896470c2efb61bbb8dffb8a89cda" translate="yes" xml:space="preserve">
          <source>Return existing keyspaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41354cd72e330c12fc8c30698adb1a0bbb48ecfe" translate="yes" xml:space="preserve">
          <source>Return facl version from getfacl --version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aeca10b1dd0ae70c0e69d3385b54f5fdc2fdcc1" translate="yes" xml:space="preserve">
          <source>Return file information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7efefa627819993ccfe043373733e46ebd658e0" translate="yes" xml:space="preserve">
          <source>Return file_changes information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebddb81dfd15c4b0a7730d08e2e8341d4c7349e4" translate="yes" xml:space="preserve">
          <source>Return firefox_addons information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3319ce7e22dbf6f61901e4b3ed663f8cb967e7c1" translate="yes" xml:space="preserve">
          <source>Return fqdn, hostname, domainname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7819033144c94c5cbdfba000b9d92d9532746ed8" translate="yes" xml:space="preserve">
          <source>Return gluster volume info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e01fbbe56c2319df30b047f33d385310b0f022" translate="yes" xml:space="preserve">
          <source>Return goal(s) for a file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238a7768f69520f16b6fdbbb0e544cfadce95c79" translate="yes" xml:space="preserve">
          <source>Return grains pertaining to the operating system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35afb2dac20a923ca9fcf17930cf1f717912900c" translate="yes" xml:space="preserve">
          <source>Return groups information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5769d66fe77e1aa9caaa72e648738b637c5f9332" translate="yes" xml:space="preserve">
          <source>Return hardware_events information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83d2317f58bbc69214495a6fe30b1a03e1c447f" translate="yes" xml:space="preserve">
          <source>Return hash information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653c21cfe758fdb70a9f7fd3cef533f9937f7a5c" translate="yes" xml:space="preserve">
          <source>Return homebrew_packages information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da0b9b85b385d934b846de1e08baea73d67e9bd" translate="yes" xml:space="preserve">
          <source>Return if the database is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fed85dc46667752ae1c383df04246e03238d66" translate="yes" xml:space="preserve">
          <source>Return if the named service is disabled from starting on boot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18883b2a0da2d9482da722ccbf68f9a213abe10c" translate="yes" xml:space="preserve">
          <source>Return if the named service is enabled to start on boot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac0174f83ea1297223507f5c38685c3a824ead2" translate="yes" xml:space="preserve">
          <source>Return if the plugin is installed for the provided plugin name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d863d3dc9cd340de725ceec8757d918a089fa9d" translate="yes" xml:space="preserve">
          <source>Return if the signature of a RPM file is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ad0ae413efd5db75672b32b0cfb5fdadd6016a" translate="yes" xml:space="preserve">
          <source>Return imgadm version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1a9883a3bcca726713fd163b2a2d76706f490d" translate="yes" xml:space="preserve">
          <source>Return info about a container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d010386acd6b628fa8988945ff2e4db9036166" translate="yes" xml:space="preserve">
          <source>Return info about last time fun was called on each minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e30dc05fd62a7dd7707b412ae3d7b96c7f4e573" translate="yes" xml:space="preserve">
          <source>Return info about the network interfaces of a named vm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d15d67448442717a9075caf64006f3e1c95164" translate="yes" xml:space="preserve">
          <source>Return info on all groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9008e42ec3ad22795bba9f5b0c2936be5a41e5ff" translate="yes" xml:space="preserve">
          <source>Return info on an installed image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3e5939a607493852324532ecaac22dd45ea514" translate="yes" xml:space="preserve">
          <source>Return information about (all) storage pools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987bada6ca610280c824c0d3a773d16a8a02bfdb" translate="yes" xml:space="preserve">
          <source>Return information about a certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756f0d12a1d044d58f91b7ce3ec8b5ae002c8788" translate="yes" xml:space="preserve">
          <source>Return information about a deployment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a1e07c864aebf6ba64fdb1bbc4ef1217879a04" translate="yes" xml:space="preserve">
          <source>Return information about a disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc44ad7fc33eb907b51a521a01f73099922642b" translate="yes" xml:space="preserve">
          <source>Return information about a group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78144e5103a42d9a961036441483b2743059476f" translate="yes" xml:space="preserve">
          <source>Return information about a management_certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1054f59727cf74bc28c0f625c1853a9190fbd7" translate="yes" xml:space="preserve">
          <source>Return information about a server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f1556b05dc6ffd00e6a6fea3f06f42e22f490f" translate="yes" xml:space="preserve">
          <source>Return information about a service certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225061fd28e0354c026faf082364ab6f5ed3e266" translate="yes" xml:space="preserve">
          <source>Return information about a single issue in a named repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec7b3c0198f18bdebcc9886aff03887ea376d18" translate="yes" xml:space="preserve">
          <source>Return information about a single milestone in a named repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9a9dcdd8778107b52a69652b5b40eeb833e598" translate="yes" xml:space="preserve">
          <source>Return information about known host entries from the configfile, if any. If there are no entries for a matching hostname, return None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f765b81b4f2e4ba561806f8deda0c7e8da948b" translate="yes" xml:space="preserve">
          <source>Return information about known host from the configfile, if any. If there is no such key, return None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef225101cd1380e57de9983a03111bbadb58386" translate="yes" xml:space="preserve">
          <source>Return information about milestones for a given repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c978d3a26c7f7ead73b9fa1b5d9657bd01bce50b" translate="yes" xml:space="preserve">
          <source>Return information about physical and virtual memory on the system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93506780b612de181a61925d4a0030261f13de3" translate="yes" xml:space="preserve">
          <source>Return information about the CPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01f9ceb88efba471b85214f77202644681f1c6a" translate="yes" xml:space="preserve">
          <source>Return information about the Jenkins job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2986d520895759a1c8a0fa718dc1bcfce0173d53" translate="yes" xml:space="preserve">
          <source>Return information about the comments for a given issue in a named repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde721c0edd1d140783e1493ee3bdfb759f9edb3" translate="yes" xml:space="preserve">
          <source>Return information about the host connected to this master</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357f69fafc5bc7cb5ae8994680a65f34e3b239ee" translate="yes" xml:space="preserve">
          <source>Return information about the key. Returns a dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702d25efa8bc671c8df0e27d2f39077214a95703" translate="yes" xml:space="preserve">
          <source>Return information about the license, if the license is not correctly activated this will return None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739043b07000d895d07901c771422b6cef92c5d1" translate="yes" xml:space="preserve">
          <source>Return information about the logical volume(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340763f8550e8ef7658d1d56e793fc556610be63" translate="yes" xml:space="preserve">
          <source>Return information about the physical volume(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9c7fed05081908674356707c9e4c7e83ab9bb4" translate="yes" xml:space="preserve">
          <source>Return information about the virtual memory on the machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f414d8b8a69e7034fb85dbcd5f1c2ec7aa17bc" translate="yes" xml:space="preserve">
          <source>Return information about the volume group(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b098d25a90466014315e69ae5f1d2fd590b8c14c" translate="yes" xml:space="preserve">
          <source>Return information for a given namespace defined by the specified name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60b1342a9c546ba00d048667e9d276a566efff6" translate="yes" xml:space="preserve">
          <source>Return information for a given repo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aed8a67be805ca1224b6ec782ce93c271202a19" translate="yes" xml:space="preserve">
          <source>Return information for a particular certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c55a31f0b5ce399a89eb024b921a92e6f265687" translate="yes" xml:space="preserve">
          <source>Return information for the specified user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f298dba85fe26773df6c86858b83c3fc394b303" translate="yes" xml:space="preserve">
          <source>Return information for the specified user This is just returns dummy data so that salt states can work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72022cbf5fbbd5cdb367b8bb29e908d4459539ef" translate="yes" xml:space="preserve">
          <source>Return information for vms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183b12221d38a4f7f47b1de6dc2144fa391174a8" translate="yes" xml:space="preserve">
          <source>Return information on a directory located on the Moose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70a5917480cdfadd85c70c9c0fbf93f3cdfc740" translate="yes" xml:space="preserve">
          <source>Return information on a file located on the Moose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf25b8e9a085da15ef828e3c015981d88fc2c44" translate="yes" xml:space="preserve">
          <source>Return information on open ports and states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c404b91ab11724c5a9e9deeefe62eb548bb4957" translate="yes" xml:space="preserve">
          <source>Return information to a Kafka server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f610d6b04a003cb62b5372a5ec4e3acac3ccc990" translate="yes" xml:space="preserve">
          <source>Return informations on a storage pool provided its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a16ea4f8dc6f66a36c0ed978ffc0132bab9a6b" translate="yes" xml:space="preserve">
          <source>Return informations on a virtual network provided its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5839d848bccfc915faa6fb977f94882b6ca15b69" translate="yes" xml:space="preserve">
          <source>Return inode usage information for volumes mounted on this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c924f14b4648a47ed7515f396dde1b93112bf266" translate="yes" xml:space="preserve">
          <source>Return interface data from a certain device only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6868e84364124c4d1f00d5cad860b6ead32df91d" translate="yes" xml:space="preserve">
          <source>Return interface_addresses information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074f9398549b8a6bd83e6aa2d21132362c40fcae" translate="yes" xml:space="preserve">
          <source>Return interface_details information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b040fdfc330f1a7a992de3b5cda79e43dc43ecd4" translate="yes" xml:space="preserve">
          <source>Return interfaces that contain a certain pattern in their description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c315baae6390ea98a88ccae3a5a4045ba3c82d7" translate="yes" xml:space="preserve">
          <source>Return interfaces whose IP networks associated include this IP network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5654633d5f1dacb08f96fdf1636e53d144a4ada4" translate="yes" xml:space="preserve">
          <source>Return iokit_devicetree information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f8b42b0f035f8989fece5512f1edc547c84ac8" translate="yes" xml:space="preserve">
          <source>Return iokit_registry information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c245afec93cd9dca629fefac0d92d00cca329a" translate="yes" xml:space="preserve">
          <source>Return ip address and FQDN grains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63cfaa7d521e302c6662ed1b82b220bc986015c" translate="yes" xml:space="preserve">
          <source>Return ip addrs based on netmask, sitting in the &quot;glob&quot; spot because it is the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c59ab469a089390f129063ff7f923a1c815bb3" translate="yes" xml:space="preserve">
          <source>Return just a list of payload elements, if True. Default: False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040e4fe18e1305e4bf7425d7b7e5bacfd02d3014" translate="yes" xml:space="preserve">
          <source>Return kernel_extensions information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850e82bc870a925e07e9c29385214bd214460687" translate="yes" xml:space="preserve">
          <source>Return kernel_info information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c90587bedf35fe069e633483f9aa57d168182bb" translate="yes" xml:space="preserve">
          <source>Return kernel_integrity information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499914091e0aceb575a0f62e65ac5ab20fa1ebcf" translate="yes" xml:space="preserve">
          <source>Return kernel_modules information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1bbac7f11fcd9a8f97da1d0f0b943ef1e08c70" translate="yes" xml:space="preserve">
          <source>Return keychain_items information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17b5aac22198b910a5d4b7170ba67901e80cbe8" translate="yes" xml:space="preserve">
          <source>Return last information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597c629f7d56ee176d161406f763e3ea38fa6db2" translate="yes" xml:space="preserve">
          <source>Return launchd information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ed840d563eadcb3dd51398b510baead62f6446" translate="yes" xml:space="preserve">
          <source>Return list of active servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c95d41a7bc2a048599675f62fb64d26c0610ad" translate="yes" xml:space="preserve">
          <source>Return list of all the vms and their state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0f779b5acaa57a9c6196c296bb228444e19680" translate="yes" xml:space="preserve">
          <source>Return list of available datacenters from catalog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1276827dcebed939f0e635b7d453490a1cbdd77" translate="yes" xml:space="preserve">
          <source>Return list of available nodes from catalog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d70750dd71a12821f0808099af50c13c40736b3" translate="yes" xml:space="preserve">
          <source>Return list of available services rom catalog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f778981fb2585215c96053f429f4f7648ef8c408" translate="yes" xml:space="preserve">
          <source>Return list of broken path(s) in SERVICE_DIR that match &lt;code&gt;name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf89afb6d7970ba1c4e705c047667904b4055f30" translate="yes" xml:space="preserve">
          <source>Return list of directives together with expected arguments and places where the directive is valid (&lt;code&gt;apachectl -L&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb3a51ff9917e159187896bf33642b4e8e9460a" translate="yes" xml:space="preserve">
          <source>Return list of disk devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3366eb2ac3b8a1a8403a8e0cb06c3029c3c395af" translate="yes" xml:space="preserve">
          <source>Return list of information for all the vms indicating their state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bf963e8005e27d3f66cb720f8344873f9f0e3d" translate="yes" xml:space="preserve">
          <source>Return list of mdadm devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb38a1d355aa4264313ff913a602b55c46c0a13" translate="yes" xml:space="preserve">
          <source>Return list of modules compiled into the server (&lt;code&gt;apachectl -l&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a32496edf8e0ea4cc577465d4eec971e84a761" translate="yes" xml:space="preserve">
          <source>Return list of paths that may contain available services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db80084237c66baf2eb709c71accd6a5c067c3d0" translate="yes" xml:space="preserve">
          <source>Return list of static and shared modules (&lt;code&gt;apachectl -M&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcdb3597324b9b42d0373459f6bd1f58c8ef456" translate="yes" xml:space="preserve">
          <source>Return listening_ports information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a43a01faa7fa3e50a47d6427b29c6d9748b1054" translate="yes" xml:space="preserve">
          <source>Return load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9e502cc0fae0bf7082846fd70b488b94362e0a" translate="yes" xml:space="preserve">
          <source>Return local information, do not retrieve the state from master node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4724815eca6f6ec79b2642f2caa69a0888cd0b9b" translate="yes" xml:space="preserve">
          <source>Return logged-in users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e693669d6e019893eb357a48ccd4bd6532a6343d" translate="yes" xml:space="preserve">
          <source>Return logged_in_users information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b7cd0a775cfddda5b521c602861734a6288ff5" translate="yes" xml:space="preserve">
          <source>Return memory_map information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15be19c3f0e03551b6399ffdffcc866ff956ff2d" translate="yes" xml:space="preserve">
          <source>Return minions that match via glob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc53085a22a7ae0f03b97fa949da05ff24770c0" translate="yes" xml:space="preserve">
          <source>Return module map references. :return:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000b83ded2d20fe47aaefae4f5b3dd1077e93275" translate="yes" xml:space="preserve">
          <source>Return monit unique id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1704e105505fb2382614d38409a647a27d6625a6" translate="yes" xml:space="preserve">
          <source>Return mounts information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d971e9c3d5c53d813b97227670b4df5f5538e870" translate="yes" xml:space="preserve">
          <source>Return names of all load balancers associated with an account</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a866e3290ac2e77b4d815b4f86cdaa9380545f7" translate="yes" xml:space="preserve">
          <source>Return netstats info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7d3f1aa5e509f3cc5dcab75aef1aa4f0a94d6d" translate="yes" xml:space="preserve">
          <source>Return network I/O statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4e4ea02ac2646f904eae2ce9d942be852e59ce" translate="yes" xml:space="preserve">
          <source>Return network buffer sizes as a dict (currently linux only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af4ae02a9a58ce48087d61eed5fd9480329922d" translate="yes" xml:space="preserve">
          <source>Return nfs_shares information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef02a7ab551eaa05f16db9f6d8644d31279ad78" translate="yes" xml:space="preserve">
          <source>Return number of pkg builds, failures, and errors, on error dump to CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52796d55f3a3e64a43532c3beaf23791ecf3b30" translate="yes" xml:space="preserve">
          <source>Return nvram information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95a7d006862c88cf07ce4fbcb2ed1d75b79fc0b" translate="yes" xml:space="preserve">
          <source>Return one or more grains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4dc6655a133108afcb0ba1a437c7bb92f616e1" translate="yes" xml:space="preserve">
          <source>Return one or more pillar entries from the &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/pillar/index.html#pillar-in-memory&quot;&gt;in-memory pillar data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaf28b672602458a963ceb934ab91a456f52081" translate="yes" xml:space="preserve">
          <source>Return only records of type(s) The SMBIOS specification defines the following DMI types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8395a8cacfa4349c46021a5b3b7ba32fac735e" translate="yes" xml:space="preserve">
          <source>Return only the best match with the interfaces IP networks when the saerching pattern is a valid IP Address or Network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5877b52660fc6412a9832f3a1d754853079cfca" translate="yes" xml:space="preserve">
          <source>Return os_version information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe783384576852f34bf5577c16dda2513c371d1" translate="yes" xml:space="preserve">
          <source>Return osquery_extensions information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4dbe440c183991dc79d82fae4f448da3a4605a" translate="yes" xml:space="preserve">
          <source>Return osquery_flags information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d464ad11fddd9de95155ad9f25ecc5e19635b62b" translate="yes" xml:space="preserve">
          <source>Return osquery_info information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febfa83ddc51fd1e1975a37cf513b1d6fa9ce007" translate="yes" xml:space="preserve">
          <source>Return osquery_registry information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672f88dd5a9703471f35739e0383d55a8e5d19e7" translate="yes" xml:space="preserve">
          <source>Return output matching a specific state (&lt;strong&gt;frozen&lt;/strong&gt;, &lt;strong&gt;running&lt;/strong&gt;, or &lt;strong&gt;stopped&lt;/strong&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29bc7bf667415c09ad87beb98ffdf3aa79306f7" translate="yes" xml:space="preserve">
          <source>Return partition information for volumes mounted on this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9106c450885f483f009747c10b04e7fd8789b5" translate="yes" xml:space="preserve">
          <source>Return passwd_changes information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16cc4b765b1077679ebb165d49b813d6599876b" translate="yes" xml:space="preserve">
          <source>Return password data for a Windows instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eda6525f3f428f6c4c9b972c4c82d915adf5c4" translate="yes" xml:space="preserve">
          <source>Return pci_devices information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb26ff80ada587b47a8e50843d95146c531da2c4" translate="yes" xml:space="preserve">
          <source>Return peer status information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b386c948ba4b6fb057a92ece18fe33f84de64246" translate="yes" xml:space="preserve">
          <source>Return pkgng stats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a353fb45486896d785cd839c07fb0779840fc6a2" translate="yes" xml:space="preserve">
          <source>Return poudriere version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496864dce8b8d0588bdb73e04f9b3d1c1cce5144" translate="yes" xml:space="preserve">
          <source>Return preferences information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe05dbab5adfda58a305703e50d7c2e67224340" translate="yes" xml:space="preserve">
          <source>Return process_envs information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbab57947d7e94fbc2cbdb3a070bf5087f4a53d" translate="yes" xml:space="preserve">
          <source>Return process_memory_map information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58173dce8785fb261f0f44d7447b44f0bec2819b" translate="yes" xml:space="preserve">
          <source>Return process_open_files information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d681940c82da2ee92dceea364b17a7060a776ca" translate="yes" xml:space="preserve">
          <source>Return process_open_sockets information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca737e17374e938bf05b174a80ae1c36852b45a9" translate="yes" xml:space="preserve">
          <source>Return processes information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08492abe691659982fbc026ef9d0858759cd3e5d" translate="yes" xml:space="preserve">
          <source>Return quarantine information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd94f5c2c0e4f48b48b165a3ed8e4f4a47dd556a" translate="yes" xml:space="preserve">
          <source>Return raw configs for all interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d5b0b0e12627544cb52d8ea32f1cc74150c37c" translate="yes" xml:space="preserve">
          <source>Return routes information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e14718127b385f706b0565c284f4994c401c61" translate="yes" xml:space="preserve">
          <source>Return routing information for given destination ip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3620a6f9cf57fa45cfd342ea331512484637483" translate="yes" xml:space="preserve">
          <source>Return running and enabled services in a highstate structure. By default also returns package dependencies for those services, which means that package definitions must be created outside this function. To drop the package dependencies, set &lt;code&gt;requires&lt;/code&gt; to False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227b9f16ac3aff8f3bf8485c7d485cd54f69f0d5" translate="yes" xml:space="preserve">
          <source>Return safari_extensions information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7a3d8483f5607b8f3769a969c86d3de6ca7d75" translate="yes" xml:space="preserve">
          <source>Return salt data to Nagios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9425206c00663c423368b06fce7648ae29987a" translate="yes" xml:space="preserve">
          <source>Return salt data to Zabbix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d93474bc1d7849264f621529216df934781242" translate="yes" xml:space="preserve">
          <source>Return salt data via Telegram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e13583d49ffd11a1a27bda5417514da5e72d8c" translate="yes" xml:space="preserve">
          <source>Return salt data via email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec22e6eb6218d6beef6c6c15cad2ee586c1c25c" translate="yes" xml:space="preserve">
          <source>Return salt data via hipchat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0dd1cbfcfcc8b65fa3c55a3e4f3e2552f6a3907" translate="yes" xml:space="preserve">
          <source>Return salt data via mattermost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd3d10afef7049d8ec2c39befc0b23ec07ee186" translate="yes" xml:space="preserve">
          <source>Return salt data via pushover (&lt;a href=&quot;http://www.pushover.net&quot;&gt;http://www.pushover.net&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c43935a3347dae3285bee55e26532cd4a345a2" translate="yes" xml:space="preserve">
          <source>Return salt data via slack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483fd2fb6532a979ad23820bf973215cb47a9f9e" translate="yes" xml:space="preserve">
          <source>Return salt data via xmpp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b92be8da69ef8d5ecea839929cfc6630df6726" translate="yes" xml:space="preserve">
          <source>Return server and build arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1106340482fc18603884f57f2e977961fb248ff1" translate="yes" xml:space="preserve">
          <source>Return server version (&lt;code&gt;apachectl -V&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6cd583f39226e4cd2ab41681a2abb357cd8be7" translate="yes" xml:space="preserve">
          <source>Return server version (&lt;code&gt;apachectl -v&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8c966a79e14c14e82aa52ac227695406d139f2" translate="yes" xml:space="preserve">
          <source>Return server version from catalina.sh version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b8ac7a9639273a017abe99c96979c43fae3778" translate="yes" xml:space="preserve">
          <source>Return server version from grub --version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c688eb7963731c67c1488cada5f8373920f0216d" translate="yes" xml:space="preserve">
          <source>Return server version from nginx -v</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9d9721642b976e17c69851a85352b2f3da03fb" translate="yes" xml:space="preserve">
          <source>Return server version from varnishd -V</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7e65f1a134f79fbe7368df372956c1e041dca8" translate="yes" xml:space="preserve">
          <source>Return server version from znc --version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec29feaba074e1fb2660b48920c5b68d7bee3d2" translate="yes" xml:space="preserve">
          <source>Return shared_memory information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b80d344625682e8ee1c2d30b1958a9afd33309" translate="yes" xml:space="preserve">
          <source>Return shell_history information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a15348093e1da9256c632685ce43d8ebc5a1b7" translate="yes" xml:space="preserve">
          <source>Return smbios_tables information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a16c9e45bd2d2002a3587a39caa80d8c7939422" translate="yes" xml:space="preserve">
          <source>Return startup_items information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924045718685c3bef8c7b3b563a8732652df1057" translate="yes" xml:space="preserve">
          <source>Return state of container (running or stopped)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df36d219b8724e61acefcafabefd2030765874a8" translate="yes" xml:space="preserve">
          <source>Return status for requested information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee31183e453d9671366e972c4ed2e18ab147bde1" translate="yes" xml:space="preserve">
          <source>Return stdout lines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12677bb4a81d6a5ff4dd0e83c45084170161d95b" translate="yes" xml:space="preserve">
          <source>Return stdout, stderr, and retcode, not just stdout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d513d717bd49738249b9f890c0d9cf742b0ba78" translate="yes" xml:space="preserve">
          <source>Return suid_bin information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218caf715894104ba521a263791f7291c2c15cc9" translate="yes" xml:space="preserve">
          <source>Return system information about a VMware environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d7360849c36fe1ec9512255a32e932ef942576" translate="yes" xml:space="preserve">
          <source>Return system information for grains of the NSO proxy minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad49edd7fb8ec60de2e8b2c5ad7c669a31783a4" translate="yes" xml:space="preserve">
          <source>Return system information for grains of the NX OS proxy minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1267bf0425a0807721484c40b0999de836e486a" translate="yes" xml:space="preserve">
          <source>Return system rc configuration variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9b7fb9f0c8ecb722f3d0501181bd266aa81112" translate="yes" xml:space="preserve">
          <source>Return system_controls information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687d05f5931eae76bc3877dbc5e7e18dddf893b2" translate="yes" xml:space="preserve">
          <source>Return teams belonging to a repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641cc7be6c1b1a217e59dec0f4f6a70d99b14309" translate="yes" xml:space="preserve">
          <source>Return template a specific stack (heat stack-template)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ecbfe35f71551c09f4ac3aab48a7efada5f9ab0" translate="yes" xml:space="preserve">
          <source>Return the A record for &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8a17993181e1da56ec82e40f2b912c704a0489" translate="yes" xml:space="preserve">
          <source>Return the A record(s) for &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f325883300626b5c6b7a3cd11d4c36e994634dbf" translate="yes" xml:space="preserve">
          <source>Return the AAAA record for &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6f84f7d2be731a4551ccb60abda97f154e4f4c" translate="yes" xml:space="preserve">
          <source>Return the AAAA record(s) for &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce6d63d690fbb3d6e663f31e0bb9137fafd56f5" translate="yes" xml:space="preserve">
          <source>Return the CPU stats for this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752ce691b415fa4d1a1d64e88d817a7012aaa587" translate="yes" xml:space="preserve">
          <source>Return the DIFFERENCE of the result sets returned by each matching minion pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa639a32e9d58e9b1f9dab5d2f2ec2fa0f2b76b" translate="yes" xml:space="preserve">
          <source>Return the DNS information of the host. This grain is a dictionary having two keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9443780abc81e3df29b4c76771b443da272dd2" translate="yes" xml:space="preserve">
          <source>Return the EC2 region to use, in this order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aed45c5b64c011ad3610d818a420418143b8066" translate="yes" xml:space="preserve">
          <source>Return the IAM profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96ff5a8177f2af75886c92e831022e36e61361d" translate="yes" xml:space="preserve">
          <source>Return the ID of the keyname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19cae88643fa137ea47defdae06143e7d48e1db" translate="yes" xml:space="preserve">
          <source>Return the IP address of the VM If the VM has public IP as defined by libcloud module then use it Otherwise try to extract the private IP and use that one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab86c71d301dbce73f141de8c73a042150fc1832" translate="yes" xml:space="preserve">
          <source>Return the IP addresses used by a particular network at all the IXs where it is available. The network is selected either via the &lt;code&gt;id&lt;/code&gt; argument or the other filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7316a83c003edeae2d5bcb8d30543c06fce95b3" translate="yes" xml:space="preserve">
          <source>Return the MATCHING minion pools from the aggregated and sorted results of a salt command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2be0498f97a1d83f8512a7d5895189084008e53" translate="yes" xml:space="preserve">
          <source>Return the Netmiko connection object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247ef15dae56ce60d0ca99dc90bc28f66aad32d5" translate="yes" xml:space="preserve">
          <source>Return the Netmiko device args.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f33f42e2c2e1c78b90a54283da9c3fb8b16532" translate="yes" xml:space="preserve">
          <source>Return the PID or an empty string if the process is running or not. Pass a signature to use to find the process via ps. Note you can pass a Python-compatible regular expression to return all pids of processes matching the regexp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61dfbbdf1809fde8380cb0bc2d59f26d0ae8a3a" translate="yes" xml:space="preserve">
          <source>Return the Python path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0071921b385d48c2014acac07d73fa4b6f957b" translate="yes" xml:space="preserve">
          <source>Return the Python representation of &lt;code&gt;s&lt;/code&gt; (a &lt;code&gt;str&lt;/code&gt; instance containing a JSON document).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2057015cc6a94c4510ae8a9ae3f55265b0a3355c" translate="yes" xml:space="preserve">
          <source>Return the Python version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2db20537ab33286485e370886678000766fa4a" translate="yes" xml:space="preserve">
          <source>Return the SID for this windows service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c24d1ac98f1043a16caa8f6795d1d9a549a975" translate="yes" xml:space="preserve">
          <source>Return the SSH pubkey.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498a706b3b2d95a5d165eb6da04277558fd50c5e" translate="yes" xml:space="preserve">
          <source>Return the TXT record for &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1997ed14f02758216b2377b563939a9b2780e246" translate="yes" xml:space="preserve">
          <source>Return the VM's location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260f46480fd3b01e02e2fbddc6c6188310afcf31" translate="yes" xml:space="preserve">
          <source>Return the VM's location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdb538dc17a13e61205b4cb8f9c99f8fbd79dbe" translate="yes" xml:space="preserve">
          <source>Return the VM's size object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25c3112a674f2fffbd263ce5ca6a8b984bee875" translate="yes" xml:space="preserve">
          <source>Return the VM's size. Used by create_node().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ccf24bb70838d231f786c6bc00bc407860985e" translate="yes" xml:space="preserve">
          <source>Return the actual dev name(s?) according to udev for dev</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3b7eb8d506c0e31e323c60508603e4f12572ff" translate="yes" xml:space="preserve">
          <source>Return the actual lxc client version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572e3955bd81c8a19d61a3970fb32aad23af457a" translate="yes" xml:space="preserve">
          <source>Return the admin_password in the DETAILS dictionary, or 'calvin' (the Dell default) if there is none present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f7e4ceab6c9e693468f30129053a96852b44dd" translate="yes" xml:space="preserve">
          <source>Return the admin_username in the DETAILS dictionary, or root if there is none present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f6287404467717c9547d50bcdd18ff25cd9bb0" translate="yes" xml:space="preserve">
          <source>Return the aliases found in the aliases file in this format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f2f8beeb64e5ecbcfacbbcadba1b6ce2dd5595" translate="yes" xml:space="preserve">
          <source>Return the aliyun region to use, in this order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcea18158d822dcd5b738a2da917c65d3478351" translate="yes" xml:space="preserve">
          <source>Return the allowed IPv4 ranges in the SPF record for &lt;code&gt;domain&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3bfe92029a9634e4ad418bc1eceeef898ddbbf" translate="yes" xml:space="preserve">
          <source>Return the argument specification of functions in Salt execution modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2065753814a0ac6f2ca12fb17c0043fc3bc42d" translate="yes" xml:space="preserve">
          <source>Return the argument specification of functions in Salt returner modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066edf89662c4a7c7d2fc624c638950cee8a4922" translate="yes" xml:space="preserve">
          <source>Return the argument specification of functions in Salt runner modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35252530364e95b5dfce88489670c76a01972e58" translate="yes" xml:space="preserve">
          <source>Return the argument specification of functions in Salt state modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae502d263fca5b01f449cfce533dbaf31ac817f" translate="yes" xml:space="preserve">
          <source>Return the arn for a scaling policy in a specific autoscale group or None if not found. Mainly used as a helper method for boto_cloudwatch_alarm, for linking alarms to scaling policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8392645dcb9a4fba77edd83f8b4eb8ca26d392e" translate="yes" xml:space="preserve">
          <source>Return the arp table from the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf945607b850b1b7b9a3a1be13b13450f2deb4cc" translate="yes" xml:space="preserve">
          <source>Return the authorized keys for users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f292baea45e0c5336a5b982d98186e0d56ba5cc" translate="yes" xml:space="preserve">
          <source>Return the availability zone to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea256271b1a7fa34e0d9e2b378705d1e178fa7fd" translate="yes" xml:space="preserve">
          <source>Return the available fileserver environments. If no backend is provided, then the environments for all configured backends will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb30e2b4228fc86b338cf036d73eca837f6329d" translate="yes" xml:space="preserve">
          <source>Return the backup mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271884d405a3dcf639e2fca34ce98571b069ed5d" translate="yes" xml:space="preserve">
          <source>Return the base path for certs from CLI or from options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca85b9f991ce4826647198d884b68d60ec7cb2a5" translate="yes" xml:space="preserve">
          <source>Return the basename of a SysFS key path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabf28f2d3ed092a18b02ec3f7d3f80c9717ff71" translate="yes" xml:space="preserve">
          <source>Return the bcache UUID of a block device. If no device is given, the Cache UUID is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535c6ce9d7ac8b34004f46e76ea8d56f599df6e6" translate="yes" xml:space="preserve">
          <source>Return the block device mapping:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f218b8722d26c0732d4ddb734c3add26ee10504" translate="yes" xml:space="preserve">
          <source>Return the boot time in number of seconds since the epoch began.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ecc2411ce5dee23e031358daf1f7ddccb093fe" translate="yes" xml:space="preserve">
          <source>Return the cassandra version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606abc02809085df7da925835d20c136e9b2e7d2" translate="yes" xml:space="preserve">
          <source>Return the checksum for the given file. The following checksum algorithms are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379b5b6c68f4d4150527c81688371f3dffc48cc6" translate="yes" xml:space="preserve">
          <source>Return the complete config from the currently running minion process. This includes defaults for values not set in the config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03c55474fa5574dfda6343d8e3811d9bd8bd321" translate="yes" xml:space="preserve">
          <source>Return the compliance report in the comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7996e31d64093e140f5008d52657febddc0d7a" translate="yes" xml:space="preserve">
          <source>Return the compliance report using YANG objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b1c6b8b5bbd776d30cddb021ca7189abd1b97c" translate="yes" xml:space="preserve">
          <source>Return the compliance report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5d1e2c8583789a7503fb5a50d5914184bd77f9" translate="yes" xml:space="preserve">
          <source>Return the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4061d220b915b1bc783574f2ddb2079c78fe86" translate="yes" xml:space="preserve">
          <source>Return the configuration lines that match the regular expressions from the &lt;code&gt;parent_regex&lt;/code&gt; argument, having child lines matching &lt;code&gt;child_regex&lt;/code&gt;. The configuration is read from the network device interrogated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8fa8d25ec910b86202bf27de4a2b1534d56dbc" translate="yes" xml:space="preserve">
          <source>Return the configuration lines that match the regular expressions from the &lt;code&gt;parent_regex&lt;/code&gt; argument, having the child lines &lt;em&gt;not&lt;/em&gt; matching &lt;code&gt;child_regex&lt;/code&gt;. The configuration is read from the network device interrogated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229a754ff6523790224c81176a0df38386de522c" translate="yes" xml:space="preserve">
          <source>Return the configuration lines that match the regular expressions from the &lt;code&gt;regex&lt;/code&gt; argument. The configuration is read from the network device interrogated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4becebd82dd697fb84c1bfcf5e71d921b7c69ffc" translate="yes" xml:space="preserve">
          <source>Return the configuration of a network interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b155ba43049d184dc10784ce93f479edb1eaf1" translate="yes" xml:space="preserve">
          <source>Return the configuration of a policy filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389af6f20870c10a88dc98a7e31669d4c558e51e" translate="yes" xml:space="preserve">
          <source>Return the configuration of a single policy term.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bf4178cf273ac5a5c7fd585b3c99c09b685bd9" translate="yes" xml:space="preserve">
          <source>Return the configuration of the whole policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1133919208e814c6563c4b4a9df80870ee6c68b8" translate="yes" xml:space="preserve">
          <source>Return the configuration options of the master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8122180d512c02fa9ced2afccf039ee5ec184424" translate="yes" xml:space="preserve">
          <source>Return the configuration options passed to this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c0059dbbb3874a821578bbdff3ef2e613b3153" translate="yes" xml:space="preserve">
          <source>Return the configured ip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f7f82863db5dd481b2f98766a791c7c640dfb2" translate="yes" xml:space="preserve">
          <source>Return the configured tokens (keystone token-get)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b2e3b5e6b208b9f4dc97b6131cbf17e2001ee6" translate="yes" xml:space="preserve">
          <source>Return the connection object to the pyeapi Node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8010c32e3b13c62a407fcc47d4720d29ec846985" translate="yes" xml:space="preserve">
          <source>Return the connection object with the Arista switch, over &lt;code&gt;pyeapi&lt;/code&gt;, passing the authentication details from the existing NAPALM connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f196a1df5f67e7416ea0666c7c47256d3c2e9a52" translate="yes" xml:space="preserve">
          <source>Return the connection object with the network device, over Netmiko, passing the authentication details from the existing NAPALM connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e13812007c8d54edd573e9357963a1b7264924" translate="yes" xml:space="preserve">
          <source>Return the connection object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3742388898afdc818079753efc75175794b82d5a" translate="yes" xml:space="preserve">
          <source>Return the connection optional args.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac1e910c97048d6a8d4421fda5c32b90cec4f59" translate="yes" xml:space="preserve">
          <source>Return the connection status with master. Fire an event if the connection to master is not as expected. This function is meant to be run via a scheduled job from the minion. If master_ip is an FQDN/Hostname, it must be resolvable to a valid IPv4 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a1431ba4462721c798fa30a0c7516ddaf6fb2e" translate="yes" xml:space="preserve">
          <source>Return the connection status with the network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6439b700c4c726d27051684fff5908b7bc4559" translate="yes" xml:space="preserve">
          <source>Return the connection status with the remote device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7bdf0133bc34e5b765f96a1cf0bcd2d3ba891d" translate="yes" xml:space="preserve">
          <source>Return the content of a bond script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ea94fec518f6f2b1780865e669aad46a9819c5" translate="yes" xml:space="preserve">
          <source>Return the content of a package resource installed inside a virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd58bc59b40fdd77111b579a7a9235b0e59fc164" translate="yes" xml:space="preserve">
          <source>Return the content of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36dfe690fd0ccb229060daeb00222f124906be1" translate="yes" xml:space="preserve">
          <source>Return the contents after applying the templating engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c521f1efce52b81e57449176d848ab27225bfaa2" translate="yes" xml:space="preserve">
          <source>Return the contents of an interface script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3822879ac2c4be301c4d2c23db92192eb9f673a" translate="yes" xml:space="preserve">
          <source>Return the contents of the global network script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cab5596ff91ed15d09afbc341a54aaf87724a7" translate="yes" xml:space="preserve">
          <source>Return the contents of the interface routes script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8ea8229f0f1e0dba65eed3c2b6b41d4ba2b747" translate="yes" xml:space="preserve">
          <source>Return the contents of the specified user's crontab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e480f567337245b8ce73c4f7b46cfdeda3a473ad" translate="yes" xml:space="preserve">
          <source>Return the contents of the specified user's incrontab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e031ee98bdf1277bcd6e4acc4e334fc7a84946" translate="yes" xml:space="preserve">
          <source>Return the contents of the system wide incrontab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849959edc5643ce664802a051ea74031b025ad60" translate="yes" xml:space="preserve">
          <source>Return the contents of the user's crontab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab75b5a9d56fe0330d82cd924cc3e491b476b60" translate="yes" xml:space="preserve">
          <source>Return the contents of the user's incrontab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea51a5eef66404411f773829a45a7b271b709ce" translate="yes" xml:space="preserve">
          <source>Return the contextual provider of None if no configured one can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f88d6b16fc7325f9d571dbfcd8af59808c2351c" translate="yes" xml:space="preserve">
          <source>Return the current clock format, either 12h or 24h format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e65fd4b7431fb06a1be39a56439a2163d71e6c" translate="yes" xml:space="preserve">
          <source>Return the current disk usage stats for the named mount point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dae5df2ec3047934f08ff3b5f578554ef3c11f" translate="yes" xml:space="preserve">
          <source>Return the current idle delay setting in seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8db067b1188cd89e467439c4f2dfab45843596b" translate="yes" xml:space="preserve">
          <source>Return the current job configuration for the provided job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74181764a62c87988ac7cf5973724ecbd06a8fa" translate="yes" xml:space="preserve">
          <source>Return the current load average for the specified minion. Available values for name are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8f4892716deccd2952bef8630274220fef978b" translate="yes" xml:space="preserve">
          <source>Return the current policy for the specified table/chain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab70a1b89eb1ceeff9cfd87f92b24cccd051b16" translate="yes" xml:space="preserve">
          <source>Return the current routing table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208d2e668a98a340e04e73238d07a85e9d7c879c" translate="yes" xml:space="preserve">
          <source>Return the current server UNIX time in seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1acb69f493e6cb458d935564c1f5ffdb003289d" translate="yes" xml:space="preserve">
          <source>Return the current server configuration for the specified app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cf7f3baa89f1a28a5f449c53618438565efb91" translate="yes" xml:space="preserve">
          <source>Return the current server configuration for the specified job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d4a3af7b28e563f97b1144d7b05bb55b824eb0" translate="yes" xml:space="preserve">
          <source>Return the current setting, if the date is shown in the clock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11f8f06adb2269ab026a201b346db7d14813864" translate="yes" xml:space="preserve">
          <source>Return the current stack trace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0f18809fe41fc2cceb952150f46187cd0d7509" translate="yes" xml:space="preserve">
          <source>Return the current status, enabled or disabled, of the job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5febdbad75a6e4e1129ef5f1e3442e5e8ec91af" translate="yes" xml:space="preserve">
          <source>Return the current time on the minion, formatted based on the format parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db1f6e32c47b42da070fd403a956264a98a8306" translate="yes" xml:space="preserve">
          <source>Return the currently configured jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926384a38b1a8d209289570edf6547df265dcf50" translate="yes" xml:space="preserve">
          <source>Return the data for a specific cached job id. Note this only works if cache_jobs has previously been set to True on the minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d11fc5acd61622f506e67be4829ed5564c50a0" translate="yes" xml:space="preserve">
          <source>Return the data for a specific job id that is currently running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad0e02373c389c49601174ee52873310618ed83" translate="yes" xml:space="preserve">
          <source>Return the data from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a75f92fe96e8197dda6313ac0f04cbd447a5d96" translate="yes" xml:space="preserve">
          <source>Return the data from an Nginx status page as a dictionary. &lt;a href=&quot;http://wiki.nginx.org/HttpStubStatusModule&quot;&gt;http://wiki.nginx.org/HttpStubStatusModule&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5f1954ac9eabe86cd524889e172053e832c790" translate="yes" xml:space="preserve">
          <source>Return the data on all running salt processes on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d79be187d77a87d97ac5443b786c8e224ae0eb" translate="yes" xml:space="preserve">
          <source>Return the database list created on a MS SQL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb56b31e7d8747cddf017d48d5b9b6d801e3f61" translate="yes" xml:space="preserve">
          <source>Return the datacenter from the config provider datacenter ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad911f1e30e42d27a616c72fc9e46e4f3168f2b1" translate="yes" xml:space="preserve">
          <source>Return the default shell to use on this system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de973224970b2b1dd5289e3e0f9ce715e7ff187" translate="yes" xml:space="preserve">
          <source>Return the details for an organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e65cfc6f9b8cffeaa720e43efaa8111c4515c04" translate="yes" xml:space="preserve">
          <source>Return the details of a network identified using the search filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3d0eaa889d95bedeeb175198d911454655df6d" translate="yes" xml:space="preserve">
          <source>Return the details of a person of contact together using the search filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3239e85afadbb58ec100b8ff54a95ca7e9f3176" translate="yes" xml:space="preserve">
          <source>Return the details of an IX (Internet Exchange) facility using the search filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be1c96d5a3d579eefd48ddd07adbf1b5b531466" translate="yes" xml:space="preserve">
          <source>Return the details of an IX (Internet Exchange) together with the PeeringDB IDs of the networks available in this location, using the search filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585480f40425540f7e014deaea76245482aa30c1" translate="yes" xml:space="preserve">
          <source>Return the details of an IX (Internet Exchange) together with the networks available in this location (and their details), using the search filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d8118bcccfdfc1753e010891571f363ebd8914" translate="yes" xml:space="preserve">
          <source>Return the details of an IX (Internet Exchange) using the search filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6a68f10e74dd913ec0e9ef079f47b7e7e97a23" translate="yes" xml:space="preserve">
          <source>Return the details of an organisation together with the networks available in this location, using the search filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506673db7c6848c9bac05fc1f69ea8b59ca65526" translate="yes" xml:space="preserve">
          <source>Return the details of the facility identified using the search filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b1fb52e3752ac2de874f2f7a197ea31cc7bef4" translate="yes" xml:space="preserve">
          <source>Return the details of the node identified by the specified name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec02bfe437fd16af57b63b72de782fd44cc1e94" translate="yes" xml:space="preserve">
          <source>Return the diff of the current directory, files, or directories from the remote Subversion repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca9f99fa6d67cbbbc135e4d9b6c656c0a89c803" translate="yes" xml:space="preserve">
          <source>Return the diff, as Python dictionary, between the candidate and the running configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39e581a3777ee5bc8d8088d404b105b9ec01352" translate="yes" xml:space="preserve">
          <source>Return the diff, as Python dictionary, between two different sources. The sources can be either specified using the &lt;code&gt;source1&lt;/code&gt; and &lt;code&gt;source2&lt;/code&gt; arguments when retrieving from the managed network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848be822f42d2767aa7ba46c116751d9c4d16729" translate="yes" xml:space="preserve">
          <source>Return the diff, as text, between the candidate and the running config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccce67a27fd9f4c50ea5815a5922c87d3da861a" translate="yes" xml:space="preserve">
          <source>Return the diff, as text, between the two different configuration sources. The sources can be either specified using the &lt;code&gt;source1&lt;/code&gt; and &lt;code&gt;source2&lt;/code&gt; arguments when retrieving from the managed network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914a46132d6a094d3872f8e5cf00c5064fc4513e" translate="yes" xml:space="preserve">
          <source>Return the disabled services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bd4c6f26874d5fdfe25f48d689c1c2af2124eb" translate="yes" xml:space="preserve">
          <source>Return the disabled services. Use the &lt;code&gt;limit&lt;/code&gt; param to restrict results to services of that type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d93869a4e734986a7e638685c5efc7dd39f4e4" translate="yes" xml:space="preserve">
          <source>Return the disk usage for this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bdce7215b961481b21f7f0536c0009f2da00b3" translate="yes" xml:space="preserve">
          <source>Return the disks of a named vm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd21f6d9a6df7d42d578378b399aec9a12645bca" translate="yes" xml:space="preserve">
          <source>Return the docstrings for all modules. Optionally, specify a module or a function to narrow the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba8fab6218cb0f3468e08e7f0869dbb7d4cb211" translate="yes" xml:space="preserve">
          <source>Return the docstrings for all renderers. Optionally, specify a renderer or a function to narrow the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900d8c24d1fee8d50c6b8cdb72d484ff912ca79b" translate="yes" xml:space="preserve">
          <source>Return the docstrings for all returners. Optionally, specify a returner or a function to narrow the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430e4d37c679588e470ef5b860d335f725e30670" translate="yes" xml:space="preserve">
          <source>Return the docstrings for all runners. Optionally, specify a runner or a function to narrow the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9b74f8c5ae96ca6bdab3b99db9c3e6b5c58a34" translate="yes" xml:space="preserve">
          <source>Return the docstrings for all states. Optionally, specify a state or a function to narrow the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4742cfe369749bad98659e6dea547a3cc49a535a" translate="yes" xml:space="preserve">
          <source>Return the domain capabilities given an emulator, architecture, machine or virtualization type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0cc313d955e09cf376c2170b5f83f6fb1eb146" translate="yes" xml:space="preserve">
          <source>Return the enabled services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807afdaf752b827f2219cb4d8f7e56f1b1b4f3a5" translate="yes" xml:space="preserve">
          <source>Return the enabled services. Use the &lt;code&gt;limit&lt;/code&gt; param to restrict results to services of that type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9beaaf1e0567e3efdf8cac8e75161caf94c2c638" translate="yes" xml:space="preserve">
          <source>Return the endpoint of an RDS instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e6cf49ea50510509c621ebb9ed7cb859b51f31" translate="yes" xml:space="preserve">
          <source>Return the epoch of the mtime for this cache file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f830ac155a4533e86130db02a9b34174034b09" translate="yes" xml:space="preserve">
          <source>Return the filesystem name of the specified device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52176580c6a6962aaff2f809bc883bc0e2dcc273" translate="yes" xml:space="preserve">
          <source>Return the fingerprint of the master's public key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f378af399932b1cd2af9772f1267d1e68ba2fb" translate="yes" xml:space="preserve">
          <source>Return the fingerprint of the master's public key on the minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c8ce152adeb50bb1e163a88e1840e55c7be47d" translate="yes" xml:space="preserve">
          <source>Return the first configured instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34e1c0c44652c74ed6b0b1d95a3ebabb794c534" translate="yes" xml:space="preserve">
          <source>Return the first configured instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84193ecc3ce2bfadd40ef1b961952e42331ae876" translate="yes" xml:space="preserve">
          <source>Return the first configured provider instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6123c04838a9020ed0e246290a7d6821a37448fe" translate="yes" xml:space="preserve">
          <source>Return the first match in a dictionary of target patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86aa18fb14acdc567de2f720ec2a82b63f0fa397" translate="yes" xml:space="preserve">
          <source>Return the first unassociated EIP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02227be4dc946eed81df3a6ab687b4ba915d6451" translate="yes" xml:space="preserve">
          <source>Return the formatted outputter string for the Python object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd94111fe62f69bbb7a799ae69cc3339eca3ae82" translate="yes" xml:space="preserve">
          <source>Return the formatted string as HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0f6f430ed16b5c74e9e640fdce2a16a1b1672d" translate="yes" xml:space="preserve">
          <source>Return the full data about the publication, this is invoked in the same way as the publish function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01809b7cfb08081c9aa06574dc7560ede0641b2" translate="yes" xml:space="preserve">
          <source>Return the grains set in the grains file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b860d42be42248189d89e62aaba9afe482a43c" translate="yes" xml:space="preserve">
          <source>Return the group that owns a given file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bdca45f55628dfa27efd85c71039626956d362" translate="yes" xml:space="preserve">
          <source>Return the hardware address (a.k.a. MAC address) for a given interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229e3aaf10f6c52f1b5f5ed521aacd89c5b9d522" translate="yes" xml:space="preserve">
          <source>Return the hash of a file, to get the hash of a file on the salt master file server prepend the path with salt://&amp;lt;file on server&amp;gt; otherwise, prepend the file with / for a local file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6e49ec12455291119c3608a6bd2d50d5c94828" translate="yes" xml:space="preserve">
          <source>Return the history for an image. Equivalent to running the &lt;code&gt;docker
history&lt;/code&gt; Docker CLI command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc3970c74af6fa159dd4cbf6f3ee48393030d28" translate="yes" xml:space="preserve">
          <source>Return the host to use for the next autodeployed VM. This queries the available host and executes some math the determine the most &quot;available&quot; next host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb77f1ac4aa8264c99fb5f91733b49bd87bef802" translate="yes" xml:space="preserve">
          <source>Return the hostname as configured on the network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086c926a741f4a10a792b77fd30be063376115d8" translate="yes" xml:space="preserve">
          <source>Return the hosts found in the hosts file in this format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d820c5a553edad532d2608bd5cb7951066d863eb" translate="yes" xml:space="preserve">
          <source>Return the hypervisor connection capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a62237652f944f48f724e50716cfff5759e1f7" translate="yes" xml:space="preserve">
          <source>Return the id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab0a9d6cf7fae19efcc7e35e83b36b3e1c85f0e" translate="yes" xml:space="preserve">
          <source>Return the id of the group that owns a given file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9337fd8f547bfbd5fdef9d9d55474b77d27849" translate="yes" xml:space="preserve">
          <source>Return the id of the primary group that owns a given file (Windows only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3b6b64e8b6fd6344a7469619e46f27262998e4" translate="yes" xml:space="preserve">
          <source>Return the id of the user that owns a given file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75ff847113452ee4d2e87461ff75739d984e873" translate="yes" xml:space="preserve">
          <source>Return the image object to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716d08ee9fbcccae07b956b013673dab6847a213" translate="yes" xml:space="preserve">
          <source>Return the image object to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9213b85629c6f02bbc0d6684975cdd347e604e3f" translate="yes" xml:space="preserve">
          <source>Return the inet address for a given interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216ab42f2e4df23c48a23a3678cac5eb1fb238b5" translate="yes" xml:space="preserve">
          <source>Return the information for a specified job id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebcb7141e0bf3fc33801cc131584094f606dffb" translate="yes" xml:space="preserve">
          <source>Return the information of the named package available for the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ff3c0eaeaf2b0abfeaa8c5be5049d3fd2c5ab0" translate="yes" xml:space="preserve">
          <source>Return the information of the named package(s) installed on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81a4c5080a678a8592c7d5572d2d72efb831e77" translate="yes" xml:space="preserve">
          <source>Return the information of the named package(s), installed on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c98587af1885877ccdb254cf92503fe0942887f" translate="yes" xml:space="preserve">
          <source>Return the information on a specific selinux boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce07814e0c549822ca3b67d90250897b07621a5f" translate="yes" xml:space="preserve">
          <source>Return the information on a specific selinux module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e5bcb96bb03b53627725de004a55aff676726d" translate="yes" xml:space="preserve">
          <source>Return the information on the named VM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f16fd6ac44dc3c1eaaa26bcef768d5a52bc19b" translate="yes" xml:space="preserve">
          <source>Return the information returned from a specified jid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adb3f083e02e83a4febb8b6bd9d3e447c2ad62d" translate="yes" xml:space="preserve">
          <source>Return the information returned when the specified job id was executed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e05544c8a85e018201e0fb9b095656f59fafd7" translate="yes" xml:space="preserve">
          <source>Return the ip associated with the named host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b51c4551a9d2544436b0874c339f604e91a9c0" translate="yes" xml:space="preserve">
          <source>Return the joyent data center to use, in this order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5711801412ecd04751a38bab4af0492fec1d86c" translate="yes" xml:space="preserve">
          <source>Return the key-value arguments used for the authentication arguments for the &lt;code&gt;pyeapi execution module&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acd633fdca1f3d167ecb221d0afb9f83dd862cd" translate="yes" xml:space="preserve">
          <source>Return the key-value arguments used for the authentication arguments for the netmiko module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42f695f5df24e4ed3d8bc692cc2e792d3c0869b" translate="yes" xml:space="preserve">
          <source>Return the keyname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d781ae3937cc5c010044ad10fff0c5212b0bc16e" translate="yes" xml:space="preserve">
          <source>Return the keypair to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4fd1846f2385a3739633d1ef02f658eea1e8e7" translate="yes" xml:space="preserve">
          <source>Return the kubernetes configmap defined by name and namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20d2738c35d0e85554213867e3cd0daa0047fb2" translate="yes" xml:space="preserve">
          <source>Return the kubernetes deployment defined by name and namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cee53c208d1ea20f11404261d35309c93110f6e" translate="yes" xml:space="preserve">
          <source>Return the kubernetes secret defined by name and namespace. The secrets can be decoded if specified by the user. Warning: this has security implications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3619a99d3424712125a68c2f5317bfc1c2bcf73" translate="yes" xml:space="preserve">
          <source>Return the kubernetes service defined by name and namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a17338a3dd2a792daaaad9c2fa75c259eac34a" translate="yes" xml:space="preserve">
          <source>Return the labels of the node identified by the specified name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327a259baba27094c0023cbedca63e37e529c10c" translate="yes" xml:space="preserve">
          <source>Return the latest version of the named fileset/rpm package available for upgrade or installation. If more than one fileset/rpm package name is specified, a dict of name/version pairs is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a609130814b5dc53a1e42d083fd350968a4fd0" translate="yes" xml:space="preserve">
          <source>Return the latest version of the named package available for upgrade or installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de312757c51aa0b74af329bd0b9c1a7219785ab" translate="yes" xml:space="preserve">
          <source>Return the latest version of the named package available for upgrade or installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91fd40db9302cc3cc52dcf2a24eaf90e8485a45" translate="yes" xml:space="preserve">
          <source>Return the latest version of the named package available for upgrade or installation. If more than one package name is specified, a dict of name/version pairs is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2025468757e030d4a8d0d357ed4ee44426d89b3b" translate="yes" xml:space="preserve">
          <source>Return the list of aliases associated with an ip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ad91cfec361ab2ba544847baf86cae1190681c" translate="yes" xml:space="preserve">
          <source>Return the list of all info for all users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05abbd1a2fbf06e25dde1fe18fe92d8a44f5c82c" translate="yes" xml:space="preserve">
          <source>Return the list of all the possible paths in a container, down to the &lt;code&gt;config&lt;/code&gt; container. This function can be used to verify that the &lt;code&gt;model&lt;/code&gt; is a Python object correctly structured and respecting the OpenConfig hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5419fb6c06fb408721e847dc6201b0b6fe91673b" translate="yes" xml:space="preserve">
          <source>Return the list of facilities used by a particular network, given the &lt;code&gt;id&lt;/code&gt; or other filters specified in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd2463c6a10ad0816ea8f65355a2df9dcc57fb2" translate="yes" xml:space="preserve">
          <source>Return the list of installed packages on the machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7515610cf5c34e325c324156d43741814b9e00" translate="yes" xml:space="preserve">
          <source>Return the load associated with a given job id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdbdd02be68afc66c0183a9fc4c9a51522c4fcc" translate="yes" xml:space="preserve">
          <source>Return the load averages for this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c079a36558ebaa6aad84809e7c27f153128ad345" translate="yes" xml:space="preserve">
          <source>Return the load data that marks a specified jid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31b4babace50d3b0afe6fa9e59c31f5fb10db7a" translate="yes" xml:space="preserve">
          <source>Return the load from a specified jid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c070359eab52dae498d0d8ad722c8463eafd1e6" translate="yes" xml:space="preserve">
          <source>Return the location of the SELinux VFS directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801bd4b6b26caae6f7dd08cce18770940d62f8d8" translate="yes" xml:space="preserve">
          <source>Return the location of the VBoxManage command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b868dd03072c9183184092ef485a24b45642146" translate="yes" xml:space="preserve">
          <source>Return the location that is configured for this provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5074387697d985c4b8bae85cfc32da0e73173c" translate="yes" xml:space="preserve">
          <source>Return the location to use, in this order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f238df5678ca57cd91707be1f95113973a74bac0" translate="yes" xml:space="preserve">
          <source>Return the managed file data for file.managed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e76425261b7e7bf336d5aa196061f9e0736364" translate="yes" xml:space="preserve">
          <source>Return the matching key fingerprints. Returns a dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d28526ece82682e9225dff9831030d5e19e3a9" translate="yes" xml:space="preserve">
          <source>Return the memory info for this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23c2d27cfcfc22ad10a3f13b9826776f1194dee" translate="yes" xml:space="preserve">
          <source>Return the merge diff, as text, after merging the merge config into the configuration source requested (without loading the config on the device).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de80e2a05700a9166531be5e30ae3e028816ab32" translate="yes" xml:space="preserve">
          <source>Return the merge diff, as text, after merging the merge config into the initial config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1385ad6cd482faeae370c618136a2a299ae16e5a" translate="yes" xml:space="preserve">
          <source>Return the merge result of the &lt;code&gt;initial_config&lt;/code&gt; with the &lt;code&gt;merge_config&lt;/code&gt;, as plain text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db16e8215eba66d8995a30640a52142e44085b79" translate="yes" xml:space="preserve">
          <source>Return the merge result of the configuration from &lt;code&gt;source&lt;/code&gt; with the merge configuration, as plain text (without loading the config on the device).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f372cac581e5f33742e0bce32047253d4bd8995" translate="yes" xml:space="preserve">
          <source>Return the merge tree of the &lt;code&gt;initial_config&lt;/code&gt; with the &lt;code&gt;merge_config&lt;/code&gt;, as a Python dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b463cb5a492a3a99f6bc2649fde4fff24462987" translate="yes" xml:space="preserve">
          <source>Return the metadata for a bucket, or an object in a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5be76a829e165969e1dbb4b574b88a348e95da6" translate="yes" xml:space="preserve">
          <source>Return the minion configuration settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb3e9d56ac4b639a02cf3a071dc04fd187137eb" translate="yes" xml:space="preserve">
          <source>Return the minion's host keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8aa8c1ab61329dc39e989e7caa86a2db305e8f" translate="yes" xml:space="preserve">
          <source>Return the minion's public key fingerprint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becfe49c38f0833e6549ffdadd6dcf99eff3adad" translate="yes" xml:space="preserve">
          <source>Return the mode of a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf4d3a0215587f2d75af13143881e44cf71cb2e" translate="yes" xml:space="preserve">
          <source>Return the mode selinux is running in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e8c7812e38679eca7451f568e49e008c1cc4d8" translate="yes" xml:space="preserve">
          <source>Return the modjk version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a43d68cf9fd9f0564fee95a3b2d6c0176f904c" translate="yes" xml:space="preserve">
          <source>Return the most recent jobs that have executed the named function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4387bc322baf2dea2f77f89c8c561c618357d4" translate="yes" xml:space="preserve">
          <source>Return the name of the package that owns the file. Multiple file paths can be passed. If a single path is passed, a string will be returned, and if multiple paths are passed, a dictionary of file/package name pairs will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62e504f47cea5dc176dd386da44c79245434bda" translate="yes" xml:space="preserve">
          <source>Return the name of the package that owns the file. Multiple file paths can be passed. Like &lt;a href=&quot;#salt.modules.aptpkg.version&quot;&gt;&lt;code&gt;pkg.version&lt;/code&gt;&lt;/a&gt;, if a single path is passed, a string will be returned, and if multiple paths are passed, a dictionary of file/package name pairs will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce267747f50be1061a9260851f35362630dd9ff" translate="yes" xml:space="preserve">
          <source>Return the name of the package that owns the file. Multiple file paths can be passed. Like &lt;a href=&quot;#salt.modules.yumpkg.version&quot;&gt;&lt;code&gt;pkg.version&lt;/code&gt;&lt;/a&gt;, if a single path is passed, a string will be returned, and if multiple paths are passed, a dictionary of file/package name pairs will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae1c17c5966363aa1f89edfa29c4a7944090c20" translate="yes" xml:space="preserve">
          <source>Return the name of the package that owns the file. Multiple file paths can be passed. Like &lt;a href=&quot;salt.modules.yumpkg#salt.modules.yumpkg.version&quot;&gt;&lt;code&gt;pkg.version&lt;/code&gt;&lt;/a&gt;, if a single path is passed, a string will be returned, and if multiple paths are passed, a dictionary of file/package name pairs will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2814d5b2270b5b548ecc20ff8b889f41a36c70" translate="yes" xml:space="preserve">
          <source>Return the name of the package that owns the file. Multiple file paths can be passed. Like &lt;code&gt;pkg.version &amp;lt;salt.modules.apk.version&lt;/code&gt;, if a single path is passed, a string will be returned, and if multiple paths are passed, a dictionary of file/package name pairs will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f904d24a1158711ea2da6b4d69c2dae2ca5a6c7e" translate="yes" xml:space="preserve">
          <source>Return the name of the package that owns the file. Multiple file paths can be passed. Like &lt;code&gt;pkg.version &amp;lt;salt.modules.opkg.version&lt;/code&gt;, if a single path is passed, a string will be returned, and if multiple paths are passed, a dictionary of file/package name pairs will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6441cbaf63ac0ce4c6e95049eaeb7859f7cc3ba9" translate="yes" xml:space="preserve">
          <source>Return the name of the primary group that owns a given file (Windows only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc19c4f620d0fd2da801af7a05ddd8ccb53981d6" translate="yes" xml:space="preserve">
          <source>Return the names of the available namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac87a998e18b0c44cea14a1034a0ad231e1bd0f5" translate="yes" xml:space="preserve">
          <source>Return the names of the nodes composing the kubernetes cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66574ec5bb7c2b130e27c254c0af4e3515805d78" translate="yes" xml:space="preserve">
          <source>Return the native config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed929e8eb96a3dacc2c10a47802b326af2fb97c" translate="yes" xml:space="preserve">
          <source>Return the network stats for this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630e3fa0564e26d59dfd96a275d653934036e5cb" translate="yes" xml:space="preserve">
          <source>Return the networkid to use, only valid for Advanced Zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a3dd588ae6a3c90495f018bb8bf7681eee24e8" translate="yes" xml:space="preserve">
          <source>Return the node location to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d91e0195b10c8f3ca268a339e83b16f10aa214" translate="yes" xml:space="preserve">
          <source>Return the node_info, vm_info and freemem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a468a4c02b5b67a07deca436b0d36fa8359e53" translate="yes" xml:space="preserve">
          <source>Return the num-th Fibonacci number, and the time it took to compute in seconds. Used for performance tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a008335b51a1c18596b7219334c44cdd4577a2" translate="yes" xml:space="preserve">
          <source>Return the number of CPUs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a2bf1f321b33f75d89c3eb73b432b742c038c5" translate="yes" xml:space="preserve">
          <source>Return the number of keys in the selected database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7cb0b45600e1a065e1f4ce1bac8c02f6b5ad5c2" translate="yes" xml:space="preserve">
          <source>Return the number of processing units available on this system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b7aeb0fdcabbda65b8bdf3b6e635df52d5c019" translate="yes" xml:space="preserve">
          <source>Return the number of seconds that a slave SQL server is lagging behind the master, if the host is not a slave it will return -1. If the server is configured to be a slave for replication but slave IO is not running then -2 will be returned. If there was an error connecting to the database or checking the slave status, -3 will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2e83c80e22d73fe5325abedba99d8c35ed0d20" translate="yes" xml:space="preserve">
          <source>Return the optimal 'custom' CPU baseline config for VM's on this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3854ac0468adf76b29562e79cc866947abf988" translate="yes" xml:space="preserve">
          <source>Return the ordered dict yaml loader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbff8d6dfe6b9fa11abe8c8819636d245a1633ea" translate="yes" xml:space="preserve">
          <source>Return the outputter formatted string, removing the ANSI escape sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5173349a590629ce2d646a8a1c6aeadd244bf943" translate="yes" xml:space="preserve">
          <source>Return the password to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f35a2654a49a17864337f00975f0bcb10b73dd" translate="yes" xml:space="preserve">
          <source>Return the password to use for a VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8871acf11f5af7f666c2e6da6bc38a92094c0f06" translate="yes" xml:space="preserve">
          <source>Return the path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c50ba15e235e1874860c35cce66b7347b39874" translate="yes" xml:space="preserve">
          <source>Return the path of the salt module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c83eaceceafc2e5502381a199c001cacb3c1260" translate="yes" xml:space="preserve">
          <source>Return the path that a symlink points to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a43f88ec73361a47185ca261582e6b7eebec18" translate="yes" xml:space="preserve">
          <source>Return the path that a symlink points to If canonicalize is set to True, then it return the final target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0f7dd6dca0cce0e301507121a3dc1c01c44349" translate="yes" xml:space="preserve">
          <source>Return the path to a distribution installed inside a virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3898e3c91168dcf8a6eca760a5c3b066def1fb4a" translate="yes" xml:space="preserve">
          <source>Return the path to a package resource installed inside a virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478b8f635e540e4fb21903f7339d47a0bd1322e9" translate="yes" xml:space="preserve">
          <source>Return the path to the site-packages directory of a virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbf2319e8aef4b2c5a16e3c17583b3b629c56d2" translate="yes" xml:space="preserve">
          <source>Return the percent of time the CPU is busy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067c34cc28fcfffcd3e0a7d31951596a363340de" translate="yes" xml:space="preserve">
          <source>Return the percent of time the CPU spends in each state, e.g. user, system, idle, nice, iowait, irq, softirq.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ae93bc2b36cc8e104c2e71ba2e1b7043ccb90f" translate="yes" xml:space="preserve">
          <source>Return the permissions of a file, to get the permissions of a file on the salt master file server prepend the path with salt://&amp;lt;file on server&amp;gt; otherwise, prepend the file with / for a local file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58018832eae5ab503404b49e8e0dc6d9628af9cb" translate="yes" xml:space="preserve">
          <source>Return the physical device path(s?) according to udev for dev</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f500ad9707b2788d6810edc087fb8c0a4620a59" translate="yes" xml:space="preserve">
          <source>Return the pids for processes matching a pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0274cfac1fd667eb8dea2e880215d9351620a2c8" translate="yes" xml:space="preserve">
          <source>Return the preferred Internet protocol. Either 'ipv4' (default) or 'ipv6'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc855de497ef72da2b2d75ce3cb0c63be1a933c5" translate="yes" xml:space="preserve">
          <source>Return the primary group of the named user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c06202b3310c68e8cdf2a65fa7618f7df166287" translate="yes" xml:space="preserve">
          <source>Return the printout from a previously executed job</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e708fba513995dae592cdb81e3773b15073628d8" translate="yes" xml:space="preserve">
          <source>Return the process data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbcfb7cd093c9771b9460b5d94543b3333fa6ae" translate="yes" xml:space="preserve">
          <source>Return the processor load as a percentage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37602169fbb942599c81bc266407e90229454bd" translate="yes" xml:space="preserve">
          <source>Return the project to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3690111a06031cb9a3cc928b4f289a48dd8260" translate="yes" xml:space="preserve">
          <source>Return the proxy details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff34d3d7b5ca403ea8a29240d191d9ac045231f" translate="yes" xml:space="preserve">
          <source>Return the python executable in use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c21a3c6356fd611882f2c7c25078039bb973db" translate="yes" xml:space="preserve">
          <source>Return the raw pillar data that is currently loaded into the minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e8f76e0d3ae4c5c698d73972529494b30d07ce" translate="yes" xml:space="preserve">
          <source>Return the raw values of the config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530a7f0f8c1354db9309c2fb2b9ab2d49488b27d" translate="yes" xml:space="preserve">
          <source>Return the relative parent directory path symbol for underlying OS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca217cf56f8d2d6d7c4d22974271302013dc8381" translate="yes" xml:space="preserve">
          <source>Return the remote refs for the specified URL by running &lt;code&gt;git ls-remote&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66545a064a77c63c678178f888c4ecbe8f0e470" translate="yes" xml:space="preserve">
          <source>Return the report received from &lt;a href=&quot;#salt.modules.win_pkg.genrepo&quot;&gt;&lt;code&gt;pkg.genrepo&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85953695bde0806d5dda3d8c27970bcc01fcfc7" translate="yes" xml:space="preserve">
          <source>Return the results of a call to &lt;code&gt;system_profiler -xml -detail full SPApplicationsDataType&lt;/code&gt; as a dictionary. Top-level keys of the dictionary are the names of each set of install receipts, since there can be multiple receipts with the same name. Contents of each key are a list of dictionaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4bb3cbe187662a984ae25a36082c9697f75ab0" translate="yes" xml:space="preserve">
          <source>Return the results of a call to &lt;code&gt;system_profiler -xml -detail full SPInstallHistoryDataType&lt;/code&gt; as a dictionary. Top-level keys of the dictionary are the names of each set of install receipts, since there can be multiple receipts with the same name. Contents of each key are a list of dictionaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82a812c54c068a19acf220b53b05a41f803f508" translate="yes" xml:space="preserve">
          <source>Return the results of a highstate (or any other state function that returns data in a compatible format) via an HTML email or HTML file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab4080061633c18eac2034b9a82770376b00d44" translate="yes" xml:space="preserve">
          <source>Return the return information associated with a jid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cc8ccb901f6cbb21aeea9b156553f30e695c76" translate="yes" xml:space="preserve">
          <source>Return the routes for the interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c3f77dd9c735c70425c6e5e5b0e820d51ebd20" translate="yes" xml:space="preserve">
          <source>Return the running services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b723e46dfc57fbcd3046b6b01bf28e4e3fb45b" translate="yes" xml:space="preserve">
          <source>Return the script deployment object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4e662f4a96b4dc2f6302a43ae4e93a309c9ef1" translate="yes" xml:space="preserve">
          <source>Return the script deployment object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecba44e920a993a0f7e16d73263bb3cc0719e11" translate="yes" xml:space="preserve">
          <source>Return the security group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511408e6481dba390641a5b2ad855c209ab6a554" translate="yes" xml:space="preserve">
          <source>Return the selinux mode from the config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736a17758295356b748f72cf356dc11dd45e845e" translate="yes" xml:space="preserve">
          <source>Return the size of of the data disk in MB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2e4dca1f8e0f33390709d42b7db0813a0376eb" translate="yes" xml:space="preserve">
          <source>Return the snapshots owned by the specified owner. Valid values include: self, amazon, &amp;lt;AWS Account ID&amp;gt;. Multiple values must be separated by &quot;,&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676f2b36bd5831d8b224af805a45d353852e7f39" translate="yes" xml:space="preserve">
          <source>Return the ssh_gateway configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20905e6aa82c50ad4556f38e307c0edb4e4f1af1" translate="yes" xml:space="preserve">
          <source>Return the ssh_interface type to connect to. Either 'public_ips' (default) or 'private_ips'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b623c2bfff2f372f12d666a421c1d058a5037d0" translate="yes" xml:space="preserve">
          <source>Return the state of the worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0877d70f6061a6e5b6f70d26e5b991014f9d06bc" translate="yes" xml:space="preserve">
          <source>Return the state request information, if any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3546b4091aeb7d883afac74a7977fa170b0f13" translate="yes" xml:space="preserve">
          <source>Return the status for a service via daemontools, return pid if running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecfcd2a7a230cc5bbb93ecd48dfc198626f7fb53" translate="yes" xml:space="preserve">
          <source>Return the status for a service via dummy, returns a bool whether the service is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1018041fa26289f04fa1ed24aafa80fe3f83fdc9" translate="yes" xml:space="preserve">
          <source>Return the status for a service via rest_sample. If the name contains globbing, a dict mapping service name to True/False values is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d40ea984a56420518cdf6caabfa4563cf465cf7" translate="yes" xml:space="preserve">
          <source>Return the status for a service via s6, return pid if running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f74e867ea582eaec2c7596b8a7e94194db8759" translate="yes" xml:space="preserve">
          <source>Return the status for a service via ssh_sample. If the name contains globbing, a dict mapping service name to True/False values is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b9c82ea284dd076f9373e6e5823d495b29c355" translate="yes" xml:space="preserve">
          <source>Return the status for a service via systemd. If the name contains globbing, a dict mapping service name to True/False values is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3b83cce44d41f1b29ccacae569c2d6a1306ec8" translate="yes" xml:space="preserve">
          <source>Return the status for a service, returns a bool whether the service is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d348400c746760572c0d8b6e945b1f9beca9b3ce" translate="yes" xml:space="preserve">
          <source>Return the status for a service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a394de648c0172068b8d6a613fd71b6d375697" translate="yes" xml:space="preserve">
          <source>Return the status for a service. If the name contains globbing, a dict mapping service name to True/False values is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d9dc91c92f37883cabca2260a725fb85f0e2f1" translate="yes" xml:space="preserve">
          <source>Return the status of a MySQL server using the output from the &lt;code&gt;SHOW
STATUS&lt;/code&gt; query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3452388ddf05ae37daa16f78b4ca75c607bf39" translate="yes" xml:space="preserve">
          <source>Return the status of the lamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20db24e55750d2b47f1a497da5fd94de3665616f" translate="yes" xml:space="preserve">
          <source>Return the status of the named zpool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea4c9c50d02aeac7e89873f90b7eeda685dc6dc" translate="yes" xml:space="preserve">
          <source>Return the stopped services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d80a5170f40b780edaddb11ade0a8e7018bc36" translate="yes" xml:space="preserve">
          <source>Return the system uptime for the machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d79c09d1354698bb5e8d36540252b2b551f42b" translate="yes" xml:space="preserve">
          <source>Return the system version for this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe2f2a72d46ef33e7d84eddea6fbf203955a902" translate="yes" xml:space="preserve">
          <source>Return the tags associated with an EFS instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353348d23f67038e0a275e58ab8f2eaff4a8a580" translate="yes" xml:space="preserve">
          <source>Return the target associated with an alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dede0debc5c967a550c3105fa6169d2b074ff40" translate="yes" xml:space="preserve">
          <source>Return the targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d115bea265db4b163a66526c2a64cb22f0cc3ff" translate="yes" xml:space="preserve">
          <source>Return the targets from a range query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e159722a4b9c21953f188a6d36a22e34fa1feee" translate="yes" xml:space="preserve">
          <source>Return the targets from the Salt Masters' minion cache. All targets and matchers are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b469861f4603cd12c6a0c7dd772e8cad7dd543" translate="yes" xml:space="preserve">
          <source>Return the targets from the ansible inventory_file Default: /etc/salt/roster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4516713f4dc6917a23e255cb074a981ee404460d" translate="yes" xml:space="preserve">
          <source>Return the targets from the flat yaml file, checks opts for location but defaults to /etc/salt/roster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbb3457dd6ba161d926c515d9c4767dc824d7fd" translate="yes" xml:space="preserve">
          <source>Return the template id for a VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2581fa2b36d1abd0eb5b1715fb368329af37bca" translate="yes" xml:space="preserve">
          <source>Return the top data that the minion will use for a highstate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38a782a96a349f83a59d1899e5655555b213f95" translate="yes" xml:space="preserve">
          <source>Return the total number of bytes of physical memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a07daa0045f83e71d5dfab911d2e400a88e449" translate="yes" xml:space="preserve">
          <source>Return the type of disk to use. Either 'HDD' (default) or 'SSD'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e001dd30e04aa4b8411b19655a6d1d3025708860" translate="yes" xml:space="preserve">
          <source>Return the updated configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2881194fc275cd1ea763b0821023419a185341e" translate="yes" xml:space="preserve">
          <source>Return the uptime for this system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0152aa542488f6d4c1d483000dace9127178e03e" translate="yes" xml:space="preserve">
          <source>Return the user that owns a given file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3326a4ca7b17323b08647fe76da44de5ed04ae91" translate="yes" xml:space="preserve">
          <source>Return the user's ssh keys on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d011127de4335957083792363da17644988ff9f" translate="yes" xml:space="preserve">
          <source>Return the username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33dbe983dbfb9021717e30ec8a6194629b9bb61d" translate="yes" xml:space="preserve">
          <source>Return the value for test.foo in the minion configuration file, or return the default value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15fed80893f7f2d28f4058e1b1514f307ae586e" translate="yes" xml:space="preserve">
          <source>Return the value of key at path in vault, or entire secret</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6afab1aaa01665c64cb0946e70f9388ff882b9e" translate="yes" xml:space="preserve">
          <source>Return the value of the variable or None if the variable is not in make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51afc4322315e8dbdd7eeac11f6b33e62903da87" translate="yes" xml:space="preserve">
          <source>Return the value of the variable or None if the variable is not in the make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caab608ab959dca43e25b6ac0de677a4b2b495a8" translate="yes" xml:space="preserve">
          <source>Return the version of Vagrant on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3257ebbf94fbdc12fafba48d915aeceb14f8f7b" translate="yes" xml:space="preserve">
          <source>Return the version of a MS SQL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2d4a8f1fcbaa3eb6920fd275bc0b644468db36" translate="yes" xml:space="preserve">
          <source>Return the version of a MySQL server using the output from the &lt;code&gt;SELECT
VERSION()&lt;/code&gt; query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05dfbbdfe1c1d2c562a6cedef98ea9ade8cacd29" translate="yes" xml:space="preserve">
          <source>Return the version of a Postgres server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd7d2963068f1c6593cc59d8749bcf3986cefc9" translate="yes" xml:space="preserve">
          <source>Return the version of salt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657f600d880dc96527ea7e5d95662177905846e6" translate="yes" xml:space="preserve">
          <source>Return the version of salt on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417e59ba356ebfb68771c5688430f20673531c9b" translate="yes" xml:space="preserve">
          <source>Return the version of the latest installed kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02847b9a32447646c4f201a542ff832ab8fc1a8" translate="yes" xml:space="preserve">
          <source>Return the version of the latest kernel from the package repositories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662f690211c390e3ff7d9883939b0452a26d61b6" translate="yes" xml:space="preserve">
          <source>Return the version of the running kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6d912310b8a74a9ea1ed7553d88c8420de76fd" translate="yes" xml:space="preserve">
          <source>Return the version_comment of a MySQL server using the values available from show variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f428ee7853ff7ecd2ea33bff2677b55657e7a1" translate="yes" xml:space="preserve">
          <source>Return the version_info of salt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e085fa4347f2583671d845a563392ace7e62bb" translate="yes" xml:space="preserve">
          <source>Return the virt profiles for hypervisor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4aedc5d8acec47cd74a30a2450f9c651aecf4d" translate="yes" xml:space="preserve">
          <source>Return the wait_for_timeout for resource provisioning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d11585795dbd7dabe4872451ab47c5ce297c187" translate="yes" xml:space="preserve">
          <source>Return the whole configuration of the network device. By default, it will return all possible configuration sources supported by the network device. At most, there will be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4c84e52da1e6280958aff51c3779db3319c544" translate="yes" xml:space="preserve">
          <source>Return the zeromq version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211fad9fd94f33a471f7fa03f0ed4c8a7a8989f7" translate="yes" xml:space="preserve">
          <source>Return time information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca101980035087002e1e7ed236ec12392ea367dc" translate="yes" xml:space="preserve">
          <source>Return top-level images (those on which no other images depend) which do not have a tag assigned to them. These include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d60f04a99e8774e1f0da664f52289cf7ca90aca" translate="yes" xml:space="preserve">
          <source>Return tpstats info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b90e582f23d4d137193214e02a972baa426722" translate="yes" xml:space="preserve">
          <source>Return true if enabled or false if disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e480eeedd5983ce9650871b58ead6189e9a8e3b5" translate="yes" xml:space="preserve">
          <source>Return true if job is deleted successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc373c587353d49b82fc1b3b69f7fcc2675bed1" translate="yes" xml:space="preserve">
          <source>Return true if job is disabled successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b8f20e2aa3cac7fcc83a590317b85b6075ccd5" translate="yes" xml:space="preserve">
          <source>Return true if job is enabled successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f50ea7deb931b06133f7b3bbb050117fa4d4ef9" translate="yes" xml:space="preserve">
          <source>Return true if running on battery power</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5679c58cb8c896c3f42675d84f41e64d80a806cd" translate="yes" xml:space="preserve">
          <source>Return true if the alias is set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c5abf7956a2fb13d98ec69881ffc7f6a7c9c19" translate="yes" xml:space="preserve">
          <source>Return true if the alias/target is set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd7fb17960a2838b41fc681b3ecdf0633b5cb91" translate="yes" xml:space="preserve">
          <source>Return true if the current machine is licensed correctly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ff687c4e2c2cf28936a669a4806d89d1d303df" translate="yes" xml:space="preserve">
          <source>Return true if the instance is found on a provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f638fef816c5d0f301b9efdcab6b3f8686a328f3" translate="yes" xml:space="preserve">
          <source>Return true if the ipaddress is in the range of the nextavailableip function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b603779f6dd25a94860a609ad28e4188a4fb1164" translate="yes" xml:space="preserve">
          <source>Return true if the key exists in redis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24de966dd5997772b151adde072c6c1492eb66c5" translate="yes" xml:space="preserve">
          <source>Return true if vm is running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cbfebad14b26ba28320d8d57d32f72935014f8" translate="yes" xml:space="preserve">
          <source>Return true is job is deleted successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91c2d627a5cbe5049487b41519f41296167c62e" translate="yes" xml:space="preserve">
          <source>Return true is job is disabled successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d65477b514906eae424ae8643d3d50dcf55875" translate="yes" xml:space="preserve">
          <source>Return true is job is enabled successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8246453c6e901bbc2e4288b43a47949404da068a" translate="yes" xml:space="preserve">
          <source>Return type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92d7c4dba0390c8fa3c4e07ffd12b1cb5f14773" translate="yes" xml:space="preserve">
          <source>Return unified diff of two files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c623cd73db3411dccd360fb3d597f8da8cc1502" translate="yes" xml:space="preserve">
          <source>Return uptime in human readable format if &lt;code&gt;True&lt;/code&gt;, otherwise return seconds. Default is &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7392a09bb06a78e8b09930484b0bbef53fb3a451" translate="yes" xml:space="preserve">
          <source>Return usage information for volumes mounted on this minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d40a8a400328cc1ed0ff266d2daf7e834912141" translate="yes" xml:space="preserve">
          <source>Return usb_devices information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0123ebf49a0565a459d98892ac911eaad95eb9ca" translate="yes" xml:space="preserve">
          <source>Return user information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfad007694533d59abe81aacf142a215c389f4d" translate="yes" xml:space="preserve">
          <source>Return users information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632e26517b823ac52d75f128e46a867774896128" translate="yes" xml:space="preserve">
          <source>Return verbose data structure which includes 'success_list', a list of all sls files and the package names contained within. Default &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e168537d89a2c091228432c749ae38d7c6b4cf7e" translate="yes" xml:space="preserve">
          <source>Return version from firewall-cmd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0eae77eac954c5149035d95aa410434dc09192" translate="yes" xml:space="preserve">
          <source>Return version from hadoop version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f829291ee4083fe8aa3a14071f416c63643138" translate="yes" xml:space="preserve">
          <source>Return version from ipset --version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3f8a85263c657d4939e931777ff8ca6ff61bd5" translate="yes" xml:space="preserve">
          <source>Return version from iptables --version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e6678951c045b5b6411d26976787ce9b8b0484" translate="yes" xml:space="preserve">
          <source>Return version from monit -V</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a1455f210a97ab63ce59e553417250d132dd02" translate="yes" xml:space="preserve">
          <source>Return version from nftables --version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c97b6e24f25b89951fb6c79c85d0de2713eae60" translate="yes" xml:space="preserve">
          <source>Return version of Jenkins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa32e4104a79162875d52c7a7d21b5ff7f9e252" translate="yes" xml:space="preserve">
          <source>Return version of osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d85aa38a7d6ef70892097f437db8561a721938" translate="yes" xml:space="preserve">
          <source>Return version of pysqlite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a57793753d272f6b4e19a57d0e8e47ca8661c5b" translate="yes" xml:space="preserve">
          <source>Return version of sqlite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f97c563598919d8a1a24439fca375dcfeb1f9f6" translate="yes" xml:space="preserve">
          <source>Return what services are available but not enabled to start at boot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d10d60df2b6c4131f2e1acffc1cdec20c4a481b" translate="yes" xml:space="preserve">
          <source>Return what services are available but not enabled to start at boot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e384f578bfd9f3a7bc00f0ae5cad6f29148e3dc1" translate="yes" xml:space="preserve">
          <source>Return what services are set to run on boot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef2cd534256be6a081bda3f19926b478c907cd2" translate="yes" xml:space="preserve">
          <source>Return what services are set to run on boot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25aa639a4cc8049917c63f55081642f8e829739f" translate="yes" xml:space="preserve">
          <source>Return whether fmadm is reporting faults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8441ea16386c5c533e160602ac90ea2b8d432456" translate="yes" xml:space="preserve">
          <source>Return whether the given app id is currently configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f0b43f5ff7596d04bd64f8f996bdd2c8a088e0" translate="yes" xml:space="preserve">
          <source>Return whether the given job is currently configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538f6749861713a276f06713557189f854136be4" translate="yes" xml:space="preserve">
          <source>Return whether the plugin is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a372b765cb1cef42839207164458ca2e298ffeb1" translate="yes" xml:space="preserve">
          <source>Return whether the policy exists based on rabbitmqctl list_policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5af65d4474b30a6c26a876e14731df51d0f574" translate="yes" xml:space="preserve">
          <source>Return whether the specified signature is found in the process tree. This differs slightly from the services states, in that it may refer to a process that is not managed via the init system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573faf674b1f4eaacc2194fe5a7b5be7c1b73daf" translate="yes" xml:space="preserve">
          <source>Return whether the user exists based on rabbitmqctl list_users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825c6fc707d6b252b23fc243bb652d7c5aff844a" translate="yes" xml:space="preserve">
          <source>Return whether the vhost exists based on rabbitmqctl list_vhosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200ad0196aecaad63dfa0d490a76f60e9a2ea570" translate="yes" xml:space="preserve">
          <source>Return whether this service is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a7377a58c3a783ba86166ea8b9c0440ea58e46" translate="yes" xml:space="preserve">
          <source>Return which jails are set to be run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dba7d6fd1427fe401c6e5436d34632ec0c1e445" translate="yes" xml:space="preserve">
          <source>Return which packages own each of the services that are currently enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a62d60927136d7851d043189648db42b1ae5fa" translate="yes" xml:space="preserve">
          <source>Return which platforms are available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7678571bc031efc30414f30396e7966671536fb3" translate="yes" xml:space="preserve">
          <source>Return xattr_where_from information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a47a636c60cf87548c8889f9cbf3633de35542" translate="yes" xml:space="preserve">
          <source>Return xprotect_entries information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc9e4e6c413272cee6d5bcefb98166304a9130e" translate="yes" xml:space="preserve">
          <source>Return xprotect_reports information from osquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b69d3bd7d90f4147b6201b1b3dd2513b6036b95" translate="yes" xml:space="preserve">
          <source>Return, store and update a dns serial for your zone files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b384442ad1dbac9e05c859016766e78190314348" translate="yes" xml:space="preserve">
          <source>Return/control aspects of the grains data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f38e96b7e5b1ba5752edfec5e03b8523932295" translate="yes" xml:space="preserve">
          <source>Return: dict&amp;lt;str,obj&amp;gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9691b041e906248e34dc51170e80d2bd29e8191e" translate="yes" xml:space="preserve">
          <source>Returned keys are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d662936dad812dcea8f32b0db555512390d245" translate="yes" xml:space="preserve">
          <source>Returner configuration is controlled in a standard fashion either via highstate group or an alternatively named group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f240d895df204bb63af260455e072a17605b5961" translate="yes" xml:space="preserve">
          <source>Returner names can be specified as globs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861b16437b2ec99d61446cd7b8c05682da747163" translate="yes" xml:space="preserve">
          <source>Returns (False, False) if the user doesn't have permission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36b62cfe1ef9a4d9dab7488d8c3e96c1a70ca3f" translate="yes" xml:space="preserve">
          <source>Returns (bool success, str message) tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725e43afdd8a1c452b5f5a2ad7b1198e6d2e722b" translate="yes" xml:space="preserve">
          <source>Returns (bool): 'Inheritance' of True/False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a92fb223fe6ce29496fada30d63877ab33c42f6" translate="yes" xml:space="preserve">
          <source>Returns (bool): True if Valid, otherwise False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9a74deeff8302570315e3fad22368d7c21b285" translate="yes" xml:space="preserve">
          <source>Returns (dict): 'Exists' true if the ACE exists, false if it does not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d698e4522a38cee2ea6df485e52d6c7bcfd51a90" translate="yes" xml:space="preserve">
          <source>Returns (dict): A dictionary containing the ACL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11af7166e44e05e647ffd71711d9643d00f85ca2" translate="yes" xml:space="preserve">
          <source>Returns (dict): A dictionary containing the results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279870488221efab0f535b210cefe3fa6bf8f93d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;False&lt;/code&gt; if Salt was unable to cache a file from a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0abd8f87ba9501ca598649622b3eb5806a9871d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if interface is disabled, otherwise &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6104ea5c6c1452cb1821559fc91ae84974769a4b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if interface is enabled, otherwise &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2227ad877509173ac88bc88c5891bddaa4d732af" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if matches otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c584b96a79e8240d65a7e04e914da5494dbafca7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the domain was successfully pointed at the default DNS servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1358c3f58da23f67d3946c0b60ecba166843527" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the hash matches, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cefb5110d619adc213dd401e279e4b6515caf04" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the keyring is present on disk, otherwise &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92878a27933169a8d8e1df78d13b984f8e4eca90" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the mon daemon is in the quorum, otherwise &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1be6862139953832ad6c72a4d530e4bef4025e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the mon daemon is running, otherwise &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecbaea07de6d3bbe37fbabbf74b558d8134f789" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the specified service is available, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665c4f6ebf12fd027b6d59f4542ef5d9a828da3c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the target is a mon node, otherwise &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4164f907f5ce928c77c3de053d5132ea50a004" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the zip archive is password-protected, &lt;code&gt;False&lt;/code&gt; if not. If the specified file is not a ZIP archive, an error will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958e8afcc115e5e296c94fa0f7641f7843d10af7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a57829c7ef8f3b8d3b4091bd7c452022efa0b9a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{'created': True}&lt;/code&gt; if the function was created and &lt;code&gt;{created:
False}&lt;/code&gt; if the function was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43f77c8f7546e64e4c49e99c281f4ac4400f984" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{'updated': True}&lt;/code&gt; if the function was updated, and &lt;code&gt;{'updated': False}&lt;/code&gt; if the function was not updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62972d1129a84ee69ea590133e412e8bd7578579" translate="yes" xml:space="preserve">
          <source>Returns FMRI from partial name. Returns empty string ('') if not found. In case of multiple match, the function returns list of all matched packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c009c60362a21a776869cb1bdc30ed13c31bd7" translate="yes" xml:space="preserve">
          <source>Returns False if no endtime is present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f39b54bd440fa58fb093d915f60574ac2227a27" translate="yes" xml:space="preserve">
          <source>Returns False if the chassis didn't respond, True otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47620e6e6f1828dcd84ed0a0f38f882ba85bbc5a" translate="yes" xml:space="preserve">
          <source>Returns False otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089e196890bf9fcb12516c543c615451c51350c8" translate="yes" xml:space="preserve">
          <source>Returns IP addresses configured on the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176da8097eb35739aa1812ae0f2ddcff90424d40" translate="yes" xml:space="preserve">
          <source>Returns Normalize path, eliminating double slashes, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e97230fe26bd787cd050b80513de79fc386639c" translate="yes" xml:space="preserve">
          <source>Returns True if connection is to be done via a vCenter (no connection is attempted). Check to see if the host is responding when connecting directly via an ESXi host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2184248f4a880e77014e71992ae897ee5d90eb29" translate="yes" xml:space="preserve">
          <source>Returns True if connection success. This uses an aggressive timeout value!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd089565d5011c052a6e14f8ab171391ce4b5c4d" translate="yes" xml:space="preserve">
          <source>Returns True if given IP is within specified subnet, otherwise False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac89fb0a7a0413bd5aa0d3ea8c241046831b60d" translate="yes" xml:space="preserve">
          <source>Returns True if host is within specified subnet, otherwise False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53d228ccc2585b13753a63da53d551f052fa88a" translate="yes" xml:space="preserve">
          <source>Returns True if host is within specified subnet, otherwise False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95563bd53d17ae23b5954ca36d8906be8207df21" translate="yes" xml:space="preserve">
          <source>Returns True if server or Volume do not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ae0efc48cb0c870ed3a0194e9524d17700db4b" translate="yes" xml:space="preserve">
          <source>Returns True if successful. Otherwise False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b8421aaf53ddeb91a4f207870aa61ce3d28196" translate="yes" xml:space="preserve">
          <source>Returns True if the DHCP options record was created and returns False if the DHCP options record was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbad6a818ca90288aaa44cf5d72016870aeeb40" translate="yes" xml:space="preserve">
          <source>Returns True if the DHCP options record were associated and returns False if the DHCP options record was not associated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c203da30c4518d07af2a72d8a1d675a03d7a96ba" translate="yes" xml:space="preserve">
          <source>Returns True if the VPC subnet was created and returns False if the VPC subnet was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95608752080777427af3852a6bb01dc14f3633ac" translate="yes" xml:space="preserve">
          <source>Returns True if the customer gateway ID exists; Returns False otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4250dec128196f3ea3f394b7500f593ac17413b2" translate="yes" xml:space="preserve">
          <source>Returns True if the customer gateway was deleted and returns False if the customer gateway was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bbbec5635fed4c14a2224ef44b664b7f307bd8" translate="yes" xml:space="preserve">
          <source>Returns True if the dhcp option exists; Returns False otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabb3c1fe4798613aaf98c6de32602fcd127721c" translate="yes" xml:space="preserve">
          <source>Returns True if the file is absent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1bb6e2b144653edf2b6d507963b35dd1cfe9fc" translate="yes" xml:space="preserve">
          <source>Returns True if the file is found, and False otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd17d5c6ace73222a0412a08ca1860244c74c28" translate="yes" xml:space="preserve">
          <source>Returns True if the file is present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce95d967652afdda9aad2bd1a1092a3528a4b74" translate="yes" xml:space="preserve">
          <source>Returns True if the github user is in the team with team_name, or False otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0017bbc0c34a7c4779191a69a3559eea65f0893" translate="yes" xml:space="preserve">
          <source>Returns True if the given VPC ID exists and returns False if the given VPC ID does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134aed5b0ae241585ed3342c72a9054c2fc3d4da" translate="yes" xml:space="preserve">
          <source>Returns True if the given alias exists and returns False if the given alias does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b16796711f5530dd3c05c0063cc13b040523dc0" translate="yes" xml:space="preserve">
          <source>Returns True if the given bucket exists and returns False if the given bucket does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06401202c3bed73c8754162ee63c8f9cbb15f7bc" translate="yes" xml:space="preserve">
          <source>Returns True if the given domain exists and returns False if the given function does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93227534dfa5df73339decc6adb687c0d7ab29b" translate="yes" xml:space="preserve">
          <source>Returns True if the given function exists and returns False if the given function does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083da100b371ea5006e5cce0d306f5c02f3325e9" translate="yes" xml:space="preserve">
          <source>Returns True if the given instance with the given id, name, or tags exists; otherwise, False is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e05529639e82096d3534149dd56c44167ff69e" translate="yes" xml:space="preserve">
          <source>Returns True if the given policy exists and returns False if the given policy does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681ffcf4f4c4c0433db452d9d78f4bdb7b12e301" translate="yes" xml:space="preserve">
          <source>Returns True if the given policy version exists and returns False if the given policy version does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4c7dd3e02850ac9fbfba0461479fca2a465cdc" translate="yes" xml:space="preserve">
          <source>Returns True if the given rule exists and returns False if the given rule does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85662477e2e474085546821b725462b134405ca6" translate="yes" xml:space="preserve">
          <source>Returns True if the given thing type exists and returns False if the given thing type does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6106e7a5268ca33c0bed21c5546e697fd78574da" translate="yes" xml:space="preserve">
          <source>Returns True if the given trail exists and returns False if the given trail does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f326861c85fc77796a293f582c144117a385f0d" translate="yes" xml:space="preserve">
          <source>Returns True if the given user cert (password is the cert contents) was issued by the CA and if cert's Common Name is equal to username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928163cdd2770f92df589af0886e41e3af04e64c" translate="yes" xml:space="preserve">
          <source>Returns True if the given username and password authenticate for the given service. Returns False otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18edf5fd88765be6679cf98c941ed5815c395d1c" translate="yes" xml:space="preserve">
          <source>Returns True if the instance was created; otherwise False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e298ba9a72f747fbbacd73757d797a8079271bd" translate="yes" xml:space="preserve">
          <source>Returns True if the internet gateway was deleted and otherwise False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47d0731b15697b9d98caaba1a4b014bfef04823" translate="yes" xml:space="preserve">
          <source>Returns True if the named package is locked, False otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f357d67bbcb2abed10f0eaa7f5aaa4910080e9fe" translate="yes" xml:space="preserve">
          <source>Returns True if the named package was successfully locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138aef3df91ec9429c8424289ad2496402278544" translate="yes" xml:space="preserve">
          <source>Returns True if the named package was successfully unlocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d0ab03bcd6fddcca282b0b4f43b1d468244292" translate="yes" xml:space="preserve">
          <source>Returns True if the network acl exists or returns False if it doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0f3dce7eeb59edc7ba4483edaf8cd81a164e29" translate="yes" xml:space="preserve">
          <source>Returns True if the package is installed. Otherwise returns False. Name can be full or partial FMRI. In case of multiple match from partial FMRI name, it returns True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6176689875d0bab896c42dfd450c7667df0fb160" translate="yes" xml:space="preserve">
          <source>Returns True if the process is running False otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c422728b493fa5fc35fce18fffe5d50705d4e28a" translate="yes" xml:space="preserve">
          <source>Returns True if the subnet exists, otherwise returns False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c87804b372834013437f252e4ff800152b1f15" translate="yes" xml:space="preserve">
          <source>Returns True if the subnet was deleted and returns False if the subnet was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921ddb59de3488e38304dba9cdb673406a9d9277" translate="yes" xml:space="preserve">
          <source>Returns True if the system has a hardware clock capable of being set from software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b2dadf49664a4f0979eaf853088c430ae7bdb8" translate="yes" xml:space="preserve">
          <source>Returns True or False on whether the queue exists in the region</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a23ac38bab287d9cd50e0f3b8c00b91685e7e38" translate="yes" xml:space="preserve">
          <source>Returns a VPC ID if the given subnets are associated with the same VPC ID. Returns False on an error or if the given subnets are associated with different VPC IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756ad38c2cfaa667ae8da224bb3b2de27c969d6f" translate="yes" xml:space="preserve">
          <source>Returns a bool whether or not this node is a KVM hypervisor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e611372a91cd68590adf069ca94f99dfd3639603" translate="yes" xml:space="preserve">
          <source>Returns a bool whether or not this node is a XEN hypervisor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5773bde5a067421e95a95122b911b72a19c7d782" translate="yes" xml:space="preserve">
          <source>Returns a bool whether or not this node is a hypervisor of any kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3427dce7479139d830d8477e135891aa667126" translate="yes" xml:space="preserve">
          <source>Returns a boolean if the verification succeeded or failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adab403539762a8c14c378380cebf5e8e7bf645" translate="yes" xml:space="preserve">
          <source>Returns a boolean value based on whether or not the URI passed has a valid remote file protocol designation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ac2dd5f9437cae1c3add68400ca7afa5d8cdd5" translate="yes" xml:space="preserve">
          <source>Returns a boolean. Returns &lt;code&gt;False&lt;/code&gt; if the user's account balance is less than the provided minimum or &lt;code&gt;True&lt;/code&gt; if greater than the minimum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fb5e68433319e9a6457dc0ff717a088eb60e62" translate="yes" xml:space="preserve">
          <source>Returns a clone spec for cloning from shapshots :rtype vim.vm.CloneSpec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96549ea274f5f3d8635419a97505a1053da17d5b" translate="yes" xml:space="preserve">
          <source>Returns a cluster's ID from the given cluster name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5b541e22eb6f8808ca96e8f1e0e0da9ba1973d" translate="yes" xml:space="preserve">
          <source>Returns a comparison between two snapshots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae15a8c2a1a79ddc6d084cc9148d0a010882f06" translate="yes" xml:space="preserve">
          <source>Returns a config_id for a given linode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec564a652cfa4f209bcd2e1106e7f779c75f3ead" translate="yes" xml:space="preserve">
          <source>Returns a container pid. Throw an exception if the container isn't running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04808a25210a45d7d8fb67965eef433d5f88906f" translate="yes" xml:space="preserve">
          <source>Returns a data store's ID from the given data store name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1525b016919028be502eb6b1ae35b0971f073fa" translate="yes" xml:space="preserve">
          <source>Returns a detailed list of available updates or a summary. If download or install is True the same list will be downloaded and/or installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1c9e4173b539176a31eaa16a14becaec6a6599" translate="yes" xml:space="preserve">
          <source>Returns a detailed summary of package information for provided package names. If no packages are specified, all packages will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1b157ccd7bf76d7a02ec87334baa54f4022b42" translate="yes" xml:space="preserve">
          <source>Returns a detailed view of the LLDP neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e68f78fa99b8104b278716bf0ebd7e33e749d4" translate="yes" xml:space="preserve">
          <source>Returns a dict containing PEM entries in files matching a glob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f642254e6760a551704350b058a66bdfcf5282d9" translate="yes" xml:space="preserve">
          <source>Returns a dict containing a list of updates that match the name if download and install are both set to False. Should usually be a single update, but can return multiple if a partial name is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcd4374534e5684f91fe074b3ee08f768caee9a" translate="yes" xml:space="preserve">
          <source>Returns a dict containing details of a all certificates matching a glob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be0add2c995ac43f6f69b0e5915dd20131f2a77" translate="yes" xml:space="preserve">
          <source>Returns a dict containing details of a certificate and whether the certificate will expire in the specified number of days. Input can be a PEM string or file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44090f68080b3a3caf07c1ad52dad9b87f3100a1" translate="yes" xml:space="preserve">
          <source>Returns a dict containing details of a certificate request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a561ba4dc64d04ae12c9f8bcdc3d500c544ac8" translate="yes" xml:space="preserve">
          <source>Returns a dict containing details of a certificate revocation list. Input can be a PEM string or file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db26f235d59873993c73f05e1f7281a31a3c8ad2" translate="yes" xml:space="preserve">
          <source>Returns a dict containing details of a certificate. Input can be a PEM string or file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7babb51f501fe244d25fe8b247fa60573e5f3404" translate="yes" xml:space="preserve">
          <source>Returns a dict containing either a summary or a list of updates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f271d775033a269f0951638344f94d6c56664e65" translate="yes" xml:space="preserve">
          <source>Returns a dict containing glsa ids with a description, status, and CVEs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df42d71668916142a364eb7f013534da260c668" translate="yes" xml:space="preserve">
          <source>Returns a dict containing limited details of a certificate and whether the certificate has expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf4fc66e721aecb58b1348d19c1a5487c29b653" translate="yes" xml:space="preserve">
          <source>Returns a dict containing the changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f795670811c2fd5d3391e2a36987f25fbaa6f1" translate="yes" xml:space="preserve">
          <source>Returns a dict containing the changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b390792534e9814a60adc66fcc21ae9624ea83" translate="yes" xml:space="preserve">
          <source>Returns a dict containing the cleaned binary packages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865adbccf0b472bc76559c81553fe5eb5028121e" translate="yes" xml:space="preserve">
          <source>Returns a dict containing the cleaned, saved, and deprecated dists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3a06e7ac47606e324c902d972ac82d9e776af8" translate="yes" xml:space="preserve">
          <source>Returns a dict containing the following information for each specified package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3afe126f2b5d7fa27b716c970ac36a2a864957a" translate="yes" xml:space="preserve">
          <source>Returns a dict containing the new fileset(s)/rpm package(s) names and versions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabc332f193bb0ed2ad3a65a89396f3a7b1ff01c" translate="yes" xml:space="preserve">
          <source>Returns a dict containing the new package names and versions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c31ee802fa21acd6cd6d0ad255d2ef68e110e0" translate="yes" xml:space="preserve">
          <source>Returns a dict object of views that should be part of the salt design document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be5aad49fe32cbd950342aa5bed174ec2651f00" translate="yes" xml:space="preserve">
          <source>Returns a dict of dicts containing the package names, and the new and old versions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6d79966c271a8f8f748dcd65cd2e30d634bfc1" translate="yes" xml:space="preserve">
          <source>Returns a dict of dicts containing the state, and package names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369055bb9ab3f37e905a1230ffcf3d1c1dc25cca" translate="yes" xml:space="preserve">
          <source>Returns a dict of poudriere main configuration definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94441bc1452a15e223665c5477fd48e30fb3206" translate="yes" xml:space="preserve">
          <source>Returns a dict representation of an ESX cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b0bf275678ecdd74ca678b91105237e76d3720" translate="yes" xml:space="preserve">
          <source>Returns a dict, with the keys being package databases and the values being the result of the update attempt. Values can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118625801fb70ae51dfcddba98547cc145d608a9" translate="yes" xml:space="preserve">
          <source>Returns a dictionary containing synchronization details of the NTP peers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839cf354c78a6f507a15642c32ca821ed7473136" translate="yes" xml:space="preserve">
          <source>Returns a dictionary containing the changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee2edc1c293df1bd19409f937fec110c8e8c3ea" translate="yes" xml:space="preserve">
          <source>Returns a dictionary containing the old and new names if successful. &lt;code&gt;False&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d057209b5a045fdff440e7c63cac5f44131567" translate="yes" xml:space="preserve">
          <source>Returns a dictionary containing the rendered data structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff4070f4a7840d4580bb4b060bc662d062a035d" translate="yes" xml:space="preserve">
          <source>Returns a dictionary containing the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7848af4e3bcb5ba28a375a8cf720e36e9dde2ba5" translate="yes" xml:space="preserve">
          <source>Returns a dictionary containing the updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36571f9e11d94cb5ba60265f6022cc7247de8c53" translate="yes" xml:space="preserve">
          <source>Returns a dictionary describing any failures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7160712fa3fe357ad6a815887d89b89d0470bc6" translate="yes" xml:space="preserve">
          <source>Returns a dictionary if successful, otherwise &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9ff2f7659efc8f9f120a2954ea9b22bbab1bd6" translate="yes" xml:space="preserve">
          <source>Returns a dictionary indicating the status of what has been done. It is structured in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f936b66e761a38cc6d3a5dfcceabb10c8b8c77" translate="yes" xml:space="preserve">
          <source>Returns a dictionary mapping the each domain name to a boolean denoting whether or not it is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4632f677a3964bd00e1642f43c90985972f79504" translate="yes" xml:space="preserve">
          <source>Returns a dictionary of Docker version information. Equivalent to running the &lt;code&gt;docker version&lt;/code&gt; Docker CLI command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2427f868baf0c20d294129929512d847b8b2309f" translate="yes" xml:space="preserve">
          <source>Returns a dictionary of dictionaries. The keys for the first dictionary will be the interfaces in the devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972b30824e575a7add685daf874c1a6d6955e116" translate="yes" xml:space="preserve">
          <source>Returns a dictionary of interesting properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61308b4bc09e005f5abaf00cdbdf595fd7d33a1e" translate="yes" xml:space="preserve">
          <source>Returns a dictionary of system-wide information. Equivalent to running the &lt;code&gt;docker info&lt;/code&gt; Docker CLI command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182685596fb5c6bde8083b26e2a2aa70dce9c451" translate="yes" xml:space="preserve">
          <source>Returns a dictionary where the keys are as listed below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233342cd42feeea6f31687332fe32905aa484228" translate="yes" xml:space="preserve">
          <source>Returns a dictionary with the org details, or with 'error' and 'status' keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb94dbe26ce24f04b4bfd008fa65b3def2d02e79" translate="yes" xml:space="preserve">
          <source>Returns a dictionary with the raw output of all commands passed as arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4e3be58c915dc7f2dce28881f2667b0588cb40" translate="yes" xml:space="preserve">
          <source>Returns a host's ID from the given host name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026fd835cb63db031d8a70c4d942f6d48334fde4" translate="yes" xml:space="preserve">
          <source>Returns a list containing the matches for a given package name from the portage tree. Note that the specific version of the package will not be provided for packages that have several versions in the portage tree, but rather the name of the package (i.e. &quot;dev-python/paramiko&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b174ff235b1a1fcb19eac220af6a1408df608c2" translate="yes" xml:space="preserve">
          <source>Returns a list containing the removed packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40376573845e4fc9c7b0252122aad4846b32d577" translate="yes" xml:space="preserve">
          <source>Returns a list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abfd3d123ee9ebaeef51804bb103a89a6f59cdd" translate="yes" xml:space="preserve">
          <source>Returns a list of 64 smaller lists of &lt;code&gt;[R, G, B]&lt;/code&gt; pixels representing the the currently displayed image on the LED matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18aac1b86ec3809f0d3aec170bb15e1a6067fb8d" translate="yes" xml:space="preserve">
          <source>Returns a list of IPv4 addresses assigned to the host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40a74520d014df9dbe31aaff174f3f412dab741" translate="yes" xml:space="preserve">
          <source>Returns a list of IPv4 addresses assigned to the host. 127.0.0.1 is ignored, unless 'include_loopback=True' is indicated. If 'interface' is provided, then only IP addresses from that interface will be returned. Providing a CIDR via 'cidr=&quot;10.0.0.0/8&quot;' will return only the addresses which are within that subnet. If 'type' is 'public', then only public addresses will be returned. Ditto for 'type'='private'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe86a8571c59afca33d8548d0e3d9192a8dee221" translate="yes" xml:space="preserve">
          <source>Returns a list of IPv4 subnets to which the host belongs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd776f1603840660ad6b75e51532e8b19afabbb6" translate="yes" xml:space="preserve">
          <source>Returns a list of IPv6 addresses assigned to the host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce3abc1ca01795e78eb5863e4d18322022a2c9a" translate="yes" xml:space="preserve">
          <source>Returns a list of IPv6 addresses assigned to the host. ::1 is ignored, unless 'include_loopback=True' is indicated. If 'interface' is provided, then only IP addresses from that interface will be returned. Providing a CIDR via 'cidr=&quot;2000::/3&quot;' will return only the addresses which are within that subnet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16fa5c6b8f4e1014154652f4b55d68910bf9bad" translate="yes" xml:space="preserve">
          <source>Returns a list of IPv6 subnets to which the host belongs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4f839ea5a7d969df4ac674f6659a3eba62f557" translate="yes" xml:space="preserve">
          <source>Returns a list of Non-SSD disks for the given host or list of host_names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf0f1c828819243404dd491bb2d946580c27211" translate="yes" xml:space="preserve">
          <source>Returns a list of SSDs for the given host or list of host_names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be869a32e3e5c1c3a0dd0f1c3c75bd4825c163ce" translate="yes" xml:space="preserve">
          <source>Returns a list of SSL certificates for a particular user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7c4e82d4bbbeb2355629d2dce9e1aa8866afb5" translate="yes" xml:space="preserve">
          <source>Returns a list of TLDs as objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06915776b070bf75b3e2a62483a5d6bd165ff348" translate="yes" xml:space="preserve">
          <source>Returns a list of VMs for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c769af6ffec013a583fb0f83f5e2ddfcaded64" translate="yes" xml:space="preserve">
          <source>Returns a list of VSAN-eligible disks for a given host or list of host_names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676600499307d831dfcc1fa27f1a63ef07726e46" translate="yes" xml:space="preserve">
          <source>Returns a list of actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4bbf9034d1f640f7a3813e55a2b574e2f827c8d" translate="yes" xml:space="preserve">
          <source>Returns a list of all services on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7e47e5b010722cb37ef8ffcd0b4b26e6f69ef8" translate="yes" xml:space="preserve">
          <source>Returns a list of clusters for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fc0a33c5c84d2c1d524e50daf407c516a9e46e" translate="yes" xml:space="preserve">
          <source>Returns a list of clusters in OpenNebula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfa265243786e7eb67222f0bce444fd605e56e3" translate="yes" xml:space="preserve">
          <source>Returns a list of containers by name. This is different from &lt;a href=&quot;#salt.modules.dockermod.ps_&quot;&gt;&lt;code&gt;docker.ps&lt;/code&gt;&lt;/a&gt; in that &lt;a href=&quot;#salt.modules.dockermod.ps_&quot;&gt;&lt;code&gt;docker.ps&lt;/code&gt;&lt;/a&gt; returns its results organized by container ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3496e4fe5cef06cb8e9e5a12f0948b8bd616e226" translate="yes" xml:space="preserve">
          <source>Returns a list of data stores on OpenNebula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f099cc3caf9d5956613069580d094ac22801e12" translate="yes" xml:space="preserve">
          <source>Returns a list of datacenters for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c81a6ecbf3f8345462de877135aa0e684a3e312" translate="yes" xml:space="preserve">
          <source>Returns a list of datastore clusters for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7405f86b51fdf8926e8c8a5dcc917eeed1b6732a" translate="yes" xml:space="preserve">
          <source>Returns a list of datastores assign the the storage policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa43c04c94d3bd3e2b7adec7e535b2c3d885afd" translate="yes" xml:space="preserve">
          <source>Returns a list of datastores for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40ce56fc5c018a7364f842355e494d88ab84015" translate="yes" xml:space="preserve">
          <source>Returns a list of dict representations of VMware datacenters. Connection is done via the proxy details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dadcc4a081cbd6eba0c563fe4a657b669b5679" translate="yes" xml:space="preserve">
          <source>Returns a list of dict representations of the datastores visible to the proxy object. The list of datastores can be filtered by datastore names, backing disk ids (canonical names) or backing disk scsi addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a7eeebf6833126f37445d7ed010d7567de9a97" translate="yes" xml:space="preserve">
          <source>Returns a list of dict representations of the disks in an ESXi host. The list of disks can be filtered by disk canonical names or scsi addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391384f48d6c90e0c59eb5bdefc0ad29a35fef92" translate="yes" xml:space="preserve">
          <source>Returns a list of dictionaries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671a729881351dd1d32410642331258793c54848" translate="yes" xml:space="preserve">
          <source>Returns a list of dictionaries with interesting properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3c22ca0fadc11722e43c37a21821eef203269f" translate="yes" xml:space="preserve">
          <source>Returns a list of disk group dict representation on an ESXi host. The list of disk groups can be filtered by the cache disks canonical names. If no filtering is applied, all disk groups are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2f33fbcf7c214632d66f236cb14c7aaedf5974" translate="yes" xml:space="preserve">
          <source>Returns a list of distributed virtual switch portgroups. The list can be filtered by the portgroup names or by the DVS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b934307132374bfd19114245294ceca09586a8b" translate="yes" xml:space="preserve">
          <source>Returns a list of distributed virtual switches (DVSs). The list can be filtered by the datacenter or DVS names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ab7788c2a1f9d74de55a2bd8441ce9dab9ffe" translate="yes" xml:space="preserve">
          <source>Returns a list of distributed virtual switches for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef60114d4e0315c80f4c55f76ea3bd0feff09f9" translate="yes" xml:space="preserve">
          <source>Returns a list of domains for the particular user as a list of objects offset by &lt;code&gt;page&lt;/code&gt; length of &lt;code&gt;page_size&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ca1b1feb32be947a2de0603a0f15b64aab0f78" translate="yes" xml:space="preserve">
          <source>Returns a list of existing usage plans, optionally filtered to match a given plan name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04c6a4af602d7179b2db4d59f2abec6e1fd7b71" translate="yes" xml:space="preserve">
          <source>Returns a list of folders for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c792dcf32bd947ecb37ebb6da523b1e33a7b022" translate="yes" xml:space="preserve">
          <source>Returns a list of folders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba66f4072fce86095c9423f1d54ba56fff44828" translate="yes" xml:space="preserve">
          <source>Returns a list of hosts for the the specified VMware environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db19d97cef36a02a670c9b836c0cce3e90a6048" translate="yes" xml:space="preserve">
          <source>Returns a list of hosts for the the specified VMware environment. The list of hosts can be filtered by datacenter name and/or cluster name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb18366032fe8dec775f1eadf48ad7e7b1a8089" translate="yes" xml:space="preserve">
          <source>Returns a list of hosts on OpenNebula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edc109e62c2172fe561df17b8aec44211a9c554" translate="yes" xml:space="preserve">
          <source>Returns a list of items in the SYSTEM path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1f27c753902d04a56f0bdd31a23f4fe3e5283e" translate="yes" xml:space="preserve">
          <source>Returns a list of linodes, keeping only a brief listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba3e95c62437582bad55b3ae7eacb67c7741f6d" translate="yes" xml:space="preserve">
          <source>Returns a list of matched identity pool name's associated roles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907878d96b9114e012e88d6e2a9799db7a9cf557" translate="yes" xml:space="preserve">
          <source>Returns a list of matched identity pool name's pool properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283aad4256c467a8e5fe309d5474c04d8a128e21" translate="yes" xml:space="preserve">
          <source>Returns a list of networks for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a4be49516f7fa68d6e94c9b0c3005c5760e468" translate="yes" xml:space="preserve">
          <source>Returns a list of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc47748d1d80705f93851c6d6423ce77574ec7d0" translate="yes" xml:space="preserve">
          <source>Returns a list of resource pools for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19639afea2637251efa6dd00464a546b1c2e4fe7" translate="yes" xml:space="preserve">
          <source>Returns a list of storage policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f3e745712428ff3075d1fa4bfb5dc6c72895d7" translate="yes" xml:space="preserve">
          <source>Returns a list of subnets to which the host belongs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393b86a4f004d7d34c4f29c297ee08b48d3fbd2a" translate="yes" xml:space="preserve">
          <source>Returns a list of tagged images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5432b0c61cee8798954f2e563704862907841b" translate="yes" xml:space="preserve">
          <source>Returns a list of tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b15ede37aeff075736b6be83c570db2e05fcca4" translate="yes" xml:space="preserve">
          <source>Returns a list of the IDs of layers belonging to the specified image, with the top-most layer (the one correspnding to the passed name) appearing last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e669d451e7e2fb8683c63ab1af899d7065fb419" translate="yes" xml:space="preserve">
          <source>Returns a list of the all topics..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cf9b93274472c59526e04731c1e02e84b370a1" translate="yes" xml:space="preserve">
          <source>Returns a list of the configured NTP servers on the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c38a239ecf67aeab584d4b764123ac932876b77" translate="yes" xml:space="preserve">
          <source>Returns a list of the metadata of all capabilities in the vCenter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f7361f7a58132af22eb18c96de4d93810dba02" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all available plugins (enabled and disabled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0827ad290b619d9d7d18f7bd106fb7f1a48e46c0" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of the enabled plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a2490e2806b9cfadd1fe36cb689879be7c56be" translate="yes" xml:space="preserve">
          <source>Returns a list of triggers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0d3dac8b0834bfef82b1cec1cbcd69484e10ab" translate="yes" xml:space="preserve">
          <source>Returns a list of vApps for the the specified host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d6fa9316ac54fa7213226fec8182437b4cfec3" translate="yes" xml:space="preserve">
          <source>Returns a list of worker processes that correspond to the passed application pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a456945641d30b1a50bacfcb4a671909aeb346" translate="yes" xml:space="preserve">
          <source>Returns a list the NTP peers configured on the network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8242c00df62be8eb0429db0451345ffa24965f9" translate="yes" xml:space="preserve">
          <source>Returns a pretty dictionary meant for command line output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c139f47be347a65c13566cb7357bf6070ba65e" translate="yes" xml:space="preserve">
          <source>Returns a properly formatted PEM string from the input text fixing any whitespace or line-break issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc608bcca5ca666b5456054eded8242dad3ba14c" translate="yes" xml:space="preserve">
          <source>Returns a random integer number between the start and end number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db05b73b4947bf6c4eb0626e49eb2c5da2dce51e" translate="yes" xml:space="preserve">
          <source>Returns a random number within a range. Optional hash argument can be any hashable object. If hash is omitted or None, the id of the minion is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc2f1e2346dcafd4b7c95cae827df422d023696" translate="yes" xml:space="preserve">
          <source>Returns a random string of the specified length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec715e51c5c2100df31c85982463c1ca5ebd4ea1" translate="yes" xml:space="preserve">
          <source>Returns a security group's ID from the given security group name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaa8d73966b5de6a1878e62d288c29a66facefb" translate="yes" xml:space="preserve">
          <source>Returns a service instance to the proxied endpoint (vCenter/ESXi host).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049e9c64a3d54bd21f261c2d8b5a3f95bff3ba5e" translate="yes" xml:space="preserve">
          <source>Returns a single dictionary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426b34185935ea7673eda5be20f5866b6f3d0e78" translate="yes" xml:space="preserve">
          <source>Returns a string containing the public key in PEM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf08ca1369ec1888368fb08fdb5da9dfed0829d" translate="yes" xml:space="preserve">
          <source>Returns a string representing the package version or an empty dict if not installed. If more than one package name is specified, a dict of name/version pairs is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7901f7cb1f34e5e09d8097149275dc455a8ce1" translate="yes" xml:space="preserve">
          <source>Returns a string representing the package version or an empty string if not installed. If more than one package name is specified, a dict of name/version pairs is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e397dd110e3c498fe6d57821b4753d0a3bb2ba7e" translate="yes" xml:space="preserve">
          <source>Returns a template's ID from the given template name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0774189b566f52fddced93806b38e9ff56f88ede" translate="yes" xml:space="preserve">
          <source>Returns a template's image from the given template name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570974363c77f007efaf6ba3c9bd74636cd2178b" translate="yes" xml:space="preserve">
          <source>Returns a tuple of (target, cmdline,) for the response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f0c7c0fd0b201208dc227ba2626c8b617e0132" translate="yes" xml:space="preserve">
          <source>Returns a version if the package is installed, else returns an empty string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe479e800abe1f5a258ce3c3352f41504c58549" translate="yes" xml:space="preserve">
          <source>Returns a virtual machine's ID from the given virtual machine's name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bc40b112ef42e72be5bdf5c174a3f48f063be8" translate="yes" xml:space="preserve">
          <source>Returns a virtual network's ID from the given virtual network's name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a443445605d339950704e58c5160a3d4b45fa83" translate="yes" xml:space="preserve">
          <source>Returns all available packages. Optionally, package names (and name globs) can be passed and the results will be filtered to packages matching those names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75243b0635642cb45ea34a3a45f8bd9f899a78a3" translate="yes" xml:space="preserve">
          <source>Returns all available packages. Optionally, package names (and name globs) can be passed and the results will be filtered to packages matching those names. This is recommended as it speeds up the function considerably.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ea7655e9e70e3a9a1f40fd0d12102d62acb51c" translate="yes" xml:space="preserve">
          <source>Returns all rest apis in the defined region. If optional parameter name is included, returns all rest apis matching the name in the defined region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97ade2a337c3207da9e7e87324bc14fe82587d9" translate="yes" xml:space="preserve">
          <source>Returns all user-defined metadata, standard HTTP properties, and system properties for the blob.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12045169747e534e76fba542ede0c2ba12ca31c0" translate="yes" xml:space="preserve">
          <source>Returns an empty string if the SELinux policy for a given filespec is applied, returns string with differences in policy and actual situation otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d307cf078c9b1ea68ba6a21a82aae969b19a97c4" translate="yes" xml:space="preserve">
          <source>Returns an image's ID from the given image name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433ed9228bf0a0616fd52b7e9bf7039ff87c60fb" translate="yes" xml:space="preserve">
          <source>Returns any VPC peering connection id(s) for the given VPC peering connection name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7506558535398236337fc5e96310211f4d14716c" translate="yes" xml:space="preserve">
          <source>Returns bridges interfaces along with enslaved physical interfaces. If no interface is given, all bridges are shown, else only the specified bridge values are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1076c0293e1cf5870d77cc27af0f2665d6df6c18" translate="yes" xml:space="preserve">
          <source>Returns certificate information from Amazon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6849198f561a8041e4c5c52fa15cbf8ee4270f11" translate="yes" xml:space="preserve">
          <source>Returns characteristics of the network device. :return: a dictionary with the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1593c5515d41d03eb9e6496293a9a5238f4432c2" translate="yes" xml:space="preserve">
          <source>Returns counter information related to the load of the machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a3b9960894e6a88c5cb6ab7d6bab1b26d1cf49" translate="yes" xml:space="preserve">
          <source>Returns data about the instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a6d1667c23e38214ce1457569ccf8e4dfd7af3" translate="yes" xml:space="preserve">
          <source>Returns data for a single named Linode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f50a8addcf35140d8d003a20bbbeb8bbe56ea5" translate="yes" xml:space="preserve">
          <source>Returns details about given interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e4df8b4d7164007aeac4b5b9aa0155ee6a330c" translate="yes" xml:space="preserve">
          <source>Returns details about the transaction upon completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5328c4fab7ff614b8f202fe4e96ede433031afad" translate="yes" xml:space="preserve">
          <source>Returns details for the named update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d322a070d8cf6e8f7a39f8d9406684c284166e62" translate="yes" xml:space="preserve">
          <source>Returns details of the interfaces on the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae02e7b383bf7ed08b93388d64697e08c3bd5129" translate="yes" xml:space="preserve">
          <source>Returns dictionary of alarm information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c853cf44c4405aac1d605dba6875f1ff3294f7" translate="yes" xml:space="preserve">
          <source>Returns dictionary of permissions, by statement ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014047045112b168fcf909851b7cc15b7b0d62d0" translate="yes" xml:space="preserve">
          <source>Returns dictionary or list of dictionaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1916ec38c170ed7250c2d033079140638baf48dc" translate="yes" xml:space="preserve">
          <source>Returns extra config parameters from a virtual machine advanced config list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce8056cb77205e002ff1e8ae75f11a367fc5ad9" translate="yes" xml:space="preserve">
          <source>Returns failure and changes is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b6f41cb35ad2b8777db663bc92c8edb0b9d849" translate="yes" xml:space="preserve">
          <source>Returns failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff01120e667075e7e46ffeea8c5141db7f515aa" translate="yes" xml:space="preserve">
          <source>Returns information about a container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379d450543f1f129039eed16d645f190931c4d21" translate="yes" xml:space="preserve">
          <source>Returns information about a container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc2873646b0405b1a2c6223cf2716279f3fa864" translate="yes" xml:space="preserve">
          <source>Returns information about a specified policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ad1e76ad15216b87fbc29236b884b5117bda42" translate="yes" xml:space="preserve">
          <source>Returns information about the Docker containers on the Minion. Equivalent to running the &lt;code&gt;docker ps&lt;/code&gt; Docker CLI command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be056d285129951a82f1fda30f7bacd29c1512c" translate="yes" xml:space="preserve">
          <source>Returns information about the Docker images on the Minion. Equivalent to running the &lt;code&gt;docker images&lt;/code&gt; Docker CLI command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a517bf7d9d941254205bc2485aa65b2c7426e3" translate="yes" xml:space="preserve">
          <source>Returns information about the requested domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a2eb48a80acb01a9c213032cd0dc1658895e2b" translate="yes" xml:space="preserve">
          <source>Returns information for all issues in a given repository, based on the search options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812bb13046c8e4e603cbb545f53c8cd3b788deb4" translate="yes" xml:space="preserve">
          <source>Returns information for all pull requests in a given repository, based on the search options provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a684bee19ad34339ffdc138c9612859ee8b19f09" translate="yes" xml:space="preserve">
          <source>Returns information on worktrees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736233625c838751042d283e7d2e45201888b423" translate="yes" xml:space="preserve">
          <source>Returns interfaces attached to a bridge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df979c7c3a86b243f6ef592771a5a7fc02104788" translate="yes" xml:space="preserve">
          <source>Returns interfaces for a specific device using arbitrary netbox filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4d7efb874493aa32d8510c3d9fa5c31b6745cd" translate="yes" xml:space="preserve">
          <source>Returns list of buckets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e014e79793fe3ee779a62a9c3ef91211c848098" translate="yes" xml:space="preserve">
          <source>Returns list of function versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2ecd75ccb245b255829dd181a9a0fe7a28df3c" translate="yes" xml:space="preserve">
          <source>Returns list of policies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9011bd7a2d1b3056ea392ea9c03dc36317bf3a" translate="yes" xml:space="preserve">
          <source>Returns list of rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42623d302dd70b467452178687266c501b5df268" translate="yes" xml:space="preserve">
          <source>Returns list of trails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed4642ad2edf0779a6f8841ede1425ffe206de2" translate="yes" xml:space="preserve">
          <source>Returns local user information, excluding the password</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac3f9140e9d398ecb439ebfc2a0d38e6d76abd8" translate="yes" xml:space="preserve">
          <source>Returns names and descriptions of the schema &quot;image&quot;'s properties for this profile's instance of glance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53347c76cf5d61d0038f77a7a62ce1ea749ac40c" translate="yes" xml:space="preserve">
          <source>Returns none if first unnamed value is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cffc8529a46179b88c3f77ed4b35692055df81d" translate="yes" xml:space="preserve">
          <source>Returns number of fields of a hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7692e14ef8780f4b66a7fda07a185360d6f669" translate="yes" xml:space="preserve">
          <source>Returns or sets the currently defined default python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127ed0feee6a1c9ad0e26b69e36c55cdff8d3957" translate="yes" xml:space="preserve">
          <source>Returns or sets the currently defined default ruby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2765ce1b6d69025b24e4edfb9fef430d834060f7" translate="yes" xml:space="preserve">
          <source>Returns port mapping information for a given container. Equivalent to running the &lt;code&gt;docker port&lt;/code&gt; Docker CLI command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834a6e8177ecd2ec3a672a445188443329494db5" translate="yes" xml:space="preserve">
          <source>Returns public and private IP addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a570df65b34cf83d8a7545d6256056bca6807ce7" translate="yes" xml:space="preserve">
          <source>Returns queue details of specified virtual host. This command will consider first parameter as the vhost name and rest will be treated as queueinfoitem. For getting details on vhost &lt;code&gt;/&lt;/code&gt;, use &lt;a href=&quot;#salt.modules.rabbitmq.list_queues&quot;&gt;&lt;code&gt;list_queues&lt;/code&gt;&lt;/a&gt; instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba1017f256d9b2ef9278fc62e586c8cca0c7dcc" translate="yes" xml:space="preserve">
          <source>Returns queue details of the / virtual host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9cf50fe700a29e34c5d6abf68ddf1e63e38725" translate="yes" xml:space="preserve">
          <source>Returns recursively the complete tree of a node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6159cf3e90b6e13c0a2a230d5998c2758b7ce84b" translate="yes" xml:space="preserve">
          <source>Returns requested Server Density authentication value from pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81263734717f275d023d4b9b0078f3b93bb8d769" translate="yes" xml:space="preserve">
          <source>Returns returns a list of package names with version strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf3f9b943356faa960d959f6f0d9e6424e556df" translate="yes" xml:space="preserve">
          <source>Returns rsync version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71515f74b8333ad6d2c1f73841b383b870df861" translate="yes" xml:space="preserve">
          <source>Returns set True if successful, set False if unsuccessful with the associated errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1708f16b176febe96d3a456ecf1841bad812ff57" translate="yes" xml:space="preserve">
          <source>Returns statistics about the locate database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0156e58d285b36bad37a2bb5dd0a6a232f0f68" translate="yes" xml:space="preserve">
          <source>Returns statistics from the running syslog-ng instance. If syslog_ng_sbin_dir is specified, it is added to the PATH during the execution of the command syslog-ng-ctl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59e1c28683b9b7e9086df4c6e95508b328213d3" translate="yes" xml:space="preserve">
          <source>Returns successful and changes is not empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a84b2ca6ff6424efc06c2c2ed4e25940d52504" translate="yes" xml:space="preserve">
          <source>Returns successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f50763787ec4bbf897c6e7622d098d79caa5373" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;http://git-scm.com/docs/git-describe&quot;&gt;git-describe(1)&lt;/a&gt; string (or the SHA1 hash if there are no tags) for the given revision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cb9a17ebf10988146596be5659e5907c24d237" translate="yes" xml:space="preserve">
          <source>Returns the API version derived from endpoint's response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff7674886f44bcf8f6ff1970cb1ca4dc2a46370" translate="yes" xml:space="preserve">
          <source>Returns the CIDR of a subnet based on an IP address (CIDR notation supported) and optional netmask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfcf0fa4133e59e67b13408f9a8ac3be2b49c8a" translate="yes" xml:space="preserve">
          <source>Returns the ImageId to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296f4f6e68223874c1bfe2e6dda42443491c5ba4" translate="yes" xml:space="preserve">
          <source>Returns the Linode Datacenter ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7e3fe7966eb28c2203803a1bc18642589b1b0b" translate="yes" xml:space="preserve">
          <source>Returns the Linode ID for a VM from the provided name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56091d27e31326dddcf1e75882ae0c5803fcd4e9" translate="yes" xml:space="preserve">
          <source>Returns the Linode Plan ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a29c37d1d513b2f0c2e08766d5fd3af8f2a6ea1" translate="yes" xml:space="preserve">
          <source>Returns the MAC Address Table on the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a4895acee7a7a9c4f1ae5e1bc512bf21e7f205" translate="yes" xml:space="preserve">
          <source>Returns the OS version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7967178c1182e3b44ba78e8887e912cf591589" translate="yes" xml:space="preserve">
          <source>Returns the OpenNebula version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d8bc0a2f0fa754e4add0635bdb15a098f495f4" translate="yes" xml:space="preserve">
          <source>Returns the Operating System name running on the network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4204091968b4f4eae111a37ebe42b36906bb815b" translate="yes" xml:space="preserve">
          <source>Returns the PID of a container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d3751ebf0647d9f881b82746607701af3a1da8" translate="yes" xml:space="preserve">
          <source>Returns the PlacementGroup to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91398b5a17f703f50fe7a844807bc1ab72980832" translate="yes" xml:space="preserve">
          <source>Returns the SHA1 hash of a given identifier (hash, branch, tag, HEAD, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6feef42636519527c3dcd90bf7b20de4b5e37d1f" translate="yes" xml:space="preserve">
          <source>Returns the SNMP configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf39a6e786ea006bfc6c2b78721dde6b010843e7" translate="yes" xml:space="preserve">
          <source>Returns the SecurityGroupId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c931f4f0c90f81418dd38d0fa5b3401f670a1c" translate="yes" xml:space="preserve">
          <source>Returns the SubnetId to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd838bd59e978df715f10b0cfc8ffba83330c96" translate="yes" xml:space="preserve">
          <source>Returns the Tenancy to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17346a3eccd9c35e3b2f167aa03c1bf998f4338c" translate="yes" xml:space="preserve">
          <source>Returns the VM's size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ade59a47db396118bc7106150d320ffe42b395" translate="yes" xml:space="preserve">
          <source>Returns the XML for a given vm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876dff5ad2bf9b602fb1ada640ce8369f36f7f92" translate="yes" xml:space="preserve">
          <source>Returns the alive status of the connection layer. The output is a dictionary under the usual dictionary output of the NAPALM modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e950ab4d55948509f467626f733d3739bd5a6cd8" translate="yes" xml:space="preserve">
          <source>Returns the amount of memory that salt is using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4389dc45694afc7acc96c6f679e53f278185d1d6" translate="yes" xml:space="preserve">
          <source>Returns the amoutn of swap space to be used in MB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab34e8d32f9bb946799fd1497dfe149fcf6c4ff" translate="yes" xml:space="preserve">
          <source>Returns the available modules. If syslog_ng_sbin_dir is specified, it is added to the PATH during the execution of the command syslog-ng.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0172338ca8e9c2d6caa5dfd7543d1719688ff5b8" translate="yes" xml:space="preserve">
          <source>Returns the bit length of a private key in PEM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682f311cdc5a12ad83cb9359c9f0aa546133fabe" translate="yes" xml:space="preserve">
          <source>Returns the bridge to which the interfaces are bond to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed28178b3f214708b32f2800d0585b286f69016" translate="yes" xml:space="preserve">
          <source>Returns the changes applied by a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d0074391064ae7eab60953390df6c563599bf1" translate="yes" xml:space="preserve">
          <source>Returns the changes to the repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7f5e162701120244ba4a26cbb6ea4afc169a7d" translate="yes" xml:space="preserve">
          <source>Returns the chassis serial number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc4163f59146e7a4a37a7f660985a5c550d6913" translate="yes" xml:space="preserve">
          <source>Returns the checks in the state provided on the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da3e91ebe1211e4b94365447db7ddc99058aa59" translate="yes" xml:space="preserve">
          <source>Returns the checks the local agent is managing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493c3a807bc670a98f257e76b023c7fafd06ff44" translate="yes" xml:space="preserve">
          <source>Returns the clone spec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c594d6fab1bea5d42f45a4e1e8a5ca2e11e8215f" translate="yes" xml:space="preserve">
          <source>Returns the color of a single pixel on the LED matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf050f9c68fb4016b3b7b652fd2ae50f6e17636" translate="yes" xml:space="preserve">
          <source>Returns the compiled pillar either of a specific minion or just the global available pillars. This function assumes that no minion has the id &lt;code&gt;*&lt;/code&gt;. Function also accepts pillarenv as attribute in order to limit to a specific pillar branch of git</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7f8e607e2e985e000017765a241584ec90c62f" translate="yes" xml:space="preserve">
          <source>Returns the compiled top data for pillar for a specific minion. If no minion is specified, we use the first minion we find.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e806a936b29699ff2dd519adf8fbe65c87fa706" translate="yes" xml:space="preserve">
          <source>Returns the complete interfaces list of the network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0953fe0be5d1b4802fba1e1e5b6c6151e5764f5d" translate="yes" xml:space="preserve">
          <source>Returns the computer description if found. Otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8078d8156f7db35504f4d7db594d429ed96a03" translate="yes" xml:space="preserve">
          <source>Returns the computer name if found. Otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f377f127a37d89d6db2922e03eb2f0be4c5cec9c" translate="yes" xml:space="preserve">
          <source>Returns the configuration directory, which contains syslog-ng.conf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad297eaeb2b7026d2ed3e989d6fb643caa448dc1" translate="yes" xml:space="preserve">
          <source>Returns the configuration of the RPM probes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68b9968fa4b5eff7ef4224b3c90fdec19240749" translate="yes" xml:space="preserve">
          <source>Returns the configuration of the users on the device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7182a56544a2ad70a01ff7bcc26960b3f0f464f7" translate="yes" xml:space="preserve">
          <source>Returns the connection arguments of the Proxy Minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f572cb09c84245c398752a0281a0656f36f9ef" translate="yes" xml:space="preserve">
          <source>Returns the containers and images, if any, which depend on the given image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4607dcec62a0843e177bbeb04685395786e963" translate="yes" xml:space="preserve">
          <source>Returns the contents of the rsync config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3822fc7e5d3beaec3b92703215223b7dd92d196c" translate="yes" xml:space="preserve">
          <source>Returns the created identity pool if successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074888207e2734e79229840adb09931791dce16a" translate="yes" xml:space="preserve">
          <source>Returns the current Raft leader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be74af7c5c2e93da4dd7aaf2f13249b8477e7895" translate="yes" xml:space="preserve">
          <source>Returns the current Raft peer set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8240f073fe4697c5fbd0921adf3b616bcbd45dca" translate="yes" xml:space="preserve">
          <source>Returns the current branch name of a local checkout. If HEAD is detached, return the SHA1 of the revision which is currently checked out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf69bcec9a368c4a13c6ea6586cbad08c4507d7" translate="yes" xml:space="preserve">
          <source>Returns the current domains that can bypass the proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd33c668ab65ddd7f2b3a471f38fce8589e3496" translate="yes" xml:space="preserve">
          <source>Returns the current entry in the SELinux policy list as a dictionary. Returns None if no exact match was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5aa53c7fac8884cc155195d35e55b06171b9a8" translate="yes" xml:space="preserve">
          <source>Returns the current ftp proxy settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8971d1bcc1ebab1ca766a188abf8b607c1b75295" translate="yes" xml:space="preserve">
          <source>Returns the current http proxy settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8d3e4dda6d2e2b8748c6061c8b96ee68fb48b0" translate="yes" xml:space="preserve">
          <source>Returns the current https proxy settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bca373323c07cdb1011342e67ead0fb7d705589" translate="yes" xml:space="preserve">
          <source>Returns the customer gateway id if the customer gateway was created and returns False if the customer gateway was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296ae75b68b8ab733ef2109c849462c720987783" translate="yes" xml:space="preserve">
          <source>Returns the default hash used for unset passwords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ea7337156c4f7d3ee9e20c6358c150c4e613cc" translate="yes" xml:space="preserve">
          <source>Returns the default vsan storage policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451c8ea043664595e3ab51531131b211484a4016" translate="yes" xml:space="preserve">
          <source>Returns the details of a names signing policy, including the text of the public key that will be used to sign it. Does not return the private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ec1961cd0bad6e55000c83b6a88864ab490b66" translate="yes" xml:space="preserve">
          <source>Returns the diff after the configuration commands are loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41eedd73e3fe956070c981bd512fce44586665ab" translate="yes" xml:space="preserve">
          <source>Returns the difference between the candidate and the current configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d79dffbd5108b47e8aa22a4f84ed7e5b93e5542" translate="yes" xml:space="preserve">
          <source>Returns the difference between the running config and the candidate config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e63fd5547272f5f4d738a4c54e039acc3400e5" translate="yes" xml:space="preserve">
          <source>Returns the difference between two configuration entities structured according to the YANG model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa0bf3e75ef89ff54310e4a3d67f6247e7e8e65" translate="yes" xml:space="preserve">
          <source>Returns the differences between two containers' networks. When a network is only present one of the two containers, that network's diff will simply be represented with &lt;code&gt;True&lt;/code&gt; for the side of the diff in which the network is present) and &lt;code&gt;False&lt;/code&gt; for the side of the diff in which the network is absent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7258054d77d13643d0b3cd6a807c18f893c0d517" translate="yes" xml:space="preserve">
          <source>Returns the differences between two snapshots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b77028e0aefa0f8c839f407b5d9849713778d3" translate="yes" xml:space="preserve">
          <source>Returns the directory component of a pathname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fa8e9830c9adca150799974fbf88523687f728" translate="yes" xml:space="preserve">
          <source>Returns the directory of the pillars (repo cache + branch + root)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9deac7fba0ad3a760ca3695ffc39613c39da751" translate="yes" xml:space="preserve">
          <source>Returns the distribution ID for a VM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4a03f4fe0ddecf6e2dac0fc09fa3253d35e899" translate="yes" xml:space="preserve">
          <source>Returns the environment of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb9be5a71f590d2084199e931839b49fcc23521" translate="yes" xml:space="preserve">
          <source>Returns the existing package metadata db. Will create it, if it does not exist, however will not refresh it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59031842ba08531a5f43aab8631310bc998f47e4" translate="yes" xml:space="preserve">
          <source>Returns the files changed between two snapshots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b8bdb1cd756e28f018b535f9a645a9b94c27bf" translate="yes" xml:space="preserve">
          <source>Returns the final component of a pathname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1993e95ae53978b23cc7883b03c99c91921063" translate="yes" xml:space="preserve">
          <source>Returns the first command found in a list of commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08319d13eda6f4a2c7192d249c33baf62d4d7f2" translate="yes" xml:space="preserve">
          <source>Returns the first unnamed value (Default) as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3c833fa3d1a28b1038f8baaa045122d1bf153f" translate="yes" xml:space="preserve">
          <source>Returns the following information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671beea3ed881bc9f9612ad964899850e7b18c20" translate="yes" xml:space="preserve">
          <source>Returns the full ARN for a given topic name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59aefeb1aea131c351abdcfe8a1865901e15e47b" translate="yes" xml:space="preserve">
          <source>Returns the glusterfs volume op-version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f1f7c6b6502663439754fa3c0d0eac09646383" translate="yes" xml:space="preserve">
          <source>Returns the glusterfs volume's max op-version value Requires Glusterfs version &amp;gt; 3.9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6349e1ff793deedb1f4ec24a407be23511a8d9" translate="yes" xml:space="preserve">
          <source>Returns the hash of a certificate in the keychain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2881df38fc7c9bd7f753d7314f2cf6dd6d14ed" translate="yes" xml:space="preserve">
          <source>Returns the host cache configuration on the proxy host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dc99daf6508f9fa5d09cda747a57a3638f62b8" translate="yes" xml:space="preserve">
          <source>Returns the host for a container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a251fcc204b72685b284a0cda83ad0a5ac56295d" translate="yes" xml:space="preserve">
          <source>Returns the hostname of the windows minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4894ea6efc14b41d3f23500b696a6d691462c1ed" translate="yes" xml:space="preserve">
          <source>Returns the information on vnc for a given vm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5dde7da5c10034760d7b6cc952f5dc2046eabd" translate="yes" xml:space="preserve">
          <source>Returns the internet gateway id if the internet gateway was created and returns False if the internet gateways was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ad0beaf3f43c61f39b711cc84783fed13beb70" translate="yes" xml:space="preserve">
          <source>Returns the list of service's name that are aliased and their alias path(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c8f565ab300ea00810ad70da7ad320abbd8a44" translate="yes" xml:space="preserve">
          <source>Returns the list of states that will be applied on highstate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c44fffef794c2204158faea7570a953b54b3fa" translate="yes" xml:space="preserve">
          <source>Returns the local node configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c24e1715dc5755ff645ccf74d81db838a260c7" translate="yes" xml:space="preserve">
          <source>Returns the location of the new cached file on the Minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5638b0bd9d638662956588e8c9704c02f7fb2d9d" translate="yes" xml:space="preserve">
          <source>Returns the logs for the container. An interface to docker-py's &lt;a href=&quot;http://docker-py.readthedocs.io/en/stable/api.html#docker.api.container.ContainerApiMixin.logs&quot;&gt;logs()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b787e75dfbd5f135b224dad9fbacd794fc5d64a3" translate="yes" xml:space="preserve">
          <source>Returns the long hash of a given identifier (hash, branch, tag, HEAD, etc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd1360ab2dee24af8687866393319cc54398ed0" translate="yes" xml:space="preserve">
          <source>Returns the lstat attributes for the given file or dir. Does not support symbolic links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3759d76265934fd946a663ed8e63ef3f534fe79" translate="yes" xml:space="preserve">
          <source>Returns the machine's bridges list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b104098f912a704c8d7931dd8392ff1e70fd445" translate="yes" xml:space="preserve">
          <source>Returns the members as seen by the local serf agent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f444a79e81a99be5af74dfeb904f6c1db5c872" translate="yes" xml:space="preserve">
          <source>Returns the monitoring records for a given virtual machine. A VM name must be supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47929d1997fe0f0364291c4df4287b60da367138" translate="yes" xml:space="preserve">
          <source>Returns the name of the hypervisor running on this node or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef1e24e3c789c0c8f5b06495ac3e4510ec543ae" translate="yes" xml:space="preserve">
          <source>Returns the name of this proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6095c1a8e23e8a10a5b76b704a0548d47814c208" translate="yes" xml:space="preserve">
          <source>Returns the nat gateway id if the nat gateway was created and returns False if the nat gateway was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fe3fb8a8f289532ed326cd1e36f62b7b4a4c0b" translate="yes" xml:space="preserve">
          <source>Returns the network acl id if successful, otherwise returns False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485ed1fd9855f427ffe1f5f8e32b74cb049c2a24" translate="yes" xml:space="preserve">
          <source>Returns the network device chassis model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db23388abae050f7a86f1e7634c2d914c6dc373" translate="yes" xml:space="preserve">
          <source>Returns the network device object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3091c99cb5b5b5cdb65de1efdfa6dd709a396546" translate="yes" xml:space="preserve">
          <source>Returns the network device vendor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c47d6501bee5db3f90fdd152f9158dd333c972" translate="yes" xml:space="preserve">
          <source>Returns the number of the created snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe63b7d65feabdc36ff8f77a5f8957918e24bbc4" translate="yes" xml:space="preserve">
          <source>Returns the path of an executable available on the minion, None otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4e8ed4be869a002b474fff097f824874fa7883" translate="yes" xml:space="preserve">
          <source>Returns the pending name if pending restart. Returns &lt;code&gt;None&lt;/code&gt; if not pending restart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d68991cf05c53f0281e0eb20b1c22e3bffd8be" translate="yes" xml:space="preserve">
          <source>Returns the proxy type retrieved either from the pillar of from the proxy minion's config. Returns &lt;code&gt;&amp;lt;undefined&amp;gt;&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0631944e8e48cf545573f6add9fc157a878ef984" translate="yes" xml:space="preserve">
          <source>Returns the result of the call to semanage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a830a7e2f924836e4b208e46d8aaef47eeb413ff" translate="yes" xml:space="preserve">
          <source>Returns the reversed IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a993c482e6de77ad4b9688742b9db15e83bce8f" translate="yes" xml:space="preserve">
          <source>Returns the roster from the terraform state file, checks opts for location, but defaults to terraform.tfstate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb22db00be5c190e25b3959899fd98abe439d38" translate="yes" xml:space="preserve">
          <source>Returns the services the local agent is managing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fdaf41fe9a0230a757b3574402716548e67235" translate="yes" xml:space="preserve">
          <source>Returns the size of of the root disk in MB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238ef876722041f1b89e459771399e98df06ef54" translate="yes" xml:space="preserve">
          <source>Returns the spot instance configuration for the provided vm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a85eaa727d05c453ab0b89090fe634e57fa47a" translate="yes" xml:space="preserve">
          <source>Returns the ssh private key for VM access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd1bb6b84cc1978dfae723764d941deabc9b0d5" translate="yes" xml:space="preserve">
          <source>Returns the state of a container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2bc7199ed29866f597f201e0f70a66640b4fdd" translate="yes" xml:space="preserve">
          <source>Returns the state of the container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c72c2662fa08f621d698d0131d19bc36a4b2a2" translate="yes" xml:space="preserve">
          <source>Returns the system date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65168c2302d8ef5ab29837c2f62917897f71fedd" translate="yes" xml:space="preserve">
          <source>Returns the system date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccdee101b100ec9901039caa2fd99a077b851a8" translate="yes" xml:space="preserve">
          <source>Returns the system time in HH:MM:SS AM/PM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcc31f8c22d1e24f202da7ccb0da451ebdbf398" translate="yes" xml:space="preserve">
          <source>Returns the system time in YYYY-MM-DD hh:mm:ss format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d69de04fd75eaac911c9f6205b57216e456c5aa" translate="yes" xml:space="preserve">
          <source>Returns the team details if a team with the given name exists, or None otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bccdf20f944bc2fc326ced3d66fe397fcb26cf" translate="yes" xml:space="preserve">
          <source>Returns the updated identity pool if successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc92da96113a3662efeae6d246b0c659417dcc6" translate="yes" xml:space="preserve">
          <source>Returns the uplink portgroup of a distributed virtual switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a62d38f9b6a0c3a5ab9faac82826b09ab349268" translate="yes" xml:space="preserve">
          <source>Returns the uptime in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38de756fcb81751fdc735bc4983117e2b913597" translate="yes" xml:space="preserve">
          <source>Returns the value of a cgroup parameter for a container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea284d19b0117771ad5e6000dfe58bbbded9467" translate="yes" xml:space="preserve">
          <source>Returns the values of all the given hash fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418b86c7367915d2d46b5fb3db27d72a2b9f8ff9" translate="yes" xml:space="preserve">
          <source>Returns the version of Chocolatey installed on the minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b164b951106bb390ef71d7acce5574f266f762f4" translate="yes" xml:space="preserve">
          <source>Returns the version of Git installed on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec340c16318b22add08b0d4cb6aa55158570df5" translate="yes" xml:space="preserve">
          <source>Returns the version of glusterfs. CLI Example: .. code-block:: bash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934006ab4d27db599acb232003c24f5b2ba925af" translate="yes" xml:space="preserve">
          <source>Returns the version of locate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb31b8e86b92cad106ed6d3aa9cf83d137fdc8a8" translate="yes" xml:space="preserve">
          <source>Returns the version of pip. Use &lt;code&gt;bin_env&lt;/code&gt; to specify the path to a virtualenv and get the version of pip in that virtualenv.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef14ae6768e4bc96b2ede456f2d4c99b784120d" translate="yes" xml:space="preserve">
          <source>Returns the version of the installed syslog-ng. If syslog_ng_sbin_dir is specified, it is added to the PATH during the execution of the command syslog-ng.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e458546fa2f73903f8eaeba4b8fc71630ada02c" translate="yes" xml:space="preserve">
          <source>Returns the virtual machine type as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832a02e39278e1e77f08fc1f69b5e55a1d0f46ff" translate="yes" xml:space="preserve">
          <source>Returns true a rule for the ip already exists based on the method supplied. Returns false if not found. CLI Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d119a545f128eabc62ce2f21b1cfe796be3fea61" translate="yes" xml:space="preserve">
          <source>Returns true if any records are deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf23f93ddaf72d3cd3d07a6daea62e27bb5e77a" translate="yes" xml:space="preserve">
          <source>Returns true if the command passed is a fuse mountable application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb850e52cc4b4526d9108bf1a97ee847da55b57" translate="yes" xml:space="preserve">
          <source>Returns true if the device is reachable, else false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42485f9fd4f566fd0b10bae25931f7f5d536a8e1" translate="yes" xml:space="preserve">
          <source>Returns true if the executable is available on the minion, false otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fd5c55f7a07e4e4a52e2c82329696fd3a41bc4" translate="yes" xml:space="preserve">
          <source>Returns true if the named container exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e104149f0b976f2429491017baedfc372c2f57b2" translate="yes" xml:space="preserve">
          <source>Returns username</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e488fe06adf3ac85af6b2f35b7e8a2ec33bea7db" translate="yes" xml:space="preserve">
          <source>Returns versions of components used by salt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549fe214c19c53cf7929691d092a9156094257ca" translate="yes" xml:space="preserve">
          <source>Returns vm object properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57fd4cae944c1c9d6453c6bda0eca8d01daef8c" translate="yes" xml:space="preserve">
          <source>Returns whether a given package id is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d594bbbcd4e8c9d00fc5c0347cda3145b3d5f43" translate="yes" xml:space="preserve">
          <source>Returns whether the named container exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce7cf1a712fa55f2f7845412af001adbc51eb76" translate="yes" xml:space="preserve">
          <source>Returns {added: true} if the permission was added and returns {added: False} if the permission was not added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b3beccd651143eb048c58f2e6d3b0fb18bc16d" translate="yes" xml:space="preserve">
          <source>Returns {attached: true} if the policy was attached {attached: False} if the policy was not attached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364219dccd8ad852d1873f976e360d2d11c87857" translate="yes" xml:space="preserve">
          <source>Returns {changed: true} if the policy version was set {changed: False} if the policy version was not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06d5efd6ca1d1cb793e0622610042b9dec8357c" translate="yes" xml:space="preserve">
          <source>Returns {created: True} if the rest api was created and returns {created: False} if the rest api was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2013e425d871151b661a52503a1c5912c5741b" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the VPC was created and returns {created: False} if the VPC was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780708c0e74c0582260c0244ff58fb699c215cf9" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the alias was created and returns {created: False} if the alias was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0990364e464f4d498a15732d3a549132cd1114aa" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the bucket was created and returns {created: False} if the bucket was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdad610f5eab4d9559a11e6a7d4fca4bf7e012bb" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the domain was created and returns {created: False} if the domain was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7b01160a9587a8bdfd506bca062e56150fa148" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the event source mapping was created and returns {created: False} if the event source mapping was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f197b9b982fdc79bf537c6c7bfccc36bf783a366" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the policy version was created and returns {created: False} if the policy version was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8450520982dae24a84995ea3d11959cf138511f" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the policy was created and returns {created: False} if the policy was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa73b865227ca714a1cfc852bbb421739315f58b" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the rule was created and returns {created: False} if the rule was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43eb8f7222f204698e6d2c26ec5f832acd7915b9" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the thing type was created and returns {created: False} if the thing type was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1934585d7c6019e42abcf9a760312d4ea2633b5" translate="yes" xml:space="preserve">
          <source>Returns {created: true} if the trail was created and returns {created: False} if the trail was not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b839397856cc0d68eea51d268607b576c9b871a9" translate="yes" xml:space="preserve">
          <source>Returns {deleted: True, count: deleted_count} if apis were deleted, and returns {deleted: False} if error or not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe9d8fa5e09dd4e3126138662a19a373d2d024a" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if CORS was deleted and returns {deleted: False} if CORS was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a63fa2b2b0914fb6bf4f2c45de27389ddebd93" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if Lifecycle was deleted and returns {deleted: False} if Lifecycle was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19d0d666ac2c0fdbb77851b6649bd5e7a72e236" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if all objects were deleted and {deleted: false, failed: [key, ...]} otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7e70e9d3100260d30b9956e0a7cc61a7de5623" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if policy was deleted and returns {deleted: False} if policy was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed5ae5ca5d5b7892047568a6998ee5f94a57edd" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if replication configuration was deleted and returns {deleted: False} if replication configuration was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005ed46b2b1072c814deeac1cb895a16b711b98d" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if tags were deleted and returns {deleted: False} if tags were not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09346340e33e0f99cc5ace0d465903e17de536f3" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if the VPC was deleted and returns {deleted: false} if the VPC was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee8d1b6f83239c626e8f4de9db746321c59ac84" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if the alias was deleted and returns {deleted: false} if the alias was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae0339aa0d636173ef7aa0499f2399b6ad93708" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if the bucket was deleted and returns {deleted: false} if the bucket was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27950d08b7df83bf85c99ceff786cd76b946f947" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if the domain was deleted and returns {deleted: false} if the domain was not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2427f901ebcd7427794cf6a9e7339b2d166a80" translate="yes" xml:space="preserve">
          <source>Returns {deleted: true} if the function was deleted and returns {deleted: false} if the function was not deleted.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
