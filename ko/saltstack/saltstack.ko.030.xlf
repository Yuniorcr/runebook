<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="saltstack">
    <body>
      <group id="saltstack">
        <trans-unit id="5e6675b94be40d7fa39fa81eac8f9102ed6c246d" translate="yes" xml:space="preserve">
          <source>Syslog server implementations may have limits on the maximum record size received by the client. This may lead to job return data being truncated in the syslog server's logs. For example, for rsyslog on RHEL-based systems, the default maximum record size is approximately 2KB (which return data can easily exceed). This is configurable in rsyslog.conf via the $MaxMessageSize config parameter. Please consult your syslog implmentation's documentation to determine how to adjust this limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137dbb1603f8362cd0c11e5770a6605f95d65df4" translate="yes" xml:space="preserve">
          <source>Syslog-ng can be installed via a package manager or from source. In the latter case, the syslog-ng and syslog-ng-ctl binaries are not available from the PATH, so users should set location of the sbin directory with &lt;a href=&quot;#salt.modules.syslog_ng.set_binary_path&quot;&gt;&lt;code&gt;syslog_ng.set_binary_path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf10093e532845ddf3de91634db3bafd9fe3faa" translate="yes" xml:space="preserve">
          <source>Syslog-ng configuration file format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0792d8dc81e8aa30b987246a5ce97c40cd6833" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1712b661553ff20e605cf48b5643d070be678f" translate="yes" xml:space="preserve">
          <source>System Boot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498243bd86c5e293363cc5d03e50646862a2f498" translate="yes" xml:space="preserve">
          <source>System Configuration Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb66f0112461adb812b27a4f324cffc55d0b6f3" translate="yes" xml:space="preserve">
          <source>System Event Log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f10a6bcbbcade975442faf926da7e6b6f9c826" translate="yes" xml:space="preserve">
          <source>System Management BIOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216f575848fe6c012f7f770277b72f0de2ac3f0d" translate="yes" xml:space="preserve">
          <source>System Power Controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8becd0e446732ee7e84be1e9a88ac8ad043cd8c6" translate="yes" xml:space="preserve">
          <source>System Profiler Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae88cc1bf33291f096aa8292966f8c314a6df64" translate="yes" xml:space="preserve">
          <source>System Reset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e660bfdbea128790ecac4f8ebe467337ba6e95b1" translate="yes" xml:space="preserve">
          <source>System Slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58676ec7fde3ef2e023b0a25478cfef261f9f355" translate="yes" xml:space="preserve">
          <source>System information exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079209ce68793269bed1ae96b715fc132652e777" translate="yes" xml:space="preserve">
          <source>System information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91effa50bf1d96ee6df623725acd34ea4a275a13" translate="yes" xml:space="preserve">
          <source>System module for sleeping, restarting, and shutting down the system on Mac OS X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826259f7330d168f4f1e55b422d59507ce25fce1" translate="yes" xml:space="preserve">
          <source>System user all operations should be performed on behalf of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904a2c20574068688e58979b448d96b2647509d3" translate="yes" xml:space="preserve">
          <source>T13 INCITS 346-2001 (1367D) defines the BEER (Boot Engineering Extension Record) and PARTIES (Protected Area Run Time Interface Extension Services), allowing for a Host Protected Area on a disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6303a49483c1564f02d13e3fae9616cb4576fed" translate="yes" xml:space="preserve">
          <source>TBD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629739dd5b844858b41cbef9e797b84680265d9e" translate="yes" xml:space="preserve">
          <source>TCP port to use for the dump, defaults to &lt;code&gt;6500&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55b31b1edfb96e55fcc77bbfc557afb08d35c80" translate="yes" xml:space="preserve">
          <source>TCP port to use for the dump. Defaults to &lt;code&gt;6500&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec4186ff6dd054f66dc48342664cc916e7cee64" translate="yes" xml:space="preserve">
          <source>TEMPORARY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806f1f8eca5e75fd6089f12e9ec2d5269984f670" translate="yes" xml:space="preserve">
          <source>TLD of the domain name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fb4a3090696e1941e20c992b1949d8448edb84" translate="yes" xml:space="preserve">
          <source>TODO: Add a 'ca_dir' option to configure a directory of CA files, a la Apache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0d3cc21d9e243728ecc5f96a0b1158fce7f3df" translate="yes" xml:space="preserve">
          <source>TODO: Add all of the filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e54a44741993ba88c5fba42772c22dd922de206" translate="yes" xml:space="preserve">
          <source>TODO: This function is currently broken, as the bluez-simple-agent program no longer ships with BlueZ &amp;gt;= 5.0. It needs to be refactored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd9f0ebfda7b76cca65beded4dd4e708b2f3e6c" translate="yes" xml:space="preserve">
          <source>TODO: finish this, what do do when you get different jids from 2 returners... since our jids are time based, this make this problem hard, because they aren't unique, meaning that we have to make sure that no one else got the jid and if they did we spin to get a new one, which means &quot;locking&quot; the jid in 2 returners is non-trivial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c162c076dc07a546449be9e07aa7a5c312ecbfe1" translate="yes" xml:space="preserve">
          <source>TRIGGER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74303786eb95ccd75228db361d37b804576e18e6" translate="yes" xml:space="preserve">
          <source>TRUNCATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22da65ba4fae7d4e0416d8d6b58e56187879fedb" translate="yes" xml:space="preserve">
          <source>TSM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878260dfb888c3312c119e6db2253c2aa207ae98" translate="yes" xml:space="preserve">
          <source>TTL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0516838d91a89408ab500649cb5ef68eac59d4db" translate="yes" xml:space="preserve">
          <source>TTL for the record</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a08682d632cde25b3c14e0f58c49c515677532" translate="yes" xml:space="preserve">
          <source>Table and Sequence object types live under a schema so this should be provided if the object is not under the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c8430c3a53f8ac8e06dd139aaa10d77a36d4c4" translate="yes" xml:space="preserve">
          <source>Tag an image into a repository and return &lt;code&gt;True&lt;/code&gt;. If the tag was unsuccessful, an error will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32508a1d9cbc822e1b19d0fbad30e403633d9ee" translate="yes" xml:space="preserve">
          <source>Tag name for the baseline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5df5732b61992f9447b41e95863592580fd06d" translate="yes" xml:space="preserve">
          <source>Tag name for the image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a951ef82656352416d858d6f586b9269ffc2264f" translate="yes" xml:space="preserve">
          <source>Tag name for the image (required if &lt;code&gt;repository&lt;/code&gt; is passed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c050fcc9990bce8446ce4e4c314ddb4be14883f6" translate="yes" xml:space="preserve">
          <source>Tag name for the image to be built</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab94d0bef96ea9ddb7988f53fb24252f4aa45292" translate="yes" xml:space="preserve">
          <source>Tag name for the image. Required when using &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;load&lt;/code&gt;, or &lt;code&gt;sls&lt;/code&gt; to create the image, but optional if pulling from a repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805f4ff421b25abf487fc082ed3fb778cfc2781f" translate="yes" xml:space="preserve">
          <source>Tag name to go along with the repository name, if the loaded image is to be tagged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49ea58627d6933fada6585ebe0cd9f130743ca3" translate="yes" xml:space="preserve">
          <source>Tag of the selected baseline snapshot. Most recent baseline baseline snapshot is used in case of multiple snapshots with the same tag. (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a746b6a9f44b25060cdd716c403e005d486882" translate="yes" xml:space="preserve">
          <source>Tagging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6616e10eda69e41f28d2ae09d38bdf98ad09e27a" translate="yes" xml:space="preserve">
          <source>Tags can also be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f169943c8ade50dbca78286d6ef85879412eaa" translate="yes" xml:space="preserve">
          <source>Tags to associate with the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d4ad730dc3b6e889dc65b35aeec12ae0148b5e" translate="yes" xml:space="preserve">
          <source>Take a repository definition and expand it to the full pkg repository dict that can be used for comparison. This is a helper function to make the Debian/Ubuntu apt sources sane for comparison in the pkgrepo states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05e2d9ee4de59cf291e406bc53c0e37d02ae704" translate="yes" xml:space="preserve">
          <source>Take a snapshot of the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b0cd9b33dd1409b3cd2deecfa739fd38438683" translate="yes" xml:space="preserve">
          <source>Take data from salt and &quot;return&quot; it into a carbon receiver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6406d2367c942a73eb94369c91eb054ebbe459" translate="yes" xml:space="preserve">
          <source>Take data from salt and &quot;return&quot; it into a raw file containing the json, with one line per event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b923363b09526baf982a6d62166fe470a0715c32" translate="yes" xml:space="preserve">
          <source>Take in the return and shove it into the couchdb database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3495529f3f44748363e66ad31a82606e6f702ddf" translate="yes" xml:space="preserve">
          <source>Taken and modified from os.makedirs to set user, group and mode for each directory created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7b7d51badbfaba0b24dddcb4da50a7cc124b1a" translate="yes" xml:space="preserve">
          <source>Takes a dict of package name/version information and joins each list of installed versions into a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be30d6505c062813cdc16ab15e397a3a3e705c27" translate="yes" xml:space="preserve">
          <source>Takes a list of acl names and add them to the given path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959a818f16d1261b46be47332133ec8c849b9b4a" translate="yes" xml:space="preserve">
          <source>Takes a list of acl names and remove them from the given path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e53353ee8429a3fb7edfc2c6b34514e086759f" translate="yes" xml:space="preserve">
          <source>Takes a new snapshot of the disk image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd022fa0e13036c068a270f4b73c6cd8ab9bd9bf" translate="yes" xml:space="preserve">
          <source>Takes a snapshot of a particular VM or by a UNIX-style wildcard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1bafef97dbbd6283f61028c22ac6049c7e8d51" translate="yes" xml:space="preserve">
          <source>Takes a while to run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6475b255d3cb0029256a6adf5967c6e2355beb" translate="yes" xml:space="preserve">
          <source>Takes a while to run, and returns a &lt;strong&gt;LOT&lt;/strong&gt; of output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe642e882a992d4ce51309c0f9b2dcacf55721e" translate="yes" xml:space="preserve">
          <source>Taking advantage of rendering a Python module, PyDSL allows you to declare a state that calls a pre-defined Python function when the state is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c5f94f68886bc4c087bc005af39e38ca082431" translate="yes" xml:space="preserve">
          <source>Target destination directory path on minion to clone into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25425dc0e179e2c0d3d3c3528b6bb0c866148b5b" translate="yes" xml:space="preserve">
          <source>Target directory to download artifact to (default: /tmp)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bab7c6c56727935a848ccaa91cb34dd5bfad6de" translate="yes" xml:space="preserve">
          <source>Target file to download artifact to (by default it is target_dir/artifact_id-snapshot_version.packaging)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9facdf8b4ae29632a44d559a58caa1f435fbf5c3" translate="yes" xml:space="preserve">
          <source>Target file to download artifact to (by default it is target_dir/artifact_id-version.packaging)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4537e90db04ac378ed91d10250747785166ba563" translate="yes" xml:space="preserve">
          <source>Target file to download artifact to. By default file name is resolved by artifactory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6419cfb9264fd55f750cc28d5b66edaf9ba67c40" translate="yes" xml:space="preserve">
          <source>Target to match minion ids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ac40d44c3cd382dd56aa29bb220eac4e3a5a3c" translate="yes" xml:space="preserve">
          <source>Targeting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35260a00f655f27edcc35a7eb16da44a4f671a6" translate="yes" xml:space="preserve">
          <source>Targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09018f940485149357e3eaa2106d6a2b4402815" translate="yes" xml:space="preserve">
          <source>Targets can be matched based on any standard matching system that can be matched on the master via these keywords:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeaeb2a96eba41f51f6b9a8a0264bfbdf62b4f7f" translate="yes" xml:space="preserve">
          <source>Task arguments as a list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cca44a4322d9930345652701d2750514eee5cab" translate="yes" xml:space="preserve">
          <source>Task keyword arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705fbf05c740d6795150c1d567303236db4b8d08" translate="yes" xml:space="preserve">
          <source>Task type. Defaults to 'stream'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf74d6655463a4f3bcc125da6a56c69d7e33e9e" translate="yes" xml:space="preserve">
          <source>TechnicalProblem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c710d6008984a2ea2dea3087862f25dc73d4ea" translate="yes" xml:space="preserve">
          <source>Telegram settings may also be configured as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c07f4679db2ab9ff85d013c4357463d1a3aef75" translate="yes" xml:space="preserve">
          <source>Telemetry api key for the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a34535a473f295d42a14e6b4f3de54431b2b7b" translate="yes" xml:space="preserve">
          <source>Tell if a given package or DEPEND atom is present in the configuration files tree. Warning: This only works if the configuration files tree is in the correct format (the one enforced by enforce_nice_config)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f86678db85fc6a3865a4109c079a45c60a5b835" translate="yes" xml:space="preserve">
          <source>Tell solr make a backup. This method can be mis-leading since it uses the backup API. If an error happens during the backup you are not notified. The status: 'OK' in the response simply means that solr received the request successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b3c89b90b129f52679d3f5f34462d240e4b844" translate="yes" xml:space="preserve">
          <source>Tell the minion to reload the execution modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248ee6232e60179a5889ab16c0dd70998ed67848" translate="yes" xml:space="preserve">
          <source>Tells the user how many store paths were removed and how much space was freed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e6ab3e3ca9147ef2a2d5a3249fed312652bcb7" translate="yes" xml:space="preserve">
          <source>Temperature Probe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a75efb1071c1a1da9303943a6e1dd85797a4fb" translate="yes" xml:space="preserve">
          <source>Template ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137f38694cda786a611f4c419ebf7d3a332a1a2a" translate="yes" xml:space="preserve">
          <source>Template definition as specified in &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html&quot;&gt;http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6435bc39827407e9b9ecff13124aa0c2193e19a" translate="yes" xml:space="preserve">
          <source>Template engine to be used to render the source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5066f030afa7819bab0334e8d34241f2b3eb8fe9" translate="yes" xml:space="preserve">
          <source>Template rendering can be enabled on both the source and destination file names like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b01a186a1291267247c7e581e0b0bfcfbaab914" translate="yes" xml:space="preserve">
          <source>Template-processed source file contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e42ca426a0aaefd1150e13c6bfa9e0ddee2512" translate="yes" xml:space="preserve">
          <source>Template-specific options to pass to the lxc-create command. These correspond to the long options (ones beginning with two dashes) that the template script accepts. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75277c24479039a7fe9d3aa73a7090aa585baa5" translate="yes" xml:space="preserve">
          <source>Templates is configuration for a host or software, that can use information from Grains or Pillars. These can then be used for hierarchically substitution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c77db1488c77bdc150e71b83d2d7e0619c0a42" translate="yes" xml:space="preserve">
          <source>Templating engine to be used to render the downloaded file. The following engines are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b757ca492d1d40fa5f5077b69862b036d5aa3aa4" translate="yes" xml:space="preserve">
          <source>Templating engine to use on the script before running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba147e06386ae27a03e479b9dddb638c44c84ef8" translate="yes" xml:space="preserve">
          <source>Term attributes. To see what fields are supported, please consult the list of supported &lt;a href=&quot;https://github.com/google/capirca/wiki/Policy-format#keywords&quot;&gt;keywords&lt;/a&gt;. Some platforms have a few other &lt;a href=&quot;https://github.com/google/capirca/wiki/Policy-format#optionally-supported-keywords&quot;&gt;optional&lt;/a&gt; keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ab04ed0a1510f8ba554a42c248edc298e89c5b" translate="yes" xml:space="preserve">
          <source>Term attributes. To see what fields are supported, please consult the list of supported &lt;a href=&quot;https://github.com/google/capirca/wiki/Policy-format#keywords&quot;&gt;keywords&lt;/a&gt;. Some platforms have few other &lt;a href=&quot;https://github.com/google/capirca/wiki/Policy-format#optionally-supported-keywords&quot;&gt;optional&lt;/a&gt; keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d029f1504d1954b2e1a57b44123b6caed0bdf1f7" translate="yes" xml:space="preserve">
          <source>Terminate a circuit on an interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a343e294832b0e87a5097d453a68f808d64cdb" translate="yes" xml:space="preserve">
          <source>Terminate the instance described by instance_id or name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aada32206652ab1a19453cbec75a8d8c2c528bd" translate="yes" xml:space="preserve">
          <source>Terms usable in yaml files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ae664ffaf30a6f2fa649ea460b32e3cb32d9d9" translate="yes" xml:space="preserve">
          <source>Test States</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c55e5ade057644044f4fcc1aa5b20bc7b6c1d08" translate="yes" xml:space="preserve">
          <source>Test connection to Elasticsearch instance. This method does not fail if not explicitly specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0105f9cd047a7aef2efaac33a9b41c40ebe11ac5" translate="yes" xml:space="preserve">
          <source>Test connectivity to a host using a particular port from the minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7cb8a17b72d330e4d3eb8cdab9f06c97b4d6015" translate="yes" xml:space="preserve">
          <source>Test for this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371d994fd62921f753ec2d3e6fc0deffde4b8912" translate="yes" xml:space="preserve">
          <source>Test function so we have something to call from a state :return:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd2e1f2a85c4f9e78651bac54a2521eb7d724fc" translate="yes" xml:space="preserve">
          <source>Test if a certificate is in the Let's Encrypt Live directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505794a9d190e88d861d69ae0cb193d4a15a7672" translate="yes" xml:space="preserve">
          <source>Test if a non systemd container is fully started For now, it consists only to test if the container is attachable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44467612b38eab5d33f3ada12bd9d1363b2cec32" translate="yes" xml:space="preserve">
          <source>Test if a package is locked within the specified chroot (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607650ff57885a1badc7f2f9c30956fecdcc90a9" translate="yes" xml:space="preserve">
          <source>Test if a package is locked within the specified jail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a938695df15e54009cb1203e94ffdb5322fe1ac8" translate="yes" xml:space="preserve">
          <source>Test if a package is locked within the specified root (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffd470101d5e71eb6436689681523cabce3687d" translate="yes" xml:space="preserve">
          <source>Test if a specific extension is available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d753b85a741f3e12495688bd1cf1d8d8d155b0" translate="yes" xml:space="preserve">
          <source>Test if a specific extension is installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90daed0692736976d911c8108018019ac9052c9" translate="yes" xml:space="preserve">
          <source>Test if a systemd container is fully started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58caa3f87eff476741a3aadac73b4080475e31fa" translate="yes" xml:space="preserve">
          <source>Test if an entry is in the specified set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97316a461e8b1493525e8f0bc07b8b63310fc6f2" translate="yes" xml:space="preserve">
          <source>Test if the connection can be made to the vCenter server using the specified credentials inside &lt;code&gt;/etc/salt/cloud.providers&lt;/code&gt; or &lt;code&gt;/etc/salt/cloud.providers.d/vmware.conf&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f4c64da8ade425eab81654ea4d37dce4508f66" translate="yes" xml:space="preserve">
          <source>Test monit configuration syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82acbe7b98b2f1105f0984ca9450e8c89b853557" translate="yes" xml:space="preserve">
          <source>Test ssh connections to the machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6829399edf6461f78a6f8b0d1857802f021f762" translate="yes" xml:space="preserve">
          <source>Test that the returncode system is functioning correctly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456b9bd529279b5d8ad6b9050cf988418df3b994" translate="yes" xml:space="preserve">
          <source>Test the outputter, pass in data to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21402d2dc1e4d0bb8c3c77c90765850331e133ee" translate="yes" xml:space="preserve">
          <source>Test to see if the vendor directory exists in this directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7727b9083d431cd66cd52e39bf8d3fe2293ce4c8" translate="yes" xml:space="preserve">
          <source>Test whether the Salt process has the specified access to the file. One of the following modes must be specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f945b27b34420ede9b34dd5d1f14acf00972ae" translate="yes" xml:space="preserve">
          <source>Tested on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea956332763279b79af262e7fe0f9c22db0de777" translate="yes" xml:space="preserve">
          <source>Tests for a state should be created in files ending in &lt;code&gt;*.tst&lt;/code&gt; and placed in the &lt;code&gt;saltcheck-tests&lt;/code&gt; folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1329595515221c9c9a1ec971a5976c400632067" translate="yes" xml:space="preserve">
          <source>Tests for the CPU performance of minions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829510260bc3225b6fa6e73025169162b8c28186" translate="yes" xml:space="preserve">
          <source>Tests for the existance the of a specific SLS or list of SLS files on the master. Similar to &lt;a href=&quot;#salt.modules.state.show_sls&quot;&gt;&lt;code&gt;state.show_sls&lt;/code&gt;&lt;/a&gt;, rather than returning state details, returns True or False. The default environment is &lt;code&gt;base&lt;/code&gt;, use &lt;code&gt;saltenv&lt;/code&gt; to specify a different environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5644b0be8cb4df2a78c735f8fa2b25ac09b90c59" translate="yes" xml:space="preserve">
          <source>Tests for the existence of a specific ID or list of IDs within the specified SLS file(s). Similar to &lt;a href=&quot;#salt.modules.state.sls_exists&quot;&gt;&lt;code&gt;state.sls_exists&lt;/code&gt;&lt;/a&gt;, returns True or False. The default environment is base``, use &lt;code&gt;saltenv&lt;/code&gt; to specify a different environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b87f16ea40c71c4a9b2fcc8984a5d1d1810411" translate="yes" xml:space="preserve">
          <source>Tests the current applied DSC Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca62132ce45d2e96a36fc1176d725c2931da64ef" translate="yes" xml:space="preserve">
          <source>Tests the implementation of mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56f5019c863dc1c6000c4015940e076c7e7fc59" translate="yes" xml:space="preserve">
          <source>Tests to see if path after expansion is a valid path (file or directory). Expansion allows usage of ? * and character ranges []. Tilde expansion is not supported. Returns True/False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff2e3e94e2bbeebc1abd106d400ed159527567f" translate="yes" xml:space="preserve">
          <source>Tests to see if path is a valid directory. Returns True/False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9cceca130ec75d383a85a7a43e5f2c5f906aa6" translate="yes" xml:space="preserve">
          <source>Tests to see if path is a valid file. Returns True/False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc985eeebe3f98d4fc2fec287194ec3ed945540" translate="yes" xml:space="preserve">
          <source>Tests whether bridge exists as a real or fake bridge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e04b865269514b6d7d4b2ce637447f11848ab0" translate="yes" xml:space="preserve">
          <source>Text containing the X509 PEM entry to be returned or path to a file containing the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c373193bdf3db4ec6681f90065bae86178d7641" translate="yes" xml:space="preserve">
          <source>Text file to read, having the raw text to be parsed using the TextFSM template. Supports the same URL schemes as the &lt;code&gt;template_path&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d376eb61f33673bd82d2deecaff0a50496c0643" translate="yes" xml:space="preserve">
          <source>Text files, with passwords in plaintext or hashed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7eba3208796b7ca4c9e6cd9248a20bdc62ef83" translate="yes" xml:space="preserve">
          <source>Text that will replace &lt;code&gt;before&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3af1d5aa53cdc1b8b07435d9dd6148310e91ea6" translate="yes" xml:space="preserve">
          <source>Text to append at the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3c272a279502341f86ab35469757904f2a3c1e" translate="yes" xml:space="preserve">
          <source>Text to return in the comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa13d6ed5badbd51c09fb4ccd89e6ac1960b18a" translate="yes" xml:space="preserve">
          <source>Text to search the keyserver for, e.g. email address, keyID or fingerprint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43b53147843fb19a29b1644f3018fbc9ef6f767" translate="yes" xml:space="preserve">
          <source>TextFSM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f080a8a8318382d13d2355ba5171490b9bdf3094" translate="yes" xml:space="preserve">
          <source>TextFSM Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ccb4ead8ffaccb3aee676c2c16186a851a8bf3" translate="yes" xml:space="preserve">
          <source>TextFSM index file example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e34cd7227a76cf3370cca65a92550be252f57bd" translate="yes" xml:space="preserve">
          <source>That list will include the IDs of the scripts in your account. Thus, if you have a script called 'setup-networking' with an ID of 493234 you can specify that startup script in a profile like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a599eb4a51e9bfb2f006b30bbe314b33e39b04" translate="yes" xml:space="preserve">
          <source>That number of long-running, synchronous Salt processes is also not ideal. Like at the CLI, each Salt command run will start a process that instantiates its own &lt;code&gt;LocalClient&lt;/code&gt;, which instantiates its own listener to the Salt event bus, and sends out its own periodic &lt;code&gt;saltutil.find_job&lt;/code&gt; queries to determine if a Minion is still running the command. Not exactly a lightweight operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37a1f27a92cf3e98372ee6ad6a87cb558de1310" translate="yes" xml:space="preserve">
          <source>That said, sometimes a minion may match more than one class. For instance, in the above example, Ubuntu minions will match both the &lt;strong&gt;Debian&lt;/strong&gt; and &lt;strong&gt;Ubuntu&lt;/strong&gt; classes, since Ubuntu has an &lt;code&gt;os_family&lt;/code&gt; grain of &lt;strong&gt;Debian&lt;/strong&gt; and an &lt;code&gt;os&lt;/code&gt; grain of &lt;strong&gt;Ubuntu&lt;/strong&gt;. As of the 2017.7.0 release, the order is dictated by the order of declaration, with classes defined later overriding earlier ones. Additionally, 2017.7.0 adds support for explicitly defining the ordering using an optional attribute called &lt;code&gt;priority&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7643e388bcb0cea919f17a6c05560e287d289d24" translate="yes" xml:space="preserve">
          <source>Thawte</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b28e9ba643c34c372970f64629122d960dacbe9" translate="yes" xml:space="preserve">
          <source>The &quot;erasure_code_profile&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31608885edcbacbfb060cfdc772dc314b96d4c1e" translate="yes" xml:space="preserve">
          <source>The 'Applies to' setting is optional. It is specified using the &lt;code&gt;applies_to&lt;/code&gt; key. If not specified &lt;code&gt;this_key_subkeys&lt;/code&gt; is used. Valid options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574e378c4a18eef2297075c89d4dee4f5fca6e08" translate="yes" xml:space="preserve">
          <source>The 'accumulator' data structure is a Python dictionary. Do not expect any loop over the keys in a deterministic order!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9487a2ee59eb39367990e3bf8948dedd839f96d" translate="yes" xml:space="preserve">
          <source>The 'datastore' property of a HostSystem object is a list of datastores, thus a list is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6a3f4f805d5d5eacde6b22b18232b61df18a62" translate="yes" xml:space="preserve">
          <source>The 'path' parameter will optionally set the root of the path to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c110ed79f9d4d735e4e450a99aec8e1d519a85" translate="yes" xml:space="preserve">
          <source>The 'sysbench' module is used to analyze the performance of the minions, right from the master! It measures various system parameters such as CPU, Memory, File I/O, Threads and Mutex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84db71f8e1b3ebeae1f8df8d7baa9d5df70a1fd" translate="yes" xml:space="preserve">
          <source>The 'timespec' follows the format documented in the at(1) manpage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5d782d13f37faf40b7045a1603615b4e24a5ba" translate="yes" xml:space="preserve">
          <source>The 'token' can be obtained from the Logentries service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bce1038ecb1b343dd9c2b7a492e9a725abb1f34" translate="yes" xml:space="preserve">
          <source>The (optional) name to use for this VPC peering connection. String type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278cc7b214c768af6b5086044100ce6b5c47e8ab" translate="yes" xml:space="preserve">
          <source>The -F flag is always used to avoid the prompts when uninstalling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36ecb626bfb27559498d03a25aff39a31681625" translate="yes" xml:space="preserve">
          <source>The /run enpoint can also be used to issue commands using the salt-ssh subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35862e7f4d9945003eaebf5bf995fd38f7206a57" translate="yes" xml:space="preserve">
          <source>The 1&amp;amp;1 SaltStack cloud module allows a 1&amp;amp;1 server to be automatically deployed and bootstrapped with Salt. It also has functions to create block storages and ssh keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456022d388dc2fa3dbe112caae7dbab75d46ed00" translate="yes" xml:space="preserve">
          <source>The 5.5.0.2014.1.1 is a known stable version that this original ESXi State Module was developed against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7011c5b7d20b18756bd3369b0f4c671948afe64b" translate="yes" xml:space="preserve">
          <source>The 5.5.0.2014.1.1 is a known stable version that this original VMware cloud driver was developed against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974637ae876d6cb59b04a4c077d4531e20286102" translate="yes" xml:space="preserve">
          <source>The 5.5.0.2014.1.1 is a known stable version that this original vSphere Execution Module was developed against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317eaf3475141f6d2c2cb6c50df115a0c63a6da5" translate="yes" xml:space="preserve">
          <source>The 5x5 product key given to you by Microsoft</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de39633eaaf4dc43de28917b502bf7e2fa7ba899" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#salt.netapi.rest_cherrypy.app.Webhook&quot;&gt;&lt;code&gt;Webhook&lt;/code&gt;&lt;/a&gt; URL requires authentication by default but external services cannot always be configured to send authentication. See the Webhook documentation for suggestions on securing this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e967e9b9b2f788b3531343f03eaf292bc5c253b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../modules/all/salt.modules.cp#salt.modules.cp.push&quot;&gt;&lt;code&gt;cp.push&lt;/code&gt;&lt;/a&gt; function allows Minions to push files up to the Master. Using this backend, these pushed files are exposed to other Minions via the Salt fileserver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2703ec5935bcf831b18056c653e0d0810e3f24f9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../modules/all/salt.modules.hashutil#salt.modules.hashutil.digest&quot;&gt;&lt;code&gt;hashutil.digest&lt;/code&gt;&lt;/a&gt; execution function is used for comparing hashed passwords, so any algorithm supported by that function will work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257517b603daf98ee5ec38384d2b7f632b3442f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../states/all/salt.states.file#salt.states.file.decode&quot;&gt;&lt;code&gt;file.decode&lt;/code&gt;&lt;/a&gt; state function can be used to decode this data and write it to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c4f16e3ff2f8e122b40730eb47b13dc87a0084" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-external_auth&quot;&gt;&lt;code&gt;external_auth&lt;/code&gt;&lt;/a&gt; clause in the master config would then look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e770937904f2f9268663e1b3a1884e00c8ef1ad3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;salt.netapi.rest_cherrypy#module-salt.netapi.rest_cherrypy.app&quot;&gt;&lt;code&gt;rest_cherrypy&lt;/code&gt;&lt;/a&gt; module is more full-featured, production-ready, and has builtin security features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84be4edd5c9e9215ba186c2c42fff083a12229ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;salt.renderers.stateconf#module-salt.renderers.stateconf&quot;&gt;&lt;code&gt;salt.renderers.stateconf&lt;/code&gt;&lt;/a&gt; renderer offers a few interesting features that can be leveraged by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2247826da77295f931bea7ad189cb286d13078" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-d&lt;/code&gt; flag to curl does &lt;em&gt;not&lt;/em&gt; automatically urlencode data which can affect passwords and other data that contains characters that must be encoded. Use the &lt;code&gt;--data-urlencode&lt;/code&gt; flag instead. E.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8025ffab950820a4fa10b5bdf9b2c834f7a2909a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-m&lt;/code&gt; option should not be passed here, as the commit message will be defined by the &lt;code&gt;message&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947076389f91875c8d9d67f39b058edfac375c3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;/etc/hosts&lt;/code&gt; file can be managed to contain definitions for specific hosts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d932b7b8c7dc11ff566029bd5dfe8515d8c11c58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;/events&lt;/code&gt; endpoint is specifically designed to handle long-running HTTP connections and it exposes Salt's event bus which includes job returns. Watching this endpoint first, then executing asynchronous Salt commands second, is the most lightweight and scalable way to use &lt;code&gt;rest_cherrypy&lt;/code&gt; while still receiving job returns in real-time. But this requires clients that can properly handle the inherent asynchronicity of that workflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5da13e77dc1b8d17ebad7f5ad6996ef3bab4aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:&lt;/code&gt; (colon) is used to represent a nested dictionary level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad382c03005e600cfe7e9d6b7ee21c49a866c44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NAPALM&lt;/code&gt; beacon only works only when running under a regular Minion or a Proxy Minion, managed via &lt;a href=&quot;http://napalm.readthedocs.io/en/latest/index.html&quot;&gt;NAPALM&lt;/a&gt;. Check the documentation for the &lt;a href=&quot;../../proxy/all/salt.proxy.napalm#module-salt.proxy.napalm&quot;&gt;&lt;code&gt;NAPALM proxy module&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7add5cbd045a72acf019a260785f0ee2505f271" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aux_addresses&lt;/code&gt; can be passed differently, in the same way that &lt;code&gt;driver_opts&lt;/code&gt; and &lt;code&gt;ipam_opts&lt;/code&gt; can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb0519502d274cbfef284597e4be6d4cbdfc612" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bgp.neighbors&lt;/code&gt; function must be appened in the list of &lt;code&gt;mine_functions&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40924ff54ade44e8d44f73b6504722c40c0196c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bucket&lt;/code&gt; parameter specifies the target S3 bucket. It is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca931c21cb61df638f401f97cb5586eb31a0ece" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cache&lt;/code&gt; roster provides a flexible interface to the Salt Masters' minion cache to access regular minions over &lt;code&gt;salt-ssh&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d5cab1545d1f23772802b84901867bc65608fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;client&lt;/code&gt; field is a reference to the main Python classes used in Salt's Python API. Read the full &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/clients/index.html#client-apis&quot;&gt;Client APIs&lt;/a&gt; documentation, but in short:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3068abe6092142215710d1f930d02307f7db0004" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul.token&lt;/code&gt; requires python-consul &amp;gt;= 0.4.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a61ceda17a2288759655f255e3490a0c19884a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create_volume&lt;/code&gt; function must be called with &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--function&lt;/code&gt;. String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556e402a885230b82f72ca43e30ff246ee5798a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;creates&lt;/code&gt; option was added to version 2014.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2c014015a22b71a55562c9461d119746b2c3c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; parameter needs to specify a 'priv_level' in the same specification as defined in the MySQL documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5210cd374026345346b29765ebbe55bb4d33aa82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaults&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; arguments require extra indentation (four spaces instead of the normal two) in order to create a nested dictionary. &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/troubleshooting/yaml_idiosyncrasies.html#nested-dict-indentation&quot;&gt;More information&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cdf80def3bac3108655fa0c71837f77cfeb692" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disk.status&lt;/code&gt; function can be used to report that the used space of a filesystem is within the specified limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39efbaffad19f438be299c36673a0a240db14600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dnspython&lt;/code&gt; module is required when managing DDNS using a TSIG key. If you are not using a TSIG key, DDNS is allowed by ACLs based on IP address and the &lt;code&gt;dnspython&lt;/code&gt; module is not required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fef49371b6ca7a8b1d48cb5c59ed56d11e11eb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;download&lt;/code&gt; template requires the following three parameters to be defined in &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aca9935139949185ddebf24588617960f4e1a36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; refers to the Consul module, all other options are optional. For option details see: &lt;a href=&quot;https://python-consul.readthedocs.io/en/latest/#consul&quot;&gt;https://python-consul.readthedocs.io/en/latest/#consul&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e56ef60e199c34421f1b1dc20d592980b93823" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; refers to the REST module, and must be set to &lt;code&gt;rest&lt;/code&gt; in order to use this driver. Each of the other items inside this block refers to a separate set of HTTP items, including a URL and any options associated with it. The options used here should match the options available in &lt;code&gt;salt.utils.http.query()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9fc2c4c22bdb9b4757d8bd02e461afb707cee3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; refers to the Redis module, all other options are optional. For option details see: &lt;a href=&quot;https://redis-py.readthedocs.io/en/latest/&quot;&gt;https://redis-py.readthedocs.io/en/latest/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bbd16d9a8adb3a58eb2284218d177da5b944c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; refers to the cache module, &lt;code&gt;bank&lt;/code&gt; refers to the cache bank that contains the data and &lt;code&gt;cachedir&lt;/code&gt; (optional), if used, points to an alternate directory for cache data storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f28ce2b68d3f2a53aeb8f8eba213a2cc06c108" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; refers to the etcd module, &lt;code&gt;etcd.host&lt;/code&gt; refers to the host that is hosting the etcd database and &lt;code&gt;etcd.port&lt;/code&gt; refers to the port on that host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cd9a74fb51603b79e13485954eb333fc33414a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; refers to the keyring module, &lt;code&gt;service&lt;/code&gt; refers to the service that will be used inside of keyring (which may be likened unto a database table) and &lt;code&gt;mykeyring&lt;/code&gt; refers to the name that will appear in the URI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7b7f4c97935f3ff69669757ab25d15b2acfe41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; refers to the memcached module, &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; the memcached server to connect to (defaults to &lt;code&gt;localhost&lt;/code&gt; and &lt;code&gt;11211&lt;/code&gt;, and &lt;code&gt;mymemcached&lt;/code&gt; refers to the name that will appear in the URI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258ccf39fb539ad06d079c25b92e11d7c65e37b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; refers to the sqlite3 module, &lt;code&gt;database&lt;/code&gt; refers to the sqlite3 database file. &lt;code&gt;table&lt;/code&gt; is the table within the db that will hold keys and values (defaults to &lt;code&gt;sdb&lt;/code&gt;). The database and table will be created if they do not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e0e8a4618a3d865d0803ca97a8582184b25e25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;env&lt;/code&gt; sdb module can also be used with salt cloud. Assuming you have exported the environment variable named &lt;code&gt;compute&lt;/code&gt; (and have &lt;code&gt;osenv&lt;/code&gt; defined). The example below will look for the salt cloud config key &lt;code&gt;compute_name&lt;/code&gt; in the environment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70760e1e57e47ccd343ab8bc9558c98cae07892e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;environment&lt;/code&gt; defaults to 'base'. It specifies which environment the bucket represents when in single environments mode (see mode section below). It is ignored if multiple_env is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd51588a877cb00d41c337920e888391446ffbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;etcd.returner&lt;/code&gt; option specifies which configuration profile to use. The &lt;code&gt;etcd.returner_root&lt;/code&gt; option specifies the path inside etcd to use as the root of the returner system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a195caa1e7560d8d5a748c7f31f609dd314bb811" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_tree&lt;/code&gt; external pillar allows values from all files in a directory tree to be imported as Pillar data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffdc52898fdb1a5df9fc8ce420d16efc6b48d97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fromrepo&lt;/code&gt; argument is also supported, as used in pkg states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45546165cda316e9c0500d93a5d0aedbaca598f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fromrepo&lt;/code&gt;, &lt;code&gt;enablerepo&lt;/code&gt;, and &lt;code&gt;disablerepo&lt;/code&gt; arguments are supported, as used in pkg states, and the &lt;code&gt;disableexcludes&lt;/code&gt; option is also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01b5bfc398de7579c7dd79eb878c90e01aeb5d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_pixels&lt;/code&gt; method provides an accurate representation of how the pixels end up in frame buffer memory after you have called &lt;code&gt;set_pixels&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542d58c4671174ab623630e9e02ac3d1989a4837" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;groups_pillar_name&lt;/code&gt; config option can be used to pull group configuration from the specified pillar key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509de8f4bcf2d82c0a0ff1dce64f26c564213a74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;https_enable&lt;/code&gt; parameter defaults to True. It specifies whether to use https protocol or http protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34202f93e61700a515bb0b83b1f1c1c7810ee390" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;image&lt;/code&gt; label only displays information about the VM's distribution vendor, such as &quot;Debian&quot; or &quot;RHEL&quot; and does not display the actual image name. This is due to a limitation of the Linode API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09ae1d33b42bb0a532a41f7b2eff40e14734053" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; function, by default, causes the included sls file to be rendered as soon as the &lt;code&gt;include&lt;/code&gt; function is called. It returns a list of rendered module objects; sls files not rendered with the pydsl renderer return &lt;code&gt;None&lt;/code&gt;'s. This behavior creates no &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/highstate.html#include-declaration&quot;&gt;Include declaration&lt;/a&gt;'s in the resulting high state data structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562e8937743ff9b7e7021fc7c607c52db1ba5676" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;interval&lt;/code&gt; and &lt;code&gt;lacp_mode&lt;/code&gt; keys have the values set as &lt;code&gt;SLOW&lt;/code&gt; and &lt;code&gt;ACTIVE&lt;/code&gt; respectively, as this data is not currently available in Netbox, therefore defaulting to the values defined in the standard. See &lt;a href=&quot;http://ops.openconfig.net/branches/master/docs/openconfig-lacp.html#lacp-interfaces-interface-config-interval&quot;&gt;interval&lt;/a&gt; and &lt;a href=&quot;http://ops.openconfig.net/branches/master/docs/openconfig-lacp.html#lacp-interfaces-interface-config-lacp-mode&quot;&gt;lacp-mode&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3441c3bfe8679626b4b27edcf077f32cc0482100" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipv4&lt;/code&gt;, &lt;code&gt;ipv6&lt;/code&gt;, &lt;code&gt;gateway&lt;/code&gt;, and &lt;code&gt;link&lt;/code&gt; (bridge) settings in network profiles will only work if the container doesn't redefine the network configuration (for example in &lt;code&gt;/etc/sysconfig/network-scripts/ifcfg-&amp;lt;interface_name&amp;gt;&lt;/code&gt; on RHEL/CentOS, or &lt;code&gt;/etc/network/interfaces&lt;/code&gt; on Debian/Ubuntu/etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4db7d58acaf80ddecbce0f6939dfea6b9d90112" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;it-admins&lt;/code&gt; configuration below returns the Pillar &lt;code&gt;it-admins&lt;/code&gt; by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea840a638dbfc0fdf23b3a63231557f1cdb7d28d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; parameter specifies the key to use when access the S3 bucket. If it is not provided, an attempt to fetch it from EC2 instance meta-data will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aa4f0c3ae9bff6197d37b11c5d0b337030f6af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keyid&lt;/code&gt; parameter specifies the key id to use when access the S3 bucket. If it is not provided, an attempt to fetch it from EC2 instance meta-data will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec316b319b3fb4c0001571bbdc4c7d03b7da7cfc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kms_keyid&lt;/code&gt; parameter is optional. It specifies the ID of the Key Management Service (KMS) master key that was used to encrypt the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08caee08cee2c18f6e86164d6555cba8aebf877" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;localfs&lt;/code&gt; Minion cache module is the default cache module and does not require any configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb0729358fcbed7149384ddddf9d94fc9fc40aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;log_opt&lt;/code&gt; can also be expressed as a comma-separated or YAML list of &lt;code&gt;key=value&lt;/code&gt; pairs. The below two examples are equivalent to the above one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751faca5ca5b57beecc491d873689aae463c3645" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minion_id&lt;/code&gt; may be used in the &lt;code&gt;root&lt;/code&gt; path to expose minion-specific information stored in etcd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c64bc6c38b0051fa25d3165d289091848d7a69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;multiple_env&lt;/code&gt; defaults to False. It specifies whether the pillar should interpret top level folders as pillar environments (see mode section below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd75cbe6e6d7b99bcc07d413e5bade4280af48b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; parameter can be used to further differentiate between two remotes with the same URL and branch. When using two remotes with the same URL, the &lt;code&gt;name&lt;/code&gt; option is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8180e44dca5a1e575a21a7d9c75b39c88cdbbe05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; property will always be included, while the &lt;code&gt;frag&lt;/code&gt; property will get removed if not available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85efc0cc78c6cb5d6224013fe6f92a00c477b0df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; you pass in purely symbolic and does not have anything to do with the grant itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595aeffcf0a745ae4a02c0d2cfc6235a96c360da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter, which is part of the state compiler, can be used to expand the contents of a single state declaration into multiple, single state declarations. Each item in the &lt;code&gt;names&lt;/code&gt; list receives its own individual state &lt;code&gt;name&lt;/code&gt; and is converted into its own low-data structure. This is a convenient way to manage several files with similar attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d802c28b4adad825fc08c098689ab5ce9fe67216" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;napalm&lt;/code&gt; proxy module requires &lt;a href=&quot;https://napalm-automation.net/&quot;&gt;NAPALM&lt;/a&gt; library to be installed: &lt;code&gt;pip install napalm&lt;/code&gt; Please check &lt;a href=&quot;http://napalm.readthedocs.io/en/latest/installation/index.html&quot;&gt;Installation&lt;/a&gt; for complete details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28bf35a6495b91e58d2548633649f99c6130daa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;netmiko&lt;/code&gt; proxy configuration requires the following parameters in order to connect to the network device:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20c9480ba90107f4f0c6e28f2e0cd01b84332fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;netmiko&lt;/code&gt; proxy modules requires Netmiko to be installed: &lt;code&gt;pip install netmiko&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdcabcb5bafda88c27b7ec20a65b21f612f42b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;networks&lt;/code&gt; argument can be used to ensure that a container is attached to one or more networks. Optionally, arguments can be passed to the networks. In the example below, &lt;code&gt;net1&lt;/code&gt; is being configured with arguments, while &lt;code&gt;net2&lt;/code&gt; and &lt;code&gt;bridge&lt;/code&gt; are being configured &lt;em&gt;without&lt;/em&gt; arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e00db12fd8c482387b4c1214b4e722a25cc3852" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nxos_api&lt;/code&gt; proxy configuration requires the following parameters in order to connect to the network switch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f827641d289f0da312cfb8e8cd8322a7f91e6955" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parent_address&lt;/code&gt; value is a dictionary with &lt;code&gt;unique_id&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; keys. The address represents a PCI address and is itself a dictionary with &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;bus&lt;/code&gt;, &lt;code&gt;slot&lt;/code&gt; and &lt;code&gt;function&lt;/code&gt; properties. Report to &lt;a href=&quot;https://libvirt.org/formatstorage.html#StoragePool&quot;&gt;this libvirt page&lt;/a&gt; for the meaning and possible values of these properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e811af8db4995d284d91ead0c6c4b651e452c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path_style&lt;/code&gt; parameter defaults to False. It specifies whether to use path style requests or dns style requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cf25fd0bf62d60f1b7d3400442eda992aafe2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pillar_enc=gpg&lt;/code&gt; argument tells Salt that there is GPG-encrypted pillar data, so that the CLI pillar data is passed through the GPG renderer, which will iterate recursively though the CLI pillar dictionary to decrypt any encrypted values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56867dc6b54d3bdd2a535d9d5acb9af216e321b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pillar_key&lt;/code&gt; field would be specified as &lt;code&gt;firewall&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c71894dfad3328fe1174ad24a775fced2870a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pkg.installed&lt;/code&gt; state supports the usage of &lt;code&gt;reload_modules&lt;/code&gt;. This functionality allows you to force Salt to reload all modules. In many cases, Salt is clever enough to transparently reload the modules. For example, if you install a package, Salt reloads modules because some other module or state might require the package which was installed. However, there are some edge cases where this may not be the case, which is what &lt;code&gt;reload_modules&lt;/code&gt; is meant to resolve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ecdcfdeb0906d1a39f565cb678c12909ae74b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; defaults to ''. It specifies a key prefix to use when searching for data in the bucket for the pillar. It works when multiple_env is True or False. Essentially it tells ext_pillar to look for your pillar data in a 'subdirectory' of your S3 bucket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9dcfc45ab1fa9aa9736b5aebb2cf5718a5c548" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; parameter in cloud provider configuration was renamed to &lt;code&gt;driver&lt;/code&gt;. This change was made to avoid confusion with the &lt;code&gt;provider&lt;/code&gt; parameter that is used in cloud profile configuration. Cloud provider configuration now uses &lt;code&gt;driver&lt;/code&gt; to refer to the salt-cloud driver that provides the underlying functionality to connect to a cloud provider, while cloud profile configuration continues to use &lt;code&gt;provider&lt;/code&gt; to refer to the cloud provider configuration that you define.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26456fc373c3489ceec026462280d3ae29def99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxytype&lt;/code&gt; key and value pair is critical, as it tells Salt which interface to load from the &lt;code&gt;proxy&lt;/code&gt; directory in Salt's install hierarchy, or from &lt;code&gt;/srv/salt/_proxy&lt;/code&gt; on the Salt Master (if you have created your own proxy module, for example). To use this Cisco NSO Proxy Module, set this to &lt;code&gt;cisconso&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1224eba6d308fe31bc23806d979769d953cbf0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxytype&lt;/code&gt; key and value pair is critical, as it tells Salt which interface to load from the &lt;code&gt;proxy&lt;/code&gt; directory in Salt's install hierarchy, or from &lt;code&gt;/srv/salt/_proxy&lt;/code&gt; on the Salt Master (if you have created your own proxy module, for example). To use this ESXi Proxy Module, set this to &lt;code&gt;esxi&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36116c0db448dc67c410aba05ce6fb1fcd7c668f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxytype&lt;/code&gt; key and value pair is critical, as it tells Salt which interface to load from the &lt;code&gt;proxy&lt;/code&gt; directory in Salt's install hierarchy, or from &lt;code&gt;/srv/salt/_proxy&lt;/code&gt; on the Salt Master (if you have created your own proxy module, for example). To use this cimc Proxy Module, set this to &lt;code&gt;cimc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e5b914933b4fc0311bbdf7adc6348006a66c3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxytype&lt;/code&gt; key and value pair is critical, as it tells Salt which interface to load from the &lt;code&gt;proxy&lt;/code&gt; directory in Salt's install hierarchy, or from &lt;code&gt;/srv/salt/_proxy&lt;/code&gt; on the Salt Master (if you have created your own proxy module, for example). To use this panos Proxy Module, set this to &lt;code&gt;panos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90b9e78c938a072ceeb7ff41a6c9689eba18834" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxytype&lt;/code&gt; line above is critical, it tells Salt which interface to load from the &lt;code&gt;proxy&lt;/code&gt; directory in Salt's install hierarchy, or from &lt;code&gt;/srv/salt/_proxy&lt;/code&gt; on the salt-master (if you have created your own proxy module, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b937fca4573d951e3c16ad88bdded3f9c24cbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pyeapi&lt;/code&gt; Execution module requires the Python Client for eAPI (pyeapi) to be installed: &lt;code&gt;pip install pyeapi&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7788c2cac5d52ab7be3d529faa603626f0c05a15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pyeapi&lt;/code&gt; Proxy module requires pyeapi to be installed: &lt;code&gt;pip install pyeapi&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4169ebc5694108fdd59910cc4999d9f1004f213" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pyeapi&lt;/code&gt; proxy configuration requires the following parameters in order to connect to the network device:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6977a2f570677d72bc733c3ea45441f6f4af8b90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;python-gnupg&lt;/code&gt; library and &lt;code&gt;gpg&lt;/code&gt; binary are required to be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bd890fee5c7eb2dc1b02163c4facc11438c471" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;python-passlib&lt;/code&gt; library is required when using a &lt;code&gt;^filetype&lt;/code&gt; of &lt;code&gt;htpasswd&lt;/code&gt; or &lt;code&gt;htdigest&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3605ea7769885884cd8524a93c427d6fd3096a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rest_cherrypy&lt;/code&gt; netapi module is a standard Python WSGI app. It can be deployed one of two ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c25390233aa1a637dc8522e32d4c52b9e87947" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rest_wsgi&lt;/code&gt; netapi module is a standard Python WSGI app. It can be deployed one of two ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a553f11d806dec76199f3ec3664dc21522474a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root_dir&lt;/code&gt; parameter is required and points to the directory where files for each host are stored. The &lt;code&gt;follow_dir_links&lt;/code&gt; parameter is optional and defaults to False. If &lt;code&gt;follow_dir_links&lt;/code&gt; is set to True, this external pillar will follow symbolic links to other directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7495367849e43ad12c779301a1c7463d813aab47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;runas&lt;/code&gt; argument is deprecated as of 2014.1.0. &lt;code&gt;user&lt;/code&gt; should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9de09aaead39375a0093bb5924202860c230e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;s3_cache_expire&lt;/code&gt; parameter defaults to 30s. It specifies expiration time of S3 metadata cache file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f55ac8e498cfb051fa37d517c16ef0fd04317dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;s3_sync_on_update&lt;/code&gt; parameter defaults to True. It specifies if cache is synced on update rather than jit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebce91d43f717402f5e191ab7f8d2d808aa5303" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;salt-key&lt;/code&gt; command makes use of this outputter to format its output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3f245b9c91604840ffd02da68953f33007dd60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secret&lt;/code&gt; value links to a libvirt secret object. It is a dictionary with &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; keys. The type value can be either &lt;code&gt;uuid&lt;/code&gt; or &lt;code&gt;usage&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf82ff787402abf0f066eece00a3644bb9c6de6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;service_url&lt;/code&gt; parameter defaults to 's3.amazonaws.com'. It specifies the base url to use for accessing S3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814e119829151162161911b855cf4d8c2ba2879f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; parameter can also specify a file in another Salt environment. In this example &lt;code&gt;foo.conf&lt;/code&gt; in the &lt;code&gt;dev&lt;/code&gt; environment will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c3b9a1aefa00f042bf730062f105dac037de18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; parameter can be specified as a list. If this is done, then the first file to be matched will be the one that is used. This allows you to have a default file on which to fall back if the desired file does not exist on the salt fileserver. Here's an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d4950e3b290576b72cb562cd5bbb19e96dc0d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;states.ldap&lt;/code&gt; state module allows you to manage LDAP entries and their attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28288487a0b4b2414863256031fde546b567ca6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tgt_type&lt;/code&gt; argument is used to pass a target other than a glob into the execution, the available options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7672f40878618abeef4337e49f22f31e0efea41d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thread_pool&lt;/code&gt; and &lt;code&gt;socket_queue_size&lt;/code&gt; settings can be used to increase the capacity of rest_cherrypy to handle incoming requests. Keep an eye on RAM usage as well as available file handles while testing changes to these settings. As salt-api is a thin wrapper around Salt's Python API, also keep an eye on the performance of Salt when testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef528ed160463e40e8891c299773b337d0f6351" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;verify_ssl&lt;/code&gt; parameter defaults to True. It specifies whether to check for valid S3 SSL certificates. &lt;em&gt;NOTE&lt;/em&gt; If you use bucket names with periods, this must be set to False else an invalid certificate error will be thrown (issue #12200).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4166a43b14f16dd918f913e38febf3681eb88281" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;win_wua.list&lt;/code&gt; and &lt;a href=&quot;#salt.modules.win_wua.get&quot;&gt;&lt;code&gt;win_wua.get&lt;/code&gt;&lt;/a&gt; functions are utility functions. In addition to returning information about updates they can also download and install updates by setting &lt;code&gt;download=True&lt;/code&gt; or &lt;code&gt;install=True&lt;/code&gt;. So, with py:func:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72cc7b6002f5ac3a278602c73892472ffdef375" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;report_failures&lt;/em&gt;, &lt;em&gt;report_changes&lt;/em&gt;, and &lt;em&gt;report_everything&lt;/em&gt; flags provide filtering of the results. If you want an email to be sent every time, then &lt;em&gt;report_everything&lt;/em&gt; is your choice. If you want to be notified only when changes were successfully made use &lt;em&gt;report_changes&lt;/em&gt;. And &lt;em&gt;report_failures&lt;/em&gt; will generate an email if there were failures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77caac1d4deba085e276d89009214f51eed6f637" translate="yes" xml:space="preserve">
          <source>The API URl to be used. If not specified here or in the configuration options of master or minion, will use the public HipChat API: &lt;a href=&quot;https://api.hipchat.com&quot;&gt;https://api.hipchat.com&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1eaaa558d3e98be0a5c1c61703751f76898c4e" translate="yes" xml:space="preserve">
          <source>The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to CloudWatch Logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc794c5a8bb10ad91f97a91c6f47fd89c1e7b197" translate="yes" xml:space="preserve">
          <source>The ARN from the Key Store with which the instance is associated for TDE encryption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10a4f917ae40a01bbf3fc997901fe85c4131b4b" translate="yes" xml:space="preserve">
          <source>The ARN of an SNS topic to which notifications are sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701b00c7f99fc3c5cc330bc396e2a0e215bca11e" translate="yes" xml:space="preserve">
          <source>The ARN of the Application Load Balancer Target Group to add targets to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee7c818721270182859cd9d4776900cc74e24c2" translate="yes" xml:space="preserve">
          <source>The ARN of the Application Load Balancer Target Group to remove targets from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10407ffdc019b8dadc42039befa06d530ae16b8e" translate="yes" xml:space="preserve">
          <source>The ASN of the circuit provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664ed739d480ceee15658717450fedac3bdae3bc" translate="yes" xml:space="preserve">
          <source>The AWS arn that notifications will be sent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6a09357c7c5e844efc218d84bd3f75baa2b1ee" translate="yes" xml:space="preserve">
          <source>The Aliyun cloud module is used to control access to the aliyun ECS. &lt;a href=&quot;http://www.aliyun.com/&quot;&gt;http://www.aliyun.com/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb355bbcb7acbd6e57981f8e4d270e6b04cbd12" translate="yes" xml:space="preserve">
          <source>The Amazon Resource Name (ARN) of the Amazon Kinesis or the Amazon DynamoDB stream that is the event source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc08ec0437d52b26faf594f3a3b017df2075310" translate="yes" xml:space="preserve">
          <source>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85848fc0bbc7a9673c8ce9eaafe87eb89d5e8fc" translate="yes" xml:space="preserve">
          <source>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications will be sent. The Amazon SNS topic owner must be the same as the cache cluster owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5763358e9a4317e394696feecdbe4962408bea" translate="yes" xml:space="preserve">
          <source>The Amazon Resource Name (ARN) of the IAM role associated with the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba6ab6d20e1b7ce54cd98317b2b51fa9a095d92" translate="yes" xml:space="preserve">
          <source>The Amazon S3 object (the deployment package) key name you want to upload. If this is specified, S3Key must be specified and ZipFile must NOT be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cada8941ab8b4cf46fe60eccbb0014d8cb27d95" translate="yes" xml:space="preserve">
          <source>The Amazon SNS topic owner must be the same as the cache cluster owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1572b7130959a593fd2699e9a42c0419ba1518a" translate="yes" xml:space="preserve">
          <source>The Augeas commands to execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0205c247f5e05a9e98cfe730e8195eeb0d3b10" translate="yes" xml:space="preserve">
          <source>The Augeas context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd90b4e7637e9a4a8fe5165f224ef52cee9d532" translate="yes" xml:space="preserve">
          <source>The Augeas lens to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1675ff5a68cdfbe9eaee3bcb690cbf8bb14155b7" translate="yes" xml:space="preserve">
          <source>The Azure ARM cloud module is used to control access to Microsoft Azure Resource Manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7115401f91c92254b1383f3bd80ef3f27f13def8" translate="yes" xml:space="preserve">
          <source>The Azure cloud module is used to control access to Microsoft Azure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c036d9accc82ad54d075887daf939be6599256" translate="yes" xml:space="preserve">
          <source>The CIDR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd50845442c95d450b161aefac4621f151dfecb6" translate="yes" xml:space="preserve">
          <source>The CN &lt;em&gt;must&lt;/em&gt; match an existing CSR generated by create_csr. If it does not, this method does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46177e14353ed0c1a74ca36426525934e7bce096" translate="yes" xml:space="preserve">
          <source>The CRL to verify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e831578c5e3956b2052b8fb00b1e38bf33d684" translate="yes" xml:space="preserve">
          <source>The Cassandra cluster members and connection port can either be specified in the master or minion config, the minion's pillar or be passed to the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae14f42dae64f15ec9575e7cf1c92139d7cddd9" translate="yes" xml:space="preserve">
          <source>The CherryPy server is a production-ready, threading HTTP server written in Python. Because it makes use of a thread pool to process HTTP requests it is not ideally suited to maintaining large numbers of concurrent, synchronous connections. On moderate hardware with default settings it should top-out at around 30 to 50 concurrent connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856facb5221334dd613119ace8cd57b10deb2a9a" translate="yes" xml:space="preserve">
          <source>The Cisco NX OS Proxy Minion uses the built in SSHConnection module in &lt;code&gt;salt.utils.vt_helper&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0c8e041483d3e108b85fad99e600eabd5dedda" translate="yes" xml:space="preserve">
          <source>The CloudStack cloud module is used to control access to a CloudStack based Public Cloud.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66748ecc84ec871e8d26530c4ca34c660f94a76" translate="yes" xml:space="preserve">
          <source>The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5e8242934a1d6219000494c4bdb154b6d0f73a" translate="yes" xml:space="preserve">
          <source>The DB parameters that need to be changed of type dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d833047bceb91806b49474d5b65cd954793c17c1" translate="yes" xml:space="preserve">
          <source>The DNs are mapped to a description of the LDAP entry's desired state. These LDAP entry descriptions are themselves iterables of dicts. Each dict in the iterable is processed in order. They contain directives controlling the entry's state. The key names the directive type and the value is state information for the directive. The specific structure of the state information depends on the directive type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54b10a9ef0f6720cd3af7702cfffaec098abcbc" translate="yes" xml:space="preserve">
          <source>The DRAC module is used to create and manage DRAC cards on Dell servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d647234d50e3f485e94c6531b25e1820a160204d" translate="yes" xml:space="preserve">
          <source>The Data Disk ID to be used for this config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3546cbc96c7bde204ff3b3a0d8c43a7438f4d782" translate="yes" xml:space="preserve">
          <source>The Dell CMC units perform adequately but many iDRACs are &lt;strong&gt;excruciatingly&lt;/strong&gt; slow. Some functions can take minutes to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967903a4faac12c2f7405c101a1d8055c66efd16" translate="yes" xml:space="preserve">
          <source>The DigitalOcean cloud module is used to control access to the DigitalOcean VPS system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ceb39da3183b4ec6cfc25fac5c3ee7efde3e75" translate="yes" xml:space="preserve">
          <source>The Display Name is what is displayed in Windows when services.msc is executed. Each Display Name has an associated Service Name which is the actual name of the service. This function allows you to discover the Service Name by returning a dictionary of Display Names and Service Names, or filter by adding arguments of Display Names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1117c9a7596e00e3c138f218c4c253f3a3ee78" translate="yes" xml:space="preserve">
          <source>The Docker Swarm Module is used to manage and create Docker Swarms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8016049ac6ca848b2fe0cd16d176a160ac6035" translate="yes" xml:space="preserve">
          <source>The DynamoDB datatype of the hash key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa30088c3796d58290b858a282b94cc336e75d90" translate="yes" xml:space="preserve">
          <source>The DynamoDB datatype of the range key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130fde57a8f92d9b7c4f876447c0d4cd2e3dfca8" translate="yes" xml:space="preserve">
          <source>The EC2 Availability Zone in which the cache cluster is created. All nodes belonging to this Memcached cache cluster are placed in the preferred Availability Zone. If you want to create your nodes across multiple Availability Zones, use PreferredAvailabilityZones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f880eca72a859bcaefd1d311439f2e58073fae" translate="yes" xml:space="preserve">
          <source>The EC2 Availability Zone in which the cache cluster will be created. All cache nodes belonging to a cache cluster are placed in the preferred availability zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c89bdacf00e0aea5468cc8e778aac28893bcd6" translate="yes" xml:space="preserve">
          <source>The EC2 Availability Zone that the database instance will be created in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08abf0c08b824edb4127817e10c86e2d1c12c295" translate="yes" xml:space="preserve">
          <source>The EC2 Cloud Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2134fb528a787bb3492856d6c6badb0841e8069d" translate="yes" xml:space="preserve">
          <source>The EC2 cloud module is used to interact with the Amazon Elastic Compute Cloud.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17ab8abf9e28f99afcd106f4a394ffb026ea382" translate="yes" xml:space="preserve">
          <source>The ESXCLI command to run. Note: This should not include the &lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--protocol&lt;/code&gt;, or &lt;code&gt;--portnumber&lt;/code&gt; arguments that are frequently passed when using a bare ESXCLI command from the command line. Those arguments are handled by this function via the other args and kwargs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b24aafde8467d419f98461fe1f9070a02ba2ad" translate="yes" xml:space="preserve">
          <source>The ESXCLI package is also referred to as the VMware vSphere CLI, or vCLI. VMware provides vCLI package installation instructions for &lt;a href=&quot;http://pubs.vmware.com/vsphere-55/index.jsp#com.vmware.vcli.getstart.doc/cli_install.4.2.html&quot;&gt;vSphere 5.5&lt;/a&gt; and &lt;a href=&quot;http://pubs.vmware.com/vsphere-60/index.jsp#com.vmware.vcli.getstart.doc/cli_install.4.2.html&quot;&gt;vSphere 6.0&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2abfa1f512d612dd37b67cd1dc35059ab67d45" translate="yes" xml:space="preserve">
          <source>The External Nodes Classifier is a master tops subsystem that retrieves mapping information from major configuration management systems. One of the most common external nodes classifiers system is provided by Cobbler and is called &lt;code&gt;cobbler-ext-nodes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ffe3a823b4fb112e628bc118926f4054971033" translate="yes" xml:space="preserve">
          <source>The FQDN (including final period) of the zone you wish absent. If not provided, the value of name will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d696d2fb0af064187ceeb9437146b3ffdf0b38" translate="yes" xml:space="preserve">
          <source>The FQDN of the Hosted Zone (including final period)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd039c151aadde25dd3b61b0f08e5baa6a9b690" translate="yes" xml:space="preserve">
          <source>The Git fileserver backend supports both &lt;a href=&quot;https://github.com/libgit2/pygit2&quot;&gt;pygit2&lt;/a&gt; and &lt;a href=&quot;https://github.com/gitpython-developers/GitPython&quot;&gt;GitPython&lt;/a&gt;, to provide the Python interface to git. If both are present, the order of preference for which one will be chosen is the same as the order in which they were listed: pygit2, then GitPython.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0018931c2f2722cafdd253fe7ba3d221b840eb9e" translate="yes" xml:space="preserve">
          <source>The GoGrid cloud module. This module interfaces with the gogrid public cloud service. To use Salt Cloud with GoGrid log into the GoGrid web interface and create an api key. Do this by clicking on &quot;My Account&quot; and then going to the API Keys tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77e3adbad9688ded763c9db8d89ed11dc9111d2" translate="yes" xml:space="preserve">
          <source>The Google Compute Engine module. This module interfaces with Google Compute Engine (GCE). To authenticate to GCE, you will need to create a Service Account. To set up Service Account Authentication, follow the &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/cloud/gce.html#gce-setup&quot;&gt;Google Compute Engine Setup&lt;/a&gt; instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73b2bc8f10301d6371c94b73a78602c47457e92" translate="yes" xml:space="preserve">
          <source>The HighState Outputter is only meant to be used with the state.highstate function, or a function that returns highstate return data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d90867fcdaa1acf70c1f68051aa7cd61e6e57c8" translate="yes" xml:space="preserve">
          <source>The HipChat API key. It requires a key for global usgae, assigned per user, rather than room.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feadc9c3525f28192fff482c76269304f7277caf" translate="yes" xml:space="preserve">
          <source>The HipChat room name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d65425b5841d08d7d7c5493de5772c985c45f0" translate="yes" xml:space="preserve">
          <source>The IAM instance profile to associate with the instances. This is either the Amazon Resource Name (ARN) of the instance profile or the name of the role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b74e04217a03e94af90e06fed3a9fdea1748ca" translate="yes" xml:space="preserve">
          <source>The ID declaration is ignored, as the package name is read from the &lt;code&gt;sources&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb37a5477a0c0e14f4bee613b093adc9fc5e656" translate="yes" xml:space="preserve">
          <source>The ID of a zone to create the record in. Exclusive with DomainName.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f90a8dc7c3a04fabe43c6e8538f7ff731792fe" translate="yes" xml:space="preserve">
          <source>The ID of the Config to boot. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cced872384c57833c9eeac41b1aec4b8f0c7c7c" translate="yes" xml:space="preserve">
          <source>The ID of the Datacenter where the Linode will be placed. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae511afc070d1f109b8cdd52af609b36417dc7e" translate="yes" xml:space="preserve">
          <source>The ID of the Linode for which to get data. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a580cb0f303182f3783a86f8217457d3faa545" translate="yes" xml:space="preserve">
          <source>The ID of the Linode for which to get the config_id. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa92527a86ee2638450e82b9bc10fcc03b6d7659" translate="yes" xml:space="preserve">
          <source>The ID of the Linode to boot. If provided, will be used as an alternative to &lt;code&gt;name&lt;/code&gt; and reduces the number of API calls to Linode by one. Will be preferred over &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0645328f6161648cd3ac5717382d96d192b48a8c" translate="yes" xml:space="preserve">
          <source>The ID of the Linode to clone. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc43470f9524047f0f1e47abb981dfc6bf2ce358" translate="yes" xml:space="preserve">
          <source>The ID of the Linode to create the IP address for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a2a6381a8852007ff6f98e44093b5cb33228f2" translate="yes" xml:space="preserve">
          <source>The ID of the Linode to create the configuration for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac00b5d2e759e679c658d635a6e9f9610064733a" translate="yes" xml:space="preserve">
          <source>The ID of the Linode to create the data disk for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2c159e5b3b14fff099bcda0be9295f88a1169f" translate="yes" xml:space="preserve">
          <source>The ID of the Linode to create the distribution disk for. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f4ebb63d945a2a27e3c53e61c61b650a2137e8" translate="yes" xml:space="preserve">
          <source>The ID of the Linode to create the swap disk for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a03d3828b11d163297bc234b8655cd3283e04e" translate="yes" xml:space="preserve">
          <source>The ID of the Linode to shutdown. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba585abb6554494ab99ef9f021542723ff497f0f" translate="yes" xml:space="preserve">
          <source>The ID of the VPC to create the security group in, if any. Exclusive with vpc_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77324690780a1583cfa2cb98a7d0e6ca6f23acf" translate="yes" xml:space="preserve">
          <source>The ID of the VPC to remove the security group from, if any. Exclusive with vpc_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a716d5fbaa15dc4773287da8dd644fd1c3f5a9ff" translate="yes" xml:space="preserve">
          <source>The ID of the Volume from which to create a snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43f81fe53723029586fe31570825d353436d1cb" translate="yes" xml:space="preserve">
          <source>The ID of the address range to free.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5737d834bd94df7ee7d2dfa6dcff74511a45c39b" translate="yes" xml:space="preserve">
          <source>The ID of the cluster for which to add the new virtual network. Can be used instead of &lt;code&gt;cluster_name&lt;/code&gt;. If neither &lt;code&gt;cluster_id&lt;/code&gt; nor &lt;code&gt;cluster_name&lt;/code&gt; are provided, the virtual network won&amp;rsquo;t be added to any cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e8e30a3447a5f4e65010c871fb394c88e884ec" translate="yes" xml:space="preserve">
          <source>The ID of the data-store to be used for the new image. Can be used instead of &lt;code&gt;datastore_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab301382a7a7d371747bffd4b524ceaa30f174d4" translate="yes" xml:space="preserve">
          <source>The ID of the disk to detach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a38205ea4988cbd76070f7d736d58e0f4ab1a9" translate="yes" xml:space="preserve">
          <source>The ID of the disk to revert its state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140f6d6200693958251a4289ff5d2a675dfcfc0b" translate="yes" xml:space="preserve">
          <source>The ID of the disk to save.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c7934e9724fe9884d28f74378b0f5b19dad7f1" translate="yes" xml:space="preserve">
          <source>The ID of the host to which the VM will be migrated. Can be used instead of &lt;code&gt;host_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0500436dfc628fb5db1f42e04f56988ea60cbc18" translate="yes" xml:space="preserve">
          <source>The ID of the image for which to gather information. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276b3f7a48ac436a2b9159c9906bff9bf6b4a9ad" translate="yes" xml:space="preserve">
          <source>The ID of the image from which to delete the snapshot. Can be used instead of &lt;code&gt;image_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c72df65bb4884091b96ea269fd886ae93959c9" translate="yes" xml:space="preserve">
          <source>The ID of the image to be cloned. Can be used instead of &lt;code&gt;image_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05701e09d6a1dc40152dc1816f143c2aaf999177" translate="yes" xml:space="preserve">
          <source>The ID of the image to delete. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d27a6cb0bfe4cd98e520acbbbefaab5cbf2563" translate="yes" xml:space="preserve">
          <source>The ID of the image to revert. Can be used instead of &lt;code&gt;image_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cb017669d823f386a23bd43dc473f8d6b7c73c" translate="yes" xml:space="preserve">
          <source>The ID of the image to set. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7c03892275752336bb7fe1da0c8a8aff21058c" translate="yes" xml:space="preserve">
          <source>The ID of the image to update. Can be used instead of &lt;code&gt;image_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81fc14a53e0a6bac2391468d59cfc6b81f547c8" translate="yes" xml:space="preserve">
          <source>The ID of the image. Can be used instead of &lt;code&gt;image_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f3557b3ee8a47c0995f5dede448c7f55174e72" translate="yes" xml:space="preserve">
          <source>The ID of the job to retrieve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ca46f03f019e890a642fe5fc0ac896ad2ec72e" translate="yes" xml:space="preserve">
          <source>The ID of the kernel to use for this configuration profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8b349920399069ef9b4d92b2ea1d6efe69e998" translate="yes" xml:space="preserve">
          <source>The ID of the nic to detach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a4ca0779c660281ab2202ae755fd11d13a658f" translate="yes" xml:space="preserve">
          <source>The ID of the plan (size) of the Linode. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7279923b6c51a767e8c9ac30bc6ab6ab8b0debff" translate="yes" xml:space="preserve">
          <source>The ID of the replication group to which this cache cluster should belong. If this parameter is specified, the cache cluster is added to the specified replication group as a read replica; otherwise, the cache cluster is a standalone primary that is not part of any replication group. If the specified replication group is Multi-AZ enabled and the Availability Zone is not specified, the cache cluster is created in Availability Zones that provide the best spread of read replicas across Availability Zones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01eb5fc00ddc94a8a126bf1e7d17a989a895488" translate="yes" xml:space="preserve">
          <source>The ID of the security group for which to gather information. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eff27105df8263d6ff32967c0704dd9cea4f1e9" translate="yes" xml:space="preserve">
          <source>The ID of the security group to be cloned. Can be used instead of &lt;code&gt;secgroup_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5340fb878101c88e44406dbe45449db994bf53bc" translate="yes" xml:space="preserve">
          <source>The ID of the security group to delete. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b407649c660148cb7ab06b4ee0df1371ea4d4538" translate="yes" xml:space="preserve">
          <source>The ID of the security group to update. Can be used instead of &lt;code&gt;secgroup_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee12c46443bb14071c3fcd3f65f4b4190c46a00" translate="yes" xml:space="preserve">
          <source>The ID of the snapshot to be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0aca6b04e3d8b159806dbd91dce1b6f545787e" translate="yes" xml:space="preserve">
          <source>The ID of the snapshot to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ae41ac7fa85d500d719af7eb869785add70eac" translate="yes" xml:space="preserve">
          <source>The ID of the snapshot to export. If not set, the current image state will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c96265957d59818da5f767f9d248e74df10f22" translate="yes" xml:space="preserve">
          <source>The ID of the snapshot to flatten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dff4c8899b66dfee4930b5284528622c6dc8147" translate="yes" xml:space="preserve">
          <source>The ID of the snapshot to which the image will be reverted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ab00ca9254646eb354bcb826380dd6a885067b" translate="yes" xml:space="preserve">
          <source>The ID of the snapshot to which the snapshot should be reverted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83eb5045f9f642095ddcd820959b089dbdf2962d" translate="yes" xml:space="preserve">
          <source>The ID of the target host where the VM will be deployed. Can be used instead of &lt;code&gt;host_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f4d7fa9aea5ce1add8f00a2c15e5077341f5ac" translate="yes" xml:space="preserve">
          <source>The ID of the target system data-store where the VM will be deployed. Optional and can be used instead of &lt;code&gt;datastore_name&lt;/code&gt;. If neither &lt;code&gt;datastore_id&lt;/code&gt; nor &lt;code&gt;datastore_name&lt;/code&gt; are set, OpenNebula will choose the data-store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298bb7a03e15f225e1d22d8574c00d08c69929bf" translate="yes" xml:space="preserve">
          <source>The ID of the template from which the VM will be created. Can be used instead of &lt;code&gt;template_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7688de858ee630919885895081d5df45d784122" translate="yes" xml:space="preserve">
          <source>The ID of the template to be cloned. Can be used instead of &lt;code&gt;template_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa6badf9883edc57f5b9ec59673e9fa7f4a9e70" translate="yes" xml:space="preserve">
          <source>The ID of the template to delete. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06ac9299477aeda14989a76def61663ba0b995f" translate="yes" xml:space="preserve">
          <source>The ID of the template to update. Can be used instead of &lt;code&gt;template_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbf7566d81fad7f3b7243f2fe47bcd98b8e6d99" translate="yes" xml:space="preserve">
          <source>The ID of the tenant who owns the network. Only administrative users can specify a tenant ID other than their own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a138d269356cc9d3da56edc778ca5dbc47cef4" translate="yes" xml:space="preserve">
          <source>The ID of the virtual network for which to gather information. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec0f9481cce47f95de6543552f519319f6299d2" translate="yes" xml:space="preserve">
          <source>The ID of the virtual network from which to free an address range. Can be used instead of &lt;code&gt;vn_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077df08c78538eaa348a9a55ad83444d33d940ac" translate="yes" xml:space="preserve">
          <source>The ID of the virtual network from which to hold the lease. Can be used instead of &lt;code&gt;vn_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00e09b12b82ebc18b6862a73b72cfe1f3de656d" translate="yes" xml:space="preserve">
          <source>The ID of the virtual network from which to release the lease. Can be used instead of &lt;code&gt;vn_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbd1e4a0e1d607140bafc8f08c075dd0ed9ef7f" translate="yes" xml:space="preserve">
          <source>The ID of the virtual network from which to reserve addresses. Can be used instead of vn_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e55f96933b1cfe6cb5dbcfaa7e8bf7a13cc5be" translate="yes" xml:space="preserve">
          <source>The ID of the virtual network to add the address range. Can be used instead of &lt;code&gt;vn_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56946225ae98f6b884829010d7afbd88af7d0ede" translate="yes" xml:space="preserve">
          <source>The ID of the virtual network to delete. Can be used instead of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92adc71b51e5b96d848d9bcc92a250ee4ac8a72" translate="yes" xml:space="preserve">
          <source>The ID of the zone to delete the record from. Exclusive with DomainName.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce90ca7028212040028134c71163798f3a22fa5" translate="yes" xml:space="preserve">
          <source>The IP Address or FQDN to use when connecting to the device. Alternatively, the following field names can be used instead: &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;fqdn&lt;/code&gt;, &lt;code&gt;ip&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68541262f4a408c0b6f0f4a48c74b2621b9c5c9" translate="yes" xml:space="preserve">
          <source>The IP address and CIDR, e.g., &lt;code&gt;192.168.1.1/24&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c948b567927b74c8ca65d4bf9e90751014eff32c" translate="yes" xml:space="preserve">
          <source>The IP address of host that will accept the dump.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8054b6360d0484cd659b2d57156353a18a781950" translate="yes" xml:space="preserve">
          <source>The IP address of the bridged adapter will typically be assigned by DHCP and unknown to you, but you should be able to determine what IP network the address will be chosen from. If you enter a CIDR network mask, Salt will attempt to find the VM's address for you. The host machine will send an &quot;ifconfig&quot; command to the VM (using ssh to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff261c334b68cc4732a1f1eb0781b477baa82774" translate="yes" xml:space="preserve">
          <source>The IP address or DNS host name of the connection device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36664aace9b4ace795c2f54a3440a0a5eec63e30" translate="yes" xml:space="preserve">
          <source>The IP address to associate with the given hostnames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2a54c1796f6ac115e945b8267f1aa8a3839805" translate="yes" xml:space="preserve">
          <source>The IP of the device to ping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9592c55e1d869dd99c237a3ac92f4112fafc02e2" translate="yes" xml:space="preserve">
          <source>The IP parameters for this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee76b9e006aa178eb5f1f48f0122e358ba8174d" translate="yes" xml:space="preserve">
          <source>The IP version, which is 4 or 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e77933ea576d5c4b163e00b463db20f3e0ab448" translate="yes" xml:space="preserve">
          <source>The Id and that can be obtained via swarm.node_ls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680b2294cd5e23f76fd200c4683588fd2b643e8b" translate="yes" xml:space="preserve">
          <source>The JIRA ID of the ticket to manipulate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6ebebcc2a09a84ed0aed0618f700cff932d8f8" translate="yes" xml:space="preserve">
          <source>The JIRA iD of the ticket to close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c99d31a68ec72c30246f61f9595a9e2a197f302" translate="yes" xml:space="preserve">
          <source>The JSON document that describes the policy. The length of the policyDocument must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ad25958199255025b71a54bccad38aa47bc6d6" translate="yes" xml:space="preserve">
          <source>The JSON serializable object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3f526f6334bd50243c5eb5b78a6aa2873c9245" translate="yes" xml:space="preserve">
          <source>The Jinja example above would generate the following configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0bbfe8b658a08369c08f1cb0c442b3531a9426" translate="yes" xml:space="preserve">
          <source>The Joyent Cloud module is used to interact with the Joyent cloud system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f41b176bc355e79c239433ea60c7805f4809e7" translate="yes" xml:space="preserve">
          <source>The Kernel modules on a system can be managed cleanly with the kmod state module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39364ef84c77d76b12490d01f78f6a200d0705c" translate="yes" xml:space="preserve">
          <source>The KeyID of the GPG key to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d556bd5c4bc67b9c1e42d7cc5b1d02c3b471b1c" translate="yes" xml:space="preserve">
          <source>The KeyID or a list of KeyIDs of the GPG key to install. This option also requires the &lt;code&gt;keyserver&lt;/code&gt; option to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2cd04df6b812c3cbc0d73a42715ea56349b6644" translate="yes" xml:space="preserve">
          <source>The LC_COLLATE setting to be used in this database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313594e74970d60450171e829dea10c11d117855" translate="yes" xml:space="preserve">
          <source>The LC_CTYPE setting to be used in this database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5e153ca1879fee6a857ecf98e458298240e31d" translate="yes" xml:space="preserve">
          <source>The LVS packet forwarding method(&lt;code&gt;dr&lt;/code&gt; for direct routing, &lt;code&gt;tunnel&lt;/code&gt; for tunneling, &lt;code&gt;nat&lt;/code&gt; for network access translation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb664a8099f835f5ece8919278c0b4ae22c3d6d" translate="yes" xml:space="preserve">
          <source>The LVS real server address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6bc086c2e704e10566c7fd2bc0a3191e228a8e" translate="yes" xml:space="preserve">
          <source>The LVS server name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2403c93ec6fbf50423f543de4d20c97610be0b59" translate="yes" xml:space="preserve">
          <source>The LVS service address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc3dd8931687dbc8b5f83cd49e56c6d6ec1f7e4" translate="yes" xml:space="preserve">
          <source>The LVS service address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ecdc4e07d27de465d28182dd9a6b893eda5015" translate="yes" xml:space="preserve">
          <source>The LVS service name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88426a2760327d737ec13e31a8295879cf55940f" translate="yes" xml:space="preserve">
          <source>The Lambda function to invoke when AWS Lambda detects an event on the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1994d5781e15ace2f60fea8b2c39fdf7766f87d7" translate="yes" xml:space="preserve">
          <source>The Librato python client can be found at: &lt;a href=&quot;https://github.com/librato/python-librato&quot;&gt;https://github.com/librato/python-librato&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90eda8c002c56983486ba832b46d558c8be1097" translate="yes" xml:space="preserve">
          <source>The Linode cloud module is used to control access to the Linode VPS system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d90b85c154e097f8a4005a614d148e71b5a41c" translate="yes" xml:space="preserve">
          <source>The Linux ACL module requires the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44bae71b7d9ec9ef2daf526414909c2361538b0" translate="yes" xml:space="preserve">
          <source>The Linux ACL state module requires the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0d27dc64c5ab9974af24030698703c6d0a6847" translate="yes" xml:space="preserve">
          <source>The Logical Volume to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2f00c82545465eef8522a2e759edb3892793e6" translate="yes" xml:space="preserve">
          <source>The Logstash endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e39e5c10f2553188eb0e46d0400a6b9e6793b40" translate="yes" xml:space="preserve">
          <source>The MDS name (must start with &lt;code&gt;mds.&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c73e264d5a0742b50f4ac14606be7a9fcfcdba9" translate="yes" xml:space="preserve">
          <source>The MLS range of the SELinux context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1838f753c8be4ee0856a86b11bac70774acf7581" translate="yes" xml:space="preserve">
          <source>The Mongo ext_pillar takes advantage of the fact that the Salt Master configuration file is yaml. It uses a sub-dictionary of values to adjust specific features of the pillar. This is the explicit single-line dictionary notation for yaml. One may be able to get the easier-to-read multi-line dict to work correctly with some experimentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d3db2bd9f6ee96115a4219d486bf0c12b0a9b1" translate="yes" xml:space="preserve">
          <source>The MySQL authentication information specified in the minion config file can be overridden in states using the following arguments: &lt;code&gt;connection_host&lt;/code&gt;, &lt;code&gt;connection_port&lt;/code&gt;, &lt;code&gt;connection_user&lt;/code&gt;, &lt;code&gt;connection_pass&lt;/code&gt;, &lt;code&gt;connection_db&lt;/code&gt;, &lt;code&gt;connection_unix_socket&lt;/code&gt;, &lt;code&gt;connection_default_file&lt;/code&gt; and &lt;code&gt;connection_charset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fad458a993108ba26b74db10e1a281ce2fd7d8" translate="yes" xml:space="preserve">
          <source>The NETCONF RPC timeout (in seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a19ee89b47bbd5fa5e4ebf3e3b1a5f98ee8e53" translate="yes" xml:space="preserve">
          <source>The NETCONF RPC timeout (in seconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2aa49ec1ac64f2569b317d8b427920ed80c2ed9" translate="yes" xml:space="preserve">
          <source>The NETCONF RPC timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44312158c63d554e68b8e4a4574c3eedd997a184" translate="yes" xml:space="preserve">
          <source>The NPM registry from which to install the package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dafe8a48ba10be4c62fe9e9667b1b7d4649b992" translate="yes" xml:space="preserve">
          <source>The NPM registry to install the package from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eef012813b6a56ae7417446a7184d36468cd06f" translate="yes" xml:space="preserve">
          <source>The Name tag value for the volume. If no volume with that matching name tag is found, a new volume will be created. If multiple volumes are matched, the state will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c5920de42ca98459c32bcfd8976687317637fe" translate="yes" xml:space="preserve">
          <source>The Namecheap username, API key and URL should be set in the minion configuration file, or in the Pillar data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87c79cae75e724ed10cecb4cbbf0d2eb721c7e8" translate="yes" xml:space="preserve">
          <source>The Netbox id for the IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5befe764cc65295ae6bc8ba85af457189bb7a02" translate="yes" xml:space="preserve">
          <source>The OpenConfig model to apply the defaults to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f0b91918a8db7e0ec1262ae974a61a95f06b98" translate="yes" xml:space="preserve">
          <source>The OpenConfig-structured object to inspect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26ed3693b858d606111f8ac2c49995c490e9589" translate="yes" xml:space="preserve">
          <source>The OpenNebula cloud module is used to control access to an OpenNebula cloud.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8a06d127154d12970ea1b68d31e2f4b8c359b1" translate="yes" xml:space="preserve">
          <source>The OpenStack Nova module for Salt Cloud was bootstrapped from the OpenStack module for Salt Cloud, which uses a libcloud-based connection. The Nova module is designed to use the nova and glance modules already built into Salt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fb6ab9065ead4fd94b637256cccadf8b6c8b65" translate="yes" xml:space="preserve">
          <source>The PEM formatted text to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01611d3f7c7a4dc0e7a96229f33682f340ec2bbb" translate="yes" xml:space="preserve">
          <source>The PEM type to be saved, for example &lt;code&gt;CERTIFICATE&lt;/code&gt; or &lt;code&gt;PUBLIC KEY&lt;/code&gt;. Adding this will allow the function to take input that may contain multiple pem types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ba18123c04da556d71da2b645fecee5795d2db" translate="yes" xml:space="preserve">
          <source>The PID for the service if it is running, or 'loaded' if the service should not always have a PID, or otherwise an empty string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d736919e2053cce98e989b0a02b3a8eecdd1728c" translate="yes" xml:space="preserve">
          <source>The PKI Client PowerShell module is only available on Windows 8+ and Windows Server 2012+. &lt;a href=&quot;https://technet.microsoft.com/en-us/library/hh848636(v=wps.620).aspx&quot;&gt;https://technet.microsoft.com/en-us/library/hh848636(v=wps.620).aspx&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d7c32c94d51dc09859c05197b1320a0a5434a3" translate="yes" xml:space="preserve">
          <source>The Panorama pass-through method sends all connections through the Panorama management system. It passes the connections to the appropriate device using the serial number of the Palo Alto firewall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f15d151e1219125b1fd53cc04371fbce6ca8c88" translate="yes" xml:space="preserve">
          <source>The Panorama server can also utilize a generated 'API key'_ for authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c450146f2c0cf824308b689537129d7c604b753" translate="yes" xml:space="preserve">
          <source>The Parallels cloud module is used to control access to cloud providers using the Parallels VPS system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c3f22382cf0ac19994dd82f93f1cbc35d5533b" translate="yes" xml:space="preserve">
          <source>The Physical Volume to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c02f14757aaae4609e8174269b5cdd084404b15" translate="yes" xml:space="preserve">
          <source>The ProfitBricks SaltStack cloud module allows a ProfitBricks server to be automatically deployed and bootstraped with Salt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de4d35fe720457014c24118a6ac040b6eff2358" translate="yes" xml:space="preserve">
          <source>The Proxmox cloud module is used to control access to cloud providers using the Proxmox system (KVM / OpenVZ / LXC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3700680d04c4cc98a0aa682276151e8f792f4d" translate="yes" xml:space="preserve">
          <source>The Python &lt;a href=&quot;https://docs.python.org/2/library/zipfile.html&quot;&gt;zipfile&lt;/a&gt; module does not extract file/directory attributes by default. When this argument is set to &lt;code&gt;True&lt;/code&gt;, Salt will attempt to apply the file permission attributes to the extracted files/folders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa06e0af37d22742badc0934b4cc324c5e36ae1" translate="yes" xml:space="preserve">
          <source>The Python interface to PAM does not support authenticating as &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d712eefeb35dc5d39cd20731f82c023e2aa567" translate="yes" xml:space="preserve">
          <source>The QingCloud cloud module is used to control access to the QingCloud. &lt;a href=&quot;http://www.qingcloud.com/&quot;&gt;http://www.qingcloud.com/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b8b260f60a1f022eea9790d6f50f373442e1ad" translate="yes" xml:space="preserve">
          <source>The RAID level to use when creating the raid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f680ebd54c1de6b61a19c9552c2f4e2c71060aba" translate="yes" xml:space="preserve">
          <source>The RAM disk ID for the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7652e8f7eae9ccad067e3278bb83977d21bf1d75" translate="yes" xml:space="preserve">
          <source>The REST call should return a JSON object that maps to a regular eauth YAML structure as above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809ab7de787a612822ba2eb678347b47f6c5fb24" translate="yes" xml:space="preserve">
          <source>The RGW client name (must start with &lt;code&gt;rgw.&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7596ccb2a454f1963027d5136a53cb609d903866" translate="yes" xml:space="preserve">
          <source>The RGW client name. Must start with &lt;code&gt;rgw.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33d706ea96a7d927e5687eada04b50d3eb9d54f" translate="yes" xml:space="preserve">
          <source>The RPC command to execute. This depends on the nature of the operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2739cf6b73a9b455f77c7f978d070ed7ce150be9" translate="yes" xml:space="preserve">
          <source>The RPC commands to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d96b50c52e57e3c5ef19c674199d236d3e22a73" translate="yes" xml:space="preserve">
          <source>The RPC request to the executed. To determine the RPC request, you can check the from the command line of the device, by executing the usual command followed by &lt;code&gt;| display xml rpc&lt;/code&gt;, e.g., &lt;code&gt;show lldp neighbors | display xml rpc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b10b00c1894ee49fd7c9a764dceac2d0086400" translate="yes" xml:space="preserve">
          <source>The RPC to be executed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f6e7d6eef9ce6864d47c6eaba5050a0df55c31" translate="yes" xml:space="preserve">
          <source>The ReceiptHandle of the message to delete. The ReceiptHandle is obtained in the return from receive_message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbee10527bc2614ea42b22f95e670cac3319f00" translate="yes" xml:space="preserve">
          <source>The Redis server port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b3a20031003548726844ea89371f08290d86fd" translate="yes" xml:space="preserve">
          <source>The Root Disk ID to be used for this config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64bceb5147a5912200b3ecdfbe8bd44bd161c72d" translate="yes" xml:space="preserve">
          <source>The Roster Order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee618bbb421ee2acb4f91af4a7ba66bc55153e6" translate="yes" xml:space="preserve">
          <source>The Route Table Association ID to disassociate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa6d3aba001710268b687414f9dd2b58b2731aa" translate="yes" xml:space="preserve">
          <source>The Runtime environment for the function. One of 'nodejs', 'java8', or 'python2.7'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe178b41868650abaeb14270f9980718dfe47b9f" translate="yes" xml:space="preserve">
          <source>The S3 pillar can be configured in the master config file with the following options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a40d3eb8d163cac3d3efd5e9548802206f8bfe" translate="yes" xml:space="preserve">
          <source>The SELinux MLS range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a6565068421a315c945be148e1aba3115a7bab" translate="yes" xml:space="preserve">
          <source>The SELinux MLS/MCS Security Range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebfbabac6bb789c6d852721c7dc2ae26b37b1c8" translate="yes" xml:space="preserve">
          <source>The SELinux Type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd6898edb87abbd69e1ba8c32cb2ab2cea38976" translate="yes" xml:space="preserve">
          <source>The SELinux Type. Optional; can be used in determining if policy is present, ignored by &lt;code&gt;semanage port --delete&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed185abd181ec2e56ffdb371a5ba43c47e71a4d2" translate="yes" xml:space="preserve">
          <source>The SELinux Type. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787941ce79e7e1ddca48822c3c008ce95940ff49" translate="yes" xml:space="preserve">
          <source>The SELinux context type. There are many.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf4733389411ff4e6dab12af8a218b0cb21bdf4" translate="yes" xml:space="preserve">
          <source>The SELinux filetype specification. Use one of [a, f, d, c, b, s, l, p]. See also</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec87a9803574f6f696b7b292ebc9b92e6afe776" translate="yes" xml:space="preserve">
          <source>The SELinux filetype specification. Use one of [a, f, d, c, b, s, l, p]. See also &lt;code&gt;man semanage-fcontext&lt;/code&gt;. Defaults to 'a' (all files).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c781037bc4008effd47feee3d3872b149f075030" translate="yes" xml:space="preserve">
          <source>The SELinux user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1757a3664c210b37ed3898d396114fa62194b2a0" translate="yes" xml:space="preserve">
          <source>The SNMP community string for the switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6d530efbf54c2779ea6f21b3fd75e5290d75ad" translate="yes" xml:space="preserve">
          <source>The SNS topic owner must be the same as the cache cluster owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca27d1a38ecc3cd148ddabd6bbc93233f998a05" translate="yes" xml:space="preserve">
          <source>The SOAP API maps closely to PyVmomi, so from there it was (relatively) easy to figure out what Python to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179afb308495f74ad4b1d239f9c9c9da0157aafd" translate="yes" xml:space="preserve">
          <source>The SQL statement used to query the topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c79b2f125495e32310159682391785c5e75cfbd" translate="yes" xml:space="preserve">
          <source>The SSH key to manage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de056e56bd784c9c913bd905fddcd5fddd76042b" translate="yes" xml:space="preserve">
          <source>The SSH public key needs to be DSA and the last argument in the key needs to be the username (case-senstive) of the ILO username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177f43a4f14f92de284798ca0dc1050fcdcd6c0e" translate="yes" xml:space="preserve">
          <source>The SSL thumbprint of the host system can be optionally specified by setting &lt;code&gt;esxi_host_ssl_thumbprint&lt;/code&gt; under your provider configuration. To get the SSL thumbprint of the host system, execute the following command from a remote server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f194290209f162ebfd85dbfa68a32af3f834c6b9" translate="yes" xml:space="preserve">
          <source>The Salt Cloud Runner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a35525d7baebe02d84adb845cbfd28b95edcfa8" translate="yes" xml:space="preserve">
          <source>The Salt URL for the file to use for configuring the job</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cd98ef801960427a58794f07be182a4d70d4b6" translate="yes" xml:space="preserve">
          <source>The Salt environment name (for the rendering system).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9a7a17f3e96995c77cf835483763243541f686" translate="yes" xml:space="preserve">
          <source>The Salt environment to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd76420e74064ad70d05c303b428807e6e995390" translate="yes" xml:space="preserve">
          <source>The Salt fileserver caches the files/directories/symlinks for each fileserver backend and environment as they are requested. This is done to help the fileserver scale better. Without this caching, when hundreds/thousands of minions simultaneously ask the master what files are available, this would cause the master's CPU load to spike as it obtains the same information separately for each minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d85c8e09b96f2af5f39c22225b7b1d1c047f132" translate="yes" xml:space="preserve">
          <source>The Saltify module is designed to install Salt on a remote machine, virtual or bare metal, using SSH. This module is useful for provisioning machines which are already installed, but not Salted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38abb46df773109562a02d7ec7bb2afffdbfb1e6" translate="yes" xml:space="preserve">
          <source>The Saltutil module is used to manage the state of the salt minion itself. It is used to manage minion modules as well as automate updates to the salt minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61c27b13789edf51f4ff9ac162392519bcd279a" translate="yes" xml:space="preserve">
          <source>The Saltutil runner is used to sync custom types to the Master. See the &lt;a href=&quot;../../modules/all/salt.modules.saltutil#module-salt.modules.saltutil&quot;&gt;&lt;code&gt;saltutil module&lt;/code&gt;&lt;/a&gt; for documentation on managing updates to minions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e7362369aca7370b00aca194144d5b414fc302" translate="yes" xml:space="preserve">
          <source>The Scaleway cloud module is used to interact with your Scaleway BareMetal Servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c6f57f5d053ae90248e3f1a531dd7dfdff2991" translate="yes" xml:space="preserve">
          <source>The Service name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63a9159bca337c9fe1cb1f31b40248076eef5ed" translate="yes" xml:space="preserve">
          <source>The SoftLayer HW cloud module is used to control access to the SoftLayer hardware cloud system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ac157b7ff7f3cc9684e259e77d9e6ba267e044" translate="yes" xml:space="preserve">
          <source>The SoftLayer Python Library needs to be installed in order to use the SoftLayer salt.cloud modules. See: &lt;a href=&quot;https://pypi.python.org/pypi/SoftLayer&quot;&gt;https://pypi.python.org/pypi/SoftLayer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d0735095d2bd1b708d2d6795b3df71b436f9c1" translate="yes" xml:space="preserve">
          <source>The SoftLayer cloud module is used to control access to the SoftLayer VPS system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6743a85ff31ccff23245e80fcc58203515d9b443" translate="yes" xml:space="preserve">
          <source>The Static IP Address of the switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10915e9cf4656108b13619432fdf82884188828" translate="yes" xml:space="preserve">
          <source>The Swap Disk ID to be used for this config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2f0a3ac4fef3506d2c6a764129b6b5d2286772" translate="yes" xml:space="preserve">
          <source>The TCP port of the endpoint for the NX-API connection. If this keyword is not specified, the default value is automatically determined by the transport type (&lt;code&gt;80&lt;/code&gt; for &lt;code&gt;http&lt;/code&gt;, or &lt;code&gt;443&lt;/code&gt; for &lt;code&gt;https&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cb78cdd2c48a7b840bc536c2f0b06a58575759" translate="yes" xml:space="preserve">
          <source>The TCP port of the endpoint for the eAPI connection. If this keyword is not specified, the default value is automatically determined by the transport type (&lt;code&gt;80&lt;/code&gt; for &lt;code&gt;http&lt;/code&gt;, or &lt;code&gt;443&lt;/code&gt; for &lt;code&gt;https&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9716c92bebfa0683f56e0c3b2ab878fbd32f5e24" translate="yes" xml:space="preserve">
          <source>The URL of the Tomcat Web Application Manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e19abb5ff8a2539df8532391e1282f91420483" translate="yes" xml:space="preserve">
          <source>The URL of the file to be cached. To cache a file from an environment other than &lt;code&gt;base&lt;/code&gt;, either use the &lt;code&gt;saltenv&lt;/code&gt; argument or include the saltenv in the URL (e.g. &lt;code&gt;salt://path/to/file.conf?saltenv=dev&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a0d51656363d68e0c04a012eddbf5025df91d0" translate="yes" xml:space="preserve">
          <source>The URL of the gem source to be added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566bf2bc855262bf7ba10bdc677491add15c7da6" translate="yes" xml:space="preserve">
          <source>The URL of the gem source to be removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513a6ee9d01f6a879e1bab3041fd22953a2f9448" translate="yes" xml:space="preserve">
          <source>The URL of the repository to be cloned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2af9f2dba84ace326f2e344286da20c3ff8b7a8" translate="yes" xml:space="preserve">
          <source>The URL of the server with the Tomcat Manager webapp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66239249249dfe83441beadad4ee2703eb649c1" translate="yes" xml:space="preserve">
          <source>The URL of the status page. Defaults to '&lt;a href=&quot;http://127.0.0.1/status&quot;&gt;http://127.0.0.1/status&lt;/a&gt;'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef783fd52ea3f4e83db60b1a0a0d91a7fcbc9f6" translate="yes" xml:space="preserve">
          <source>The URL prefix to use for serving the HTML file specified in the &lt;code&gt;app&lt;/code&gt; setting. This should be a simple name containing no slashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11a2da4a3080803ac7b68fb82d68a462b5c15dc" translate="yes" xml:space="preserve">
          <source>The URL prefix to use when serving static assets out of the directory specified in the &lt;code&gt;static&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5704b58f9235027622e3113f3a6fc6f496cb9d" translate="yes" xml:space="preserve">
          <source>The URL to a yum repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07921167ed4ac55782176330d3030340f8e674e3" translate="yes" xml:space="preserve">
          <source>The URL to download the EPEL release package from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49de927642cfca4225f7fb018c78277c04909c7" translate="yes" xml:space="preserve">
          <source>The URL to the HipChat API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8475e9b664ebc1aa41bd2dbac0afa5e82fed6fb0" translate="yes" xml:space="preserve">
          <source>The URL to the data source API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695a0abd4263b75fe14c465115766e7c9ede455d" translate="yes" xml:space="preserve">
          <source>The URL with more information about the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffff40377dbf6707f1bea4026e286944a5e55af" translate="yes" xml:space="preserve">
          <source>The Ubuntu community documentation contains an explanation of this setting, as it applies to systems that dual-boot with Windows. This is explained in greater detail &lt;a href=&quot;https://help.ubuntu.com/community/UbuntuTime#Multiple_Boot_Systems_Time_Conflicts&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3995d8416a84c8d63a6586538eea591cde362e" translate="yes" xml:space="preserve">
          <source>The VM dictionary for which to obtain a location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec996e9202773b43ba497a977bca2a7fd25f5d7" translate="yes" xml:space="preserve">
          <source>The VM dictionary for which to obtain a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e92c9e9d41f2145914f89a66bf5954490a5baf6" translate="yes" xml:space="preserve">
          <source>The VM dictionary for which to obtain an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f79d88f6c23f17782e6ccec1cba97e59d2fb74e" translate="yes" xml:space="preserve">
          <source>The VM profile to create the data disk for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccae553b8a21a252bb31368469e57ec89d9d8930" translate="yes" xml:space="preserve">
          <source>The VM profile to create the disk for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eea185f46f9d6e18f6a1fad4dbdf482a02da465" translate="yes" xml:space="preserve">
          <source>The VM profile to create the swap disk for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c803502dd31c3b07711c87f64a4fe8aad906b6f" translate="yes" xml:space="preserve">
          <source>The VM profile to obtain the swap size from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd618582ac60917c8ae30d79afdc67e56657f056" translate="yes" xml:space="preserve">
          <source>The VM to get the disk size for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef69122b9d6735d960553aa0dd7fb8a60a62dded" translate="yes" xml:space="preserve">
          <source>The VM to get the distribution ID for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafc49815781ae6937768b7a7376624fdb047f4c" translate="yes" xml:space="preserve">
          <source>The VM to get the size for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd296ecf7a30fbfdf17486034c48faf5084bd75" translate="yes" xml:space="preserve">
          <source>The VMFS major version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d77793bd5ad53bb4c1370a7c21c8863c5107ea6" translate="yes" xml:space="preserve">
          <source>The VMware cloud module allows you to manage VMware ESX, ESXi, and vCenter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93de8df94581e7a5c6c8bab5dd35e37bd0d725c1" translate="yes" xml:space="preserve">
          <source>The VPC id where the security groups are defined. Only necessary when using named security groups that exist outside of the default VPC. Mutually exclusive with vpc_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fe2dc5a5cbc9292e6af9a5349beac47aa96af1" translate="yes" xml:space="preserve">
          <source>The VPC subnet ID the ENI will exist within.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46c9f8a149193940b6c6ff8507a51103eec51b4" translate="yes" xml:space="preserve">
          <source>The VPC subnet name the ENI will exist within.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c99a7f07a335bd2bc30d1f96a24027ba7fdd612" translate="yes" xml:space="preserve">
          <source>The Vagrant cloud is designed to &quot;vagrant up&quot; a virtual machine as a Salt minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb5382a5a0c30b540fb7dd0aa94b6f80599e1f9" translate="yes" xml:space="preserve">
          <source>The Volume Group name to create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5156848b99374bc480c42615a3df019b2c21ec0" translate="yes" xml:space="preserve">
          <source>The Vultr cloud module is used to control access to the Vultr VPS system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99f811f668ba68ccddc4bd05aa94f64e6b00a3a" translate="yes" xml:space="preserve">
          <source>The XenServer driver is designed to work with a Citrix XenServer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f4fe22d7b35d200efd15cd51d86838fd128f5f" translate="yes" xml:space="preserve">
          <source>The YAMLEX data is then directly overlaid onto the minion's Pillar data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0124717a12293ba784623fae0ae9af4c197ac8" translate="yes" xml:space="preserve">
          <source>The above URI is analogous to running the following vault command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cc03d5dacd1fd9d419f03e4f7e1ea4295b6f7d" translate="yes" xml:space="preserve">
          <source>The above configuration will pop 2 runner jobs off the runner queue, and then run them. And it will do this every minute, unless there are any jobs that are still running from the last time the process_runner task was executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455e4ba6922567fef9b1041286ba3898ea632767" translate="yes" xml:space="preserve">
          <source>The above could have also been written use direct requisite statements as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdb919ae9ca97035184ec3212d96ee0ecffbf82" translate="yes" xml:space="preserve">
          <source>The above essentially is the same as a top.sls containing the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951ef808e0903f030dbec2540dc72dddb59b6329" translate="yes" xml:space="preserve">
          <source>The above example is intended as a more readable way of configuring the SLS, it is equivalent to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94064b42015e829a3d4221da929dc373745b5ac0" translate="yes" xml:space="preserve">
          <source>The above example will return success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d074866ccac7d460f3f7d964c9e76e45ce3759f0" translate="yes" xml:space="preserve">
          <source>The above example would cause all declarations inside the scope of the context manager to automatically have their &lt;code&gt;watch_in&lt;/code&gt; set to &lt;code&gt;Service(&quot;my-service&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e552205f4ce830d35b040b33bd25d4f9bcc1574d" translate="yes" xml:space="preserve">
          <source>The above ext_pillar example would return a pillar like the following for a HostySystem object that's name matched the minion id:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647b7954f592564f0870ec2447ddfea42a0681f2" translate="yes" xml:space="preserve">
          <source>The above ext_pillar example would return a pillar like the following for a VirtualMachine object that's name matched the minion id:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54c14d699768fc9863bdafb935bd432487f9753" translate="yes" xml:space="preserve">
          <source>The above illustrates a common &lt;code&gt;PyYAML&lt;/code&gt; pitfall, that &lt;strong&gt;yes&lt;/strong&gt;, &lt;strong&gt;no&lt;/strong&gt;, &lt;strong&gt;on&lt;/strong&gt;, &lt;strong&gt;off&lt;/strong&gt;, &lt;strong&gt;true&lt;/strong&gt;, and &lt;strong&gt;false&lt;/strong&gt; are all loaded as boolean &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; values, and must be enclosed in quotes to be used as strings. More info on this (and other) &lt;code&gt;PyYAML&lt;/code&gt; idiosyncrasies can be found &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/troubleshooting/yaml_idiosyncrasies.html#yaml-idiosyncrasies&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b07f677cbe0b4ff2903bc55f48d2c3b94c8dc80" translate="yes" xml:space="preserve">
          <source>The above illustrates a common PyYAML pitfall, that &lt;strong&gt;yes&lt;/strong&gt;, &lt;strong&gt;no&lt;/strong&gt;, &lt;strong&gt;on&lt;/strong&gt;, &lt;strong&gt;off&lt;/strong&gt;, &lt;strong&gt;true&lt;/strong&gt;, and &lt;strong&gt;false&lt;/strong&gt; are all loaded as boolean &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; values, and must be enclosed in quotes to be used as strings. More info on this (and other) PyYAML idiosyncrasies can be found &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/troubleshooting/yaml_idiosyncrasies.html#yaml-idiosyncrasies&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a9816e9a993c961163c75eb96ea4c42bd390a1" translate="yes" xml:space="preserve">
          <source>The above signing policy can be invoked with &lt;code&gt;signing_policy=www&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389c0cd8b619a0961bc0bb286973fc178d9682a3" translate="yes" xml:space="preserve">
          <source>The above will result in the following zpool create:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cb939f92b6652fd1d5621db80255b3f6d947a0" translate="yes" xml:space="preserve">
          <source>The above will result in two pillars being available, &lt;code&gt;auth&lt;/code&gt; and &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b799ec208e4d304c916fa9ae896b1b320c3f7f1" translate="yes" xml:space="preserve">
          <source>The above yaml will always result in the following zpool create:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9463074aefd6f0c9513f72c629f263402a4261" translate="yes" xml:space="preserve">
          <source>The absolute or remote path to the file with the configuration to be parsed. This argument supports the usual Salt filesystem URIs, e.g., &lt;code&gt;salt://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt;, &lt;code&gt;ftp://&lt;/code&gt;, &lt;code&gt;s3://&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944f555ee786553ca76cec3100322833854ddd4a" translate="yes" xml:space="preserve">
          <source>The absolute path to the validation file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b48148b2a575956720f8ea217453f1a31ea25ac" translate="yes" xml:space="preserve">
          <source>The access (root) password for the switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2842427533ac66f9823ac78c542cc56845bd54" translate="yes" xml:space="preserve">
          <source>The account used to execute the mount; this defaults to the user salt is running as on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6013323d2befc617b6148a0f9f0286172acd1c32" translate="yes" xml:space="preserve">
          <source>The acl path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413c29ad74aa4183a9e7473b9aeb0394413eb924" translate="yes" xml:space="preserve">
          <source>The action the rule performs. Can be any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b2bf9578934df38ecf15e683888dd1f4a1403f" translate="yes" xml:space="preserve">
          <source>The action to be performed on the VM. Available options include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ada74b6f6ca92637b9e1b262fbd9edd0852cfb2" translate="yes" xml:space="preserve">
          <source>The action to perform. Either &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;delete&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa63e2372944d158b4c6a5479d552e4027a6fc3" translate="yes" xml:space="preserve">
          <source>The actions associated with the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a97eba1cb9df5a9f3bf93e204d7a68ea55987e5" translate="yes" xml:space="preserve">
          <source>The actual content to be uploaded as a blob. Either this or blob_path must me specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582111e829126406a3e6e8f8c1e6bcf4ec080dbf" translate="yes" xml:space="preserve">
          <source>The address of the Raft leader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473004162196169f22d14ab1128cef48dc603270" translate="yes" xml:space="preserve">
          <source>The address of the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0da77409277453232135df098992c9bf96c8a2a" translate="yes" xml:space="preserve">
          <source>The address of the publisher, as configured on napalm-logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af75512261abfd8f9cd910805c4dc0976cca8bed" translate="yes" xml:space="preserve">
          <source>The address used for authentication when security is not disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c02f89a452c79919259e8c1b549fc46c5a2c19" translate="yes" xml:space="preserve">
          <source>The admin url of the service endpoint (for V2 API)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64173a198bd039a38ca43a260cca7998b3419888" translate="yes" xml:space="preserve">
          <source>The agent version you want to use. Valid values are 1 or 2. Default - 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821c3db7e2a66dff0c371dd4fa93769c9c1e458d" translate="yes" xml:space="preserve">
          <source>The agent will take care of deregistering the check from the Catalog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701b8291ecaaeef1f143f6934e9a9b136838e8e9" translate="yes" xml:space="preserve">
          <source>The algorithm to use. May be any valid algorithm supported by hashlib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a7c71786079b0a3e19a9f1c3aba6232692d133" translate="yes" xml:space="preserve">
          <source>The alias to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2353fdb9e0b416e42aef2526c6fecea49e4f8522" translate="yes" xml:space="preserve">
          <source>The alternative configuration to use for returner configuration options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a494c2b482dbe0bf87736984bd60a3be9e6341c" translate="yes" xml:space="preserve">
          <source>The amount charged for reactivation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15441d90c3bed83d6582b748387cf6ed7efb673a" translate="yes" xml:space="preserve">
          <source>The amount charged for registration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c2781ee0c92ada3efd1b8db67d94a0a7053f54" translate="yes" xml:space="preserve">
          <source>The amount charged for renewal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0038bed4abe5fab0616b19728cd86ecd0dae56" translate="yes" xml:space="preserve">
          <source>The amount charged for the order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17039c9d858fdd4387646910b1fa45e455eb4d0a" translate="yes" xml:space="preserve">
          <source>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e018ce05c29d7fadb98af16ca735651dde566b" translate="yes" xml:space="preserve">
          <source>The amount of data returned by each issue. Defaults to &lt;code&gt;min&lt;/code&gt;. Change to &lt;code&gt;full&lt;/code&gt; to see all issue output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968dfe9850a0b9a61e097a205a0f4574d2f2db4e" translate="yes" xml:space="preserve">
          <source>The amount of data returned by each pull request. Defaults to &lt;code&gt;min&lt;/code&gt;. Change to &lt;code&gt;full&lt;/code&gt; to see all pull request output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae22c15867a89314a9d9c19d3144feb26c04bdce" translate="yes" xml:space="preserve">
          <source>The amount of memory to allocate to this virtual machine. The number is interpreted in megabytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105e0b177d5e13355f80efb2900dd1cc077d9dff" translate="yes" xml:space="preserve">
          <source>The amount of memory, in MB, your function is given. Lambda uses this memory size to infer the amount of CPU and memory allocated to your function. Your function use-case determines your CPU and memory requirements. For example, a database operation might need less memory compared to an image processing function. The default value is 128 MB. The value must be a multiple of 64 MB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39750ff64645c1381efc26d523449333e7f88f8" translate="yes" xml:space="preserve">
          <source>The amount of storage (in gigabytes) to be initially allocated for the database instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5237f63c7e64b1c72c68789c6d69a907608f2b1b" translate="yes" xml:space="preserve">
          <source>The amount of time allowed to complete the task. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe885a18d22cc8cfbaba8199f3a24b1699ae2df0" translate="yes" xml:space="preserve">
          <source>The amount of time between each restart of the task. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5c99a2cf63e59beeb55de37c9e18f23fb9e998" translate="yes" xml:space="preserve">
          <source>The amount of time in seconds to splay a scheduled job. Can be specified as a single value in seconds or as a dictionary range with 'start' and 'end' values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f2c78e64bb72ef7d56310c73810468c832e4b4" translate="yes" xml:space="preserve">
          <source>The amount of time that can pass before raising an Exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f525cf0ee466cf2c9c0bd1c18674eb01253bb7f" translate="yes" xml:space="preserve">
          <source>The amount of time that the Task Scheduler will wait before deleting the task after it expires. Requires a trigger with an expiration date. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a50e9292bd8b484681752bfe97f9c3690c0062" translate="yes" xml:space="preserve">
          <source>The answer to the question</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2e55f6fad1b1e9a2fcd4811c8f06ed28e4e103" translate="yes" xml:space="preserve">
          <source>The api key can be specified in the master or minion configuration like below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc89d022ff57cf658996ea44f2abea53cf804f1" translate="yes" xml:space="preserve">
          <source>The api key can be specified in the master or minion configuration like below: .. code-block:: yaml</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756b2bd231fd98ac76d6e5f55df6fd5cb5faa69b" translate="yes" xml:space="preserve">
          <source>The api key for Hipchat to use for authentication, if not specified in the configuration options of master or minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0509ee89ef1a2a27ccce5adcd00c1e8feca9fa4d" translate="yes" xml:space="preserve">
          <source>The api key for Slack to use for authentication, if not specified in the configuration options of master or minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00492b02c1180c4262dc34b7c327672e9deb21b9" translate="yes" xml:space="preserve">
          <source>The api version for Hipchat to use, if not specified in the configuration options of master or minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b9c8c25cb6a27bd18b8de53ba774e04ecc60cd" translate="yes" xml:space="preserve">
          <source>The args to update the Linode with. Must be in dictionary form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c25d75ee59b2cb380d8321cc472cd9736158d46" translate="yes" xml:space="preserve">
          <source>The arguments sent to the minion publish function are separated with commas. This means that for a minion executing a command with multiple args it will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02bae257d12286646ed596c3e4a5286103cc4e5" translate="yes" xml:space="preserve">
          <source>The arguments that will be used by the scheduled job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c699a7c3d70cdcfe38b5a037f49f8d4452361549" translate="yes" xml:space="preserve">
          <source>The at state can be add disposable regularly scheduled tasks for your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d540f873b30cb53c30e1b668a66666b6d637e37" translate="yes" xml:space="preserve">
          <source>The at watcher, called to invoke the watch command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb98efd4d75deb4d2a111d709f8d9112b6edb3ad" translate="yes" xml:space="preserve">
          <source>The attributes that should be removed from the file/directory, this is accepted as an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036c6c27a8cc2f06965f49fd58183397df907714" translate="yes" xml:space="preserve">
          <source>The attributes that should exist on the file/directory, this is accepted as an array, with key and value split with an equals sign, if you want to specify a hex value then add 0x to the beginning of the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46cc6a98466eb0b451f19cf6efa50643c5a592a" translate="yes" xml:space="preserve">
          <source>The attributes to have on this file, e.g. &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;. The attributes can be any or a combination of the following characters: &lt;code&gt;aAcCdDeijPsStTu&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf55e0013bb29d9c7a333afaf7f73283becf36be" translate="yes" xml:space="preserve">
          <source>The authentication plugin to use for the password, eg. mysql_native_password</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca017edf6166c4851f865ec62de5447e4917eeba" translate="yes" xml:space="preserve">
          <source>The authorization details can optionally be located inside the Django database. The relevant entry in the &lt;code&gt;models.py&lt;/code&gt; file would look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91473669a099bc05ab78f312a18c57b6b62bf377" translate="yes" xml:space="preserve">
          <source>The automatic lockout can be disabled via Salt with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bfefefedc8c96b4560c9806ea29bc89f24511b" translate="yes" xml:space="preserve">
          <source>The availability zone used to create the volume. Required. String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aaabc10e23d6de8e9be8806e9177b3143820e76" translate="yes" xml:space="preserve">
          <source>The available execution modules will be reloaded as part of this proceess, as grains can affect which modules are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88be447b1d9e8ce2cf052d889211410cbf4b8da3" translate="yes" xml:space="preserve">
          <source>The available filters are documented at: &lt;a href=&quot;https://www.peeringdb.com/apidocs/#!/ix/ix_list&quot;&gt;https://www.peeringdb.com/apidocs/#!/ix/ix_list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5afe0879c0e369b4f887605a10bcbf714682a7" translate="yes" xml:space="preserve">
          <source>The available filters are documented at: &lt;a href=&quot;https://www.peeringdb.com/apidocs/#!/ixfac/ixfac_list&quot;&gt;https://www.peeringdb.com/apidocs/#!/ixfac/ixfac_list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cb501024258257eb773e5592971df55888c288" translate="yes" xml:space="preserve">
          <source>The available filters are documented at: &lt;a href=&quot;https://www.peeringdb.com/apidocs/#!/ixlan/ixlan_list&quot;&gt;https://www.peeringdb.com/apidocs/#!/ixlan/ixlan_list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6821b4d8ad3a956a0a4d5fb31011e18e43e16289" translate="yes" xml:space="preserve">
          <source>The available filters are documented at: &lt;a href=&quot;https://www.peeringdb.com/apidocs/#!/ixpfx/ixpfx_list&quot;&gt;https://www.peeringdb.com/apidocs/#!/ixpfx/ixpfx_list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ec9e97f31a0927cfffe788e12737e741dd588c" translate="yes" xml:space="preserve">
          <source>The available filters are documented at: &lt;a href=&quot;https://www.peeringdb.com/apidocs/#!/net/net_list&quot;&gt;https://www.peeringdb.com/apidocs/#!/net/net_list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f856c933c3a2d4b93dc39153259d3738b3f0b48" translate="yes" xml:space="preserve">
          <source>The available filters are documented at: &lt;a href=&quot;https://www.peeringdb.com/apidocs/#!/netfac/netfac_list&quot;&gt;https://www.peeringdb.com/apidocs/#!/netfac/netfac_list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37aa09da569ecbbee6c43a844382896c9f95d8ce" translate="yes" xml:space="preserve">
          <source>The available filters are documented at: &lt;a href=&quot;https://www.peeringdb.com/apidocs/#!/netixlan/netixlan_list&quot;&gt;https://www.peeringdb.com/apidocs/#!/netixlan/netixlan_list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebae7dd6fe195f67880dcb80d4b2b8e98daa434" translate="yes" xml:space="preserve">
          <source>The available filters are documented at: &lt;a href=&quot;https://www.peeringdb.com/apidocs/#!/org/org_list&quot;&gt;https://www.peeringdb.com/apidocs/#!/org/org_list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15fad9dcee74795f36dda396cecc0f6c3394fe9" translate="yes" xml:space="preserve">
          <source>The available filters are documented at: &lt;a href=&quot;https://www.peeringdb.com/apidocs/#!/poc/poc_list&quot;&gt;https://www.peeringdb.com/apidocs/#!/poc/poc_list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2a29caccd3717e7df48552f7ba343e915cf8c2" translate="yes" xml:space="preserve">
          <source>The available images can be listed using the &lt;a href=&quot;#salt.modules.lxc.images&quot;&gt;&lt;code&gt;lxc.images&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744e595dc603b6340f7dbb878d48372f681bde0e" translate="yes" xml:space="preserve">
          <source>The available images can be listed using the &lt;a href=&quot;../../modules/all/salt.modules.lxc#salt.modules.lxc.images&quot;&gt;&lt;code&gt;lxc.images&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d988f6c7618a8b4b86a9dbdcf97dd5d817ea02e6" translate="yes" xml:space="preserve">
          <source>The available version of packages in the repository. Accepts full or partial FMRI. Partial FMRI is returned if the full FMRI could not be resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f605a5755f40ebd1c9a11bd71c2a157710ed8cd" translate="yes" xml:space="preserve">
          <source>The backend for serving files from the Azure blob storage service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4c9dc4ff7b2a65681d83cd7b9ab04234763160" translate="yes" xml:space="preserve">
          <source>The backend library to use to download the script. If you need to use a &lt;code&gt;file:///&lt;/code&gt; URL, then you should set this to &lt;code&gt;urllib2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f266a1815a0cfe7d528efbdf6c7858986b16bb3" translate="yes" xml:space="preserve">
          <source>The background color of the display. Defaults to '[0, 0, 0]' (black).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c6d99fc2c7a2e87bdb63db5fdbe3e667a374b0" translate="yes" xml:space="preserve">
          <source>The base image does not need to have Salt installed, but Python is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf57c5ca4267fd9ac335b0ca9f3f7da9b19f84eb" translate="yes" xml:space="preserve">
          <source>The base of the recursive listing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d50f5af998f846a5a5788779fa9439dea23b7a" translate="yes" xml:space="preserve">
          <source>The base tree to use for the 3-way-merge. If not provided, then &lt;a href=&quot;#salt.modules.git.merge_base&quot;&gt;&lt;code&gt;git.merge_base&lt;/code&gt;&lt;/a&gt; will be invoked on &lt;code&gt;ref1&lt;/code&gt; and &lt;code&gt;ref2&lt;/code&gt; to determine the merge base to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b81063b765284c98c6b5fe4ad7ac351259455e" translate="yes" xml:space="preserve">
          <source>The basic configuration is part of the &lt;a href=&quot;master-configuration-ext-pillar&quot;&gt;master configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc4dc05db2f3445991218bc5769402a36e9a67b" translate="yes" xml:space="preserve">
          <source>The behavior of this function matches the Unix equivalent, with one exception - invalid symlinks cannot be created. The source path must exist. If it doesn't, an error will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bfd40d9dbb5394e4a21ab3dc75992c51e239bb" translate="yes" xml:space="preserve">
          <source>The behavior of this module is to create dashboards if they do not exist, to add rows if they do not exist in existing dashboards, and to update rows if they exist in dashboards. The module will not manage rows that are not defined, allowing users to manage their own custom rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c444da28be4762918629ded1ccf40727602f6e" translate="yes" xml:space="preserve">
          <source>The behavior of this module is to create data sources if the do not exists, and to update data sources if the already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ea28ab8081661262d6ae6ca84ba37052ad5c4b" translate="yes" xml:space="preserve">
          <source>The below code creates a key pair:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8aa7343966d78117a446a8006c7c73c84ba549b" translate="yes" xml:space="preserve">
          <source>The below code deletes a key pair:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c43ad5c9e409c049cbe4b3449218f562fac5cd8" translate="yes" xml:space="preserve">
          <source>The below parameters apply to windows only:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c257339e6db5081b94f60261a3e7353872d25d" translate="yes" xml:space="preserve">
          <source>The below values should be specified as integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e154e189aa00d5d446bfdfb965e18bdde5b3fd" translate="yes" xml:space="preserve">
          <source>The below values should be specified as strings to avoid ambiguities when the values are loaded. (Especially the phone and room number fields which are likely to contain numeric data)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308f7ecf02629bce2e9fef73cdb54af8876bfbe8" translate="yes" xml:space="preserve">
          <source>The block device to format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b165682915e66d63a046b8ed45c3a505a95da472" translate="yes" xml:space="preserve">
          <source>The body needs to be the urlencoded version of the body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6c6344ac609db52a053b4588ba1633b7bc85e2" translate="yes" xml:space="preserve">
          <source>The body of the comment to be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a077f877c2b3b88191354306b8eaff666a2f73" translate="yes" xml:space="preserve">
          <source>The boolean indicating if we need to block until min_nodes are available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6eaa975f081e460cf84d4a44083305b03b7a31e" translate="yes" xml:space="preserve">
          <source>The branch, tag, or commit ID to checkout after clone. If a branch or tag is specified it will be resolved to a commit ID and checked out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fdb67884e9dd510297354b044fff9d48a389ea" translate="yes" xml:space="preserve">
          <source>The branch/tag which maps to that environment must then be specified along with the repo's URL. Configuration details can be found below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9ce82316dc06f32bca1dcae3d4eec11455f38a" translate="yes" xml:space="preserve">
          <source>The bundle ID or command to check installed status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe0b0e2731328eb9c3b356bf23fa348eef21276" translate="yes" xml:space="preserve">
          <source>The bundle ID or command to install for assistive access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc60330109f3818a31a55ba6bc030016e2ae249" translate="yes" xml:space="preserve">
          <source>The bundle ID or command to remove from assistive access list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a08974ebee577f0a95d5b6c0b526962208e332" translate="yes" xml:space="preserve">
          <source>The bundle ID or command to retrieve assistive access status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc3b4faa8ad97e6bbdabfd1a20bc2b1df54a6d6" translate="yes" xml:space="preserve">
          <source>The bundle ID or command to set assistive access status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bedd2489c11461feaceefea9978d8b6590fbcfd" translate="yes" xml:space="preserve">
          <source>The bundle ID or path to command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31792ecb28ac75215cab1e2a7b515e42af51458d" translate="yes" xml:space="preserve">
          <source>The cache cluster ID that is used as the daily snapshot source for the replication group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddebcda164b1c3bf28307a5c81661f870b5fa46" translate="yes" xml:space="preserve">
          <source>The cache subpath to delete, or None to clear the entire cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210fb6cad6bd524048849d70e9e7eb85f360efd1" translate="yes" xml:space="preserve">
          <source>The cache subpath to list, or None to list the entire cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11f207ccd3e1abd6e87a06dbef3aa73147aec26" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;filter_by()&lt;/code&gt; would be modified as follows to reference those Pillar values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69637dd8d91ebd3facb65113a76f3365bea2fc2c" translate="yes" xml:space="preserve">
          <source>The calls not using the libvirt connection setup are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9177e0929ea9a74a16f3feb646b0e619f62dbc6a" translate="yes" xml:space="preserve">
          <source>The canconicalization of these input parameters is done in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42177356abeffedadd405d3c23438b5cb063c98" translate="yes" xml:space="preserve">
          <source>The candidate configuration sent as text. This argument is ignored when &lt;code&gt;candidate_path&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be56cde13ec62ab4d3e10580d51f27f18fcb45dc" translate="yes" xml:space="preserve">
          <source>The canonical name of the cache disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59bb3e6bba8a402d7a5fff1da86469bd8fc850c" translate="yes" xml:space="preserve">
          <source>The canonical name of the disk to be used as a cache. The disk must be ssd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8a8db9e39a2d11d7ef017f91c04c0dd578befa" translate="yes" xml:space="preserve">
          <source>The canonical use-case for this (at least at our site) is to query the Name tag (which we always populate with the host's FQDN) to lookup the public or private IPs bound to the instance, so we can then automgically create Route 53 records for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2b6d5f90b3238f7fd95086f955f372766c1904" translate="yes" xml:space="preserve">
          <source>The capacity of a server relative to the others in the pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43467c420d0c975a8b22978be1f9dd115300e9a" translate="yes" xml:space="preserve">
          <source>The catalog being used for update lookups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eeb42b416508d59b6f2365d099a45f1dd83cae5" translate="yes" xml:space="preserve">
          <source>The certificate ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99720fd6582320e41ccbc6c866d2c26b4d6fa4b0" translate="yes" xml:space="preserve">
          <source>The certificate file to find the serial for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da1264b3072a08d71d120b1f09a08263076f968" translate="yes" xml:space="preserve">
          <source>The certificate of the authority that will be used to sign this crl. This is usually your CA's certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d255b5e590419e50f64e385d11484859d0178d31" translate="yes" xml:space="preserve">
          <source>The certificate store to add the certificate to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b2d10152cb0b5cd8408c6674ab595bd77c9475" translate="yes" xml:space="preserve">
          <source>The certificate store to delete the certificate from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0897e403939fb54d757e4ac65628027826140d68" translate="yes" xml:space="preserve">
          <source>The certificate to be read. Can be a path to a certificate file, or a string containing the PEM formatted text of the certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9000fff8dff8a5536cce16b787efdd8245fd0d9" translate="yes" xml:space="preserve">
          <source>The certificate to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdf86afe5eaa1470e6e04519b56f1339f7b7b3c" translate="yes" xml:space="preserve">
          <source>The certificate to remove, this can use local paths or salt:// paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5539404b0e4d840751f9ca82af6adbd826450443" translate="yes" xml:space="preserve">
          <source>The certificate to store, this can use local paths or salt:// paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a14e09c58c3e38d41ebd81fcc96f75ece9cbded" translate="yes" xml:space="preserve">
          <source>The certificate to uninstall, this can be a path for a .p12 or the friendly name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7b3269e9a8caa13fe9dae96929a5fbb785491a" translate="yes" xml:space="preserve">
          <source>The certificate to verify the CRL against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c218c8276b7f69ffc6cf2419e67029f1d083cc" translate="yes" xml:space="preserve">
          <source>The certificate to verify. Can be a path or string containing a PEM formatted certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55350e39bb6fcd994a281c8c3ea15bc6763b49ad" translate="yes" xml:space="preserve">
          <source>The chain in which to use as the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfe9d001a1d3035d7e294522e29e0c56d83c63b" translate="yes" xml:space="preserve">
          <source>The change in &lt;code&gt;/etc/hosts&lt;/code&gt; will be done after any other change that deviates from the specified snapshot are reverted. This could be for example, modifications to the &lt;code&gt;/etc/passwd&lt;/code&gt; file or changes in the &lt;code&gt;/etc/hosts&lt;/code&gt; that could render your the &lt;code&gt;hosts_entry&lt;/code&gt; rule void or dangerous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d18831abb57ab79844e67db61c6223fae60b85" translate="yes" xml:space="preserve">
          <source>The channel socket timeout in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f615237b8020b58e020df48ab8707bb74af886" translate="yes" xml:space="preserve">
          <source>The channel to send the message to. Can either be the ID or the name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c147e40295ee4abf3804d255dc00c0625ad682f9" translate="yes" xml:space="preserve">
          <source>The channel to use instead of the WebHook default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec720ea3db7ce8bf48133fe7dfba3242a4930fc7" translate="yes" xml:space="preserve">
          <source>The character encoding scheme to be used in this database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd244bd8d7fc586cd5161fe643ebcf415cb259d" translate="yes" xml:space="preserve">
          <source>The character set, if left empty the MySQL default will be used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f7d676acaa565ce31fb0c2fe7a56a9512a8033" translate="yes" xml:space="preserve">
          <source>The character to be inserted at the beginning of a line in order to comment it out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb05a39c32edf12bb074ed45aaea57705278e5f" translate="yes" xml:space="preserve">
          <source>The character to remove in order to uncomment a line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866705a426b19cb8f87bf366506cde467d4e2a2d" translate="yes" xml:space="preserve">
          <source>The character to use as a delimiter between fields in a text file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ebd8704e07e38628e156a9033db2810e4da4dc" translate="yes" xml:space="preserve">
          <source>The chassis host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c971c514d997e5c311df5ed1fc2c62f4c5b60c" translate="yes" xml:space="preserve">
          <source>The check Thorium state is used to create gateways to commands, the checks make it easy to make states that watch registers for changes and then just succeed or fail based on the state of the register, this creates the pattern of having a command execution get gated by a check state via a requisite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff958213f5ccfee0a099e51f561f990bf79440e" translate="yes" xml:space="preserve">
          <source>The checks for automatic IP configuration described above only apply if &lt;code&gt;IPAMConfig&lt;/code&gt; is among the keys set for static IP checks in &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-docker.compare_container_networks&quot;&gt;&lt;code&gt;docker.compare_container_networks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a317a8a105083ebaaff649a4a39c710f9a0ba1" translate="yes" xml:space="preserve">
          <source>The checks in the provided state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef3c21bd2499d9e479e86888eddb42b35fc75ca" translate="yes" xml:space="preserve">
          <source>The chef server URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a413cd5082bdbff68e9b9ec7508ab7f9745517" translate="yes" xml:space="preserve">
          <source>The chronos proxy configuration requires a 'base_url' property that points to the chronos endpoint:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e42839792e9946995996d6175c09f66672620d" translate="yes" xml:space="preserve">
          <source>The cimc proxy leverages the XML API functionality on the Cisco Integrated Management Controller. The Salt proxy must have access to the cimc on HTTPS (tcp/443).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52893a3edecf9386a4b87df2dc8cd8990d68235d" translate="yes" xml:space="preserve">
          <source>The ciphertext can be included in the CLI pillar data like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bcc42c2c22e021226bb32e7ee5259265727ba2" translate="yes" xml:space="preserve">
          <source>The cluster UUID. Defaults to value found in ceph config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609c1919535c99e00cc918c49edf5d6c72a20c6a" translate="yes" xml:space="preserve">
          <source>The cluster date will be added too. Defaults to the value found in local config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8197fd233de226f6a7881db7b4150c1b2f1f57" translate="yes" xml:space="preserve">
          <source>The cluster name. Defaults to &lt;code&gt;ceph&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da2537524f1bf763d353e33a6fd2608e8518890" translate="yes" xml:space="preserve">
          <source>The cmd state module manages the enforcement of executed commands, this state can tell a command to run under certain circumstances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53c410fb255046e3eb0cc91898a227aa6086d47" translate="yes" xml:space="preserve">
          <source>The cmd that should be executed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8c87a8b488fb20e75a2d7b8fe5c415e371f492" translate="yes" xml:space="preserve">
          <source>The cmdline that is returned is the actual list that should be processed by salt, and not the alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c18aaf722e13e6e196b53dbc8e43d7e0e757e3c" translate="yes" xml:space="preserve">
          <source>The cobbler-ext-nodes command can be used with this configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a177fc7eb695479604854149545aa0ec4c0214b2" translate="yes" xml:space="preserve">
          <source>The collation, if left empty the MySQL default will be used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414cc6524220d4912cacbe256af4216249fb380e" translate="yes" xml:space="preserve">
          <source>The collection name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a5910bbd9de83c3efff97a4e13f6b9b68a707e" translate="yes" xml:space="preserve">
          <source>The color in which the letter is shown. Defaults to '[255, 255, 255]' (white).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303847652752b029a6c6781e4f724a66093c0cf3" translate="yes" xml:space="preserve">
          <source>The color in which the message is shown. Defaults to '[255, 255, 255]' (white).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025437e5fd0485ebb6e86e92ba1fea2e3f40e8d2" translate="yes" xml:space="preserve">
          <source>The color of border of left side</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf488ef4e9f013cf0ae98f4b8a810e585780ccc9" translate="yes" xml:space="preserve">
          <source>The color the Hipchat message should be displayed in. One of the following, default: yellow &quot;yellow&quot;, &quot;red&quot;, &quot;green&quot;, &quot;purple&quot;, &quot;gray&quot;, or &quot;random&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3431a81e1ec5d4f44d74e5d94a616bca1ec20f" translate="yes" xml:space="preserve">
          <source>The column families in this Cassandra cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58ad899026a951092a63b6af36def131942ba93" translate="yes" xml:space="preserve">
          <source>The column name used to identify the platform, exactly as specified in the TextFSM index file. Default: &lt;code&gt;Platform&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8299f9ac6f8bcd986db83a079c169768c3b440b7" translate="yes" xml:space="preserve">
          <source>The combination of user_name and password determine how the task runs. For example, if a username is passed without at password the task will only run when the user is logged in. If a password is passed as well the task will run whether the user is logged on or not. If you pass 'System' as the username the task will run as the system account (the password parameter is ignored).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c0f255a37bd0792d0283f9451211c3d8de79b5" translate="yes" xml:space="preserve">
          <source>The command and version that we want to check against, the version number can use regex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a535457d2ba66158dd81f505b294ce7dbdff126" translate="yes" xml:space="preserve">
          <source>The command being executed is expected to return data about executing a state. For more information, see the &lt;a href=&quot;#stateful-argument&quot;&gt;Using the &quot;Stateful&quot; Argument&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838143f1eddf38036345891fa7ffb886637dc7d5" translate="yes" xml:space="preserve">
          <source>The command being run will still be logged at the &lt;code&gt;debug&lt;/code&gt; loglevel regardless, unless &lt;code&gt;quiet&lt;/code&gt; is used for this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b40073e918e4346f29d661a333f887f768a1bf3" translate="yes" xml:space="preserve">
          <source>The command executed on the device, to get the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd0e6e32537ac85b87a3098437561e331c6b8c1" translate="yes" xml:space="preserve">
          <source>The command that should be absent in the user crontab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc8192d31ea614d625780d1d97d0ed954e41b4a" translate="yes" xml:space="preserve">
          <source>The command that should be executed by the cron job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4fccd7527c44edf1c8f86674de05814e477b55" translate="yes" xml:space="preserve">
          <source>The command to be executed on the remote device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5088e6398bc3c8a588732e52374a28ee73ea5d64" translate="yes" xml:space="preserve">
          <source>The command to call inside salt.modules.vsphere</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21984de7aa1f8851e3ff25a38381b9ea1c2ea4b" translate="yes" xml:space="preserve">
          <source>The command to enter into config mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17cafea26a790d4ef4d52394d47dcb0bf3b9c46" translate="yes" xml:space="preserve">
          <source>The command to execute on the Junos CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f180f2685c0ca9ebbd237ac6a86c84d7b3b0e8" translate="yes" xml:space="preserve">
          <source>The command to execute on the Junos CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ffdeaa14c57504c9628423af71f9fb09220e29" translate="yes" xml:space="preserve">
          <source>The command to execute, remember that the command will execute with the path and permissions of the salt-minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94f00dc55f01b858325b2140ac7f30f5d698186" translate="yes" xml:space="preserve">
          <source>The command to pass to the apache solr init valid values are 'start', 'stop', and 'restart'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a541e487b6d6e49ceed4bc9d540be99ed8a505" translate="yes" xml:space="preserve">
          <source>The commands to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f95fe32242f53117522b4c18739eff782091a2" translate="yes" xml:space="preserve">
          <source>The commands to send to the node in config mode. If the commands argument is a string it will be cast to a list. The list of commands will also be prepended with the necessary commands to put the session in config mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c141f6ad21a04397f71a4f6935b6ade310f9e0f" translate="yes" xml:space="preserve">
          <source>The commands to send to the switch in config mode. If the commands argument is a string it will be cast to a list. The list of commands will also be prepended with the necessary commands to put the session in config mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ce124bc9606b1647ffe613e13a7b60a364e2c4" translate="yes" xml:space="preserve">
          <source>The comment to be placed with the SSH public key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa285c2bc95d23df0d61885f5db0983d0523ba7" translate="yes" xml:space="preserve">
          <source>The complete list of Junos facts collected by &lt;code&gt;junos-eznc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2db6212a2940915fca4d9c5571d02994349b291" translate="yes" xml:space="preserve">
          <source>The compliance report send as inline string, to be used as the file to send through the renderer system. Note, not all renderer modules can work with strings; the 'py' renderer requires a file, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6879c6f192c35ceb74ff8bf24daa475ea198c4f9" translate="yes" xml:space="preserve">
          <source>The compute and memory capacity of the Amazon RDS DB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69196f5c00aded05052bbf4a29fffbc502bc07ee" translate="yes" xml:space="preserve">
          <source>The compute and memory capacity of the nodes in the cache cluster. cache.t1.micro, cache.m1.small, etc. See: &lt;a href=&quot;https://boto.readthedocs.io/en/latest/ref/elasticache.html#boto.elasticache.layer1.ElastiCacheConnection.create_cache_cluster&quot;&gt;https://boto.readthedocs.io/en/latest/ref/elasticache.html#boto.elasticache.layer1.ElastiCacheConnection.create_cache_cluster&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173a9a0dad9d10ec64ceedddee5f08304f453c51" translate="yes" xml:space="preserve">
          <source>The compute and memory capacity of the nodes in the node group (shard). See &lt;a href=&quot;https://aws.amazon.com/elasticache/pricing/&quot;&gt;https://aws.amazon.com/elasticache/pricing/&lt;/a&gt; for current sizing, prices, and constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e943ade90ca292b2ef6d048966737837bb766550" translate="yes" xml:space="preserve">
          <source>The compute and memory capacity of the nodes in the node group (shard). Valid node types (and pricing for them) are exhaustively described at &lt;a href=&quot;https://aws.amazon.com/elasticache/pricing/&quot;&gt;https://aws.amazon.com/elasticache/pricing/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15102d4a9543f0cedbc5d65b334d9a769ab8258b" translate="yes" xml:space="preserve">
          <source>The computer name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e072eb64430fbb21b5318fb1a02709fd6c63eb7" translate="yes" xml:space="preserve">
          <source>The condition which must be met for the loop to break. This should contain &lt;code&gt;m_ret&lt;/code&gt; which is the return from the execution module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9def780bc3134668f5cdd9d5f2a02f87aacc82f1" translate="yes" xml:space="preserve">
          <source>The config above sets up beacons to check for the salt-master and mysql services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99a27c27569f4bea07b965313b1602da46492ad" translate="yes" xml:space="preserve">
          <source>The config above sets up beacons to check that processes are running or stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5ea3e769c935e5d0d7bef02f46493a83dc5049" translate="yes" xml:space="preserve">
          <source>The config above sets up engines to listen for events from the Docker daemon and publish them to the Salt event bus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f6a6075bf9eb096aafbc1f4ce9723cdab144cf" translate="yes" xml:space="preserve">
          <source>The config above will check for value changes on eth0 ipaddr and eth1 linkmode. It will also emit if the promiscuity value changes to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b4fb615a0a4cf4e095ab88955323fd86c8c33a" translate="yes" xml:space="preserve">
          <source>The config also supports two other parameters for each service:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7f106cdebb0544afefef191364a6795a6a85d3" translate="yes" xml:space="preserve">
          <source>The config file to use for the container. Defaults to system-wide config (usually in /etc/lxc/lxc.conf).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e32123fc0a81d0554acf49ef5a534ed384ee2f7" translate="yes" xml:space="preserve">
          <source>The config files that are referenced in the above &lt;code&gt;ext_pillar&lt;/code&gt; configuration are jinja2 templates which must render as a simple ordered list of &lt;code&gt;yaml&lt;/code&gt; files that will then be merged to build pillar data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c0313da29fa966a16789b65d411381c8bc3aa6" translate="yes" xml:space="preserve">
          <source>The config files that are referenced in the above &lt;code&gt;ext_pillar&lt;/code&gt; configuration are mako templates which must render as a simple ordered list of &lt;code&gt;yaml&lt;/code&gt; files that will then be merged to build pillar data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d4df54696807f1903afd33f4ed15e2439878b0" translate="yes" xml:space="preserve">
          <source>The config to be merged into the initial config, sent as text. This argument is ignored when &lt;code&gt;merge_path&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfd1bba9bae837d746f4dabbc510cfdd9dbb20f" translate="yes" xml:space="preserve">
          <source>The configConfMo method configures the specified managed object in a single subtree (for example, DN).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632e442a862c2d41b2a6492887fecf18e6313802" translate="yes" xml:space="preserve">
          <source>The configResolveClass method returns requested managed object in a given class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea95abf0b06f4f22c31f48474eaf1e658b401ad" translate="yes" xml:space="preserve">
          <source>The configuration above defines the mapping between the NAPALM &lt;code&gt;os&lt;/code&gt; Grain and the Netmiko &lt;code&gt;device_type&lt;/code&gt;, e.g., when the NAPALM Grain is &lt;code&gt;f5&lt;/code&gt;, it would use the &lt;code&gt;f5_ltm&lt;/code&gt; SSH Netmiko driver to execute commands over SSH on the remote network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a310305650ba457c536f6549a60179bb1df9ef" translate="yes" xml:space="preserve">
          <source>The configuration accepts a list of Salt functions to be invoked, and the corresponding output hierarchy that should be matched against. To invoke a function with certain arguments, they can be specified using the &lt;code&gt;_args&lt;/code&gt; key, or &lt;code&gt;_kwargs&lt;/code&gt; for more specific key-value arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25d18463b6360829a35a330b9fd5c84545c66e6" translate="yes" xml:space="preserve">
          <source>The configuration allows you to run a salt module function in case of success (&lt;em&gt;success_function&lt;/em&gt;) or failure (&lt;em&gt;failure_function&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492478bb15a30d20e11cb54a145663401bf1f463" translate="yes" xml:space="preserve">
          <source>The configuration file to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf83ba70115f9e612bcb8c15905b44b2d910e63" translate="yes" xml:space="preserve">
          <source>The configuration file used for the job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962a9bb256c92d4449b5e8272a566e5e61fb8f05" translate="yes" xml:space="preserve">
          <source>The configuration for the job specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f2d643173bed1822a435a63d8fe5238cac8208" translate="yes" xml:space="preserve">
          <source>The configuration for this function is read from the profile settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43cd2ea59e374a4b8f804098a89e9d5e9a3244a4" translate="yes" xml:space="preserve">
          <source>The configuration key &lt;code&gt;minion_restart_command&lt;/code&gt; is an argv list for the command to restart the minion. If &lt;code&gt;minion_restart_command&lt;/code&gt; is not specified or empty then the &lt;code&gt;argv&lt;/code&gt; of the current process will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac424c70555af71dac66dced553a9b5fec7a46d" translate="yes" xml:space="preserve">
          <source>The configuration of each virtual machine is defined in a file named &lt;code&gt;Vagrantfile&lt;/code&gt; which must exist on the VM host machine. The essential parameters which must be defined to start a Vagrant VM are the directory where the &lt;code&gt;Vagrantfile&lt;/code&gt; is located (argument &lt;code&gt;cwd:&lt;/code&gt;), and the username which will own the &lt;code&gt;Vagrant box&lt;/code&gt; created for the VM ( argument &lt;code&gt;vagrant_runas:&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0323a3bfbef11c95a2066395f55ae89958962a" translate="yes" xml:space="preserve">
          <source>The configuration of this external pillar module is done via an external file which provides the actual configuration for the LDAP searches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da15718628cb6bed1ecf51c6072457c51d47b534" translate="yes" xml:space="preserve">
          <source>The configuration sent as text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8575ba37960020c94dd0952a2686b7953584a72b" translate="yes" xml:space="preserve">
          <source>The configuration sent as text. This argument is ignored when &lt;code&gt;path&lt;/code&gt; is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943fdfc0850fd05e9b77c41740895d0de1c2248e" translate="yes" xml:space="preserve">
          <source>The configuration source. Choose from: &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;candidate&lt;/code&gt;, &lt;code&gt;startup&lt;/code&gt;. Default: &lt;code&gt;running&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb262cde8abedf28f7184bee52da452a8a945fa" translate="yes" xml:space="preserve">
          <source>The configuration source. Choose from: &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;candidate&lt;/code&gt;, or &lt;code&gt;startup&lt;/code&gt;. Default: &lt;code&gt;running&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b16e53a9f3b45645a022868ce654775a8c1e9d" translate="yes" xml:space="preserve">
          <source>The configuration to obtain the password from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0bf69e8c373f0969bc755754cbb4fa1ef66f54" translate="yes" xml:space="preserve">
          <source>The configuration to obtain the public key from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247f6e02bd59febe5ea4b8c986eefbabd868e29c" translate="yes" xml:space="preserve">
          <source>The configuration to return. Valid values for config are &lt;code&gt;running-config&lt;/code&gt; or &lt;code&gt;startup-config&lt;/code&gt;. The default value is &lt;code&gt;running-config&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2260f2c865dbfb7b90d890c56366a812544082b" translate="yes" xml:space="preserve">
          <source>The configuration type to retrieve from the network device. Default: &lt;code&gt;running&lt;/code&gt;. Available options: &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;startup&lt;/code&gt;, &lt;code&gt;candidate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076e929fda287fd550af36b4064c252247b8d8b9" translate="yes" xml:space="preserve">
          <source>The connection ID to accept. Exclusive with conn_name. String type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a206942aaaee4e663bed4db5922682339e73156" translate="yes" xml:space="preserve">
          <source>The connection ID to check. Exclusive with conn_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168a4167cb2d4e24ed173f2d018dd2300070bdc3" translate="yes" xml:space="preserve">
          <source>The connection details can be specified using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1450c8a7c47d1c05b2d4f37b1e74ddca5b8c24ef" translate="yes" xml:space="preserve">
          <source>The connection name to check. Exclusive with conn_id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03317b23f19ddf238789ae491959b045a855bda3" translate="yes" xml:space="preserve">
          <source>The connection to the virtualization host can be either setup in the minion configuration, pillar data or overridden for each individual call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c4260d7da9e12cfacf7ab067b2516d13c8078f" translate="yes" xml:space="preserve">
          <source>The container does not need to have Salt installed, but Python is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aebfd4709b21148a562bf354b9951464c430a40" translate="yes" xml:space="preserve">
          <source>The container must be running for &lt;code&gt;machinectl&lt;/code&gt; to gather information about it. If the container is stopped, then this function will start it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cb87a30104f48578570476550c9260fe0360a6" translate="yes" xml:space="preserve">
          <source>The content to be used between the two lines identified by &lt;code&gt;marker_start&lt;/code&gt; and &lt;code&gt;marker_end&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190c1164464fcdfad140014fc1ce7d53d954b430" translate="yes" xml:space="preserve">
          <source>The content to be used between the two lines identified by &lt;code&gt;marker_start&lt;/code&gt; and &lt;code&gt;marker_stop&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29de0533ada171b155b5199788bd0fdaf424624d" translate="yes" xml:space="preserve">
          <source>The content to be used between the two lines identified by marker_start and marker_stop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eba743744d204dcce9b03ec64a45e4885599812" translate="yes" xml:space="preserve">
          <source>The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb39d80d0773d6ebfdbf924e045f4f466366840" translate="yes" xml:space="preserve">
          <source>The contents of the private key in PEM-encoded format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0eb042f19d50f590e0edf0079fe4b8314d2558" translate="yes" xml:space="preserve">
          <source>The contents of the public key certificate in PEM-encoded format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b6fb7a3402db8168179b540debe7c0d8e176ab" translate="yes" xml:space="preserve">
          <source>The context path to deploy (incl. forward slash) the WAR to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05048ec3dee4e8a9c0f3493b19908d5663ad3959" translate="yes" xml:space="preserve">
          <source>The context path to undeploy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657ba1c4b1369e040c07216cde044b96665404bd" translate="yes" xml:space="preserve">
          <source>The context to pass when rendering the &lt;code&gt;summary&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt;. This argument is ignored when &lt;code&gt;template_engine&lt;/code&gt; is set as &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444dc5cad2d26cd647b24022c85c947beac8f01e" translate="yes" xml:space="preserve">
          <source>The continuous query string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496654b59c462dec8bd7966e1cd435173db62881" translate="yes" xml:space="preserve">
          <source>The copy function accepts paths that are local to the Salt minion. This function does not support salt://, http://, or the other additional file paths that are supported by &lt;a href=&quot;#salt.states.file.managed&quot;&gt;&lt;code&gt;states.file.managed&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#salt.states.file.recurse&quot;&gt;&lt;code&gt;states.file.recurse&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe4ce7260a7729e3c3d79d0bcb3ebb7346a3a51" translate="yes" xml:space="preserve">
          <source>The copy function accepts paths that are local to the Salt minion. This function does not support salt://, http://, or the other additional file paths that are supported by &lt;a href=&quot;../../states/all/salt.states.file#salt.states.file.managed&quot;&gt;&lt;code&gt;states.file.managed&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../states/all/salt.states.file#salt.states.file.recurse&quot;&gt;&lt;code&gt;states.file.recurse&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b83e030513f1f6b3706026e9144e2c2d3d0047" translate="yes" xml:space="preserve">
          <source>The core the handler belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a0d871dd1530ac1a2c1a6f95720e428a0d2da5" translate="yes" xml:space="preserve">
          <source>The corresponding Pillar top file would look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2e6420b8e25a753a066509422a8a8a8d41e14a" translate="yes" xml:space="preserve">
          <source>The corresponding dynamic topic sent on salt event bus would look something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e2ee1fbac478bd72567e558877d29f86f2cff7" translate="yes" xml:space="preserve">
          <source>The cors configuration for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d6b5f20fa0f1afb432333b4754d952feaf4820" translate="yes" xml:space="preserve">
          <source>The country that the certificate should use. Defaults to US.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a8fc5b305a827c3223858ea55f5f23c0e27c58" translate="yes" xml:space="preserve">
          <source>The create_key process takes awhile so increasing the timeout may be necessary, e.g. -t 15.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bd0fd454e4f9a792dd147f51a3468afe2f57a1" translate="yes" xml:space="preserve">
          <source>The crl should be automatically recreated if there are less than &lt;code&gt;days_remaining&lt;/code&gt; days until the crl expires. Set to 0 to disable automatic renewal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4f19a53d8cf14bd5ba216dc1ded45c24d7897e" translate="yes" xml:space="preserve">
          <source>The cron job is set commented (prefixed with &lt;code&gt;#DISABLED#&lt;/code&gt;). Defaults to False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c02f877ab2a0e5e263a36c2bc6b226dc267f4dd" translate="yes" xml:space="preserve">
          <source>The cross-connect identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b02a6c80c87e64bd7e8592d250210600bc95af" translate="yes" xml:space="preserve">
          <source>The crush map rule set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe63183c6070df2bd66c4ca6f4967d6457fa4b2" translate="yes" xml:space="preserve">
          <source>The current behavior is still relying on that mechanism, but you can also specify an identifier to identify your crontabs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81dbf79ddf7a8b64fc257203a962cd291e14fe8c" translate="yes" xml:space="preserve">
          <source>The current configuration will be come the previous configuration. If run a second time back-to-back it is like toggling between two configs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecc9489f56c60900d9cfe6105a9410d3fa0f238" translate="yes" xml:space="preserve">
          <source>The current startup disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287a1ebfa783c3a49af96b83bf76f84bd1dfcc66" translate="yes" xml:space="preserve">
          <source>The current status of a service is determined by the return code of the init/rc script status command. A status return code of 0 it is considered running. Any other return code is considered dead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143b815cb0850d700fd64bd8a9ae35d27981c1ef" translate="yes" xml:space="preserve">
          <source>The current status of the SSL certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcece83c4b64c9313e1a5ae33c6db26f7f98106" translate="yes" xml:space="preserve">
          <source>The current status of the task. Will be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e64472d097565decb3ba1db5ea4f06974dcc56" translate="yes" xml:space="preserve">
          <source>The current time in 24 hour format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0808585963877f2d07d523475b2a2ecfd35e4dc" translate="yes" xml:space="preserve">
          <source>The current time zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca78ef975183b5e6b99c1ebd085591d564c8fc8" translate="yes" xml:space="preserve">
          <source>The current time zone code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2dc26a5bc5ccfd2e73f030858963a9138d320e" translate="yes" xml:space="preserve">
          <source>The current time zone offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f1a14519c771beb411fba2803e7b6227467094" translate="yes" xml:space="preserve">
          <source>The current usage statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e81956b9ef157ffbad4765eec5bf13e78d6cb8" translate="yes" xml:space="preserve">
          <source>The current working directory to execute the command in, defaults to /root</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a66b570df130241efc8d78b4ecc241150ba2d1" translate="yes" xml:space="preserve">
          <source>The currently configured jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df907b3f10008f2a15990018c366b0676537c05d" translate="yes" xml:space="preserve">
          <source>The custom login directory of user. Uses default value of underlying system if not set. Notice that this directory does not have to exist. This also the location of the home directory to create if createhome is set to True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f23d65eb115dff6cf9e45d9d3034b60b2c902fb" translate="yes" xml:space="preserve">
          <source>The custom profile directory of the user. Uses default value of underlying system if not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6aacf1b966d05436df614a1e6dafa89d21ff32" translate="yes" xml:space="preserve">
          <source>The cygwin architecture to install the package into. Current options are x86 and x86_64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103d9c5128e7e51758fcea4d24c05cb6b5089f66" translate="yes" xml:space="preserve">
          <source>The cygwin architecture to remove the package from. Current options are x86 and x86_64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93aa88a8b71182899ee8af08c1b37f1e8106cf2d" translate="yes" xml:space="preserve">
          <source>The cygwin architecture to update. Current options are x86 and x86_64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e96d31a05398ef220efa7d67422e802462c4d8" translate="yes" xml:space="preserve">
          <source>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard). If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e3bcc930c3fb5697d811ab2b3cb087efccedd0" translate="yes" xml:space="preserve">
          <source>The daily time range during which automated backups are created if automated backups are enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871391be822fbd35e69d07d13791a29040437c77" translate="yes" xml:space="preserve">
          <source>The data containing the template of the image to allocate. Syntax can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6cfb4ac4546516c7b7e6445e6fc60cd9ae6cfd" translate="yes" xml:space="preserve">
          <source>The data format for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a19ade5fda00cf1cd25aca2fb7f64fb988a644a" translate="yes" xml:space="preserve">
          <source>The data from Consul can be merged into a nested key in Pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e65129482423591503e7c92b80c4345a0b003b1" translate="yes" xml:space="preserve">
          <source>The data returned from this function should not be used for direct modification of the main.cf file; other functions are available for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e100e9399b77ef2b62f463da3b2e89d55f88c38b" translate="yes" xml:space="preserve">
          <source>The database file name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313c85846eb153fe2df666dce2c93c8c22e3d5a3" translate="yes" xml:space="preserve">
          <source>The database from which to remove the user specified by the &lt;code&gt;name&lt;/code&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c751423c24b1aafce3cf80022ca48b4d426fc66" translate="yes" xml:space="preserve">
          <source>The database in which to authenticate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d067b3806c3ba1bb2f3f9ea12cb47f0f232cc3" translate="yes" xml:space="preserve">
          <source>The database in which to create the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4e880c9e74d42d469a280be4d8389c3b89551a" translate="yes" xml:space="preserve">
          <source>The database index must be specified as string not as integer value!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a897ace1b8a17c0b4cd71dc74a35b4bff41731" translate="yes" xml:space="preserve">
          <source>The database index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d25367c967133312ee1367ebc5c11e799876da" translate="yes" xml:space="preserve">
          <source>The database on which to operate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c097b4c3ccf6bc68946145ce0f3c730d5f8e4887" translate="yes" xml:space="preserve">
          <source>The database priv_level (i.e. db.tbl OR db.*)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db11c86e8e4e791f73e9668951bf842ca889772" translate="yes" xml:space="preserve">
          <source>The database superuser name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbc3ca7f078b81f767ccde78b8d1b7cd78e6e41" translate="yes" xml:space="preserve">
          <source>The database to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8141b24d36bcd5f428344dfa1f760f87a546076" translate="yes" xml:space="preserve">
          <source>The database to check for the user to exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec65b5e24fc60ba4708a79802e2db16d6e0874f2" translate="yes" xml:space="preserve">
          <source>The database to check in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fd8c888155aa00a9f7d3bab1ddb9ca5bdb0644" translate="yes" xml:space="preserve">
          <source>The database to connect to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898a719dad2e0f00b0accb4713246bbe5036447a" translate="yes" xml:space="preserve">
          <source>The database to create the user in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692178b8d36d02ff0d74f84cdd04379c53ab30c4" translate="yes" xml:space="preserve">
          <source>The database to install the language in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde110b1eb9895cc3bce6b1cf704c043809bac8e" translate="yes" xml:space="preserve">
          <source>The database to list the users from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e767dd36f8de7904182d8c06443f7449e8baf08f" translate="yes" xml:space="preserve">
          <source>The database to operate on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1410520d29bb6c1ac0f9e66c3819304f39487fcf" translate="yes" xml:space="preserve">
          <source>The database to query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72bb0fefb9a326152a2cfb30b8a6296ac336cc9" translate="yes" xml:space="preserve">
          <source>The database to remove the user from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dcac12c8ccfc652c891bc8034c2b1230c50289" translate="yes" xml:space="preserve">
          <source>The database to run the query against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59eb966880f76398667682ce05b595178067045" translate="yes" xml:space="preserve">
          <source>The database to try to log in to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ee9fe15affc0a6d5e4923874f35cfa0e696cbe" translate="yes" xml:space="preserve">
          <source>The database user that will be the owner of the tablespace. Defaults to the user executing the command (i.e. the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953f7e09ebc4faeb205b26e2c7101b12edc19a1c" translate="yes" xml:space="preserve">
          <source>The database's name will work on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fe5e9508c504aa964cb8cf59e26f19e2985054" translate="yes" xml:space="preserve">
          <source>The datacenter in which the chassis is located</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246c835756a39b9aaa9e150bc3a8255a34ed830c" translate="yes" xml:space="preserve">
          <source>The datacenter name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71219e7b6cd915c60d73fd4cf81c8b3463e3362" translate="yes" xml:space="preserve">
          <source>The datacenter to look for DVSs in. Default value is None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b76ce4bd8d8cbf565424bfb81102b06bfe87a9" translate="yes" xml:space="preserve">
          <source>The datadog API key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0366989876b49db51d2ada4950eeb69076d5cee2" translate="yes" xml:space="preserve">
          <source>The datadog application key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e46b4d7b72a1d2e165040e56be714d0f07e2532" translate="yes" xml:space="preserve">
          <source>The dataset that will be serialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d1fe15eecc9f8acdc1368aed55fb0cbb2f763" translate="yes" xml:space="preserve">
          <source>The date format for the timestamp parameter. Defaults to '%Y-%m-%dT%H:%M:%S'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7ac48da47f3e5518b8561d843cb007f04a3a37" translate="yes" xml:space="preserve">
          <source>The date format for the timestamp parameter. Defaults to ''%Y-%m-%dT%H:%M:%S'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f491d1f6525ea3321be7c0db3dce044db6f00e" translate="yes" xml:space="preserve">
          <source>The date format to be used when generating the perforce data. Default: &lt;code&gt;%Y/%m/%d&lt;/code&gt; (&amp;lt;year&amp;gt;/&amp;lt;month&amp;gt;/&amp;lt;day&amp;gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be40cf2feba15123ec4d33818669f522dbe4df3" translate="yes" xml:space="preserve">
          <source>The date on which the certificate was created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8573d0cd18f66c7a16363fa461198c35305de759" translate="yes" xml:space="preserve">
          <source>The date on which the certificate will expire</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc6dc59ba35bea5e44fa9600889854383e7a322" translate="yes" xml:space="preserve">
          <source>The date the account expires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797958ff73c2a2e3871842f7281e5ec63b8a3624" translate="yes" xml:space="preserve">
          <source>The date the password will expire</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a576b0961e9bafded455a962566123dd418bc78f" translate="yes" xml:space="preserve">
          <source>The date to set. Can be any of the following formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8152d632cd8f119d87b4bfb1893f35f16b5947" translate="yes" xml:space="preserve">
          <source>The date to set. Can be any of the following formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae3be5e3f58f2a54f1df623f3cbc7a38bccb242" translate="yes" xml:space="preserve">
          <source>The date to set. Valid date formats are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e93744cc16cbb81e99e25acc3b861121f4b8b1" translate="yes" xml:space="preserve">
          <source>The date when the trigger is activated. If no value is passed, the current date will be used. Can be one of the following formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9ca1de4d2ca61dd6c5d3b8b44db989adf6b381" translate="yes" xml:space="preserve">
          <source>The date when the trigger is deactivated. The trigger cannot start the task after it is deactivated. Can be one of the following formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84143b6b4d2cff156936cace5dd68d350a2491b9" translate="yes" xml:space="preserve">
          <source>The date/time of the last failed login attempt on this account (yyyy-mm-dd hh:mm:ss)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caeb5ff4f5f1fa23db96e10d24e5ee8fcea67828" translate="yes" xml:space="preserve">
          <source>The date/time the account was created (yyyy-mm-dd hh:mm:ss)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9389a64e3e5cc58c3b5debb952e4cd7dc1d6114" translate="yes" xml:space="preserve">
          <source>The date/time the account was modified (yyyy-mm-dd hh:mm:ss)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4affb7d746486a0d0561b2c884a00f6aaa87ff" translate="yes" xml:space="preserve">
          <source>The debconfmod state has two functions, the &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;set_file&lt;/code&gt; functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a6eaecbeb3ff0bf298de0087a077e9d7bfa4b5" translate="yes" xml:space="preserve">
          <source>The debconfmod state module manages the enforcement of debconf selections, this state can set those selections prior to package installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6893fc1b0f44771e6489d174f8968280ad6d0d60" translate="yes" xml:space="preserve">
          <source>The default action is &lt;code&gt;print=path&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1661746bd4f00b80c96cf8b9c0efc3eb4ed71a3" translate="yes" xml:space="preserve">
          <source>The default alias file is set to &lt;code&gt;/etc/aliases&lt;/code&gt;, as defined in Salt's &lt;a href=&quot;../../modules/all/salt.modules.config#module-salt.modules.config&quot;&gt;&lt;code&gt;config execution module&lt;/code&gt;&lt;/a&gt;. To change the alias file from the default location, set the following in your minion config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3106d752ade9e95e9e8b1a31a915f3db846e8ab" translate="yes" xml:space="preserve">
          <source>The default authentication method for local connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b77ee1ae88af42dfdb423f25a8c0308806f298" translate="yes" xml:space="preserve">
          <source>The default behavior if the &lt;code&gt;--prefix&lt;/code&gt; option for &lt;code&gt;git archive&lt;/code&gt; is not specified is to not prepend a prefix, so Salt's behavior differs slightly from &lt;code&gt;git archive&lt;/code&gt; in this respect. Use &lt;code&gt;prefix=''&lt;/code&gt; to create an archive with no prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496d5f297207327d42a93bfd636a394bbd3a5649" translate="yes" xml:space="preserve">
          <source>The default behaviour is to write the fetched file to the given destination path. If this parameter is omitted or set as empty string (&lt;code&gt;''&lt;/code&gt;), the function places the remote file on the local filesystem inside the Minion cache directory and returns the path to that file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b972981b76a80e2f4ae7a454e9a8410b934a09d" translate="yes" xml:space="preserve">
          <source>The default configuration is to run this module using &lt;strong&gt;salt-api&lt;/strong&gt; to start the Python-based CherryPy server. This server is lightweight, multi-threaded, encrypted with SSL, and should be considered production-ready. See the section above for performance expectations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be52c266e068a0181f82dcbfb9dca24e62517096" translate="yes" xml:space="preserve">
          <source>The default date format is ISO 8601 but can be overridden by also specifying the &lt;code&gt;once_fmt&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b564387d808f3693b06dfb6b642bda59c577b92c" translate="yes" xml:space="preserve">
          <source>The default encoding for new databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc60f74cec8984a5b9df3cce55e56cab129b8152" translate="yes" xml:space="preserve">
          <source>The default file server backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddf69de85464adc356396cae004b8558939025e" translate="yes" xml:space="preserve">
          <source>The default for the maintenance_db is 'postgres' and in most cases it can be left at the default setting. This data can also be passed into pillar. Options passed into opts will overwrite options passed into pillar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90b96991cec4d60563cdba59e9b8831f4c26c27" translate="yes" xml:space="preserve">
          <source>The default for the port is '1433' and for the database is '' (empty string); in most cases they can be left at the default setting. Options that are directly passed into functions will overwrite options from configs or pillars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0865f5dc59b3ba48d8e32dc99ffb22966f22ea1" translate="yes" xml:space="preserve">
          <source>The default for this setting is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b376b8ae9933cb76ec0fe3d6d56574dd2b96c2bf" translate="yes" xml:space="preserve">
          <source>The default is set to &lt;code&gt;full&lt;/code&gt;, which will display many lines of detailed information for each executed chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2aca981520f8a33fae80865f0706f4d0c3b16c" translate="yes" xml:space="preserve">
          <source>The default is to not filter out anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e4e598bb96dd3216b171aaed82da743d1e329c" translate="yes" xml:space="preserve">
          <source>The default is to refresh module asynchronously. To block until the module refresh is complete, set the 'async' flag to False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d312198f3b3619f1452f96442530a16b4279b0" translate="yes" xml:space="preserve">
          <source>The default locale for new databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d64b7a6413846e6f13a4393ce417f17bf1f1a1" translate="yes" xml:space="preserve">
          <source>The default mode for new files and directories corresponds to the umask of the salt process. The mode of existing files and directories will only be changed if &lt;code&gt;mode&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea943b4b0281a61dbe7f67ddb19e882ae9c3e08" translate="yes" xml:space="preserve">
          <source>The default mode for new files and directories corresponds umask of salt process. For existing files and directories it's not enforced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be540ce056b6e906558155b2a546ea562c2b2871" translate="yes" xml:space="preserve">
          <source>The default permission for new repositories added to the team, can be 'pull', 'push' or 'admin'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb9e6ee207b93ba0c3c56cca8acd0429e703c1d" translate="yes" xml:space="preserve">
          <source>The default permission for new repositories added to the team, can be 'pull', 'push' or 'admin'. Defaults to pull.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c7a84d65c52a15d158d1f8e9b981e91dda0145" translate="yes" xml:space="preserve">
          <source>The default renderer for SLS files is the YAML renderer. YAML is a markup language with many powerful features. However, Salt uses a small subset of YAML that maps over very commonly used data structures, like lists and dictionaries. It is the job of the YAML renderer to take the YAML data structure and compile it into a Python data structure for use by Salt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d979fe8e257b1524413f77d388eba9ef25730cb" translate="yes" xml:space="preserve">
          <source>The default salt environment to pull sls files from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a6cb1de958ba65592e96eb9f5c516bc957c0e1" translate="yes" xml:space="preserve">
          <source>The default tag comes from &lt;code&gt;sys.argv[0]&lt;/code&gt; which is usually &quot;salt-minion&quot; but could be different based on the specific environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2ace501c24e72b1716e71fc2587f571c6ba5ed" translate="yes" xml:space="preserve">
          <source>The default topic title is &lt;code&gt;jnpr/syslog/hostname/event&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bab3a1eadce6e0d5dfcb6bb0d5c3e5abe6ebe21" translate="yes" xml:space="preserve">
          <source>The default value is 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a25106380982066b0160b066fb5cd76832d442" translate="yes" xml:space="preserve">
          <source>The default value is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b17a6f990dfd22ca08c5c80508d903558501d4b" translate="yes" xml:space="preserve">
          <source>The default value is None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32b64dc2d4b9164d39527b831e73a0d10f68b30" translate="yes" xml:space="preserve">
          <source>The default value is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849aacd339cfc0c78278e10ec266230987ecb86d" translate="yes" xml:space="preserve">
          <source>The default value of the &lt;code&gt;fingerprint_hash_type&lt;/code&gt; will change to &lt;code&gt;sha256&lt;/code&gt; in Salt 2017.7.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7918c9c15056a225aee761acecee77f8a1a81ece" translate="yes" xml:space="preserve">
          <source>The default value on Windows server is &lt;code&gt;process&lt;/code&gt;, while the default value on Windows client is &lt;code&gt;hyperv&lt;/code&gt;. On Linux, only &lt;code&gt;default&lt;/code&gt; is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d3f2a98cacb813de61dcd707b3c627f8db5ab1" translate="yes" xml:space="preserve">
          <source>The default winrepo directory on the master is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eae444fee5f9494a6d7f25eaa6daf1dfb330db4" translate="yes" xml:space="preserve">
          <source>The defaults is computed from pillar key. The first entry is considered as the formula namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fe65ad6d9be18f2955a4a74493b5e59698aa14" translate="yes" xml:space="preserve">
          <source>The delay time that is randomly added to the start time of the trigger. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6da48c4c1d84839ab6a8431c37ffa8fc00a2b26" translate="yes" xml:space="preserve">
          <source>The dependencies listed above can be installed via package or pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba01dd43ac22892aaf4a53e7b1d9665ff3bc84fa" translate="yes" xml:space="preserve">
          <source>The depth defines how the dicts are constructed. Essentially if you query for fields a,b,c,d for each row you'll get:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128147a340d407bb958d40f94c2dafc22f3517d6" translate="yes" xml:space="preserve">
          <source>The description for the snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b4a5d6677742bb95e975e2c3a26dd199ed7e37" translate="yes" xml:space="preserve">
          <source>The description of the circuit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671a64c4f8945be2e17b46b47a98ae8cd196599d" translate="yes" xml:space="preserve">
          <source>The description of the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07823cb1ae82dc2d3714c73091233efcfb70ee9" translate="yes" xml:space="preserve">
          <source>The description of the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920fe6d153bb48fdd7e27f1bc75de0ccc46967e2" translate="yes" xml:space="preserve">
          <source>The description of the team.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47742ca5f930c2a351ca61718e9910cf6665981" translate="yes" xml:space="preserve">
          <source>The description to use for this project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a3f58b053a19e5e64e7b8523476f1739ecdf92" translate="yes" xml:space="preserve">
          <source>The description to use for this tenant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65012fd01fc6fb42973f633d83b0dce66b9839c6" translate="yes" xml:space="preserve">
          <source>The design of this module is such that when files are edited, a minimum of changes are made to them. Each file should look as if it has been edited by hand; order, comments and whitespace are all preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751d7b3dea2aaedc60442d1daf32a8c76b90dca0" translate="yes" xml:space="preserve">
          <source>The desired LICENSE template to apply, e.g &quot;mit&quot; or &quot;mozilla&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c466da0caac52ed098a37cc9a5ff095aecb4e2c9" translate="yes" xml:space="preserve">
          <source>The desired capacity of the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1cb34c2360d9f53963c3b50615e4031af17b97" translate="yes" xml:space="preserve">
          <source>The desired computer description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da418ffa632df4a296c7cefba45e3b48c4a4b93" translate="yes" xml:space="preserve">
          <source>The desired computer name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25da72c15481cb8ee7f76ee781e7552ed6e4fa8b" translate="yes" xml:space="preserve">
          <source>The desired language or platform for a .gitignore, e.g &quot;Haskell&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f990aca7798ea8b3b758e4b55a76b6d39fd19bfb" translate="yes" xml:space="preserve">
          <source>The desired mac address, computed if &lt;code&gt;None&lt;/code&gt; (Default: &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaa3fc3aa4f20983c77620779b652b2d39637b0" translate="yes" xml:space="preserve">
          <source>The destination directory into which the file should be unpacked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9ab9e535a1a899db7bc283454afe456f106a5f" translate="yes" xml:space="preserve">
          <source>The destination directory into which to &lt;strong&gt;unpack&lt;/strong&gt; the rar file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b22a69b79e0a13c21fa19aab06c69203ef5c08b" translate="yes" xml:space="preserve">
          <source>The destination directory into which to &lt;strong&gt;unpack&lt;/strong&gt; the tarfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786ab415577a2ec5f61225da30ae78715cfb4e76" translate="yes" xml:space="preserve">
          <source>The destination gemset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fe95a775c9abfaac220f773fcbfe3324487903" translate="yes" xml:space="preserve">
          <source>The destination location where files will be rsynced to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2eec6b9d7741a02f299451dee08d92fc71aafb" translate="yes" xml:space="preserve">
          <source>The destination path on the device where to copy the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0366cbb3abde08b56b93220aeda0f870f9f52cfc" translate="yes" xml:space="preserve">
          <source>The destination path on the where the file will be copied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad84df3c01bd7cf67e3ca460069378469d6a15d" translate="yes" xml:space="preserve">
          <source>The details of the new balancer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e64d94c0760c3b5339cfd36f70e92d2c8b2c52c" translate="yes" xml:space="preserve">
          <source>The developer can then use a less-secure system to encrypt data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9dd3db276a9654287927255543fb3aae6d342e" translate="yes" xml:space="preserve">
          <source>The device for the user to send the message to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228dc962215977e4157dac0b3def0b1c55fc55b6" translate="yes" xml:space="preserve">
          <source>The device in which to create the new filesystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4723a3d121577a94dfc90164c921eca83f89854a" translate="yes" xml:space="preserve">
          <source>The device must not be part of an active pool configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f74aefa5a52eec319ea11af8d197977c4aebb9" translate="yes" xml:space="preserve">
          <source>The device name to initialize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445dd044201573d557ccd403db264ee5e7bc17b4" translate="yes" xml:space="preserve">
          <source>The device name, typically the device node, such as &lt;code&gt;/dev/sdb1&lt;/code&gt; or &lt;code&gt;UUID=066e0200-2867-4ebe-b9e6-f30026ca2314&lt;/code&gt; or &lt;code&gt;LABEL=DATA&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c75d79618191c708fd7417c854f0e1f21d2defe" translate="yes" xml:space="preserve">
          <source>The device on the instance through which the volume is exposed (e.g. /dev/sdh)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c677db2a0ac16c0c8d6b1659cc662ed5434dd8c9" translate="yes" xml:space="preserve">
          <source>The device that uniquely identifies the VirtualNic that will be used for VMotion for each host. Defaults to &lt;code&gt;vmk0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbaa6dca577f40caf3aeabc0fb38fcf209559698" translate="yes" xml:space="preserve">
          <source>The device that uniquely identifies the VirtualNic that will be used for VMotion for the host. Defaults to &lt;code&gt;vmk0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0833c29d45fec076c974eb79807ca9a36752a932" translate="yes" xml:space="preserve">
          <source>The device to be unmounted. This is optional because the device could be mounted in multiple places.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d283052bc31a655eaaa28894508342b95056f12f" translate="yes" xml:space="preserve">
          <source>The device to store the osd data on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d01ebcf15a5548b1c61f90fbb30809839210807" translate="yes" xml:space="preserve">
          <source>The dialog box message body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a4abb52e2a142c487ec4fcd469fdb1fdc28695" translate="yes" xml:space="preserve">
          <source>The dialog box title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dfe5177119efa5a30a90838cd8ae49852156cf" translate="yes" xml:space="preserve">
          <source>The dict (not a list) of keyword arguments to pass into the function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf41549f7e4f7946d2f6652bb258fcdd04351178" translate="yes" xml:space="preserve">
          <source>The dict can also optionally contain the &lt;code&gt;not_after&lt;/code&gt; key. This is redundant if the &lt;code&gt;certificate&lt;/code&gt; key is included. If the &lt;code&gt;Certificate&lt;/code&gt; key is not included, this can be used for the logic behind the &lt;code&gt;include_expired&lt;/code&gt; parameter. If should be a string in the format &quot;%Y-%m-%d %H:%M:%S&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f25ec7856f12e013279d58c601b3f9d5628045" translate="yes" xml:space="preserve">
          <source>The dict can also optionally contain the &lt;code&gt;reason&lt;/code&gt; key. This is the reason code for the revocation. Available choices are &lt;code&gt;unspecified&lt;/code&gt;, &lt;code&gt;keyCompromise&lt;/code&gt;, &lt;code&gt;CACompromise&lt;/code&gt;, &lt;code&gt;affiliationChanged&lt;/code&gt;, &lt;code&gt;superseded&lt;/code&gt;, &lt;code&gt;cessationOfOperation&lt;/code&gt; and &lt;code&gt;certificateHold&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3b720e2130900d76a963fb76bef46f8f448c0a" translate="yes" xml:space="preserve">
          <source>The dict can optionally contain the &lt;code&gt;revocation_date&lt;/code&gt; key. If this key is omitted the revocation date will be set to now. If should be a string in the format &quot;%Y-%m-%d %H:%M:%S&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67d3e2f71616b79376c6c5ed0b8fedfb343bb85" translate="yes" xml:space="preserve">
          <source>The dictionary containing the schema information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e35fc46a2b65a0c4f274bf58b58581ce760f42f" translate="yes" xml:space="preserve">
          <source>The dictionary holding the configmaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a044da9261a23b8d5cf1564a2eda9194c028c066" translate="yes" xml:space="preserve">
          <source>The dictionary holding the secrets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0259fec2058b1193494c8c642b80f0881e59b48c" translate="yes" xml:space="preserve">
          <source>The dictionary key can be a globbing pattern. The function will return the corresponding &lt;code&gt;lookup_dict&lt;/code&gt; value where the pilalr value matches the pattern. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02fc4d1b6706e537c40dfdeea1271d552f4b170" translate="yes" xml:space="preserve">
          <source>The dictionary of data for the jinja variables present in the jinja template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d554f199c81c8485334c28701c4f44b1e32f09ae" translate="yes" xml:space="preserve">
          <source>The dictionary of defaults. This argument must equally be structured with respect to the OpenConfig standards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41fd76a5257ca0ab3a8b61cebd51e56e281c156" translate="yes" xml:space="preserve">
          <source>The dictionary of key/value pairs to check against if row exists, insert into the table if it doesn't</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2faabdd0acfea4c7940d789c929cc0d1cb4f39" translate="yes" xml:space="preserve">
          <source>The dictionary of keys to accept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd4b16620130c8b790d45bbccbb9767dfc913ac" translate="yes" xml:space="preserve">
          <source>The dictionary of keys to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce84d5ce2c54838155a0772b188cec2ed556954" translate="yes" xml:space="preserve">
          <source>The dictionary of keys to reject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a858014621eb3b19f004d1285137b40998ae1dad" translate="yes" xml:space="preserve">
          <source>The dictionary to traverse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2058e3e556357e6f44439ab9153e50f77b962e" translate="yes" xml:space="preserve">
          <source>The dictionary use to create a VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee53a7a6192d88a79d006b87bb979416c8f8292" translate="yes" xml:space="preserve">
          <source>The diference between &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;hostname&lt;/code&gt; is that &lt;code&gt;host&lt;/code&gt; provides the physical location - either domain name or IP address, while &lt;code&gt;hostname&lt;/code&gt; provides the hostname as configured on the device. They are not necessarily the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbed4522fd06e2523395a6db33d825d25d4b9d8" translate="yes" xml:space="preserve">
          <source>The difference between calling a command or operation is in handling the result. Commands return a zero return code if operation is successful or return non-zero return code and print an error to standard output in plain text, in case of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bb2f9d4836ac92652c21d4f6ccfcee3e82135f" translate="yes" xml:space="preserve">
          <source>The difference between the return with and without the nesting key is shown below. This example takes the key value pairs returned from vault as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3563f07a976e4cd150ce78beb70e3e33103fcc60" translate="yes" xml:space="preserve">
          <source>The digest format of the password. Can be &lt;code&gt;plaintext&lt;/code&gt; or any digest available via &lt;a href=&quot;../../modules/all/salt.modules.hashutil#salt.modules.hashutil.digest&quot;&gt;&lt;code&gt;hashutil.digest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b6f4388fd42b3e4fe589ac9148bfc57207d1a2" translate="yes" xml:space="preserve">
          <source>The digest to use for signing the CRL. This has no effect on versions of pyOpenSSL less than 0.14</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a55be0a3f92f17fb13bbb2de05c694cb91b8aa2" translate="yes" xml:space="preserve">
          <source>The digest to use for signing the CRL. This has no effect on versions of pyOpenSSL less than 0.14.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d1c32d41b4abad6f1f0c17c7cd54aca23b29bb" translate="yes" xml:space="preserve">
          <source>The direct device configuration configures the proxy to connect directly to the device with username and password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3612803b761b1388ab74b2f40c644c8ecbaf2eed" translate="yes" xml:space="preserve">
          <source>The direction of the sort. Can be either &lt;code&gt;asc&lt;/code&gt; or &lt;code&gt;desc&lt;/code&gt;. Default is &lt;code&gt;desc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a624a1210f404434365d381e6c3bbca255ad4cd9" translate="yes" xml:space="preserve">
          <source>The direction of the sort. Either &lt;code&gt;asc&lt;/code&gt; or &lt;code&gt;desc&lt;/code&gt;. Default is &lt;code&gt;asc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48998664e16f41a4a4f3a0134a390dfea0ffd755" translate="yes" xml:space="preserve">
          <source>The directory from which to run the rvm command. Defaults to the user's home directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8ddd92766391ada2b28b6f46736b86906a4eef" translate="yes" xml:space="preserve">
          <source>The directory in which the tar command should be executed. If not specified, will default to the home directory of the user under which the salt minion process is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecf9ac148cb32106da79bad741767a1df407172" translate="yes" xml:space="preserve">
          <source>The directory on the minion to check for backups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b009962f09185315fb100a9df791b0bcc98f483" translate="yes" xml:space="preserve">
          <source>The directory on the minion to place the built package(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da1f5f3bd585edbc7b0bf7e0b7771f638aec933" translate="yes" xml:space="preserve">
          <source>The directory that the key/keys will be saved. Keys are saved to a file named according to the username privided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fb0536c0e436d42f48915fcf0a108750f28068" translate="yes" xml:space="preserve">
          <source>The directory to find packages that will be in the repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bb22d479963c237ffe254db6ea7c26168de57a" translate="yes" xml:space="preserve">
          <source>The directory to find packages that will be in the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8258a8c7d03d74b2ebe534cb9fe146136639a6d1" translate="yes" xml:space="preserve">
          <source>The directory to set the recursion in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066938751914140d8afce25d7648c28c6b3e02d8" translate="yes" xml:space="preserve">
          <source>The directory tree that should be tidied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b4a4f867839c0784a3ab933572ed4dcba8a216" translate="yes" xml:space="preserve">
          <source>The directory where the tablespace will be located, must already exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ba5ea8e21c6263369e7cd4795d1c57ea7b2e56" translate="yes" xml:space="preserve">
          <source>The directory whose packages will be listed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab03a1f45d53f32c2b5413497891bc02a02f25d3" translate="yes" xml:space="preserve">
          <source>The directory whose packages will be listed, or None for global installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70ad2de4239f05402453df62cc53135b29e9f94" translate="yes" xml:space="preserve">
          <source>The directory whose packages will be pruned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547dd39c29b11d347ab9809d96abc2267e5e434b" translate="yes" xml:space="preserve">
          <source>The diretion of traffic to apply the rule to. Either 'in', or 'out'. Only applicable if port is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a29dcea185c1c4cd8932db102b933299aa92670" translate="yes" xml:space="preserve">
          <source>The disk id (canonical name) on which the datastore is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396c6943c5a18d7664267030b77dd528bafb4c94" translate="yes" xml:space="preserve">
          <source>The disk images will be created in an image folder within the directory defined by the &lt;code&gt;virt:images&lt;/code&gt; option. Its default value is &lt;code&gt;/srv/salt-images/&lt;/code&gt; but this can changed with such a configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb3521ffe0e1ab28cf7cc1f017b326941f25543" translate="yes" xml:space="preserve">
          <source>The disk profile to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11152e8bcf4fbc1fb96a25f859f6ed6777df13a0" translate="yes" xml:space="preserve">
          <source>The disk type, either pd-standard or pd-ssd. Optional, defaults to pd-standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974c264d05a53a9a0b721b99f0592aa2649ebf0d" translate="yes" xml:space="preserve">
          <source>The docker call will use direct_call, which will return back if the module was unable to be run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4898e61d309ae09ff9a53692444da1d46a5855" translate="yes" xml:space="preserve">
          <source>The docker command to run in the container at launch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33a4de0a3fb053d42fbb0c6d81ed3942321560e" translate="yes" xml:space="preserve">
          <source>The docker image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26544307f9037c2d351d341e89fedc968398f68" translate="yes" xml:space="preserve">
          <source>The docker_container watcher, called to invoke the watch command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224ff373276b2bbed8a7118ff35e8468b4b89e84" translate="yes" xml:space="preserve">
          <source>The docker_image watcher, called to invoke the watch command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fe7cbc3fac2dd7c9552c8fb2a1f7e998d5e9c2" translate="yes" xml:space="preserve">
          <source>The document of the new policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038885fd058496d7a0455eede320e22dbcdbead5" translate="yes" xml:space="preserve">
          <source>The domain ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a13674adbffb15cedb658492af15e5ba02744bd" translate="yes" xml:space="preserve">
          <source>The domain name associated with the Hosted Zone(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dad998fa629ef7a0fb6b0cbf6c82c138ab61ead" translate="yes" xml:space="preserve">
          <source>The domain name associated with the Hosted Zone. Exclusive with Id. Note this has the potential to match more then one hosted zone (e.g. a public and a private if both exist) which will raise an error unless PrivateZone has also been passed in order split the different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8a9e3f7c0f71ad8eca31224f43528c8decddf4" translate="yes" xml:space="preserve">
          <source>The domain name for which this certificate and key will be generated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e3d8dd50f9bec0d1ed64c5b6ebe2b8d17b6487" translate="yes" xml:space="preserve">
          <source>The domain name for which this certificate will be saved</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fb2943852778584ed382d51e65b316e6b4b13b" translate="yes" xml:space="preserve">
          <source>The domain name for which this ticket will be generated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8db8b8adbf67a28fdfbe5d15808f224f85ff44" translate="yes" xml:space="preserve">
          <source>The domain name of a zone to create the record in. Exclusive with HostedZoneId.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7e1f3d38fb6a54c73f91c61964cf905b45b170" translate="yes" xml:space="preserve">
          <source>The domain name of the zone to delete the record from. Exclusive with HostedZoneId.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7039d1b66468fe8d207680edd423916ee2731e" translate="yes" xml:space="preserve">
          <source>The domain name to be registered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10297e9c27af7479385379dbd0db8979f0ad2481" translate="yes" xml:space="preserve">
          <source>The domain name to be renewed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73f134dddf474b6e6734947c5f7ffc441acfd5e" translate="yes" xml:space="preserve">
          <source>The domain name to use for the container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077f5f2ff848fb408f7ac8a8e0ea64e80535142f" translate="yes" xml:space="preserve">
          <source>The domain name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df68373d0a882ccb91231e0a78f691a56d33663" translate="yes" xml:space="preserve">
          <source>The domain to use valid values are user|system|common|dynamic, the default is user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fdabf6cd6148fbd6723c561da689539df8a2db" translate="yes" xml:space="preserve">
          <source>The drive letter to use for the home directory. If not specified the home directory will be a unc path. Otherwise the home directory will be mapped to the specified drive. Must be a letter followed by a colon. Because of the colon, the value must be surrounded by single quotes. ie: - win_homedrive: 'U:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3949e2b792a78dd2764ecd407d7effbd5b4a069a" translate="yes" xml:space="preserve">
          <source>The driver will prepend the hostname to the fqdn_base and do a DNS lookup to find the IP of the new VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fa64062131db7073ff28ca390d664cdb6795eb" translate="yes" xml:space="preserve">
          <source>The dump value to be passed into the fstab, Default is &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4533acb1b8d8137367dfdd8068ff20c338d05ddd" translate="yes" xml:space="preserve">
          <source>The easiest way to use signals is to import them from this returner directly and then use a decorator to register them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e522b1f4f2378479fb9270f0bab6b2c6cb718b08" translate="yes" xml:space="preserve">
          <source>The element to hard reset on the chassis such as a blade. If not provided, the chassis will be reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e49806feea94ce35e126bce7b871f09b593586" translate="yes" xml:space="preserve">
          <source>The element to power off on the chassis such as a blade. If not provided, the chassis will be powered off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7712f2f2b3b48305c0294cc31b333ced281bb81d" translate="yes" xml:space="preserve">
          <source>The element to power on located on the chassis such as a blade. If not provided, the chassis will be powered on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4d8da9b912bce8de2c6694a9963dcdc0cf27c3" translate="yes" xml:space="preserve">
          <source>The element to reboot on the chassis such as a blade. If not provided, the chassis will be rebooted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba70aa43845a5bac90571277d7886e3e96a635ba" translate="yes" xml:space="preserve">
          <source>The email ID which is on the approver email list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a263c7e3f17af815ca52a8fc93cdb147e39d20" translate="yes" xml:space="preserve">
          <source>The email address for this user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1be3ab977423bf865c7e7c1cbf9e9982998bfed" translate="yes" xml:space="preserve">
          <source>The enable mode password if required by the destination node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf6d400b322fd01143c490b0c238da07336df88" translate="yes" xml:space="preserve">
          <source>The encoded file. Either this option or &lt;code&gt;contents_pillar&lt;/code&gt; must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a557bfcd9e266caca42a21397cb597e0c887edd6" translate="yes" xml:space="preserve">
          <source>The encoder to use on the subsequent string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153c16b747fe62d19c43995bdd1b6e610c54f563" translate="yes" xml:space="preserve">
          <source>The encrypted filename to decrypt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b013e36efdd892b8c071a9bb54560e54146134d" translate="yes" xml:space="preserve">
          <source>The encrypted text to decrypt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9076edb7eb2883275aef482195213685399114" translate="yes" xml:space="preserve">
          <source>The endpoint URL (for V3 API)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c7010fc38350a0ea9fced5026757900c966080" translate="yes" xml:space="preserve">
          <source>The environment key to set. Must be a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd1194c8a0293a0498308240387611d76b6487f" translate="yes" xml:space="preserve">
          <source>The etcd configuration can also be set in the Salt Master config file, but in order to use any etcd configurations defined in the Salt Master config, the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-pillar_opts&quot;&gt;&lt;code&gt;pillar_opts&lt;/code&gt;&lt;/a&gt; must be set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13ebc03c96976b11afb6e08b74de9fdb3b041bd" translate="yes" xml:space="preserve">
          <source>The etcd directory name, for example: &lt;code&gt;/foo/bar/baz&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971cbd2ca6a9b5c8679a8cf2ba04b569bbdd4586" translate="yes" xml:space="preserve">
          <source>The etcd key name to remove, for example &lt;code&gt;/foo/bar/baz&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e12c8d6955da531018c6a894e1671230bafd52" translate="yes" xml:space="preserve">
          <source>The etcd key name, for example: &lt;code&gt;/foo/bar/baz&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0515256b669408fdef9de9409ffa6d62875cadb9" translate="yes" xml:space="preserve">
          <source>The etcd profile to use that has been configured on the Salt Master, this is optional and defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6132a859292a17f83a4a1c258b2e30b394a28919" translate="yes" xml:space="preserve">
          <source>The etcd watcher, called to invoke the watch command. When called, execute a etcd function based on a watch call requisite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c312f2c617eef80988c9d3ac0d5406abb568b4" translate="yes" xml:space="preserve">
          <source>The event bus on the Salt master exposes a large variety of things, notably when executions are started on the master and also when minions ultimately return their results. This URL provides a real-time window into a running Salt infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64243a47fc9984482f1a62fad6ba4b932bdfc0c0" translate="yes" xml:space="preserve">
          <source>The event bus on the Salt master exposes a large variety of things, notably when executions are started on the master and also when minions ultimately return their results. This URL provides a real-time window into a running Salt infrastructure. Uses websocket as the transport mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e6af5dfbd033d1e03d5e781eb1da5ef3b1501b" translate="yes" xml:space="preserve">
          <source>The event data is taken from the request body. The &lt;em&gt;Content-Type&lt;/em&gt; header is respected for the payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae7921905ff7196b156c438a877cb868ce28d57" translate="yes" xml:space="preserve">
          <source>The event examplified above has been fired when the device identified by the Minion id &lt;code&gt;edge01.bjm01&lt;/code&gt; has been synchronized with a NTP server at a stratum level greater than 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64535a5711a177f21bdce51eaae22141da8badec" translate="yes" xml:space="preserve">
          <source>The event pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fd924126f556298ed768d316f6eec23530543f" translate="yes" xml:space="preserve">
          <source>The event stream can be easily consumed via JavaScript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e231a626c09710c094ae1aff9138c0baab05d1c" translate="yes" xml:space="preserve">
          <source>The event stream will undergo server-side formatting if the &lt;code&gt;format_events&lt;/code&gt; URL parameter is included in the request. This can be useful to avoid formatting on the client-side:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174eaebb7961363f87370610c3de8e3f836a3d0f" translate="yes" xml:space="preserve">
          <source>The event tag is prefixed with &lt;code&gt;salt/netapi/hook&lt;/code&gt; and the URL path is appended to the end. For example, a &lt;code&gt;POST&lt;/code&gt; request sent to &lt;code&gt;/hook/mycompany/myapp/mydata&lt;/code&gt; will produce a Salt event with the tag &lt;code&gt;salt/netapi/hook/mycompany/myapp/mydata&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
