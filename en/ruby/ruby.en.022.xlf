<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="423683aed5d532800264e6e17d98dd461b879ce1" translate="yes" xml:space="preserve">
          <source>The constant to be converted to the thor path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31468caab148048c3654e545d4397286c771a752" translate="yes" xml:space="preserve">
          <source>The constants defined under &lt;a href=&quot;socket/constants&quot;&gt;&lt;code&gt;Socket::Constants&lt;/code&gt;&lt;/a&gt; are also defined under &lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt;. For example, &lt;a href=&quot;socket#AF_INET&quot;&gt;&lt;code&gt;Socket::AF_INET&lt;/code&gt;&lt;/a&gt; is usable as well as Socket::Constants::AF_INET. See &lt;a href=&quot;socket/constants&quot;&gt;&lt;code&gt;Socket::Constants&lt;/code&gt;&lt;/a&gt; for the list of constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655f0544323cac07dfc51c00585587866706a15b" translate="yes" xml:space="preserve">
          <source>The constructor accepts a hash as options for parser. Keys of options are pattern names of &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; components and values of options are pattern strings. The constructor generates set of regexps for parsing URIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33336024e69f70e859842f1debc5409002798fbc" translate="yes" xml:space="preserve">
          <source>The constructs described so far match a single character. They can be followed by a repetition metacharacter to specify how many times they need to occur. Such metacharacters are called &lt;em&gt;quantifiers&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2f905f92090badf16a6dface788f03cb96af7a" translate="yes" xml:space="preserve">
          <source>The consumer thread waits for the producer thread to push a line to buf while &lt;code&gt;buf.empty?&lt;/code&gt;. The producer thread (main thread) reads a line from &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; and pushes it into buf then calls &lt;code&gt;empty_cond.signal&lt;/code&gt; to notify the consumer thread of new data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f60b8fa1825ab72a54aa361068bc79e4c86d9f1" translate="yes" xml:space="preserve">
          <source>The content of the &lt;a href=&quot;tempio&quot;&gt;&lt;code&gt;TempIO&lt;/code&gt;&lt;/a&gt; as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cb1bf6d421bede80279393d5b51e049cb5f6a5" translate="yes" xml:space="preserve">
          <source>The content that the user input can be recorded to the history. The history can be accessed by &lt;a href=&quot;readline#HISTORY&quot;&gt;&lt;code&gt;Readline::HISTORY&lt;/code&gt;&lt;/a&gt; constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0004aee6be0bd0bcbfdede6a616a103efc7e830d" translate="yes" xml:space="preserve">
          <source>The contents of the hash are implementation specific and may be changed in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e1444ab100b131d2a312d2d7f0b614e4a22b64" translate="yes" xml:space="preserve">
          <source>The contents of the returned hash are implementation specific. It may be changed in future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3026de835d7093b06c09c984ea7ce98e17e06142" translate="yes" xml:space="preserve">
          <source>The contents of the returned hash is implementation defined. It may be changed in future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b23fefa09cf619f22bad6e2a49e55ab94384890" translate="yes" xml:space="preserve">
          <source>The contents of the returned hash is implementation specific and may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2ba2b03d7819d5c0f59ffd9c1014a1227d9934" translate="yes" xml:space="preserve">
          <source>The contents of the returned value are implementation specific. It may be changed in future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dd6ccfaf243dba315e218dd0b3d5c359317a09" translate="yes" xml:space="preserve">
          <source>The context and application specific information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f50b9baeac23e7316f2dd229af6f7bb3bf20cf" translate="yes" xml:space="preserve">
          <source>The copyright string for ruby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d94c382d76f673fd37b16239c778e3d043a225c" translate="yes" xml:space="preserve">
          <source>The credentials of the foreign process connected to this socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c925ac2b45de93d862f5d628cff4e114835d7c" translate="yes" xml:space="preserve">
          <source>The current access mode for indexing and iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcab209db79c124ff33003724d7b17b091cb090" translate="yes" xml:space="preserve">
          <source>The current data items are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ab7c286bb16f3796d63f7bbc6a07b48e41ecde" translate="yes" xml:space="preserve">
          <source>The current implementation of &lt;code&gt;sort_by&lt;/code&gt; generates an array of tuples containing the original collection element and the mapped value. This makes &lt;code&gt;sort_by&lt;/code&gt; fairly expensive when the keysets are simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a5f43bae37e33cd0e887446ee066ff49180eab" translate="yes" xml:space="preserve">
          <source>The current input line number of the last file that was read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d41dd5e5fce3c87a0c35dfb85859404aa66194a" translate="yes" xml:space="preserve">
          <source>The current session cache mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38becda9249c478b69ba02c865ec8298b507c339" translate="yes" xml:space="preserve">
          <source>The current standard error output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01a68c8dc2acae23ff40b51f9df558ad7d4586c" translate="yes" xml:space="preserve">
          <source>The current standard input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e57720c6f9dc42f807a8ebf100e10be8463f73b" translate="yes" xml:space="preserve">
          <source>The current standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5affdbb0aacfd5b2d12eecf20c61e259e9f9a7f9" translate="yes" xml:space="preserve">
          <source>The current status of &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; profile mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94a09dacac5664740e95b6262ab3f0d67b51f04" translate="yes" xml:space="preserve">
          <source>The current status of the trace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782122dd65323c97b4dca21798b098f2290af05c" translate="yes" xml:space="preserve">
          <source>The current version of &lt;a href=&quot;acl&quot;&gt;&lt;code&gt;ACL&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928ddf28d69312bf920de01245cc31aa9efd517f" translate="yes" xml:space="preserve">
          <source>The dangers posed by instance_eval and friends are such that a DRbServer should generally be run with $SAFE set to at least level 1. This will disable eval() and related calls on strings passed across the wire. The sample usage code given above follows this practice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72389f8ddfb71c745bdfa54696a803cd956fcb4" translate="yes" xml:space="preserve">
          <source>The data source must be open for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7972e6946259739d641e2a59c8f7da6070bb3808" translate="yes" xml:space="preserve">
          <source>The data source must be open for writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00eff79d66dd91ad033f6cef5863ffe3ef5662a" translate="yes" xml:space="preserve">
          <source>The data will be accessed in random order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b779118b9dced526ee76c97b5e4d417e089b28" translate="yes" xml:space="preserve">
          <source>The data will be accessed in the near future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf4bdd21bfa1f6e0fff961f57d0d2796e1c642d" translate="yes" xml:space="preserve">
          <source>The data will be accessed sequentially with lower offsets read before higher ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269b90f695c7e80c8d9dc1074e136c6b6df8469d" translate="yes" xml:space="preserve">
          <source>The data will not be accessed in the near future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e089bc567104d59e89b8c39453ef0f679ec603" translate="yes" xml:space="preserve">
          <source>The data will only be accessed once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd81e77b640a876c23fe5782eeeeb63f008aa83b" translate="yes" xml:space="preserve">
          <source>The date this ruby was released</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b5f16f2e4f1c33d031dff9b23e4b42638a1302" translate="yes" xml:space="preserve">
          <source>The day count denotes the absolute position of a temporal dimension. The offset is relative adjustment, which determines decoded local time with the day count. The day of calendar reform denotes the start day of the new style. The old style of the West is the Julian calendar which was adopted by Caesar. The new style is the Gregorian calendar, which is the current civil calendar of many countries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f5ab98a6fdba971c5412806960d2149e4bc3ed" translate="yes" xml:space="preserve">
          <source>The day count is virtually the astronomical Julian day number. The offset in this class is usually zero, and cannot be specified directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43dd76a4855bb93cd3d6bd83c8f2b53de2af1ed8" translate="yes" xml:space="preserve">
          <source>The day of year should be a negative or a positive number (as a relative day from the end of year when negative). It should not be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7f46162e3e6c49c9e2c08fbee85f80b665353c" translate="yes" xml:space="preserve">
          <source>The debug flag, which is set by the -d switch. Enabling debug output prints each exception raised to $stderr (but not its backtrace). Setting this to a true value enables debug output as if -d were given on the command line. Setting this to a false value disables debug output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539622d22b3611e1a0d2bdec661bbb3d138ab211" translate="yes" xml:space="preserve">
          <source>The default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb0f7163c227484297ca05a492694d647313067" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;drbserver#attribute-i-safe_level&quot;&gt;&lt;code&gt;safe_level&lt;/code&gt;&lt;/a&gt; is 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5761f58da54ee17de323995d9f36b078db8fb39" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; port number, 25.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09669dd142ea0e9915fdcc05c245cf6b23f3c4c1" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;threadgroup&quot;&gt;&lt;code&gt;ThreadGroup&lt;/code&gt;&lt;/a&gt; created when Ruby starts; all Threads belong to it by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0980dd3cfd933cc5a08e58465acb392284e573a2" translate="yes" xml:space="preserve">
          <source>The default Pseudorandom number generator. Used by class methods of &lt;a href=&quot;random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c08cf0632a11798a7d145b559a4d0c1fa32ef7c" translate="yes" xml:space="preserve">
          <source>The default SMTPS port number, 465.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca513b9987dfdd8c14ca75dfe6eed1ca3fbbcc00" translate="yes" xml:space="preserve">
          <source>The default caption string (heading above the output times).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d770a735d8f1f3e896beb97f2ac802c30064043" translate="yes" xml:space="preserve">
          <source>The default completion is used if &lt;code&gt;proc&lt;/code&gt; is nil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d862b341d94c5576bd644924aad1317995a3eb11" translate="yes" xml:space="preserve">
          <source>The default drb protocol which communicates over a TCP socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3447d80523851d0645598d92d0c4c06f2ff840" translate="yes" xml:space="preserve">
          <source>The default encoding of strings from the filesystem of the environment. This is used for strings of file names or paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbf523403695b9893bb9976050794c42013c37d" translate="yes" xml:space="preserve">
          <source>The default encoding of the environment. Usually derived from locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9ba6e2bc48ef740df88fa587d74fe51f95d425" translate="yes" xml:space="preserve">
          <source>The default external encoding is initialized by the locale or -E option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159fe441fde4e9c8603e39dd09ee266412f4283d" translate="yes" xml:space="preserve">
          <source>The default external encoding is used by default for strings created from the following locations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fda49c3e31c6cf892c2bf199ccb2e0d10e6f2c5" translate="yes" xml:space="preserve">
          <source>The default external encoding may also be set through &lt;a href=&quot;encoding#method-c-default_external-3D&quot;&gt;&lt;code&gt;Encoding.default_external=&lt;/code&gt;&lt;/a&gt;, but you should not do this as strings created before and after the change will have inconsistent encodings. Instead use &lt;code&gt;ruby -E&lt;/code&gt; to invoke ruby with the correct external encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d7f302358a0a889b3db94b1afc5d46db6daebc" translate="yes" xml:space="preserve">
          <source>The default format looks like 0.xxxxEnn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6997bc89a310f96b940a71a42062bec2b6d9bac" translate="yes" xml:space="preserve">
          <source>The default format string used to display times. See also &lt;a href=&quot;benchmark/tms#method-i-format&quot;&gt;&lt;code&gt;Benchmark::Tms#format&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2d2e379a8063fe922f94873ed63a967facd120" translate="yes" xml:space="preserve">
          <source>The default internal encoding can be set with the interpreter option &lt;code&gt;-E&lt;/code&gt;. &lt;a href=&quot;encoding#method-c-default_internal&quot;&gt;&lt;code&gt;Encoding.default_internal&lt;/code&gt;&lt;/a&gt; returns the current internal encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8ce6ba70df8d124f73da432bfa8d4b0d1d5946" translate="yes" xml:space="preserve">
          <source>The default internal encoding may also be set through &lt;a href=&quot;encoding#method-c-default_internal-3D&quot;&gt;&lt;code&gt;Encoding.default_internal=&lt;/code&gt;&lt;/a&gt;, but you should not do this as strings created before and after the change will have inconsistent encodings. Instead use &lt;code&gt;ruby -E&lt;/code&gt; to invoke ruby with the correct internal encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47f2dc47da716e10b8464cc904d52095649a5a3" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d7573bddeac3e76763a7f9f600a10307beab42" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;true&lt;/code&gt; since Ruby 2.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da39c3f53f761deb7f9695a2825f16e65471f0fd" translate="yes" xml:space="preserve">
          <source>The default is dependent on OS, and provide a handle for all libraries already loaded. For example, in most cases you can use this to access &lt;code&gt;libc&lt;/code&gt; functions, or ruby functions like &lt;code&gt;rb_str_new&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00f2b9b50b892a674009d0350f873998b1cbdb8" translate="yes" xml:space="preserve">
          <source>The default mail submission port number, 587.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4694ff64e98cde2eeba1e3245d08dc047b8a71" translate="yes" xml:space="preserve">
          <source>The default memory level for allocating zlib deflate compression state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0cb5b6fd9ac2556c48ab913b38c8f93d25ac9f5" translate="yes" xml:space="preserve">
          <source>The default mode for the new file object is &amp;ldquo;r'', but &lt;em&gt;mode&lt;/em&gt; may be set to any of the modes listed in the description for class &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. The last argument &lt;em&gt;opt&lt;/em&gt; qualifies &lt;em&gt;mode&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4939a25921b62d0890d06f4058b9d82a759dee65" translate="yes" xml:space="preserve">
          <source>The default mode is VERIFY_NONE, which does not perform any verification at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e879a0fb363cddc3fde4d015a9c4b82a58e0574a" translate="yes" xml:space="preserve">
          <source>The default object type for name entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c20e2b9fbf07e283148016b453c11ba22c666a" translate="yes" xml:space="preserve">
          <source>The default object type template for name entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fa7e0ecf634599072b5c72c1dfbfc343af4190" translate="yes" xml:space="preserve">
          <source>The default options for the generator can be changed via the &lt;a href=&quot;json#attribute-c-dump_default_options&quot;&gt;&lt;code&gt;dump_default_options&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174b75813a1489b371f98f397fa9bbf2ad5736e1" translate="yes" xml:space="preserve">
          <source>The default output for print, printf. $stdout by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e5e94cc6d4f6c7c2f06251da49d68a08fda6e4" translate="yes" xml:space="preserve">
          <source>The default port Ring discovery will use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb55234bf6e3999799b8896be9971f77a1fe435b" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;https&quot;&gt;&lt;code&gt;HTTPS&lt;/code&gt;&lt;/a&gt; URIs is 443, and the scheme is 'https:' rather than 'http:'. Other than that, &lt;a href=&quot;https&quot;&gt;&lt;code&gt;HTTPS&lt;/code&gt;&lt;/a&gt; URIs are identical to &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; URIs; see &lt;a href=&quot;http&quot;&gt;&lt;code&gt;URI::HTTP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d14cb601facbcd94bb4fa5d3d539a70299be780" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;imap&quot;&gt;&lt;code&gt;IMAP&lt;/code&gt;&lt;/a&gt; connections, port 143</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cf194a73afd116746bc19bf9289654878728f4" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;ldaps&quot;&gt;&lt;code&gt;LDAPS&lt;/code&gt;&lt;/a&gt; URIs is 636, and the scheme is 'ldaps:' rather than 'ldap:'. Other than that, &lt;a href=&quot;ldaps&quot;&gt;&lt;code&gt;LDAPS&lt;/code&gt;&lt;/a&gt; URIs are identical to &lt;a href=&quot;ldap&quot;&gt;&lt;code&gt;LDAP&lt;/code&gt;&lt;/a&gt; URIs; see &lt;a href=&quot;ldap&quot;&gt;&lt;code&gt;URI::LDAP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b8754114c39d33461eac858339c3473b7e9604" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; connections, port 110</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d22a8d826b1bda2e8aafd19d883675f652a02d" translate="yes" xml:space="preserve">
          <source>The default port for IMAPS connections, port 993</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc41ae4d936d862dbedb7910993e9f249fa5403" translate="yes" xml:space="preserve">
          <source>The default port for POP3S connections, port 995</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be429ff982fe09ed1929916823bd0e63866019e3" translate="yes" xml:space="preserve">
          <source>The default port to use for &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; requests; defaults to 80.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d05a18ad99054661651fa5b2e5bbb4bc96d851" translate="yes" xml:space="preserve">
          <source>The default port to use for HTTPS requests; defaults to 443.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd94b4e52fe902dbb40334d1bbb1ac179ca2faec" translate="yes" xml:space="preserve">
          <source>The default script encoding is &lt;code&gt;Encoding::UTF-8&lt;/code&gt; after v2.0, but it can be changed by a magic comment on the first line of the source code file (or second line, if there is a shebang line on the first). The comment must contain the word &lt;code&gt;coding&lt;/code&gt; or &lt;code&gt;encoding&lt;/code&gt;, followed by a colon, space and the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; name or alias:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203387fec4343d59de1ec48a43aaf36b39e4e38a" translate="yes" xml:space="preserve">
          <source>The default separator for &lt;a href=&quot;string#method-i-split&quot;&gt;&lt;code&gt;String#split&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb51894f2d6455a62655853edc70f82d30fce06a" translate="yes" xml:space="preserve">
          <source>The default system configuration file for openssl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71d914cb835bab710406cbcbae2050913a6d544" translate="yes" xml:space="preserve">
          <source>The default value does not need to appear first, but arguments with defaults must be grouped together. This is ok:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7ef619d0f62212124ec6582eafe42df8e11ca5" translate="yes" xml:space="preserve">
          <source>The default value when creating a &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; is the value of the global flag &lt;a href=&quot;thread#method-c-report_on_exception&quot;&gt;&lt;code&gt;Thread.report_on_exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94cb7df8878ae2dc079e913e8a0299ac27186604" translate="yes" xml:space="preserve">
          <source>The default values of these options can be modified on a class-wide basis by the class methods default_argc_limit, default_load_limit, default_acl, default_id_conv, and &lt;a href=&quot;drbserver#method-i-verbose-3D&quot;&gt;&lt;code&gt;verbose=&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dcd04b3974cb711b26ba7f335dec659b199b0a" translate="yes" xml:space="preserve">
          <source>The default values of these options depend on &lt;code&gt;$stderr&lt;/code&gt; and its &lt;code&gt;tty?&lt;/code&gt; at the timing of a call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25acd30f86704b6ed2df54b2be9eb59eba1d509" translate="yes" xml:space="preserve">
          <source>The defaults shall work for most situations but nevertheless they can be (preferably should be) overridden as per the plugins' needs safely (as long as they behave as expected). On overriding `initialize` you should call super first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a49dae902ca9731198195d4be4207c3fccf00e" translate="yes" xml:space="preserve">
          <source>The description for the error code set by the last call of &lt;a href=&quot;store#method-i-verify&quot;&gt;&lt;code&gt;verify&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948aa8dae813c34639ae84bd76e6b2e0f146945a" translate="yes" xml:space="preserve">
          <source>The description for this &lt;a href=&quot;group&quot;&gt;&lt;code&gt;Bundler::Thor::Group&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ef94e5b0fd9363ccb3ff6869d0f192941f1e43" translate="yes" xml:space="preserve">
          <source>The description for this &lt;a href=&quot;group&quot;&gt;&lt;code&gt;Bundler::Thor::Group&lt;/code&gt;&lt;/a&gt;. If none is provided, but a source root exists, tries to find the USAGE one folder above it, otherwise searches in the superclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675040ba46b365854f4478533de0223e499f812d" translate="yes" xml:space="preserve">
          <source>The desired length of the derived key in octets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0873e2a52bb010acf0903c786a0c81f9f89fc860" translate="yes" xml:space="preserve">
          <source>The difference between 1 and the smallest double-precision floating point number greater than 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413098964a9516ae46c91c99f5588936b686b8a0" translate="yes" xml:space="preserve">
          <source>The difference between the two can be seen in setting the User-Agent. Using &lt;code&gt;http.headers['User-Agent'] = 'MyUserAgent'&lt;/code&gt; will send &amp;ldquo;Ruby, MyUserAgent&amp;rdquo; while &lt;code&gt;http.override_headers['User-Agent'] = 'MyUserAgent'&lt;/code&gt; will send &amp;ldquo;MyUserAgent&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15233205a053a19e99f129e9aae4d139b06832ff" translate="yes" xml:space="preserve">
          <source>The difference is behavior with waiting enqueuing threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d24e68446905d6949bf65d49c5f8f9c0a2e1ead" translate="yes" xml:space="preserve">
          <source>The directive consists of a percent (%) character, zero or more flags, optional minimum field width, optional modifier and a conversion specifier as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060852fd22231f358bd92213dcbea625af8117d9" translate="yes" xml:space="preserve">
          <source>The directives begin with a percent (%) character. Any text not listed as a directive will be passed through to the output string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a267dc0b8348b31e30693cbc4f0f9040aaf1ac94" translate="yes" xml:space="preserve">
          <source>The directory is created under &lt;a href=&quot;dir#method-c-tmpdir&quot;&gt;&lt;code&gt;Dir.tmpdir&lt;/code&gt;&lt;/a&gt; or the optional second argument &lt;em&gt;tmpdir&lt;/em&gt; if non-nil value is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69aeb44b96a182667bf28902b34d8c697e73f928" translate="yes" xml:space="preserve">
          <source>The directory is created with 0700 permission. Application should not change the permission to make the temporary directory accessible from other users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919c59742988074b02bccafc24c1c3ab9d57bd34" translate="yes" xml:space="preserve">
          <source>The directory root for all plugin related data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bece92e462e673997e5de7aea3061108ec3fdb" translate="yes" xml:space="preserve">
          <source>The directory used in these examples contains the two regular files (&lt;code&gt;config.h&lt;/code&gt; and &lt;code&gt;main.rb&lt;/code&gt;), the parent directory (&lt;code&gt;..&lt;/code&gt;), and the directory itself (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c5409dd2bdfcc125fc2fa628fce6e6a8a69587" translate="yes" xml:space="preserve">
          <source>The domain name doesn't have a trailing dot even if the name object is absolute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce181e8a19758cb5582f2d40e270c9881dbf3d63" translate="yes" xml:space="preserve">
          <source>The domain name of the target host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3faa55d3b57c7790b3ed19ca4f253e83b7521847" translate="yes" xml:space="preserve">
          <source>The easiest way to create a useful certificate store is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311e8c8e7db4db38079c87b272616b398294bec2" translate="yes" xml:space="preserve">
          <source>The easiest way to signal that we want an otherwise marshallable object to be passed or returned as a &lt;a href=&quot;drb/drbobject&quot;&gt;&lt;code&gt;DRbObject&lt;/code&gt;&lt;/a&gt; reference, rather than marshalled and sent as a copy, is to include the &lt;a href=&quot;drb/drbundumped&quot;&gt;&lt;code&gt;DRb::DRbUndumped&lt;/code&gt;&lt;/a&gt; mixin module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4febaa8b9e14091bf3aa2ee68d69ececaca3be0c" translate="yes" xml:space="preserve">
          <source>The elements are chosen by using random and unique indices into the array in order to ensure that an element doesn't repeat itself unless the array already contained duplicate elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e92d727dbd107dfec10afd9ceda9fe0c428f49" translate="yes" xml:space="preserve">
          <source>The empty option &lt;code&gt;--&lt;/code&gt; (two minus symbols) is used to end option processing. This can be particularly important if options have optional arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff851bc364666365e2bf3039ff10b77b84efd8b" translate="yes" xml:space="preserve">
          <source>The encoded &lt;code&gt;:col_sep&lt;/code&gt; used in parsing and writing. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4eda85a707b2f432b222f3950f3208d1c06d35" translate="yes" xml:space="preserve">
          <source>The encoded &lt;code&gt;:quote_char&lt;/code&gt; used in parsing and writing. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fa79fc9521441c8f06be062f256bc56753175e" translate="yes" xml:space="preserve">
          <source>The encoded &lt;code&gt;:row_sep&lt;/code&gt; used in parsing and writing. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4193d4bd081b5e77b4c63a469741fb8d3b02609" translate="yes" xml:space="preserve">
          <source>The encoding to eval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c638e6fb0376cf0b3c41892846e0149a3d4b9f7" translate="yes" xml:space="preserve">
          <source>The encoding used by all converters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5f01ac3134989ab7290b5b515fdbc136550026" translate="yes" xml:space="preserve">
          <source>The encodings are downcased for canonicalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63201a6d0c4b5345fafde15fde3b2f1686aab598" translate="yes" xml:space="preserve">
          <source>The end delimiter for a regexp can be followed by one or more single-letter options which control how the pattern can match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18199783e04a1be7a4385448d9f76421a69ac9c4" translate="yes" xml:space="preserve">
          <source>The end of a syntax block. Used by classes, modules, methods, exception handling and control expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34910acf856b0ec42c4acc8bcbf65c9f18906a8" translate="yes" xml:space="preserve">
          <source>The engine or interpreter this ruby uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576abda2103c53de4762b29e8b5c15ea5ebcdd4b" translate="yes" xml:space="preserve">
          <source>The environment variables such as http_proxy, https_proxy and ftp_proxy are in effect by default. Here we disable proxy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd82be4ca9f8b79816e0388d0251953fc3e39302" translate="yes" xml:space="preserve">
          <source>The equality of nodes are defined by eql? and hash since &lt;a href=&quot;tsort&quot;&gt;&lt;code&gt;TSort&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b68075a38c867dae6e34768849fbf0e3c27b23b" translate="yes" xml:space="preserve">
          <source>The equivalent of &lt;code&gt;included&lt;/code&gt;, but for extended modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0028ef919a427d5da87980ca1b36ff3f7001fa0c" translate="yes" xml:space="preserve">
          <source>The equivalent of &lt;code&gt;included&lt;/code&gt;, but for prepended modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c63c34a887660f89b873557acf44eaa13fb5220" translate="yes" xml:space="preserve">
          <source>The error code set by the last call of &lt;a href=&quot;store#method-i-verify&quot;&gt;&lt;code&gt;verify&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fbb8c65931f33347836ab937a96d97d330a124" translate="yes" xml:space="preserve">
          <source>The error message for the missing dependency, including the specifications that had this dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d382340e848c8c7c08379fceaa140f390e19bb" translate="yes" xml:space="preserve">
          <source>The error thrown when the parser encounters illegal &lt;a href=&quot;../csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59807b6526fccfa7161143614f44f58bcf242e29" translate="yes" xml:space="preserve">
          <source>The error type thrown by all &lt;a href=&quot;../pstore&quot;&gt;&lt;code&gt;PStore&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042ad278eb21252e3f43b97395f10ec5feabd0f3" translate="yes" xml:space="preserve">
          <source>The errors available on the current platform are subclasses of &lt;a href=&quot;systemcallerror&quot;&gt;&lt;code&gt;SystemCallError&lt;/code&gt;&lt;/a&gt; and are defined in the &lt;a href=&quot;errno&quot;&gt;&lt;code&gt;Errno&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54472914e122220862dbfcd74566e682fd30ea9" translate="yes" xml:space="preserve">
          <source>The exact library used depends on how Ruby was compiled. It could be any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911d398dc4bad3dfa35c914be5c4982e19fa1b50" translate="yes" xml:space="preserve">
          <source>The example above is very verbose. You can shorten the code by using some utility methods. First, the block form of &lt;a href=&quot;pop3#method-c-start&quot;&gt;&lt;code&gt;Net::POP3.start&lt;/code&gt;&lt;/a&gt; can be used instead of &lt;a href=&quot;pop3#method-c-new&quot;&gt;&lt;code&gt;POP3.new&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pop3#method-i-start&quot;&gt;&lt;code&gt;POP3#start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pop3#method-i-finish&quot;&gt;&lt;code&gt;POP3#finish&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35224fc1b51799570d027e3e200d109df75791ea" translate="yes" xml:space="preserve">
          <source>The exception class which will be raised when pushing into a closed &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;queue#method-i-close&quot;&gt;&lt;code&gt;Queue#close&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sizedqueue#method-i-close&quot;&gt;&lt;code&gt;SizedQueue#close&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72199b578ff0c66347a31e54b9f999651d4a9dfa" translate="yes" xml:space="preserve">
          <source>The exception information message set by 'raise'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d29fe7583517e1cd85087672f0d45b39fbd161" translate="yes" xml:space="preserve">
          <source>The exception is matched to the rescue section starting at the top, and matches only once. If an &lt;a href=&quot;../argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised in the begin section, it will not be handled in the &lt;a href=&quot;../standarderror&quot;&gt;&lt;code&gt;StandardError&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb98a30a2d7e15fe2fb43b0e14c05e9dd5c4f25c" translate="yes" xml:space="preserve">
          <source>The exception thrown to terminate the given block cannot be rescued inside the block unless &lt;code&gt;klass&lt;/code&gt; is given explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955b0a78fc6dd54cd2b79ec12c40985c83f45c3b" translate="yes" xml:space="preserve">
          <source>The exclusive access mode (&amp;ldquo;x&amp;rdquo;) can be used together with &amp;ldquo;w&amp;rdquo; to ensure the file is created. &lt;code&gt;Errno::EEXIST&lt;/code&gt; is raised when it already exists. It may not be supported with all kinds of streams (e.g. pipes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa57c1b626146c8281affd96a299b4cadbab1d3c" translate="yes" xml:space="preserve">
          <source>The extension may be created from &lt;em&gt;der&lt;/em&gt; data or from an extension &lt;em&gt;oid&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;. The &lt;em&gt;oid&lt;/em&gt; may be either an OID or an extension name. If &lt;em&gt;critical&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt; the extension is marked critical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df94a17d0216a7c6ddb5f2518f1578633aae5a5f" translate="yes" xml:space="preserve">
          <source>The facility argument is used to specify what type of program is logging the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f92e58280d7b560aa835809a01e1c123f32d3e" translate="yes" xml:space="preserve">
          <source>The false itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f849b505c52a4c30ff977ca14f13b7e6283ef6" translate="yes" xml:space="preserve">
          <source>The fiber which receives the transfer call is treats it much like a resume call. Arguments passed to transfer are treated like those passed to resume.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bee5d440fe98063654d400b6134543e61b6bc0d" translate="yes" xml:space="preserve">
          <source>The field type characters are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0cabb0dec3924f84ac20c0ab88719a5fa4fc4b" translate="yes" xml:space="preserve">
          <source>The field width is an optional integer, followed optionally by a period and a precision. The width specifies the minimum number of characters that will be written to the result for this field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf24efdc523d12ab59303a13b046afcf135824b" translate="yes" xml:space="preserve">
          <source>The file &lt;a href=&quot;cgi/session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt; provides session management functionality; see that class for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0a6e7a170738386439792ce47ebe5dbf0fc73d" translate="yes" xml:space="preserve">
          <source>The file can contain several CA certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a541343df3021bee76251f08876e60c134a8a41" translate="yes" xml:space="preserve">
          <source>The file descriptor of the current file is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea45bab6fbadc9b33ac8274bfb89c630f120be45" translate="yes" xml:space="preserve">
          <source>The file descriptor of the current file refers to a FIFO or pipe. (Linux raises &lt;code&gt;Errno::EINVAL&lt;/code&gt; in this case).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b222f402a17e16ae0f187d040de19b4a4448ed14" translate="yes" xml:space="preserve">
          <source>The file name of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a8c67411d2deec52cc2870c835955cd0b1af51" translate="yes" xml:space="preserve">
          <source>The file object of the script, pointing just after __END__.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c264f1173ab5a719baa76a54aa4ce72af93a876" translate="yes" xml:space="preserve">
          <source>The first byte has the following special values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed602da95001f4afe8ee72a23bcfb244c0a1bb76" translate="yes" xml:space="preserve">
          <source>The first element is a multicast address and the second is an inbound interface address. The third is an inbound interface index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fce24f0bc3c112f0c870498f3780dcd73f6a101" translate="yes" xml:space="preserve">
          <source>The first form calculates &lt;code&gt;bn1 * point + bn2 * G&lt;/code&gt;, where &lt;code&gt;G&lt;/code&gt; is the generator of the group of &lt;em&gt;point&lt;/em&gt;. &lt;em&gt;bn2&lt;/em&gt; may be omitted, and in that case, the result is just &lt;code&gt;bn1 * point&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0bdaa0adad0cfc4a502cad439ee9f784f0bb92" translate="yes" xml:space="preserve">
          <source>The first form is equivalent to &lt;code&gt;attr_reader&lt;/code&gt;. The second form is equivalent to &lt;code&gt;attr_accessor(name)&lt;/code&gt; but deprecated. The last form is equivalent to &lt;code&gt;attr_reader(name)&lt;/code&gt; but deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287b710cb619f5747a68f3fd3567c2f6f4b3e6de" translate="yes" xml:space="preserve">
          <source>The first form returns a copy of &lt;code&gt;str&lt;/code&gt; transcoded to encoding &lt;code&gt;encoding&lt;/code&gt;. The second form returns a copy of &lt;code&gt;str&lt;/code&gt; transcoded from src_encoding to dst_encoding. The last form returns a copy of &lt;code&gt;str&lt;/code&gt; transcoded to &lt;code&gt;Encoding.default_internal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f03b444eafef2dd35ae106761f74d8ee243792" translate="yes" xml:space="preserve">
          <source>The first form returns the &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; object generated by the last successful pattern match. Equivalent to reading the special global variable &lt;code&gt;$~&lt;/code&gt; (see Special global variables in &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a151eaddbec51935fe4272fd6afa695860b7276" translate="yes" xml:space="preserve">
          <source>The first form transcodes the contents of &lt;em&gt;str&lt;/em&gt; from str.encoding to &lt;code&gt;encoding&lt;/code&gt;. The second form transcodes the contents of &lt;em&gt;str&lt;/em&gt; from src_encoding to dst_encoding. The options &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; gives details for conversion. See &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;String#encode&lt;/code&gt;&lt;/a&gt; for details. Returns the string even if no changes were made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c091ee5798053ac7f58ee7e261fa11ffe9af5d" translate="yes" xml:space="preserve">
          <source>The first group of parentheses captures 'n' and the second 'ti'. The second group is referred to later with the backreference &lt;code&gt;\2&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc157ce509f69520a31a4627088623f2941641d" translate="yes" xml:space="preserve">
          <source>The first group of parentheses is now made non-capturing with '?:', so it still matches 'n', but doesn't create the backreference. Thus, the backreference &lt;code&gt;\1&lt;/code&gt; now refers to 'ti'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5e9d8b4a834f4588da7909a19847d7fb7e686e" translate="yes" xml:space="preserve">
          <source>The first line of the human readable reply text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d244406bab298362ac496f5ae5d6755bcd7521" translate="yes" xml:space="preserve">
          <source>The first option name is considered to be the preferred (canonical) name. Other than that, the elements of each sub-array can be in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a118fda9eda8319dac4c4b334cf4231a2a5f79" translate="yes" xml:space="preserve">
          <source>The first three forms set the selected elements of &lt;code&gt;self&lt;/code&gt; (which may be the entire array) to &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072bc6a355bfe1a4645b537e5cf7b840882d2476" translate="yes" xml:space="preserve">
          <source>The first time it is called it opens the file and returns the first entry; each successive call returns the next entry, or &lt;code&gt;nil&lt;/code&gt; if the end of the file has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d286e05bafe286b8b26cee6a57b01374eaf87e" translate="yes" xml:space="preserve">
          <source>The first two bytes of the stream contain the major and minor version, each as a single byte encoding a digit. The version implemented in Ruby is 4.8 (stored as &amp;ldquo;x04x08&amp;rdquo;) and is supported by ruby 1.8.0 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbbd0a0ef5e5569e7f851d3899fe0e1d77e3389" translate="yes" xml:space="preserve">
          <source>The first two forms are used to create a new &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; subclass &lt;code&gt;class_name&lt;/code&gt; that can contain a value for each &lt;code&gt;member_name&lt;/code&gt;. This subclass can be used to create instances of the structure like any other &lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d7f18a849c7920874ce3f2ce898509e19beded" translate="yes" xml:space="preserve">
          <source>The first value is the current number of significant digits in the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;. The second value is the maximum number of significant digits for the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89696d6d8f023ca086652d5e54d9269bb96558c" translate="yes" xml:space="preserve">
          <source>The first value represents the sign of the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, and is -1 or 1, or 0 if the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; is Not a Number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f207d25e3140e4cb366ab93f284b12fce5504d26" translate="yes" xml:space="preserve">
          <source>The first way is by using the class method &lt;a href=&quot;thread#method-c-stop&quot;&gt;&lt;code&gt;::stop&lt;/code&gt;&lt;/a&gt;, to put the current running thread to sleep and schedule the execution of another thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491def4ba451f6481ff4dd5528cfc5dfaf0e7216" translate="yes" xml:space="preserve">
          <source>The fixnum type is used to represent both ruby Fixnum objects and the sizes of marshaled arrays, hashes, instance variables and other types. In the following sections &amp;ldquo;long&amp;rdquo; will mean the format described below, which supports full 32 bit precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27afd3be9806910cf4dd160394eb17bffcf0bf6d" translate="yes" xml:space="preserve">
          <source>The flag is used for initial value of &lt;a href=&quot;basicsocket#method-c-do_not_reverse_lookup&quot;&gt;&lt;code&gt;do_not_reverse_lookup&lt;/code&gt;&lt;/a&gt; for each socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db32fed8f46fab1dcc4e60354783b9323ee2085d" translate="yes" xml:space="preserve">
          <source>The flag value can be either of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944607c5718cd118bb1cd25f452f563fd505d548" translate="yes" xml:space="preserve">
          <source>The flags modifies the behavior of the formats. The flag characters are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19230239a88c8a4cc8551efa3fc2a4495f6ff62" translate="yes" xml:space="preserve">
          <source>The flip-flop is a rarely seen conditional expression. It's primary use is for processing text from ruby one-line programs used with &lt;code&gt;ruby -n&lt;/code&gt; or &lt;code&gt;ruby -p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf9bb78967de7f682cdfe83269eab421c646802" translate="yes" xml:space="preserve">
          <source>The flip-flop must be used inside a conditional such as &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;unless&lt;/code&gt;, &lt;code&gt;until&lt;/code&gt; etc. including the modifier forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12aadaf0a808408707cf62e33e729b40f01b535" translate="yes" xml:space="preserve">
          <source>The following are &lt;em&gt;metacharacters&lt;/em&gt;&lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;. They have a specific meaning when appearing in a pattern. To match them literally they must be backslash-escaped. To match a backslash literally, backslash-escape it: &lt;code&gt;\\&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75f210490d236ca69d4039cf3c9fc3437e8c002" translate="yes" xml:space="preserve">
          <source>The following are examples of valid Ruby methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1158125c14e5678fbd8dbdd19e4c083611c5a54b" translate="yes" xml:space="preserve">
          <source>The following are the methods most likely to be useful to users:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd4fee7f6b4e4f173c322317ed6e77f17b18e58" translate="yes" xml:space="preserve">
          <source>The following conversions are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5a045b724813c2b05245c7edb3728a2ca0766d" translate="yes" xml:space="preserve">
          <source>The following example code can be used as the basis of an &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; user-agent which can perform a variety of request types using persistent connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498d48967db49488df7cf0e00790ce91c80ebabd" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to mix the &lt;a href=&quot;tsort&quot;&gt;&lt;code&gt;TSort&lt;/code&gt;&lt;/a&gt; module into an existing class (in this case, &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;). Here, we're treating each key in the hash as a node in the graph, and so we simply alias the required &lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt;&lt;code&gt;tsort_each_node&lt;/code&gt;&lt;/a&gt; method to Hash's each_key method. For each key in the hash, the associated value is an array of the node's child nodes. This choice in turn leads to our implementation of the required &lt;a href=&quot;tsort#method-i-tsort_each_child&quot;&gt;&lt;code&gt;tsort_each_child&lt;/code&gt;&lt;/a&gt; method, which fetches the array of child nodes and then iterates over that array using the user-supplied block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af84116b697fd16d052110e9b0774c0829c86f17" translate="yes" xml:space="preserve">
          <source>The following example demonstrates this nicely. A &lt;code&gt;Ticker&lt;/code&gt;, when run, continually receives the stock &lt;code&gt;Price&lt;/code&gt; for its &lt;code&gt;@symbol&lt;/code&gt;. A &lt;code&gt;Warner&lt;/code&gt; is a general observer of the price, and two warners are demonstrated, a &lt;code&gt;WarnLow&lt;/code&gt; and a &lt;code&gt;WarnHigh&lt;/code&gt;, which print a warning if the price is below or above their set limits, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cb18b7ae651bfbce8f1182ff741a5928ad13a3" translate="yes" xml:space="preserve">
          <source>The following example illustrates the &lt;code&gt;limit&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0397ba42b9ba420d4c09beb219f5db51b252fb18" translate="yes" xml:space="preserve">
          <source>The following example is a complete Ruby program. You can run it and see the effect of specifying various options. This is probably the best way to learn the features of &lt;code&gt;optparse&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1c2858fec7215198f421b921eaeb6ce5e5ef08" translate="yes" xml:space="preserve">
          <source>The following example performs a conditional GET using the If-Modified-Since header. If the files has not been modified since the time in the header a Not Modified response will be returned. See RFC 2616 section 9.3 for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b50785b8692f7fcd4ee9abae98095c987049a5" translate="yes" xml:space="preserve">
          <source>The following example raises the soft limit of core size to the hard limit to try to make core dump possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4d02536a9bbcb32067005cca9c458f0f7e8d1d" translate="yes" xml:space="preserve">
          <source>The following example shows that an exception is raised if the key is not found and a default value is not supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43eb347591c7e55fd7d4b4b386e0582b514bf10a" translate="yes" xml:space="preserve">
          <source>The following exceptions are defined as subclasses of &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt;. These exceptions are raised when zlib library functions return with an error status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc7eb726ec3a5d3307d840aa0563e35c2723422" translate="yes" xml:space="preserve">
          <source>The following key values have special meaning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b93b5f83cfee61d0625788215fe163ac38e7d6" translate="yes" xml:space="preserve">
          <source>The following keywords are used by Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67813a639d9340429fcef3b186fbc1106fac4486" translate="yes" xml:space="preserve">
          <source>The following members below are optional, and must be compiled with special flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f266550f300cebe46b99c10a20f17c66c0dc85f" translate="yes" xml:space="preserve">
          <source>The following metacharacters also behave like character classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192f6108ba4ec83a93a3743b287e3f14327ebcee" translate="yes" xml:space="preserve">
          <source>The following methods in &lt;a href=&quot;gzipreader&quot;&gt;&lt;code&gt;Zlib::GzipReader&lt;/code&gt;&lt;/a&gt; are just like their counterparts in &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, but they raise &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;gzipfile/error&quot;&gt;&lt;code&gt;Zlib::GzipFile::Error&lt;/code&gt;&lt;/a&gt; exception if an error was found in the gzip file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfb1017bf8725a9c3b289c852e2c56c7e060bbb" translate="yes" xml:space="preserve">
          <source>The following modes must be used separately, and along with one or more of the modes seen above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8c997259696a4b9e9ef99aeefd41cae48bf327" translate="yes" xml:space="preserve">
          <source>The following options are also recognised, but only apply if the session id is stored in a cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641ebe00918d389f940d8e875a4e0516a0ee5d25" translate="yes" xml:space="preserve">
          <source>The following patterns match instantly as you would expect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1049183f6db8f4c5be5babea92cbcbd5767ab9b6" translate="yes" xml:space="preserve">
          <source>The following program finds pythagorean triples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab81ae8dd8c55f7de6921ebdad9ebc4e3547bcb" translate="yes" xml:space="preserve">
          <source>The following ruby code will reconstruct the Bignum value from an array of bytes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2936d5adb9e240b503a66e2c87b97599cd38ff58" translate="yes" xml:space="preserve">
          <source>The following values are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaea439f1162a9e56215144275f0fcda0e1973f" translate="yes" xml:space="preserve">
          <source>The following will log to syslogd on your local machine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277aae9ea9e4d1e1ab1a4e3bbca05748f329451a" translate="yes" xml:space="preserve">
          <source>The form of the flip-flop is an expression that indicates when the flip-flop turns on, &lt;code&gt;..&lt;/code&gt; (or &lt;code&gt;...&lt;/code&gt;), then an expression that indicates when the flip-flop will turn off. While the flip-flop is on it will continue to evaluate to &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; when off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59e06eb1f2391912d21bca1c2ab8e347e86ad6e" translate="yes" xml:space="preserve">
          <source>The format may contain &lt;strong&gt;conversion specifiers&lt;/strong&gt;, which tell scanf what form (type) each particular matched substring should be converted to (e.g., decimal integer, floating point number, literal string, etc.) The matches and conversions take place from left to right, and the conversions themselves are returned as an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9de655a28e3e9345895de7218363cfebaa10f2" translate="yes" xml:space="preserve">
          <source>The format string may also contain characters other than those in the conversion specifiers. Whitespace (blanks, tabs, or newlines) in the format string matches any amount of whitespace, including none, in the input. Everything else matches only itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ad28b61d010941d875968c4965283b3a074b1c" translate="yes" xml:space="preserve">
          <source>The fourth value is an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; exponent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b9e74d45d63b01f1970c90ec6ca01a65008da4" translate="yes" xml:space="preserve">
          <source>The front object of the DRbServer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d752311ceddde8aaa9bad09ecc2e661bd516fc57" translate="yes" xml:space="preserve">
          <source>The full list of operating system errors on your particular platform are available as the constants of &lt;code&gt;Errno&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcc130a324c3c90e9fd960b9ebfc929d4a7a422" translate="yes" xml:space="preserve">
          <source>The full month name (&amp;ldquo;January&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdef1391c4056e529eec7c62f50671cb70a0565" translate="yes" xml:space="preserve">
          <source>The full path where the plugin should cache the gem so that it can be installed latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f27b909c78ed98a4126c07544a1536e850fa542" translate="yes" xml:space="preserve">
          <source>The full ruby version string, like &lt;code&gt;ruby -v&lt;/code&gt; prints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84aa183d43ee74824c57ee6f0803b899c35e29b" translate="yes" xml:space="preserve">
          <source>The full weekday name (&amp;ldquo;Sunday&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273464bb2108e38bfc4ec3dc3f36003bdaa03e9d" translate="yes" xml:space="preserve">
          <source>The function identified by &lt;em&gt;num&lt;/em&gt; is system dependent. On some Unix systems, the numbers may be obtained from a header file called &lt;code&gt;syscall.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da5c87d957370efb21eab292da3cf40cd2553ab" translate="yes" xml:space="preserve">
          <source>The gateway needs to install this id conversion and create servers for each of the protocols or networks it will be a gateway between. It then needs to create a server that attaches to each of these networks. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2c95112b08c522fbbe399758bbbbec8aa15210" translate="yes" xml:space="preserve">
          <source>The generator (an &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;) g of the Diffie-Hellman parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645923ef9d0b656ac58abcfb3fa02e75f3182623" translate="yes" xml:space="preserve">
          <source>The generator may be initialized with either a system-generated or user-supplied seed value by using &lt;a href=&quot;random#method-c-srand&quot;&gt;&lt;code&gt;Random.srand&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9767f86fa02bc235219fb5f6d51552fd87cffc" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;hash&lt;/code&gt; has pairs like &lt;code&gt;ExceptionClass =&amp;gt; :TimingSymbol&lt;/code&gt;. Where the ExceptionClass is the interrupt handled by the given block. The TimingSymbol can be one of the following symbols:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20db563415d7c2b7bb6d03b3dfdfb9b0b286ab1c" translate="yes" xml:space="preserve">
          <source>The global constant &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; (also accessible as &lt;code&gt;$&amp;lt;&lt;/code&gt;) provides an IO-like stream which allows access to all files mentioned on the command line (or STDIN if no files are mentioned). &lt;a href=&quot;argf#method-i-path&quot;&gt;&lt;code&gt;ARGF#path&lt;/code&gt;&lt;/a&gt; and its alias &lt;a href=&quot;argf#method-i-filename&quot;&gt;&lt;code&gt;ARGF#filename&lt;/code&gt;&lt;/a&gt; are provided to access the name of the file currently being read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebc251e55333f4d3e90975725cfb712ee4eb1b3" translate="yes" xml:space="preserve">
          <source>The global default options for the &lt;a href=&quot;json#method-i-dump&quot;&gt;&lt;code&gt;JSON.dump&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac7754ac3960dc7981043625115ce2b61b6bd90" translate="yes" xml:space="preserve">
          <source>The global default options for the &lt;a href=&quot;json#method-i-load&quot;&gt;&lt;code&gt;JSON.load&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d1d5361fbef6f23bf2e59d7a775cdc4f357cd5" translate="yes" xml:space="preserve">
          <source>The global directory root for all plugin related data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90547b71e821afe37047d8dbc77b56cd174cad5" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;false&lt;/code&gt; is the only instance of class &lt;code&gt;FalseClass&lt;/code&gt; and represents a logically false value in boolean expressions. The class provides operators allowing &lt;code&gt;false&lt;/code&gt; to participate correctly in logical expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22864028830453c29cd8c50d337b6db8a25bce0c" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;true&lt;/code&gt; is the only instance of class &lt;code&gt;TrueClass&lt;/code&gt; and represents a logically true value in boolean expressions. The class provides operators allowing &lt;code&gt;true&lt;/code&gt; to be used in logical expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380fff3f3a6baabcd40b14b3d4369e46189620da" translate="yes" xml:space="preserve">
          <source>The goal of this class is to manipulate file path information in a neater way than standard Ruby provides. The examples below demonstrate the difference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1792fb3deec90d0a9ce3c9abba91a1df4e8a1dcd" translate="yes" xml:space="preserve">
          <source>The graph is represented by &lt;em&gt;each_node&lt;/em&gt; and &lt;em&gt;each_child&lt;/em&gt;. &lt;em&gt;each_node&lt;/em&gt; should have &lt;code&gt;call&lt;/code&gt; method which yields for each node in the graph. &lt;em&gt;each_child&lt;/em&gt; should have &lt;code&gt;call&lt;/code&gt; method which takes a node argument and yields for each child node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43ef3daba6128e61ae664d271fed9133721c1f9" translate="yes" xml:space="preserve">
          <source>The hash algorithm used in MGF1 (the currently supported mask generation function (MGF)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa2862feb2b775b60cb5bca4a624ad23dff70ee" translate="yes" xml:space="preserve">
          <source>The hash algorithm used in MGF1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef27b41c817a117ed465052dc5d98571472e5b1" translate="yes" xml:space="preserve">
          <source>The hash algorithm used with &lt;a href=&quot;hmac&quot;&gt;&lt;code&gt;HMAC&lt;/code&gt;&lt;/a&gt; for the PRF. May be a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; representing the algorithm name, or an instance of &lt;a href=&quot;digest&quot;&gt;&lt;code&gt;OpenSSL::Digest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dac7906ccab88521b6d3266c1c07757148fa052" translate="yes" xml:space="preserve">
          <source>The hash arguments, env and options, are same as &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;spawn&lt;/code&gt;. See &lt;code&gt;Kernel.spawn&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9bbffc2ba5a8eef0d1e861040882683b875312" translate="yes" xml:space="preserve">
          <source>The hash contains current environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b862a5e504b0376ea8c84c346ba305c970071424" translate="yes" xml:space="preserve">
          <source>The hash function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ed1cee8c1805e3235725cb75ccfe09673d6d4b" translate="yes" xml:space="preserve">
          <source>The hash includes information about internal statistics about &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58435b4f519d9a40edbe31c76f389fbc983789db" translate="yes" xml:space="preserve">
          <source>The hash key is the name of the option and the value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b494189159f33d7ea6600c7a5c9d0a4fb4445a5" translate="yes" xml:space="preserve">
          <source>The hash keys specifies a file descriptor in the child process started by &lt;code&gt;spawn&lt;/code&gt;. :err, 2 and STDERR specifies the standard error stream (stderr).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9168d9a358415e1747435531b872358c9983aca" translate="yes" xml:space="preserve">
          <source>The hash keys specify file descriptors in the child process. The hash values specifies file descriptors in the parent process. So the above specifies exchanging stdout and stderr. Internally, &lt;code&gt;spawn&lt;/code&gt; uses an extra file descriptor to resolve such cyclic file descriptor mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b95d8f4c62b81ae4bd2dfd88662ac476ec26a81" translate="yes" xml:space="preserve">
          <source>The hash may include other options, where keys are symbols:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f85e331b65f7b15c9af5a8e7841f525dd0d5d1" translate="yes" xml:space="preserve">
          <source>The hash value returned is suitable for use as a certificate's filename in a CA path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94473b68afb729cc91ff4f202625662c4f7f8ea" translate="yes" xml:space="preserve">
          <source>The hash values specifies a file descriptor in the parent process which invokes &lt;code&gt;spawn&lt;/code&gt;. :out, 1 and STDOUT specifies the standard output stream (stdout).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03151c0e4bb94b79e95a0be44a3dd31f74dc2a2d" translate="yes" xml:space="preserve">
          <source>The header for the column, when available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0115ad07218ff271b2367ec50427cdcffb275560" translate="yes" xml:space="preserve">
          <source>The headers can be supplied as a pre-encoded string, such as &lt;code&gt;&quot;subject=subscribe&amp;amp;cc=address&quot;&lt;/code&gt;, or as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Arrays like &lt;code&gt;[['subject', 'subscribe'], ['cc', 'address']]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca1a54e1295cc27c7a75e1148aacf98d1589228" translate="yes" xml:space="preserve">
          <source>The heredoc starts on the line following &lt;code&gt;&amp;lt;&amp;lt;HEREDOC&lt;/code&gt; and ends with the next line that starts with &lt;code&gt;HEREDOC&lt;/code&gt;. The result includes the ending newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caff69e136be69a035574a45e0d4608770495e62" translate="yes" xml:space="preserve">
          <source>The high level YAML parser provided by &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; simply takes YAML as input and returns a Ruby data structure. For information on using the high level parser see &lt;a href=&quot;psych#method-c-load&quot;&gt;&lt;code&gt;Psych.load&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6273bfd3b600d7bca4244913715a29317519628c" translate="yes" xml:space="preserve">
          <source>The high level emitter has the easiest interface. &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; simply takes a Ruby data structure and converts it to a YAML document. See &lt;a href=&quot;psych#method-c-dump&quot;&gt;&lt;code&gt;Psych.dump&lt;/code&gt;&lt;/a&gt; for more information on dumping a Ruby data structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2b3665cc1b524a662f8fdaa3a4df886ca1cf72" translate="yes" xml:space="preserve">
          <source>The higher level methods are listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31712855374d288892d5919ac3326746cdd69b95" translate="yes" xml:space="preserve">
          <source>The highest group matched by the last successful match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea487c9b8ddd550dc6906c5da9376bb13579dd86" translate="yes" xml:space="preserve">
          <source>The history buffer. It extends &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; module, so it behaves just like an array. For example, gets the fifth content that the user input by HISTORY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f879e5f3e99969e4cefc88daa7c5207612f5493b" translate="yes" xml:space="preserve">
          <source>The horizontal precision using ssize type values in meters using scientific notation as 2 integers of XeY for precision use value/2 e.g. 2m = +/-1m</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdf9af6c004dcbfb988d92ed41bfb30a7b2d1df" translate="yes" xml:space="preserve">
          <source>The host of this &lt;a href=&quot;mx&quot;&gt;&lt;code&gt;MX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9958bc3f9111ca361e0c24d0bc28bdbb568b8e23" translate="yes" xml:space="preserve">
          <source>The host these services run on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7f6fc2e422190a8e8e6318fa3093f89928d4e2" translate="yes" xml:space="preserve">
          <source>The human readable reply text of the &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5761c346f24cb2ee67ab0288801dbfd97cef33" translate="yes" xml:space="preserve">
          <source>The id of this session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7209d9bf976dec7a73d91a826c49f1edc2586d27" translate="yes" xml:space="preserve">
          <source>The identifier may also be surrounded with double quotes (which is the same as no quotes) or with backticks. When surrounded by backticks the HEREDOC behaves like Kernel#`:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b0628ff743241585e4bd8388da9140fc4965de" translate="yes" xml:space="preserve">
          <source>The idiom may not work as dynamic scope if the methods are thread-local and a given block switches fiber.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7823efd88570f05c6cdcdeba7b9c6d877d28d4c3" translate="yes" xml:space="preserve">
          <source>The imaginary unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a513b6c2cd22cc1c4c169b4a9f8813d576957fc8" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the combinations are yielded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058134ee68018dd38c0047d3ca6f78956b3eb4d1" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the constants are yielded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09fbe11e7b808a2a27325da75d9125f5262d98f" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the permutations are yielded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26544ad30b16bfcd3c0373d4d440f7eab35e2f25" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the repeated combinations are yielded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab01bf3799a2fb452e23cd803705708a8737d0e9" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the repeated permutations are yielded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c0f703c407e20770d71b5165dfa12ad88daaa0" translate="yes" xml:space="preserve">
          <source>The included modules from the refinement for &lt;code&gt;C&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab62eadf8a5f9396cb08d2ac599554a6904a25b" translate="yes" xml:space="preserve">
          <source>The included modules of &lt;code&gt;C&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d1836bc74cac3298abbecea66b302772b1d629" translate="yes" xml:space="preserve">
          <source>The included modules of &lt;code&gt;R&lt;/code&gt; in reverse order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4cf09c5e4942b853b4a3fb9934a80f2f62fc59" translate="yes" xml:space="preserve">
          <source>The included modules of the current class. Note that the current class may be a refinement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea48090cbb1b6d4569b3843f06305d03a9a0f31" translate="yes" xml:space="preserve">
          <source>The indentation of the least-indented line will be removed from each line of the content. Note that empty lines and lines consisting solely of literal tabs and spaces will be ignored for the purposes of determining indentation, but escaped tabs and spaces are considered non-indentation characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4cfef5b1024b18dd3a971d562bbe5fafa5474d" translate="yes" xml:space="preserve">
          <source>The index in &lt;code&gt;Readline.line_buffer&lt;/code&gt; which matches the start of input-string passed to &lt;a href=&quot;readline#method-c-completion_proc&quot;&gt;&lt;code&gt;completion_proc&lt;/code&gt;&lt;/a&gt; is computed by subtracting the length of input-string from &lt;code&gt;Readline.point&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03c77eee883b26021edbb7ef860d5d725cb9512" translate="yes" xml:space="preserve">
          <source>The index method is specialized to return the index as [row, column] It also accepts an optional &lt;code&gt;selector&lt;/code&gt; argument, see &lt;a href=&quot;matrix#method-i-each&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743fd5fc56580ad66d04057e2575e67994de88e2" translate="yes" xml:space="preserve">
          <source>The index object used to store the details about the plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850f2c195740568bd650438bf014979797d3d786" translate="yes" xml:space="preserve">
          <source>The information about the last match in the current scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafc9303484bc0df7a0197a6053ee09b37debd69" translate="yes" xml:space="preserve">
          <source>The information accessible consists of the information found in the /etc/passwd and /etc/group files, plus information about the system's temporary directory (/tmp) and configuration directory (/etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb26bb4fc05a45f9d56134b2632049f543654f6" translate="yes" xml:space="preserve">
          <source>The information is returned as a &lt;a href=&quot;etc#Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b568353f0e5b0ded55a27143aa1a196a3bab7403" translate="yes" xml:space="preserve">
          <source>The information is returned as a &lt;a href=&quot;etc#Passwd&quot;&gt;&lt;code&gt;Passwd&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eec32586efcc08a6522ac9569df8eaa12baf287" translate="yes" xml:space="preserve">
          <source>The initial value, as an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbb536b4b69d9a076e30fba42c5254c6008ecc0" translate="yes" xml:space="preserve">
          <source>The input keying material.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d829cb82443ba50f573c9ebedd5465748e14ba7e" translate="yes" xml:space="preserve">
          <source>The input record separator, newline by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ceeac4af124af2b5c8c8d6beffd6e28fd6b15d" translate="yes" xml:space="preserve">
          <source>The instance is created at upon the first call of Klass.instance().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c731a8ce248cb0f89cded4bd139be65da21f2c" translate="yes" xml:space="preserve">
          <source>The instruction sequence results will almost certainly change as Ruby changes, so example output in this documentation may be different from what you see.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536c45d4dc9216a9c5f89c17cf373caefc91b7e7" translate="yes" xml:space="preserve">
          <source>The integer memory location of this function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c7450d48827577749c31af45a475e35525f27b" translate="yes" xml:space="preserve">
          <source>The integer operating system error number corresponding to a particular error is available as the class constant &lt;code&gt;Errno::&lt;/code&gt;&lt;em&gt;error&lt;/em&gt;&lt;code&gt;::Errno&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5573634dba21068712dd0b53f65c04fa46a14c6" translate="yes" xml:space="preserve">
          <source>The interface index to send IPv6 multicast packets from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e350b02cce032cb6b359e711705764960c70b4f5" translate="yes" xml:space="preserve">
          <source>The internal encoding is optional and when not set, the Ruby default internal encoding is used. If not explicitly set this default internal encoding is &lt;code&gt;nil&lt;/code&gt; meaning that by default, no transcoding occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7b31022b8059e69be6597c50a421d17b8a750e" translate="yes" xml:space="preserve">
          <source>The internal encoding of an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object can be set with &lt;a href=&quot;io#method-i-set_encoding&quot;&gt;&lt;code&gt;IO#set_encoding&lt;/code&gt;&lt;/a&gt; or at &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object creation (see &lt;a href=&quot;io#method-c-new&quot;&gt;&lt;code&gt;IO.new&lt;/code&gt;&lt;/a&gt; options).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5a81c1ad55c7473a13a1b1a61c77581f2a319d" translate="yes" xml:space="preserve">
          <source>The invocation of &lt;code&gt;breakable&lt;/code&gt; in the block doesn't break a line and is treated as just an invocation of &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78daa7611292caf7e83bc0f13a0cd73ad6203ebe" translate="yes" xml:space="preserve">
          <source>The io/console extension provides methods for interacting with the console. The console can be accessed from &lt;a href=&quot;io#method-c-console&quot;&gt;&lt;code&gt;IO.console&lt;/code&gt;&lt;/a&gt; or the standard input/output/error &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5648d6c520b2c8f0685cfe0aafe4053afeb3024" translate="yes" xml:space="preserve">
          <source>The iteration count. This provides the ability to tune the algorithm. It is better to use the highest count possible for the maximum resistance to brute-force attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44aaff1a7fcccac90476cc4ed0c7f392e6022e74" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-c-strongly_connected_components&quot;&gt;&lt;code&gt;TSort.strongly_connected_components&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcacceb6671fcafb92f9876f07ac6620712efb4e" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-c-tsort&quot;&gt;&lt;code&gt;TSort.tsort&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74485b91828857827ccbd43d24998b030fcf3b1" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-i-strongly_connected_components&quot;&gt;&lt;code&gt;strongly_connected_components&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.each_strongly_connected_component&lt;/code&gt; is similar to &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.strongly_connected_components.each&lt;/code&gt;, but modification of &lt;em&gt;obj&lt;/em&gt; during the iteration may lead to unexpected results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62ecc4e33923a5a704d21adf22af2d42a03fdf2" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-i-tsort&quot;&gt;&lt;code&gt;tsort&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort_each&lt;/code&gt; is similar to &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort.each&lt;/code&gt;, but modification of &lt;em&gt;obj&lt;/em&gt; during the iteration may lead to unexpected results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b353458758c261b374877635946fc7a33194676" translate="yes" xml:space="preserve">
          <source>The keys in the pairs must be symbols containing instance variable names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc79388d76e56a78bc4dbfe3ff81d2d7b67f795" translate="yes" xml:space="preserve">
          <source>The keys mean:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43d8feb1ae5a9203e6d517d03b401b1ad37a137" translate="yes" xml:space="preserve">
          <source>The keys starting with &lt;code&gt;:T_&lt;/code&gt; means live objects. For example, &lt;code&gt;:T_ARRAY&lt;/code&gt; is the number of arrays. &lt;code&gt;:FREE&lt;/code&gt; means object slots which is not used now. &lt;code&gt;:TOTAL&lt;/code&gt; means sum of above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3f94978008bced0c75e86b546b291433d87b14" translate="yes" xml:space="preserve">
          <source>The keyword arguments &lt;em&gt;N&lt;/em&gt;, &lt;em&gt;r&lt;/em&gt; and &lt;em&gt;p&lt;/em&gt; can be used to tune scrypt. RFC 7914 (published on 2016-08, &lt;a href=&quot;https://tools.ietf.org/html/rfc7914#section-2&quot;&gt;tools.ietf.org/html/rfc7914#section-2&lt;/a&gt;) states that using values r=8 and p=1 appears to yield good results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9738e2273389ee18c3b528d6f42206938d1c05c" translate="yes" xml:space="preserve">
          <source>The language of the content, returned as the Content-Language header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5fd853ca2e309a1e82eccf8f6e951ef9d03b26" translate="yes" xml:space="preserve">
          <source>The largest positive exponent in a double-precision floating point where 10 raised to this power minus 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf95f77f46d6de74a4b855314a7aead81d28018d" translate="yes" xml:space="preserve">
          <source>The largest possible exponent value in a double-precision floating point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c685ac98bdfccba13dfa7c45e1e49bac85d9a860" translate="yes" xml:space="preserve">
          <source>The largest possible integer in a double-precision floating point number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95404f41c73ac072999630f3e8e05b7e1064014b" translate="yes" xml:space="preserve">
          <source>The last argument should be a Julian day number which denotes the day of calendar reform. &lt;a href=&quot;date#ITALY&quot;&gt;&lt;code&gt;Date::ITALY&lt;/code&gt;&lt;/a&gt; (2299161=1582-10-15), &lt;a href=&quot;date#ENGLAND&quot;&gt;&lt;code&gt;Date::ENGLAND&lt;/code&gt;&lt;/a&gt; (2361222=1752-09-14), &lt;a href=&quot;date#GREGORIAN&quot;&gt;&lt;code&gt;Date::GREGORIAN&lt;/code&gt;&lt;/a&gt; (the proleptic Gregorian calendar) and &lt;a href=&quot;date#JULIAN&quot;&gt;&lt;code&gt;Date::JULIAN&lt;/code&gt;&lt;/a&gt; (the proleptic Julian calendar) can be specified as a day of calendar reform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6f9d4f610997c0712a6061f9f9cd6350bb9028" translate="yes" xml:space="preserve">
          <source>The last component of the real pathname can be nonexistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455d7b982c1ce7f695f35e1ac2ed7d5db75a6d5c" translate="yes" xml:space="preserve">
          <source>The last element of day, hour, minute, or second can be a fractional number. The fractional number's precision is assumed at most nanosecond.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc2d67cb2eb11a77590b3365183fc74e8db79ad" translate="yes" xml:space="preserve">
          <source>The last input line of string by gets or readline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9e413b8bded9b9b13a38dfec00ad83c9b31f1a" translate="yes" xml:space="preserve">
          <source>The last local network multicast group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860a059ae33bee2f4e3725dd9e18669c8720bb55" translate="yes" xml:space="preserve">
          <source>The last row read from this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d09cc67009fe719b55ef7fbac0d3ad16cd2dcc" translate="yes" xml:space="preserve">
          <source>The last three forms fill the array with the value of the given block, which is passed the absolute index of each element to be filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cbc7a9f2cd13b82213a6ad1e5352f7cc89dc43" translate="yes" xml:space="preserve">
          <source>The last two forms create a new instance of a struct subclass. The number of &lt;code&gt;value&lt;/code&gt; parameters must be less than or equal to the number of attributes defined for the structure. Unset parameters default to &lt;code&gt;nil&lt;/code&gt;. Passing more parameters than number of attributes will raise an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d644253a32bafc65128c7a0ae237c1bca938b9c3" translate="yes" xml:space="preserve">
          <source>The latest versions of the FIPS publications can be found here: &lt;a href=&quot;http://csrc.nist.gov/publications/PubsFIPS.html&quot;&gt;csrc.nist.gov/publications/PubsFIPS.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eba099a8d7f49b1c70740e1407fd1915ee56f3b" translate="yes" xml:space="preserve">
          <source>The latitude for this &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; where 2**31 is the equator in thousandths of an arc second as an unsigned 32bit integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2554f10ba35111f0fe84ac68cc57c6d4e7d9124" translate="yes" xml:space="preserve">
          <source>The latter means that readpartial is nonblocking-flag insensitive. It blocks on the situation &lt;a href=&quot;io#method-i-sysread&quot;&gt;&lt;code&gt;IO#sysread&lt;/code&gt;&lt;/a&gt; causes Errno::EWOULDBLOCK as if the fd is blocking mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2318aece28d41c63a77de705743acd550ba938" translate="yes" xml:space="preserve">
          <source>The length in octets of the salt. Two special values are reserved: &lt;code&gt;:digest&lt;/code&gt; means the digest length, and &lt;code&gt;:auto&lt;/code&gt; means automatically determining the length based on the signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59095e8d0ffc0f2dd79a059c438efde283df5e19" translate="yes" xml:space="preserve">
          <source>The length in octets of the salt. Two special values are reserved: &lt;code&gt;:digest&lt;/code&gt; means the digest length, and &lt;code&gt;:max&lt;/code&gt; means the maximum possible length for the combination of the private key and the selected message digest algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a4b192c3fd2d4e7a634cd154dbdfb796d7c8cb" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;Readline.line_buffer&lt;/code&gt; and GNU Readline's rl_end are same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f880a7f68078861e7dd0d676a116a72f2942d8b2" translate="yes" xml:space="preserve">
          <source>The length of the content that will be sent, returned as the Content-Length header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f13982dda6eadffafb5f83a81e1c14adab5a48" translate="yes" xml:space="preserve">
          <source>The length of the message in octets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214333c551b0b1d020292e7378bee39771179923" translate="yes" xml:space="preserve">
          <source>The length of the range represented in Content-Range: header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd4cf0d580b1fc06cfb350507632e5f526dd309" translate="yes" xml:space="preserve">
          <source>The length of the returned array is the product of the length of &lt;code&gt;self&lt;/code&gt; and the argument arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49a45ed80f1bde4a3ab062cd9cd67bfbbc57523" translate="yes" xml:space="preserve">
          <source>The levels are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c62cba384fd720b9ceb033e9aae1a1a09e971cb" translate="yes" xml:space="preserve">
          <source>The lexer is for internal use only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411444d20b71d3301ebd3b2f06f7e330f4067607" translate="yes" xml:space="preserve">
          <source>The library also supports reading and writing files in gzip (.gz) format with an interface similar to that of &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. The gzip format is described in RFC 1952 which is also a wrapper around a deflate stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb43a246ed9db47da98cdcd3dfb21106a785844" translate="yes" xml:space="preserve">
          <source>The limit for field size, if any. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f0c77b17ae3fcaaa65b4fbe3253fbe659b1b38" translate="yes" xml:space="preserve">
          <source>The limit specified by this method takes less priority over any limit specified to instance methods such as ceil, floor, truncate, or round.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382d67de75585eda36e4b6766e980ce91e1a2ef7" translate="yes" xml:space="preserve">
          <source>The line number in the source code where this AST's text began.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e78b231c10457c9edbca6549febebe0fc6f466b" translate="yes" xml:space="preserve">
          <source>The line number in the source code where this AST's text ended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97cfd17cb7561b717cc12d8ec11ee1a6ec28194" translate="yes" xml:space="preserve">
          <source>The line number of the current token. This value starts from 1. This method is valid only in event handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e2fa224c5332a696304bec0fe7f11a837e94c9" translate="yes" xml:space="preserve">
          <source>The line number of the last row read from this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67af8590c708d515d8d1768d323688a60752f81" translate="yes" xml:space="preserve">
          <source>The line number of the last row read from this file. Fields with nested line-end characters will not affect this count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc44391a4640862d7b12f0e7ed26c9fdaf2ee44" translate="yes" xml:space="preserve">
          <source>The line number of this keyword in the current file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5c4c8a3122de09c7366b7a31bf057c4653277f" translate="yes" xml:space="preserve">
          <source>The line of the data source this row is from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417aa197220e994826261de4de75eaa3de8aa462" translate="yes" xml:space="preserve">
          <source>The list of addresses where &lt;a href=&quot;ringfinger&quot;&gt;&lt;code&gt;RingFinger&lt;/code&gt;&lt;/a&gt; will send query packets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1c26067ddb560417bf1b4bad8eb95f4816ced2" translate="yes" xml:space="preserve">
          <source>The list of available SSL/TLS methods. This constant is only provided for backwards compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076d80d1441c8f116a0592255e40b67bcef39cc4" translate="yes" xml:space="preserve">
          <source>The list of available signal names and their interpretation is system dependent. &lt;a href=&quot;signal&quot;&gt;&lt;code&gt;Signal&lt;/code&gt;&lt;/a&gt; delivery semantics may also vary between systems; in particular signal delivery may not always be reliable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87bdee22553c5e1835cc04f190150be5b961b57" translate="yes" xml:space="preserve">
          <source>The list of cipher suites configured for this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac40f1f8622e4f5c5637c06a5b70d1c57242cbe" translate="yes" xml:space="preserve">
          <source>The list of dependencies to resolve</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e934b2847da3acbeeb3d1d3ee30d9fdc1b32151e" translate="yes" xml:space="preserve">
          <source>The list of supported extensions (and in some cases their possible values) can be derived from the &amp;ldquo;objects.h&amp;rdquo; file in the &lt;a href=&quot;openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780d8b1bdb0317ee7d50a9d647cb39b864e947b1" translate="yes" xml:space="preserve">
          <source>The local host used to establish the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23651b81fd326cc0da053929a5c1a406495f5141" translate="yes" xml:space="preserve">
          <source>The local port used to establish the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ded66250b581d812020d3b4ca00618747a7bc3" translate="yes" xml:space="preserve">
          <source>The local variable is created when the parser encounters the assignment, not when the assignment occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846c7fd50577452405ab14d0bff87468e3974d32" translate="yes" xml:space="preserve">
          <source>The locale encoding (__ENCODING__), not &lt;a href=&quot;encoding#method-c-default_internal&quot;&gt;&lt;code&gt;default_internal&lt;/code&gt;&lt;/a&gt;, is used as the encoding of created strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6a778b4b002b5db6872fc30c0fa832a5dd9dfd" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (String) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7433f737c5ba22e8f245dd3ef69ae08c10d1d39" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (String) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file). reopen the same filename if it is &lt;code&gt;nil&lt;/code&gt;, do nothing for &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. Default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34f6d45f364e8f842374d0fba03637ece7c5035" translate="yes" xml:space="preserve">
          <source>The log file suffix format for &lt;code&gt;daily&lt;/code&gt;, &lt;code&gt;weekly&lt;/code&gt; or &lt;code&gt;monthly&lt;/code&gt; rotation. Default is '%Y%m%d'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9234937ce5c8d9c89838d11a40033809f08f35" translate="yes" xml:space="preserve">
          <source>The log message. A &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd67ca521be8b37cd245fe1ec75b3f7a4cfe1fc" translate="yes" xml:space="preserve">
          <source>The long name of the &lt;a href=&quot;objectid&quot;&gt;&lt;code&gt;ObjectId&lt;/code&gt;&lt;/a&gt;, as defined in &amp;lt;openssl/objects.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5c657308f6efc204a612be11122152440f1b6c" translate="yes" xml:space="preserve">
          <source>The longitude for this &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; where 2**31 is the prime meridian in thousandths of an arc second as an unsigned 32bit integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46267f7e85d9a84600a29754a266a54e47023dc8" translate="yes" xml:space="preserve">
          <source>The loop finishes when the value to be passed to the block is greater than &lt;code&gt;limit&lt;/code&gt; (if &lt;code&gt;step&lt;/code&gt; is positive) or less than &lt;code&gt;limit&lt;/code&gt; (if &lt;code&gt;step&lt;/code&gt; is negative), where &lt;code&gt;limit&lt;/code&gt; is defaulted to infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd42a28ab13bb148febbfa074b8633c09db09090" translate="yes" xml:space="preserve">
          <source>The loopback address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76601e95c4af19197977333c6483aee61ec6fd84" translate="yes" xml:space="preserve">
          <source>The lowest digits of &lt;a href=&quot;time#method-i-to_f&quot;&gt;&lt;code&gt;to_f&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#method-i-nsec&quot;&gt;&lt;code&gt;nsec&lt;/code&gt;&lt;/a&gt; are different because IEEE 754 double is not accurate enough to represent the exact number of nanoseconds since the Epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2f17136536bcdcc0b67d8304f9315edb7c7033" translate="yes" xml:space="preserve">
          <source>The lowest digits of &lt;a href=&quot;time#method-i-to_f&quot;&gt;&lt;code&gt;to_f&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#method-i-subsec&quot;&gt;&lt;code&gt;subsec&lt;/code&gt;&lt;/a&gt; are different because IEEE 754 double is not accurate enough to represent the rational number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8240a1f55e847bacf9afdb80d5979f20db87962" translate="yes" xml:space="preserve">
          <source>The lowest level emitter is an event based system. Events are sent to a &lt;code&gt;Psych::Emitter&lt;/code&gt; object. That object knows how to convert the events to a YAML document. This interface should be used when document format is known in advance or speed is a concern. See &lt;code&gt;Psych::Emitter&lt;/code&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa295f0573cc7e0b679365f35113ca0432d7678" translate="yes" xml:space="preserve">
          <source>The lowest level parser should be used when the YAML input is already known, and the developer does not want to pay the price of building an AST or automatic detection and conversion to Ruby objects. See &lt;code&gt;Psych::Parser&lt;/code&gt; for more information on using the event based parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6916db97af7fbcc215e84d04bd5aea3188ac35c5" translate="yes" xml:space="preserve">
          <source>The mailbox with the associated quota.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52545ae3e81e3c2803caa27549768e88f88f183b" translate="yes" xml:space="preserve">
          <source>The main loop performed by a DRbServer's internal thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250cb0ca05bc75246d515eb258682a35ceccb314" translate="yes" xml:space="preserve">
          <source>The main thread of this DRbServer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5de340c31c6728889869aafe7a7527cf71db80" translate="yes" xml:space="preserve">
          <source>The major version of the instruction sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ed864705a92921352d7588de5ed467040deadf" translate="yes" xml:space="preserve">
          <source>The marshaling library converts collections of Ruby objects into a byte stream, allowing them to be stored outside the currently active script. This data may subsequently be read and the original objects reconstituted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6359721fbbcfa297633b64bf50fb5cd1106566b" translate="yes" xml:space="preserve">
          <source>The match below fails because although 'Demand' contains 'and', the pattern does not occur at a word boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808c974ed2c4ee16692f776c1e9bcb96f4845393" translate="yes" xml:space="preserve">
          <source>The maximum memory level for allocating zlib deflate compression state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b6a29a1b7d6f99c0454516c56835772c8b6d26" translate="yes" xml:space="preserve">
          <source>The maximum number of processes that can be created for the real user ID of the calling process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b96ed4230248510999f351379b3ffe66f0c518" translate="yes" xml:space="preserve">
          <source>The maximum size of the zlib history buffer. Note that zlib allows larger values to enable different inflate modes. See &lt;a href=&quot;zlib/inflate#method-c-new&quot;&gt;&lt;code&gt;Zlib::Inflate.new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d914f4ec30202b0bb54573e097e9c76a8b7876" translate="yes" xml:space="preserve">
          <source>The maximum width of a line, before it is separated in to a newline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8e8f5d824c85e327cb2988bb85c8dcc0e0e99e" translate="yes" xml:space="preserve">
          <source>The meaning of the &lt;code&gt;options&lt;/code&gt; is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756674ad56c03514e9d5f0a274e34fabfbc6719a" translate="yes" xml:space="preserve">
          <source>The message of the exception reports the content of podspec for the line that generated the original exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96405d1c04ac31ccf2aa964281a6b129c823abe3" translate="yes" xml:space="preserve">
          <source>The message to log; does not need to be a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfc088a33bba2b84de874c521344bc3d906fb6e" translate="yes" xml:space="preserve">
          <source>The messages have associated levels, such as &lt;code&gt;INFO&lt;/code&gt; or &lt;code&gt;ERROR&lt;/code&gt; that indicate their importance. You can then give the &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; a level, and only messages at that level or higher will be printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed17a46f5d164d4fb1ce3e055ca6cf1ff5c352a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;array#method-i-pop&quot;&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt; removes the last element in an array and returns it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd1b8cdb5e4d124efa471d2a5b6465ca4789a83" translate="yes" xml:space="preserve">
          <source>The method of determining if the resource was created or not is unique to the particular service you are using. Of course, you will want to add protection from infinite looping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfa8c485fcee972d9f8521b3edcaa96ae452142" translate="yes" xml:space="preserve">
          <source>The method params() returns a hash of all parameters in the request as name/value-list pairs, where the value-list is an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of one or more values. The &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; object itself also behaves as a hash of parameter names to values, but only returns a single value (as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;) for each parameter name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b946c0c70bf569bc0e75dbadd02ad1f9c32728" translate="yes" xml:space="preserve">
          <source>The methods provided are &lt;a href=&quot;string#method-i-scanf&quot;&gt;&lt;code&gt;String#scanf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-scanf&quot;&gt;&lt;code&gt;IO#scanf&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;kernel#method-i-scanf&quot;&gt;&lt;code&gt;Kernel#scanf&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;kernel#method-i-scanf&quot;&gt;&lt;code&gt;Kernel#scanf&lt;/code&gt;&lt;/a&gt; is a wrapper around STDIN.scanf. &lt;a href=&quot;io#method-i-scanf&quot;&gt;&lt;code&gt;IO#scanf&lt;/code&gt;&lt;/a&gt; can be used on any &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; stream, including file handles and sockets. scanf can be called either with or without a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cddd53158e7009e062db7663f73cda3c930f38" translate="yes" xml:space="preserve">
          <source>The minimum field width specifies the minimum width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faca15fc2ed785ce29bfd1c5630e73b3716d9a0" translate="yes" xml:space="preserve">
          <source>The minimum number of seconds to be used for TTL values in RRs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a97a8ac1ceb9e02af962e4894865d40c80e40d5" translate="yes" xml:space="preserve">
          <source>The minimum number of significant decimal digits in a double-precision floating point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7687e6fea656889dc6c15a2a48af2a0d52bac38" translate="yes" xml:space="preserve">
          <source>The minor version of the instruction sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d2c9e2fb664b6f552ed6f31a6763a704e5cfb7" translate="yes" xml:space="preserve">
          <source>The mixed mode default is to treat a list of indices as row access, returning the rows indicated. Anything else is considered columnar access. For columnar access, the return set has an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; for each row with the values indicated by the headers in each &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. You can force column or row mode using &lt;a href=&quot;table#method-i-by_col&quot;&gt;&lt;code&gt;by_col&lt;/code&gt;&lt;/a&gt;!() or &lt;a href=&quot;table#method-i-by_row&quot;&gt;&lt;code&gt;by_row&lt;/code&gt;&lt;/a&gt;!().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecc046e7d1219d6e375c3c25aabce2dff0d83a5" translate="yes" xml:space="preserve">
          <source>The mode should be an integer, as for Unix chmod.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657fa6d04a94551886639db774724f16e48b0dc5" translate="yes" xml:space="preserve">
          <source>The modified Julian day number is in elapsed days since midnight (Coordinated Universal &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;) on November 17, 1858 CE (in the Gregorian calendar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881eec14e2a567191faf4c34b9f0d0595a34221c" translate="yes" xml:space="preserve">
          <source>The modified attributes may be retained when &lt;code&gt;exec(2)&lt;/code&gt; system call fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a2ebb23192061c98013ae05eff2f946e449e8a" translate="yes" xml:space="preserve">
          <source>The modifiers are &amp;ldquo;E&amp;rdquo; and &amp;ldquo;O&amp;rdquo;. They are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28a7551f843bfb98ea28ac3bf61743eeeb4400a" translate="yes" xml:space="preserve">
          <source>The modifiers are &amp;ldquo;E&amp;rdquo;, &amp;ldquo;O&amp;rdquo;, &amp;ldquo;:&amp;rdquo;, &amp;ldquo;::&amp;rdquo; and &amp;ldquo;:::&amp;rdquo;. &amp;ldquo;E&amp;rdquo; and &amp;ldquo;O&amp;rdquo; are ignored. No effect to result currently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089a54897d08954cb728ea0a0d9bd9a5719b1c4b" translate="yes" xml:space="preserve">
          <source>The more accurate value is returned by &lt;a href=&quot;time#method-i-nsec&quot;&gt;&lt;code&gt;nsec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba813d4c11d37a73fbae06095fffef653980d78" translate="yes" xml:space="preserve">
          <source>The more accurate value is returned by &lt;a href=&quot;time#method-i-subsec&quot;&gt;&lt;code&gt;subsec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311b028c2e8bf551c0fd09b547dfc425dd72d0f7" translate="yes" xml:space="preserve">
          <source>The most common constructive encodings are SETs and SEQUENCEs, which is why there are two sub-classes of &lt;a href=&quot;asn1/constructive&quot;&gt;&lt;code&gt;Constructive&lt;/code&gt;&lt;/a&gt; representing each of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f782338c0399529848644e45d81c3c92ac9fc09" translate="yes" xml:space="preserve">
          <source>The most common errors are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d151e682e7c87aeaa1a6866f9dc88244ca248a2" translate="yes" xml:space="preserve">
          <source>The most common way is to compare an object against multiple patterns. The patterns are matched using the +===+ method which is aliased to +==+ on &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. Other classes must override it to give meaningful behavior. See &lt;a href=&quot;../module#method-i-3D-3D-3D&quot;&gt;&lt;code&gt;Module#===&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../regexp#method-i-3D-3D-3D&quot;&gt;&lt;code&gt;Regexp#===&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29507bdb8e7b7e4bdf24b8a672c7dc35a0976b1" translate="yes" xml:space="preserve">
          <source>The most common way of writing strings is using &lt;code&gt;&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0f9f1a0972627a233df437e035ac38990c02d4" translate="yes" xml:space="preserve">
          <source>The most generic interface of the library is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e30fceab152fddcc3f16b0c48a5aa6a2a863d60" translate="yes" xml:space="preserve">
          <source>The most likely situation is that &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; buffers some data. &lt;code&gt;IO.select&lt;/code&gt; doesn't see the buffer. So &lt;code&gt;IO.select&lt;/code&gt; can block when &lt;code&gt;OpenSSL::SSL::SSLSocket#readpartial&lt;/code&gt; doesn't block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc82f3d021b0c83c586e1487100b727ac71c1bf7" translate="yes" xml:space="preserve">
          <source>The most standard error types are subclasses of &lt;a href=&quot;standarderror&quot;&gt;&lt;code&gt;StandardError&lt;/code&gt;&lt;/a&gt;. A rescue clause without an explicit &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class will rescue all StandardErrors (and only those).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5fa1599fac5039119ead4b62b172ddb697cfe4" translate="yes" xml:space="preserve">
          <source>The name of the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ae9bfa50babdc16a8e158461a1823b0195f61d" translate="yes" xml:space="preserve">
          <source>The name of the command to be removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291b19fab86bda0e4ebc8bd5177fd74c0bbcc729" translate="yes" xml:space="preserve">
          <source>The name of the context (block, method, class, module, etc.) that this instruction sequence belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ef5d977abc3446a411570403e682307f9244fa" translate="yes" xml:space="preserve">
          <source>The name of the cookie; in this form, there is no &lt;a href=&quot;cookie#attribute-i-domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; or expiration. The &lt;a href=&quot;cookie#attribute-i-path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; is gleaned from the &lt;code&gt;SCRIPT_NAME&lt;/code&gt; environment variable, and &lt;a href=&quot;cookie#attribute-i-secure&quot;&gt;&lt;code&gt;secure&lt;/code&gt;&lt;/a&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0b6919ccde61efcbd76e9ac59889238b6d797c" translate="yes" xml:space="preserve">
          <source>The name of the unknown thing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b2e3344f685e74053621dc1bdb0ab94f2aa71e" translate="yes" xml:space="preserve">
          <source>The name of this &lt;a href=&quot;domainname&quot;&gt;&lt;code&gt;DomainName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9721470964edf026e4e7586efba5ebf887ea33e" translate="yes" xml:space="preserve">
          <source>The name of this function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0456024604ae809c763b250c17ec95e11640cdc" translate="yes" xml:space="preserve">
          <source>The names of the &lt;code&gt;Errno::&lt;/code&gt; classes depend on the environment in which Ruby runs. On a typical Unix or Windows platform, there are &lt;code&gt;Errno&lt;/code&gt; classes such as &lt;code&gt;Errno::EACCES&lt;/code&gt;, &lt;code&gt;Errno::EAGAIN&lt;/code&gt;, &lt;code&gt;Errno::EINTR&lt;/code&gt;, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c6e46017f1669a6d11abd7d5dc08ab22aee261" translate="yes" xml:space="preserve">
          <source>The namespace to search for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9186e4b8da445d7871556732af9390315b56fe4a" translate="yes" xml:space="preserve">
          <source>The namespace/class given will have its options showed on the help usage. Check &lt;a href=&quot;group#method-c-invoke_from_option&quot;&gt;&lt;code&gt;invoke_from_option&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901df1e0c1d95c96af85c355300dda402bfe351f" translate="yes" xml:space="preserve">
          <source>The net/pop library supports &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication. To use &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;Net::APOP&lt;/code&gt;&lt;/a&gt; class instead of the &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;Net::POP3&lt;/code&gt;&lt;/a&gt; class. You can use the utility method, &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;Net::POP3&lt;/code&gt;&lt;/a&gt;.APOP(). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1141f023e6ca3e2bd7058d06643e202d61ac87" translate="yes" xml:space="preserve">
          <source>The network broadcast address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107eed62d3dd34fa4fc7ee9a22822d7f91f164e4" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object is buffered mode (or non-sync mode), unless &lt;code&gt;filename&lt;/code&gt; is a tty. See &lt;a href=&quot;io#method-i-flush&quot;&gt;&lt;code&gt;IO#flush&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fsync&quot;&gt;&lt;code&gt;IO#fsync&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fdatasync&quot;&gt;&lt;code&gt;IO#fdatasync&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;IO#sync=&lt;/code&gt; about sync mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d694a0b3bcbbb027eed02e68fd12eed0c763e89" translate="yes" xml:space="preserve">
          <source>The new dRuby server will become the primary server, even if another server is currently the primary server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b71ceab6735600e06e0b313fc3f7b363bf96fbc" translate="yes" xml:space="preserve">
          <source>The next step is to create the end-entity certificate using the root CA certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f210ce079d52d62cce9a7003c6d8a0786bddcac7" translate="yes" xml:space="preserve">
          <source>The nil itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5399075b05f3340270879f715c6d3b180b11d6" translate="yes" xml:space="preserve">
          <source>The nonce is used to prevent replay attacks but some servers do not support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57dff6886ca4feedded1bc4c406da385a133074e" translate="yes" xml:space="preserve">
          <source>The normal &lt;code&gt;require&lt;/code&gt; functionality of returning false if that file has already been loaded is preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4470ba34138eea7d6a34f78cf9963f1177b2be63" translate="yes" xml:space="preserve">
          <source>The not_before and not_after fields must be filled in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7b9b5379bcc525b031c437e0e03e12dc1237ef" translate="yes" xml:space="preserve">
          <source>The notifying class mixes in the &lt;code&gt;Observable&lt;/code&gt; module, which provides the methods for managing the associated observer objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceac4bcc0fb6ca38222b353f41ce522fa43ebe3f" translate="yes" xml:space="preserve">
          <source>The number of base digits for the &lt;code&gt;double&lt;/code&gt; data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fdd2f0621d73b7205106501fc4775423e03cb0b" translate="yes" xml:space="preserve">
          <source>The number of bytes that are immediately available for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3467e9dfbf8934d0c263809fe99ff64f56a973" translate="yes" xml:space="preserve">
          <source>The number of elements in the tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36425e9fd6284c7ea09d614b532ff3e8cfc58e72" translate="yes" xml:space="preserve">
          <source>The number of requests that should be made before opening a new connection. Typically many keep-alive capable servers tune this to 100 or less, so the 101st request will fail with ECONNRESET. If unset (default), this value has no effect, if set, connections will be reset on the request after max_requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae02fb229b8b972161e37321ddc614f718debf20" translate="yes" xml:space="preserve">
          <source>The number of significant digits, as an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;. If omitted or 0, the number of significant digits is determined from the initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b3107bf1393fb143bbe2676ab50e22da3b5f2e" translate="yes" xml:space="preserve">
          <source>The number of spaces to be indented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1dc4d9e3ef1e8c3a4d9bfdd2eb6e2b68547768" translate="yes" xml:space="preserve">
          <source>The number of the first source line where the instruction sequence was loaded from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1938d1f06ed1bf7fe16bfe633133a3c8be059b9e" translate="yes" xml:space="preserve">
          <source>The number of times &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0779616dc1d6d6bbf0541b6f7c8ba03afe87401" translate="yes" xml:space="preserve">
          <source>The object the current method is attached to. See &lt;a href=&quot;syntax/methods_rdoc&quot;&gt;methods&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae91720e7752e0f172ac1d1c6f8a7fc86c83b5c" translate="yes" xml:space="preserve">
          <source>The objspace library extends the &lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; module and adds several methods to get internal statistic information about object/memory management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cb0ac6d292de0a33b3cb29f2fd8e9b18bdbe63" translate="yes" xml:space="preserve">
          <source>The observable object must:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6d225afa1abca8299e09e3fc9958795c42cc49" translate="yes" xml:space="preserve">
          <source>The offset also accepts string form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47855f7ed510fced4896c5c2056b4e8861dfcb0c" translate="yes" xml:space="preserve">
          <source>The only exception is dynamic method definition: even if defined by passing a non-lambda proc, methods still have normal semantics of argument checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed7f10c9a1c090abaa07243ca851a81d9d5701b" translate="yes" xml:space="preserve">
          <source>The only flag implemented in scanf for Ruby is '&lt;code&gt;*&lt;/code&gt;' (ignore upcoming conversion). Many of the flags available in C versions of scanf(3) have to do with the type of upcoming pointer arguments, and are meaningless in Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973e01594d2449daae48c68e722c7b946c07b8db" translate="yes" xml:space="preserve">
          <source>The opened &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object will be returned. If &lt;em&gt;read_only&lt;/em&gt; is true, and the file does not exist, then nil will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73492dd8ad490c734fb87cbd087cceb7d94d7844" translate="yes" xml:space="preserve">
          <source>The opened file has several getter methods for its meta-information, as follows, since it is extended by &lt;a href=&quot;openuri/meta&quot;&gt;&lt;code&gt;OpenURI::Meta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff277050cec24f281a96774a298e0c77b3f32df9" translate="yes" xml:space="preserve">
          <source>The opposite of &lt;a href=&quot;pathname#method-i-absolute-3F&quot;&gt;&lt;code&gt;Pathname#absolute?&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79b14349ce3cb8e8057e916c8b9c9120fa29144" translate="yes" xml:space="preserve">
          <source>The option name is always converted to the first (preferred) name given in the original options to &lt;a href=&quot;getoptlong#method-c-new&quot;&gt;&lt;code&gt;GetoptLong.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d387ec735ccfc047f61b72b5d075d0deaacd7ac" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;base&lt;/code&gt; keyword argument specifies the base directory for interpreting relative pathnames instead of the current working directory. As the results are not prefixed with the base directory name in this case, you will need to prepend the base directory name if you want real paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e24c4a7df1edcf3504bd1279dca8922ab94496" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;dest&lt;/code&gt; argument is obsolete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a9803a3f8a4f84c11df6cf0c0185f0e9ece281" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;half&lt;/code&gt; keyword argument is available similar to &lt;a href=&quot;float#method-i-round&quot;&gt;&lt;code&gt;Float#round&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d17d93ec3f386da4bb8ba74d7af741a6343779" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;hash&lt;/code&gt;, if given, will generate attributes and values (can be a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;openstruct&quot;&gt;&lt;code&gt;OpenStruct&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt;). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81790be8c3cda35716e6a222bf384cae5a7b3fe9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;header_row&lt;/code&gt; parameter can be set to &lt;code&gt;true&lt;/code&gt; to indicate, via &lt;a href=&quot;row#method-i-header_row-3F&quot;&gt;&lt;code&gt;CSV::Row.header_row?()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;row#method-i-field_row-3F&quot;&gt;&lt;code&gt;CSV::Row.field_row?()&lt;/code&gt;&lt;/a&gt;, that this is a header row. Otherwise, the row is assumes to be a field row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc88394a3b14b21fea6a06c9b285beafb74f5b9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;headers&lt;/code&gt; parameter can be set to &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of headers. If headers aren't set, headers are fetched from &lt;a href=&quot;row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; objects. Otherwise, headers() method will return headers being set in headers argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65b70d91fdef6e6e2554b1bf564b476d1f8672e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;isapop&lt;/code&gt; specifies whether this connection is going to use &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication; it defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3075efc2ab24b71b70768911ce0e17636a66c3dc" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;level&lt;/code&gt; argument determines the level of recursion to flatten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bab4f317892f92325571c645ad1584f2f4a30e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;pattern&lt;/code&gt; parameter is a pattern or a string. Only input strings that match the pattern or start with the string are included in the output hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472faf5c04e9c6ed82bf3bd6272112984517e71b" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;port&lt;/code&gt; is the port to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76afc72a063acaa00fef0ed93bc3551db4fc697" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;rng&lt;/code&gt; argument will be used as the random number generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131e5aa959a2f5094455e26eea2eb80dd2718de6" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;arity&lt;/em&gt; argument should be supplied when currying methods with variable arguments to determine how many arguments are needed before the method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5300b5539da14c679018e34f0fae367df2c78a2" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;capacity&lt;/em&gt; keyword argument specifies the size of the internal buffer. This may improve performance, when the string will be concatenated many times (causing many realloc calls).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca55fff9634b4fc6f0c9b00958c2e4370761459c" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;encoding&lt;/em&gt; keyword argument specifies the encoding of the directory. If not specified, the filesystem encoding is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c80c9c55500c28a3dd9bbd39b98dc563e61fa40" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;encoding&lt;/em&gt; keyword argument specifies the encoding of the new string. If not specified, the encoding of &lt;em&gt;str&lt;/em&gt; is used (or ASCII-8BIT, if &lt;em&gt;str&lt;/em&gt; is not specified).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0f8bc6f973fbc2eedfb8dec7ea760e4337a5d1" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;filename&lt;/em&gt; argument passed to &lt;a href=&quot;kernel#method-i-eval&quot;&gt;&lt;code&gt;Kernel#eval&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; code is run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f647974208a0bed8a2421a99493d5f7bd5dc9929" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;limit&lt;/em&gt; argument specifies how many characters of each line to return. By default all characters are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41be43f2f70feda6306bb88681e847b3590d99be" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;lineno&lt;/em&gt; argument passed to &lt;a href=&quot;kernel#method-i-eval&quot;&gt;&lt;code&gt;Kernel#eval&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; code is run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b729a103111267d94266dac8e4cf5f77b840e72a" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;start&lt;/em&gt; parameter determines the number of initial stack entries to omit from the top of the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a13cb6c1fb37363ab27e3e4453e9ffa9fe37c0" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;opts&lt;/em&gt; is options represented by a hash. &lt;em&gt;opts&lt;/em&gt; may have following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b2067bdbaf8bf43d6e1a1a6a29174e3c9cad12" translate="yes" xml:space="preserve">
          <source>The optional keyword parameters &lt;em&gt;loc&lt;/em&gt; and &lt;em&gt;set&lt;/em&gt; specify where to insert the new attribute. Refer to the manpage of X509_NAME_add_entry(3) for details. &lt;em&gt;loc&lt;/em&gt; defaults to -1 and &lt;em&gt;set&lt;/em&gt; defaults to 0. This appends a single-valued RDN to the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d096dd2ed050ee99a797f64e7dcba1d08bc070d6" translate="yes" xml:space="preserve">
          <source>The optional last argument &lt;em&gt;opts&lt;/em&gt; is options represented by a hash. &lt;em&gt;opts&lt;/em&gt; may have following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c102809ad7f40a86ee774113fe18f69a9d4d1f" translate="yes" xml:space="preserve">
          <source>The optional parameter can be used to specify how to calculate the size in a lazy fashion (see &lt;a href=&quot;enumerator#method-i-size&quot;&gt;&lt;code&gt;Enumerator#size&lt;/code&gt;&lt;/a&gt;). It can either be a value or a callable object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c99fe80f67c49eec06dcb2f904bd2b56c13548" translate="yes" xml:space="preserve">
          <source>The optional parameter s consists of either an integer; or an optional '+' or ' ', followed by an optional number, followed by an optional 'E' or 'F'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8ab6a8f4ceb3ba7df2334bb03789a66826c492" translate="yes" xml:space="preserve">
          <source>The optional timeout parameter defines, in seconds, the total time to wait for the pattern. If the timeout expires or eof is found, nil is returned or yielded. However, the buffer in a timeout session is kept for the next expect call. The default timeout is 9999999 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae8fa51f2e48e0f267991f3c1a1ea62da888b36" translate="yes" xml:space="preserve">
          <source>The options below give you various choices, in more or less increasing complexity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dce28310a689d881778bd6f3a373eeb6d0df21b" translate="yes" xml:space="preserve">
          <source>The options hash accepts the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8734aeabd6d1836446322aff4d31a0ab99ed976" translate="yes" xml:space="preserve">
          <source>The options to pass to &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt; are constructed by merging &lt;code&gt;opts&lt;/code&gt;, the last hash element of the array, and specifications for the pipes between each of the commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ad8576203826a94c70eaf7a2d72b8626e108a9" translate="yes" xml:space="preserve">
          <source>The options to support are passed to new() as an array of arrays. Each sub-array contains any number of &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; option names which carry the same meaning, and one of the following flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70969b16d15f8f2eaa631d12bd961f72469a242c" translate="yes" xml:space="preserve">
          <source>The options used when no overrides are given by calling code. They are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314c6e78f7ae97836a7f20cd8bbd80e461cef7ca" translate="yes" xml:space="preserve">
          <source>The order in which values are removed/returned is not guaranteed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002e5c106dc68243e96e727181899a4921c8cefe" translate="yes" xml:space="preserve">
          <source>The orders of each hashes are not compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7da42f4ed0859719b7607e12bc2d9ccdac1712" translate="yes" xml:space="preserve">
          <source>The ordinal date is a particular day of a calendar year identified by its ordinal number within the year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11dd76de683de980b8499851a5fbe8756a37d23" translate="yes" xml:space="preserve">
          <source>The orientation of the hemisphere as 'lat' or 'lon'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ab1ed878e01d1947d161bdaecabb5b3b91e07a" translate="yes" xml:space="preserve">
          <source>The origin (zero) of the returned value varies. For example, system start up time, process start up time, the Epoch, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cecc355844073554de9abb2efca293d3d93ca31f" translate="yes" xml:space="preserve">
          <source>The origin in &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt;&lt;code&gt;CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt; is defined as the Epoch (1970-01-01 00:00:00 UTC). But some systems count leap seconds and others doesn't. So the result can be interpreted differently across systems. &lt;a href=&quot;time#method-c-now&quot;&gt;&lt;code&gt;Time.now&lt;/code&gt;&lt;/a&gt; is recommended over &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt;&lt;code&gt;CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62461d5f0665c945266ef16a9f39ecbe2da18d0e" translate="yes" xml:space="preserve">
          <source>The original ndbm library is released in 4.3BSD. It is based on dbm library in Unix Version 7 but has different API to support multiple databases in a process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4427decdd689644cd2edb0acc4e3b3dc2d2be001" translate="yes" xml:space="preserve">
          <source>The other way to use a &lt;code&gt;case&lt;/code&gt; expression is like an if-elsif expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd60afe566be233ecdea712c2674beeade9f8624" translate="yes" xml:space="preserve">
          <source>The output field separator for the print and &lt;a href=&quot;array#method-i-join&quot;&gt;&lt;code&gt;Array#join&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606d68c5b237f3fb1b8a05b28df849650e963e57" translate="yes" xml:space="preserve">
          <source>The output length in octets. Must be &amp;lt;= &lt;code&gt;255 * HashLen&lt;/code&gt;, where HashLen is the length of the hash function output in octets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5fba97ffcc2a99eabad272993917978968a191" translate="yes" xml:space="preserve">
          <source>The output object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b3f74916316ba798b87a2bb4ca5700f74b895f" translate="yes" xml:space="preserve">
          <source>The output record separator for the print and &lt;a href=&quot;io#method-i-write&quot;&gt;&lt;code&gt;IO#write&lt;/code&gt;&lt;/a&gt;. Default is nil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa27f1011fa02d3e014431080b14e689a3a43b12" translate="yes" xml:space="preserve">
          <source>The padding character is optional. This method accepts both correctly-padded and unpadded input. Note that it still rejects incorrectly-padded input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75887f73f237bd9e6adc753f06a8bf975aae48e7" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;min&lt;/code&gt; specifies the minimum number of bytes that should be received when a read operation is performed. (default: 1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357a20699c2ab7e10cd50bd2e2273fd31b21fd2c" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;time&lt;/code&gt; specifies the timeout in &lt;em&gt;seconds&lt;/em&gt; with a precision of 1/10 of a second. (default: 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a14d66e6ce54fa3c1ed0bc0f15ca47a6fed218" translate="yes" xml:space="preserve">
          <source>The parameters env, cmd, and opts are passed to &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt;. A commandline string and a list of argument strings can be accepted as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984c9c424075336fc05edea0c43b3e3064a534a0" translate="yes" xml:space="preserve">
          <source>The parent class for all constructed encodings. The &lt;em&gt;value&lt;/em&gt; attribute of a &lt;a href=&quot;constructive&quot;&gt;&lt;code&gt;Constructive&lt;/code&gt;&lt;/a&gt; is always an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. Attributes are the same as for &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;, with the addition of &lt;em&gt;tagging&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2421ee38537c97af8b88ff919b091a13c2e509a5" translate="yes" xml:space="preserve">
          <source>The parent class for all primitive encodings. Attributes are the same as for &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;, with the addition of &lt;em&gt;tagging&lt;/em&gt;. &lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; values can never be encoded with indefinite length form, thus it is not possible to set the &lt;em&gt;indefinite_length&lt;/em&gt; attribute for &lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; and its sub-classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1db0666f5ad99ea1666b262aa4e7925c9593721" translate="yes" xml:space="preserve">
          <source>The parent process should use &lt;code&gt;Process.wait&lt;/code&gt; to collect the termination status of its child or use &lt;code&gt;Process.detach&lt;/code&gt; to register disinterest in their status; otherwise, the operating system may accumulate zombie processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b29b9bcbac559c5a2ac01ebd4c67e6adef64fc4" translate="yes" xml:space="preserve">
          <source>The parentheses around the arguments are optional:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fd9ee216f7411448146467a3991adbfce6523e" translate="yes" xml:space="preserve">
          <source>The passed-in no-argument block is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717a943aad2e85afe177950af6e392095a4e2314" translate="yes" xml:space="preserve">
          <source>The passphrase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ad0ec3f230a74aef14a1e2b135afa11748860e" translate="yes" xml:space="preserve">
          <source>The password of the proxy server, if one is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962c144dd7fb32568d65124cc161b986468b51a2" translate="yes" xml:space="preserve">
          <source>The patchlevel for this ruby. If this is a development build of ruby the patchlevel will be -1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9e53195e8260ff6351b9954e0dc42dfeb84857" translate="yes" xml:space="preserve">
          <source>The path to a directory containing CA certificates in PEM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbcd61bd7af976b48b5fae144eea5c44e167a97" translate="yes" xml:space="preserve">
          <source>The path to a file containing a PEM-format CA certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6485ffbdf19c45e5569b5628b2d2db1f4518a8" translate="yes" xml:space="preserve">
          <source>The path to the current file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8375923faef191dece8acf1701590c13e9684a42" translate="yes" xml:space="preserve">
          <source>The path to the file to execute. Can be a web address or a relative path from the source root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5472bd33d08fff9c6812fb6b85abcf9cdbee52eb" translate="yes" xml:space="preserve">
          <source>The pathname depends on the Operating System: Unix, Windows, etc. This library works with pathnames of local OS, however non-Unix pathnames are supported experimentally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2091a74367379fde3cb0ec94a4b35cfd2e69f147" translate="yes" xml:space="preserve">
          <source>The pathname may not point to the file corresponding to &lt;em&gt;file&lt;/em&gt;. For instance, the pathname becomes void when the file has been moved or deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2769e9032e84effdfca498fd2e1ba4a32196eb" translate="yes" xml:space="preserve">
          <source>The pattern below matches a vowel followed by 2 word characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5257733d7783a73e1dd5c272dbb397466dfbf3c0" translate="yes" xml:space="preserve">
          <source>The pattern below uses positive lookahead and positive lookbehind to match text appearing in tags without including the tags in the match:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f455f0c1a75a765389dbd52a5c11309c5da60d" translate="yes" xml:space="preserve">
          <source>The per-session private key, an &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad0ee0b34de5b74f53f79a096036949b01857f2" translate="yes" xml:space="preserve">
          <source>The per-session public key (an &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;) matching the private key. This needs to be passed to &lt;a href=&quot;dh#method-i-compute_key&quot;&gt;&lt;code&gt;DH#compute_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9319ff590735d23c94a44a4c6e4d5d65fd69938c" translate="yes" xml:space="preserve">
          <source>The permission bits &lt;code&gt;0644&lt;/code&gt; (in octal) would thus be interpreted as read/write for owner, and read-only for group and other. Higher-order bits may also be used to indicate the type of file (plain, directory, pipe, socket, and so on) and various other special features. If the permissions are for a directory, the meaning of the execute bit changes; when set the directory can be searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fee9f7e91cb52bc0540f6845e231442b0c62ee" translate="yes" xml:space="preserve">
          <source>The person responsible for this domain name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acab5f1e6922c7a7d0b37b345bdf64d570719912" translate="yes" xml:space="preserve">
          <source>The platform for this ruby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6f8274b100b760578bb465f2a5cfc61a906e46" translate="yes" xml:space="preserve">
          <source>The platform identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1f24dcc206557e3a8172e934cb3212d5d96b19" translate="yes" xml:space="preserve">
          <source>The plugins should declare that they handle a command through this helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6079cef90c486623b9c7dd07fd1b3e3179503cf" translate="yes" xml:space="preserve">
          <source>The plugins should declare that they provide a installation source through this helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15154a1255ccdfd58411609bd22eeb12796f41f1" translate="yes" xml:space="preserve">
          <source>The port number of the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae83665d0c51a4b3c8cdc93a67735bc37f8bde6" translate="yes" xml:space="preserve">
          <source>The port number to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c7d006bf067113dec2111ac651e823102bdff0" translate="yes" xml:space="preserve">
          <source>The port of the proxy server, if one is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff540a27876c41eb0bf8f8edb15a983c65338338" translate="yes" xml:space="preserve">
          <source>The port on this target host of this service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f5b5db960bbd5758a6d4947b08b6484b6d36c2" translate="yes" xml:space="preserve">
          <source>The port that &lt;a href=&quot;ringfinger&quot;&gt;&lt;code&gt;RingFinger&lt;/code&gt;&lt;/a&gt; will send query packets to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457a7a1451a410ede91de12f869ecb84279819c1" translate="yes" xml:space="preserve">
          <source>The port, socktype, protocol of the result is filled by zero. So, it is not appropriate to create a socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a2186e15322a1f038c71b29f22ca062dc6c45c" translate="yes" xml:space="preserve">
          <source>The portion of the path that does not make use of the slash '/'. The path typically refers to an absolute path or an opaque part. (See RFC2396 Section 3 and 5.2.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62900790bf8e258208773edf7ce1b0534fae9a1a" translate="yes" xml:space="preserve">
          <source>The positional arguments for the message follow the method name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3eaa714a98563fca46e654c10d88ee52dddb4b" translate="yes" xml:space="preserve">
          <source>The precision of the result value depends on the type of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400d33b7ea6235c9a2ace1b0c07192d7021a64f0" translate="yes" xml:space="preserve">
          <source>The preference for this &lt;a href=&quot;mx&quot;&gt;&lt;code&gt;MX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac81125b454812a7e3b00c68df74ea10fa2efc21" translate="yes" xml:space="preserve">
          <source>The preferred local date and time representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8ebf110f332ce011d083fd018fd7816c36f8d2" translate="yes" xml:space="preserve">
          <source>The prefix and suffix of the name of the directory is specified by the optional first argument, &lt;em&gt;prefix_suffix&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa7d59418034d4e745a54b5f2e40e3c7f2092eb" translate="yes" xml:space="preserve">
          <source>The prepended modules from the refinement for &lt;code&gt;C&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f67d3707b0b86068f946d0504a808f4bd3d2905" translate="yes" xml:space="preserve">
          <source>The prepended modules of &lt;code&gt;C&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530e95813537ca24caca69f99b74a6f2fe53b8a8" translate="yes" xml:space="preserve">
          <source>The prepended modules of &lt;code&gt;R&lt;/code&gt; in reverse order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7945d5b92c6071692fc2ca256edcfbbc6e7b4fa" translate="yes" xml:space="preserve">
          <source>The primary e-mail address of the URL, as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4568679c1b0945a1cd1f5e3acaeb06fa51e015f" translate="yes" xml:space="preserve">
          <source>The primary interface to this library. Use to setup delegation when defining your class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e14329c0060f5c5a1055ee9d2b532d151843256" translate="yes" xml:space="preserve">
          <source>The primary local dRuby server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7224ede03972e588a62e6e6244aabb694697fb" translate="yes" xml:space="preserve">
          <source>The primary read method for wrapped Strings and IOs, a single row is pulled from the data source, parsed and returned as an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of fields (if header rows are not used) or a &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; (when header rows are used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1819895b08ef7a2b0e9116fd8a046b1b1132e539" translate="yes" xml:space="preserve">
          <source>The primary use of this method (as opposed to &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;) is probably to set debugging (#set_debug_output) or ESMTP (#esmtp=), which must be done before the session is started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0789cf0556c72e4c3ad373cb5d073457370968be" translate="yes" xml:space="preserve">
          <source>The primary write method for wrapped Strings and IOs, &lt;code&gt;row&lt;/code&gt; (an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt;) is converted to &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; and appended to the data source. When a &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; is passed, only the row's fields() are appended to the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56f0b8f435c8fa9f49368b6a41dd600d0e41794" translate="yes" xml:space="preserve">
          <source>The prime (an &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;) of the Diffie-Hellman parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e107b9e0e308e4bb29cc43d4a8bb0ab670142e4" translate="yes" xml:space="preserve">
          <source>The priority levels, in descending order, are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6210aca4d4a30353c5cd8151287339e66211a76" translate="yes" xml:space="preserve">
          <source>The priority mask persists through calls to open() and close().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abba2a0dd12993af4fa355c6651820f926add4b5" translate="yes" xml:space="preserve">
          <source>The priority of this target host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49fb359ea679d5b61a8b476c6806c3e89a2cca6" translate="yes" xml:space="preserve">
          <source>The private key for &lt;em&gt;certificate&lt;/em&gt;. An instance of &lt;a href=&quot;../pkey/pkey&quot;&gt;&lt;code&gt;OpenSSL::PKey::PKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e06c9f894ca718c6533e9e4eb09a8442b4db3e" translate="yes" xml:space="preserve">
          <source>The process id of the process to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaac0d94ff20444e0e5f5f9eaeefc04d734be7a2" translate="yes" xml:space="preserve">
          <source>The process identifier for the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada6f924e601e2a86df5e933b32f7afa93f1f3ca" translate="yes" xml:space="preserve">
          <source>The process number of the Ruby running this script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a14599bbd2f916c1eeda76af2e2a1ec95341ce" translate="yes" xml:space="preserve">
          <source>The progname configured, or passed to the logger method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0ed99396f62c9df6bb8aae76ccf321fc12981b" translate="yes" xml:space="preserve">
          <source>The protocol for &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; over an SSL socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802421a257350d9ecd6875bd590f9b137bb89655" translate="yes" xml:space="preserve">
          <source>The protocol instance returned by &lt;a href=&quot;drbprotocol#method-i-open&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; must have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6699ff6d2db683aa91a10e0f38be05ca02551329" translate="yes" xml:space="preserve">
          <source>The protocol instance returned by &lt;a href=&quot;drbprotocol#method-i-open_server&quot;&gt;&lt;code&gt;open_server()&lt;/code&gt;&lt;/a&gt;.accept() must have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd789da90f5f778600cf8bde1e25dd31f7db22d" translate="yes" xml:space="preserve">
          <source>The protocol instance returned by &lt;a href=&quot;drbprotocol#method-i-open_server&quot;&gt;&lt;code&gt;open_server&lt;/code&gt;&lt;/a&gt; must have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90488c27bad643100c7f6df0e063fe5c3b5c15b" translate="yes" xml:space="preserve">
          <source>The protocol-defined priority for all packets on this socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf23ecc2191c77d059ee8b92d567b9d89cd0c9d0" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;block&lt;/code&gt; is passed a header and field for each pair in the row and expected to return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on whether the pair should be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310cf35b0eafaa3b002ce9358161dc318009db57" translate="yes" xml:space="preserve">
          <source>The public key infrastructure (PKI) model relies on trusted certificate authorities (&amp;ldquo;root CAs&amp;rdquo;) that issue these certificates, so that end users need to base their trust just on a selected few authorities that themselves again vouch for subordinate CAs issuing their certificates to end users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e3cff746d0b341e483381f7627b1c5e4eb2a02" translate="yes" xml:space="preserve">
          <source>The public_key portion of the certificate must contain a valid public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f110f55fd959c5e5afa44c1cdba8507d00eed545" translate="yes" xml:space="preserve">
          <source>The purpose of using base64 to encode data is that it translates any binary data into purely printable characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944e50ea3712ab54d77adb31079f950e8026e75c" translate="yes" xml:space="preserve">
          <source>The quotient is rounded toward negative infinity, as shown in the following table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0502e1943b206623abd789b6236a2c4e8728ec" translate="yes" xml:space="preserve">
          <source>The quotient q is (a/b).floor, and the modulus is the amount that must be added to q * b to get a.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eceb8a1459799a15da529241773608d5b620f1" translate="yes" xml:space="preserve">
          <source>The range is 0-65535.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fa74a94c80c06b035c32406725a0b50d5483d7" translate="yes" xml:space="preserve">
          <source>The raw &lt;a href=&quot;ipv4&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; address as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75141d494dfa8a89912be937b41ace0c3f700f2f" translate="yes" xml:space="preserve">
          <source>The raw &lt;a href=&quot;ipv6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; address as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494691dcf532f6ba9aa780c000ed5ee0d404fbe8" translate="yes" xml:space="preserve">
          <source>The raw altitude</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c262e6f4ad8708291e829b0866f12d9bdc18367" translate="yes" xml:space="preserve">
          <source>The raw coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de606ae740ce759c8111a78273b9b48004e31c0" translate="yes" xml:space="preserve">
          <source>The raw size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03854271b9f622464185970d508f078955ab7a2e" translate="yes" xml:space="preserve">
          <source>The reason this block was terminated: :break, :redo, :retry, :next, :return, or :noreason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac545a4412cb5b3920eeb169174870d4dc0fb9f2" translate="yes" xml:space="preserve">
          <source>The recommended way to handle non-idempotent requests is the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5022b69f6cbf29d3dd7f3d6fc5ab1a1e598d4f59" translate="yes" xml:space="preserve">
          <source>The refinement for &lt;code&gt;C&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdc20d7c56b796d25c43bfdbf0f52b9400e87a3" translate="yes" xml:space="preserve">
          <source>The regex marking a line as a comment. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683d8868edbb5f9a98ae9c3561557f3dc3bd4ada" translate="yes" xml:space="preserve">
          <source>The regular expression may be followed by flags which adjust the matching behavior of the regular expression. The &amp;ldquo;i&amp;rdquo; flag makes the regular expression case-insensitive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c83f9113492ddc8b3be962724cd680fba8d7ef" translate="yes" xml:space="preserve">
          <source>The relative path to the Ruby file where the instruction sequence was loaded from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f75fe2321874d763b8ecdf657013d99aa5d096e" translate="yes" xml:space="preserve">
          <source>The release date string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f735854555f0656bdbf008200f902ed38241f96" translate="yes" xml:space="preserve">
          <source>The remaining arguments are used for &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; authentication, if required or desired. &lt;code&gt;user&lt;/code&gt; is the account name; &lt;code&gt;secret&lt;/code&gt; is your password or other authentication token; and &lt;code&gt;authtype&lt;/code&gt; is the authentication type, one of :plain, :login, or :cram_md5. See the discussion of &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; Authentication in the overview notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878f510e58a0f807db29902e73e6cb10bebf6b8d" translate="yes" xml:space="preserve">
          <source>The request types &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; supports are listed below in the section &amp;ldquo;HTTP Request Classes&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d625ca680d7b6dcafd05cc136b0a94a5c6f6cf62" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;precision&lt;/code&gt; parameter is used to determine the number of significant digits for the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f740cac76122348086b1aa4f279c56a25aa04dcc" translate="yes" xml:space="preserve">
          <source>The reserved multicast group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a765f80cd0f99d5a7b05b625ebd34462efeb748" translate="yes" xml:space="preserve">
          <source>The responder ID is based on the key name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5d1a5b52c7fa713c43f708a0423e2f725a2040" translate="yes" xml:space="preserve">
          <source>The responder ID is based on the public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1611f68f48bd3ce00e85f1e334bfdb47c255a768" translate="yes" xml:space="preserve">
          <source>The response contains the status information (success/fail). We can display the status as a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b257977b122c3f1ec3bf2a3227594900ce4433" translate="yes" xml:space="preserve">
          <source>The response that caused this error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0074262c3f4cc23e922ff2cc06737b9f1b130a12" translate="yes" xml:space="preserve">
          <source>The rest of the methods are adequately described in their own documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db3c3c177474b6eeb0f7460eb5eec402987a492" translate="yes" xml:space="preserve">
          <source>The result contains 122 random bits (15.25 random bytes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dda46bf90b304e048e1187c431d0aa736a22bb" translate="yes" xml:space="preserve">
          <source>The result enumerator yields the chunked elements as an array. So &lt;code&gt;each&lt;/code&gt; method can be called as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c39e4a1b8e30e61e5b51f25f52214640fa6d842" translate="yes" xml:space="preserve">
          <source>The result inherits any tainting in the original string or any supplied replacement string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0ebf1761072f53d4d5a5892243977956c211d7" translate="yes" xml:space="preserve">
          <source>The result is an array of conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3623bb74bc6d0291d171fd6adff5bdf83f9a3afa" translate="yes" xml:space="preserve">
          <source>The result is highly platform dependent. So &lt;a href=&quot;encoding#method-c-find&quot;&gt;&lt;code&gt;Encoding.find(Encoding.locale_charmap)&lt;/code&gt;&lt;/a&gt; may cause an error. If you need some encoding object even for unknown locale, &lt;a href=&quot;encoding#method-c-find&quot;&gt;&lt;code&gt;Encoding.find&lt;/code&gt;&lt;/a&gt;(&amp;ldquo;locale&amp;rdquo;) can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a37760e60d8435574be8f3b0b04a7cf68726ce7" translate="yes" xml:space="preserve">
          <source>The result is intended as the number of processes to use all available processors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf343cbc537abd68400b45ce3330c2ecee93ec6b" translate="yes" xml:space="preserve">
          <source>The result is not guaranteed to be stable. When the comparison of two elements returns &lt;code&gt;0&lt;/code&gt;, the order of the elements is unpredictable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70060c815babac774b02701417982ec3c0961885" translate="yes" xml:space="preserve">
          <source>The result is not guaranteed to be stable. When two keys are equal, the order of the corresponding elements is unpredictable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51adb6bfd80ee1244f29c873f3807d895098a00" translate="yes" xml:space="preserve">
          <source>The result may contain 0-9 and a-f.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be27e361a9c46221281cc5fc1b8dca7566d7e467" translate="yes" xml:space="preserve">
          <source>The result may contain A-Z, a-z and 0-9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a77460dbae1446c88da76a5cd8c83121644d32" translate="yes" xml:space="preserve">
          <source>The result may contain A-Z, a-z, 0-9, &amp;ldquo;+&amp;rdquo;, &amp;ldquo;/&amp;rdquo; and &amp;ldquo;=&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b379840e8e8817890e227b6e1aae2773817a6de6" translate="yes" xml:space="preserve">
          <source>The result may contain A-Z, a-z, 0-9, &amp;ldquo;-&amp;rdquo; and &amp;ldquo;_&amp;rdquo;. &amp;ldquo;=&amp;rdquo; is also used if &lt;em&gt;padding&lt;/em&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c91e2a60d5bcff09c54ec90806243a3fdb9d58c" translate="yes" xml:space="preserve">
          <source>The result may contain any byte: &amp;ldquo;x00&amp;rdquo; - &amp;ldquo;xff&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5844629cda9aeb43083fb0624ca5a2da4094f8ab" translate="yes" xml:space="preserve">
          <source>The result may contain the current directory &lt;code&gt;#&amp;lt;Pathname:.&amp;gt;&lt;/code&gt; and the parent directory &lt;code&gt;#&amp;lt;Pathname:..&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b8d38c55a5334237a0ec6c6de4154d1aab92b1" translate="yes" xml:space="preserve">
          <source>The result may contain whatever characters are in the source array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7153fee5077a91bad7c87d7c2fdc9589611158" translate="yes" xml:space="preserve">
          <source>The result might be smaller number than physical cpus especially when ruby process is bound to specific cpus. This is intended for getting better parallel processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601dfbda9d7e30e3397b728f9ff9ef08e9c4e348" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;gt; NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886b5a8bd1ef5b4110176e104cec267a49e667ee" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;gt;= NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcbd8c0fc789b53709518345a11cc8000bcb2f2" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;lt; NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786ba3077efdc8923c5d5201f8c4b71bc9db7db9" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;lt;= NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c55b05befdb109338fa881d72586ae1bf2be676" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;lt;=&amp;gt; NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f88c85b3bf3e6dc9f4bd8012b7eced5570ff0b" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN == NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8b672f74cd1ecf28ee6d049f42826ac0bdb96b" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN.eql?(NaN)&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6e14db4df9967ef025d737fa63ffe0b8fd80dd" translate="yes" xml:space="preserve">
          <source>The result of a &lt;code&gt;while&lt;/code&gt; loop is &lt;code&gt;nil&lt;/code&gt; unless &lt;code&gt;break&lt;/code&gt; is used to supply a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8881ad2534071bf408d1937dfcb14620d7aa7bc0" translate="yes" xml:space="preserve">
          <source>The result of calling &lt;code&gt;foo&lt;/code&gt; is this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938c99bd54c4088d23750bb0ba7bbb18c1b3a9cc" translate="yes" xml:space="preserve">
          <source>The result value of a &lt;code&gt;case&lt;/code&gt; expression is the last value executed in the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ca4b3928ec3a1399315322ab5e6685bfb28a11" translate="yes" xml:space="preserve">
          <source>The result value of a &lt;code&gt;for&lt;/code&gt; loop is the value iterated over unless &lt;code&gt;break&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29504225cc64a4867eccbedf16dd6472cbaf4e9" translate="yes" xml:space="preserve">
          <source>The result value of an &lt;code&gt;if&lt;/code&gt; expression is the last value executed in the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d786453b3b8fc68f28c9ef2a60408ad92daad0f" translate="yes" xml:space="preserve">
          <source>The result value of an &lt;code&gt;unless&lt;/code&gt; expression is the last value executed in the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01be55a0c09b1d115faa58cff213ed7e949d0a99" translate="yes" xml:space="preserve">
          <source>The result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949ba83fd5c7f7f7d8712ebdd6053790677d9fa7" translate="yes" xml:space="preserve">
          <source>The results contains just the names in the directory, without any trailing slashes or recursive look-up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269ee8990d66824e120090419666080479595eae" translate="yes" xml:space="preserve">
          <source>The retrieved or created session is automatically added to &lt;code&gt;request&lt;/code&gt; as a cookie, and also to its &lt;code&gt;output_hidden&lt;/code&gt; table, which is used to add hidden input elements to forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2a39e4f6ff8d02541a6185f8dfc3ce5f715d28" translate="yes" xml:space="preserve">
          <source>The return value can be a rational number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e73f5890fe900320843256392f2eaaefbfa1f5a" translate="yes" xml:space="preserve">
          <source>The return value is 4-elements array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0a4bc45f538b1a1bc75af86c6b2c47b3c4df0c" translate="yes" xml:space="preserve">
          <source>The return value is &lt;code&gt;true&lt;/code&gt; if the signature is valid, &lt;code&gt;false&lt;/code&gt; otherwise. &lt;a href=&quot;rsaerror&quot;&gt;&lt;code&gt;RSAError&lt;/code&gt;&lt;/a&gt; will be raised if an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b92382b5c01a9dba3c757f47680a3540761eae" translate="yes" xml:space="preserve">
          <source>The return value is a hash of attributes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6654c4ae9d05b71119df894579c8645817a73a50" translate="yes" xml:space="preserve">
          <source>The return value is a hash which has 5 keys at least:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860b6d7cf06ced607e0578a658e3b599b2a5595b" translate="yes" xml:space="preserve">
          <source>The return value is a string or nil. nil means no configuration-defined value. (confstr() returns 0 but errno is not set.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446ecfb332ff5649ed77ea678300d2db7bc5e276" translate="yes" xml:space="preserve">
          <source>The return value is a value from block execution in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45909ab09002db03a38b5b6668d655a14a5a73a1" translate="yes" xml:space="preserve">
          <source>The return value is always &lt;code&gt;true&lt;/code&gt; since every private key is also a public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a7a3436b3aee9baa4723ee6e7397252fb69ac7" translate="yes" xml:space="preserve">
          <source>The return value is an array of &lt;a href=&quot;imap#FetchData&quot;&gt;&lt;code&gt;Net::IMAP::FetchData&lt;/code&gt;&lt;/a&gt; or nil (instead of an empty array) if there is no matching message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464c995fb91ced589bff76fe388f634513e92dc4" translate="yes" xml:space="preserve">
          <source>The return value is an array of &lt;a href=&quot;imap#FetchData&quot;&gt;&lt;code&gt;Net::IMAP::FetchData&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6658ff7e1a622d2419fa25110f9e26f33306bf70" translate="yes" xml:space="preserve">
          <source>The return value is an array of &lt;code&gt;Net::IMAP::MailboxList&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83168450a53003e6e76a76e0f39d881415a214cf" translate="yes" xml:space="preserve">
          <source>The return value is an integer or nil. nil means indefinite limit. (fpathconf() returns -1 but errno is not set.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f261b9a45621d8d751cb73e3b38db8ec94fd15" translate="yes" xml:space="preserve">
          <source>The return value is an integer or nil. nil means indefinite limit. (sysconf() returns -1 but errno is not set.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7b4c17e4558d6ebd2902ebcbf8f5bc1ad538be" translate="yes" xml:space="preserve">
          <source>The return value is one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955ce2cb752553a3be477acaac46dd773c369c30" translate="yes" xml:space="preserve">
          <source>The return value of &lt;a href=&quot;socket#method-c-udp_server_sockets&quot;&gt;&lt;code&gt;Socket.udp_server_sockets&lt;/code&gt;&lt;/a&gt; is appropriate for the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d985364d4782a21c95c2a87805400361921421cf" translate="yes" xml:space="preserve">
          <source>The return value of this method is passed to the next event handler (as of &lt;a href=&quot;../enumerable#method-i-inject&quot;&gt;&lt;code&gt;Enumerable#inject&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61df8f3b205f417925146bfd828ab200ffb8ea00" translate="yes" xml:space="preserve">
          <source>The return value, &lt;em&gt;numbytes_sent&lt;/em&gt; is an integer which is the number of bytes sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd253583ed854de7b335229bceeb1d292925ecc" translate="yes" xml:space="preserve">
          <source>The returned array may contain other nodes or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e272be68b7c11caccb5dff2ac0149cca87110bd" translate="yes" xml:space="preserve">
          <source>The role of &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; for parsing tagged values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c94880e54257414feb0e7cbced0ff27e235a89d" translate="yes" xml:space="preserve">
          <source>The root directory needed for some actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613d7b0f5e7400e6a852ef7bb7a18ec323142b3a" translate="yes" xml:space="preserve">
          <source>The ruby version string (VERSION was deprecated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9a97a3ce420cc71aad2fc0137f5602a7c510f8" translate="yes" xml:space="preserve">
          <source>The running version of ruby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9a895df6cea75d8f73a02630772eeec9894ccc" translate="yes" xml:space="preserve">
          <source>The safe level for this server. This is a number corresponding to $SAFE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afc8c210b7d21f6fca72d6d137fd7b3bf4ddf11" translate="yes" xml:space="preserve">
          <source>The safe level of the DRbServer. The attribute sets $SAFE for methods performed in the main_loop. Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfc4f095372c6a25117b6bf3f78dfd612519c9c" translate="yes" xml:space="preserve">
          <source>The salt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177966c8d854732e3cc928f0a8461be3faf4d649" translate="yes" xml:space="preserve">
          <source>The salt. Salts prevent attacks based on dictionaries of common passwords and attacks based on rainbow tables. It is a public value that can be safely stored along with the password (e.g. if the derived value is used for password storage).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4b6bbf13387f0563cfa2dd3804ecab6b86de2a" translate="yes" xml:space="preserve">
          <source>The same applies for `eql?` and `hash`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908871855e2cf190d2bb3fc092cb6ff61921605a" translate="yes" xml:space="preserve">
          <source>The same is true for &lt;code&gt;unless&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7440d47e77013c0e5736162bdc213dabf0ad8e40" translate="yes" xml:space="preserve">
          <source>The same is true for a &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;module&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fea6921e0cd8d75824bf6f0e192aeb87b865e8" translate="yes" xml:space="preserve">
          <source>The same is true for constants:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e45f766c5c878e6e513f44ae28f15105ba0e40" translate="yes" xml:space="preserve">
          <source>The same number will be returned on all calls to &lt;code&gt;object_id&lt;/code&gt; for a given object, and no two active objects will share an id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a6405881dc2f5056b5c9543c1ee028c3ed08ad" translate="yes" xml:space="preserve">
          <source>The scanner's state of the current token. This value is the bitwise OR of zero or more of the &lt;code&gt;Ripper::EXPR_*&lt;/code&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f008e0a95afe7ebe13258099e961d390c7a95c1" translate="yes" xml:space="preserve">
          <source>The script encoding of the current file. See &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3febca7b10c0bad64fef71a1321befc0cf51fd0e" translate="yes" xml:space="preserve">
          <source>The second and third form take a single argument which is either an array of key-value pairs or an object convertible to a hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9027d2747de8b79fef5373887a0b704f9dfcbc" translate="yes" xml:space="preserve">
          <source>The second form calculates &lt;code&gt;bns[0] * point + bns[1] * points[0] + ... + bns[-1] * points[-1] + bn2 * G&lt;/code&gt;. &lt;em&gt;bn2&lt;/em&gt; may be omitted. &lt;em&gt;bns&lt;/em&gt; must be an array of &lt;a href=&quot;../../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;points&lt;/em&gt; must be an array of &lt;a href=&quot;point&quot;&gt;&lt;code&gt;OpenSSL::PKey::EC::Point&lt;/code&gt;&lt;/a&gt;. Please note that &lt;code&gt;points[0]&lt;/code&gt; is not multiplied by &lt;code&gt;bns[0]&lt;/code&gt;, but &lt;code&gt;bns[1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134600606b743f60938e64e67aa777bf381d7655" translate="yes" xml:space="preserve">
          <source>The second form calls the instance method &lt;code&gt;constants&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0d93041cc340e416077940c02f2ce523fa6ea3" translate="yes" xml:space="preserve">
          <source>The second form creates a copy of the array passed as a parameter (the array is generated by calling &lt;a href=&quot;array#method-i-to_ary&quot;&gt;&lt;code&gt;to_ary&lt;/code&gt;&lt;/a&gt; on the parameter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f9f9fc2bcb390272a27de606298ed3fd378639" translate="yes" xml:space="preserve">
          <source>The second form returns the &lt;em&gt;n&lt;/em&gt;th field in this &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; object. &lt;em&gt;n&lt;/em&gt; can be a string or symbol to reference a named capture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762574c32754fb703cb15ad7f6655dfae4e028da" translate="yes" xml:space="preserve">
          <source>The second value is a string representing the significant digits of the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, with no leading zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d1c94210b03ddb5240f6ead09da06d6a45bc5f" translate="yes" xml:space="preserve">
          <source>The second visibility is &lt;code&gt;protected&lt;/code&gt;. When calling a protected method the sender must be a subclass of the receiver or the receiver must be a subclass of the sender. Otherwise a &lt;a href=&quot;../nomethoderror&quot;&gt;&lt;code&gt;NoMethodError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cbe9c9af17732a9920f89321ba89fba353d4b5" translate="yes" xml:space="preserve">
          <source>The selectors may be either integer indices or ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e892f1a88443435e41ed2970c8ec762e72ed89a0" translate="yes" xml:space="preserve">
          <source>The semantics of a piece of advice are platform-dependent. See &lt;em&gt;man 2 posix_fadvise&lt;/em&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38084c63337b4e84b40209aa7c4f29289b806f19" translate="yes" xml:space="preserve">
          <source>The sender's credentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b339e5612fbcf780e022dd63f72d24bef552e20" translate="yes" xml:space="preserve">
          <source>The sequence number of the message on the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6fa74b56d3fc39e4a7e9ef3403c117b2a171e5" translate="yes" xml:space="preserve">
          <source>The sequence number of this message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3948d111552eef3a5ea0d7ceda05c9810f71b4c" translate="yes" xml:space="preserve">
          <source>The server completion result response indicates the success or failure of the operation. It is tagged with the same tag as the client command which began the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b5960043449a44f31680f711cce21469e88adf" translate="yes" xml:space="preserve">
          <source>The server software, returned as the Server header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bcc31ea63b622ebb4a10d4e8c82a5eaf557373" translate="yes" xml:space="preserve">
          <source>The server will immediately start running in its own thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84968745d462535ec5cc5af9bd7ded188d776d59" translate="yes" xml:space="preserve">
          <source>The server's last response code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f5ac745845bfaac0121947931294477a569f78" translate="yes" xml:space="preserve">
          <source>The server's last response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648557ee7223c4b84fd91272c5691a12b6da891f" translate="yes" xml:space="preserve">
          <source>The server's welcome message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e3c8501fb8a056955cb662fdcc5f5c8682a244" translate="yes" xml:space="preserve">
          <source>The service specified is a datagram service (looks up UDP ports)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2caaa8e779037defa74a3a2df59c81185ebce5e9" translate="yes" xml:space="preserve">
          <source>The session id is a secure random number by &lt;a href=&quot;../securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; if possible, otherwise an SHA512 hash based upon the time, a random number, and a constant string. This routine is used internally for automatically generated session ids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ae4b924c666a2d3621037f6260158797e76344" translate="yes" xml:space="preserve">
          <source>The set of all prime numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9476a92a4d072d345aa9a1a4d9c3229e779ac062" translate="yes" xml:space="preserve">
          <source>The set of special characters and their escaped values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243a577dc0c34d63da9788175c801936f7e3d428" translate="yes" xml:space="preserve">
          <source>The shellwords() function was originally a port of shellwords.pl, but modified to conform to the &lt;a href=&quot;shell&quot;&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/a&gt; &amp;amp; Utilities volume of the IEEE Std 1003.1-2008, 2016 Edition [1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0c56f66bc0c9595548c7055fa6aaab81b42653" translate="yes" xml:space="preserve">
          <source>The short name of the &lt;a href=&quot;objectid&quot;&gt;&lt;code&gt;ObjectId&lt;/code&gt;&lt;/a&gt;, as defined in &amp;lt;openssl/objects.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e22815bb3ef1330feedfc154ca65fe158c29b2f" translate="yes" xml:space="preserve">
          <source>The similarity between method and local variable names can lead to confusing code, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c228a945042fc815748acd7657638c9c69177305" translate="yes" xml:space="preserve">
          <source>The simplest &lt;code&gt;if&lt;/code&gt; expression has two parts, a &amp;ldquo;test&amp;rdquo; expression and a &amp;ldquo;then&amp;rdquo; expression. If the &amp;ldquo;test&amp;rdquo; expression evaluates to a true then the &amp;ldquo;then&amp;rdquo; expression is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043dd7b3fc67780935bfc3757e6587f9349ac721" translate="yes" xml:space="preserve">
          <source>The simplest way to do this is via cookies. The &lt;a href=&quot;session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt; class provides transparent support for session id communication via cookies if the client has cookies enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666695b9b968cc65b9640bd8df916d7a0bf7ac46" translate="yes" xml:space="preserve">
          <source>The simplest way to send output to the HTTP client is using the &lt;a href=&quot;cgi#method-i-out&quot;&gt;&lt;code&gt;out()&lt;/code&gt;&lt;/a&gt; method. This takes the HTTP headers as a hash parameter, and the body content via a block. The headers can be generated as a string using the &lt;a href=&quot;cgi#method-i-http_header&quot;&gt;&lt;code&gt;http_header()&lt;/code&gt;&lt;/a&gt; method. The output stream can be written directly to using the &lt;a href=&quot;cgi#method-i-print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f3314ce772f28e9aa9b6663641a9b7b65e1bd9" translate="yes" xml:space="preserve">
          <source>The single argument to scanf is a format string, which generally includes one or more conversion specifiers. Conversion specifiers begin with the percent character ('%') and include information about what scanf should next scan for (string, decimal number, single character, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2234c6567f0ac304dff254da33e11e88ea47df50" translate="yes" xml:space="preserve">
          <source>The singleton class (also known as the metaclass or eigenclass) of an object is a class that holds methods for only that instance. You can access the singleton class of an object using &lt;code&gt;class &amp;lt;&amp;lt; object&lt;/code&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bd4ebcd1d274db7aa8eadcdb9a80563ce84c7f" translate="yes" xml:space="preserve">
          <source>The size and endian is dependent on the host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876de9487fe49c1b3ef6881f428600f6d2fde4b3" translate="yes" xml:space="preserve">
          <source>The size and endian is dependent on the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3285feff6e41b13800549f689fa18fbef777b72" translate="yes" xml:space="preserve">
          <source>The size is dependent on the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f1d15cf63d435b66f85220dba136703d3c690c" translate="yes" xml:space="preserve">
          <source>The size of the tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130216d5131e9a81b8b260bc2c7dc94a095dbce7" translate="yes" xml:space="preserve">
          <source>The smallest negative exponent in a double-precision floating point where 10 raised to this power minus 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d457655b182e51107b007431f264ede030660" translate="yes" xml:space="preserve">
          <source>The smallest positive normalized number in a double-precision floating point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330f2891e2305b7d9a66a001a05e49ccd953540a" translate="yes" xml:space="preserve">
          <source>The smallest possible exponent value in a double-precision floating point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05279057c3ed9e870bcb41005af27060fc9dcc0f" translate="yes" xml:space="preserve">
          <source>The sn (short names) and ln (long names) are defined in &amp;lt;openssl/object.h&amp;gt; and &amp;lt;openssl/obj_mac.h&amp;gt;. They are textual representations of ASN.1 OBJECT IDENTIFIERs. Each supported digest algorithm has an OBJECT IDENTIFIER associated to it and those again have short/long names assigned to them. E.g. the OBJECT IDENTIFIER for SHA-1 is 1.3.14.3.2.26 and its sn is &amp;ldquo;SHA1&amp;rdquo; and its ln is &amp;ldquo;sha1&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb799a9bd535642e696d5a6eb3a94e68bd1faa6" translate="yes" xml:space="preserve">
          <source>The socket is &lt;strong&gt;not&lt;/strong&gt; closed when the block returns. So application should close it explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4370c9d579182dc1c9e68e7288d2078b316c5e4d" translate="yes" xml:space="preserve">
          <source>The socket is &lt;strong&gt;not&lt;/strong&gt; closed when the block returns. So application should close it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b8a9ba8cfdddc1ccfc3b5feb0989f20d0cc2a8" translate="yes" xml:space="preserve">
          <source>The sources objects are constructed from Gemfile as well as from lockfile. To converge the sources, it is necessary that they match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8c46341ab917027b6253dd8f0cc7f7d6769463" translate="yes" xml:space="preserve">
          <source>The special methods &lt;a href=&quot;array#method-i-first&quot;&gt;&lt;code&gt;first&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-last&quot;&gt;&lt;code&gt;last&lt;/code&gt;&lt;/a&gt; will return the first and last elements of an array, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6348d6ce53e85e94ebcc1227c122c6c6b342cce" translate="yes" xml:space="preserve">
          <source>The specific value returned indicates the type and sign of the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6396ac4dbd706364f88cd49323296611c687dcf" translate="yes" xml:space="preserve">
          <source>The spherical size of this &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; in meters using scientific notation as 2 integers of XeY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3671bc537180f1ac5770d7b60d75dbe75db54db0" translate="yes" xml:space="preserve">
          <source>The standard &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; environmental variables are available as read-only attributes of a &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; object. The following is a list of these variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb180d2dd46f01111aca4cba7475c4d529b908f" translate="yes" xml:space="preserve">
          <source>The standard error output. The default value for $stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effa81bb87993995bbea045f6f79bbd98f9ac611" translate="yes" xml:space="preserve">
          <source>The standard input stream (stdin) can be specified by :in, 0 and STDIN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c293c33272090074c2056e664c2d489eda6e43ea" translate="yes" xml:space="preserve">
          <source>The standard input. The default value for $stdin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc6fb76b71aaf80e31065cf203338b49fbe269e" translate="yes" xml:space="preserve">
          <source>The standard output. The default value for $stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9840b0b92be5cb4dd1a6c324cb6ed674c4657119" translate="yes" xml:space="preserve">
          <source>The standard shell always means &lt;code&gt;&quot;/bin/sh&quot;&lt;/code&gt; on Unix-like systems, same as &lt;code&gt;ENV[&quot;RUBYSHELL&quot;]&lt;/code&gt; (or &lt;code&gt;ENV[&quot;COMSPEC&quot;]&lt;/code&gt; on Windows NT series), and similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827b3c6aedff5a34efa4dbb4525b37cad6b16231" translate="yes" xml:space="preserve">
          <source>The standard syntax to define a method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bf1362d2d61a93dc2b3a37d1fcf16dc02ce786" translate="yes" xml:space="preserve">
          <source>The start of an &lt;a href=&quot;html&quot;&gt;&lt;code&gt;HTML&lt;/code&gt;&lt;/a&gt; bold sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413525700edb080755b2b432fe85ccd3f309cd63" translate="yes" xml:space="preserve">
          <source>The start of an ANSI bold sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4d500f0843e787b49631f86a7207bc115fceb2" translate="yes" xml:space="preserve">
          <source>The status of the last executed child process. This value is thread-local.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd57b082f956b278c91ad4fc65da893142285dd2" translate="yes" xml:space="preserve">
          <source>The strategy is to first instantiate a &lt;a href=&quot;openssl/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; for encryption, and then to generate a random IV plus a key derived from the password using PBKDF2. PKCS #5 v2.0 recommends at least 8 bytes for the salt, the number of iterations largely depends on the hardware being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4baeda74dcefe3eb0a46c4a72071ee9cdf370431" translate="yes" xml:space="preserve">
          <source>The stream must be opened for writing. Each given object that isn't a string will be converted by calling its &lt;code&gt;to_s&lt;/code&gt; method. When called without arguments, prints the contents of &lt;code&gt;$_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a5e4ce64b33dbfabbd5142620444bbbec5f601" translate="yes" xml:space="preserve">
          <source>The stream must be opened for writing. If called with an array argument, writes each element on a new line. Each given object that isn't a string or array will be converted by calling its &lt;code&gt;to_s&lt;/code&gt; method. If called without arguments, outputs a single newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da5cbcc8c628b169cf20f6cc6f9f0c8cd971581" translate="yes" xml:space="preserve">
          <source>The string matched by the last successful match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3033ea20659a74d161afa7e8df5d3fb6d56ba03d" translate="yes" xml:space="preserve">
          <source>The string may be many lines long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51db9f909ba9ab830d343ba8e3948d1bfad4eb6" translate="yes" xml:space="preserve">
          <source>The string must be a valid cipher name like &amp;ldquo;AES-128-CBC&amp;rdquo; or &amp;ldquo;3DES&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd9ad425c4b4575a184338b0256f0b233cd2622" translate="yes" xml:space="preserve">
          <source>The string representation of &lt;code&gt;false&lt;/code&gt; is &amp;ldquo;false&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ae09feb0b03688ed80e47f8b93ec97fde55724" translate="yes" xml:space="preserve">
          <source>The string representation of &lt;code&gt;true&lt;/code&gt; is &amp;ldquo;true&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b859d81ce494183dacbc7eb0dc63e6662c6c8dc" translate="yes" xml:space="preserve">
          <source>The string to the left of the last successful match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca96e8bb755f611f6136c504bc7fb036fcc5866" translate="yes" xml:space="preserve">
          <source>The string to the right of the last successful match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5109f4a25e4ed2c940720c2c5c6706dc2a17b7ee" translate="yes" xml:space="preserve">
          <source>The string which represents the version of zlib.h</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb62f22a41ca05bba041026aff825a5e4c7ca061" translate="yes" xml:space="preserve">
          <source>The string will be deduplicated as long as it is not tainted, or has any instance variables set on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce3acd678afb49e780d3d1244b6469587b33cb1" translate="yes" xml:space="preserve">
          <source>The struct contains the following members:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d1d374bde1c1a93019a017ff0823f9a2212bca" translate="yes" xml:space="preserve">
          <source>The style of programming using &lt;code&gt;$_&lt;/code&gt; as an implicit parameter is gradually losing favor in the Ruby community.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e386e16fcecbb38a291cdfbc9b88e1da7bd4a11d" translate="yes" xml:space="preserve">
          <source>The superclass for all exceptions raised by Ruby/zlib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44aae61bc41b743bf3aa8dad6b6da94e26bc689" translate="yes" xml:space="preserve">
          <source>The supplied value must be a member of &lt;a href=&quot;getoptlong#ORDERINGS&quot;&gt;&lt;code&gt;GetoptLong::ORDERINGS&lt;/code&gt;&lt;/a&gt;. It alters the processing of options as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abd5db8aff4f9a9e733e7140122416e99f813e0" translate="yes" xml:space="preserve">
          <source>The supported constants depends on OS and version. Ruby provides following types of &lt;code&gt;clock_id&lt;/code&gt; if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a921411df1df731eb4ef56d3631b29da652be55" translate="yes" xml:space="preserve">
          <source>The symbols defined by this library will be made available for symbol resolution of subsequently loaded libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cc36e7aef82509ef12811e5db215205c9ae9ca" translate="yes" xml:space="preserve">
          <source>The syntax for adding a method to an object is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253d210c023eb6d912d2272874379a84d73a9e43" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; URIs is defined in RFC1738 section 3.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f772ea158df6202e773c5f6bf324e96bb12d39e6" translate="yes" xml:space="preserve">
          <source>The syntax of a format sequence is as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fe2c7060f1ba1bb12e04585f72669ae308cb97" translate="yes" xml:space="preserve">
          <source>The syslog package provides a Ruby interface to the POSIX system logging facility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14991bba54408f10e821c6ec438fe88c68c81eb0" translate="yes" xml:space="preserve">
          <source>The syslog protocol is standardized in RFC 5424.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897c7894332d715493b61a91967de78c1cccd0ab" translate="yes" xml:space="preserve">
          <source>The system has symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ad5069fd4ac71c3adaeeac31c5bf0f8dec58ec" translate="yes" xml:space="preserve">
          <source>The tag may only be retrieved after calling &lt;a href=&quot;cipher#method-i-final&quot;&gt;&lt;code&gt;Cipher#final&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc104c846382e3b427db172f8385defecdee3e42" translate="yes" xml:space="preserve">
          <source>The temporary file will be placed in the directory as specified by the &lt;code&gt;tmpdir&lt;/code&gt; parameter. By default, this is &lt;code&gt;Dir.tmpdir&lt;/code&gt;. When $SAFE &amp;gt; 0 and the given &lt;code&gt;tmpdir&lt;/code&gt; is tainted, it uses '/tmp' as the temporary directory. Please note that &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; values are tainted by default, and &lt;code&gt;Dir.tmpdir&lt;/code&gt;'s return value might come from environment variables (e.g. &lt;code&gt;$TMPDIR&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea8a588f5152563351d4e75481a10a17fc8dd5b" translate="yes" xml:space="preserve">
          <source>The tests for &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;elsif&lt;/code&gt; may have side-effects. The most common use of side-effect is to cache a value into a local variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9369ef15ea5d6bf1d9a54483e1b7d6a275237dfc" translate="yes" xml:space="preserve">
          <source>The text &lt;code&gt;sep&lt;/code&gt; is inserted if a line is not broken at this point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ab802cb543efc98bf34911c6d3ddedbea5ee4f" translate="yes" xml:space="preserve">
          <source>The text for parts of this document, especially the Description and Conversions sections, above, were adapted from the Linux Programmer's Manual manpage for scanf(3), dated 1995-11-01.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74c4d1deef7ec9cf482dc25f63c01ecf8f6068a" translate="yes" xml:space="preserve">
          <source>The third value is the base used for arithmetic (currently always 10) as an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77058f783b7d51f81f2f968b299e9d209edd788d" translate="yes" xml:space="preserve">
          <source>The third visibility is &lt;code&gt;private&lt;/code&gt;. A private method may not be called with a receiver, not even &lt;code&gt;self&lt;/code&gt;. If a private method is called with a receiver a &lt;a href=&quot;../nomethoderror&quot;&gt;&lt;code&gt;NoMethodError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c7a845112bad4843909d643923c6174b83e45e" translate="yes" xml:space="preserve">
          <source>The thread calling fork is the only thread in the created child process. fork doesn't copy other threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc1b9b311a372bc9a1269f61dbe23a6e1bf31cc" translate="yes" xml:space="preserve">
          <source>The thread to receive exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740a6a4458d4dc6b7d435a28d2d0426e01f4aa33" translate="yes" xml:space="preserve">
          <source>The three digit reply code of the &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7051bf4025955c3f90472b131a344273c2d243" translate="yes" xml:space="preserve">
          <source>The time on which the current content expires, as a &lt;code&gt;Time&lt;/code&gt; object, returned as the Expires header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf5c05e488e63e543da7a97bfc37daa8066256d" translate="yes" xml:space="preserve">
          <source>The times for some benchmarks depend on the order in which items are run. These differences are due to the cost of memory allocation and garbage collection. To avoid these discrepancies, the &lt;a href=&quot;benchmark#method-i-bmbm&quot;&gt;&lt;code&gt;bmbm&lt;/code&gt;&lt;/a&gt; method is provided. For example, to compare ways to sort an array of floats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8413cd3fb98b229ef04cfe3f55ca2e7c74afb2" translate="yes" xml:space="preserve">
          <source>The top-level class representing any ASN.1 object. When parsed by &lt;a href=&quot;../asn1#method-c-decode&quot;&gt;&lt;code&gt;ASN1.decode&lt;/code&gt;&lt;/a&gt;, tagged values are always represented by an instance of &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fa8573dbf297439909ff9f5c4aab877f0f0d8c" translate="yes" xml:space="preserve">
          <source>The total size of the integer is five bytes. The following four bytes are a positive little-endian integer. For compatibility with 32 bit ruby, only Fixnums less than 1073741824 should be represented this way. For sizes of stream objects full precision may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc30864a397114e3c24081df7aaeaeda1046e61" translate="yes" xml:space="preserve">
          <source>The total size of the integer is four bytes. The following three bytes are a positive little-endian integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a769bca98804728d8dcd90bf804dc75664efd584" translate="yes" xml:space="preserve">
          <source>The total size of the integer is three bytes. The following two bytes are a negative little-endian integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86816a71891216d6e721f15d7f53ebb0b1d67d5" translate="yes" xml:space="preserve">
          <source>The total size of the integer is three bytes. The following two bytes are a positive little-endian integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074f0712a2f9cfa0705002e34f4ea410010f91f6" translate="yes" xml:space="preserve">
          <source>The total size of the integer is two bytes. The following byte is a negative integer in the range of -1 through -256.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7413fefb6e49d16bb5a29e4908e4af143efb911a" translate="yes" xml:space="preserve">
          <source>The total size of the integer is two bytes. The following byte is a positive integer in the range of 0 through 255. Only values between 123 and 255 should be represented this way to save bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed8dd9c24d82b61d19244a187e32e5d34d6c530" translate="yes" xml:space="preserve">
          <source>The total size of the integer is two bytes. The following four bytes are a negative little-endian integer. For compatibility with 32 bit ruby, only Fixnums greater than -10737341824 should be represented this way. For sizes of stream objects full precision may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affbdda7d3852be42a5874524221546aea703f3f" translate="yes" xml:space="preserve">
          <source>The total size of the integer is two bytes. The following three bytes are a negative little-endian integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd7b58b03e8324d96b2d1678aaac8d65ac7b671" translate="yes" xml:space="preserve">
          <source>The total time used for garbage collection in seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0629d60ed141772a8ed6a53aecf034356260de0" translate="yes" xml:space="preserve">
          <source>The transactional behavior ensures that any changes succeed or fail together. This can be used to ensure that the data store is not left in a transitory state, where some values were updated but others were not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee59ca161dc5413142cf39239bc0466220750c41" translate="yes" xml:space="preserve">
          <source>The transport layer is responsible for opening client and server network connections and forwarding dRuby request across them. Normally, it uses &lt;a href=&quot;drb/drbmessage&quot;&gt;&lt;code&gt;DRb::DRbMessage&lt;/code&gt;&lt;/a&gt; internally to manage marshalling and unmarshalling. The transport layer is managed by &lt;a href=&quot;drb/drbprotocol&quot;&gt;&lt;code&gt;DRb::DRbProtocol&lt;/code&gt;&lt;/a&gt;. Multiple protocols can be installed in &lt;a href=&quot;drb/drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; at the one time; selection between them is determined by the scheme of a dRuby &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;. The default transport protocol is selected by the scheme 'druby:', and implemented by &lt;a href=&quot;drb/drbtcpsocket&quot;&gt;&lt;code&gt;DRb::DRbTCPSocket&lt;/code&gt;&lt;/a&gt;. This uses plain TCP/IP sockets for communication. An alternative protocol, using UNIX domain sockets, is implemented by &lt;a href=&quot;drb/drbunixsocket&quot;&gt;&lt;code&gt;DRb::DRbUNIXSocket&lt;/code&gt;&lt;/a&gt; in the file drb/unix.rb, and selected by the scheme 'drbunix:'. A sample implementation over HTTP can be found in the samples accompanying the main dRuby distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8b0f1745bd077a373d14f592ad68e3f4f37bf6" translate="yes" xml:space="preserve">
          <source>The type of the instruction sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04915302311c169daad683d15b81d00f2a2d649" translate="yes" xml:space="preserve">
          <source>The typical true value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab1a96e3bbff075925ee02721386ee284760c73" translate="yes" xml:space="preserve">
          <source>The underlying &lt;a href=&quot;../../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959e2cb4e619c45c4b99287d5c0b6591309b7da4" translate="yes" xml:space="preserve">
          <source>The underlying function, &lt;a href=&quot;process#method-c-clock_gettime&quot;&gt;&lt;code&gt;clock_gettime&lt;/code&gt;&lt;/a&gt;(), returns a number of nanoseconds. &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; object (IEEE 754 double) is not enough to represent the return value for &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt;&lt;code&gt;CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt;. If the exact nanoseconds value is required, use &lt;code&gt;:nanoseconds&lt;/code&gt; as the &lt;code&gt;unit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e3b0ab08811beec3bc5be7f7ff9b401ff68f1a" translate="yes" xml:space="preserve">
          <source>The unhandled condition in &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;unless&lt;/code&gt; expressions. See &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;control expressions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fce13e55b5c3094cfb37f575aa0e3afc025aed7" translate="yes" xml:space="preserve">
          <source>The update() method and the left-shift operator are overridden by each implementation subclass. (One should be an alias for the other)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f8a7eef3ff61cedaa7a2c3d118edd1dfc6fcac" translate="yes" xml:space="preserve">
          <source>The user does not have to directly deal with this object in normal use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4abad7e7f90e82df6446bca3cf8a31b48e214b" translate="yes" xml:space="preserve">
          <source>The username of the proxy server, if one is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db50a096e509cc8c163a353ce436d391826f42a" translate="yes" xml:space="preserve">
          <source>The value &amp;ldquo;bar&amp;rdquo; is returned for the thread local, where nil is returned for the fiber local. The fiber is executed in the same thread, so the thread local values are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3344c6da175ddf85078a57831a32642db6e863a" translate="yes" xml:space="preserve">
          <source>The value must be &lt;code&gt;:text&lt;/code&gt; or &lt;code&gt;:attr&lt;/code&gt;. If the value is &lt;code&gt;:text&lt;/code&gt;&lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; replaces undefined characters with their (upper-case hexadecimal) numeric character references. '&amp;amp;', '&amp;lt;', and '&amp;gt;' are converted to &amp;ldquo;&amp;amp;amp;&amp;rdquo;, &amp;ldquo;&amp;amp;lt;&amp;rdquo;, and &amp;ldquo;&amp;amp;gt;&amp;rdquo;, respectively. If the value is &lt;code&gt;:attr&lt;/code&gt;, &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; also quotes the replacement result (using '&amp;ldquo;'), and replaces '&amp;rdquo;' with &amp;ldquo;&amp;amp;quot;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82838477088055a993972181bb7ad3fe5794ef43" translate="yes" xml:space="preserve">
          <source>The value of :nameserver should be an address string or an array of address strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cca7f8d3fb8f4b781383a16cc67d5d36ed6675" translate="yes" xml:space="preserve">
          <source>The value of :nameserver_port should be an array of pair of nameserver address and port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8415a5696c58791177830d1e6fbd4a36d8bc2361" translate="yes" xml:space="preserve">
          <source>The value of the constant is returned if a definition is found, otherwise a &lt;code&gt;NameError&lt;/code&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f6e25155a9d698444c22a1a5d9280d40125d3a" translate="yes" xml:space="preserve">
          <source>The value of the integer is 0. No bytes follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6188dada8030b84c6a9fea1945e004b2d9e82a1b" translate="yes" xml:space="preserve">
          <source>The value of the optional mode argument can be used to determine how rounding is performed; see &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dfbda475ef2697b155e36586a32bd89393161a" translate="yes" xml:space="preserve">
          <source>The value sent in the Keep-Alive header. Defaults to 30. Not needed for HTTP/1.1 servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0ac0efc42a593b6199c4d6fe0598e070f0a026" translate="yes" xml:space="preserve">
          <source>The value that is appended to &lt;code&gt;output&lt;/code&gt; to add a new line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c001e58678fa8f84b6a2874f63856e07abe137" translate="yes" xml:space="preserve">
          <source>The values &lt;strong&gt;WRITER&lt;/strong&gt;, &lt;strong&gt;WRCREAT&lt;/strong&gt; and &lt;strong&gt;NEWDB&lt;/strong&gt; may be combined with the following values by bitwise or:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09872076805c143f6b89222a72e0b7d4388098f" translate="yes" xml:space="preserve">
          <source>The verbose flag, which is set by the -w or -v switch. Setting this to a true value enables warnings as if -w or -v were given on the command line. Setting this to nil disables warnings, including from &lt;a href=&quot;kernel#method-i-warn&quot;&gt;&lt;code&gt;Kernel#warn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec2278e7c0485867b651d17d986da0f6203240c" translate="yes" xml:space="preserve">
          <source>The version 4 UUID is purely random (except the version). It doesn't contain meaningful information such as MAC addresses, timestamps, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c9b6e37b205d5b0458e76696fc4f1e8b01ceef" translate="yes" xml:space="preserve">
          <source>The version number of the zone file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c2565236de854bf736b49fbb143aff0ae071a8" translate="yes" xml:space="preserve">
          <source>The version of &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Syslog::Logger&lt;/code&gt;&lt;/a&gt; you are using.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbc239a030b2aee3c394b4f81655bcf0431afdd" translate="yes" xml:space="preserve">
          <source>The version of &lt;a href=&quot;molinillo&quot;&gt;&lt;code&gt;Bundler::Molinillo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba06e07ae1d74d488b4a02bc157e3fb6439db20" translate="yes" xml:space="preserve">
          <source>The version of &lt;a href=&quot;persistent&quot;&gt;&lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt;&lt;/a&gt; you are using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eecb0367bcfa93d1714a1d355b71a5f929b56b0" translate="yes" xml:space="preserve">
          <source>The version of &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; you are using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387b6421aaf18a0e09beb9b8e2a1065221f66437" translate="yes" xml:space="preserve">
          <source>The version of bigdecimal library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c872a11f8217354916120fe8db3a5e5854a03003" translate="yes" xml:space="preserve">
          <source>The version of libyaml &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; is using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b5cda182ed847f71deb8236816f0c57a2705e9" translate="yes" xml:space="preserve">
          <source>The version of loaded GMP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606a7cc6653d8151b8beb54afaf55c70fb75cd75" translate="yes" xml:space="preserve">
          <source>The version of the engine or interpreter this ruby uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1791e72093a8dbab3f5fe5c46bbde9676d8cae4" translate="yes" xml:space="preserve">
          <source>The version of the installed library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd55f7b42d22afd7017e060f6c5db8bf51db697" translate="yes" xml:space="preserve">
          <source>The vertical bar metacharacter (&lt;code&gt;|&lt;/code&gt;) combines two expressions into a single one that matches either of the expressions. Each expression is an &lt;em&gt;alternative&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ed7ade86d7427dca0f9a0cfb6b7ca30eb84ba6" translate="yes" xml:space="preserve">
          <source>The vertical precision using ssize type values in meters using scientific notation as 2 integers of XeY for precision use value/2 e.g. 2m = +/-1m</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564835bcdde8303d78731ac4df63e9dadcbc9091" translate="yes" xml:space="preserve">
          <source>The virtual concatenation file of the files given on command line (or from $stdin if no files were given).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a38aaa6fba229fc706d2b8450bdd0af5b4bd9e" translate="yes" xml:space="preserve">
          <source>The waiting thread has &lt;code&gt;pid&lt;/code&gt; method which returns the pid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0789187545f1c4b98044ccd6cde5f1d309a384" translate="yes" xml:space="preserve">
          <source>The waiting thread returns the exit status of the detached process when it terminates, so you can use &lt;code&gt;Thread#join&lt;/code&gt; to know the result. If specified &lt;em&gt;pid&lt;/em&gt; is not a valid child process ID, the thread returns &lt;code&gt;nil&lt;/code&gt; immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294380c40007182bd513ab7bf4a00b4936a82423" translate="yes" xml:space="preserve">
          <source>The week and the day of week should be a negative or a positive number (as a relative week/day from the end of year/week when negative). They should not be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1b1caa1ccb8d71ce5046a5d7ffab04dc7e9505" translate="yes" xml:space="preserve">
          <source>The week date is a date identified by calendar week and day numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d3dc45fc31d75059e67ecc2d1935fdfcea1958" translate="yes" xml:space="preserve">
          <source>The weight field specifies a relative weight for entries with the same priority. Larger weights SHOULD be given a proportionately higher probability of being selected. The range of this number is 0-65535. Domain administrators SHOULD use Weight 0 when there isn't any server selection to do, to make the RR easier to read for humans (less noisy). Note that it is not widely implemented and should be set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f98c234c528efafd5468133240d612aa88b92fe" translate="yes" xml:space="preserve">
          <source>The wrapper &lt;em&gt;def2&lt;/em&gt; defines a method which has no tricks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6abe208992c06d9ce8372b5b95c707b9276850" translate="yes" xml:space="preserve">
          <source>The wrapper &lt;em&gt;def2&lt;/em&gt; receives &lt;code&gt;body&lt;/code&gt; as a non-lambda proc, yet defines a method which has normal semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baff408f658a07b20a920dd9cf46f79a34388545" translate="yes" xml:space="preserve">
          <source>The writability notified by select(2) doesn't show how many bytes are writable. &lt;code&gt;IO#write&lt;/code&gt; method blocks until given whole string is written. So, &lt;code&gt;IO#write(two or more bytes)&lt;/code&gt; can block after writability is notified by &lt;code&gt;IO.select&lt;/code&gt;. &lt;code&gt;IO#write_nonblock&lt;/code&gt; is required to avoid the blocking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35328a62169b75e224ebfcdd91db61ad6c7a5f5b" translate="yes" xml:space="preserve">
          <source>The writer adapter class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6c60ed24f68dc452c0856340a2766416619d7f" translate="yes" xml:space="preserve">
          <source>The zero-based index of the field in its row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c14a5ea6aada286aa504acc5afd8d1cdbffb7df" translate="yes" xml:space="preserve">
          <source>The zlib compressed data format is described in RFC 1950, which is a wrapper around a deflate stream which is described in RFC 1951.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069824624754a33c05661f1a9193353c0ed727ac" translate="yes" xml:space="preserve">
          <source>The zlib compression library provides in-memory compression and decompression functions, including integrity checks of the uncompressed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27799a8ce57d8d8f4eeb6afc93bc85dc19cc5674" translate="yes" xml:space="preserve">
          <source>The zlib format was designed to be compact and fast for use in memory and on communications channels. The gzip format was designed for single-file compression on file systems, has a larger header than zlib to maintain directory information, and uses a different, slower check method than zlib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e39906fe7d15041450e2170388ae1441fbd328" translate="yes" xml:space="preserve">
          <source>The {IO} object that should be used to print output. `STDOUT`, by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50802d0f4c64b1a2a37c177532b2c8fef9e1eb5" translate="yes" xml:space="preserve">
          <source>Then check the validity. A status issued in the future must be rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691796e40bd5ff6fb01f09131a9114782c3d0d5d" translate="yes" xml:space="preserve">
          <source>Then create a request and add the certificate ID to it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1972f3f23a7016c8fd85fee0cd0d7ea0051cc703" translate="yes" xml:space="preserve">
          <source>Then create an SSLServer with a TCP server socket and the context. Use the SSLServer like an ordinary TCP server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ce1d88c3fcb3c50fe5972bfd2a8c28a5858287" translate="yes" xml:space="preserve">
          <source>Then extract the status information for the certificate from the basic response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9865c13e21a4064f29ddc6817fffcadf0ba68d1" translate="yes" xml:space="preserve">
          <source>Then pass the data you want to decrypt through</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93f079cd250b0f65cdcbcf9f7621e77be2655fa" translate="yes" xml:space="preserve">
          <source>Then pass the data you want to encrypt through</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9039a6559dcca99fdba2b66f11a88078bc00d917" translate="yes" xml:space="preserve">
          <source>Then touch /var/log/my_program.log and signal syslogd with a HUP (killall -HUP syslogd, on FreeBSD).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9be83a9761721a2663168744ac1b06672a47e98" translate="yes" xml:space="preserve">
          <source>Then we are able to pause the execution of the main thread and allow our new thread to finish, using &lt;a href=&quot;thread#method-i-join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9ac9ac3d233fb31039c1f6c7b313edbd4ce162" translate="yes" xml:space="preserve">
          <source>Then you can send messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2015f9ce616e9f98b7e3f2a802304009f9fd0b" translate="yes" xml:space="preserve">
          <source>There are a number of strategies for matching whitespace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99be330c58316f5672f7aeb13aada4ff915c03bf" translate="yes" xml:space="preserve">
          <source>There are a variety of templating solutions available in various Ruby projects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b138dee82acdad0dc09344ce41bbc6a958540626" translate="yes" xml:space="preserve">
          <source>There are aliases to several of the methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ddd45eb35ae329c3989465d760595e556d6c12" translate="yes" xml:space="preserve">
          <source>There are also &lt;code&gt;||=&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt;. The former makes an assignment if the value was &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; while the latter makes an assignment if the value was not &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c83c1760c9bc5219a40ee10af3be9c347a36f4" translate="yes" xml:space="preserve">
          <source>There are also some additional HTML generation methods mixed in from the &lt;a href=&quot;cgi/htmlextension&quot;&gt;&lt;code&gt;CGI::HtmlExtension&lt;/code&gt;&lt;/a&gt; module. These include individual methods for the different types of form inputs, and methods for elements that commonly take particular attributes where the attributes can be directly specified as arguments, rather than via a hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4303976503b9df65c2876f172de46ee1e17029" translate="yes" xml:space="preserve">
          <source>There are multiple representations for many values. CRuby always outputs the shortest representation possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503c0813e66475724749b140d619b89e3a003803" translate="yes" xml:space="preserve">
          <source>There are other methods besides the plain scanners. You can look ahead in the string without actually scanning. You can access the most recent match. You can modify the string being scanned, reset or terminate the scanner, find out or change the position of the scan pointer, skip ahead, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659a39c16881acabdf2048fe624ce88739880643" translate="yes" xml:space="preserve">
          <source>There are several candidate uses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061a50d412de60f01628a39ccd2eb3581841894b" translate="yes" xml:space="preserve">
          <source>There are several interesting features that &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; provides, like auto-rolling of log files, setting the format of log messages, and specifying a program name in conjunction with the message. The next section shows you how to achieve these things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c0381f0de957c9282b83338106a54a77d17884" translate="yes" xml:space="preserve">
          <source>There are several methods to create a &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3bdf8563031c69183effce3ae270622f92d763" translate="yes" xml:space="preserve">
          <source>There are several settings you can change when you use ERB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a7be5956778b831e900bd745039c3ebece7e89" translate="yes" xml:space="preserve">
          <source>There are several specialized class methods for one-statement reading or writing, described in the Specialized Methods section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659e692070425ee09222f2ac1110117114520192" translate="yes" xml:space="preserve">
          <source>There are several ways to create a &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; instance. Generally, a &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; algorithm is categorized by its name, the key length in bits and the cipher mode to be used. The most generic way to create a &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; is the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f428b153085183269178fe6fe415bb23c8dc4545" translate="yes" xml:space="preserve">
          <source>There are some `low level' methods, which do not accept any option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60cb22b78f80b14b21613700192c0150c343687" translate="yes" xml:space="preserve">
          <source>There are some utility tool defined in cgi/util.rb . And when include, you can use utility methods like a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93779d4411856d720e0436cd3e2de50640ed2a7c" translate="yes" xml:space="preserve">
          <source>There are three types of arguments when sending a message, the positional arguments, keyword (or named) arguments and the block argument. Each message sent may use one, two or all types of arguments, but the arguments must be supplied in this order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f78e7f6e4ae9f28baf9db5dab8e682204fdee93" translate="yes" xml:space="preserve">
          <source>There are two different types of &lt;code&gt;%&lt;/code&gt; strings &lt;code&gt;%q(...)&lt;/code&gt; behaves like a single-quote string (no interpolation or character escaping), while &lt;code&gt;%Q&lt;/code&gt; behaves as a double-quote string. See Percent Strings below for more discussion of the syntax of percent strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13efd38df48e3d0c55a2a3a07a2bad11aadeeae" translate="yes" xml:space="preserve">
          <source>There are two methods of doing this, your object can define either marshal_dump and marshal_load or _dump and _load. marshal_dump will take precedence over _dump if both are defined. marshal_dump may result in smaller &lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt; strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be3b0e244c753cb2df093344acd8a2903575c30" translate="yes" xml:space="preserve">
          <source>There can only ever be one instance of the integer &lt;code&gt;1&lt;/code&gt;, for example. Ruby ensures this by preventing instantiation. If duplication is attempted, the same instance is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dae8f608f44ac3aef7efa856fcbd1066880f59" translate="yes" xml:space="preserve">
          <source>There is a constant defined for each universal tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3842f2c9eda02dafdae05a84d130024969c0c18" translate="yes" xml:space="preserve">
          <source>There is a special class &lt;a href=&quot;../basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; which is designed as a blank class and includes a minimum of built-in methods. You can use &lt;a href=&quot;../basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; to create an independent inheritance structure. See the &lt;a href=&quot;../basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; documentation for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c6c06a370f93f8741f3cf342b07190a9871223" translate="yes" xml:space="preserve">
          <source>There is also &lt;a href=&quot;thread#method-i-thread_variables&quot;&gt;&lt;code&gt;thread_variables&lt;/code&gt;&lt;/a&gt; to list all thread-locals, and &lt;a href=&quot;thread#method-i-thread_variable-3F&quot;&gt;&lt;code&gt;thread_variable?&lt;/code&gt;&lt;/a&gt; to check if a given thread-local exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627672ff4e96b7483abc42026bc3aa79e0196800" translate="yes" xml:space="preserve">
          <source>There is also a character literal notation to represent single character strings, which syntax is a question mark (&lt;code&gt;?&lt;/code&gt;) followed by a single character or escape sequence that corresponds to a single codepoint in the script encoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe04b9af6aaba60f104d733c51090014934f4db" translate="yes" xml:space="preserve">
          <source>There is also a class level method to set this for all new threads, see &lt;a href=&quot;thread#method-c-report_on_exception-3D&quot;&gt;&lt;code&gt;::report_on_exception=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97b70de54f42fd3e598882f40105db75e9f7ce6" translate="yes" xml:space="preserve">
          <source>There is also a class level method to set this for all threads, see &lt;a href=&quot;thread#method-c-abort_on_exception&quot;&gt;&lt;code&gt;::abort_on_exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cb3401a0241ea1eece8749e9dc98ea9be04fae" translate="yes" xml:space="preserve">
          <source>There is also a class level method to set this for all threads, see &lt;a href=&quot;thread#method-c-abort_on_exception-3D&quot;&gt;&lt;code&gt;::abort_on_exception=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217d1fee4e5010abc751b5d13ed23c8fe1225dfa" translate="yes" xml:space="preserve">
          <source>There is also a performance benefit to using yield over a calling a block parameter. When a block argument is assigned to a variable a &lt;a href=&quot;../proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object is created which holds the block. When using yield this &lt;a href=&quot;../proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object is not created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f398cfe46be59e1ed0c588e20895ec75dee4b1" translate="yes" xml:space="preserve">
          <source>There is also a special form which matches character range (not full set of regular expression):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99db24c1ffe620a9913fb27e9153233090454b5d" translate="yes" xml:space="preserve">
          <source>There is also an instance level method to set this for a specific thread, see &lt;a href=&quot;thread#method-i-abort_on_exception&quot;&gt;&lt;code&gt;abort_on_exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5289b29cb17a9f19f84b0bac6712c8f2f06c057f" translate="yes" xml:space="preserve">
          <source>There is also an instance level method to set this for a specific thread, see &lt;a href=&quot;thread#method-i-abort_on_exception-3D&quot;&gt;&lt;code&gt;abort_on_exception=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e60830181980fc845d3b6ef77a4dbb8eab65999" translate="yes" xml:space="preserve">
          <source>There is also an instance level method to set this for a specific thread, see &lt;a href=&quot;thread#method-i-report_on_exception-3D&quot;&gt;&lt;code&gt;report_on_exception=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a1203651b36b23fe78792663068c2b3200a687" translate="yes" xml:space="preserve">
          <source>There is also the Net::HTTPBadResponse exception which is raised when there is a protocol error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d65f2b01041b7cc4b0a041e2bd2580f62e3b978" translate="yes" xml:space="preserve">
          <source>There is an accept filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db2e31c21e981f5c245e7592e3aaed4c46fb710" translate="yes" xml:space="preserve">
          <source>There is no route to that network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd56df439eb518ab8ac827ee0393eebb88f5db8" translate="yes" xml:space="preserve">
          <source>There may be an optional maximum field width, expressed as a decimal integer, between the % and the conversion. If no width is given, a default of `infinity' is used (with the exception of the %c specifier; see below). Otherwise, given a field width of &lt;em&gt;n&lt;/em&gt; for a given conversion, at most &lt;em&gt;n&lt;/em&gt; characters are scanned in processing that conversion. Before conversion begins, most conversions skip whitespace in the input string; this whitespace is not counted against the field width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1272e2b4b8311cc8de3a0daccf3a73634dfc2e2e" translate="yes" xml:space="preserve">
          <source>There options are passed when the source plugin is created from the lock file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9950f90039aa16c8486a4886e24e992e6f21fed5" translate="yes" xml:space="preserve">
          <source>Therefore, one should always call &lt;a href=&quot;tempfile#method-i-unlink&quot;&gt;&lt;code&gt;unlink&lt;/code&gt;&lt;/a&gt; or close in an ensure block, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b7ee873dd09c3a2e23e93570ba3b0225852e3e" translate="yes" xml:space="preserve">
          <source>These are method names for the various Ruby operators. Each of these operators accepts only one argument. Following the operator is the typical use or name of the operator. Creating an alternate meaning for the operator may lead to confusion as the user expects plus to add things, minus to subtract things, etc. Additionally, you cannot alter the precedence of the operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b928bdc4b0b953c5d5409a8f3ccf64683bd4072" translate="yes" xml:space="preserve">
          <source>These are the types of percent strings in ruby:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49771a4ba0d25531c70a960d26f8cb8a1b49e3b9" translate="yes" xml:space="preserve">
          <source>These binding objects can be passed as the second argument of the &lt;code&gt;Kernel#eval&lt;/code&gt; method, establishing an environment for the evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9e7b224139324560163e364f32bd3dd81e43d2" translate="yes" xml:space="preserve">
          <source>These characteristics make one-way functions also ideal companions for public key signature algorithms: instead of signing an entire document, first a hash of the document is produced with a considerably faster message digest algorithm and only the few bytes of its output need to be signed using the slower public key algorithm. To validate the integrity of a signed document, it suffices to re-compute the hash and verify that it is equal to that in the signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4c60b1bc087f2bd767da137134148d43f7cc17" translate="yes" xml:space="preserve">
          <source>These cookies are in addition to the cookies held in the @output_cookies field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f8c940a371e80ca139205f04f0056982dedb66" translate="yes" xml:space="preserve">
          <source>These default options can be overwritten for a single run of the iseq compiler by passing any of the above values as the &lt;code&gt;options&lt;/code&gt; parameter to &lt;a href=&quot;instructionsequence#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;instructionsequence#method-c-compile&quot;&gt;&lt;code&gt;::compile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;instructionsequence#method-c-compile_file&quot;&gt;&lt;code&gt;::compile_file&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5176d2d52b87b522e09230f1b9fa05e7582e60" translate="yes" xml:space="preserve">
          <source>These examples build atop each other. For example the key created in the next is used in throughout these examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86e930f354c33dced4a926151231cd44c25e7b1" translate="yes" xml:space="preserve">
          <source>These flags are used to control combinations of algorithm methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f36675ebf25890b94cc5bee3408e8f2e6bb1b3" translate="yes" xml:space="preserve">
          <source>These global variables are thread-local and method-local variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0007a077c97cb0ab7b43ec9062855ce686a477ec" translate="yes" xml:space="preserve">
          <source>These keywords correspond to attributes of the cookie object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6af55f330b4958e4b30064f4898dc444359253" translate="yes" xml:space="preserve">
          <source>These methods are a facade for Dir:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161d8600118186d2d3a4341725c1ba9e1de8124f" translate="yes" xml:space="preserve">
          <source>These methods are a facade for File:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed7a0fef36c9af3d2ac1db6eeb44ba6b0e8a06e" translate="yes" xml:space="preserve">
          <source>These methods are a facade for FileTest:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912226d4587c97be8d41f6eca94aba7f6338fb68" translate="yes" xml:space="preserve">
          <source>These methods are a facade for IO:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33b3887eb7b2c1bd6257fc0c1aa03d6914b72a9" translate="yes" xml:space="preserve">
          <source>These methods are a mixture of &lt;a href=&quot;find&quot;&gt;&lt;code&gt;Find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileutils&quot;&gt;&lt;code&gt;FileUtils&lt;/code&gt;&lt;/a&gt;, and others:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a041d2cbabd128e4f1293cb1520967e8e5708f1a" translate="yes" xml:space="preserve">
          <source>These methods are effectively manipulating a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, because that's all a path is. None of these access the file system except for &lt;a href=&quot;pathname#method-i-mountpoint-3F&quot;&gt;&lt;code&gt;mountpoint?&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pathname#method-i-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pathname#method-i-each_child&quot;&gt;&lt;code&gt;each_child&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pathname#method-i-realdirpath&quot;&gt;&lt;code&gt;realdirpath&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pathname#method-i-realpath&quot;&gt;&lt;code&gt;realpath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd950ff6a15541584fb7f3bf2dcd1f4b0970ed8c" translate="yes" xml:space="preserve">
          <source>These methods are not callable via dRuby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39da9fdd2f89056079539e8fe62b52a26b9b941b" translate="yes" xml:space="preserve">
          <source>These numbers have the same value, 1,234. The underscore may be used to enhance readability for humans. You may place an underscore anywhere in the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70af1172fbcd3b00c55a248eeeedd9734ce919b6" translate="yes" xml:space="preserve">
          <source>These numbers have the same value, 12.34. You may use underscores in floating point numbers as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5163f32b108120fb6273f0facdeb131d7b63b985" translate="yes" xml:space="preserve">
          <source>These objects are each one byte long. &amp;ldquo;T&amp;rdquo; is represents &lt;code&gt;true&lt;/code&gt;, &amp;ldquo;F&amp;rdquo; represents &lt;code&gt;false&lt;/code&gt; and &amp;ldquo;0&amp;rdquo; represents &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481a591f5bf5fdd91a35502f80aa2312e7c2b605" translate="yes" xml:space="preserve">
          <source>These plugins are optional and are not installed when there is conflict with any other plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8e7e3636124a9a5dff410940e2ba57db1b36d0" translate="yes" xml:space="preserve">
          <source>These records identify the hostname and port that a service is available at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d5ba27edb8e638e4a110376fecce65c9b8043d" translate="yes" xml:space="preserve">
          <source>These three error response are represented by the errors &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;imap/badresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::BadResponseError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;imap/byeresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::ByeResponseError&lt;/code&gt;&lt;/a&gt;, all of which are subclasses of &lt;a href=&quot;imap/responseerror&quot;&gt;&lt;code&gt;Net::IMAP::ResponseError&lt;/code&gt;&lt;/a&gt;. Essentially, all methods that involve sending a request to the server can generate one of these errors. Only the most pertinent instances have been documented below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3eefe4f2f031cf6c2513c0870e7ef4d76bf8a9" translate="yes" xml:space="preserve">
          <source>These values can be added after the fact, like a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a626fe6fc3f53c86e2cc42e6889b6f19a86e0bc" translate="yes" xml:space="preserve">
          <source>Thirdly, &lt;a href=&quot;../bundler&quot;&gt;&lt;code&gt;Bundler&lt;/code&gt;&lt;/a&gt; checks if there are any dependencies specified in the Gemfile. If there are no dependencies specified then &lt;a href=&quot;../bundler&quot;&gt;&lt;code&gt;Bundler&lt;/code&gt;&lt;/a&gt; returns a warning message stating so and this method returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022ae77a94b64a4aed2b393a05966e939ad6630b" translate="yes" xml:space="preserve">
          <source>This (somewhat contrived) example allows the inner loop to abandon processing early:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fceb2e1f21b3f7a6b549ca68a0c16374dbb89609" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../../../../../net/http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; subclass adds SSL session reuse and Server Name Indication (SNI) RFC 3546.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae79b63162619b30bf9667999d60dcb65c2a4f35" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;drbobjecttemplate&quot;&gt;&lt;code&gt;DRbObjectTemplate&lt;/code&gt;&lt;/a&gt; matches &lt;code&gt;ro&lt;/code&gt; if the remote object's drburi and drbref are the same. &lt;code&gt;nil&lt;/code&gt; is used as a wildcard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46a2d5fdc3427057b571fd4f2c751887ee10b09" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; holds the built-in converters of &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; that can be accessed by name. You can select &lt;a href=&quot;csv#Converters&quot;&gt;&lt;code&gt;Converters&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;csv#method-i-convert&quot;&gt;&lt;code&gt;CSV.convert()&lt;/code&gt;&lt;/a&gt; or through the &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; passed to &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56cdc8a9874a3d44d69a9d3ebfb855d822f41f23" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; holds the built-in header converters of &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; that can be accessed by name. You can select &lt;a href=&quot;csv#HeaderConverters&quot;&gt;&lt;code&gt;HeaderConverters&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;csv#method-i-header_convert&quot;&gt;&lt;code&gt;CSV.header_convert()&lt;/code&gt;&lt;/a&gt; or through the &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; passed to &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4b59cc95b2a215cc18ede8d63f70d4801f4550" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; is intentionally left unfrozen and users should feel free to add values to it that can be accessed by all &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a3c9d5332e81bb99d486cf6982d553e794ff77" translate="yes" xml:space="preserve">
          <source>This CA certificate was revoked due to a key compromise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4dfd97dadc2ba26295fb938573ec92d95db25af" translate="yes" xml:space="preserve">
          <source>This above is achieved by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59d57df21240ae91a18598b82a2831344c7617d" translate="yes" xml:space="preserve">
          <source>This abstract class provides a common interface to message digest implementation classes written in C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320d28dc156e8f5103d7266849a220ce52c8da7a" translate="yes" xml:space="preserve">
          <source>This adds &lt;code&gt;obj&lt;/code&gt; as a text of &lt;code&gt;width&lt;/code&gt; columns in width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc5e77ed07d06247b0fd98cb1310fdf8740e693" translate="yes" xml:space="preserve">
          <source>This adds a new &lt;a href=&quot;objectid&quot;&gt;&lt;code&gt;ObjectId&lt;/code&gt;&lt;/a&gt; to the internal tables. Where &lt;em&gt;object_id&lt;/em&gt; is the numerical form, &lt;em&gt;short_name&lt;/em&gt; is the short name, and &lt;em&gt;long_name&lt;/em&gt; is the long name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84196abf66405f716a9b11cb64580fbee61ed75e" translate="yes" xml:space="preserve">
          <source>This allows definition of methods and attributes on a class (or module) without needing to write &lt;code&gt;def self.my_method&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc4596161f71436ee06ac5a93f8ffd2265c3f78" translate="yes" xml:space="preserve">
          <source>This allows to easily chain methods which could return empty value. Note that &lt;code&gt;&amp;amp;.&lt;/code&gt; skips only one next call, so for a longer chain it is necessary to add operator on each level:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c574e3e088c0eb978dc8ed9051e23a89e81700" translate="yes" xml:space="preserve">
          <source>This allows you to chain Enumerators together. For example, you can map a list's elements to strings containing the index and the element as a string via:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4559d5004a22f5c89ec4f5b6d26cdbb139f52275" translate="yes" xml:space="preserve">
          <source>This also results in the following, possibly unexpected, behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3668343c90f73b74f8d9fa7ad961a93793794b76" translate="yes" xml:space="preserve">
          <source>This array contains name of all ripper events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e04e90cf0a5395432b46310f11c7eaff14d60ae" translate="yes" xml:space="preserve">
          <source>This array contains name of parser events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3725d8cf8c9b90edcc6977f88c18fb27fb68e4c8" translate="yes" xml:space="preserve">
          <source>This array contains name of scanner events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e338cdb522ae3c8f3774fca5488d482776488ab" translate="yes" xml:space="preserve">
          <source>This assignment is implemented in the Ruby parser. The parser detects 'regexp-literal =~ expression' for the assignment. The regexp must be a literal without interpolation and placed at left hand side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b424f2aa8fcd1dd43fa9a809abfd53d36d7d6bfa" translate="yes" xml:space="preserve">
          <source>This backport fixes the marshaling of @segments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511163358482f4bc3bbb0ffde4660db5298e58c7" translate="yes" xml:space="preserve">
          <source>This backports base_dir which replaces installation path RubyGems 1.8+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a03b8ff0ff2231f8056521eced55295350dffff" translate="yes" xml:space="preserve">
          <source>This backports the correct segment generation code from RubyGems 1.4+ by monkeypatching it into the method in RubyGems 1.3.6 and 1.3.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acce3fa4213386882a510e6b56e9456511c9fc9c" translate="yes" xml:space="preserve">
          <source>This behavior is modified by the given &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; parameters. See ::spawn for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54bd6b81553620f9d5ed519f9eb2f67f893a391" translate="yes" xml:space="preserve">
          <source>This behavior is modified by the given &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; parameters. See &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;::spawn&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61d7054050c45e1699311b1cd4152a8658cf352" translate="yes" xml:space="preserve">
          <source>This behavior is preserved under inheritance and cloning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee2dd62a070167c13a81cad9c59c0f9115d3472" translate="yes" xml:space="preserve">
          <source>This behavior is useful when chaining comparisons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053972f7ce9da2e8ddca3b84d80660c30b859628" translate="yes" xml:space="preserve">
          <source>This behavior may be changed in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61593a70eaf7b2db604603584bff4703cb226c5" translate="yes" xml:space="preserve">
          <source>This builds upon the top-level &lt;a href=&quot;pstore&quot;&gt;&lt;code&gt;PStore&lt;/code&gt;&lt;/a&gt; class provided by the library file pstore.rb. &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; data is marshalled and stored in a file. &lt;a href=&quot;../../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; locking and transaction services are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42164d28a19e61ea09e1a6ad4c1229077d732bc" translate="yes" xml:space="preserve">
          <source>This cache is different from the internal caching that can be done at sub paths of `cache_path` (from &lt;a href=&quot;../api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt;). This can be though as caching by bundler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5913a474a814189ccd1f0fb506c78a7ffcf7f2" translate="yes" xml:space="preserve">
          <source>This can also be used to create symbols that cannot be represented using the &lt;code&gt;:xxx&lt;/code&gt; notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9f48656cf9c44cdc270605da0859c9204a4880" translate="yes" xml:space="preserve">
          <source>This can be used in contexts like &lt;a href=&quot;x509/extensionfactory#attribute-i-config&quot;&gt;&lt;code&gt;OpenSSL::X509::ExtensionFactory.config=&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78030199903da8b2a2060f48baf32c363be83ab8" translate="yes" xml:space="preserve">
          <source>This can raise &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; exceptions based on the access, or availability of the file. A &lt;a href=&quot;configerror&quot;&gt;&lt;code&gt;ConfigError&lt;/code&gt;&lt;/a&gt; exception may be raised depending on the validity of the data being configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476c9ff6e7b64ac39680d06fb58f1eef262836ff" translate="yes" xml:space="preserve">
          <source>This class contains all of the logic for determining the next version of a Gem to update to based on the requested level (patch, minor, major). Primarily designed to work with &lt;a href=&quot;resolver&quot;&gt;&lt;code&gt;Resolver&lt;/code&gt;&lt;/a&gt; which will provide it the list of available dependency versions as found in its index, before returning it to to the resolution engine to select the best version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e682aab8803ecaa6eec596aa4fa9e7f85a5655ab" translate="yes" xml:space="preserve">
          <source>This class encapsulates a dependency resolver. The resolver is responsible for determining which set of dependencies to activate, with feedback from the {#specification_provider}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810aa469b644c8b0a6b8572126245c96d196faaa" translate="yes" xml:space="preserve">
          <source>This class handles only scanner events, which are dispatched in the 'right' order (same with input).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005e91e2755cb7746b08c1fd6a1089edd3980f74" translate="yes" xml:space="preserve">
          <source>This class implements a pretty printing algorithm. It finds line breaks and nice indentations for grouped structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23060fcb9f5ecdde96e2a6b49b6a2f1cc8794760" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; Transfer Protocol. If you have used a command-line &lt;a href=&quot;ftp&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; program, and are familiar with the commands, you will be able to use this class easily. Some extra features are included to take advantage of Ruby's style and strengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b36a4d9a17975acd542cfa96af150ae92efd5e9" translate="yes" xml:space="preserve">
          <source>This class is an implementation detail and is subject to change or removal at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a635f3ebe3b3f15a2a9a18ebeeb6bf0b393b842d" translate="yes" xml:space="preserve">
          <source>This class is equivalent to &lt;a href=&quot;net/pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, except that it uses &lt;a href=&quot;net/apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94884866b5fe748b9a16f6470e55bcf5f859d2e6" translate="yes" xml:space="preserve">
          <source>This class is equivalent to &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, except that it uses &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a41cf862e7cae7ccf5f2cfeb098e9385fbb40d" translate="yes" xml:space="preserve">
          <source>This class is mostly used internally by &lt;a href=&quot;../weakref&quot;&gt;&lt;code&gt;WeakRef&lt;/code&gt;&lt;/a&gt;, please use &lt;code&gt;lib/weakref.rb&lt;/code&gt; for the public interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9676f7444db5c1e552eaca1e1f1474c9480ade7a" translate="yes" xml:space="preserve">
          <source>This class is obsolete. You may pass these same parameters directly to &lt;a href=&quot;http#method-c-new&quot;&gt;&lt;code&gt;Net::HTTP.new&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;http#method-c-new&quot;&gt;&lt;code&gt;Net::HTTP.new&lt;/code&gt;&lt;/a&gt; for details of the arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e1caa7f2254749696c7c50ae9fc67a8f171c11" translate="yes" xml:space="preserve">
          <source>This class is only provided for backwards compatibility. Use &lt;a href=&quot;../cipher&quot;&gt;&lt;code&gt;OpenSSL::Cipher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b2d325f1da5d326b55cbc386f820eca864e7c5" translate="yes" xml:space="preserve">
          <source>This class is supposed to be wrapper over the existing gem installation infra but currently it itself handles everything as the Source's subclasses (e.g. Source::RubyGems) are heavily dependent on the Gemfile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9aede195d74c97bceb880687d4bf87b29558fa" translate="yes" xml:space="preserve">
          <source>This class is the access to openssl's ENGINE cryptographic module implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a475a20daa2ed7592cb7c7a82a041cb0ff9b6896" translate="yes" xml:space="preserve">
          <source>This class is used as a return value from &lt;a href=&quot;../objectspace#method-c-reachable_objects_from&quot;&gt;&lt;code&gt;ObjectSpace::reachable_objects_from&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef539acd6730fd5c2716f3ee271ee10fa6bc83f" translate="yes" xml:space="preserve">
          <source>This class is used internally by &lt;a href=&quot;drbobject&quot;&gt;&lt;code&gt;DRbObject&lt;/code&gt;&lt;/a&gt;. The user does not normally need to deal with it directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a20ec9e17a310a84ec88346ec045eaca5bfdfcd" translate="yes" xml:space="preserve">
          <source>This class maintains a pool of connections, to reduce the overhead of starting and closing down connections for each method call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450c577131c16c1ac49854621a2b101b86081946" translate="yes" xml:space="preserve">
          <source>This class provides a complete interface to &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; files and data. It offers tools to enable you to read and write to and from Strings or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects, as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f4af4ecc840d0a1dd4589a601f64610600d0d5" translate="yes" xml:space="preserve">
          <source>This class provides the base to build source plugins All the method here are required to build a source plugin (except `uri_hash`, `gem_install_dir`; they are helpers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b168e85f77a559ebce8a04edb6bf5f068670c771" translate="yes" xml:space="preserve">
          <source>This class represents a message which exists on the POP server. Instances of this class are created by the &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class; they should not be directly created by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66ab4e78b5eb05645d2fe6421606492fc523898" translate="yes" xml:space="preserve">
          <source>This class represents a response received by the &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server. Instances of this class are created by the &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; class; they should not be directly created by the user. For more information on &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; responses, view &lt;a href=&quot;http://tools.ietf.org/html/rfc5321#section-4.2&quot;&gt;Section 4.2 of RFC 5321&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3317385fd2f20eb77ebb8938b3003f4033ff2375" translate="yes" xml:space="preserve">
          <source>This class represents queues of specified size capacity. The push operation may be blocked if the capacity is full.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ccb47c1fe305a11c039a17bef83f6064901d86" translate="yes" xml:space="preserve">
          <source>This class watches for termination of multiple threads. Basic functionality (wait until specified threads have terminated) can be accessed through the class method &lt;a href=&quot;threadswait#method-c-all_waits&quot;&gt;&lt;code&gt;ThreadsWait::all_waits&lt;/code&gt;&lt;/a&gt;. Finer control can be gained using instance methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cf278cb590d5c1b83d71d6ef6bc98f6e845be4" translate="yes" xml:space="preserve">
          <source>This class will be redesigned because of difference of implementations; the structure of its path. draft-hoffman-ftp-uri-04 is a draft but it is a good summary about the de facto spec. &lt;a href=&quot;http://tools.ietf.org/html/draft-hoffman-ftp-uri-04&quot;&gt;tools.ietf.org/html/draft-hoffman-ftp-uri-04&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559c9a7ead635211b1a18cddd0c561bab1b27348" translate="yes" xml:space="preserve">
          <source>This class wraps together the response header and the response body (the entity requested).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcd33437e37578b72cc54ebb6c4521878cba296" translate="yes" xml:space="preserve">
          <source>This client's &lt;a href=&quot;../../../../openssl/x509/certificate&quot;&gt;&lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1877f6085be949daf7bfc8e829f5faf34d226f" translate="yes" xml:space="preserve">
          <source>This client's SSL private key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79523caa500181939d8ffc0d58395d3d95462b44" translate="yes" xml:space="preserve">
          <source>This client's certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978d616765db94b6d6ca5309e2cef1be73036723" translate="yes" xml:space="preserve">
          <source>This code was copied from Rake, available under MIT-LICENSE Copyright &amp;copy; 2003, 2004 Jim Weirich</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34814d96c8f5e3c71fa7bca0ba4ddf5d80849204" translate="yes" xml:space="preserve">
          <source>This coercion mechanism is used by Ruby to handle mixed-type numeric operations: it is intended to find a compatible common type between the two operands of the operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134b217ee1b0ddd4d2cb94f06c7afd20aa66966b" translate="yes" xml:space="preserve">
          <source>This constructor is used internally by &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt;. The user does not generally need to call it directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e225bfec949a2c5b64601c05229d552fff3b97bc" translate="yes" xml:space="preserve">
          <source>This constructor will wrap either a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object passed in &lt;code&gt;data&lt;/code&gt; for reading and/or writing. In addition to the &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; instance methods, several &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; methods are delegated. (See &lt;a href=&quot;csv#method-c-open&quot;&gt;&lt;code&gt;CSV::open()&lt;/code&gt;&lt;/a&gt; for a complete list.) If you pass a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;data&lt;/code&gt;, you can later retrieve it (after writing to it, for example) with CSV.string().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a7d65384e08cf2fa212cdc2e34e739996aaacc" translate="yes" xml:space="preserve">
          <source>This creates a &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; that outputs to the standard output stream, with a level of &lt;code&gt;WARN&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91d00aa8d13aea3a268bb60ad250f67e24bdf0f" translate="yes" xml:space="preserve">
          <source>This decodes + to SP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efb152ca1e40b50522b5524dd855cf2e377131e" translate="yes" xml:space="preserve">
          <source>This decodes application/x-www-form-urlencoded data and returns an array of key-value arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7216492025fcbb29fcff3f3eb0b9129d10f9dc43" translate="yes" xml:space="preserve">
          <source>This defaults to &amp;ldquo;n&amp;rdquo;, and should be &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923ff3e5bc778b056a076d3e00d41879eda96792" translate="yes" xml:space="preserve">
          <source>This defaults to '', and should accept the &amp;lt;&amp;lt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa36e1861a88c9dbbfb2c51daab242ad7a3a0472" translate="yes" xml:space="preserve">
          <source>This defaults to 79, and should be a Fixnum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d113d692ef56f6c81542f751d44b0d28346d13" translate="yes" xml:space="preserve">
          <source>This document aims to discuss many of these pitfalls and provide more secure alternatives where applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fedfba0e7f4c116aa04e7f3a5222640136104ce" translate="yes" xml:space="preserve">
          <source>This document calls a serialized set of objects a stream. The Ruby implementation can load a set of objects from a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; or an object that implements a &lt;code&gt;getc&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787fccc3acadc84ed59c55bd848e5749bc1c7de7" translate="yes" xml:space="preserve">
          <source>This document will omit the optional &lt;code&gt;then&lt;/code&gt; for all expressions as that is the most common usage of &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de39576ade91d56c09b2529a8b80d5be4bc6f52" translate="yes" xml:space="preserve">
          <source>This ensures that only one instance of Klass can be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1a8521e07c22321688dab6fb035472fbe64c9f" translate="yes" xml:space="preserve">
          <source>This error is raised if HTTP authentication is provided, but incorrect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbca9b2fbd2123f49b6f3c9f7801902268031fcf" translate="yes" xml:space="preserve">
          <source>This error is raised if HTTP authentication is required, but not provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c384065451e45d5e31fe798d6d6e8cf678277de" translate="yes" xml:space="preserve">
          <source>This error is raised if the API returns a 413 (only printed in verbose)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3a0d1c50bf19561a078848d5ad1d58d7668c0c" translate="yes" xml:space="preserve">
          <source>This error is raised when it looks like the network is down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84ba9168a037e22379d5b25e0b2ef8c51f89a54" translate="yes" xml:space="preserve">
          <source>This example can also be written as the following, which you should use to avoid asynchronous interrupts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f520017ef5142121514a9f469ff377a992941e9" translate="yes" xml:space="preserve">
          <source>This example creates a 2048 bit RSA keypair and writes it to the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0627c315440064b61e84395eab1f3e6b0d6e2daa" translate="yes" xml:space="preserve">
          <source>This example creates a self-signed certificate using an RSA key and a SHA1 signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca84efd0c8091b3da3bf8b3d18f6c2ca380f101" translate="yes" xml:space="preserve">
          <source>This example has included the &lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; module to make it easier to read, but you can also use the &lt;a href=&quot;objectspace#method-c-trace_object_allocations&quot;&gt;&lt;code&gt;::trace_object_allocations&lt;/code&gt;&lt;/a&gt; notation (recommended).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f801e936fc6bda34c3891db6bcda069714cc111f" translate="yes" xml:space="preserve">
          <source>This example illustrates returning a reference to an object from a dRuby call. The &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; instances live in the server process. References to them are returned to the client process, where methods can be invoked upon them. These methods are executed in the server process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c4103fd10b2539ca9f45ca581c3850e5de0bca" translate="yes" xml:space="preserve">
          <source>This example is identical to the first, except we're using &lt;code&gt;CommandProcessor#transact&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4b4a0897748d0e3e1ae29d37da359795d2ba76" translate="yes" xml:space="preserve">
          <source>This example makes use of &lt;a href=&quot;thread#method-i-thread_variable_set&quot;&gt;&lt;code&gt;thread_variable_set&lt;/code&gt;&lt;/a&gt; to create new thread-locals, and &lt;a href=&quot;thread#method-i-thread_variable_get&quot;&gt;&lt;code&gt;thread_variable_get&lt;/code&gt;&lt;/a&gt; to reference them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b789da6026e4dfa5176e153d651b49056dfa0c86" translate="yes" xml:space="preserve">
          <source>This example retrieves messages from the server and deletes them on the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a19a0acb4208cf600f7fff9b8b54d539a518e1" translate="yes" xml:space="preserve">
          <source>This example uses &lt;a href=&quot;thread#method-i-5B-5D&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt; for getting and &lt;a href=&quot;thread#method-i-5B-5D-3D&quot;&gt;&lt;code&gt;[]=&lt;/code&gt;&lt;/a&gt; for setting fiber-locals, you can also use &lt;a href=&quot;thread#method-i-keys&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt; to list the fiber-locals for a given thread and &lt;a href=&quot;thread#method-i-key-3F&quot;&gt;&lt;code&gt;key?&lt;/code&gt;&lt;/a&gt; to check if a fiber-local exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6cf1df8a837845f9f478ada76dc5a6cd394b54" translate="yes" xml:space="preserve">
          <source>This exception ensures that methods never have tricks and makes it easy to have wrappers to define methods that behave as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f60889288d99a5769b7c9e4caf8a1503b048540" translate="yes" xml:space="preserve">
          <source>This exception ensures that methods never have unusual argument passing conventions, and makes it easy to have wrappers defining methods that behave as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea0d57f4fc8d7275550c50daefc3f1d54ba22a7" translate="yes" xml:space="preserve">
          <source>This exception is raised if a generator or unparser error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9aba5fa02d390383ce4d7fbdcc85031744924e" translate="yes" xml:space="preserve">
          <source>This exception is raised if a parser error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84306b38e6be8897437339d490826b13e3c8d68b" translate="yes" xml:space="preserve">
          <source>This exception is raised if the nesting of parsed data structures is too deep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e895312bb8eb884e016aee7e9bcf0e478aa85ee" translate="yes" xml:space="preserve">
          <source>This exception is raised if the required unicode support is missing on the system. Usually this means that the iconv library is not installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1ccfff464f782ffc6066b19ebb66fc3c489901" translate="yes" xml:space="preserve">
          <source>This extension indicates the CA's key may be used as a CA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4e7edadaf525b3f33a0aa8a4c773da3130e89a" translate="yes" xml:space="preserve">
          <source>This extension indicates the CA's key may be used to verify signatures on both certificates and certificate revocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2d1bfa819a808c3f9593c31e2834c9d6e94852" translate="yes" xml:space="preserve">
          <source>This feature is not supported in &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; &amp;lt; 1.1.0, and setting the level to other than 0 will raise &lt;a href=&quot;../../notimplementederror&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;. Level 0 means everything is permitted, the same behavior as previous versions of &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4da0c728a3ea343690b91efbe9a2947acfcc276" translate="yes" xml:space="preserve">
          <source>This file holds the &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; class. This class provides functionality for retrieving HTTP request parameters, managing cookies, and generating HTML output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481f989573d71fb9b1b603b07c51ada028594b97" translate="yes" xml:space="preserve">
          <source>This file provides the &lt;a href=&quot;session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt; class, which provides session support for &lt;a href=&quot;../cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; scripts. A session is a sequence of HTTP requests and responses linked together and associated with a single client. Information associated with the session is stored on the server between requests. A session id is passed between client and server with every request and response, transparently to the user. This adds state information to the otherwise stateless HTTP request/response protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea1ae7769d785eabd5ef7b907213853f32713da" translate="yes" xml:space="preserve">
          <source>This flag has no effect on clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cecb3f2f18dcb24dd1303140a86d761d23c5c5" translate="yes" xml:space="preserve">
          <source>This flag only has effect on platforms on which file renames are atomic (e.g. all POSIX platforms: Linux, MacOS X, FreeBSD, etc). The default value is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64429a48228842ec6baae14037834a4f25426e3c" translate="yes" xml:space="preserve">
          <source>This function is to be called when a new plugin is installed. This function shall add the functions of the plugin to existing maps and also the name to source location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f734b371c19801261f4b605341a0d4800f5d81" translate="yes" xml:space="preserve">
          <source>This generates a sequence of &lt;code&gt;ary.size&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;-element arrays, where &lt;em&gt;n&lt;/em&gt; is one more than the count of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf565fdbd3135bed7ce481ef02093a89e829596d" translate="yes" xml:space="preserve">
          <source>This generates application/x-www-form-urlencoded data defined in HTML5 from given an &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c68bf577cd5c7907caa779c0f5e3d638b0da92" translate="yes" xml:space="preserve">
          <source>This happens because an atom in the regexp is quantified by both an immediate &lt;code&gt;+&lt;/code&gt; and an enclosing &lt;code&gt;*&lt;/code&gt; with nothing to differentiate which is in control of any particular character. The nondeterminism that results produces super-linear performance. (Consult &lt;em&gt;Mastering Regular Expressions&lt;/em&gt; (3rd ed.), pp 222, by &lt;em&gt;Jeffery Friedl&lt;/em&gt;, for an in-depth analysis). This particular case can be fixed by use of atomic grouping, which prevents the unnecessary backtracking:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e316d6d2181b1a412e7e5c077c74ed5c86bb745" translate="yes" xml:space="preserve">
          <source>This has been tested to the best of my ability with all non-&amp;ldquo;dummy&amp;rdquo; Encodings Ruby ships with. However, it is brave new code and may have some bugs. Please feel free to &lt;a href=&quot;mailto:james@grayproductions.net&quot;&gt;report&lt;/a&gt; any issues you find with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d70c28e75dd0b7cd6bac4f886f8ca2073fd828" translate="yes" xml:space="preserve">
          <source>This has the same output as above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefc514ff95404c9ddfe54ca1a4052ae1d442d6d" translate="yes" xml:space="preserve">
          <source>This hash includes information about method/constant cache serials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87215221779b5990e6ed19fb4c3ddb16710f623" translate="yes" xml:space="preserve">
          <source>This illustrates setting up a simple client-server drb system. Run the server and client code in different terminals, starting the server code first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe705607584fcba4cdc97706800046495affc4a" translate="yes" xml:space="preserve">
          <source>This implementation looks up the reference id in the local object space and returns the object it refers to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7568fad9fb7d5e72963046f57eb024fbd03a4ae2" translate="yes" xml:space="preserve">
          <source>This implementation returns the object's __id__ in the local object space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcc2d54d9621d66b866d3d0ac1bdabc9fa5a92b" translate="yes" xml:space="preserve">
          <source>This implicitly creates an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1e1a91be74034f472ecdda7077322dba67f54c" translate="yes" xml:space="preserve">
          <source>This implies that a subsequent decoding step is required to completely decode implicitly tagged values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3b1000ddb8ff94b3f38712b482e5e563ba8b68" translate="yes" xml:space="preserve">
          <source>This internally uses &lt;a href=&quot;uri#method-c-encode_www_form_component&quot;&gt;&lt;code&gt;URI.encode_www_form_component(str)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9be11b2eccc3251c39db940f9b4fd164e5b447" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of headers, similar to that used by &lt;a href=&quot;cgi#method-i-http_header&quot;&gt;&lt;code&gt;http_header&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1bb00a84d4f7647b014b6674e4d7b5c31d9595" translate="yes" xml:space="preserve">
          <source>This is a convenience method which is same as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98ad935f43dd591947c3209e07d1deea06ddd2e" translate="yes" xml:space="preserve">
          <source>This is a deprecated alias for &lt;a href=&quot;stringio#method-i-each_byte&quot;&gt;&lt;code&gt;each_byte&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdc12787d9a92b449d4c95d5b24468fd261dfc7" translate="yes" xml:space="preserve">
          <source>This is a deprecated alias for &lt;code&gt;each_byte&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97659ea52634e83a7017e5bbe8602e4c9ef918c3" translate="yes" xml:space="preserve">
          <source>This is a deprecated alias for &lt;code&gt;each_char&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582a2274ee472d6821f63608ed9b6c6123000b8b" translate="yes" xml:space="preserve">
          <source>This is a deprecated alias for &lt;code&gt;each_codepoint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f035184c3c87a45006b2d5ddaf3d34dfe629e9" translate="yes" xml:space="preserve">
          <source>This is a deprecated alias for &lt;code&gt;each_line&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e29a0b030315f8dadea9a8afedfb04907cffb4" translate="yes" xml:space="preserve">
          <source>This is a less common &lt;a href=&quot;ftp&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; command, to send account information if the destination host requires it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed327b8c910759efcc89e9ed5fee907cecb67b90" translate="yes" xml:space="preserve">
          <source>This is a maximum size &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will read ahead looking for the closing quote for a field. (In truth, it reads to the first line ending beyond this size.) If a quote cannot be found within the limit &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will raise a &lt;a href=&quot;csv/malformedcsverror&quot;&gt;&lt;code&gt;MalformedCSVError&lt;/code&gt;&lt;/a&gt;, assuming the data is faulty. You can use this limit to prevent what are effectively DoS attacks on the parser. However, this limit can cause a legitimate parse to fail and thus is set to &lt;code&gt;nil&lt;/code&gt;, or off, by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2da53d3db241ebc4eaa9504b49bed758a48772" translate="yes" xml:space="preserve">
          <source>This is a pseudo-prime generator, suitable on checking primality of an integer by brute force method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5fddab2d40af19ee392ae0011fc01287cf7553" translate="yes" xml:space="preserve">
          <source>This is achieved by converting &lt;code&gt;numeric&lt;/code&gt; to a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5fc1cc99f4a5cc04491ade917bc7120d3a4886" translate="yes" xml:space="preserve">
          <source>This is achieved by converting &lt;code&gt;numeric&lt;/code&gt; to a Bignum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a975c1f1ef2f6398bbe2d3a562f131dafd3754" translate="yes" xml:space="preserve">
          <source>This is also a quick way to build up multi-dimensional arrays:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ace4bd5fea33d83850e4f755c7be704a7195cd" translate="yes" xml:space="preserve">
          <source>This is an implementation of &lt;a href=&quot;http://www.w3.org/TR/2013/CR-html5-20130806/forms.html#url-encoded-form-data&quot;&gt;www.w3.org/TR/2013/CR-html5-20130806/forms.html#url-encoded-form-data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b04f655735f5b7cfc5899052a7a97ddd6223550" translate="yes" xml:space="preserve">
          <source>This is available only when built with a capable &lt;a href=&quot;openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; and &amp;ndash;enable-debug configure option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0f348bc79e24a0cc1deb5406180f8c77fa49fc" translate="yes" xml:space="preserve">
          <source>This is available when rubygems/test_utilities is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266e6fa0b71960513d5e0f4df9e6887578b9ba4a" translate="yes" xml:space="preserve">
          <source>This is called automatically based on the &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe11ebcb1a04c3d7a71a2b5b3b21082dd1b7b71c" translate="yes" xml:space="preserve">
          <source>This is called to update the spec and installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40357027784bb19d3914ada3b8084465fa150fd" translate="yes" xml:space="preserve">
          <source>This is called when a new DRb::DRbServer is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdbab8cfb5f4a634b0e5741942c2b30c102aa66" translate="yes" xml:space="preserve">
          <source>This is create identifier, which is used to decide if the &lt;em&gt;json_create&lt;/em&gt; hook of a class should be called. It defaults to 'json_class'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d96d520ad22856d529ab3f7cb8353a1071ddf09" translate="yes" xml:space="preserve">
          <source>This is defined directly to avoid having to load every installed spec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2144a315c9cc0a15e0f30856beed76df431f333c" translate="yes" xml:space="preserve">
          <source>This is done to catch errors in threads early. In some cases, you might not want this output. There are multiple ways to avoid the extra output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6961ce8795aff5f475816d6cf8c78fe957508bfb" translate="yes" xml:space="preserve">
          <source>This is exactly what &lt;code&gt;sort_by&lt;/code&gt; does internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b77a8c8cfb29b9afa98c1104b12017b96fb9da6" translate="yes" xml:space="preserve">
          <source>This is expected to be an instance such as &lt;a href=&quot;drb/drbidconv&quot;&gt;&lt;code&gt;DRb::DRbIdConv&lt;/code&gt;&lt;/a&gt; that responds to &lt;a href=&quot;drb#method-i-to_id&quot;&gt;&lt;code&gt;to_id&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;drb#method-i-to_obj&quot;&gt;&lt;code&gt;to_obj&lt;/code&gt;&lt;/a&gt; that can convert objects to and from &lt;a href=&quot;drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5b3f8a07762c737b947bdbc33059018cc597ed" translate="yes" xml:space="preserve">
          <source>This is for use with other formats that use the deflate compressed data format such as zip which provide their own check values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9ea74ec7ac0af2df2dbdb723d9123357f309cb" translate="yes" xml:space="preserve">
          <source>This is just hint for Ruby thread scheduler. It may be ignored on some platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d549372c846287d64cbd92e1c74946d978fc4bd" translate="yes" xml:space="preserve">
          <source>This is not only unuseful but also troublesome because it may hide a type error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bcdbb286be5bc995a0efdb1e6e81f84a4971aa" translate="yes" xml:space="preserve">
          <source>This is same as &lt;code&gt;self + '..'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368ae7a03e1c897f249dbc6ab92a0dd7fe77a498" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;prettyprint#method-c-format&quot;&gt;&lt;code&gt;PrettyPrint::format&lt;/code&gt;&lt;/a&gt; but the result has no breaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb026c7397a4c08514892f4a928b3c799f52dc3" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;prettyprint#method-i-breakable&quot;&gt;&lt;code&gt;breakable&lt;/code&gt;&lt;/a&gt; except the decision to break or not is determined individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7947c5df10993e7bff6c77d9b2a5a4ef9f803cb" translate="yes" xml:space="preserve">
          <source>This is stored with the app and source plugins should try to provide specs and install only from this cache when `cached!` is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe953bda2efad7bc73445d62be762f852f6ff5a" translate="yes" xml:space="preserve">
          <source>This is superior to unauthenticated modes in that it allows to detect if somebody effectively changed the ciphertext after it had been encrypted. This prevents malicious modifications of the ciphertext that could otherwise be exploited to modify ciphertexts in ways beneficial to potential attackers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a40681ae1cb7bcc3350c3d565caa2492780ed2" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; of the current server. See &lt;a href=&quot;drb#method-i-current_server&quot;&gt;&lt;code&gt;current_server&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588ec521075944a6bd0609be984ef4950d132a85" translate="yes" xml:space="preserve">
          <source>This is the SSL verification mode. See OpenSSL::SSL::VERIFY_* for available modes. The default is OpenSSL::SSL::VERIFY_NONE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1538d851909e637f97823815668f17a275226fa4" translate="yes" xml:space="preserve">
          <source>This is the basis for the tests in the &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ea67947808e88f5bdb187691378c263aa1c3c8" translate="yes" xml:space="preserve">
          <source>This is the default ordering, if the environment variable POSIXLY_CORRECT is set. (This is for compatibility with GNU getopt_long.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43139643d8c2490bbeb757b835d1c5838bad098b" translate="yes" xml:space="preserve">
          <source>This is the error raised if &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; fails the cert verification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb7c9904e973d8d94b68153f017c6b5aa2abc1b" translate="yes" xml:space="preserve">
          <source>This is the error raised when a source is HTTPS and &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; didn't load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e4306a08943593bff41780d3db0da7306a2a26" translate="yes" xml:space="preserve">
          <source>This is the generic exception for &lt;a href=&quot;../engine&quot;&gt;&lt;code&gt;OpenSSL::Engine&lt;/code&gt;&lt;/a&gt; related errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f1d4f818b79b261b0b0f99a1f13d2f75d21a99" translate="yes" xml:space="preserve">
          <source>This is the interfacing class represents the &lt;a href=&quot;plugin/api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; that we intend to provide the plugins to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fcc23a2847738f74ba4a0dab501dd229eb0ef7" translate="yes" xml:space="preserve">
          <source>This is the path which is going to contain a cache of the git repository. When using the same git repository across different projects, this cache will be shared. When using local git repos, this is set to the local repo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255cd6bb4c23248512665bd93c0cd45a665c0238" translate="yes" xml:space="preserve">
          <source>This is the path which is going to contain a specific checkout of the git repository. When using local git repos, this is set to the local repo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b09fd3f320cf9c2ec7f33a4e28bc81874ef1402" translate="yes" xml:space="preserve">
          <source>This is the recommended way to customize a struct. Subclassing an anonymous struct creates an extra anonymous class that will never be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd43c3aae3ae80ad11f00da512c4c3ddd8344a2" translate="yes" xml:space="preserve">
          <source>This is the same as using the &lt;code&gt;options_hash&lt;/code&gt; form with the value &lt;code&gt;{ :tag_maker =&amp;gt; tag_maker }&lt;/code&gt; Note that it is recommended to use the &lt;code&gt;options_hash&lt;/code&gt; form, since it also allows you specify the charset you will accept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb4a1976cc9d28190a115505e632357a8eccab2" translate="yes" xml:space="preserve">
          <source>This is the server created by the &lt;a href=&quot;drb#method-i-start_service&quot;&gt;&lt;code&gt;start_service&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f2f9e2a256ebe9fbea58bebb6ee421d353254b" translate="yes" xml:space="preserve">
          <source>This is the super class of all primitive values. &lt;a href=&quot;asn1/primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; itself is not used when parsing ASN.1 data, all values are either instances of a corresponding sub-class of &lt;a href=&quot;asn1/primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; or they are instances of &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; if the value was tagged implicitly or explicitly. Please cf. &lt;a href=&quot;asn1/primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; documentation for details on sub-classes and their respective mappings of ASN.1 data types to Ruby objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2deae2c251d989d9ef608b429dd60b48d3423663" translate="yes" xml:space="preserve">
          <source>This is the thread that listens for and accepts connections from clients, not that handles each client's request-response session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfde52152c8793b0b68017760a68143e22eb23c3" translate="yes" xml:space="preserve">
          <source>This is typically &amp;ldquo;/etc&amp;rdquo;, but is modified by the prefix used when Ruby was compiled. For example, if Ruby is built and installed in /usr/local, returns &amp;ldquo;/usr/local/etc&amp;rdquo; on other platforms than Windows. On Windows, this always returns the directory provided by the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc84627cae273d4fd0d18dad37679bd5858800b0" translate="yes" xml:space="preserve">
          <source>This is used as a predicate, and ought to be called first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef64d8f664b9e1112ec959296fb50a3265d1cb2" translate="yes" xml:space="preserve">
          <source>This is used by `app_cache_path`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da10998e15117c44d2e05a079c3ede1fcfa9d7c" translate="yes" xml:space="preserve">
          <source>This is used by the default `spec` method to constructs the Specification objects for the gems and versions that can be installed by this source plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ffad53946316789d4febc50f7d5f36878bd040" translate="yes" xml:space="preserve">
          <source>This is very similar to the class method &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a898d752fab4171f1a9e7e82ee6c03d49ff71d16" translate="yes" xml:space="preserve">
          <source>This is what we do in bundler/rubygems_ext &lt;a href=&quot;stubspecification#method-i-full_require_paths&quot;&gt;&lt;code&gt;full_require_paths&lt;/code&gt;&lt;/a&gt; is always implemented in &amp;gt;= 2.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d5b50d564d2d7659e7187bea26b405f251f38b" translate="yes" xml:space="preserve">
          <source>This library does NOT provide functions to compose internet mails. You must create them by yourself. If you want better mail support, try RubyMail or TMail or search for alternatives in &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems.org&lt;/a&gt; or &lt;a href=&quot;https://www.ruby-toolbox.com/&quot;&gt;The Ruby Toolbox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab157b72b185b9bbd8d4e352afce6dfedf51ad7" translate="yes" xml:space="preserve">
          <source>This library is an interface to secure random number generators which are suitable for generating session keys in HTTP cookies, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e3c50c088680df721f45359102c7833d41b376" translate="yes" xml:space="preserve">
          <source>This library provides functionality for retrieving email via &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, the Post Office Protocol version 3. For details of &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, see [RFC1939] (&lt;a href=&quot;http://www.ietf.org/rfc/rfc1939.txt&quot;&gt;www.ietf.org/rfc/rfc1939.txt&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877abf9476c21ce9548164fc5622fb2a68fb7440" translate="yes" xml:space="preserve">
          <source>This library provides functionality to send internet mail via &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt;, the Simple Mail Transfer Protocol. For details of &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; itself, see [RFC2821] (&lt;a href=&quot;http://www.ietf.org/rfc/rfc2821.txt&quot;&gt;www.ietf.org/rfc/rfc2821.txt&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd945bdbb43d18d4f94931ba37a59e1d0271493" translate="yes" xml:space="preserve">
          <source>This library provides three different ways to delegate method calls to an object. The easiest to use is &lt;a href=&quot;simpledelegator&quot;&gt;&lt;code&gt;SimpleDelegator&lt;/code&gt;&lt;/a&gt;. Pass an object to the constructor and all methods supported by the object will be delegated. This object can be changed later.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
