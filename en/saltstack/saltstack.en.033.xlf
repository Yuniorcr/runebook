<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="saltstack">
    <body>
      <group id="saltstack">
        <trans-unit id="d3e27516311c13b74bd72e9f697f3a3fc20534ef" translate="yes" xml:space="preserve">
          <source>This class implements the saltcheck</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be941d2e57348b07015bfed274cde47c734d8c8b" translate="yes" xml:space="preserve">
          <source>This class is to resolve all available modules in Ansible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311afd46f394c9c244e23ba3591111187265fcd9" translate="yes" xml:space="preserve">
          <source>This class receives and processes the database rows from MySQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2642b14a51e02086709fe5fba795b216da83d6b" translate="yes" xml:space="preserve">
          <source>This class receives and processes the database rows from POSTGRES.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3457efe3ae834506eb84a017ad0cb071392f2c18" translate="yes" xml:space="preserve">
          <source>This class receives and processes the database rows from SQLCipher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9831cd2212b1b6ad8c0c2fa2dc2190a2666ba53d" translate="yes" xml:space="preserve">
          <source>This class receives and processes the database rows from SQLite3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e18c826edd88942972f08613610b3ec3e5dca82" translate="yes" xml:space="preserve">
          <source>This class receives and processes the database rows in a database agnostic way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd06a24250451d92617aae6e18e86ece317475ca" translate="yes" xml:space="preserve">
          <source>This command displays the &quot;diffs&quot; as a series of 2-way differences -- namely the difference between the FIRST displayed minion pool (according to sort order) and EACH SUBSEQUENT minion pool result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abe2de01153e6ceb103fb784a39eb18e01ecc86" translate="yes" xml:space="preserve">
          <source>This command fails with the following error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe27d7c92972d6d222a93f7cfa5fe3b654e14de7" translate="yes" xml:space="preserve">
          <source>This command is commonly used to mark specific packages to be held from being upgraded, that is, to be kept at a certain version. When a state is changed to anything but being held, then it is typically followed by &lt;code&gt;apt-get -u dselect-upgrade&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6eba8d9a4f122e0c8a45d76bef681f9220fed6" translate="yes" xml:space="preserve">
          <source>This command is submitted via a salt runner using the general form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113482d5fafa1e54f27b35ec5398c64f0e1dd8b6" translate="yes" xml:space="preserve">
          <source>This command will not change the state of a running or paused machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72b4f7a684da1a5ff02b20e67777261399304d0" translate="yes" xml:space="preserve">
          <source>This command will not return an &lt;code&gt;api_key&lt;/code&gt; to you; that will be sent to you via email from Venafi. Once you have received that key, open up your &lt;code&gt;master&lt;/code&gt; file and set the &lt;code&gt;api_key&lt;/code&gt; to it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52ec80a276c74a88ce470ee3a96fcef672b2db4" translate="yes" xml:space="preserve">
          <source>This command would be the equivalent of running &lt;code&gt;dsc.compile_config&lt;/code&gt; followed by &lt;code&gt;dsc.apply_config&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bbadafab1147e736545c3ab84adb014ff7353e" translate="yes" xml:space="preserve">
          <source>This configuration enables Salt Master to send an email when accepting or rejecting minions keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5025106930215efe1fcbc8619089ab37801253" translate="yes" xml:space="preserve">
          <source>This counter part definition will ensure than a job with a special keyword is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606279a10fce7eadea624c7be84adccc65f7c1fc" translate="yes" xml:space="preserve">
          <source>This creates the following in /etc/exports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1c94f2bece4b1e40e872f27bb57c517cd83b92" translate="yes" xml:space="preserve">
          <source>This currently only works with local user accounts, not domain accounts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfaa06e6bef83f2fd559df356f6354e5990d243" translate="yes" xml:space="preserve">
          <source>This custom saltstack &lt;code&gt;ext_pillar&lt;/code&gt; is a direct ripoff of the 'stack' ext_pillar, simply ported to use mako instead of jinja2 for templating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4756310cd4b46e40ff9412a383b015046ea96cca" translate="yes" xml:space="preserve">
          <source>This data can also be passed into &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/tutorials/pillar.html#pillar-walk-through&quot;&gt;pillar&lt;/a&gt;. Options passed into opts will overwrite options passed into pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c85364bdb5dacfa5eef45143e4880046eb44ff8" translate="yes" xml:space="preserve">
          <source>This data can also be passed into pillar. Options passed into opts will overwrite options passed into pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ec4ce3c1af6a2e49a42836169564e69f041a43" translate="yes" xml:space="preserve">
          <source>This determines how many independent copies of each data point are stored in a cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684a1d9a4f71b4f44f8cb5a4fd93295cf17221a4" translate="yes" xml:space="preserve">
          <source>This dictates the release of the distro the packages should be built for. (e.g. unstable). This option is rarely needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564a9cf62966bf780097562900a9041001160936" translate="yes" xml:space="preserve">
          <source>This differs from the default behavior of &lt;a href=&quot;../../modules/all/salt.modules.git#salt.modules.git.init&quot;&gt;&lt;code&gt;git.init&lt;/code&gt;&lt;/a&gt;, make sure to set this value to &lt;code&gt;False&lt;/code&gt; if a bare repo is not desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731d4008686aa54f5751cb9dec0c51e1ba3104a0" translate="yes" xml:space="preserve">
          <source>This does &lt;strong&gt;NOT&lt;/strong&gt; override any grains set in the minion config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538cecd8a183f7c6b9421f323337a22d8fbe4811" translate="yes" xml:space="preserve">
          <source>This does a zoneacfg clear call. So the property may be reset to a default value! Does has the side effect of always having to be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b75fbc6eb173fa18d36cbe9348dc3abe46760a" translate="yes" xml:space="preserve">
          <source>This does the same thing as &lt;a href=&quot;#salt.modules.ldap3.modify&quot;&gt;&lt;code&gt;modify()&lt;/code&gt;&lt;/a&gt;, but with a simpler interface. Instead of taking a list of directives, it takes a before and after view of an entry, determines the differences between the two, computes the directives, and executes them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec847b16e88d6d171bf054028d7b15f05b6338ca" translate="yes" xml:space="preserve">
          <source>This does the same thing as vagrant.stop. Other-VM control modules use &quot;stop&quot; and &quot;shutdown&quot; to differentiate between hard and soft shutdowns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65c9cde42d5cfb4d542bbddb1eafcf3d7f968c7" translate="yes" xml:space="preserve">
          <source>This driver also supports Vultr's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60aab03c8e197af0a51d729cae5782f5c732f08b" translate="yes" xml:space="preserve">
          <source>This driver can also be used with the Joyent SmartDataCenter project. More details can be found at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828fd3e1802635f2d3cc40832244193bdc56bba4" translate="yes" xml:space="preserve">
          <source>This driver supports accessing new VM instances via DNS entry instead of IP address. To enable this feature, in the provider or profile file add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999704f829594e0b7b77ce4679caad0b3a2ddddd" translate="yes" xml:space="preserve">
          <source>This endpoint accepts either a &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;eauth&lt;/code&gt; trio, &lt;strong&gt;or&lt;/strong&gt; a &lt;code&gt;token&lt;/code&gt; kwarg and does not make use of sessions at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3b9b1d9d80dea3cfa7182a326b4215458546d7" translate="yes" xml:space="preserve">
          <source>This endpoint is used with a check that is of the TTL type. When this is called, the status of the check is set to critical and the TTL clock is reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5220902b247e91a7c136db871cd4eb120390e518" translate="yes" xml:space="preserve">
          <source>This endpoint is used with a check that is of the TTL type. When this is called, the status of the check is set to passing and the TTL clock is reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c41abe8761f1dd945793c1e90d4f421e6c1d32" translate="yes" xml:space="preserve">
          <source>This endpoint is used with a check that is of the TTL type. When this is called, the status of the check is set to warning and the TTL clock is reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbce872eb963e6169744ee9802c55a7d84b4798" translate="yes" xml:space="preserve">
          <source>This engine can be run on the master or on a minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd740ba05d19bb60b61a8f9c4628100eada5940" translate="yes" xml:space="preserve">
          <source>This engine has two boolean configuration parameters that toggle specific features (both default to &lt;code&gt;False&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8155b02d5d53b16f81502787a05cb41e3d154782" translate="yes" xml:space="preserve">
          <source>This engine requires a bot user. To create a bot user, first go to the &lt;strong&gt;Custom Integrations&lt;/strong&gt; page in your Slack Workspace. Copy and paste the following URL, and replace &lt;code&gt;myworkspace&lt;/code&gt; with the proper value for your workspace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252d8778ac72d12a484963f2a809ba65c1de2ec7" translate="yes" xml:space="preserve">
          <source>This engine sends events calls to the event stream without authenticating them in salt. Authentication will need to be configured and enforced on the irc server or enforced in the irc channel. The engine only accepts commands from channels, so non authenticated users could be banned or quieted in the channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9254b08956f67cbf6574f7a83002d63b7cf9ff" translate="yes" xml:space="preserve">
          <source>This engine sends webhook calls to the event stream. If the engine is running on a minion with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0458b7e9a35fb4fdaafc790daf5dbd7f12a412" translate="yes" xml:space="preserve">
          <source>This engine transfers objects from the napalm-logs library into the event bus. The top dictionary has the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de87b9961339a765c3523665016cbb317c3df622" translate="yes" xml:space="preserve">
          <source>This even works with &lt;code&gt;include&lt;/code&gt; + &lt;code&gt;extend&lt;/code&gt; so that you can override the default configured arguments by including the salt file and then &lt;code&gt;extend&lt;/code&gt; the &lt;code&gt;stateconf.set&lt;/code&gt; states that come from the included salt file. (&lt;em&gt;IMPORTANT: Both the included and the extending sls files must use the stateconf renderer for this ``extend`` to work!&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677b615a77162e7b97c3dea758694e725c73801f" translate="yes" xml:space="preserve">
          <source>This example command should build the libnacl SOURCE package and place it in /var/www/html/ on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d213924df84a1dd2d832db2c22096a5903d3e3b" translate="yes" xml:space="preserve">
          <source>This example command should build the libnacl package for Debian using pbuilder and place it in /var/www/html/ on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead8190816c7e6b3ecbc2e92705d961de21455a7" translate="yes" xml:space="preserve">
          <source>This example command should build the libnacl package for rhel 7 using user mock and place it in /var/www/html/ on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f33169e3c40ff52a0fa8333fae6e6a80b538f64" translate="yes" xml:space="preserve">
          <source>This example maps all Pillar environments starting with &lt;code&gt;dev-&lt;/code&gt; to &lt;code&gt;dev-datacenter&lt;/code&gt; whereas Pillar environment like &lt;code&gt;eu-prod&lt;/code&gt; will be mapped to &lt;code&gt;prod-datacenter-eu&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cd0108b26c48945aef97c952b2e1fe94a2c947" translate="yes" xml:space="preserve">
          <source>This example shows multiple groups applying to different users, with all users having access to run test.ping. Keep in mind that when using &lt;code&gt;*&lt;/code&gt;, the value must be quoted, or else PyYAML will fail to load the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a98ca55361ea6e8061af2d929ca5c50477d8e8a" translate="yes" xml:space="preserve">
          <source>This example uses a single group called &lt;code&gt;default&lt;/code&gt;. In addition, other groups are being loaded from pillar data. The group names do not have any significance, it is the users and commands defined within them that are used to determine whether the Slack user has permission to run the desired command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909b716bcb5c7a0caa2d655d36b8b75dd1788e08" translate="yes" xml:space="preserve">
          <source>This example will download the file from the remote cloud and keep it locally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e428037cec2c3a74547bddd9ac1d81fd20f83113" translate="yes" xml:space="preserve">
          <source>This example would allow the file state to change, but would limit the concurrency of the trafficserver service restart to 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cdd8f372434d9f2d6473a869993c445d99478d" translate="yes" xml:space="preserve">
          <source>This example would instruct all Salt minions to download the vimrc from a directory with the same name as their os grain and copy it to /etc/vimrc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2138d85206c1d68885b26f3b9c733eaa67102f" translate="yes" xml:space="preserve">
          <source>This executes the following command on your FX2 (using username and password stored in the pillar data)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6718fff020a4f13ec672b0ec303b20cb97490e4" translate="yes" xml:space="preserve">
          <source>This execution module calls through to a function in the ESXi proxy module called &lt;code&gt;ch_config&lt;/code&gt;, which looks up the function passed in the &lt;code&gt;command&lt;/code&gt; parameter in &lt;a href=&quot;salt.modules.vsphere#module-salt.modules.vsphere&quot;&gt;&lt;code&gt;salt.modules.vsphere&lt;/code&gt;&lt;/a&gt; and calls it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0317044f3fc653a7b314e5ada271388d839571e6" translate="yes" xml:space="preserve">
          <source>This execution module calls through to a function in the fx2 proxy module called &lt;code&gt;chconfig&lt;/code&gt;. That function looks up the function passed in the &lt;code&gt;cmd&lt;/code&gt; parameter in &lt;a href=&quot;salt.modules.dracr#module-salt.modules.dracr&quot;&gt;&lt;code&gt;salt.modules.dracr&lt;/code&gt;&lt;/a&gt; and calls it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e1226b3ec5ec3ef27cc685d6c018f0b086cdf1" translate="yes" xml:space="preserve">
          <source>This execution module is intended to be executed on minions. Master-side operations such as Pillar or Orchestrate that require Mine data should use the &lt;a href=&quot;../../runners/all/salt.runners.mine#module-salt.runners.mine&quot;&gt;&lt;code&gt;Mine Runner module&lt;/code&gt;&lt;/a&gt; instead; it can be invoked from a Pillar SLS file using the &lt;a href=&quot;salt.modules.saltutil#salt.modules.saltutil.runner&quot;&gt;&lt;code&gt;saltutil.runner&lt;/code&gt;&lt;/a&gt; module. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0316002ba3ee36375853f4e1930b3efca33d2aad" translate="yes" xml:space="preserve">
          <source>This execution module provides functions that shadow those from the &lt;a href=&quot;salt.modules.cmdmod#module-salt.modules.cmdmod&quot;&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/a&gt; module. They are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffaca63c3fb6a934e2e64bb55903670bfd20bee" translate="yes" xml:space="preserve">
          <source>This execution module requires at least version 1.4.0 of both &lt;a href=&quot;https://pypi.python.org/pypi/docker-compose&quot;&gt;docker-compose&lt;/a&gt; and &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;. docker-compose can easily be installed using &lt;a href=&quot;salt.modules.pip#salt.modules.pip.install&quot;&gt;&lt;code&gt;pip.install&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34187b549dfdc1b6f4d6412558abf3a491880545" translate="yes" xml:space="preserve">
          <source>This execution module was designed to be able to handle connections both to a vCenter Server, as well as to an ESXi host. It utilizes the pyVmomi Python library and the ESXCLI package to run remote execution functions against either the defined vCenter server or the ESXi host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117cc0aabedf1055b6ab227346724fb43c9335d8" translate="yes" xml:space="preserve">
          <source>This execution module was designed to handle connections to a Cisco UCS server. This module adds support to send connections directly to the device through the rest API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3176b2e6221ce0af76aadc357a5c7b18e775dfe6" translate="yes" xml:space="preserve">
          <source>This execution module was designed to handle connections to a Palo Alto based firewall. This module adds support to send connections directly to the device through the XML API or through a brokered connection to Panorama.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f178975308267b373ca178fdbe857284ec30ffe7" translate="yes" xml:space="preserve">
          <source>This external Pillar source can be configured in the master config file as such:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b97362a2e4ed978cdb4f2f54d67dfe8f89be58" translate="yes" xml:space="preserve">
          <source>This external Pillar source can be configured in the master config file like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac7a1fd3831f1c3a0579c5d31b7477d433acc9c" translate="yes" xml:space="preserve">
          <source>This external pillar allows for a Pillar top file and Pillar SLS files to be sourced from a git repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e93fc1f4af02db52cbbc49f7a6fbdd45e55ef6" translate="yes" xml:space="preserve">
          <source>This external pillar can pull attributes from objects in vCenter or an ESXi host and provide those attributes as pillar data to minions. This can allow for pillar based targeting of minions on ESXi host, Datastore, VM configuration, etc. This setup requires only the salt master have access to the vCenter server/ESXi hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730e5747d2faca0f0903bdd6a921dca128e48249" translate="yes" xml:space="preserve">
          <source>This facilitates the context where both types are required for the same subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f967f48d9341eccb83c231b87bff6b57997813be" translate="yes" xml:space="preserve">
          <source>This feature is not recommended to be used in production. It should be used for testing only!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d4516192ffda355c0eeeec023e14cfdba5331b" translate="yes" xml:space="preserve">
          <source>This feature is not yet implemented for Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcd123fc95e2b61ad0de46a1c9c6b19d243f358" translate="yes" xml:space="preserve">
          <source>This feature must be enabled to be used. See zpool-features(5) for details on ZFS feature flags and the bookmarks feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7684d5c33038102228a9720d7cc75531fad5fd" translate="yes" xml:space="preserve">
          <source>This feature requires the minion to be running a bdist_esky build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f7005e7c001ffda654b43612cf6e02416688a0" translate="yes" xml:space="preserve">
          <source>This feature works on any platforms, as it does not rely on the native features of the network operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c15c49ec3da21ac1750afe5ca6a401b24a35d7" translate="yes" xml:space="preserve">
          <source>This field can be either 'NONE', or 'AWS_IAM'. This will be applied to all methods in the given swagger spec file. Default is set to 'NONE'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e755beeb09b656c2badcf594f4ab861e530c4fd" translate="yes" xml:space="preserve">
          <source>This field may not be mandatory when working with SSH-based drivers, and the username has a SSH key properly configured on the device targeted to be managed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978aeb4320c6091f57fa17e4c1fac8590810ce0f" translate="yes" xml:space="preserve">
          <source>This file is then grabbed and if it has template set, it renders the file to be placed into the correct place on the system using salt.files.utils.copyfile()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16be9a7855ec7c0982ecc5b382b5fec096a9c82f" translate="yes" xml:space="preserve">
          <source>This fileserver back-end is only compatible with MD5 ETag hashes in the S3 metadata. This means that you must use SSE-S3 or plaintext for bucket encryption, and that you must not use multipart upload when uploading to your bucket. More information here: &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html&quot;&gt;https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698ea814343eda9444321001d0b7304f9a0ffdd7" translate="yes" xml:space="preserve">
          <source>This fileserver back-end requires the use of the MD5 hashing algorithm. MD5 may not be compliant with all security policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750915fddf9ab7dd1314698870734af2debd75d2" translate="yes" xml:space="preserve">
          <source>This fileserver backend serves files from the Master's local filesystem. If &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-fileserver_backend&quot;&gt;&lt;code&gt;fileserver_backend&lt;/code&gt;&lt;/a&gt; is not defined in the Master config file, then this backend is enabled by default. If it &lt;em&gt;is&lt;/em&gt; defined then &lt;code&gt;roots&lt;/code&gt; must be in the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-fileserver_backend&quot;&gt;&lt;code&gt;fileserver_backend&lt;/code&gt;&lt;/a&gt; list to enable this backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d6d002d611feae3a719c7b6fc0fe361ad33f56" translate="yes" xml:space="preserve">
          <source>This fileserver has an additional option &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-hgfs_branch_method&quot;&gt;&lt;code&gt;hgfs_branch_method&lt;/code&gt;&lt;/a&gt; that will set the desired branch method. Possible values are: &lt;code&gt;branches&lt;/code&gt;, &lt;code&gt;bookmarks&lt;/code&gt;, or &lt;code&gt;mixed&lt;/code&gt;. If using &lt;code&gt;branches&lt;/code&gt; or &lt;code&gt;mixed&lt;/code&gt;, the &lt;code&gt;default&lt;/code&gt; branch will be mapped to &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b907295481155623725dfdfc32ddeb193bf31ae" translate="yes" xml:space="preserve">
          <source>This fileserver supports two modes of operation for the buckets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e030a80551d866fc8f269f8320331e4a941b9b" translate="yes" xml:space="preserve">
          <source>This flag is potentially dangerous. It is designed for use when multiple state runs can safely be run at the same time. Do &lt;em&gt;not&lt;/em&gt; use this flag for performance optimization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c697dd8fa1a127af369e287ec9fbc77ce93477c5" translate="yes" xml:space="preserve">
          <source>This function accepts a rule in a standard iptables command format,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f8cb52f95ef0d5d497df541fc3132e3a1a5318" translate="yes" xml:space="preserve">
          <source>This function accepts a rule in a standard nftables command format,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f682cdf4efbb41766c1e1224726474bab07ada1" translate="yes" xml:space="preserve">
          <source>This function accepts all optional host.get parameters: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.4/manual/api/reference/host/get&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971cac72e439ea531d812e3ef9b8d2dc6ff0e873" translate="yes" xml:space="preserve">
          <source>This function accepts all standard host and host.update properties: keyword argument names differ depending on your zabbix version, see the documentation for &lt;a href=&quot;https://www.zabbix.com/documentation/2.4/manual/api/reference/host/object#host&quot;&gt;host objects&lt;/a&gt; and the documentation for &lt;a href=&quot;https://www.zabbix.com/documentation/2.4/manual/api/reference/host/update&quot;&gt;updating hosts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72f714b1b39315c8d8021f2a4e24469176ab05b" translate="yes" xml:space="preserve">
          <source>This function accepts all standard host group interface: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/3.0/manual/api/reference/hostinterface/object&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1241cb50d510a8e04a35fa7da36f6f8575596d0" translate="yes" xml:space="preserve">
          <source>This function accepts all standard host group properties: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.4/manual/api/reference/hostgroup/object#host_group&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d815298e4ce195a4c45ff3708c0097a37ee51c" translate="yes" xml:space="preserve">
          <source>This function accepts all standard host properties: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.4/manual/api/reference/host/object#host&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e219bea49a9ec5e60940a8ae7e32639ff153aefc" translate="yes" xml:space="preserve">
          <source>This function accepts all standard hostgroup.get properities: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.2/manual/api/reference/hostgroup/get&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7f0875d5b61008b80442a1352f54143356754f" translate="yes" xml:space="preserve">
          <source>This function accepts all standard hostinterface.get properities: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.4/manual/api/reference/hostinterface/get&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8356611ff87407beb6f59b1e326db0f5f3791667" translate="yes" xml:space="preserve">
          <source>This function accepts all standard hostinterface: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.4/manual/api/reference/hostinterface/object#host_interface&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6242f3b3fa7c08ed5f19a797b75877f5ca8db450" translate="yes" xml:space="preserve">
          <source>This function accepts all standard mediatype properties: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/3.0/manual/api/reference/mediatype/object&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0514b37c6b4a00e4c0c1f6f1f361454d91179a8" translate="yes" xml:space="preserve">
          <source>This function accepts all standard user group properties: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.0/manual/appendix/api/usergroup/definitions#user_group&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508e9cc689fea9ed9c3b7cc16c4766b7f6ceb8e0" translate="yes" xml:space="preserve">
          <source>This function accepts all standard user group properties: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.4/manual/api/reference/usergroup/object#user_group&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565c9f4815cc4553f56e79112e0d43cd69c56626" translate="yes" xml:space="preserve">
          <source>This function accepts all standard user properties: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.0/manual/appendix/api/user/definitions#user&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90fda1c0e5709827d3b1f5aebb21f56a6abea29" translate="yes" xml:space="preserve">
          <source>This function accepts all standard usermedia.get properties: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/3.2/manual/api/reference/usermedia/get&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82b69f32019829bbfced5596a85a8e340eea4d6" translate="yes" xml:space="preserve">
          <source>This function accepts all usergroup_get properties: keyword argument names differ depending on your zabbix version, see &lt;a href=&quot;https://www.zabbix.com/documentation/2.4/manual/api/reference/usergroup/get&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadceec7e76d591f400682c2bd6382a475a32ccf" translate="yes" xml:space="preserve">
          <source>This function accepts the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7104dd0a4d9c8f2f3122995064dd5f71dc31920" translate="yes" xml:space="preserve">
          <source>This function accepts the same arguments as &lt;a href=&quot;#salt.modules.dockermod.create&quot;&gt;&lt;code&gt;docker.create&lt;/code&gt;&lt;/a&gt;, with the exception of &lt;code&gt;start&lt;/code&gt;. In addition, it accepts the arguments from &lt;a href=&quot;#salt.modules.dockermod.logs&quot;&gt;&lt;code&gt;docker.logs&lt;/code&gt;&lt;/a&gt;, with the exception of &lt;code&gt;follow&lt;/code&gt;, to control how logs are returned. Finally, the &lt;code&gt;bg&lt;/code&gt; argument described below can be used to optionally run the container in the background (the default behavior is to block until the container exits).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ba89ddcd228253b792d51d033e379ec29e3a96" translate="yes" xml:space="preserve">
          <source>This function appends &lt;code&gt;| ConvertTo-JSON&lt;/code&gt; to the command before actually invoking powershell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cba1f5a9ac3531e9309081a1cdf02e3bf96f98a" translate="yes" xml:space="preserve">
          <source>This function calls the configuration template &lt;code&gt;schedule_probes&lt;/code&gt; from the NAPALM library, providing as input a rich formatted dictionary with the names of the probes and the tests to be scheduled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92950524c7788a74dff0121f27edd53e9461bc08" translate="yes" xml:space="preserve">
          <source>This function can accessed using &lt;code&gt;pkg.delete&lt;/code&gt; in addition to &lt;code&gt;pkg.remove&lt;/code&gt;, to more closely match the CLI usage of &lt;code&gt;pkg(8)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f77c692d32230a7d7c9f4f85a945f9e4812f768" translate="yes" xml:space="preserve">
          <source>This function can accessed using &lt;code&gt;pkg.info&lt;/code&gt; in addition to &lt;code&gt;pkg.version&lt;/code&gt;, to more closely match the CLI usage of &lt;code&gt;pkg(8)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c452cd26c7b9841bedc7f77993e9ded25ff2908" translate="yes" xml:space="preserve">
          <source>This function can accessed using &lt;code&gt;pkg.update&lt;/code&gt; in addition to &lt;code&gt;pkg.refresh_db&lt;/code&gt;, to more closely match the CLI usage of &lt;code&gt;pkg(8)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c322010aeed7c84511888ad435f97f59f6e482e" translate="yes" xml:space="preserve">
          <source>This function can be helpful in discovering the version or repo to specify in a &lt;a href=&quot;../../states/all/salt.states.pkg#salt.states.pkg.installed&quot;&gt;&lt;code&gt;pkg.installed&lt;/code&gt;&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c0da79a60ab70c15cd3407931872b1db6b633d" translate="yes" xml:space="preserve">
          <source>This function can be used only when running proxy minions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337f8a01e2f7de46208adbd646c72d0b08807f3b" translate="yes" xml:space="preserve">
          <source>This function can then be used to get the options available for specifying Group Policy Objects to be used in state files. Based on the above any of these &lt;em&gt;should&lt;/em&gt; be usable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb9733fefeaa1046464fee717f75c7c202a4bd3" translate="yes" xml:space="preserve">
          <source>This function captures the query string and sends it to the Palo Alto device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cdb6743b0685b82f04b4ce0daa53572aafd77e" translate="yes" xml:space="preserve">
          <source>This function could return strings which may contain characters which are reserved as directives by the YAML parser, such as strings beginning with &lt;code&gt;%&lt;/code&gt;. To avoid issues when using the output of this function in an SLS file containing YAML+Jinja, surround the call with single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fb864eeed4bbea842f8a358ffbfc378b8653ee" translate="yes" xml:space="preserve">
          <source>This function deletes the specified repo on the system, if it exists. It is essentially a wrapper around pkg.del_repo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfd82fd8d3696ad4c9ffb22df1d92e7e5c60848" translate="yes" xml:space="preserve">
          <source>This function does not ask a master for a SLS file to render but instead directly processes the file at the provided path on the minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f9e6594d9d3ae9a68323752761b336edab4976" translate="yes" xml:space="preserve">
          <source>This function does not ask a master for an sls file to render. Instead it directly processes the file specified in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce10e08012baaeb3e6481288fe5d00900a52ef09" translate="yes" xml:space="preserve">
          <source>This function does not create the file if it doesn't exist, it will return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0929d8ec08a5b6e0abe6613029018cd58d36721" translate="yes" xml:space="preserve">
          <source>This function does not process commands through a shell unless the &lt;code&gt;python_shell&lt;/code&gt; argument is set to &lt;code&gt;True&lt;/code&gt;. This means that any shell-specific functionality such as 'echo' or the use of pipes, redirection or &amp;amp;&amp;amp;, should either be migrated to cmd.shell or have the python_shell=True flag set here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a542e6807fc00f1829755221742c7ed4fc4b45" translate="yes" xml:space="preserve">
          <source>This function does not process commands through a shell unless the python_shell flag is set to True. This means that any shell-specific functionality such as 'echo' or the use of pipes, redirection or &amp;amp;&amp;amp;, should either be migrated to cmd.shell or have the python_shell=True flag set here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8b28be7ae41c678b08cf947f154fd8154c3711" translate="yes" xml:space="preserve">
          <source>This function does not support topfiles. For &lt;code&gt;top.sls&lt;/code&gt; please use &lt;code&gt;show_top&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacb05c5e9dc8f54f0462bf7c21c4f56d195057b" translate="yes" xml:space="preserve">
          <source>This function executes the RPC provided as arguments on the junos device. The returned data can be stored in a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d942e18e18c0f8b31836104fbc38d3414817572" translate="yes" xml:space="preserve">
          <source>This function fires the event &lt;code&gt;salt/cloud/vm_name/creating&lt;/code&gt;, with the payload containing the names of the VM, profile, and provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e73ffcd2772f3e6c216426f70dbdc54a3c39ce9" translate="yes" xml:space="preserve">
          <source>This function gets called when the proxy starts up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a316b484c7515e17b20d489dc41dd7c8381820c5" translate="yes" xml:space="preserve">
          <source>This function gets called when the proxy starts up. For ESXi devices, the host, login credentials, and, if configured, the protocol and port are cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fac8a2789a99f45ce0a945f832eaf614dfdaad" translate="yes" xml:space="preserve">
          <source>This function gets called when the proxy starts up. For panos devices, a determination is made on the connection type and the appropriate connection details that must be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1cab2477cb4e2b9586859e821e53df4409d0b0" translate="yes" xml:space="preserve">
          <source>This function gets called when the proxy starts up. We check opts to see if a fallback user and password are supplied. If they are present, and the primary credentials don't work, then we try the backup before failing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826f497f82b525a03d8facfad9998e9c2a7fad00" translate="yes" xml:space="preserve">
          <source>This function has changed for version 0.17.0. In prior versions, the &lt;code&gt;cwd&lt;/code&gt; and &lt;code&gt;template&lt;/code&gt; arguments must be specified, with the source directories/files coming as a space-separated list at the end of the command. Beginning with 0.17.0, &lt;code&gt;sources&lt;/code&gt; must be a comma-separated list, and the &lt;code&gt;cwd&lt;/code&gt; and &lt;code&gt;template&lt;/code&gt; arguments are optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d093b681714af0a016a24f40e690900abe4be8" translate="yes" xml:space="preserve">
          <source>This function has the advantage that it knows where to look, but the output might become quite long as returns all possible matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94d7696ebe4051725266bb189677c31abaf3ac1" translate="yes" xml:space="preserve">
          <source>This function irreversibly destroys a virtual machine on the cloud provider. Before doing so, it should fire an event on the Salt event bus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58408f1d600973545bde1628a2b4bdbe99989b42" translate="yes" xml:space="preserve">
          <source>This function is a combination of defaults.merge and defaults.deepcopy to avoid redundant in jinja.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b55de59700b25acbaea6fe4412f885b2e8a791a" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;compare_containers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61c6ccaed0ca7b48ca5bd40b07d3d5f3856761d" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;hw_addr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f745003ef26fbef0407b6591009219d89b6b52" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;ip_addrs6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11b1db7acd48314ebcea27fd27a835d1040d182" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;ip_addrs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637f523f3bdc15517eabe3d8325c38c794a2fd2c" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;joined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290e44138ad7c5b6e9def06ace75cbb072dba837" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;latest_version&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d267abaaf3bf831e4f95b7b32f0bef12e0e3b8d1" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;list_policies&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd81f3a4379b16b32f42ef8f74d3b7301510c210" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;list_tab&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304b1afecec163746b54199c90f81ea955bf8d45" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;list_windows&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6070caa5a4e27a35a5f28979efc63983ae3e1c1" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;pause&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665f085887688454138ba48c03d1c950b85faf0a" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;resume&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d70e7222d07e040752c84f845c2088de28702b5" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;rm_job&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5078b3b0dfa76d3a0930de50dfc6724277a86b3" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;sync_output&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6b0d5dcc4b7d352cc511b2432b9e22e83961a0" translate="yes" xml:space="preserve">
          <source>This function is an alias of &lt;code&gt;versions_report&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b844439e07d9342fc5e155d959c76b3a959d113" translate="yes" xml:space="preserve">
          <source>This function is called by the &lt;a href=&quot;../../modules/all/salt.modules.chassis#salt.modules.chassis.cmd&quot;&gt;&lt;code&gt;salt.modules.chassis.cmd&lt;/code&gt;&lt;/a&gt; shim. It then calls whatever is passed in &lt;code&gt;cmd&lt;/code&gt; inside the &lt;a href=&quot;../../modules/all/salt.modules.dracr#module-salt.modules.dracr&quot;&gt;&lt;code&gt;salt.modules.dracr&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768647e67d67c7894c71bbfa6b3a4941569e0edc" translate="yes" xml:space="preserve">
          <source>This function is called by the &lt;a href=&quot;../../modules/all/salt.modules.esxi#salt.modules.esxi.cmd&quot;&gt;&lt;code&gt;salt.modules.esxi.cmd&lt;/code&gt;&lt;/a&gt; shim. It then calls whatever is passed in &lt;code&gt;cmd&lt;/code&gt; inside the &lt;a href=&quot;../../modules/all/salt.modules.vsphere#module-salt.modules.vsphere&quot;&gt;&lt;code&gt;salt.modules.vsphere&lt;/code&gt;&lt;/a&gt; module. Passes the return through from the vsphere module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0f62ebc7b8b2e15b859165a84741e1bc442bc0" translate="yes" xml:space="preserve">
          <source>This function is conservative. It will only overwrite an entry if its value and the given one are not a list or a dict. The &lt;code&gt;force&lt;/code&gt; parameter is used to allow overwriting in all cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4ecc4390e5edf2223736d3e660df5439d2e499" translate="yes" xml:space="preserve">
          <source>This function is designed to have terrible performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b76ccf6d62f4d8330bd30e7a5f1aa75227e4393" translate="yes" xml:space="preserve">
          <source>This function is designed to test Salt's exception and return code handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0ab689678a7820b3c210ac83bc901b255b17e0" translate="yes" xml:space="preserve">
          <source>This function is meant to replace all_status(), which returns anything and everything, which we probably don't want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55eaed557e212a561adb2969372ddcc515fc8afa" translate="yes" xml:space="preserve">
          <source>This function is mostly intended for testing the state system and is not likely to be needed in everyday usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8171d2b645dd8b43b43dad9321456cf7f355c77e" translate="yes" xml:space="preserve">
          <source>This function is mostly valuable when invoked from other Salt components (i.e., execution modules, states, templates etc.). For CLI usage, please consider using &lt;code&gt;ciscoconfparse.find_lines&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744d5de9509c527711900ca83ed4a378d49ea9eb" translate="yes" xml:space="preserve">
          <source>This function is mostly valuable when invoked from other Salt components (i.e., execution modules, states, templates etc.). For CLI usage, please consider using &lt;code&gt;ciscoconfparse.find_lines_w_child&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2733c9577f2605a9681b6c40f182afa60b6b12" translate="yes" xml:space="preserve">
          <source>This function is mostly valuable when invoked from other Salt components (i.e., execution modules, states, templates etc.). For CLI usage, please consider using &lt;code&gt;ciscoconfparse.find_lines_wo_child&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12a5cc899d9f6a1e85cbdf2880f93c5b0286549" translate="yes" xml:space="preserve">
          <source>This function is not meant to be used from the command line. Config is meant to be an ordered dict of all of the apache configs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165b4ffdb9ca1596e2ee6a9ba5138c3a01683879" translate="yes" xml:space="preserve">
          <source>This function is not suitable for CLI usage, more rather to be used in various Salt modules, to reusing the established connection, as in opposite to opening a new connection for each task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3508588752a94729a30980930f3c599cd98ca68" translate="yes" xml:space="preserve">
          <source>This function is not suitable for CLI usage, more rather to be used in various Salt modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3abc34711c133e8605fa732848d17c1894a4fa" translate="yes" xml:space="preserve">
          <source>This function is only available in psutil version 0.6.0 and above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b22a006a60617581c7c3dd541c85339074fab3" translate="yes" xml:space="preserve">
          <source>This function is only available only when the underlying library &lt;a href=&quot;http://www.pennington.net/py/ciscoconfparse/index.html&quot;&gt;ciscoconfparse&lt;/a&gt; is installed. See &lt;a href=&quot;salt.modules.ciscoconfparse_mod#module-salt.modules.ciscoconfparse_mod&quot;&gt;&lt;code&gt;ciscoconfparse module&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08849a2ef29fa846459105d50527840f7e57b3c4" translate="yes" xml:space="preserve">
          <source>This function is only available only when the underlying library &lt;a href=&quot;https://github.com/jbardin/scp.py&quot;&gt;scp&lt;/a&gt; is installed. See &lt;a href=&quot;salt.modules.scp_mod#module-salt.modules.scp_mod&quot;&gt;&lt;code&gt;scp module&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0ee0b84419753254a68120eb0895ac3c231627" translate="yes" xml:space="preserve">
          <source>This function is provided primarily for compatibilty with some parts of &lt;a href=&quot;../../states/all/salt.states.pkg#module-salt.states.pkg&quot;&gt;&lt;code&gt;states.pkg&lt;/code&gt;&lt;/a&gt;. Consider using &lt;a href=&quot;#salt.modules.pkgng.unlock&quot;&gt;&lt;code&gt;pkg.unlock&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bdb2e8c55a3c00024bc13c0c8f58dbe29063f0" translate="yes" xml:space="preserve">
          <source>This function is provided primarily for compatibilty with some parts of &lt;a href=&quot;../../states/all/salt.states.pkg#module-salt.states.pkg&quot;&gt;&lt;code&gt;states.pkg&lt;/code&gt;&lt;/a&gt;. Consider using Consider using &lt;a href=&quot;#salt.modules.pkgng.lock&quot;&gt;&lt;code&gt;pkg.lock&lt;/code&gt;&lt;/a&gt; instead. instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9afe873121468158abcd648c0dc50e6235d666c" translate="yes" xml:space="preserve">
          <source>This function is recommended to be used mostly as a state helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63fd6ec72d78da478cc5b85f90522e090fecf46d" translate="yes" xml:space="preserve">
          <source>This function is strict about the type of vdata. For instance this example will fail because vtype has a value of REG_SZ and vdata has a type of int (as opposed to str as expected).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb5c014f8042007bfc302359056a96e966aa688" translate="yes" xml:space="preserve">
          <source>This function is supported only on the platforms that support the &lt;code&gt;commit&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321c5c5c8c8a2e297ca0f90bb1029b2429a687d4" translate="yes" xml:space="preserve">
          <source>This function is used to remember that an event indicating that a reboot is required was witnessed. This function relies on the salt-minion's ability to create the following volatile registry key in the &lt;em&gt;HKLM&lt;/em&gt; hive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdfbd0eb9488321625646cc6043c4b3f810a103" translate="yes" xml:space="preserve">
          <source>This function is used to remember that an event indicating that a reboot is required was witnessed. This function writes to a temporary filesystem so the event gets cleared upon reboot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e021c5f5d50fac89b9b231b39c50fc0d42513efb" translate="yes" xml:space="preserve">
          <source>This function makes sure that all the views that should exist in the design document do exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368cdae280bddb50e360eca0d73dd2c447c1da32" translate="yes" xml:space="preserve">
          <source>This function may not return the same value as &lt;a href=&quot;#salt.modules.kernelpkg_linux_apt.active&quot;&gt;&lt;code&gt;active()&lt;/code&gt;&lt;/a&gt; if a new kernel has been installed and the system has not yet been rebooted. The &lt;a href=&quot;#salt.modules.kernelpkg_linux_apt.needs_reboot&quot;&gt;&lt;code&gt;needs_reboot()&lt;/code&gt;&lt;/a&gt; function exists to detect this condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57a41523f35546462cf7edaa2245203b118d9d7" translate="yes" xml:space="preserve">
          <source>This function may not return the same value as &lt;a href=&quot;#salt.modules.kernelpkg_linux_yum.active&quot;&gt;&lt;code&gt;active()&lt;/code&gt;&lt;/a&gt; if a new kernel has been installed and the system has not yet been rebooted. The &lt;a href=&quot;#salt.modules.kernelpkg_linux_yum.needs_reboot&quot;&gt;&lt;code&gt;needs_reboot()&lt;/code&gt;&lt;/a&gt; function exists to detect this condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2b4d69a1f36c0a2c47ea2219e9cd1b4756790a" translate="yes" xml:space="preserve">
          <source>This function normalizes the config block into a set of queries we can use. The return is a list of consistently laid out dicts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0045baa80ad5d82ff6c3f833efa85fc46635c7" translate="yes" xml:space="preserve">
          <source>This function only applies to OpenBSD systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab88341570fca989f4b6c6188523291b653e295" translate="yes" xml:space="preserve">
          <source>This function only configures an existing app. Params are case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c392655d2e489699f3edbdb56a7ff730ced0e616" translate="yes" xml:space="preserve">
          <source>This function only configures existing app. Params are case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bba34f3f66890ed5bc9e3a12aff0bb44284753" translate="yes" xml:space="preserve">
          <source>This function only removes the certificate from the web binding. It does not remove the web binding itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00945e7585abe3b6d66d90737e834f00a15bbdef" translate="yes" xml:space="preserve">
          <source>This function only validates against the application name, and will return True even if the application already exists with a different configuration. It will not modify the configuration of an existing application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd30bced4d1c7f64d92c59d3d5181c416abd81c" translate="yes" xml:space="preserve">
          <source>This function only validates against the application pool name, and will return True even if the application pool already exists with a different configuration. It will not modify the configuration of an existing application pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88ed4440658051da413ea95ff8ad5f28a76ff7b" translate="yes" xml:space="preserve">
          <source>This function only validates against the binding ipaddress:port:hostheader combination, and will return True even if the binding already exists with a different configuration. It will not modify the configuration of an existing binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e386b0dfa85f1f3044b2d3420b239daf255473f3" translate="yes" xml:space="preserve">
          <source>This function only validates against the site name, and will return True even if the site already exists with a different configuration. It will not modify the configuration of an existing site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7def96eba975998f5d97acd6c83aad8aac2a6b50" translate="yes" xml:space="preserve">
          <source>This function only validates against the virtual directory name, and will return True even if the virtual directory already exists with a different configuration. It will not modify the configuration of an existing virtual directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0daad7bb4b4377c5793ecff2cb2039eb68cc91" translate="yes" xml:space="preserve">
          <source>This function receives files copied to the minion using &lt;code&gt;salt-cp&lt;/code&gt; and is not intended to be used directly on the CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2966026061e7635fda359b5894d51b6d25f7e1" translate="yes" xml:space="preserve">
          <source>This function receives small fast copy files from the master via salt-cp. It does not work via the CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e5b1b902b66716f2885a80c01550187368ec73" translate="yes" xml:space="preserve">
          <source>This function replaces the $CATALINA_HOME/bin/digest.sh script convert a clear-text password to the $CATALINA_BASE/conf/tomcat-users.xml format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d7bedebc89a62dd01060f59a07435cc8356b98" translate="yes" xml:space="preserve">
          <source>This function requires &lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;Git for Windows&lt;/a&gt; to be installed in order to work. When installing, make sure to select an installation option which permits the git executable to be run from the Command Prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875d3e03d256697b9184027eec86fdd3a812331f" translate="yes" xml:space="preserve">
          <source>This function requires boto3 to be installed if nat gatewyas are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843afa562a9575ae79399609cea2e66d479bf97f" translate="yes" xml:space="preserve">
          <source>This function requires boto3 to be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1daf45ac81b640170c189b20cb4867fd4d35c7cc" translate="yes" xml:space="preserve">
          <source>This function requires boto3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2136c17b964b5f523b1b89856c4b8ca72a5477c8" translate="yes" xml:space="preserve">
          <source>This function return the routes from the RIB. In case the destination prefix is too short, there may be too many routes matched. Therefore in cases of devices having a very high number of routes it may be necessary to adjust the prefix length and request using a longer prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886fa74b8585f583f1a9a4c372fdc825b6002720" translate="yes" xml:space="preserve">
          <source>This function returns a list of images available for this cloud provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee828dbf3f87cf42b54fa359f336ac4aaa339fb" translate="yes" xml:space="preserve">
          <source>This function returns a list of images available for this cloud provider. vagrant will return a list of profiles. salt-cloud --list-images my-cloud-provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246560b66ba03a704004007c94e6bb888061247d" translate="yes" xml:space="preserve">
          <source>This function returns a list of locations available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24be549e7c444900df0a0bad564a9cedaaabae5e" translate="yes" xml:space="preserve">
          <source>This function returns a list of nodes available on this cloud provider, using the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27cff7c15241f200e7093541c7952aa73879dcb" translate="yes" xml:space="preserve">
          <source>This function returns a list of sizes available for this cloud provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db01cad53c68ac1542f976dd6227d3dd741f2ca" translate="yes" xml:space="preserve">
          <source>This function returns an unserializable object, hence it is not meant to be used on the CLI. This should mainly be used when invoked from other modules for the low level connection with the network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36b34f094928ec256b70344e6cca65253022db7" translate="yes" xml:space="preserve">
          <source>This function runs &lt;a href=&quot;#salt.modules.cmdmod.run_all&quot;&gt;&lt;code&gt;cmd.run_all&lt;/code&gt;&lt;/a&gt; wrapped within a chroot, with dev and proc mounted in the chroot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dd1f5e364fd14cc7345449e6202e150109d38c" translate="yes" xml:space="preserve">
          <source>This function sends the commands to the device using the nodes transport. This is a lower layer function that shouldn't normally need to be used, preferring instead to use &lt;code&gt;config()&lt;/code&gt; or &lt;code&gt;enable()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ce9de32844903db18e87dc4b9527918dae1b88" translate="yes" xml:space="preserve">
          <source>This function should mainly be used as a helper for runner modules, in order to avoid redundant code. For example, when inside a runner one needs to execute a certain function on arbitrary groups of minions, only has to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1594f5663932767a169b03c0036ba513c2c5a9" translate="yes" xml:space="preserve">
          <source>This function should not be used asynchronously for SELECTs -- it will not return anything and we don't currently have a mechanism for handling a future that will return results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89baebb88b88a56102b6c8efa59009b1439245e0" translate="yes" xml:space="preserve">
          <source>This function supports all arguments for network and IPAM pool configuration which are available for the release of docker-py installed on the minion. For that reason, the arguments described below in the &lt;a href=&quot;#salt-modules-dockermod-create-network-netconf&quot;&gt;NETWORK CONFIGURATION ARGUMENTS&lt;/a&gt; and &lt;a href=&quot;#salt-modules-dockermod-create-network-ipam&quot;&gt;IP ADDRESS MANAGEMENT (IPAM)&lt;/a&gt; sections may not accurately reflect what is available on the minion. The &lt;a href=&quot;#salt.modules.dockermod.get_client_args&quot;&gt;&lt;code&gt;docker.get_client_args&lt;/code&gt;&lt;/a&gt; function can be used to check the available arguments for the installed version of docker-py (they are found in the &lt;code&gt;network_config&lt;/code&gt; and &lt;code&gt;ipam_config&lt;/code&gt; sections of the return data), but Salt will not prevent a user from attempting to use an argument which is unsupported in the release of Docker which is installed. In those cases, network creation be attempted but will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7972611e6fc8a6aa52064e2584c076d4df5c5b40" translate="yes" xml:space="preserve">
          <source>This function supports networks with either IPv4, or both IPv4 and IPv6. If configuring IPv4, then you can pass the IPAM arguments as shown below, as individual arguments on the Salt CLI. However, if configuring IPv4 and IPv6, the arguments must be passed as a list of dictionaries, in the &lt;code&gt;ipam_pools&lt;/code&gt; argument. See the &lt;strong&gt;CLI Examples&lt;/strong&gt; below. &lt;a href=&quot;http://docker-py.readthedocs.io/en/stable/api.html#docker.types.IPAMPool&quot;&gt;These docs&lt;/a&gt; also have more information on these arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d92c20d6b70eba7f07aca38c7593351e1d1b37a" translate="yes" xml:space="preserve">
          <source>This function takes a list of database results and iterates over, merging them into a dict form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecea5830b8872c24d6c08ae7cf33eb46843bee3" translate="yes" xml:space="preserve">
          <source>This function translates Salt CLI or SLS input into the format which &lt;a href=&quot;https://pypi.python.org/pypi/docker-py&quot;&gt;docker-py&lt;/a&gt; expects. However, in the event that Salt's translation logic fails (due to potential changes in the Docker Remote API, or to bugs in the translation code), this argument can be used to exert granular control over which arguments are translated and which are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8d75ed0cbccdc802bf2bcb98edde66351ed70b" translate="yes" xml:space="preserve">
          <source>This function translates Salt CLI or SLS input into the format which docker-py expects. However, in the event that Salt's translation logic fails (due to potential changes in the Docker Remote API, or to bugs in the translation code), this argument can be used to exert granular control over which arguments are translated and which are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa38d6527f03fc9bc8305f5d19f4475e2a47efe" translate="yes" xml:space="preserve">
          <source>This function translates Salt SLS input into the format which docker-py expects. However, in the event that Salt's translation logic fails (due to potential changes in the Docker Remote API, or to bugs in the translation code), this argument can be used to exert granular control over which arguments are translated and which are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745b1658b208c58d4b163574d90e4665af45d71e" translate="yes" xml:space="preserve">
          <source>This function traverses these data stores in this order, returning the first match found:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8250b1174b0ad0ca8b41a86bece127f8d3ccbba5" translate="yes" xml:space="preserve">
          <source>This function uses the 'keys' from the 'vault' configuration to unseal vault server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ded4399d747617a51e69b1f0aee2998287f96d4" translate="yes" xml:space="preserve">
          <source>This function uses the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-docker.compare_container_networks&quot;&gt;&lt;code&gt;docker.compare_container_networks&lt;/code&gt;&lt;/a&gt; minion config option to determine which keys to examine. This provides flexibility in the event that features added in a future Docker release necessitate changes to how Salt compares networks. In these cases, rather than waiting for a new Salt release one can just set &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-docker.compare_container_networks&quot;&gt;&lt;code&gt;docker.compare_container_networks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37647ab22573829197eb49e9dbc6b66d0089665" translate="yes" xml:space="preserve">
          <source>This function was first added for &lt;a href=&quot;../../modules/all/salt.modules.yumpkg#salt.modules.yumpkg.list_repo_pkgs&quot;&gt;&lt;code&gt;pkg.list_repo_pkgs&lt;/code&gt;&lt;/a&gt; in 2014.1.0, and was expanded to &lt;a href=&quot;../../modules/all/salt.modules.aptpkg#salt.modules.aptpkg.list_repo_pkgs&quot;&gt;&lt;code&gt;Debian/Ubuntu&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;Arch Linux&lt;/code&gt;-based distros in the 2017.7.0 release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cb415cfc90aea0347e12ca46e69e5b2af6c6ff" translate="yes" xml:space="preserve">
          <source>This function will attempt to determine if &lt;code&gt;cwd&lt;/code&gt; is part of a worktree by checking its &lt;code&gt;.git&lt;/code&gt; to see if it is a file containing a reference to another gitdir.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805168c442cc2ad993c138b69e3df080eb0a8713" translate="yes" xml:space="preserve">
          <source>This function will block until the container is stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69ec95b2cf22523fc93ff4f92b505e232f42a93" translate="yes" xml:space="preserve">
          <source>This function will call &lt;a href=&quot;#salt.modules.state.highstate&quot;&gt;&lt;code&gt;state.highstate&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#salt.modules.state.sls&quot;&gt;&lt;code&gt;state.sls&lt;/code&gt;&lt;/a&gt; based on the arguments passed to this function. It exists as a more intuitive way of applying states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82c5f687a78e346d1cb9a61d9a875a03fde771b" translate="yes" xml:space="preserve">
          <source>This function will do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90153272d5bb9a857f7c8dd2fc85e63b4e6b3bbb" translate="yes" xml:space="preserve">
          <source>This function will only provide results for XZ-compressed archives if the &lt;a href=&quot;http://tukaani.org/xz/&quot;&gt;xz&lt;/a&gt; CLI command is available, as Python does not at this time natively support XZ compression in its &lt;a href=&quot;https://docs.python.org/2/library/tarfile.html&quot;&gt;tarfile&lt;/a&gt; module. Keep in mind however that most Linux distros ship with &lt;a href=&quot;http://tukaani.org/xz/&quot;&gt;xz&lt;/a&gt; already installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2eb0045299f188ba105656d4859d6630829241" translate="yes" xml:space="preserve">
          <source>This function will raise an error if executed on a traditional (i.e. not masterless) minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ac4efcf262a7b8d740472b882eb8553bafe839" translate="yes" xml:space="preserve">
          <source>This function will remove all data associated with the container. It will not, however, remove the btrfs subvolumes created by pulling container images (&lt;a href=&quot;#salt.modules.nspawn.pull_raw&quot;&gt;&lt;code&gt;nspawn.pull_raw&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#salt.modules.nspawn.pull_tar&quot;&gt;&lt;code&gt;nspawn.pull_tar&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#salt.modules.nspawn.pull_dkr&quot;&gt;&lt;code&gt;nspawn.pull_dkr&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e36770437f0e84af45a0147453bdc7b14f7f327" translate="yes" xml:space="preserve">
          <source>This function will return &lt;code&gt;True&lt;/code&gt; if an install completed with exit code 3010 during the current boot session and can be extended where appropriate in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfbfa8d943d5898b4e0f303534c9af470be86b5" translate="yes" xml:space="preserve">
          <source>This function will return a dictionary showing a list of environments which were cleared for each backend. An empty return dictionary means that no changes were made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5deef54e8444dfe4e06d807d7d25a18066c471a1" translate="yes" xml:space="preserve">
          <source>This function will return the cached path of the file, or an empty string if the file is not present in the minion cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f81fa1c4d3389204ce0282902260de223514d81" translate="yes" xml:space="preserve">
          <source>This function will return the rarely used primary group of a file. This generally has no bearing on permissions unless intentionally configured and is most commonly used to provide Unix compatibility (e.g. Services For Unix, NFS services).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da6c92c5d9775d1a75fae9cb4f458ab44cb7d96" translate="yes" xml:space="preserve">
          <source>This function will store two copies of the file in-memory (the original version and the edited version) in order to detect changes and only edit the targeted file if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2f9610e6cf075b18bd9ecddf2a0a613f151b1b" translate="yes" xml:space="preserve">
          <source>This function works by comparing the contents of both containers' &lt;code&gt;Networks&lt;/code&gt; keys (under &lt;code&gt;NetworkSettings&lt;/code&gt;) in the return data from &lt;a href=&quot;#salt.modules.dockermod.inspect_container&quot;&gt;&lt;code&gt;docker.inspect_container&lt;/code&gt;&lt;/a&gt;. Because each network contains some items that either A) only set at runtime, B) naturally varying from container to container, or both, by default the following keys in each network are examined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee412704d4487b054f3586143978910b27b38184" translate="yes" xml:space="preserve">
          <source>This function works similarly to &lt;a href=&quot;#salt.modules.napalm_formula.render_field&quot;&gt;&lt;code&gt;render_field&lt;/code&gt;&lt;/a&gt; but for a list of fields from the same dictionary, rendering, indenting and distributing them on separate lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5613941e230155c4eeded59fa449afcd8e954d21" translate="yes" xml:space="preserve">
          <source>This function's return value is slated for refinement in future versions of Salt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa2399ecc7e3146cd4770cf7d79baa375b1a772" translate="yes" xml:space="preserve">
          <source>This functionality works in states as well. If you need to pip install colorama with a state, for example, the following will work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa7f82a5d8c86010d39f8c46e7c07e13aa96b09" translate="yes" xml:space="preserve">
          <source>This grain is disabled by default, as the proxy startup may be slower when the lookup fails. The user can enable it using the &lt;code&gt;napalm_host_dns_grain&lt;/code&gt; option (in the pillar or proxy configuration file):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d868b20326fded668372ed1e501e0a7d686fb02" translate="yes" xml:space="preserve">
          <source>This grain is set by the NAPALM grain module only when running in a proxy minion. When Salt is installed directly on the network device, thus running a regular minion, the &lt;code&gt;host&lt;/code&gt; grain provides the physical hostname of the network device, as it would be on an ordinary minion server. When running in a proxy minion, &lt;code&gt;host&lt;/code&gt; points to the value configured in the pillar: &lt;a href=&quot;../../proxy/all/salt.proxy.napalm#module-salt.proxy.napalm&quot;&gt;&lt;code&gt;NAPALM proxy module&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358ef0abe7ee39eeb0aa94890dbaeb6f44693808" translate="yes" xml:space="preserve">
          <source>This has no effect if &lt;code&gt;bg&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3fbcce4edd94da0a75c26493403d2ff4915054" translate="yes" xml:space="preserve">
          <source>This inputs all the information needed to start a Vagrant VM. These settings are stored in a Salt sdb database on the Vagrant host minion and used to start, control, and query the guest VMs. The salt_id assigned here is the key field for that database and must be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb13b064cc27d48d00bd03c5043ed61de0c35ccf" translate="yes" xml:space="preserve">
          <source>This interface directly exposes Salt's &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/clients/index.html#python-api&quot;&gt;Python API&lt;/a&gt;. Everything possible at the CLI is possible through the Python API. Commands are executed on the Salt Master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d3c3d0f85c4bc0505d671a841bbb9e4044e8b5" translate="yes" xml:space="preserve">
          <source>This is a cloud module for the Dimension Data Cloud, using the existing Libcloud driver for Dimension Data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9f79e5e2dc4724376d2eccc3ac8c9587035c2b" translate="yes" xml:space="preserve">
          <source>This is a destructive action on the nix store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9d5aa84150331baff0df4c586c6cc97f74bef6" translate="yes" xml:space="preserve">
          <source>This is a dict describing the changes made (or, in test mode, the changes that would have been attempted). If no changes were made (or no changes would have been attempted), then this dict is empty. Only successful changes are included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85bcf157e09184f0a64caeaf94b6e29533ca205" translate="yes" xml:space="preserve">
          <source>This is a dummy proxy-minion designed for testing the proxy minion subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d025311471a335d23f245b90dc8479dd53aa34d1" translate="yes" xml:space="preserve">
          <source>This is a first version only, the following commands are missing at the moment but will be built later on if the community is interested in this module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90747271e03d3c833f3eb74a14e7a30f27e7ca7" translate="yes" xml:space="preserve">
          <source>This is a generic container/image/volume/network inspecton function. It will run the following functions in order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb243ebe92effb936328665aea3eea4b3279d00" translate="yes" xml:space="preserve">
          <source>This is a helper function to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97730701c9b333a393ee09c2bdebe65d2bede99f" translate="yes" xml:space="preserve">
          <source>This is a helper function to decrypt a file and return its contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eaf1820c2bba83eae99b358f8efd985cca052cf" translate="yes" xml:space="preserve">
          <source>This is a helper function to encrypt a file and return its contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d9300e0803a1b81c96d63f49c141dca05e436e" translate="yes" xml:space="preserve">
          <source>This is a master-only function. Calling from the minion is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93df45eac527cc883f4a10ab3d72a6605b6c2dd" translate="yes" xml:space="preserve">
          <source>This is a partial idempotent function as if it is already provisioned, we will reset a bit the lxc configuration file but much of the hard work will be escaped as markers will prevent re-execution of harmful tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6e23ff69d6ac0007b29673c4e5108eb1480f85" translate="yes" xml:space="preserve">
          <source>This is a pure Python implementation that wraps Python's &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f874ecb1bb64208146c5427c92e4cac1466975b2" translate="yes" xml:space="preserve">
          <source>This is a queue with postgres as the backend. It uses the jsonb store to store information for queues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7453bff91776ba6bc2ee98fa46caea348dbf24f4" translate="yes" xml:space="preserve">
          <source>This is a short description of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29cbbb79b516734b7b6f9fd3f24f7bf6daca575" translate="yes" xml:space="preserve">
          <source>This is a simple proxy-minion designed to connect to and communicate with a server that exposes functionality via SSH. This can be used as an option when the device does not provide an api over HTTP and doesn't have the python stack to run a minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9949398a5e05c92eed20de089f4a8ee1b67cdce" translate="yes" xml:space="preserve">
          <source>This is a simple proxy-minion designed to connect to and communicate with the bottle-based web service contained in &lt;a href=&quot;https://github.com/saltstack/salt-contrib/tree/master/proxyminion_rest_example&quot;&gt;https://github.com/saltstack/salt-contrib/tree/master/proxyminion_rest_example&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0251331bb7fb817366ef5b98fe40fa13326beaf9" translate="yes" xml:space="preserve">
          <source>This is a thin wrapper around Pythons tempfile module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c5b22a426bb230721254dad8b7a6b9b44d6254" translate="yes" xml:space="preserve">
          <source>This is a very simple pillar configuration that simply retrieves the instance data from AWS. Currently the only portion implemented are EC2 tags, which returns a list of key/value pairs for all of the EC2 tags assigned to the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3e8ac598cb734a679c7f1d11f28bb3d30c9c90" translate="yes" xml:space="preserve">
          <source>This is a wrapper to execute RPC requests on various network operating systems supported by NAPALM, invoking the following functions for the NAPALM native drivers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40aed8fa02908643acd0ee794662062c47568cb6" translate="yes" xml:space="preserve">
          <source>This is actually very important for systemD based containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c5dbc33475356fe91d6c4eb2c134b213cef950" translate="yes" xml:space="preserve">
          <source>This is additive with any sec groups provided via the SecurityGroupIds parameter below. Use this parameter ONLY when you are creating a cluster in a VPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607732e1c59bad359832ce0dbb8a6f1fc2659986" translate="yes" xml:space="preserve">
          <source>This is an Execution Module providing helpers for various NAPALM formulas, e.g., napalm-interfaces-formula, napalm-bgp-formula, napalm-ntp-formula etc., meant to provide various helper functions to make the templates more readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409cc8b17ec7b4a7cefb74c814c02a635db65e1d" translate="yes" xml:space="preserve">
          <source>This is an alternative to the &lt;code&gt;ldap&lt;/code&gt; interface provided by the &lt;a href=&quot;salt.modules.ldapmod#module-salt.modules.ldapmod&quot;&gt;&lt;code&gt;ldapmod&lt;/code&gt;&lt;/a&gt; execution module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee9d33ab7ab14a427ec6ecd39d57dcb31bec4c9" translate="yes" xml:space="preserve">
          <source>This is an easy way to find additional information about updates available to to the system, such as the GUID, KB number, or description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec9432c94cacea0cc69da1be81e0e553bbbd0de" translate="yes" xml:space="preserve">
          <source>This is an example of using vtype REG_BINARY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427a878b05ca560acf10a453faaa885559746c91" translate="yes" xml:space="preserve">
          <source>This is an example profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ee885073954e1d63f3f2ac306af283e34e3d23" translate="yes" xml:space="preserve">
          <source>This is an external pillar and is subject to the &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/development/modules/external_pillars.html#external-pillars&quot;&gt;rules and constraints&lt;/a&gt; governing external pillars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6831646fa458ec00836375e1632d32e162f90604" translate="yes" xml:space="preserve">
          <source>This is an ipset-specific module designed to manage IPSets for use in IPTables Firewalls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df1721f9aa2623ebd4d8f6e7297a0c9cdbf846d" translate="yes" xml:space="preserve">
          <source>This is an iptables-specific module designed to manage Linux firewalls. It is expected that this state module, and other system-specific firewall states, may at some point be deprecated in favor of a more generic &lt;code&gt;firewall&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a8172bcac0c85c671a3da00b13b2d4c15146b6" translate="yes" xml:space="preserve">
          <source>This is an nftables-specific module designed to manage Linux firewalls. It is expected that this state module, and other system-specific firewall states, may at some point be deprecated in favor of a more generic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbd07d77542d8b1062a58d981d5669e267b98dc" translate="yes" xml:space="preserve">
          <source>This is an open-ended function and can be used for a variety of tasks. It makes use of Salt's &quot;renderer pipes&quot; system to run a string or file through a pipe of any of the loaded renderer modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d8ce85a9d65af693193b4738341a07920203b6" translate="yes" xml:space="preserve">
          <source>This is because some functions both within Salt and 3rd party will break if an expected field is not present. This function is normally called with the -F option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfe5bfcddccdfa2c26ef6409c33712cb3e5d0d8" translate="yes" xml:space="preserve">
          <source>This is because while files in Windows do have a 'primary group' property, this is rarely used. It generally has no bearing on permissions unless intentionally configured and is most commonly used to provide Unix compatibility (e.g. Services For Unix, NFS services).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1a038871a65054738cf10e5ef3ee468ab740e1" translate="yes" xml:space="preserve">
          <source>This is better than &lt;code&gt;get_sum&lt;/code&gt; for the following reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0aae5d7a1c0fddc3bbf447fcf36d64e6d6de0e" translate="yes" xml:space="preserve">
          <source>This is called when the proxy-minion is exiting to make sure the connection to the device is closed cleanly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edf7c169e4ea87f2b62ed229089c864339688ee" translate="yes" xml:space="preserve">
          <source>This is convenient for setting up autoscaling as follows. First specify a boto_asg.present state for an ASG with scaling_policies, and then set up boto_cloudwatch_alarm.present states which have alarm_actions that reference the scaling_policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642b12fa8b4af6defd58de94b329f8fcb859e7d0" translate="yes" xml:space="preserve">
          <source>This is designed to be called from pkgrepo states and will have little use being called on the CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c2487675242ee74800d51420e2b05ad6cf37a8" translate="yes" xml:space="preserve">
          <source>This is different from &lt;a href=&quot;#salt.modules.pillar.get&quot;&gt;&lt;code&gt;pillar.get&lt;/code&gt;&lt;/a&gt; in that no default value can be specified. &lt;a href=&quot;#salt.modules.pillar.get&quot;&gt;&lt;code&gt;pillar.get&lt;/code&gt;&lt;/a&gt; should probably still be used in most cases to retrieve nested pillar values, as it is a bit more flexible. One reason to use this function instead of &lt;a href=&quot;#salt.modules.pillar.get&quot;&gt;&lt;code&gt;pillar.get&lt;/code&gt;&lt;/a&gt; however is when it is desirable to retrieve the values of more than one key, since &lt;a href=&quot;#salt.modules.pillar.get&quot;&gt;&lt;code&gt;pillar.get&lt;/code&gt;&lt;/a&gt; can only retrieve one key at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c5a0b7ea04a99eb0d9278d364ac82613b2feb1" translate="yes" xml:space="preserve">
          <source>This is equivalent to attaching &lt;code&gt;new_device&lt;/code&gt;, waiting for it to resilver, and then detaching &lt;code&gt;old_device&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721d8e0525b1100b0cd2bba486d95bfcb20a6a34" translate="yes" xml:space="preserve">
          <source>This is field is case sensitive, make sure to assign the correct value to this option, exactly as defined in the index file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed2ed4774d0e4e79e150907363d18835a542e8e" translate="yes" xml:space="preserve">
          <source>This is heavily used in the zookeeper state and probably is not useful as a cli module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d93de7e291c215324f48e21bf0b5764a6e585a" translate="yes" xml:space="preserve">
          <source>This is how a state configuration could look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940670ac66ac10cdae3a15cf558b468c6788137f" translate="yes" xml:space="preserve">
          <source>This is just a test function, to make sure parsing works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fba7e66dd8b5684f90bb468637b1fcf81cbe94" translate="yes" xml:space="preserve">
          <source>This is normally only used internally. The format of the data structure must match that which is returned from &lt;code&gt;lxc.read_conf()&lt;/code&gt;, with &lt;code&gt;out_format&lt;/code&gt; set to &lt;code&gt;commented&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3fa656201fb9ccb71c70ceffccf52c2ae37c41" translate="yes" xml:space="preserve">
          <source>This is not considered secure. It is recommended to instead use &lt;a href=&quot;#salt.modules.archive.unzip&quot;&gt;&lt;code&gt;archive.unzip&lt;/code&gt;&lt;/a&gt; for password-protected ZIP files. If a password is used here, then the unzip command run to extract the ZIP file will not show up in the minion log like most shell commands Salt runs do. However, the password will still be present in the events logged to the minion log at the &lt;code&gt;debug&lt;/code&gt; log level. If the minion is logging at &lt;code&gt;debug&lt;/code&gt; (or more verbose), then be advised that the password will appear in the log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b82cedc152761f52a96f5a9c105b733cabd236" translate="yes" xml:space="preserve">
          <source>This is not quite optimal, as if we need to flush a bank having a very long list of sub-banks, the number of requests to build the sub-tree may grow quite big.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052c5280c5bbcc753360ab7670090898dc3949e4" translate="yes" xml:space="preserve">
          <source>This is not to be confused with the username for http(s)/SSH authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93864d03385e4a769e9cb85a29720ddfca1a539" translate="yes" xml:space="preserve">
          <source>This is often useful if you wish to store your pillars in source control or share your pillar data with others that you trust. I don't advise making your pillars public regardless if they are encrypted or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3aa73422180116f5ccd58938253a1ef81b5285f" translate="yes" xml:space="preserve">
          <source>This is only supported in git 1.7.2 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e023801d897853b669fd145ff884f5b92b5c89d1" translate="yes" xml:space="preserve">
          <source>This is only supported on Windows Vista or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f318bbd76211398580ad0e4822d8b4388ceaf0b" translate="yes" xml:space="preserve">
          <source>This is only supported with Windows Vista or later and must be executed by a user with the SeCreateSymbolicLink privilege.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175321a515140d964877e21061694e2fb3b5225f" translate="yes" xml:space="preserve">
          <source>This is only used for errors encountered while interacting with the LDAP server; usage errors (e.g., invalid backend name) will have a different type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1488be35e379f3b689fb4b891daff1891cd0dad" translate="yes" xml:space="preserve">
          <source>This is only used if Salt needs to pull the requested image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e6cba6c6e917d865f033f9e77729fcd732c1fa" translate="yes" xml:space="preserve">
          <source>This is required if using S3 bucket names that contain a period, as these will not match Amazon's S3 wildcard certificates. Certificate verification is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7af71dc635acf86adcd712f7831dca42cfc945" translate="yes" xml:space="preserve">
          <source>This is required to use keystone v3 as for authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1158c5a65d8c57ca2a4fbb881278ddae28dabdcb" translate="yes" xml:space="preserve">
          <source>This is separate from &lt;code&gt;output_loglevel&lt;/code&gt;, which only handles how Salt logs to the minion log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45ee55cccfe521014962a651d9b66d6686084be" translate="yes" xml:space="preserve">
          <source>This is the default &lt;code&gt;roster_order&lt;/code&gt;. It prefers IPv6 over IPv4 addresses and private addresses over public ones. The relevant data will be fetched from the cache in-order, and the first match will fill the &lt;code&gt;host&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0003ae2ad0320165004d281bc330ef01b3d77b6" translate="yes" xml:space="preserve">
          <source>This is the default local master event queue built on sqlite. By default, an sqlite3 database file is created in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d9090ca40c194ef0b87f4af860c45a64c09c16" translate="yes" xml:space="preserve">
          <source>This is the default outputter for most execution functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3527dec676beae9dd1cfa3d237568a27d0f0d5f6" translate="yes" xml:space="preserve">
          <source>This is the email of the user in splunk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f93ef023a45e4686f5a1a7ac97765ac1354336" translate="yes" xml:space="preserve">
          <source>This is the exit code of the invocation of PowerShell. If the final execution status (in PowerShell) of our command (with &lt;code&gt;| ConvertTo-JSON&lt;/code&gt; appended) is &lt;code&gt;False&lt;/code&gt; this should be non-0. Likewise if PowerShell exited with &lt;code&gt;$LASTEXITCODE&lt;/code&gt; set to some non-0 value, then &lt;code&gt;retcode&lt;/code&gt; will end up with this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f25a3315e469d81c3a5a3b83b94989a4b03d99" translate="yes" xml:space="preserve">
          <source>This is the format that an inventory script needs to output to work with ansible, and thus here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdf01b866bd188cbb6c8b49ddbbd1170c5155e9" translate="yes" xml:space="preserve">
          <source>This is the function responsible for making sure jids don't collide (unless it is passed a jid). So do what you have to do to make sure that stays the case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e714e4504fdda4313ed9dae94960ca3338b83f" translate="yes" xml:space="preserve">
          <source>This is the github handle of the user in the organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a0255302b1372b30af872a99e3d5422d096757" translate="yes" xml:space="preserve">
          <source>This is the inverse of &lt;a href=&quot;#salt.modules.match.filter_by&quot;&gt;&lt;code&gt;match.filter_by&lt;/code&gt;&lt;/a&gt; and allows matching values instead of matching keys. A minion can be matched by multiple entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a06e1aa9ce55d9996dbba6f1f22878a78b8d2cf" translate="yes" xml:space="preserve">
          <source>This is the name of the keyserver to retrieve gpg keys from. The &lt;code&gt;keyid&lt;/code&gt; option must also be set for this option to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ade6d026eb64beaf8abc25abb805318a095662" translate="yes" xml:space="preserve">
          <source>This is the name of the repository in the organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31237052ecb01448014df90181b792bce4c0a392" translate="yes" xml:space="preserve">
          <source>This is the name of the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e8987a1c857ac4c6dc876a07b38d62c9297fc0" translate="yes" xml:space="preserve">
          <source>This is the name of the search in splunk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7467e2f96e98d953c46583dc810d7b91d4120e" translate="yes" xml:space="preserve">
          <source>This is the name of the team in the organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655b81df68bd9c70b47dd9370d1ce552d15f72b3" translate="yes" xml:space="preserve">
          <source>This is the path to the file stored on the minion. This file is placed on the minion using cp.cache_file. If the hash sum of that file matches the source_sum, we do not transfer the file to the minion again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974639e31c3ddd1578845d80309c22a1f5956e70" translate="yes" xml:space="preserve">
          <source>This is the recommended state to enforce configurations on a xpath.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acb0dcd3c0bdaa92cd26eee20817319c9bbc2cb" translate="yes" xml:space="preserve">
          <source>This is the same object passed to the &lt;code&gt;name&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a395e40950b0934fb9237f8683a223239d0c5a" translate="yes" xml:space="preserve">
          <source>This is the simplest option, you just need to set the path to your single MakoStack config file like below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105d06b2a758a00fa5699892f14da296daf8988d" translate="yes" xml:space="preserve">
          <source>This is the simplest option, you just need to set the path to your single PillarStack config file like below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6590c9e20a8e52ba3edeb8d28fcedba8f1bbcf" translate="yes" xml:space="preserve">
          <source>This is the splunk username used to identify the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac45d9a8075699526694eaac1e66dde33ef6486" translate="yes" xml:space="preserve">
          <source>This is the top level of the registry. They all begin with HKEY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c3db54ecfdf7660901e6de0358b82a997a40cf" translate="yes" xml:space="preserve">
          <source>This is used as the &quot;name&quot; value in the repo file in &lt;code&gt;/etc/yum.repos.d/&lt;/code&gt; (or &lt;code&gt;/etc/zypp/repos.d&lt;/code&gt; for SUSE distros).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3473bc8afefa64a324965c45226f0f1b3be4398a" translate="yes" xml:space="preserve">
          <source>This is used to specify a command to run in test mode. This command should return stateful data for changes that would be made by the command in the name parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73afa0b8aef8850f3547af5005441a8a6f7d1d38" translate="yes" xml:space="preserve">
          <source>This is useful for filtering out chains, rules, etc that you do not wish to persist, such as ephemeral Docker rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae81b97622ff0820be38fe8d6ceed2f26990b94d" translate="yes" xml:space="preserve">
          <source>This is useful for generating passwords or keys that are specific to a single minion that don't need to be stored somewhere centrally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abcf6cd86bfe78b1d9e3df2617c8f36bb5c4f02" translate="yes" xml:space="preserve">
          <source>This is useful for generating passwords or keys that are specific to multiple minions that need to be stored somewhere centrally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1696461d9e0b36f61f808d9ae304071bc95aee81" translate="yes" xml:space="preserve">
          <source>This is useful for sending events directly to the master from the shell with salt-run. It is also quite useful for sending events in orchestration states where the &lt;code&gt;fire_event&lt;/code&gt; requisite isn't sufficient because it does not support sending custom data with the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a094a45f08b946e48823ec595b283cdb39aaefff" translate="yes" xml:space="preserve">
          <source>This is useful for utilizing Salt's event bus from shell scripts or for taking simple actions directly from the CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03227a995ee769d5153e02b8b4c35c1fd1fbe904" translate="yes" xml:space="preserve">
          <source>This is useful to avoid displaying sensitive information on console or flooding the console with long output, such as certificates. For many debug or control purposes, the stakes lie more in dispatching than in actual values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e22e8edc8b09bdfad4216ae0ec4658458d71797" translate="yes" xml:space="preserve">
          <source>This is what is used to request a virtual machine to be created by the cloud provider, wait for it to become available, and then (optionally) log in and install Salt on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045645488df7ef5a47d54b32acf6c664855312e1" translate="yes" xml:space="preserve">
          <source>This just calls get_mode, which returns None because we don't use mode on Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de1474b24a2fd40db62917e3ba6124a9b47a42e" translate="yes" xml:space="preserve">
          <source>This key can be found by using pagerduty.list_services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b820c41047a693a37987f773c12be217e95257" translate="yes" xml:space="preserve">
          <source>This line would also match:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b57dd1b34d55adb7d8d1d2022703f7860de2274" translate="yes" xml:space="preserve">
          <source>This loads our states into the salt __context__</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee18e09b76c8ce76ec9317a314045db4462ae4c" translate="yes" xml:space="preserve">
          <source>This makes it possible to destroy the file system that the clone was created from. The clone parent-child dependency relationship is reversed, so that the origin file system becomes a clone of the specified file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39cf587f40074ef9b4aac91352448737514fb22" translate="yes" xml:space="preserve">
          <source>This may not be useful in cases where other states depend on the results of this state. Also, the logs will be inaccessible once the container exits if &lt;code&gt;auto_remove&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, so keep this in mind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482042c9d4ff6ae240abe9b96d7b7160f484d56d" translate="yes" xml:space="preserve">
          <source>This may result in a &lt;strong&gt;lot&lt;/strong&gt; of additional return data, especially for larger images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64012bc9fd2931e9dbb60822169a4ab5ff5921b" translate="yes" xml:space="preserve">
          <source>This may seem redundant, but Salt tries to support a wide variety of use cases, and doing it this way allows for the use case where the local branch doesn't need to be strictly managed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d9597373d3329daabd7104e106c0034331c4ec" translate="yes" xml:space="preserve">
          <source>This means later calls (perhaps to update the function's &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/highstate.html#function-arg-declaration&quot;&gt;Function arg declaration&lt;/a&gt;) to a previously created function declaration will not change the order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35922f879ae13d1ad1784dbafb94ce965c863e16" translate="yes" xml:space="preserve">
          <source>This means surrounded by &quot;`&quot; character and escaping this character inside. It also means doubling the '%' character for MySQLdb internal usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6f7accd19bf74d5373f49ebdf502a138101472" translate="yes" xml:space="preserve">
          <source>This means that if a &lt;code&gt;cmd&lt;/code&gt; state is watched by another state then the state that's watching will always be executed due to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89c5a98dd99de568450c294e9237b4c42e5fe3d" translate="yes" xml:space="preserve">
          <source>This means that if there is a value that is going to be the same for the majority of minions, it can be configured in the Master config file, and then overridden using the grains, pillar, or Minion config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cbdd8efe71ca4af9acc39f5a8dae67b994d67e" translate="yes" xml:space="preserve">
          <source>This means that the following will list the domains on the local LXC libvirt driver, whatever the &lt;code&gt;virt:connection&lt;/code&gt; is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a741895d26b5c6f705b6ffe3da8170f8b81489e" translate="yes" xml:space="preserve">
          <source>This means that we support things like ドメイン.テスト as a domain name string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908b7fb0bccdfff6f582ccdabb70f9e8e2fc8ee8" translate="yes" xml:space="preserve">
          <source>This method accepts as args everything defined in &lt;a href=&quot;https://developer.pagerduty.com/documentation/rest/escalation_policies/create&quot;&gt;https://developer.pagerduty.com/documentation/rest/escalation_policies/create&lt;/a&gt;. In addition, user and schedule id's will be translated from name (or email address) into PagerDuty unique ids. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a6f6bb474d095ea19446c4a4ad1ff5d932daf2" translate="yes" xml:space="preserve">
          <source>This method calls create_or_update_resource() and formats the result as a salt state return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b31328b97b3ca42011fac705d9ea38d1ea75c22" translate="yes" xml:space="preserve">
          <source>This method calls delete_resource() and formats the result as a salt state return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ce09fc686e8417ea7cef70e86469164c6c250a" translate="yes" xml:space="preserve">
          <source>This method generates true random numbers from a Gaussian distribution (also known as a normal distribution).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fea24a69891fa94aaf57525f21367e919c36f7" translate="yes" xml:space="preserve">
          <source>This method is implemented by getting all objects of the resource type (cached into __context__), then brute force searching through the list and trying to match any of the identifier_fields. The __context__ cache is purged after any create, update or delete to the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285761212f10a07250c79abf1b86480fac54e252" translate="yes" xml:space="preserve">
          <source>This method is mainly used to translate state sls into pagerduty id's for dependent objects. For example, a pagerduty escalation policy contains one or more schedules, which must be passed by their pagerduty id. We look up the schedules by name (using this method), and then translate the names into id's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a25e49527be578b3c8c6ab9bc9a61145bbd5346" translate="yes" xml:space="preserve">
          <source>This method is provided for compatibility with other VM-control state modules. For Vagrant, the action is identical with &lt;code&gt;stopped&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b03eeb75e5d4d18eef1c1105022b6efbfce43c" translate="yes" xml:space="preserve">
          <source>This method is used to send configuration commands to the node. It will take either a string or a list and prepend the necessary commands to put the session into config mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140301bce6cb7d3aa363e4f33ef5e7c1e85c051d" translate="yes" xml:space="preserve">
          <source>This method is used to send configuration commands to the switch. It will take either a string or a list and prepend the necessary commands to put the session into config mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdfd49d2d1f526a14eca4a9829fa2df6137beb3" translate="yes" xml:space="preserve">
          <source>This method will create the rule if it does not exist. If the rule does exist, it will ensure that the configurations are set appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19615fe38009ea5a36d7903ad05633a40f57e6f7" translate="yes" xml:space="preserve">
          <source>This method will retrieve the config from the node as either a string or a list object. The config to retrieve can be specified as either the startup-config or the running-config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edc5dde38f6244a9b4619023070d0f75cbc2e10" translate="yes" xml:space="preserve">
          <source>This module (mostly) uses the XenAPI to manage Xen virtual machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f86e117148ebd03b4e5122d65cabd692581499" translate="yes" xml:space="preserve">
          <source>This module accepts connection configuration details either as parameters or as configuration settings in /etc/salt/minion on the relevant minions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012374259a0072559e8942d36ac0bf01cc4bdee8" translate="yes" xml:space="preserve">
          <source>This module accepts connection configuration details either as parameters, or as configuration settings in /etc/salt/minion on the relevant minions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b2e09baa24c0eb7918397e88e9d829d1a83adf" translate="yes" xml:space="preserve">
          <source>This module accepts connection configuration details either as parameters, or as configuration settings in pillar as a Salt proxy. Options passed into opts will be ignored if options are passed into pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11824ca481a95f33580edd3b8dc5e2ecb412c912" translate="yes" xml:space="preserve">
          <source>This module accepts explicit AWS credentials but can also utilize IAM roles assigned to the instance through Instance Profiles or it can read them from the ~/.aws/credentials file or from these environment variables: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b94b9ca513d56287bbd2885d027b5e06c99a97" translate="yes" xml:space="preserve">
          <source>This module accepts explicit AWS credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9352325aa0f09e17e88b1e462e5979a4057950" translate="yes" xml:space="preserve">
          <source>This module accepts explicit AWS credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd06682f133f2e39f08b6893b38fa45179f86c3" translate="yes" xml:space="preserve">
          <source>This module accepts explicit AWS credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395505c661be45a6eefaae7704b1fa36200a9e89" translate="yes" xml:space="preserve">
          <source>This module accepts explicit AWS credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac82a42ecc967d7742ef0fc7f383b7afe0be524" translate="yes" xml:space="preserve">
          <source>This module accepts explicit AWS credentials but can also utilize IAM roles assigned to the instance trough Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d44688a05793458a8bf382f2243e9b1cbf69a7" translate="yes" xml:space="preserve">
          <source>This module accepts explicit CognitoIdentity credentials but can also utilize IAM roles assigned to the instance trough Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959b4d7a7dbaa3060506aa766de807b3ef991794" translate="yes" xml:space="preserve">
          <source>This module accepts explicit DynamoDB credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965d6bc98ae0ce26bb68e7d69c656b4c8586a060" translate="yes" xml:space="preserve">
          <source>This module accepts explicit DynamoDB credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c001193f81ab3ac7a46bdc16c02ce56bea42c2" translate="yes" xml:space="preserve">
          <source>This module accepts explicit EC2 credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b9f2c9ae820b3b613861dd6fce6d79525473c2" translate="yes" xml:space="preserve">
          <source>This module accepts explicit EC2 credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596d77ae08afd923c776bd76afcadf9f3847715f" translate="yes" xml:space="preserve">
          <source>This module accepts explicit EFS credentials but can also utilize IAM roles assigned to the instance through Instance Profiles or it can read them from the ~/.aws/credentials file or from these environment variables: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2321dbf4aca4bb2fefe61ad2274f62b4dfcbde27" translate="yes" xml:space="preserve">
          <source>This module accepts explicit IAM credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6c354bd78b753b5744827739602d908d25fb56" translate="yes" xml:space="preserve">
          <source>This module accepts explicit Kinesis credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588e6d8a5fe3732fd718dfb373f6dc2fc658d4d7" translate="yes" xml:space="preserve">
          <source>This module accepts explicit Kinesis credentials but can also utilize IAM roles assigned to the instance trough Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b04a195cf1c235df2133dfa1f75c8350b8391e" translate="yes" xml:space="preserve">
          <source>This module accepts explicit Lambda credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af357717a6d3389402a0b97e9cfd6b4e41149222" translate="yes" xml:space="preserve">
          <source>This module accepts explicit Lambda credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4c37ef8b46f57531f09e85c50fe999d49b09c8" translate="yes" xml:space="preserve">
          <source>This module accepts explicit Lambda credentials but can also utilize IAM roles assigned to the instance trough Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8035150d76f76959d69b22444f56fe2cb8ffd8" translate="yes" xml:space="preserve">
          <source>This module accepts explicit SQS credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a987d5add983e604584476bd699ce78a116af13f" translate="yes" xml:space="preserve">
          <source>This module accepts explicit VPC credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5bc4bbecfd6b93f1c791801a14baf76ba2ccc7" translate="yes" xml:space="preserve">
          <source>This module accepts explicit alb credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c69b2a3fed64ef951537873b6afd2622305a969" translate="yes" xml:space="preserve">
          <source>This module accepts explicit autoscale credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6ed28d4c0cac1af63e7f2665406e946ddb942a" translate="yes" xml:space="preserve">
          <source>This module accepts explicit autoscale credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb16aca7d1e1d3bb7cd1098beccde6941ccc391" translate="yes" xml:space="preserve">
          <source>This module accepts explicit credential (telemetry api key) or can also read api key credentials from a pillar. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5796a2a4a415577d47ce3bd17414f374f59e6be" translate="yes" xml:space="preserve">
          <source>This module accepts explicit credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737ccc47b44411558dc64a9916bd418086cca0f2" translate="yes" xml:space="preserve">
          <source>This module accepts explicit ec2 credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8137486b3dc068673e8f217fbabc7623cbec8312" translate="yes" xml:space="preserve">
          <source>This module accepts explicit elasticache credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1355dda98e40cbf09d0c60f160ba4de060fdc630" translate="yes" xml:space="preserve">
          <source>This module accepts explicit elasticache credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635ee67cd4585f06e219d581e40681f90d8b3ecc" translate="yes" xml:space="preserve">
          <source>This module accepts explicit elasticache credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information is available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb02cf3472ecf8a87a5827d170ab57945cb6853" translate="yes" xml:space="preserve">
          <source>This module accepts explicit elb credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57d72e8c53928415eee9f8118436bae9cc731b3" translate="yes" xml:space="preserve">
          <source>This module accepts explicit elb credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71048b6ebb1f1e0cfbbb27ec9b41b5392e0f3e6f" translate="yes" xml:space="preserve">
          <source>This module accepts explicit iam credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db8d2d4ef64195a1e4054b4963a4d323e7cfffe" translate="yes" xml:space="preserve">
          <source>This module accepts explicit kms credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1300dcf6c75d2e16893a0523dd86cdaf749081d" translate="yes" xml:space="preserve">
          <source>This module accepts explicit kms credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4579047da5ae2897f1920454c4062c0cdf0f1353" translate="yes" xml:space="preserve">
          <source>This module accepts explicit rds credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38298d455d0d479846f2b3341af9706f1471b2df" translate="yes" xml:space="preserve">
          <source>This module accepts explicit rds credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f466328a6ee78cf449ad8b826ad56378c0b0200" translate="yes" xml:space="preserve">
          <source>This module accepts explicit route53 credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d77a1d1e4bc26f64d1cdf7da7eb9929d82b9412" translate="yes" xml:space="preserve">
          <source>This module accepts explicit route53 credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b6e4c31dd230a3bebfdc02543dc26b57ad01df" translate="yes" xml:space="preserve">
          <source>This module accepts explicit s3 credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a017349d66acd01c945001684f93c2580a3f09" translate="yes" xml:space="preserve">
          <source>This module accepts explicit sns credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More Information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2778e28a707703ef59580d4e4f6e8b88605ce5" translate="yes" xml:space="preserve">
          <source>This module accepts explicit sqs credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0279dba0f58a94dab01c51bb7a86c51ce2d4871" translate="yes" xml:space="preserve">
          <source>This module accepts explicit telemetry credentials or can also read api key credentials from a pillar. More Information available &lt;a href=&quot;https://github.com/mongolab/mongolab-telemetry-api-docs/blob/master/alerts.md&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2382db46f9f351e6d1509d09a9bfe43d1d02cee" translate="yes" xml:space="preserve">
          <source>This module accepts explicit vpc credentials but can also utilize IAM roles assigned to the instance through Instance Profiles. Dynamic credentials are then automatically obtained from AWS API and no further configuration is necessary. More information available &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1f8a743702325d8546d14e91b0f89c899e54cb" translate="yes" xml:space="preserve">
          <source>This module acts as the default package provider for FreeBSD 9 and older. If you need to use pkgng on a FreeBSD 9 system, you will need to override the &lt;code&gt;pkg&lt;/code&gt; provider by setting the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-providers&quot;&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/a&gt; parameter in your Minion config file, in order to use pkgng.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f8470e8bfcb8a52329c3928d6c99f05f427f0e" translate="yes" xml:space="preserve">
          <source>This module allows access to Consul using an &lt;code&gt;sdb://&lt;/code&gt; URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3adbf892e18f77927b262dbdf9c1bedd476a7bb" translate="yes" xml:space="preserve">
          <source>This module allows access to Hashicorp Vault using an &lt;code&gt;sdb://&lt;/code&gt; URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21c45f5390020c2f3cc6ada6c8e8097a040f7fe" translate="yes" xml:space="preserve">
          <source>This module allows access to Redis using an &lt;code&gt;sdb://&lt;/code&gt; URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d859a5f7da156a601e57f879007cd30d924020" translate="yes" xml:space="preserve">
          <source>This module allows access to a REST interface using an &lt;code&gt;sdb://&lt;/code&gt; URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14baf16a56b1cb580711f32ad31fb6d52b48758" translate="yes" xml:space="preserve">
          <source>This module allows access to environment variables using an &lt;code&gt;sdb://&lt;/code&gt; URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38cafea4425ac67757950ff70f271bcabf2f259" translate="yes" xml:space="preserve">
          <source>This module allows access to memcached using an &lt;code&gt;sdb://&lt;/code&gt; URI. This package is located at &lt;code&gt;https://pypi.python.org/pypi/python-memcached&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e0649aed7bd1b6e75564da34331530e009fd0c" translate="yes" xml:space="preserve">
          <source>This module allows access to sqlite3 using an &lt;code&gt;sdb://&lt;/code&gt; URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcc6e522833e8aa8caae9d1908da7d55390712d" translate="yes" xml:space="preserve">
          <source>This module allows access to the etcd database using an &lt;code&gt;sdb://&lt;/code&gt; URI. This package is located at &lt;code&gt;https://pypi.python.org/pypi/python-etcd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7209c5c35b164d1fbc8ccab8177315b796d757b" translate="yes" xml:space="preserve">
          <source>This module allows access to the keyring package using an &lt;code&gt;sdb://&lt;/code&gt; URI. This package is located at &lt;code&gt;https://pypi.python.org/pypi/keyring&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffedbd2d850d10d40e3ded3b8da765ba5d30843c" translate="yes" xml:space="preserve">
          <source>This module allows configuring local group policy (i.e. &lt;code&gt;gpedit.msc&lt;/code&gt;) on a Windows server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb8e93345d3b9d34b0107fb65fa94b07f4841b0" translate="yes" xml:space="preserve">
          <source>This module allows one to deal with docker-compose file in a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494f8c2962494949473a3b12ee8359843b76c3f2" translate="yes" xml:space="preserve">
          <source>This module allows pillar data to be stored in Hashicorp Vault.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00073d98f56fa8835ee9febc858cad18e74105ba" translate="yes" xml:space="preserve">
          <source>This module allows you to &quot;wrap&quot; a state's execution with concurrency control. This is useful to protect against all hosts executing highstate simultaneously if your services don't all HUP restart. The common way of protecting against this is to run in batch mode, but that doesn't protect from another person running the same batch command (and thereby having 2x the number of nodes deploying at once).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4280810d14f760887ef435d2776622fc597f77a" translate="yes" xml:space="preserve">
          <source>This module allows you to acquire and release a slot. This is primarily useful for ensureing that no more than N hosts take a specific action at once. This can also be used to coordinate between masters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb9d3a7eb673a02c289cf002d6681b31a3f5107" translate="yes" xml:space="preserve">
          <source>This module allows you to control the power settings of a windows minion via powercfg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02fe230b0fb8857e771ce8675e7400e81a270193" translate="yes" xml:space="preserve">
          <source>This module allows you to install certificates into the windows certificate manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87703807bae5190af10bb82323f3f2993dccb389" translate="yes" xml:space="preserve">
          <source>This module allows you to install ports using &lt;code&gt;BATCH=yes&lt;/code&gt; to bypass configuration prompts. It is recommended to use the &lt;code&gt;ports state&lt;/code&gt; to install ports, but it is also possible to use this module exclusively from the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4fd1a46a94a38174a7682a4fd161d080d03eb0" translate="yes" xml:space="preserve">
          <source>This module allows you to manage assistive access on macOS minions with 10.9+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b756948d3c34594de39292df317224d94e1fea" translate="yes" xml:space="preserve">
          <source>This module allows you to manage extended attributes on files or directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bf02bc003249bbe79f5b5cbbcb97b7dd3f3391" translate="yes" xml:space="preserve">
          <source>This module allows you to manage proxy settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a343662368e863d9415696febfabb247824efe76" translate="yes" xml:space="preserve">
          <source>This module allows you to manage windows licensing via slmgr.vbs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318b49e13d1856da1575bc7552a7d3b78d6de3a4" translate="yes" xml:space="preserve">
          <source>This module also has the ability to scan files inside an include directory, and make changes in the appropriate file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c885a7b710a74621ac289328b19ab2867457c448" translate="yes" xml:space="preserve">
          <source>This module applies DSC Configurations in the form of PowerShell scripts or MOF (Managed Object Format) schema files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b102ac1c82268476015fe9e79dbed5f417da59d" translate="yes" xml:space="preserve">
          <source>This module can be used by either passing a hook_url directly or by specifying it in a configuration profile in the salt master/minion config. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca6245e9e70fe1dc1159c65f239b0c94cc8b89c" translate="yes" xml:space="preserve">
          <source>This module can be used by either passing a jid and password directly to send_message, or by specifying the name of a configuration profile in the minion config, minion pillar, or master config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ec0c1a53221f4dac27be3bdcbcecd3f2a62f70" translate="yes" xml:space="preserve">
          <source>This module can be used by either passing an api key and version directly or by specifying both in a configuration profile in the salt master/minion config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b785ff629075b2af06d3791787efe10d0af877eb" translate="yes" xml:space="preserve">
          <source>This module can be used by either passing an api_url and hook directly or by specifying both in a configuration profile in the salt master/minion config. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06a195a6d60799815ea2a828cd177dce94f3758" translate="yes" xml:space="preserve">
          <source>This module can be used by specifying the name of a configuration profile in the master config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf51e9c4dafdf9abc0c4a123a173205194f2600" translate="yes" xml:space="preserve">
          <source>This module can be used by specifying the name of a configuration profile in the minion config, minion pillar, or master config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe39e7630e453fade5984f03195a87681cf33db" translate="yes" xml:space="preserve">
          <source>This module can be used by specifying the name of a configuration profile in the minion config, minion pillar, or master config. The default configuration profile name is 'pagerduty.'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86623019f5cef2b3774e8b5824359e439495bca" translate="yes" xml:space="preserve">
          <source>This module can be used for basic configuration parsing, audit or validation for a variety of network platforms having Cisco IOS style configuration (one space indentation), including: Cisco IOS, Cisco Nexus, Cisco IOS-XR, Cisco IOS-XR, Cisco ASA, Arista EOS, Brocade, HP Switches, Dell PowerConnect Switches, or Extreme Networks devices. In newer versions, &lt;code&gt;ciscoconfparse&lt;/code&gt; provides support for brace-delimited configuration style as well, for platforms such as: Juniper Junos, Palo Alto, or F5 Networks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f167bad9eb879dc5995af3f2d166d02fa397af2d" translate="yes" xml:space="preserve">
          <source>This module can be used in Reactor System for posting data to OpsGenie as a remote-execution function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaa644ff99c1ebafec50dd777d0a8dfe64a1a11" translate="yes" xml:space="preserve">
          <source>This module can be used with the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/requisites.html#requisites-prereq&quot;&gt;prereq&lt;/a&gt; requisite to remove/add the worker from the load balancer before deploying/restarting service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93eb8f955c26cbb76c7b21d1c4fe6f5ca5e7ffd" translate="yes" xml:space="preserve">
          <source>This module can enable managing a complete PKI infrastructure including creating private keys, CA's, certificates and CRLs. It includes the ability to generate a private key on a server, and have the corresponding public key sent to a remote CA to create a CA signed certificate. This can be done in a secure manner, where private keys are always generated locally and never moved across the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09342930a244b74af1ca82641744b4e068009408" translate="yes" xml:space="preserve">
          <source>This module can equally be used via the &lt;a href=&quot;../../proxy/all/salt.proxy.arista_pyeapi#module-salt.proxy.arista_pyeapi&quot;&gt;&lt;code&gt;pyeapi&lt;/code&gt;&lt;/a&gt; Proxy module or directly from an arbitrary (Proxy) Minion that is running on a machine having access to the network device API, and the &lt;code&gt;pyeapi&lt;/code&gt; library is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d1a7f307331f99755bcc6860d79e88562bf4c6" translate="yes" xml:space="preserve">
          <source>This module can equally be used via the &lt;a href=&quot;../../proxy/all/salt.proxy.netmiko_px#module-salt.proxy.netmiko_px&quot;&gt;&lt;code&gt;netmiko&lt;/code&gt;&lt;/a&gt; Proxy module (check documentation), or directly from an arbitrary (Proxy) Minion that is running on a server (computer) having access to the network device, and has the &lt;code&gt;netmiko&lt;/code&gt; library installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370d2dea37f974be002c87a17813ce8c8a31314f" translate="yes" xml:space="preserve">
          <source>This module can equally be used via the &lt;a href=&quot;../../proxy/all/salt.proxy.nxos_api#module-salt.proxy.nxos_api&quot;&gt;&lt;code&gt;nxos_api&lt;/code&gt;&lt;/a&gt; Proxy module or directly from an arbitrary (Proxy) Minion that is running on a machine having access to the network device API. Given that there are no external dependencies, this module can very well used when using the regular Salt Minion directly installed on the switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b9408a3ca30f1f69833d498bfc854f94f9dc58" translate="yes" xml:space="preserve">
          <source>This module can have an optional minion-level configuration in /etc/salt/minion.d/ as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b70047fa9ce492054ff20786121c1f343598299" translate="yes" xml:space="preserve">
          <source>This module clones the behaviour of reclass (&lt;a href=&quot;http://reclass.pantsfullofunix.net/&quot;&gt;http://reclass.pantsfullofunix.net/&lt;/a&gt;), without the need of an external app, and add several features to improve flexibility. Saltclass lets you define your nodes from simple &lt;code&gt;yaml&lt;/code&gt; files (&lt;code&gt;.yml&lt;/code&gt;) through hierarchical class inheritance with the possibility to override pillars down the tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168edcfd51b489cc485b51036fa618150c4933bc" translate="yes" xml:space="preserve">
          <source>This module currently looks for certbot script in the $PATH as - certbot, - lestsencrypt, - certbot-auto, - letsencrypt-auto eventually falls back to /opt/letsencrypt/letsencrypt-auto</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4d7640899fc582f89f1cd7f5c3779db47b0429" translate="yes" xml:space="preserve">
          <source>This module currently only supports the napalm proxy minion and assumes you will use SSH keys to authenticate to the network device. If password authentication is desired, it is recommended to create another &lt;code&gt;proxy&lt;/code&gt; key in pillar_roots (or git_pillar) with just the &lt;code&gt;passwd&lt;/code&gt; key and use &lt;a href=&quot;../../renderers/all/salt.renderers.gpg#module-salt.renderers.gpg&quot;&gt;&lt;code&gt;salt.renderers.gpg&lt;/code&gt;&lt;/a&gt; to encrypt the value. If any additional options for the proxy setup are needed they should also be configured in pillar_roots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5a29ce32551b4df87e554d6fba350a9c9ebdbc" translate="yes" xml:space="preserve">
          <source>This module currently requires the latest develop branch of Salt to be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd811646eb0c7d9a54af74399c9026271581f138" translate="yes" xml:space="preserve">
          <source>This module currently supports the CloudFlare certbot DNS plugin. The DNS plugin credentials file needs to be passed in using the &lt;code&gt;dns_plugin_credentials&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92247b2fcae9cec74311130a563ae96e882f320" translate="yes" xml:space="preserve">
          <source>This module depends on the Python library with the same name, &lt;code&gt;ciscoconfparse&lt;/code&gt; - to install execute: &lt;code&gt;pip install ciscoconfparse&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5310328815a5b7731d9578bd74f8b4d1ec72c512" translate="yes" xml:space="preserve">
          <source>This module does not attempt to understand or manage boot loader configurations it is possible to have a new kernel installed, but a boot loader configuration that will never activate it. For this reason, it would not be advisable to schedule this state to run automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c517afb5461660d1a311a3d12f8dadad7fca75" translate="yes" xml:space="preserve">
          <source>This module exposes most of the common nix operations. Currently not meant to be run as a &lt;code&gt;pkg&lt;/code&gt; module, but explicitly as &lt;code&gt;nix.*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c12909a27667ee44ef3412bd241fe142684d66d" translate="yes" xml:space="preserve">
          <source>This module exposes the functionality of the TestInfra library for use with SaltStack in order to verify the state of your minions. In order to allow for the addition of new resource types in TestInfra this module dynamically generates wrappers for the various resources by iterating over the values in the &lt;code&gt;__all__&lt;/code&gt; variable exposed by the testinfra.modules namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d01320bb7bb230b11cbadd54a655a2e556c538f" translate="yes" xml:space="preserve">
          <source>This module exposes two ways of interaction with the CLI, either through commands or operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cdba9086be7948d404ac7fa85ccb9316c5206d" translate="yes" xml:space="preserve">
          <source>This module has been completely rewritten. Up to and including version 0.17.0, it supported &lt;code&gt;pkg_add(1)&lt;/code&gt;, but checked for the existence of a pkgng local database and, if found, would provide some of pkgng's functionality. The rewrite of this module has removed all pkgng support, and moved it to the &lt;a href=&quot;salt.modules.pkgng#module-salt.modules.pkgng&quot;&gt;&lt;code&gt;pkgng&lt;/code&gt;&lt;/a&gt; execution module. For versions &amp;lt;= 0.17.0, the documentation here should not be considered accurate. If your Minion is running one of these versions, then the documentation for this module can be viewed using the &lt;code&gt;sys.doc&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a51d626b077a080d4f18892bf377f5f41be68f9" translate="yes" xml:space="preserve">
          <source>This module has been completely rewritten. Up to and including version 0.17.x, it was available as the &lt;code&gt;pkgng&lt;/code&gt; module, (&lt;code&gt;pkgng.install&lt;/code&gt;, &lt;code&gt;pkgng.delete&lt;/code&gt;, etc.), but moving forward this module will no longer be available as &lt;code&gt;pkgng&lt;/code&gt;, as it will behave like a normal Salt &lt;code&gt;pkg&lt;/code&gt; provider. The documentation below should not be considered to apply to this module in versions &amp;lt;= 0.17.x. If your minion is running a 0.17.x release or older, then the documentation for this module can be viewed using the &lt;code&gt;sys.doc&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77a9990421c9a4a02d4e0468bec3868e4adf1ba" translate="yes" xml:space="preserve">
          <source>This module has been tested to work with HP Cloud and Rackspace. See the documentation for specific options for either of these providers. These examples could be set up in the cloud configuration at &lt;code&gt;/etc/salt/cloud.providers&lt;/code&gt; or &lt;code&gt;/etc/salt/cloud.providers.d/openstack.conf&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da4147b47af2312239226fc5ee5e0e1f8b0c3a1" translate="yes" xml:space="preserve">
          <source>This module has some caveats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1564107ef4a2e5eea2fe5ea338897aee4cd7c1ed" translate="yes" xml:space="preserve">
          <source>This module has support for services in the following locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8f86e38bb17ec3704c397d47ce8e3b69cfffc8" translate="yes" xml:space="preserve">
          <source>This module have been tested on infoblox API v1.2.1, other versions of the API are likly workable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3a547d47bf155f2a280fa47490d12a0001c93f" translate="yes" xml:space="preserve">
          <source>This module helps include encrypted passwords in pillars, grains and salt state files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87296b5c302d1e571d3c97125bdb40f3276cb1fb" translate="yes" xml:space="preserve">
          <source>This module implements the pkgbuild interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd9c477a968920d3da7491b78bf044b090a62e8" translate="yes" xml:space="preserve">
          <source>This module interacts with an ISC DHCP Server via OMAPI. server_ip and server_port params may be set in the minion config or pillar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f223458427df65d2179b2b4f6eeb1ebd36b26265" translate="yes" xml:space="preserve">
          <source>This module is Alpha</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdd63bdc8b8c64d348dd384de24a2a2cb72c5d0" translate="yes" xml:space="preserve">
          <source>This module is Experimental and should be used with caution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35186167453b23261fa92d026f4fc0292c4f3a4" translate="yes" xml:space="preserve">
          <source>This module is a concrete implementation of the sql_base ext_pillar for MySQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d042e0920d1fb5a7b70defdcb712482228a70fcd" translate="yes" xml:space="preserve">
          <source>This module is a concrete implementation of the sql_base ext_pillar for SQLCipher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12154383efb87aac9429083648e19a74cf9bd3c7" translate="yes" xml:space="preserve">
          <source>This module is a concrete implementation of the sql_base ext_pillar for SQLite3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db24b3b8342e59ef37c0b35fc32362f4ba4acd55" translate="yes" xml:space="preserve">
          <source>This module is assumes we are using solaris-like shutdown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7be65205984f5895132ddd0f9ae43cbcf7f142" translate="yes" xml:space="preserve">
          <source>This module is capable of managing syslog-ng instances which were installed via a package manager or from source. Users can use a directory as a parameter in the case of most functions, which contains the syslog-ng and syslog-ng-ctl binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710969222a4a16bd0ee1aed80e708aeaa62c1052" translate="yes" xml:space="preserve">
          <source>This module is compatible with the &lt;a href=&quot;../../states/all/salt.states.service#module-salt.states.service&quot;&gt;&lt;code&gt;service&lt;/code&gt;&lt;/a&gt; states, so it can be used to maintain services using the &lt;code&gt;provider&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a6eb976e0f74945f55c39050afb68a868222db" translate="yes" xml:space="preserve">
          <source>This module is currently little more than a config file viewer and editor. It is able to read the master.cf file (which is one style) and files in the style of main.cf (which is a different style, that is used in multiple postfix configuration files).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8124d7b514ce9317b42600015c5d44caf616fb" translate="yes" xml:space="preserve">
          <source>This module is inspired by &lt;a href=&quot;https://github.com/minitage/minitage/blob/master/src/minitage/core/makers/buildout.py&quot;&gt;minitage's buildout maker&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda863debab5dd5a5aafa9beb08624f745fa00e9" translate="yes" xml:space="preserve">
          <source>This module is inspired from minitage's buildout maker (&lt;a href=&quot;https://github.com/minitage/minitage/blob/master/src/minitage/core/makers/buildout.py&quot;&gt;https://github.com/minitage/minitage/blob/master/src/minitage/core/makers/buildout.py&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da93eb020efe2d0cefb2b130d4952dd7b771543d" translate="yes" xml:space="preserve">
          <source>This module is invoked by the minion if the &lt;code&gt;sudo_user&lt;/code&gt; minion config is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46651cbba4ff73569fd370d685d047303a5a0ce5" translate="yes" xml:space="preserve">
          <source>This module is not meant to be used directly as an ext_pillar. It is a place to put code common to PEP 249 compliant SQL database adapters. It exposes a python ABC that can be subclassed for new database providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85361b0a2d21ea993708421bab37efd700e8608" translate="yes" xml:space="preserve">
          <source>This module is not usable until the following are specified either in a pillar or in the minion's config file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4808be117eccc1ec2ef8f3705a04cd73e890784b" translate="yes" xml:space="preserve">
          <source>This module is not usable until the user, password, tenant, and auth URL are specified either in a pillar or in the minion's config file. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc348e02e6facb31e4a797aed8b61149fc56a5f0" translate="yes" xml:space="preserve">
          <source>This module is not usable until the user, tenant, auth URL, and password or auth_key are specified either in a pillar or in the minion's config file. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca01354091fccba4114a22fa5543f5cd821eb684" translate="yes" xml:space="preserve">
          <source>This module is not usable until the zabbix user and zabbix password are specified either in a pillar or in the minion's config file. Zabbix url should be also specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6d7dc1ce08a0d747b6b20f16dccba8e88313e2" translate="yes" xml:space="preserve">
          <source>This module is used to install and manage python installations with pyenv. Different versions of python can be installed, and uninstalled. pyenv will be installed automatically the first time it is needed and can be updated later. This module will &lt;em&gt;not&lt;/em&gt; automatically install packages which pyenv will need to compile the versions of python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0c7176f6bbd3aaf53e27c1246e956e759521f0" translate="yes" xml:space="preserve">
          <source>This module is used to install and manage ruby installations and gemsets with RVM, the Ruby Version Manager. Different versions of ruby can be installed and gemsets created. RVM itself will be installed automatically if it's not present. This module will not automatically install packages that RVM depends on or ones that are needed to build ruby. If you want to run RVM as an unprivileged user (recommended) you will have to create this user yourself. This is how a state configuration could look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb57b371354761980868346a7eae2301364995e" translate="yes" xml:space="preserve">
          <source>This module is used to install and manage ruby installations with rbenv and the ruby-build plugin. Different versions of ruby can be installed, and uninstalled. Rbenv will be installed automatically the first time it is needed and can be updated later. This module will &lt;em&gt;not&lt;/em&gt; automatically install packages which rbenv will need to compile the versions of ruby. If your version of ruby fails to install, refer to the ruby-build documentation to verify you are not missing any dependencies: &lt;a href=&quot;https://github.com/sstephenson/ruby-build/wiki&quot;&gt;https://github.com/sstephenson/ruby-build/wiki&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c2c5325d67eabb5c67898f7be9c1c18c9a709a" translate="yes" xml:space="preserve">
          <source>This module manages the installed packages using Bower. Note that npm, git and bower must be installed for this module to be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abae8f4416312971a16339fb2d08cde554fb278" translate="yes" xml:space="preserve">
          <source>This module may be deployed on any WSGI-compliant server such as Apache with mod_wsgi or Nginx with FastCGI, to name just two (there are many).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed583db6c9219e172af74f3be178f3886345aacc" translate="yes" xml:space="preserve">
          <source>This module may be run via any WSGI-compliant production server such as Apache with mod_wsgi or Nginx with FastCGI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469ebeb127d29c58ae84aaabd63b69293b0e8596" translate="yes" xml:space="preserve">
          <source>This module needs the bcache userspace tools to function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b367bade2a6b8ee7dba3f4859abdc664464800" translate="yes" xml:space="preserve">
          <source>This module performs the following steps to generate the software metadata database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f65df7f2ab4e434613582fbc6db1eb4d4bd157" translate="yes" xml:space="preserve">
          <source>This module provides a collection of helper functions for Cisco IOS style configuration manipulation. This module does not have external dependencies and can be used from any Proxy or regular Minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ab09a9907bdfdc754a28d16a4af259164818b5" translate="yes" xml:space="preserve">
          <source>This module provides a custom renderer that processes a salt file with a specified templating engine (e.g. Jinja) and a chosen data renderer (e.g. YAML), extracts arguments for any &lt;code&gt;stateconf.set&lt;/code&gt; state, and provides the extracted arguments (including Salt-specific args, such as &lt;code&gt;require&lt;/code&gt;, etc) as template context. The goal is to make writing reusable/configurable/parameterized salt files easier and cleaner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7825a2c0ebd63c53051eb76fefabda66aa32f544" translate="yes" xml:space="preserve">
          <source>This module provides a thin wrapper around &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/clients/index.html#python-api&quot;&gt;Salt's Python API&lt;/a&gt;. Executing a Salt command via rest_cherrypy is directly analogous to executing a Salt command via Salt's CLI (which also uses the Python API) -- they share the same semantics, performance characteristics, and 98% of the same code. As a rule-of-thumb: if you wouldn't do it at the CLI don't do it via this API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b55f2c72c3e353fc7e6c69c3974f4234f41a01" translate="yes" xml:space="preserve">
          <source>This module provides access to Salt's cache subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d4ce26e880b32eedb13e10ce01754365bf2709" translate="yes" xml:space="preserve">
          <source>This module provides an interface to &lt;code&gt;pkg(8)&lt;/code&gt;. It acts as the default package provider for FreeBSD 10 and newer. For FreeBSD hosts which have been upgraded to use pkgng, you will need to override the &lt;code&gt;pkg&lt;/code&gt; provider by setting the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-providers&quot;&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/a&gt; parameter in your Minion config file, in order to use this module to manage packages, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ca9faa0073daea6d59fc42ea16445252440294" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the Elastic Compute Cloud (EC2) service from AWS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f8f0b2d586d9896bcb6bdcff5139a1714664fc" translate="yes" xml:space="preserve">
          <source>This module provides support for Solaris 11 new package management - IPS (Image Packaging System). This is the default pkg module for Solaris 11 (and later).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2985972571d98fa609b6c36fb0b4411999e2fd6a" translate="yes" xml:space="preserve">
          <source>This module provides the &lt;code&gt;network&lt;/code&gt; state(s) on Windows hosts. DNS servers, IP addresses and default gateways can currently be managed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcda199875028655f92951bea10809a015620a39" translate="yes" xml:space="preserve">
          <source>This module provides the ability to add/remove websites and application pools from Microsoft IIS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f5e448e2987624a27e0381f4023158ff509f0f" translate="yes" xml:space="preserve">
          <source>This module requires Azure Resource Manager credentials to be passed as a dictionary of keyword arguments to the &lt;code&gt;connection_auth&lt;/code&gt; parameter in order to work properly. Since the authentication parameters are sensitive, it's recommended to pass them to the states via pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cb076ce8ca2a03a02d8bf9e0629b345aeb25de" translate="yes" xml:space="preserve">
          <source>This module requires Azure Resource Manager credentials to be passed as keyword arguments to every function in order to work properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6b4d7aa053e9294f9fcb0e16eade2fd60e37b9" translate="yes" xml:space="preserve">
          <source>This module requires a 'zenoss' entry in the master/minion config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcd67caacf421b9b8ac61e210b3b43050bd37d9" translate="yes" xml:space="preserve">
          <source>This module requires a configuration profile to be configured in the minion config, minion pillar, or master config. The module will use the 'grafana' key by default, if defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45a6f0543b196d2918fbfb7b86f558e4122f10a" translate="yes" xml:space="preserve">
          <source>This module requires the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833360b9eda6dc97dbab35b3adf3f324f3494ea7" translate="yes" xml:space="preserve">
          <source>This module requires the &lt;code&gt;augeas&lt;/code&gt; Python module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7d1c628648a1a51959e597c06cf615c82e4194" translate="yes" xml:space="preserve">
          <source>This module requires the &lt;code&gt;jira&lt;/code&gt; Python library to be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee28ef2d0af14ad4bcda242c8bbd207bddfa9d40" translate="yes" xml:space="preserve">
          <source>This module requires the &lt;code&gt;semanage&lt;/code&gt;, &lt;code&gt;setsebool&lt;/code&gt;, and &lt;code&gt;semodule&lt;/code&gt; commands to be available on the minion. On RHEL-based distributions, ensure that the &lt;code&gt;policycoreutils&lt;/code&gt; and &lt;code&gt;policycoreutils-python&lt;/code&gt; packages are installed. If not on a Fedora or RHEL-based distribution, consult the selinux documentation for your distribution to ensure that the proper packages are installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6e565b0f34284445d5d53442772a9d9997bb99" translate="yes" xml:space="preserve">
          <source>This module requires the prlctl binary to be installed to run most functions. To run parallels.prlsrvctl, the prlsrvctl binary is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f7f9a22491e3b3e707ec87f2c434ef61231a43" translate="yes" xml:space="preserve">
          <source>This module requires the redis python module and uses the following defaults which may be overridden in the minion configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54a2d6cdfe592881c250cd7684f20e10a75b034" translate="yes" xml:space="preserve">
          <source>This module requires the use of MD5 hashing. Certain security audits may not permit the use of MD5. For those cases, this module should be disabled or removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a4c13023acc5ec2104c91104a8bd81258c7097" translate="yes" xml:space="preserve">
          <source>This module should be usable to query other S3-like services, such as Eucalyptus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b2124aa724da3d3eed03fb5ccf6b9afc76100a" translate="yes" xml:space="preserve">
          <source>This module should not be used on Red Hat systems. For these, the &lt;a href=&quot;salt.modules.rh_service#module-salt.modules.rh_service&quot;&gt;&lt;code&gt;rh_service&lt;/code&gt;&lt;/a&gt; module should be used, as it supports the hybrid upstart/sysvinit system used in RHEL/CentOS 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b4c3f26c75a58e89fd4c50f451585972cb2a9c" translate="yes" xml:space="preserve">
          <source>This module stores the serial in a grain, you can explicitly set the stored value as a grain named &lt;code&gt;dnsserial_&amp;lt;zone_name&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345dcd79a56fa695c33c2e91f675cc77d30533b8" translate="yes" xml:space="preserve">
          <source>This module supports multi-core and standard setups. Certain methods are master/slave specific. Make sure you set the solr.type. If you have questions or want a feature request please ask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c20b45e229957109284d7af312ceaf6b599f86e" translate="yes" xml:space="preserve">
          <source>This module uses &lt;code&gt;boto3&lt;/code&gt;, which can be installed via package, or pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a19ef2bfd107a59c5e5eeedaaf2f87c13223d3b" translate="yes" xml:space="preserve">
          <source>This module uses &lt;code&gt;boto&lt;/code&gt;, which can be installed via package, or pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f170e126850c358c6b1a93e2af346d70fddc023" translate="yes" xml:space="preserve">
          <source>This module uses &lt;code&gt;elasticsearch&lt;/code&gt;, which can be installed via package, or pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698353a68f30ebc60831a6f05342f428e6e4fb43" translate="yes" xml:space="preserve">
          <source>This module uses &lt;code&gt;libcloud&lt;/code&gt;, which can be installed via package, or pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c37eb3afcc446db703ac908d49c38b5ff43f311" translate="yes" xml:space="preserve">
          <source>This module uses &lt;code&gt;pyrax&lt;/code&gt;, which can be installed via package, or pip. This module is greatly inspired by boto_* modules from SaltStack code source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabd69988601a937779616ea0c1c08c88621942b" translate="yes" xml:space="preserve">
          <source>This module uses HTTP requests to talk to the apache solr request handlers to gather information and report errors. Because of this the minion doesn't necessarily need to reside on the actual slave. However if you want to use the signal function the minion must reside on the physical solr host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cffea33bcc68e955b039ee20d02fa99ed7c55f0" translate="yes" xml:space="preserve">
          <source>This module uses MD5 hashing which may not be compliant with certain security audits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d493476e9570fec2cf36e064b3d9b5b894bc83b" translate="yes" xml:space="preserve">
          <source>This module uses PyMongo, and accepts configuration details as parameters as well as configuration settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6503001a0052682e320b54569ab384966924dbd7" translate="yes" xml:space="preserve">
          <source>This module uses a configuration profile for one or multiple Cloud providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886827dfe5d962f4ec777261ed49a4b47cf0c30e" translate="yes" xml:space="preserve">
          <source>This module uses a configuration profile for one or multiple DNS providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c05e0cd3bb017b1bc950fddb97d49a44e6210d6" translate="yes" xml:space="preserve">
          <source>This module uses a configuration profile for one or multiple Storage providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97debc3794dd9ec027a4eb4e42d7de2b270e1b83" translate="yes" xml:space="preserve">
          <source>This module uses a configuration profile for one or multiple cloud providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcecd80ce6f7bba7ddd33e0c5c6bcfb2b325dcdb" translate="yes" xml:space="preserve">
          <source>This module uses boto, which can be installed via package, or pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484cf163d4937fcddf5222e950bd7ba38bc79897" translate="yes" xml:space="preserve">
          <source>This module uses boto3 behind the scenes - as a result it inherits any limitations it boto3's implementation of the AWS API. It is also designed to as directly as possible leverage boto3's parameter naming and semantics. This allows one to use &lt;a href=&quot;http://boto3.readthedocs.io/en/latest/reference/services/elasticache.html&quot;&gt;http://boto3.readthedocs.io/en/latest/reference/services/elasticache.html&lt;/a&gt; as an excellent source for details too involved to reiterate here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8facba717316d0bf88c1feb5d64ea0b6c3d19f" translate="yes" xml:space="preserve">
          <source>This module uses requests, which can be installed via package, or pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6ac5bbdeb6c38c6c7dcd922086dd6700278687" translate="yes" xml:space="preserve">
          <source>This module uses the &lt;code&gt;requests&lt;/code&gt; Python module to communicate to the namecheap API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b951df541abf9b6815522223be778514422bd5c3" translate="yes" xml:space="preserve">
          <source>This module uses the awscli tool provided by Amazon. This can be downloaded from pip. Also check the documentation for awscli for configuration information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0924e9aa22c8f4094313df7a826c6e9c4f777e8" translate="yes" xml:space="preserve">
          <source>This module uses the manager webapp to manage Apache tomcat webapps. If the manager webapp is not configured some of the functions won't work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45d115ea50d3a4becf09ebc6a12d1fe3c4bd999" translate="yes" xml:space="preserve">
          <source>This module will bock while acquiring a slot, meaning that however the command gets called it will coordinate with zookeeper to ensure that no more than max_concurrency steps are executing with a single path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c5c2632f209971092090aa61f5bc5f1abafacd" translate="yes" xml:space="preserve">
          <source>This module will decrypt PGP encrypted secrets against a tISM server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e61059d28f64f8e9cc124807ff579fb72f4cfb2" translate="yes" xml:space="preserve">
          <source>This module will enforce group membership. If a group exists and contains members this state does not include, those members will be removed and replaced with the specified members in the state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6e715968a84533629d02a5b3f079f0cb6586e2" translate="yes" xml:space="preserve">
          <source>This module will load a node-specific pillar dictionary from a mongo collection. It uses the node's id for lookups and can load either the whole document, or just a specific field from that document as the pillar dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18181822b8cb3c2d6a1e15119405c3cd3242bd6a" translate="yes" xml:space="preserve">
          <source>This module will load tops data from a mongo collection. It uses the node's id for lookups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae3764fcfb302d87c1c2bbb9586843ff8a86989" translate="yes" xml:space="preserve">
          <source>This module will only process a single address type (ip-netmask, ip-range, or fqdn). It will process the specified value if the following order: ip-netmask, ip-range, fqdn. For proper execution, only specify a single address type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42c58ca20958448af5b57dd0daf97786f86acd7" translate="yes" xml:space="preserve">
          <source>This module will only return pillar data if the &lt;code&gt;digicert&lt;/code&gt; runner module has already been used to create certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80b457f2d0edfca54641e753f4d097136b6e5fe" translate="yes" xml:space="preserve">
          <source>This module will only return pillar data if the &lt;code&gt;venafi&lt;/code&gt; runner module has already been used to create certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb75d171a96ead7c6f3b83edfe0156637a7f0105" translate="yes" xml:space="preserve">
          <source>This module will respect the &lt;code&gt;PACKAGEROOT&lt;/code&gt; and &lt;code&gt;PACKAGESITE&lt;/code&gt; environment variables, if set, but these values can also be overridden in several ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15cda566b86b8658eea1f760f5ff004731e2a1d" translate="yes" xml:space="preserve">
          <source>This module works with Cassandra v2 and v3 and hence generates queries based on the internal schema of said version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19cfb4b6a0477cdeea6fc57f7f50932ee2ee78b" translate="yes" xml:space="preserve">
          <source>This mongo returner is being developed to replace the default mongodb returner in the future and should not be considered API stable yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701fc0c36b863936c544b5bd4292cc4493cf713e" translate="yes" xml:space="preserve">
          <source>This needs to be a directory with a flat structure, having an index file (whose name can be specified using the &lt;code&gt;index_file&lt;/code&gt; option) and a number of TextFSM templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb012ed173394d0a794cc48d67dbbe1e927cc747" translate="yes" xml:space="preserve">
          <source>This object should be used as a context manager. It is safe to nest &lt;code&gt;with&lt;/code&gt; statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4210bba7825a105d687874e4db3ed921694e6f56" translate="yes" xml:space="preserve">
          <source>This only applies to a few property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d80390ea8710acfc42ff9141246eb75baf84f94" translate="yes" xml:space="preserve">
          <source>This operation forcibly breaks any mounts of the file system via the mount target that is being deleted, which might disrupt instances or applications using those mounts. To avoid applications getting cut off abruptly, you might consider unmounting any mounts of the mount target, if feasible. The operation also deletes the associated network interface. Uncommitted writes may be lost, but breaking a mount target using this operation does not corrupt the file system itself. The file system you created remains. You can mount an EC2 instance in your VPC via another mount target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575dec0ef812139b88b7f698041456f31a3eaae3" translate="yes" xml:space="preserve">
          <source>This option behaves differently depending on whether or not &lt;code&gt;all&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;. If it is, then all values matching the regex will be deleted (this is the only way to delete multiple values from a multivar). If &lt;code&gt;all&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;, then this state will fail if the regex matches more than one value in a multivar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d7da9f9e1a1a8a3742e4372dd6ae90a8b4dca2" translate="yes" xml:space="preserve">
          <source>This option can also be overridden by Pillar data. If the Minion has a pillar variable named &lt;code&gt;docker.running.force&lt;/code&gt; which is set to &lt;code&gt;True&lt;/code&gt;, it will turn on this option. This pillar variable can even be set at runtime. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882825ce9607f5bb705318782315edb7c92ee6ca" translate="yes" xml:space="preserve">
          <source>This option can be also specified in the minion configuration file or pillar as &lt;code&gt;napalm_cli_textfsm_parse&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ed0d33333573138595f4d6c09d27ced30c599c" translate="yes" xml:space="preserve">
          <source>This option can be also specified in the minion configuration file or pillar as &lt;code&gt;napalm_cli_textfsm_template_dict&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22be50b0a602b51ef8688155e95eb3d2dff2c34" translate="yes" xml:space="preserve">
          <source>This option can be also specified in the minion configuration file or pillar as &lt;code&gt;textfsm_index_file&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72179c4a5abbba2e5a5247f3666a4df8bd2cd49d" translate="yes" xml:space="preserve">
          <source>This option can be also specified in the minion configuration file or pillar as &lt;code&gt;textfsm_path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78ac86db993346c3ecdeb1b17599393af28e40b" translate="yes" xml:space="preserve">
          <source>This option can be also specified in the minion configuration file or pillar as &lt;code&gt;textfsm_platform_column_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3435646a46d60c7ab0ae97965140ebae358836fd" translate="yes" xml:space="preserve">
          <source>This option can be also specified in the minion configuration file or pillar as &lt;code&gt;textfsm_platform_grain&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f061917ca627b520ff77077cf3de6bf2c103921" translate="yes" xml:space="preserve">
          <source>This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance will not have an opportunity to flush file system caches nor file system meta data. If you use this option, you must perform file system check and repair procedures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e072f5c42478f302572a7b9941231bf8c14d2cb0" translate="yes" xml:space="preserve">
          <source>This option cannot be reliably managed on CentOS 7. This is because while support for this option was added in API version 1.24, its value was not added to the inpsect results until API version 1.26. The version of Docker which is available for CentOS 7 runs API version 1.24, meaning that while Salt can pass this argument to the API, it has no way of knowing the value of this config option in an existing Docker network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c8b25560f650077146fc4062336af8fd1f7349" translate="yes" xml:space="preserve">
          <source>This option has been deprecated and removed in pip version 7.0.0. Please use &lt;code&gt;index_url&lt;/code&gt; and/or &lt;code&gt;extra_index_url&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2b8823d6e02174989636ecad8ac3bc50ec2e03" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;not&lt;/strong&gt; supported on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7e5f70f3c34098161ab6e922f2c3413b2d0513" translate="yes" xml:space="preserve">
          <source>This option is ONLY supported on Memcached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac620d5ab5f21c87dbb795631ad8252b997f208d" translate="yes" xml:space="preserve">
          <source>This option is dangerous, use it with caution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954ed76db5dde9512921fcb7e8210dcee7978dc3" translate="yes" xml:space="preserve">
          <source>This option is ignored when &lt;code&gt;merge&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19a833b54b99d01af649904d8371e79f12a09a4" translate="yes" xml:space="preserve">
          <source>This option is ignored when &lt;code&gt;platform&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec886cdbaa9b651c5ac34e1f211c6aa9083af2b4" translate="yes" xml:space="preserve">
          <source>This option is ignored when no SLS files are specified, as a &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/tutorials/states_pt1.html#running-highstate&quot;&gt;highstate&lt;/a&gt; automatically syncs all custom module types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f48eb8abf3d80798965d2988868ea86f10e98f2" translate="yes" xml:space="preserve">
          <source>This option is only enabled for ext and xfs filesystems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78104960a0877b895db25846c162f7ad991e01bd" translate="yes" xml:space="preserve">
          <source>This option is only enabled for ext filesystems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f247bf82040456ef56cb8a502dc9202661a07f" translate="yes" xml:space="preserve">
          <source>This option modifies the behavior of traffic_line -b and traffic_line -L such that traffic_server is not shut down until the number of active client connections drops to the number given by the proxy.config.restart.active_client_threshold configuration variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d8334d3dca06c01e92083502599f93a7187d00" translate="yes" xml:space="preserve">
          <source>This option modifies the restart behavior such that &lt;code&gt;traffic_server&lt;/code&gt; is not shut down until the number of active client connections drops to the number given by the &lt;code&gt;proxy.config.restart.active_client_threshold&lt;/code&gt; configuration variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d366059b47c7543692a7d8f0393b43c530f52e72" translate="yes" xml:space="preserve">
          <source>This option modifies the restart behavior such that traffic_server is not shut down until the number of active client connections drops to the number given by the proxy.config.restart.active_client_threshold configuration variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fa213b0c487de9afd157deb9bc36c9a611325d" translate="yes" xml:space="preserve">
          <source>This option no longer has any functionality and will be removed, please set &lt;code&gt;output_loglevel&lt;/code&gt; to &lt;code&gt;quiet&lt;/code&gt; to suppress logging of the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d119f39b4b51817ce24ba851e4290b724069aa" translate="yes" xml:space="preserve">
          <source>This option only applies if either &lt;a href=&quot;https://github.com/libgit2/pygit2&quot;&gt;pygit2&lt;/a&gt; or &lt;a href=&quot;https://github.com/gitpython-developers/GitPython&quot;&gt;GitPython&lt;/a&gt; is installed into Salt's bundled Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed295e1b319299a87d2588cd40bbdb4515defe4b" translate="yes" xml:space="preserve">
          <source>This option requires Docker 1.2.0 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74ec313ff47f99675761b07c69c358203d0dd64" translate="yes" xml:space="preserve">
          <source>This option requires Docker 1.3.0 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c28fee043bd98481ba3ba826a2f1a0d7fd741b7" translate="yes" xml:space="preserve">
          <source>This option requires Docker 1.5.0 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893058487a532deab01a29e16b12584f0ca99d26" translate="yes" xml:space="preserve">
          <source>This option requires Docker 1.9.0 or newer and docker-py 1.7.0 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398f9da7ba5a22980ec4d4284bf7171ef6f7af59" translate="yes" xml:space="preserve">
          <source>This option requires two commits to be passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af35f6cc1c0e55590e0eea903f62f99d6cdd4031" translate="yes" xml:space="preserve">
          <source>This option should not be necessary unless new CLI arguments are added to &lt;a href=&quot;http://git-scm.com/docs/git-merge-base&quot;&gt;git-merge-base(1)&lt;/a&gt; and are not yet supported in Salt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c354b780877a93ae42573f39d2a5e3715a62114" translate="yes" xml:space="preserve">
          <source>This option starts a new thread for each queued state run, so use this option sparingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03f16f0edbf72b30d1da4167b17347356042263" translate="yes" xml:space="preserve">
          <source>This option will be disregarded unless the &lt;code&gt;ppa&lt;/code&gt; argument is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4636a245875d098f36ec8657af1562e7cb512f3" translate="yes" xml:space="preserve">
          <source>This option will enforce a single directory at the top level of the source archive, to prevent extracting a 'tar-bomb'. Set this argument to &lt;code&gt;False&lt;/code&gt; to allow archives with files (or multiple directories) at the top level to be extracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba19433105c71e94de7a66384bbe1645326b6ef2" translate="yes" xml:space="preserve">
          <source>This option will only be set if &lt;code&gt;type&lt;/code&gt; is also specified as &lt;code&gt;io1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb263dcbfcce6611e37d74e8bb4cfb2517d82200" translate="yes" xml:space="preserve">
          <source>This option will only return remote branches of which the local checkout is aware, use &lt;a href=&quot;#salt.modules.git.fetch&quot;&gt;&lt;code&gt;git.fetch&lt;/code&gt;&lt;/a&gt; to update remotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0848e3a2fea8c6c132576ca23c1a20f9ddd08c8" translate="yes" xml:space="preserve">
          <source>This option will reduce the number of connections that must be present for the proxy server. It will only require a connection to the Panorama server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e816debc9679aa5b0eae863f2fa5f4788d2fc94a" translate="yes" xml:space="preserve">
          <source>This options are only used when &lt;code&gt;unzip&lt;/code&gt; binary is used. In this function is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2155cd8f57f7d0e4d5988268044d5c27a36779" translate="yes" xml:space="preserve">
          <source>This outputter defaults to printing in YAML block mode for better readability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10243c993a53f49512d719b7c68c16ee84b8c9e0" translate="yes" xml:space="preserve">
          <source>This outputter displays a sequence of rows as table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163f53f68534b2e659ea7cc79540d12e3f789f10" translate="yes" xml:space="preserve">
          <source>This outputter is designed for Salt CLI return data. It will do the following to the return dict:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddf4de98c7ff96499ed0e07c82cb82d1b6aa240" translate="yes" xml:space="preserve">
          <source>This outputter is used to display &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/orchestrate/orchestrate_runner.html#orchestrate-runner&quot;&gt;Orchestrate Runner&lt;/a&gt; stages, and should not be called directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6539ee1aeb246647f381149dfe9cbe6252d3518b" translate="yes" xml:space="preserve">
          <source>This outputter is used to display notices about which minions failed to return when a salt function is run with &lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--verbose&lt;/code&gt;. It should not be called directly from the CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7069dc124f92087b265f39d49c8a48e3d20ed01e" translate="yes" xml:space="preserve">
          <source>This outputter simply displays the output as a python data structure, by printing a string representation of it. It is similar to the &lt;code&gt;pprint&lt;/code&gt; outputter, only the data is not nicely formatted/indented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f9fa84d745c09dd2599c83e5ebb41189c54479" translate="yes" xml:space="preserve">
          <source>This parameter applies to the following trigger types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc89e39453fc6ea43637edf5ee5e33e97f13ca9" translate="yes" xml:space="preserve">
          <source>This parameter applies to the following trigger types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475bde99ce6315f7cf3b959bf6fe55805d26dc52" translate="yes" xml:space="preserve">
          <source>This parameter available only on Debian based distributions, and have no effect on the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94269e7b47d0e401cdaa9cb62da7e2d54e86fc68" translate="yes" xml:space="preserve">
          <source>This parameter can be omitted and Salt will attempt to determine the compression type by examining the filename passed in the &lt;code&gt;path&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08faa042c0d3b052fb00d715618d2ab70fe6d65e" translate="yes" xml:space="preserve">
          <source>This parameter controls whether or not the package repo database is updated prior to checking for the latest available version of the requested packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fda3cf9a6df8d9a488087867e42499c400ad1c" translate="yes" xml:space="preserve">
          <source>This parameter controls whether or not the package repo database is updated prior to installing the requested package(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff693c936440793d34abca618acfc90c9783f31" translate="yes" xml:space="preserve">
          <source>This parameter defines the number of add-on domains to be purchased in addition to the default number of domains included with a multi-domain certificate. Each certificate that supports SANs has the default number of domains included. You may check the default number of domains included and the maximum number of domains that can be added to it in the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8dbcb3baad2a2212bd6dc3687572472bdc34ca9" translate="yes" xml:space="preserve">
          <source>This parameter is ONLY supported for Memcached cache clusters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e622b6dd2ff876c840ea3c86e4058f79730073f" translate="yes" xml:space="preserve">
          <source>This parameter is ONLY valid if the Engine parameter is redis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd0b6f6050d7dbec134900779535850a7db342a" translate="yes" xml:space="preserve">
          <source>This parameter is available only on Debian based distributions and has no effect on the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacb887e42cf3a38c947af23cd9cbb29f0970213" translate="yes" xml:space="preserve">
          <source>This parameter is currently disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091c20742ec08314791f62be64c50a2006c1f419" translate="yes" xml:space="preserve">
          <source>This parameter is not used for making &lt;code&gt;yum&lt;/code&gt; repositories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca7d7fbe79d209f65dc085d777cb57675757b05" translate="yes" xml:space="preserve">
          <source>This parameter is only valid if the Engine parameter is redis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf12ddc2c7afb81365a6cca9c7c84f3db884946c" translate="yes" xml:space="preserve">
          <source>This parameter is optional. If &lt;code&gt;vdata&lt;/code&gt; is not passed, the Key will be created with no associated item/value pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f815d4ac7b5fcfd5ab36808f6c6521fa51afad" translate="yes" xml:space="preserve">
          <source>This parameter sets the value in seconds after which cache marked as invalid, and cache update is necessary. This overwrite &lt;code&gt;refresh&lt;/code&gt; parameter default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5045db7ad12762ec436daa2a8546a250bc00dc6" translate="yes" xml:space="preserve">
          <source>This parameter sets the value in seconds after which the cache is marked as invalid, and a cache update is necessary. This overwrites the &lt;code&gt;refresh&lt;/code&gt; parameter's default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf041bdfc4b4c6f3846f2f4258c3be3094cbdf47" translate="yes" xml:space="preserve">
          <source>This parameter will be allow a list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9471469c475b41dd742d26533272673e4d5d236" translate="yes" xml:space="preserve">
          <source>This parameter, which holds the local path to the Salt Minion installer package, is used to determine if the virtual machine type will be &quot;Windows&quot;. Only set this parameter on profiles which install Windows operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6098f08836c0042f2a6fa1bb8f62ef12ffc81b" translate="yes" xml:space="preserve">
          <source>This passes the cmd argument directly to PowerShell without any further processing! Be absolutely sure that you have properly sanitized the command passed to this function and do not use untrusted inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec9ccc889cab9f0a2597071cff71a36c290f511" translate="yes" xml:space="preserve">
          <source>This passes the cmd argument directly to the shell without any further processing! Be absolutely sure that you have properly sanitized the command passed to this function and do not use untrusted inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8526f74b0a5213afb313cd0dd361295fb860bb9b" translate="yes" xml:space="preserve">
          <source>This path must be within the path specified by the &lt;code&gt;name&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e845e26602b6b0e18634d621914dab8c12fb5163" translate="yes" xml:space="preserve">
          <source>This pillar can operate in two modes, single environment per bucket or multiple environments per bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2feaee58a8ef959f76bfe94fb8fb1eaa073f0f8a" translate="yes" xml:space="preserve">
          <source>This pillar module executes a series of LDAP searches. Data returned by these searches are aggregated, whereby data returned by later searches override data by previous searches with the same key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c0e325b9ace4802ea51569b9371400a84008a1" translate="yes" xml:space="preserve">
          <source>This points to a directory containing a cache of package files to be copied to the image. It does not need to be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab8e58f49465664105f1504b28e889f9eedd26c" translate="yes" xml:space="preserve">
          <source>This provides a summary of the health of the managed system. It additionally provides an iterable list of reasons for warning, critical, or failed assessments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b823e1c6c4cc1dde94973d38a33369a646f09a" translate="yes" xml:space="preserve">
          <source>This provides a wrapper for bare imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edcfa3c36abf85f3f6af7c173d945b65f97489c" translate="yes" xml:space="preserve">
          <source>This proxy minion enables Cisco Integrated Management Controller devices (hereafter referred to as simply 'cimc' devices to be treated individually like a Salt Minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7530a911d9f4aa2ed87bf75d213b204d2cf5c5ba" translate="yes" xml:space="preserve">
          <source>This proxy minion enables Dell FX2 and FX2s (hereafter referred to as simply &quot;chassis&quot;, &quot;CMC&quot;, or &quot;FX2&quot;) chassis to be treated individually like a salt-minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d3078fda5532a2c0d336180641cba1db46281c" translate="yes" xml:space="preserve">
          <source>This proxy minion enables Palo Alto firewalls (hereafter referred to as simply 'panos') to be treated individually like a Salt Minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b178f185f1525b85a7720b641c4177a1f1cc32f1" translate="yes" xml:space="preserve">
          <source>This proxy minion enables VMware ESXi (hereafter referred to as simply 'ESXi') hosts to be treated individually like a Salt Minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d06a52c1e4f7d626b3cb4a593942836681f5225" translate="yes" xml:space="preserve">
          <source>This proxy minion enables a consistent interface to fetch, control and maintain the configuration of network devices via a NETCONF-compliant control plane. Cisco Network Services Orchestrator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83339db8827ed0b682dbd64fb9bc91310f78c41" translate="yes" xml:space="preserve">
          <source>This refers to the configuration profile to use to connect to the PagerDuty service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f609829cb0881626d11ff26a1c370e6fa4be9d2" translate="yes" xml:space="preserve">
          <source>This relies on the caller sleeping between checks, otherwise this could flood</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a647735d0f1e7656ffaecc325a2cb8e6c10909eb" translate="yes" xml:space="preserve">
          <source>This renderer is intended for demonstration purposes. Information on the DSON spec can be found &lt;a href=&quot;http://vpzomtrrfrt.github.io/DSON/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed65c3c5a89e3399067aee4ba66deec55f24d35e" translate="yes" xml:space="preserve">
          <source>This renderer requires &lt;a href=&quot;https://github.com/soasme/dogeon&quot;&gt;Dogeon&lt;/a&gt; (installable via pip)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e37f87aca0b2c70efb2836930cb6047380cda1" translate="yes" xml:space="preserve">
          <source>This renderer requires the &lt;a href=&quot;https://gnupg.org&quot;&gt;gpg&lt;/a&gt; binary. No python libraries are required as of the 2015.8.0 release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cd00d0794c0a573099679b9873fb318a6ed3a4" translate="yes" xml:space="preserve">
          <source>This renderer requires the &lt;a href=&quot;https://pypi.python.org/pypi/json5&quot;&gt;json5 python bindings&lt;/a&gt;, installable via pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0dd06cc21c41a157689b513f4d1233fc62b9f1" translate="yes" xml:space="preserve">
          <source>This replaces a function in main called 'fire'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54ee687d9daf091b74db5a5fb62e228e386a9f2" translate="yes" xml:space="preserve">
          <source>This requires &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-file_recv&quot;&gt;&lt;code&gt;file_recv&lt;/code&gt;&lt;/a&gt; to be set to &lt;code&gt;True&lt;/code&gt; on the Master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01fc929438f262b6f799c03fba37820d65c8fa" translate="yes" xml:space="preserve">
          <source>This requires docker-py version 2.1.0 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b856ee637c3c5b4219bd283fa61114a6fea71f" translate="yes" xml:space="preserve">
          <source>This results in a single string of return data containing all the values from the various minions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b4de41ef0d05410c2fd5c3bb5bb9ed8ab7a5e2" translate="yes" xml:space="preserve">
          <source>This return supports multi-dimension metrics for Librato. To enable support for more metrics, the tags JSON object can be modified to include other tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38395dddcd7a0cadb2680fc9543ff9c7c929aafe" translate="yes" xml:space="preserve">
          <source>This returner could be very useful during scheduled executions, but could also be useful for communicating the results of a manual execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272c92e7573c6d5a4dd2472fdea8c8e28d82888e" translate="yes" xml:space="preserve">
          <source>This returner will send data from the minions to a MongoDB server. MongoDB server can be configured by using host, port, db, user and password settings or by connection string URI (for pymongo &amp;gt; 2.3). To configure the settings for your MongoDB server, add the following lines to the minion config files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174f46e09883bd6295ef9fbb11924b26c3821ab2" translate="yes" xml:space="preserve">
          <source>This returner will send data from the minions to a MongoDB server. To configure the settings for your MongoDB server, add the following lines to the minion config files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ecc1190abbbaafc4c1ad1b238adef6f1b693081" translate="yes" xml:space="preserve">
          <source>This returns the details of each template to show number cores, memory sizes, etc..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840b551de2a3d9e5667f06156c66945e012d0263" translate="yes" xml:space="preserve">
          <source>This roster module allows you dynamically generate the roster from the terraform resources defined with the &lt;a href=&quot;https://github.com/dmacvicar/terraform-provider-salt&quot;&gt;Terraform Salt&lt;/a&gt; provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1d4493917187213cf10a38e7fe03c3bc857726" translate="yes" xml:space="preserve">
          <source>This roster requires that the minion in question was created using at least the 2015.5.0 version of Salt Cloud. Starting with the 2015.5.0 release, Salt Cloud maintains an index of minions that it creates and deletes. This index tracks the provider and profile configuration used to provision the minion, including authentication information. So long as this configuration remains current, it can be used by Salt SSH to log into any minion in the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcd013ed558fd74a668f73070d40e4bbbed579f" translate="yes" xml:space="preserve">
          <source>This roster resolves hostname in a pdsh/clustershell style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b967a0848949d07fc4703672dc16b1d3e8eafa61" translate="yes" xml:space="preserve">
          <source>This roster resolves targets from a range server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6941c18c8c774e6dfd19d50624d7f5b4991eea5c" translate="yes" xml:space="preserve">
          <source>This roster supports all matching and targeting of the Salt Master. The matching will be done using only the Salt Master's cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24647921efd04726c404e14a8291f1cca02dbbda" translate="yes" xml:space="preserve">
          <source>This routine is called from the &lt;a href=&quot;../../states/all/salt.states.file#salt.states.file.managed&quot;&gt;&lt;code&gt;file.managed&lt;/code&gt;&lt;/a&gt; state to pull a hash from a remote file. Regular expressions are used line by line on the &lt;code&gt;source_hash&lt;/code&gt; file, to find a potential candidate of the indicated hash type. This avoids many problems of arbitrary file layout rules. It specifically permits pulling hash codes from debian &lt;code&gt;*.dsc&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2576a9ad47c5f886feac09eb0ab5b08976284b70" translate="yes" xml:space="preserve">
          <source>This routine is used to create a new virtual machine. This routines takes a number of options to determine what the newly created virtual machine will look like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdef99ee737c6d6a3225756feeb17a3ec7867354" translate="yes" xml:space="preserve">
          <source>This routine is used to regenerate all keys in an environment. This is invasive! ALL KEYS IN THE SALT ENVIRONMENT WILL BE REGENERATED!!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afccac2bd5cd2214cef4b532ab28f657c2065bb7" translate="yes" xml:space="preserve">
          <source>This runner can also be used to renew a certificate by passing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ef4581a94e7b5d825bffc85d48bb08e7714352" translate="yes" xml:space="preserve">
          <source>This runner facilitates interacting with various queue backends such as the included sqlite3 queue or the planned AWS SQS and Redis queues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1004f4e712cbb13fb0069c76a59a108c2fc21ef" translate="yes" xml:space="preserve">
          <source>This runner is used only for test purposes and servers no production purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba279ebb5f028722ef11b0b413a0184ac9184fa" translate="yes" xml:space="preserve">
          <source>This runner makes Salt's execution modules available on the salt master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f91f97afedbdd90701752e3e4e4909aeeefcdc" translate="yes" xml:space="preserve">
          <source>This runner wraps the functionality of salt cloud making salt cloud routines available to all internal apis via the runner system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4488fe95f783d6a8eb0e64a12f37d0f36397d40b" translate="yes" xml:space="preserve">
          <source>This runner, as well as the Queues system, is not api stable at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e977b941208105a056f0d6eea5bef5e64416aa65" translate="yes" xml:space="preserve">
          <source>This same network could also be configured this way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69519d145ec187421b244fcc2b80369c6e8313e6" translate="yes" xml:space="preserve">
          <source>This scenario is especially true, and even slower, when the proxy minion first starts. If the correct password is not the first password on the list, it may take up to a minute for &lt;code&gt;test.ping&lt;/code&gt; to respond with a &lt;code&gt;True&lt;/code&gt; result. Once the initial authorization is complete, the responses for commands will be a little faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b54232e5b851079b1c27489b01989f3223d3a36" translate="yes" xml:space="preserve">
          <source>This should be especially useful for the other roster keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f672cdd8b74c406a46a236faf3d858ea049a13" translate="yes" xml:space="preserve">
          <source>This should match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5444713229036c74a4b1650cc92b6473aa62b98e" translate="yes" xml:space="preserve">
          <source>This should not be needed with python &amp;gt;= 3.3, because the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36061b21f22c76a82e53e0515f832ffe32297e1" translate="yes" xml:space="preserve">
          <source>This should not need to be used in most cases. By default, Salt will try to use the encoding detected from the system locale, and will fall back to UTF-8 if this fails. This should only need to be used in cases where the output of the command is encoded in something other than the system locale or UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67092aabe9a79566a9eacd4358fddc578a3a0e8" translate="yes" xml:space="preserve">
          <source>This should only be needed if the files in the repository were created with filenames using an encoding other than UTF-8 to handle Unicode characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0127529c0bac907bff41896343f1a91b8bae76f0" translate="yes" xml:space="preserve">
          <source>This should work generally for any EC2 instance tags, as long as the instance attribute being fetched is available to getattr(instance, 'attribute') as seen in the code below. Anything else will most likely require this function to be extended to handle it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e9e5e5950689dac56a0946cda13d1b66d02cfd" translate="yes" xml:space="preserve">
          <source>This state accepts the same arguments as &lt;a href=&quot;#salt.states.docker_container.running&quot;&gt;&lt;code&gt;docker_container.running&lt;/code&gt;&lt;/a&gt;, with the exception of &lt;code&gt;watch_action&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, and &lt;code&gt;shutdown_timeout&lt;/code&gt; (though the &lt;code&gt;force&lt;/code&gt; argument has a different meaning in this state).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0b7696daebe76218b124f7e9803d3116cad592" translate="yes" xml:space="preserve">
          <source>This state allows arbitrary python code to be executed through the condition parameter which is literally evaluated within the state. Please use caution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea86e04decdd5b08a01836bcc7cd1746fd303d3" translate="yes" xml:space="preserve">
          <source>This state allows configuring local Windows Group Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ca8dc04a3665dd627dfba9cbddb3302106f31f" translate="yes" xml:space="preserve">
          <source>This state allows for grains to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af921b680aec11530f0cc416968e05d8feec810" translate="yes" xml:space="preserve">
          <source>This state allows you to update a system without specifying a specific update to apply. All matching updates will be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac2469da45c0ae4ef8aea98142e24823ba89ae5" translate="yes" xml:space="preserve">
          <source>This state checks the mon daemons are in quorum. It does not alter the cluster but can be used in formula as a dependency for many cluster operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0d2e5a8ba42ce663a74850b980d6445609f9c5" translate="yes" xml:space="preserve">
          <source>This state creates a private key then requests a certificate signed by ca according to the www policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecd948e9a5d198aec1303c31f249992ae210ca1" translate="yes" xml:space="preserve">
          <source>This state creates the CA key, certificate and signing policy. It also publishes the certificate to the mine where it can be easily retrieved by other minions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2aaf14e9466fb908a01d5d13aaf2650868ec03" translate="yes" xml:space="preserve">
          <source>This state does not enforce the existence of the named container, it just freezes the container if it is running. To ensure that the named container exists, use &lt;a href=&quot;#salt.states.lxc.present&quot;&gt;&lt;code&gt;lxc.present&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb1ebf7b51b161fd0b255d69f2acd605e884192" translate="yes" xml:space="preserve">
          <source>This state does not enforce the existence of the named container, it just starts the container if it is not running. To ensure that the named container exists, use &lt;a href=&quot;#salt.states.lxc.present&quot;&gt;&lt;code&gt;lxc.present&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa49e3dd1a4fa847d732e746e36822932d256fb" translate="yes" xml:space="preserve">
          <source>This state does not enforce the existence of the named container, it just stops the container if it running or frozen. To ensure that the named container exists, use &lt;a href=&quot;#salt.states.lxc.present&quot;&gt;&lt;code&gt;lxc.present&lt;/code&gt;&lt;/a&gt;, or use the &lt;a href=&quot;#salt.states.lxc.absent&quot;&gt;&lt;code&gt;lxc.absent&lt;/code&gt;&lt;/a&gt; state to ensure that the container does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faa2e0419f6d9c7a2c116bea4e1c035ad2f842e" translate="yes" xml:space="preserve">
          <source>This state does not install any patches. It only compares the running kernel version number to other kernel versions also installed in the system. If the running version is not the latest one installed, this state will reboot the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83cf0ffa187ed62190f4b1691616a5e2d5af6e3" translate="yes" xml:space="preserve">
          <source>This state downloads artifacts from artifactory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5916d0c71c8367dc4d50e4e1743259429ed5984f" translate="yes" xml:space="preserve">
          <source>This state exists to support special handling of the &lt;code&gt;watch&lt;/code&gt;&lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/requisites.html#requisites&quot;&gt;requisite&lt;/a&gt;. It should not be called directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829661ed170df91060b7818dafcef4be076081f7" translate="yes" xml:space="preserve">
          <source>This state function has been disabled, as it did not conform to design guidelines. Specifically, due to the fact that &lt;a href=&quot;../../modules/all/salt.modules.lxc#salt.modules.lxc.set_password&quot;&gt;&lt;code&gt;lxc.set_password&lt;/code&gt;&lt;/a&gt; uses &lt;code&gt;chpasswd(8)&lt;/code&gt; to set the password, there was no method to make this action idempotent (in other words, the password would be changed every time). This makes this state redundant, since the following state will do the same thing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921a10cddfb59e8140906f5b8f40e6e76e18284f" translate="yes" xml:space="preserve">
          <source>This state is intended for use from the Salt Master. It provides access to sending commands down to minions as well as access to executing master-side modules. These state functions wrap Salt's &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/clients/index.html#python-api&quot;&gt;Python API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf30b4561882ef66706ef3888f378d0171705de" translate="yes" xml:space="preserve">
          <source>This state is not able to grant permissions for the user. See &lt;a href=&quot;salt.states.mysql_grants#module-salt.states.mysql_grants&quot;&gt;&lt;code&gt;salt.states.mysql_grants&lt;/code&gt;&lt;/a&gt; for further instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b952c6b385fb3f6a8ff81d70b23a5cfeddc52e" translate="yes" xml:space="preserve">
          <source>This state is not able to set password for the permission from the specified host. See &lt;a href=&quot;salt.states.mysql_user#module-salt.states.mysql_user&quot;&gt;&lt;code&gt;salt.states.mysql_user&lt;/code&gt;&lt;/a&gt; for further instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef78fdcb8e10ac6d561769a89235d4053834eb4" translate="yes" xml:space="preserve">
          <source>This state is only available on minions which use &lt;a href=&quot;https://freedesktop.org/wiki/Software/systemd/&quot;&gt;systemd&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9e91f11d39f6efc89753210e9942919aca5c2c" translate="yes" xml:space="preserve">
          <source>This state is unsuitable for setting parameters that appear more than once in an LXC config file, or parameters which must appear in a certain order (such as when configuring more than one network interface).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0755b34b933f16bd9ab30f4392e9e51de9a890c0" translate="yes" xml:space="preserve">
          <source>This state is used to ensure presence of splunk searches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a4cbab4a7b945571b0fe3c369aa69e87e85787" translate="yes" xml:space="preserve">
          <source>This state is used to ensure presence of users in splunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634d0472fe9edab4057baf979deaa5fa06c51004" translate="yes" xml:space="preserve">
          <source>This state is used to ensure presence of users in the Organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a6d54fd6919417b4b596c84f87888027b8c868" translate="yes" xml:space="preserve">
          <source>This state is used to manage NTP servers. Currently only Windows is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9fde5f58da7aeaf5a86de5ae118fd8a3552cb0" translate="yes" xml:space="preserve">
          <source>This state is used to manage system information such as the computer name and description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df59216d39ac8ad2c9686b8d9a2c91b845aedb21" translate="yes" xml:space="preserve">
          <source>This state is useful for creating events on the PagerDuty service during state runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a820e73f2c9c362d24d2e9d540a97dc8a9731eb" translate="yes" xml:space="preserve">
          <source>This state is useful for creating events on the VictorOps service during state runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b1c797771da53be121002fab241b8ecc45433c" translate="yes" xml:space="preserve">
          <source>This state is useful for creating or closing alerts in OpsGenie during state runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914e6de90a686f37dc77d6687b8e818d40e6d2ba" translate="yes" xml:space="preserve">
          <source>This state is useful for firing messages during state runs, using the SMTP protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb92721e1c6dea1895832b22dcfd9581d4685e9" translate="yes" xml:space="preserve">
          <source>This state is useful for firing messages during state runs, using the XMPP protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af65ea8635075ef80a875421c36cd064483c6ea" translate="yes" xml:space="preserve">
          <source>This state is useful for sending messages to Hipchat during state runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254588146852e12a2c0ab21cbaf8dfe9bd5382b6" translate="yes" xml:space="preserve">
          <source>This state is useful for sending messages to PushOver during state runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ef8ac0661f9ed29d00391eca80aee889b16a39" translate="yes" xml:space="preserve">
          <source>This state is useful for sending messages to Slack during state runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36377edd78547b565ea52020d7b460ace2dc48e6" translate="yes" xml:space="preserve">
          <source>This state is useful for sending messages to Teams during state runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a08f1db667ffda2705e159bbb2169f4198a3843" translate="yes" xml:space="preserve">
          <source>This state is useful for trigging events in IFTTT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fa1ab310316451851940b2dceea64558475789" translate="yes" xml:space="preserve">
          <source>This state manages software package repositories. Currently, &lt;a href=&quot;../../modules/all/salt.modules.yumpkg#module-salt.modules.yumpkg&quot;&gt;&lt;code&gt;yum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../modules/all/salt.modules.aptpkg#module-salt.modules.aptpkg&quot;&gt;&lt;code&gt;apt&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;zypper&lt;/code&gt; repositories are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cb1978ae394612a9d7b614fefc9cbb123854a3" translate="yes" xml:space="preserve">
          <source>This state module allows you to modify system tuned parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d5f7e7e2e67dd5e622fdfd4fe2d6689c52f277" translate="yes" xml:space="preserve">
          <source>This state module depends on the 'zenoss' Salt execution module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7afead5961d353d03c55d796c742804e0b7eb4" translate="yes" xml:space="preserve">
          <source>This state module is beta. It might be changed later to include more or less automation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8f8ba86e77678780b5ac7e2d86bc6a844c5053" translate="yes" xml:space="preserve">
          <source>This state module is beta; the API is subject to change and no promise as to performance or functionality is yet present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f83c6c3eb9434c02375808831d9a7fe3d5692fe" translate="yes" xml:space="preserve">
          <source>This state module is designed to give extreme flexibility in the control over XPATH values on the PANOS device. It exposes the core XML API commands and allows state modules to chain complex XPATH commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c461955e59427393fbb0ecdd96de16e5f50438" translate="yes" xml:space="preserve">
          <source>This state module relies on the dracr.py execution module, which runs racadm commands on the chassis, blades, etc. The racadm command runs very slowly and, depending on your state, the proxy minion return might timeout before the racadm commands have completed. If you are repeatedly seeing minions timeout after state calls, please use the &lt;code&gt;-t&lt;/code&gt; CLI argument to increase the timeout variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c5dfcf87f92e39607bcbc4dc8ef918f14d79e7" translate="yes" xml:space="preserve">
          <source>This state module requires a pillar for authentication with Server Density To install a v1 agent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9484644c8a95368bcdb76fa2765708965ff58bdf" translate="yes" xml:space="preserve">
          <source>This state module requires a pillar to specify the location of your uptime install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745c06c8402e06c3c938afce60d5417d5a9896b0" translate="yes" xml:space="preserve">
          <source>This state module supports setting and removing keys from etcd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92584de3b5bf2796b0499489428313c6e95458d1" translate="yes" xml:space="preserve">
          <source>This state module was designed to handle connections to a Cisco Unified Computing System (UCS) chassis. This module relies on the CIMC proxy module to interface with the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f3a4f6dfb1c1d909fb245a7f9d81233f48e6e1" translate="yes" xml:space="preserve">
          <source>This state module was designed to handle connections to a Palo Alto based firewall. This module relies on the Palo Alto proxy module to interface with the devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d2d910b63f44c76b4368b730825626b823b973" translate="yes" xml:space="preserve">
          <source>This state module was written to be used in conjunction with Salt's &lt;a href=&quot;../../proxy/all/salt.proxy.esxi#module-salt.proxy.esxi&quot;&gt;&lt;code&gt;ESXi Proxy Minion&lt;/code&gt;&lt;/a&gt;. For a tutorial on how to use Salt's ESXi Proxy Minion, please refer to the &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/tutorials/esxi_proxy_minion.html#tutorial-esxi-proxy&quot;&gt;ESXi Proxy Minion Tutorial&lt;/a&gt; for configuration examples, dependency installation instructions, how to run remote execution functions against ESXi hosts via a Salt Proxy Minion, and a larger state example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f93532d0083febaf79fdbcce374d89c33ecd17" translate="yes" xml:space="preserve">
          <source>This state now support nested grains and complex values. It is also more conservative: if a grain has a value that is a list or a dict, it will not be removed unless the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfd533161e0947e4684313a673d25b47d38208c" translate="yes" xml:space="preserve">
          <source>This state only copies files from one location on a minion to another location on the same minion. For copying files from the master, use a &lt;a href=&quot;#salt.states.file.managed&quot;&gt;&lt;code&gt;file.managed&lt;/code&gt;&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ea5c6e1f20d04d708318adfcced1875fc6a617" translate="yes" xml:space="preserve">
          <source>This state only installs the kernel, but does not activate it. The new kernel should become active at the next reboot. See &lt;a href=&quot;../../modules/all/salt.modules.kernelpkg_linux_yum#salt.modules.kernelpkg_linux_yum.needs_reboot&quot;&gt;&lt;code&gt;kernelpkg.needs_reboot&lt;/code&gt;&lt;/a&gt; for details on how to detect this condition, and &lt;a href=&quot;#salt.states.kernelpkg.latest_active&quot;&gt;&lt;code&gt;latest_active()&lt;/code&gt;&lt;/a&gt; to initiale a reboot when needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4398216c2cfe91203b8637d37cd7a30eddf7ecc0" translate="yes" xml:space="preserve">
          <source>This state only loads on minions that have the &lt;code&gt;roles: salt-master&lt;/code&gt; grain set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93230598505889356da514b70ead69b59404ae34" translate="yes" xml:space="preserve">
          <source>This state replaces &lt;code&gt;setvalue()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e31abc36f7cdf0f29d1ce55792a79d0a898fc2" translate="yes" xml:space="preserve">
          <source>This state requires a configuration profile to be configured in the minion config, minion pillar, or master config. The module will use the 'grafana' key by default, if defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10296254bb63cc8a927bf26250251239b0d9445a" translate="yes" xml:space="preserve">
          <source>This state requires the &lt;code&gt;augeas&lt;/code&gt; Python module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee842707966a7362dbc557510aa9591eb8dd850" translate="yes" xml:space="preserve">
          <source>This state requires the Tomcat Manager webapp to be installed and running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e65ed29605285e81992e9d2eef30d16df6e32e9" translate="yes" xml:space="preserve">
          <source>This state supports all arguments for network and IPAM pool configuration which are available for the release of docker-py installed on the minion. For that reason, the arguments described below in the &lt;a href=&quot;#salt-states-docker-network-present-netconf&quot;&gt;NETWORK CONFIGURATION&lt;/a&gt; and &lt;a href=&quot;#salt-states-docker-network-present-ipam&quot;&gt;IP ADDRESS MANAGEMENT (IPAM)&lt;/a&gt; sections may not accurately reflect what is available on the minion. The &lt;a href=&quot;../../modules/all/salt.modules.dockermod#salt.modules.dockermod.get_client_args&quot;&gt;&lt;code&gt;docker.get_client_args&lt;/code&gt;&lt;/a&gt; function can be used to check the available arguments for the installed version of docker-py (they are found in the &lt;code&gt;network_config&lt;/code&gt; and &lt;code&gt;ipam_config&lt;/code&gt; sections of the return data), but Salt will not prevent a user from attempting to use an argument which is unsupported in the release of Docker which is installed. In those cases, network creation be attempted but will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41108a256c0969c4529099a2022f4c9c67054e1e" translate="yes" xml:space="preserve">
          <source>This state supports networks with either IPv4, or both IPv4 and IPv6. If configuring IPv4, then you can pass the &lt;a href=&quot;#salt-states-docker-network-present-ipam-pool-arguments&quot;&gt;IPAM pool arguments&lt;/a&gt; below as individual arguments. However, if configuring IPv4 and IPv6, the arguments must be passed as a list of dictionaries, in the &lt;code&gt;ipam_pools&lt;/code&gt; argument (click &lt;a href=&quot;#salt-states-docker-network-present-ipam-examples&quot;&gt;here&lt;/a&gt; for some examples). &lt;a href=&quot;http://docker-py.readthedocs.io/en/stable/api.html#docker.types.IPAMPool&quot;&gt;These docs&lt;/a&gt; also have more information on these arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fc5ef2bfda6b6da8b80bce9fb3206e86f48f12" translate="yes" xml:space="preserve">
          <source>This state uses the jboss-cli.sh script from a JBoss or Wildfly installation and parses its output to determine the execution result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddc9d430f33ef28cae43caa87fac78f087c80f7" translate="yes" xml:space="preserve">
          <source>This state will configure the salt proxy settings within /etc/salt/proxy (if /etc/salt/proxy doesn't exists) and start the salt-proxy process (default true), if it isn't already running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05066cb84daba1e432499c9d493d23beb56b2d0a" translate="yes" xml:space="preserve">
          <source>This state will in most cases not be useful in SLS files, but it is useful when writing a state or remote-execution module that needs to make sure that a file at a given URL has been downloaded to the cachedir. One example of this is in the &lt;code&gt;archive.extracted&lt;/code&gt; state:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf869885506a3d1ccb36e40960b72344c634e612" translate="yes" xml:space="preserve">
          <source>This state will instruct all minions to trust certificates signed by our new CA. Using jinja to strip newlines from the text avoids dealing with newlines in the rendered yaml, and the &lt;code&gt;sign_remote_certificate&lt;/code&gt; state will handle properly formatting the text before writing the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f105432b5f52cc32fd4ef717708691b6b6284485" translate="yes" xml:space="preserve">
          <source>This state will pull the image if it is not present. However, if the image needs to be built from a Dockerfile or loaded from a saved image, or if you would like to use requisites to trigger a replacement of the container when the image is updated, then the &lt;code&gt;docker_image.present&lt;/code&gt; state should be used to manage the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae361cf011fa563235f900cedc73005c52b1668" translate="yes" xml:space="preserve">
          <source>This statement returns a string without modification. It can be used to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7053c7b57c1e952f3e3e3004e39617b20baef28b" translate="yes" xml:space="preserve">
          <source>This step performs the following operations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a893c55b470cc0d5cf7c5dc6106a476b2f60b68d" translate="yes" xml:space="preserve">
          <source>This stream is formatted per the Server Sent Events (SSE) spec. Each event is formatted as JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2968e49f912d4305ebbee79f883c17fc4963f3ea" translate="yes" xml:space="preserve">
          <source>This system allows for all of the components to build debs safely in chrooted environments. This also provides a function to generate debian repositories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483d347af5314cd8c97941718d22a8c8793c93f2" translate="yes" xml:space="preserve">
          <source>This system allows for all of the components to build rpms safely in chrooted environments. This also provides a function to generate yum repositories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb424a36a0c742c796ba3a022bc5ec8058278ed" translate="yes" xml:space="preserve">
          <source>This tells salt to lookup an EC2 instance with a tag 'some_tag_name' which has the value 'some_string' and substitute the 'some_instance_attr' attribute of that instance as the resource record value being evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192e5da1e74a24d6755358717f600e41d1881cfd" translate="yes" xml:space="preserve">
          <source>This tests for the file read and write operations Various modes of operations are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d499faee381b383c72c666bcbfd1f41c535ca39c" translate="yes" xml:space="preserve">
          <source>This tests the memory for read and write operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9669b4c5af8388174f950bd109abbd123d9a997" translate="yes" xml:space="preserve">
          <source>This tests the performance of the processor's scheduler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5354c035d0e921dae8ba8511c2a948cc56819aa" translate="yes" xml:space="preserve">
          <source>This thorium state is used to track the status beacon events and keep track of the active status of minions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e8e67e2d935b3914a2c93671092e778e4d9bf2" translate="yes" xml:space="preserve">
          <source>This uses the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4f82135ce61609c01842325c61847272bbb50e" translate="yes" xml:space="preserve">
          <source>This value can be either a single string, a multiline YAML string or a list of strings. If a list of strings, then the strings will be joined together with newlines in the resulting file. For example, the below two example states would result in identical file contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ebc984e16010a324e11942ae4cc794c7840e2f" translate="yes" xml:space="preserve">
          <source>This value will be used in two ways: Firstly, it will be the repo ID, as seen in the entry in square brackets (e.g. &lt;code&gt;[foo]&lt;/code&gt;) for a given repo. Secondly, it will be the name of the file as stored in /etc/yum.repos.d (e.g. &lt;code&gt;/etc/yum.repos.d/foo.conf&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91363cf54c4cf7919cb4e1245918bf83ece4172c" translate="yes" xml:space="preserve">
          <source>This was designed to be run as a build job in Jenkins or similar tool. You can provide Grains/Pillar input using either the config file or command line arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fce79ab5ece0ffa7692d354532606e23a8ba44c" translate="yes" xml:space="preserve">
          <source>This was the original outputter used by Salt before the outputter system was developed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d676b2791840e2f6f59ea5ab6fa2296dc2d3a819" translate="yes" xml:space="preserve">
          <source>This was very difficult to figure out. VMware's PyVmomi documentation at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7310a16de9a14daad204824e73fb1f24336a029b" translate="yes" xml:space="preserve">
          <source>This will &lt;em&gt;not&lt;/em&gt; fast-forward the git_pillar cachedir on the master. All it does is perform a &lt;code&gt;git fetch&lt;/code&gt;. If this runner is executed with &lt;code&gt;-l debug&lt;/code&gt;, you may see a log message that says that the repo is up-to-date. Keep in mind that Salt automatically fetches git_pillar repos roughly every 60 seconds (or whatever &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-loop_interval&quot;&gt;&lt;code&gt;loop_interval&lt;/code&gt;&lt;/a&gt; is set to). So, it is possible that the repo was fetched automatically in the time between when changes were pushed to the repo, and when this runner was executed. When in doubt, simply refresh pillar data using &lt;a href=&quot;../../modules/all/salt.modules.saltutil#salt.modules.saltutil.refresh_pillar&quot;&gt;&lt;code&gt;saltutil.refresh_pillar&lt;/code&gt;&lt;/a&gt; and then use &lt;a href=&quot;../../modules/all/salt.modules.pillar#salt.modules.pillar.item&quot;&gt;&lt;code&gt;pillar.item&lt;/code&gt;&lt;/a&gt; to check if the pillar data has changed as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39efbd69f9081725828a0b9c95502145259bbc7b" translate="yes" xml:space="preserve">
          <source>This will allow the bot user to be fully authenticated before joining any channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7e3fae5875c48788f2623083ed2d52b214598f" translate="yes" xml:space="preserve">
          <source>This will authenticate Fred via Django and allow him to run any execution module and all runners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96ce70bd7c33ed4cbd2fb974a671fa82c52abae" translate="yes" xml:space="preserve">
          <source>This will cause the following URL to actually be called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f1eb13a90234f10191f4b1d776ff11ab7e3072" translate="yes" xml:space="preserve">
          <source>This will decrypt on the minion side, so the specified renderer must be set up on the minion for this to work. Alternatively, pillar data can be decrypted master-side. For more information, see the &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/pillar/index.html#pillar-encryption&quot;&gt;Pillar Encryption&lt;/a&gt; documentation. Pillar data that is decrypted master-side, is not decrypted until the end of pillar compilation though, so minion-side decryption will be necessary if the encrypted pillar data must be made available in an decrypted state pillar/ext_pillar rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539805c99addba18b2931257cb46e096f1e9dd26" translate="yes" xml:space="preserve">
          <source>This will delete a key from etcd. If the key exists then changes will be returned and thus you can watch for changes on the state, if the key does not exist then no changes will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40ef972a6cecec251036ae021d6f7a7189a9543" translate="yes" xml:space="preserve">
          <source>This will enforce the exact match of the rule. For example, if the rule is currently configured with the log-end option, but this option is not specified in the state method, it will be removed and reset to the system default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104b6d7138e6d6c77ebcd33d269df09fede018f2" translate="yes" xml:space="preserve">
          <source>This will ensure that a host with the provided name exists. This will try to ensure that the state of the host matches the given data If the host is not found then one will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ba6bb46e42f062c1fc306562eabd67231623a6" translate="yes" xml:space="preserve">
          <source>This will ensure that the scheduled command does not run within the range specified. The range parameter must be a dictionary with the date strings using the dateutil format. Requires python-dateutil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cb8770f36fe6f688d992f0632cde1821e72152" translate="yes" xml:space="preserve">
          <source>This will install the latest Django version greater than 1.6 but less than 1.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebaf61f5cd9b65d5fa62b29f77eac235861096c" translate="yes" xml:space="preserve">
          <source>This will not remove the application pool used by the site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d8f0bb1a6973d000d0d3e94dd233b9a34bf15d" translate="yes" xml:space="preserve">
          <source>This will only affect new processes that aren't launched by services. To apply changes to the path to services, the host must be restarted. The &lt;code&gt;salt-minion&lt;/code&gt;, if running as a service, will not see changes to the environment until the system is restarted. See &lt;a href=&quot;https://support.microsoft.com/en-us/help/821761/changes-that-you-make-to-environment-variables-do-not-affect-services&quot;&gt;MSDN Documentation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e89fceeaeb085dafb11e2b11f4a20055a328117" translate="yes" xml:space="preserve">
          <source>This will only be functional on Debian-based operating systems (Ubuntu, Mint, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000f6a7cd054b0a916069f3a2c15311a89299149" translate="yes" xml:space="preserve">
          <source>This will only be functional on operating systems that support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cb9c95c00b9e5bb5e0cecdd6e37c584c3159d8" translate="yes" xml:space="preserve">
          <source>This will only create empty sections. To also create options, use options_present state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32287fd90f80fd2f6870807a34fae28164765b39" translate="yes" xml:space="preserve">
          <source>This will only effect new processes and windows. Services will not see the change until the system restarts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c0bd94485d259e19d338e1816e842e51aaad9d" translate="yes" xml:space="preserve">
          <source>This will only operate on enabled backends (those configured in &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-fileserver_backend&quot;&gt;&lt;code&gt;fileserver_backend&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3a3a95f59bf314ef01ee49bcc491f3dc2752c2" translate="yes" xml:space="preserve">
          <source>This will return a dictionary containing the state's return data, including a &lt;code&gt;result&lt;/code&gt; key which will state whether or not the state was successful. Note that this will not catch exceptions, so it is best used within a try/except.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0e8b861fea5dbf33923e3118edd812d09907ab" translate="yes" xml:space="preserve">
          <source>This will schedule a job to run once on the specified date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180dc3ce0a28901bc4660333f5433d346fd028c7" translate="yes" xml:space="preserve">
          <source>This will schedule the command within the range specified. The range parameter must be a dictionary with the date strings using the dateutil format. Requires python-dateutil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f356de36151fb819ed5e6bdb13f2c491febebb" translate="yes" xml:space="preserve">
          <source>This will schedule the job at the specified time(s) using the crontab format. Requires python-croniter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ac4070f883a767ee6c15d06ccb01be1dd27cc7" translate="yes" xml:space="preserve">
          <source>This will schedule the job at the specified time(s). The when parameter must be a single value or a dictionary with the date string(s) using the dateutil format. Requires python-dateutil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c22033ed259fc6f72d0b06a36189c6973af00d9" translate="yes" xml:space="preserve">
          <source>This will set a value to a key in etcd. Changes will be returned if the key has been created or the value of the key has been updated. This means you can watch these states for changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7e48d475ed4ec680d89bafa4e0f2838ab87d81" translate="yes" xml:space="preserve">
          <source>This will set the first entry in /etc/hosts to localhost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4aa5980e948a2aff4dae6bda3adb2966728505" translate="yes" xml:space="preserve">
          <source>This will set the version value to 2015.5.2 in the SOFTWARESalt key in the HKEY_LOCAL_MACHINE hive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9102816ef43527a0c1a363c7e6470c0d91020a85" translate="yes" xml:space="preserve">
          <source>This will strip comments from your config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677628dd7acf286827c8523fc6ad7105ff81a0c3" translate="yes" xml:space="preserve">
          <source>This works for all types of import statements; &lt;code&gt;import X&lt;/code&gt;, &lt;code&gt;from X import Y&lt;/code&gt;, and &lt;code&gt;from X import Y as Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df49202554ac44046928ed540f3ade8020b00315" translate="yes" xml:space="preserve">
          <source>This works on any platform, regardless if they have or don't have native capabilities to confirming a commit. However, please be &lt;em&gt;very&lt;/em&gt; cautious when using this feature: on Junos (as it is the only NAPALM core platform supporting this natively) it executes a commit confirmed as you would do from the command line. All the other platforms don't have this capability natively, therefore the revert is done via Salt. That means, your device needs to be reachable at the moment when Salt will attempt to revert your changes. Be cautious when pushing configuration changes that would prevent you reach the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d953a98d7cc9b124a9a3853a908d8cd31900e3d" translate="yes" xml:space="preserve">
          <source>This would authenticate users against a file of the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec71f646c60bcb50683dfdbec5a6e246ef3b303" translate="yes" xml:space="preserve">
          <source>This would cause &lt;strong&gt;reclass&lt;/strong&gt; to read the inventory from YAML files in &lt;code&gt;/srv/salt/nodes&lt;/code&gt; and &lt;code&gt;/srv/salt/classes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9d96896bef741b386ce93ec44f81de9d48ba55" translate="yes" xml:space="preserve">
          <source>This would have cloned the HEAD of that repo (since a &lt;code&gt;rev&lt;/code&gt; wasn't specified), and because &lt;code&gt;branch&lt;/code&gt; is not specified, the branch in the local clone at &lt;code&gt;/var/www/foo&lt;/code&gt; would be whatever the default branch is on the remote repository (usually &lt;code&gt;master&lt;/code&gt;, but not always). Now, assume that it becomes necessary to switch this checkout to the &lt;code&gt;dev&lt;/code&gt; branch. This would require &lt;code&gt;rev&lt;/code&gt; to be set, and probably would also require &lt;code&gt;force_reset&lt;/code&gt; to be enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb19570867b9162363e3d3a10ee65ffb07accf9" translate="yes" xml:space="preserve">
          <source>This would populate &lt;code&gt;/etc/motd&lt;/code&gt; file with the contents of the &lt;code&gt;motd&lt;/code&gt; grain. The &lt;code&gt;motd&lt;/code&gt; grain is not a default grain, and would need to be set prior to running the state:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d1836907135566770c382ea962089eba784737" translate="yes" xml:space="preserve">
          <source>This would populate &lt;code&gt;/home/deployer/.ssh/id_rsa&lt;/code&gt; with the contents of &lt;code&gt;pillar['userdata']['deployer']['id_rsa']&lt;/code&gt;. An example of this pillar setup would be like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe631262119c86824189d0e1632f886d9d1f8d7" translate="yes" xml:space="preserve">
          <source>This would return pillar data that would look like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf94d25d3c254180ce130866a390085e910affb" translate="yes" xml:space="preserve">
          <source>This would run append text to /etc/motd using the file.append module, and will create two snapshots, pre and post with the associated metadata. The jid will be available as salt_jid in the userdata of the snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d275ccddd75352b234001d05fc38da339909e0b" translate="yes" xml:space="preserve">
          <source>Those who wish to use junos-eznc (PyEZ) version &amp;gt;= 2.1.0, must use the latest salt code from github until the next release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad6922aa491876f25a3daa53ae07d10b49a857b" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;service.stop&lt;/code&gt; will unload a service in macOS, the service will start on next boot unless it is disabled. Use &lt;code&gt;service.disable&lt;/code&gt; to disable the service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39af736b8292dcf424c01e725fd72e0758a51278" translate="yes" xml:space="preserve">
          <source>Though YAML syntax may seem daunting and terse at first, there are only three very simple rules to remember when writing YAML for SLS files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3bc4f0a563a2ce421b7a21590e7e6d311f5487" translate="yes" xml:space="preserve">
          <source>Throw exception if ping fails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76031ddf92450ba52c1e3945097079807a9065c2" translate="yes" xml:space="preserve">
          <source>Thursday</source>
          <target state="translated">Thursday</target>
        </trans-unit>
        <trans-unit id="b5d6ba578ca48fa79b8e3ffb1ad18196a280ec08" translate="yes" xml:space="preserve">
          <source>Thus subsequent results overwrite previous ones when they collide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d3963506c82a32de70da6cf6075ce26ac75e74" translate="yes" xml:space="preserve">
          <source>Tibor Benke &amp;lt;&lt;a href=&quot;mailto:btibi%40sch.bme.hu&quot;&gt;btibi@sch.bme.hu&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c453a94b19d36c47e0baac7f75d0d88a2b6f2528" translate="yes" xml:space="preserve">
          <source>Time at which Automatic Updates installs or uninstalls updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cdcf5e0c3f90894f53dc4bec30227e69f899e2" translate="yes" xml:space="preserve">
          <source>Time in seconds to wait for the device to respond. Default: 60 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c9b81c886fc3da03954be0a7fcc0397ee117fd" translate="yes" xml:space="preserve">
          <source>Time precision to use ('s', 'm', or 'u')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968b3f8a02bb2a3f5e74927e5142fb9a78d574a7" translate="yes" xml:space="preserve">
          <source>Time to skip should be specified as date string format, default value is %Y-%m-%dT%H:%M:%S.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81f92e623ca0a31bf99bc74cff9a6f53875cf84" translate="yes" xml:space="preserve">
          <source>Time to wait until jboss is back in running state. Default timeout is 60s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c45de0fe64ac43c72a798c67faaadadfaa1b90" translate="yes" xml:space="preserve">
          <source>Timeout</source>
          <target state="translated">Timeout</target>
        </trans-unit>
        <trans-unit id="2e637e4c6d82377b5f1f1d84139d58530e8c7918" translate="yes" xml:space="preserve">
          <source>Timeout for HTTP request to the Tomcat Manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d751dca2eefab6c2d339f8a607d31ee80dba71" translate="yes" xml:space="preserve">
          <source>Timeout for HTTP requests to the Tomcat Manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3e19773c88f9bfdcd5935bdd2da1d217baea7a" translate="yes" xml:space="preserve">
          <source>Timeout for graceful shutdown of the container. If this timeout is exceeded, the container will be killed. If this value is not passed, then the container's configured &lt;code&gt;stop_timeout&lt;/code&gt; will be observed. If &lt;code&gt;stop_timeout&lt;/code&gt; was also unset on the container, then a timeout of 10 seconds will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2dc384bebbb54e27229b91e03afc7ed09c82b4" translate="yes" xml:space="preserve">
          <source>Timeout in seconds after which the container will be killed (if it has not yet gracefully shut down)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929a30e04bb1de52cb64be5fb9c1a0815e367dd2" translate="yes" xml:space="preserve">
          <source>Timeout in seconds for the Docker client. This is not a timeout for the state, but for receiving a response from the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b943f02a1a6724c9e7478e11d12e2d0347890380" translate="yes" xml:space="preserve">
          <source>Timeout in seconds for the Docker client. This is not a timeout for this function, but for receiving a response from the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605d86c175d80fdf21e6eef7a8161dbfc3f34a77" translate="yes" xml:space="preserve">
          <source>Timeout in seconds to wait for the prompt for inputting the passphrase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a293ccf82bcc6c5061648451f1856425a49deaf" translate="yes" xml:space="preserve">
          <source>Timeout to stop the container, in seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02256adee0d52cbf95d31d7b319ca5123ea14590" translate="yes" xml:space="preserve">
          <source>Timeout waiting for result from celery, see celery AsyncResult.get documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="07e1aefe3a33db756563308c777f1bbdf6faa223" translate="yes" xml:space="preserve">
          <source>Timestamp of the alert in seconds since epoch. Defaults to the time the alert is received at VictorOps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b03a2d0bd7623d821f630af3af30b75c1d59d82" translate="yes" xml:space="preserve">
          <source>Timezone for the org (one of: &quot;browser&quot;, &quot;utc&quot;, or &quot;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981a945c1ee786701eb45d7a3fc226852fad91aa" translate="yes" xml:space="preserve">
          <source>Timezone in unix format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54dab550c4472a145fb6747d6d7176c04f74e311" translate="yes" xml:space="preserve">
          <source>To add an ASAM platform using the specified ASAM platform set on the Novell Fan-Out Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05d408eeb07ce9ac75f473c2b4b310b35d9dc1b" translate="yes" xml:space="preserve">
          <source>To add extra arguments to the &lt;code&gt;yum upgrade&lt;/code&gt; command, pass them as key word arguments. For arguments without assignments, pass &lt;code&gt;True&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b539dee8d08867f9244c3f1e725b721ee2f0f72d" translate="yes" xml:space="preserve">
          <source>To apply a config that already exists on the the system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474349dfa5b13caa72638f777305af51a540d8ad" translate="yes" xml:space="preserve">
          <source>To apply all configured states, simply run &lt;code&gt;state.apply&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3e3aefe6f839879e2b4b8e2a9536470c13858e" translate="yes" xml:space="preserve">
          <source>To apply individual SLS files, pass them as a comma-separated list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7450ae5f168a556ce0dcbae969acf53deeb43009" translate="yes" xml:space="preserve">
          <source>To apply the renderer on a file-by-file basis add the following line to the top of any pillar with gpg data in it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e01d702cedee517806dd50a0be899499c619a3" translate="yes" xml:space="preserve">
          <source>To assign a service to a specific zone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a647d2907c000dfe38e400f97525e6a5b45bae" translate="yes" xml:space="preserve">
          <source>To avoid committing the configuration, set the argument &lt;code&gt;test&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; (or via the CLI argument &lt;code&gt;test=True&lt;/code&gt;) and will discard (dry run).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644038101cccfbf57663dedabbf1839bd9976e06" translate="yes" xml:space="preserve">
          <source>To avoid committing the configuration, set the argument &lt;code&gt;test&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; and will discard (dry run).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a24680022dc99578567aba08e59285c9f83f33b" translate="yes" xml:space="preserve">
          <source>To avoid the hassle of creating an indented multiline YAML string, the &lt;a href=&quot;../../pillar/all/salt.pillar.file_tree#module-salt.pillar.file_tree&quot;&gt;&lt;code&gt;file_tree external pillar&lt;/code&gt;&lt;/a&gt; can be used instead. However, this will not work for binary files in Salt releases before 2015.8.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5936e6babdf004f8263fe5b4a8aa337407bf296a" translate="yes" xml:space="preserve">
          <source>To avoid these longer waiting periods, SaltStack recommends moving the correct password to the top of the list and restarting the proxy minion at your earliest convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4573f266c183751bf2407ec032fc72b44ca5ea9" translate="yes" xml:space="preserve">
          <source>To be able to load configuration on network devices, it requires &lt;a href=&quot;https://napalm.readthedocs.io&quot;&gt;NAPALM&lt;/a&gt; library to be installed: &lt;code&gt;pip install napalm&lt;/code&gt;. Please check &lt;a href=&quot;https://napalm.readthedocs.io/en/latest/installation.html&quot;&gt;Installation&lt;/a&gt; for complete details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d407751279f643dffb090a5e1a376c55ca40be03" translate="yes" xml:space="preserve">
          <source>To be able to use this module you need to enable to NX-API on your switch, by executing &lt;code&gt;feature nxapi&lt;/code&gt; in configuration mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08dbd4319d51711c72d6d8558ebe2af23eccc30f" translate="yes" xml:space="preserve">
          <source>To build map data using pyobjects we provide a class named Map that you use to build your own classes with inner classes for each set of values for the different grain matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9513004693672663a7e2cd1b4544fb113a34b0e6" translate="yes" xml:space="preserve">
          <source>To cache a config script to the system from the master and compile it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefb5f74b86d75485b7dc8c1bd91f581a8d1944c" translate="yes" xml:space="preserve">
          <source>To cache a configuration from the master and apply it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0817f513054d74e6a8fa8bce31a114316fd2eb90" translate="yes" xml:space="preserve">
          <source>To check if a given minion has &lt;a href=&quot;http://tukaani.org/xz/&quot;&gt;xz&lt;/a&gt;, the following Salt command can be run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af7ff50549d5bea8eec4d4c41e88a96383e6666" translate="yes" xml:space="preserve">
          <source>To check that NX-API is properly enabled, execute &lt;code&gt;show nxapi&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513aee60c191f4a87a0d9a61d2325e39373f2e23" translate="yes" xml:space="preserve">
          <source>To cleanly shutdown the zone use the shutdown function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c942cb33d836379e4b66cc58a5680fb64d0b23" translate="yes" xml:space="preserve">
          <source>To clear OpenIdConnectProviderARNs pass '[]'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862af1c53d958e8260278a5fdbbd1074fe86f3d9" translate="yes" xml:space="preserve">
          <source>To clear SupportedLoginProviders pass '{}'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5617b94413cc1cc7ce95d9ec12a85a3bfbbf6134" translate="yes" xml:space="preserve">
          <source>To clear stale refs the git CLI utility must also be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273edf2a71969ac8bd4d06476010b6d7d7c12edf" translate="yes" xml:space="preserve">
          <source>To commit the changes loaded in the candidate configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedfa8fa9e2bd43aae7ab55c000211eae4002cde" translate="yes" xml:space="preserve">
          <source>To compile a config from a script that already exists on the system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9b0e986532674641eecf6d9a021f86d97cb061" translate="yes" xml:space="preserve">
          <source>To configure pillar data for each host, this external pillar will recursively iterate over &lt;code&gt;root_dir&lt;/code&gt;/hosts/&lt;code&gt;id&lt;/code&gt; (where &lt;code&gt;id&lt;/code&gt; is a minion ID), and compile pillar data with each subdirectory as a dictionary key and each file as a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e868ea0a507e4618cd8a3ac0797694d2642e2070" translate="yes" xml:space="preserve">
          <source>To configure the proxy minion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8485ea1c982ceb0502580192a4c0746a0573d246" translate="yes" xml:space="preserve">
          <source>To configure this beacon to use the defaults, set up an empty dict for it in the minion config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914ceb2025b816828167feb8988364a18c36d376" translate="yes" xml:space="preserve">
          <source>To configure this integration, follow these steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51734660a0baf01e735b390bd1475e534852d053" translate="yes" xml:space="preserve">
          <source>To configure this module, set &lt;code&gt;digicert&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; in the &lt;code&gt;ext_pillar&lt;/code&gt; section of your &lt;code&gt;master&lt;/code&gt; configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3165e49dffa967c3264d17e2feabe3b7846a227f" translate="yes" xml:space="preserve">
          <source>To configure this module, set &lt;code&gt;venafi&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; in the &lt;code&gt;ext_pillar&lt;/code&gt; section of your &lt;code&gt;master&lt;/code&gt; configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3646d6fc2cb0084b1689db081de4708f63bf63e" translate="yes" xml:space="preserve">
          <source>To confirm the commit, and prevent reverting the changes, you will have to execute the &lt;a href=&quot;#salt.modules.napalm_network.confirm_commit&quot;&gt;&lt;code&gt;net.confirm_commit&lt;/code&gt;&lt;/a&gt; function, using the commit ID returned by this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e487d750a1feaa34be0f806a8bdd645925ed0cc" translate="yes" xml:space="preserve">
          <source>To confirm the commit, and prevent reverting the changes, you will have to execute the &lt;a href=&quot;../../modules/all/salt.modules.napalm_network#salt.modules.napalm_network.confirm_commit&quot;&gt;&lt;code&gt;net.confirm_commit&lt;/code&gt;&lt;/a&gt; function, using the commit ID returned by this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d28fe98d442a23fbc1100d0ca7c5cd06e7e6222" translate="yes" xml:space="preserve">
          <source>To connect VirtualBox Guest Additions via VirtualBox graphical interface press 'Host+D' ('Host' is usually 'Right Ctrl').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31065f93f1b1ffdf49c23fc6a3130aeff6760c2" translate="yes" xml:space="preserve">
          <source>To connect as a user other than root, modify the cloud configuration file usually located at /etc/salt/cloud. For example, add the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ec25e3df1032c60457dc301dd8d0305d2526db" translate="yes" xml:space="preserve">
          <source>To consume the events and eventually react and deploy a configuration changes on the device(s) firing the event, one is able to identify the minion ID, using one of the following alternatives, but not limited to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2204376274d6cd523d1b870c56992d5310be41" translate="yes" xml:space="preserve">
          <source>To create a Host and Cluster Folder under a Datacenter, specify &lt;code&gt;path=&quot;/yourDatacenterName/host/yourFolderName&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc60c01f7a420171cd2ef08864af9f8626b58530" translate="yes" xml:space="preserve">
          <source>To create a Network Folder under a Datacenter, specify &lt;code&gt;path=&quot;/yourDatacenterName/network/yourFolderName&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0188d35e95a7f2fb025fd7ba9102560a93b19b31" translate="yes" xml:space="preserve">
          <source>To create a Redis (cluster mode disabled) replication group, use CacheParameterGroupName=default.redis3.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459fb8468be94402f9600264fee334fd0d5ec18e" translate="yes" xml:space="preserve">
          <source>To create a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38d06100c00485ea9ba13222e215efcf607a848" translate="yes" xml:space="preserve">
          <source>To create a Storage Folder under a Datacenter, specify &lt;code&gt;path=&quot;/yourDatacenterName/datastore/yourFolderName&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79554d57808da61f4243943776852d27019db879" translate="yes" xml:space="preserve">
          <source>To create a VM and Template Folder under a Datacenter, specify &lt;code&gt;path=&quot;/yourDatacenterName/vm/yourFolderName&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26ceaba700a0c1c5eee3132812a982ba3a860c7" translate="yes" xml:space="preserve">
          <source>To create a branch based on something other than HEAD, pass the name of the revision as &lt;code&gt;opts&lt;/code&gt;. If the revision is in the format &lt;code&gt;remotename/branch&lt;/code&gt;, then this will also set the remote tracking branch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef41dd0ec7481a3b2ef74f9ba7abf2d159457e1f" translate="yes" xml:space="preserve">
          <source>To create a single VM in the VMware environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3baf949011d3118dcf743548c48548b6a55eea1" translate="yes" xml:space="preserve">
          <source>To create a user within MySQL, execute the following statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12478a17f41ff1de24d65896f51dcb18f03efef" translate="yes" xml:space="preserve">
          <source>To decrypt the data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27c095a4590a3bcda15e1db72fc439bae25f0ca" translate="yes" xml:space="preserve">
          <source>To deserialize the message from json:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a0ec68ed11cf9e9f1adaa186a367ba145953e1" translate="yes" xml:space="preserve">
          <source>To destroy a VM from the VMware environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2843f37f172c55e61b948463b92a4d31ef60f5a9" translate="yes" xml:space="preserve">
          <source>To determine the chip to query, use the 'sensors' command and see the leading line in the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4809ebd665fb149bcb61c373677e1ca08ba046" translate="yes" xml:space="preserve">
          <source>To disable a state file from running provide the same name that would be passed in a state.sls call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5030f0f7a774f811c960d4acda83e28e76ef375f" translate="yes" xml:space="preserve">
          <source>To disable networking entirely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6b7ef413bb2b6b3cfa1fbe097a717183e61938" translate="yes" xml:space="preserve">
          <source>To do an immediate power off of a VM using its name. A &lt;code&gt;SIGKILL&lt;/code&gt; is issued to the vmx process of the VM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d110b370c6d6fc44d2ed796ca944be0d3db9782c" translate="yes" xml:space="preserve">
          <source>To do this you just use pip with git to update to the version you want and then restart the service. Here is a sample state file that upgrades salt to the head of the 2015.5 branch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cbac118b8e86d556c4b4c51c38089b730be154" translate="yes" xml:space="preserve">
          <source>To enable a state file from running provide the same name that would be passed in a state.sls call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ae84beed24b6f854e4e8d28f2ed8380132e18e" translate="yes" xml:space="preserve">
          <source>To enable masquerade on a specific zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1c95bd27456091d7166d506aec6e2a4bf4688e" translate="yes" xml:space="preserve">
          <source>To enable minionfs, &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-file_recv&quot;&gt;&lt;code&gt;file_recv&lt;/code&gt;&lt;/a&gt; needs to be set to &lt;code&gt;True&lt;/code&gt; in the master config file (otherwise &lt;a href=&quot;../../modules/all/salt.modules.cp#salt.modules.cp.push&quot;&gt;&lt;code&gt;cp.push&lt;/code&gt;&lt;/a&gt; will not be allowed to push files to the Master), and &lt;code&gt;minionfs&lt;/code&gt; must be added to the &lt;code&gt;fileserver_backends&lt;/code&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce6666183429337a5a5bdea56494a36d5ca0d00" translate="yes" xml:space="preserve">
          <source>To enable these grains that pull from the &lt;a href=&quot;http://169.254.169.254/latest&quot;&gt;http://169.254.169.254/latest&lt;/a&gt; metadata server set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5df96a36a76e6e2a5bdc10754eaa170deaed3ad" translate="yes" xml:space="preserve">
          <source>To enable this cache plugin, the master will need the python client for Consul installed. This can be easily installed with pip:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df44c52a6a85be96777c86fc618284c403484a8" translate="yes" xml:space="preserve">
          <source>To enable this cache plugin, the master will need the python client for Etcd installed. This can be easily installed with pip:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33238f95f0eb24a2ffaa6b301215b43f81e37c01" translate="yes" xml:space="preserve">
          <source>To enable this cache plugin, the master will need the python client for MySQL installed. This can be easily installed with pip:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d895ef022b4dccf55aa1cf8fd64b12c39ff6dfec" translate="yes" xml:space="preserve">
          <source>To enable this engine the master and/or minion will need the following python libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59dea5a844bef6b7587c97e375dac3fc032e4093" translate="yes" xml:space="preserve">
          <source>To enable this queue, the following needs to be configured in your master config. These are the defaults:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abaebc41928c9a9dd9e010923a097ec09d566e6f" translate="yes" xml:space="preserve">
          <source>To enable this returner install kafka-python and enable the following settings in the minion config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0535e2f68aad59ae462d19d134adebabd2250a3" translate="yes" xml:space="preserve">
          <source>To enable this returner the elasticsearch python client must be installed on the desired minions (all or some subset).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcf40d10f71169abb4d11c28e443096c0630def" translate="yes" xml:space="preserve">
          <source>To enable this returner the minion will need</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf370712bf0c3bd5f2befff6424255e37f510c5e" translate="yes" xml:space="preserve">
          <source>To enable this returner the minion will need the Librato client importable on the Python path and the following values configured in the minion or master config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34e29f61bf976a7ca2115ee0bc3d75b658b7e96" translate="yes" xml:space="preserve">
          <source>To enable this returner the minion will need the psycopg2 installed and the following values configured in the master config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fb2c8a5cd4656202ce90ca239615f16e9faadb" translate="yes" xml:space="preserve">
          <source>To enable this returner the minion will need the psycopg2 installed and the following values configured in the minion or master config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab16a660f85f8e2a77b393dbcfa8a88f0ffdc69b" translate="yes" xml:space="preserve">
          <source>To enable this returner the minion will need the python client for influxdb installed and the following values configured in the minion or master config, these are the defaults:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439d9da7c202070fb9d2437ea34edc84aaf86734" translate="yes" xml:space="preserve">
          <source>To enable this returner the minion will need the python client for memcache installed and the following values configured in the minion or master config, these are the defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabe819f99eda1f4568d49b261a25b1e944b99cb" translate="yes" xml:space="preserve">
          <source>To enable this returner the minion will need the python client for redis installed and the following values configured in the minion or master config, these are the defaults:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad78c9637c7c489c02956711f4eb3422c1f4e70a" translate="yes" xml:space="preserve">
          <source>To enable this returner the minion will need the python twilio library installed and the following values configured in the minion or master config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340f6922b420345fe0d60ac852bfd9418950f543" translate="yes" xml:space="preserve">
          <source>To enable this returner, the minion will need the DataStax Python Driver for Apache Cassandra ( &lt;a href=&quot;https://github.com/datastax/python-driver&quot;&gt;https://github.com/datastax/python-driver&lt;/a&gt; ) installed and the following values configured in the minion or master config. The list of cluster IPs must include at least one cassandra node IP address. No assumption or default will be used for the cluster IPs. The cluster IPs will be tried in the order listed. The port, username, and password values shown below will be the assumed defaults if you do not provide values.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f86913d16c34d7ae893c68a35a8600d7127a49" translate="yes" xml:space="preserve">
          <source>To enable this returner, the minion will need the python client for PostgreSQL installed and the following values configured in the minion or master config. These are the defaults:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575f604c62f60e5e1ae5f228c3a225371627a5bb" translate="yes" xml:space="preserve">
          <source>To enable this returner, the minion will need the python client for mysql installed and the following values configured in the minion or master config. These are the defaults:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f993e3ffac355b97cf71e75b4b8fe80c59e7420" translate="yes" xml:space="preserve">
          <source>To enable, add &lt;code&gt;azurefs&lt;/code&gt; to the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-fileserver_backend&quot;&gt;&lt;code&gt;fileserver_backend&lt;/code&gt;&lt;/a&gt; option in the Master config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aefb8febcb5e2e9d4001ae3353f471f5fff383c" translate="yes" xml:space="preserve">
          <source>To enable, add &lt;code&gt;gitfs&lt;/code&gt; to the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-fileserver_backend&quot;&gt;&lt;code&gt;fileserver_backend&lt;/code&gt;&lt;/a&gt; option in the Master config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095b2ab0fef2c6e065e8f2f9cfcfd6972d4032f1" translate="yes" xml:space="preserve">
          <source>To enable, add &lt;code&gt;hgfs&lt;/code&gt; to the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-fileserver_backend&quot;&gt;&lt;code&gt;fileserver_backend&lt;/code&gt;&lt;/a&gt; option in the Master config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3ee07438b31e788dbf581a3e20b56f5b0d127c" translate="yes" xml:space="preserve">
          <source>To encrypt secrets, copy the public key to your local machine and run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2686732ee5eca46133c21ca0f7ddb873cb66168d" translate="yes" xml:space="preserve">
          <source>To ensure a key is present and has permissions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21b4ff215fb9fbff9a9ebae74259e3d3b3ef97f" translate="yes" xml:space="preserve">
          <source>To ensure an NFS export exists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39061295d8e39c7980780e7e39abd4bdd3c9b79" translate="yes" xml:space="preserve">
          <source>To ensure an NFS export is absent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafffd3b1fc268cf5558d96ce4c4131cd67f41c9" translate="yes" xml:space="preserve">
          <source>To execute commands with an ESXi Proxy Minion using the vSphere Execution Module, use the &lt;code&gt;esxi.cmd &amp;lt;vsphere-function-name&amp;gt;&lt;/code&gt; syntax. Both args and kwargs needed for various vsphere execution module functions must be passed through in a kwarg- type manor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b17c6601cfe13fcad4caccf98b84cb15481de4" translate="yes" xml:space="preserve">
          <source>To explicitly specify deeper attributes without attempting to recurse an attribute, convert the list item to a dict with the item of the dict being the child attributes to return. Follow this pattern to return attributes as deep within the object as necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab27834f14d7df00f758386f30197925790eb1b" translate="yes" xml:space="preserve">
          <source>To extend another state use the &lt;code&gt;extend()&lt;/code&gt; function on the name when creating a state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47badbffdfd7acac1b6c9a36efa159662fdb4c15" translate="yes" xml:space="preserve">
          <source>To facilitate this Python's &lt;code&gt;import&lt;/code&gt; statement has been augmented to allow for a special case when working with a Salt state tree. If you specify a Salt url (&lt;code&gt;salt://...&lt;/code&gt;) as the target for importing from then the pyobjects renderer will take care of fetching the file for you, parsing it with all of the pyobjects features available and then place the requested objects in the global scope of the template being rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422cb148027ad579794eb28e7c716660011b3d66" translate="yes" xml:space="preserve">
          <source>To facilitate this in Pepa we use YAML, Jinja and Cerberus &amp;lt;&lt;a href=&quot;https://github.com/nicolaiarocci/cerberus&quot;&gt;https://github.com/nicolaiarocci/cerberus&lt;/a&gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93bf8bf7f0525e5fae02c0efd2a94b6df49b47c" translate="yes" xml:space="preserve">
          <source>To generate a cipher from a secret:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f45dce9950a2dc5b4150eb9915002ca95a1dd8" translate="yes" xml:space="preserve">
          <source>To get an item based on ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b954faf9dc0b4c6d17c5f3a2c0d470d98eafbe45" translate="yes" xml:space="preserve">
          <source>To get started, create a simple table that holds just a username and a password. The password field will hold a SHA256 checksum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8fe2106dc8b0abd6579642c91a99a9826152bf" translate="yes" xml:space="preserve">
          <source>To get the above appearance, use settings something like these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800bf1f844b82d6ab5e98ef1d7d2c2d773b80cdb" translate="yes" xml:space="preserve">
          <source>To get your YubiKey API key you will need to visit the website below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae226414561a4164261696c4384d0adb851deeef" translate="yes" xml:space="preserve">
          <source>To have Salt forcibly revoke perms before applying a new grant, enable the 'revoke_first options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91042b8f40dc02c5746cd2809bdfe998b25fce2" translate="yes" xml:space="preserve">
          <source>To have the complete features, one needs to add the following mine configuration in the minion (proxy) config file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91783e4a1178e3fd56f25429ccc908ce721dca5" translate="yes" xml:space="preserve">
          <source>To import into a PyDSL SLS, one must bypass the Python importer and insert it manually by getting a reference from Python's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e6fd0409ebece44a90682fd9e85f52eae1fd3f" translate="yes" xml:space="preserve">
          <source>To include accepted keys in the match along with pending keys, set this to &lt;code&gt;True&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6a51bb8e8619fba078b65a01fa063c5e15b5a3" translate="yes" xml:space="preserve">
          <source>To include denied keys in the match along with pending keys, set this to &lt;code&gt;True&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68f6ca6b9ab25eec61c2edd8419476389d54f19" translate="yes" xml:space="preserve">
          <source>To include other states use the &lt;code&gt;include()&lt;/code&gt; function. It takes one name per state to include.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3898da5537404d39824546617e61b571aae381f5" translate="yes" xml:space="preserve">
          <source>To include rejected keys in the match along with pending keys, set this to &lt;code&gt;True&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba5d9de431d333f8f455338fd2546725f89893e" translate="yes" xml:space="preserve">
          <source>To inspect an image, it must have been pulled from a registry or built locally. Images on a Docker registry which have not been pulled cannot be inspected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e977369cec23e3a50fbcd7b6b3decd06b9dc3e9b" translate="yes" xml:space="preserve">
          <source>To install Capirca, execute: &lt;code&gt;pip install capirca&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6a8549fe2908f6c189b2e0ee2d59a13b810f5c" translate="yes" xml:space="preserve">
          <source>To install a v2 agent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5876168b46e7beaa028dcfca3569d49007096131" translate="yes" xml:space="preserve">
          <source>To keep the changes but not commit, set &lt;code&gt;commit&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62d9b215d1f89832721faa5ce784a49e02730f8" translate="yes" xml:space="preserve">
          <source>To list HBAs of specified type for a specified host system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112fc85b5fd5ec2c220de80ff8bbb3a42698cdaa" translate="yes" xml:space="preserve">
          <source>To list HBAs of specified type for each host system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc63f1d97ab42a0d0d73a8051bcbe371c2520f07" translate="yes" xml:space="preserve">
          <source>To list all ASAM platform sets present on the Novell Fan-Out Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573264634389a08fab630b10c66aac08970e452b" translate="yes" xml:space="preserve">
          <source>To list all ASAM platforms present on the Novell Fan-Out Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c0f7e97bde542b860bf6db25f7b95de40b33f4" translate="yes" xml:space="preserve">
          <source>To list all HBAs for a specified host system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acc020d2d96b4212beca36e27c69c2d61b5273a" translate="yes" xml:space="preserve">
          <source>To list all HBAs for each host system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cba940458ea467da62e46d39624184ea330b665" translate="yes" xml:space="preserve">
          <source>To list clusters for a specified datacenter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291b6d8aa7284c430a8f0008e4f8df960218600f" translate="yes" xml:space="preserve">
          <source>To list clusters for each datacenter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499de6fc3f229123cb1850898bca7e010268fff1" translate="yes" xml:space="preserve">
          <source>To list hosts for a specified cluster:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c376fdb6c8e1d2d379a07442244690642e9d487a" translate="yes" xml:space="preserve">
          <source>To list hosts for a specified datacenter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de5bfd36fe8377cd8c7b1b1dbcfe715a8cb3150" translate="yes" xml:space="preserve">
          <source>To list hosts for each cluster:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be571502add33fc7e0fa3529e978e2efb5179332" translate="yes" xml:space="preserve">
          <source>To list hosts for each datacenter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef7f6e29f6ee8033ff2f4ce4b16c2c3ed02080f" translate="yes" xml:space="preserve">
          <source>To list snapshots for a specific VM/template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df11f7adba5825febe7e3dac5a91d35598dd1f4" translate="yes" xml:space="preserve">
          <source>To list snapshots for all VMs and templates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d427bde759d1b93451a0a57ca46c5b9c270bfb" translate="yes" xml:space="preserve">
          <source>To list unavailable (assigned) IPs, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b0918c2aa1716be2c758a09326c41726c2340d" translate="yes" xml:space="preserve">
          <source>To login to the configured registries, use the &lt;a href=&quot;#salt.modules.dockermod.login&quot;&gt;&lt;code&gt;docker.login&lt;/code&gt;&lt;/a&gt; function. This only needs to be done once for a given registry, and it will store/update the credentials in &lt;code&gt;~/.docker/config.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6da0460ef303f1519bab6299049539faa10cf1" translate="yes" xml:space="preserve">
          <source>To maintain the feel of the nova command line, this function simply calls the server_list function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab07ad348f05c1110bf5a7143a5788e630743d2b" translate="yes" xml:space="preserve">
          <source>To maintain the feel of the nova command line, this function simply calls the server_show function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a53cc1028081378df4d8534601ffbd21ef7909c" translate="yes" xml:space="preserve">
          <source>To make this new service available in a zone, the following can be used, which would allow access to the salt master from the 10.0.0.0/8 subnet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d2a009cf08806d1082c1e606fea80945c79c8c" translate="yes" xml:space="preserve">
          <source>To manage webapps via the Tomcat Manager, you'll need to configure a valid user in the file &lt;code&gt;conf/tomcat-users.xml&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685ddb9f8664064ee4f5556977b63b7d1267984a" translate="yes" xml:space="preserve">
          <source>To override individual configuration items, append --return_kwargs '{&quot;key:&quot;: &quot;value&quot;}' to the &lt;code&gt;salt&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614b1e6557af2f850c9f14e281c5e620aff65810" translate="yes" xml:space="preserve">
          <source>To override individual configuration items, append --return_kwargs '{&quot;key:&quot;: &quot;value&quot;}' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5020c266533ed3c89efd4517622ad02a46b302fb" translate="yes" xml:space="preserve">
          <source>To override individual configuration items, append --return_kwargs '{'key:': 'value'}' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135014e1573a5a2afb6735a067097bad350b0d52" translate="yes" xml:space="preserve">
          <source>To pass encrypted pillar data on the CLI, the ciphertext must have its newlines replaced with a literal backslash-n (&lt;code&gt;\n&lt;/code&gt;), as newlines are not supported within Salt CLI arguments. There are a number of ways to do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3765d9a9afd4218f5021c3c4dfd50c0455d5c43" translate="yes" xml:space="preserve">
          <source>To pass in jump options that doesn't take arguments, pass in an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6069fddfe18b71742ac3831683ec3d859afa232" translate="yes" xml:space="preserve">
          <source>To perform an action on a bucket:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0d4093c323d9cc30be5225ced4d34ff4198851" translate="yes" xml:space="preserve">
          <source>To perform the association, the VPC and the private hosted zone must already exist. You can't convert a public hosted zone into a private hosted zone. If you want to associate a VPC from one AWS account with a zone from a another, the AWS account owning the hosted zone must first submit a CreateVPCAssociationAuthorization (using create_vpc_association_authorization() or by other means, such as the AWS console). With that done, the account owning the VPC can then call associate_vpc_with_hosted_zone() to create the association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242b0567875179c41bcc6b323caf6e7dfea7ceef" translate="yes" xml:space="preserve">
          <source>To preserve the changes, set &lt;code&gt;commit&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; (either as CLI argument, either as state parameter). However, this is recommended to be used only in exceptional cases when there are applied few consecutive states and/or configuration changes. Otherwise the user might forget that the config DB is locked and the candidate config buffer is not cleared/merged in the running config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45694b0434a976d06c70564649d25d9dcbdc8b56" translate="yes" xml:space="preserve">
          <source>To preserve the changes, set &lt;code&gt;commit&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;. However, this is recommended to be used only in exceptional cases when there are applied few consecutive states and/or configuration changes. Otherwise the user might forget that the config DB is locked and the candidate config buffer is not cleared/merged in the running config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cdc90fe3f955acf88ea7de5662b16646760982" translate="yes" xml:space="preserve">
          <source>To prevent the portage tree from being synced within one day of the previous sync, add the following pillar data for this minion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fc1403ca56a967d2e260f5cbc2ea1683e0eb57" translate="yes" xml:space="preserve">
          <source>To pull from a Docker registry, authentication must be configured. See &lt;a href=&quot;../../modules/all/salt.modules.dockermod#docker-authentication&quot;&gt;here&lt;/a&gt; for more information on how to configure access to docker registries in &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/pillar/index.html#pillar&quot;&gt;Pillar&lt;/a&gt; data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127fdbad6bdab3e4982d289507cacd67e07738e5" translate="yes" xml:space="preserve">
          <source>To put the specified host system in maintenance mode in this VMware environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e46d114de617f6101b4007e1a72fbfc0ae24d73" translate="yes" xml:space="preserve">
          <source>To remap a specific branch to a specific Pillar environment, use the &lt;code&gt;env&lt;/code&gt; per-remote parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2934c0113747e6b6c24fbbeaaf9420176773f7e" translate="yes" xml:space="preserve">
          <source>To remove a directory, &lt;code&gt;-r&lt;/code&gt; must be part of the &lt;code&gt;opts&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e1062850bb1febe1e3ca0b7624329c4371e09e" translate="yes" xml:space="preserve">
          <source>To remove a service from a specific zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67422d9a4dae05d0b59ccada48f06d34340a0676" translate="yes" xml:space="preserve">
          <source>To remove masquerade on a specific zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7031dcf6d0a2818adebc4aa9740fb75359344c" translate="yes" xml:space="preserve">
          <source>To remove specified ASAM platform from the Novell Fan-Out Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c064006547e379c1a5679c30620d38a3cba1ff42" translate="yes" xml:space="preserve">
          <source>To replace the config, set &lt;code&gt;replace&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5144590d2d0bb0d775407e8735d00391ba1ca2a7" translate="yes" xml:space="preserve">
          <source>To replace the config, set &lt;code&gt;replace&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;. This option is recommended to be used with caution!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5494a5efb03ad5a038e6f796ba95a5222106fce5" translate="yes" xml:space="preserve">
          <source>To report only errors to sentry, set report_errors_only: true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df50a5cd7681cb7f578868c7f72183407c9c1375" translate="yes" xml:space="preserve">
          <source>To represent lists of items, a single dash followed by a space is used. Multiple items are a part of the same list as a function of their having the same level of indentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10da092ed612f009878b5f235e10156cbc662268" translate="yes" xml:space="preserve">
          <source>To rescan a specified HBA or all the HBAs on the Host System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f178d60b558d1ab630e24689355ecd21907d8b58" translate="yes" xml:space="preserve">
          <source>To reset a VM using its name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617066b4e6dc0c288d01a6bcadb20f03e2f8fee0" translate="yes" xml:space="preserve">
          <source>To retrieve the value associated with the &lt;code&gt;apache&lt;/code&gt; key in the &lt;code&gt;pkg&lt;/code&gt; dict this key can be passed as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4cc6a54e16ee6fdbd1c00c3e811b6bc1660b6e7" translate="yes" xml:space="preserve">
          <source>To retrieve the value associated with the &lt;code&gt;apache&lt;/code&gt; key, in the sub-dictionary corresponding to the &lt;code&gt;pkg&lt;/code&gt; key, the following command can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5faa4d13fe2b10c56c6542704b887f0609f6b9a8" translate="yes" xml:space="preserve">
          <source>To retrieve the value associated with the apache key in the pkg dict this key can be passed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63b468355bb1e23ed3f830f8aa76a2dd66a0b47" translate="yes" xml:space="preserve">
          <source>To return a list of all VMs and templates present on ALL configured providers, with basic fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53816f5a7e7b49428d0938f288c995a0d2b1178" translate="yes" xml:space="preserve">
          <source>To return a list of all VMs and templates present on ALL configured providers, with fields specified under &lt;code&gt;query.selection&lt;/code&gt; in &lt;code&gt;/etc/salt/cloud&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47962f0c65166ebe70bec8f90ce5795d4fcfb8ba" translate="yes" xml:space="preserve">
          <source>To return a list of all VMs and templates present on ALL configured providers, with full details:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5abd613d58d174cb7717ad83eb2d08223dde75" translate="yes" xml:space="preserve">
          <source>To return only one of the configurations, you can use the &lt;code&gt;source&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a84ebc3d0ce787d266f8cc588502d43e58b296d" translate="yes" xml:space="preserve">
          <source>To see a list of available attributes and applies to settings see the documentation for salt.utils.win_dacl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1de787dae3fa27bac92a74a534a29c72cf4abe" translate="yes" xml:space="preserve">
          <source>To see a valid list of states call execution module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cb4dbe9ef0d3f4ca94d5a8bb2a08958141479a" translate="yes" xml:space="preserve">
          <source>To see the encoding Salt has detected from the system locale, check the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f941c198c4e61622eb7cef221106fb02a32263b" translate="yes" xml:space="preserve">
          <source>To set a &lt;code&gt;REG_MULTI_SZ&lt;/code&gt; value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e565e38364580ee154ce26190c804b87ee4ad3a8" translate="yes" xml:space="preserve">
          <source>To set advanced permissions use a list for the &lt;code&gt;perms&lt;/code&gt; parameter, ie:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0c28d91baa998707374f0787e2fa72e49222bd" translate="yes" xml:space="preserve">
          <source>To set group permissions use &lt;code&gt;file.set_perms&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d2e6cf50136b7a4b6957ecdab2d72c9a122654" translate="yes" xml:space="preserve">
          <source>To set the primary group to 'None', it must be specified in quotes. Otherwise Salt will interpret it as the Python value of None and no primary group changes will occur. See the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c0f4803a6ee7b0752d8ae76ef11370639daef1" translate="yes" xml:space="preserve">
          <source>To set things up, first generate a keypair. On the master, run the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87942137d81ff3d8ebf89ef837eb1c2b4361612" translate="yes" xml:space="preserve">
          <source>To simply return the file contents instead, set destination to &lt;code&gt;None&lt;/code&gt;. This works with &lt;code&gt;salt://&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt; and &lt;code&gt;file://&lt;/code&gt; URLs. The files fetched by &lt;code&gt;http://&lt;/code&gt; and &lt;code&gt;https://&lt;/code&gt; will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd1394e6b2ed4090ea0ded7a50e14ba4240e4c1" translate="yes" xml:space="preserve">
          <source>To skip IP address validation, use &lt;code&gt;validate_ip_addrs=False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cf05e5997b6bdeb7454332530077e2aca91842" translate="yes" xml:space="preserve">
          <source>To start a container with no network connectivity (only possible in 2019.2.0 and later) pass this option as an empty list. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d708d92df050e869c92bbd471766435785a4ff4" translate="yes" xml:space="preserve">
          <source>To start a service in macOS the service must be enabled first. Use &lt;code&gt;service.enable&lt;/code&gt; to enable the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de243f49a8cf523685dee0ef257dd4b08b366805" translate="yes" xml:space="preserve">
          <source>To start/power on a VM using its name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6a43fcaeb3c30937016550375b22b80a68e621" translate="yes" xml:space="preserve">
          <source>To stop/power off a VM using its name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611b7040943a666bfba75ddb9aa2993034d5dda7" translate="yes" xml:space="preserve">
          <source>To suspend a VM using its name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d3f37dea4c64d0805a2f2ab9d4d1f76bcf6ace" translate="yes" xml:space="preserve">
          <source>To take the specified host system out of maintenance mode in this VMware environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec36cf3a6ca01fd6c06319166cb969ed71979b9" translate="yes" xml:space="preserve">
          <source>To target the master in the pillar top file, keep in mind that the default &lt;code&gt;id&lt;/code&gt; for the master is &lt;code&gt;&amp;lt;hostname&amp;gt;_master&lt;/code&gt;. This can be overridden by setting an &lt;code&gt;id&lt;/code&gt; configuration parameter in the master config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f100002bdf5a6de281a9ba0a15ad1d0a789707" translate="yes" xml:space="preserve">
          <source>To test the connection for &lt;code&gt;my-vmware-config&lt;/code&gt; specified in the cloud configuration, run &lt;a href=&quot;#salt.cloud.clouds.vmware.test_vcenter_connection&quot;&gt;&lt;code&gt;test_vcenter_connection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da27b1de68616d63ff684f1235f89e64b3132a71" translate="yes" xml:space="preserve">
          <source>To test this engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2a3e1bfe3d2875f31f98b16532ffdc358fbd43" translate="yes" xml:space="preserve">
          <source>To understand how pillar data from these repos will be compiled, it's important to know how Salt will process them. The following points should be kept in mind:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24e8f31597a33e9408f921dc16089e3c0210281" translate="yes" xml:space="preserve">
          <source>To understand how to correctly enable the eAPI on your switch, please check &lt;a href=&quot;https://eos.arista.com/arista-eapi-101/&quot;&gt;https://eos.arista.com/arista-eapi-101/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f39ce00421697604156f135ad6f48131f0acf5c" translate="yes" xml:space="preserve">
          <source>To upgrade VMware Tools on a specified virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f28931c5bfb7f9bb5d377a582284545b7d7abd" translate="yes" xml:space="preserve">
          <source>To upgrade VMware Tools on all virtual machines present in the specified provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0c4927083bcc0c797d5da908dc92c0fa8b099b" translate="yes" xml:space="preserve">
          <source>To upgrade from &lt;a href=&quot;https://pypi.python.org/pypi/docker-py&quot;&gt;docker-py&lt;/a&gt; to &lt;a href=&quot;https://pypi.python.org/pypi/docker&quot;&gt;docker&lt;/a&gt;, you must first uninstall &lt;a href=&quot;https://pypi.python.org/pypi/docker-py&quot;&gt;docker-py&lt;/a&gt;, and then install &lt;a href=&quot;https://pypi.python.org/pypi/docker&quot;&gt;docker&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cc5da7883cde6c6f16e7f31d8129c2e78e4382" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;https://github.com/gitpython-developers/GitPython&quot;&gt;GitPython&lt;/a&gt; for GitFS requires a minimum GitPython version of 0.3.0, as well as the git CLI utility. Instructions for installing GitPython can be found &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/tutorials/gitfs.html#gitfs-dependencies&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d810561ef8214856be8890071bd0d71f6572b5b" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;https://github.com/libgit2/pygit2&quot;&gt;pygit2&lt;/a&gt; for GitFS requires a minimum &lt;a href=&quot;https://github.com/libgit2/pygit2&quot;&gt;pygit2&lt;/a&gt; version of 0.20.3. &lt;a href=&quot;https://github.com/libgit2/pygit2&quot;&gt;pygit2&lt;/a&gt; 0.20.3 requires &lt;a href=&quot;https://libgit2.github.com/&quot;&gt;libgit2&lt;/a&gt; 0.20.0. &lt;a href=&quot;https://github.com/libgit2/pygit2&quot;&gt;pygit2&lt;/a&gt; and &lt;a href=&quot;https://libgit2.github.com/&quot;&gt;libgit2&lt;/a&gt; are developed alongside one another, so it is recommended to keep them both at the same major release to avoid unexpected behavior. For example, &lt;a href=&quot;https://github.com/libgit2/pygit2&quot;&gt;pygit2&lt;/a&gt; 0.21.x requires &lt;a href=&quot;https://libgit2.github.com/&quot;&gt;libgit2&lt;/a&gt; 0.21.x, &lt;a href=&quot;https://github.com/libgit2/pygit2&quot;&gt;pygit2&lt;/a&gt; 0.22.x will require &lt;a href=&quot;https://libgit2.github.com/&quot;&gt;libgit2&lt;/a&gt; 0.22.x, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490cf62e4b6c4a57afb45d48c556be8aa728bb1c" translate="yes" xml:space="preserve">
          <source>To use a custom Python module inside a PyDSL state, place the module somewhere that it can be loaded by the Salt loader, such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa19a0656e6a45d999cbc69131c5eaea9eedafa2" translate="yes" xml:space="preserve">
          <source>To use a file from the minion cache start from the local winrepo root (&lt;code&gt;C:\salt\var\cache\salt\minion\files\base\win\repo-ng&lt;/code&gt;). If you have &lt;code&gt;.sls&lt;/code&gt; files organized in subdirectories you'll have to denote them with &lt;code&gt;.&lt;/code&gt;. For example, if you have a &lt;code&gt;test&lt;/code&gt; directory in the winrepo root with a &lt;code&gt;gvim.sls&lt;/code&gt; file inside, would target that file like so: &lt;code&gt;test.gvim&lt;/code&gt;. Directories can be targeted as well as long as they contain an &lt;code&gt;init.sls&lt;/code&gt; inside. For example, if you have a &lt;code&gt;node&lt;/code&gt; directory with an &lt;code&gt;init.sls&lt;/code&gt; inside, target that like so: &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fe51087c5d2c2e04c2f7090786fb6eca67ff14" translate="yes" xml:space="preserve">
          <source>To use a private IP for connecting and bootstrapping node:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829ddcda0a61ee3b9df56fc84d8a574e225f84b5" translate="yes" xml:space="preserve">
          <source>To use keystoneauth1 instead of keystoneclient, include the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dfb54c10bb2bee1bbb5807b7eb0c353a7d01b9" translate="yes" xml:space="preserve">
          <source>To use kilobytes (KB) for &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; rather than percents, specify the &lt;code&gt;absolute&lt;/code&gt; flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d23bcd711a70e8561b1ec97b36284528648476" translate="yes" xml:space="preserve">
          <source>To use other environments from the same SVN repo as svn_pillar sources, just add additional lines, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd620369fb9ac3bc0365a29c9900d68ba1d5761" translate="yes" xml:space="preserve">
          <source>To use sssd with the PAM eauth module and groups the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1423219aff909cbcd9b41a9b25d6cc721e9442" translate="yes" xml:space="preserve">
          <source>To use the EC2 cloud module, set up the cloud configuration at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc7445f9d4c8c256d3277e7c612fb621e90ac66" translate="yes" xml:space="preserve">
          <source>To use the HipChat returner, append '--return hipchat' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34c97f7d509633f2e6aeecf9b9731fb90c9660c" translate="yes" xml:space="preserve">
          <source>To use the SMTP returner, append '--return smtp' to the &lt;code&gt;salt&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd04155754e3b3966653ed325618001e789fba3" translate="yes" xml:space="preserve">
          <source>To use the SSH transport, on the minion setup an SSH agent with a key authorized on the remote libvirt machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e65f8f9f0405925a64a87ac9ce8a2ab0a14b4c4" translate="yes" xml:space="preserve">
          <source>To use the Slack returner, append '--return slack' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de683c105b65c5899611b23544d3cd2e5bada95c" translate="yes" xml:space="preserve">
          <source>To use the Telegram return, append '--return telegram' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a688d5dc808df6ad5f5aab3912bca9510e235b28" translate="yes" xml:space="preserve">
          <source>To use the XMPP returner, append '--return xmpp' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147019cb565589f99fae55bfe3e2a84b5391f9f9" translate="yes" xml:space="preserve">
          <source>To use the Zabbix returner, append '--return zabbix' to the salt command. ex:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bcee934044788a491fab3b126a369886b3a227" translate="yes" xml:space="preserve">
          <source>To use the alternative configuration, append '--return_config alternative' to the &lt;code&gt;salt&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8478999a05f7f66ba0ba1b4fbf413e9926b8f5d5" translate="yes" xml:space="preserve">
          <source>To use the alternative configuration, append '--return_config alternative' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8bdcbfe1f95532f2ced018eb605cbe6ee1ae08" translate="yes" xml:space="preserve">
          <source>To use the alternative configuration, append '--return_config config-name'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653c03d9a841eed88925b1ddbed6284b0132b933" translate="yes" xml:space="preserve">
          <source>To use the alternative configuration, append &lt;code&gt;--return_config alternative&lt;/code&gt; to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73477f90c52a7667d85b6fcd9796a30b5b0e1af7" translate="yes" xml:space="preserve">
          <source>To use the carbon returner, append '--return carbon' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3daddc573bef5cbc0c63a0276099bb03b97fc5a3" translate="yes" xml:space="preserve">
          <source>To use the cassandra returner, append '--return cassandra' to the salt command. ex:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a1165f3124af343f02d64db320495b4fbff748" translate="yes" xml:space="preserve">
          <source>To use the cassandra returner, append '--return cassandra_cql' to the salt command. ex:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53d1f3bacefe4d08adb32b34c80b6038f71bf18" translate="yes" xml:space="preserve">
          <source>To use the consul as a minion data cache backend, set the master &lt;code&gt;cache&lt;/code&gt; config value to &lt;code&gt;consul&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e5b042b3f23f77cb248eee90f01560f4370c76" translate="yes" xml:space="preserve">
          <source>To use the couchbase returner, append '--return couchbase' to the salt command. ex:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ae25a1a80de41da9cc3b0ee56f9fc9f71d3e1f" translate="yes" xml:space="preserve">
          <source>To use the couchbase sdb module, it must first be configured in the salt master or minion config. The following arguments are required:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac15f02bb90973cdc71e5e0be96b02d07abf23b" translate="yes" xml:space="preserve">
          <source>To use the couchdb returner, append &lt;code&gt;--return couchdb&lt;/code&gt; to the salt command. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b252d3db969ef36ab41f2ff3651023b2d11a69" translate="yes" xml:space="preserve">
          <source>To use the etcd as a minion data cache backend, set the master &lt;code&gt;cache&lt;/code&gt; config value to &lt;code&gt;etcd&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84daae05b11341dfc2b712b7d2abea0cc23e056" translate="yes" xml:space="preserve">
          <source>To use the influxdb returner, append '--return influxdb' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7df9ea5de26ed11e70b72cf72e4ff90a7c86a0" translate="yes" xml:space="preserve">
          <source>To use the kafka returner, append '--return kafka' to the Salt command, eg;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8371d323ab3e1161e9dd5a8a61a93b3ca49e84f5" translate="yes" xml:space="preserve">
          <source>To use the local returner, append '--return local' to the salt command. ex:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95adfcb1f3649f75b2832977612d05447cf2b35c" translate="yes" xml:space="preserve">
          <source>To use the mattermost returner, append '--return mattermost' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7746da17b883557cd540bd01515be2339f76a1" translate="yes" xml:space="preserve">
          <source>To use the memcache returner, append '--return memcache' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93b243b6e03f0dacdd6f710de1f9fc84ef42090" translate="yes" xml:space="preserve">
          <source>To use the mongo returner, append '--return mongo' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8d95fb48f835ec4e35db13c321343cb400d4ac" translate="yes" xml:space="preserve">
          <source>To use the mysql as a minion data cache backend, set the master &lt;code&gt;cache&lt;/code&gt; config value to &lt;code&gt;mysql&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681417fccc186f294f2f1e94e4595802be3bd38b" translate="yes" xml:space="preserve">
          <source>To use the mysql returner, append '--return mysql' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c6419ae85095b12dc1ee775d6fe2af52510572" translate="yes" xml:space="preserve">
          <source>To use the plugin, add it to the &lt;code&gt;ext_pillar&lt;/code&gt; list in the Salt master config and tell &lt;strong&gt;reclass&lt;/strong&gt; by way of a few options how and where to find the inventory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874035408d79ad1926b70d0548028a8124a93c32" translate="yes" xml:space="preserve">
          <source>To use the plugin, add it to the &lt;code&gt;master_tops&lt;/code&gt; list in the Salt master config and tell &lt;strong&gt;reclass&lt;/strong&gt; by way of a few options how and where to find the inventory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fdea8fe051f2c98989b2c879a9ccd58a0cd5fb" translate="yes" xml:space="preserve">
          <source>To use the postgres returner, append '--return postgres' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40c9ad7180611040619c6ebc9b90c36651682b4" translate="yes" xml:space="preserve">
          <source>To use the redis returner, append '--return redis' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a0a96c93717eb773e741e1b9fdf8c46e975e9e" translate="yes" xml:space="preserve">
          <source>To use the returner per salt call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062bfe77eb2fd1b43152e49737063d117a8f56f3" translate="yes" xml:space="preserve">
          <source>To use the sms returner, append '--return sms' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a511c0c849d6db7ab6e457327bda04ed9be4c074" translate="yes" xml:space="preserve">
          <source>To use the sqlite returner, append '--return sqlite3' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b787b208d62386be670f2655259897bc27d98bc" translate="yes" xml:space="preserve">
          <source>To use the syslog returner, append '--return syslog' to the salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95f68d3170b5b367165ca4b27781301eb0d81e5" translate="yes" xml:space="preserve">
          <source>To use this function, you need to specify &lt;code&gt;esxi_host_user&lt;/code&gt; and &lt;code&gt;esxi_host_password&lt;/code&gt; under your provider configuration set up at &lt;code&gt;/etc/salt/cloud.providers&lt;/code&gt; or &lt;code&gt;/etc/salt/cloud.providers.d/vmware.conf&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c232a38e374d5aad947bf08dd9f1b918da8a18d" translate="yes" xml:space="preserve">
          <source>To use this integration proxy module, please configure the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07303c6e5bfcd24b5205e1a1efac2e101d0eb58" translate="yes" xml:space="preserve">
          <source>To use this interface, you must track IDs on your own or have another source to do the map-reduce logic necessary to calculate the ID you wish to fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7470d8cf30eda4c77fd8ac78d75233ae3b49efcf" translate="yes" xml:space="preserve">
          <source>To use this module you need to configure a webhook in the google chat room where you would like the message to be sent, see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69081278146debd4b1d871736d7602213f26be78" translate="yes" xml:space="preserve">
          <source>To use this module, set up the vCenter or ESX/ESXi URL, username and password in the cloud configuration at &lt;code&gt;/etc/salt/cloud.providers&lt;/code&gt; or &lt;code&gt;/etc/salt/cloud.providers.d/vmware.conf&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1914b1266dc1988784b091b9eacbebce186368d3" translate="yes" xml:space="preserve">
          <source>To use this module, your Django project must be on the salt master server with database access. This assumes you are using virtualenv with all the project's requirements installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d46fa6818d9379ced0477361c555e5770bdf12" translate="yes" xml:space="preserve">
          <source>To use this new data you can import it into your state file and then access your attributes. To access the data in the map you simply access the attribute name on the base class that is extending Map. Assuming the above Map was in the file &lt;code&gt;samba/map.sls&lt;/code&gt;, you could do the following.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
