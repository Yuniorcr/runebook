<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="77458cdde4dede2cb1c462ebd3ce02d18756f0b7" translate="yes" xml:space="preserve">
          <source>Get a range of values from a sorted set in Redis by index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441f6ef001d6b148c540bb2390856f422d2ddb0e" translate="yes" xml:space="preserve">
          <source>Get a record from a zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ffe11fef39b22ceb1f0c1b69b21c34b7f368e4" translate="yes" xml:space="preserve">
          <source>Get a report on all of the currently paused state runs and pause run settings. Optionally send in a jid if you only desire to see a single pause data set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb36140ca19465556e5854f5ec0016c28404c56d" translate="yes" xml:space="preserve">
          <source>Get a resource type api versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bf7a470fa74179b26bbbb66d87d0745f07dfb3" translate="yes" xml:space="preserve">
          <source>Get a role policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c6092d7d7cfd8265bca765c1ef7e2c7f27bee1" translate="yes" xml:space="preserve">
          <source>Get a security rule within a specified network security group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6cdcc96917524f5036f93e6d90646942c4b1d4" translate="yes" xml:space="preserve">
          <source>Get a single domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9512372149c69989bffcd95ad79da684fd80f8c" translate="yes" xml:space="preserve">
          <source>Get a single endpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8e47e5a3459b6928164ee5d60058b4c5a5811d" translate="yes" xml:space="preserve">
          <source>Get a single group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312427ca197393f137164adcf85ca9f835bf4220" translate="yes" xml:space="preserve">
          <source>Get a single image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa99c0d36f9e51b99411c77b97c9951e23088507" translate="yes" xml:space="preserve">
          <source>Get a single item from NetBox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe63422c7a5ec9995507dcd1ec2ee616bc6b9df" translate="yes" xml:space="preserve">
          <source>Get a single key pair by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc915aba2bcdec04f9f63ba0b32a79a0655ea5e" translate="yes" xml:space="preserve">
          <source>Get a single network</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f27e13c672a266d03ccfae97d4f1c9605c10fa" translate="yes" xml:space="preserve">
          <source>Get a single project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf961cd8354b00a9b16cefc93b00036d09fbaa7" translate="yes" xml:space="preserve">
          <source>Get a single role</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42df7606a9f370d2b117d157d97daf8bf6f80e0f" translate="yes" xml:space="preserve">
          <source>Get a single salt process environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a718a6e65882685cf1d24aaf51608d60db92164" translate="yes" xml:space="preserve">
          <source>Get a single security group. This will create a default security group if one does not exist yet for a particular project id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90da04f9111a33f8b7cc840b860b27e446ae8a3f" translate="yes" xml:space="preserve">
          <source>Get a single service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8915d8e0258433b789bb00c5351fa2b27f8c3bfb" translate="yes" xml:space="preserve">
          <source>Get a single subnet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db35be7c701c63ebd91f6a775652cbaccbdce1b8" translate="yes" xml:space="preserve">
          <source>Get a single user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcc53b97f298389a78f4d0b44daebcb8c2b477d" translate="yes" xml:space="preserve">
          <source>Get a splunk search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a994c9b977b621545c2231c2a951936074a9b460" translate="yes" xml:space="preserve">
          <source>Get a splunk user by name/email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2954daec49bd499437601225ddc8aaaf9b8c00cf" translate="yes" xml:space="preserve">
          <source>Get a the AWS account id associated with the used credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe488d626284fa172592f33661208bc5755a5c0" translate="yes" xml:space="preserve">
          <source>Get a value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013e981ba14ab054625577b96bc8870ac914b2f4" translate="yes" xml:space="preserve">
          <source>Get a value for a specific augeas path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41eab84a6efad8dfcf04a198878f3f08f411b7f9" translate="yes" xml:space="preserve">
          <source>Get a value from a db, using a uri in the form of sdb://&amp;lt;profile&amp;gt;/&amp;lt;key&amp;gt;. If the uri provided does not start with sdb://, then it will be returned as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d0ab2b616aa4b7f1a5725ac025cad9c858c4a7" translate="yes" xml:space="preserve">
          <source>Get a value from a keyring service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e9a62222744434571ef3913be83c976882c9da" translate="yes" xml:space="preserve">
          <source>Get a value from an OpenStack configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98760c6ee5b182035f5d16a249f5b7ee082e8e7b" translate="yes" xml:space="preserve">
          <source>Get a value from couchdb by id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5918d958d569cb73c46a26562655e486359c0c14" translate="yes" xml:space="preserve">
          <source>Get a value from etcd, by direct path. Returns None on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68f205cc95dfb9f14573d8ae43650e5d7c528f9" translate="yes" xml:space="preserve">
          <source>Get a value from memcached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0b1f814404486633c80921147d70d79b73eb26" translate="yes" xml:space="preserve">
          <source>Get a value from sqlite3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bf98dbc8111194b336b0002ca6d675fe1a18b4" translate="yes" xml:space="preserve">
          <source>Get a value from the REST interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a214b9a84e993adbbc4575b5cf7566735023b1c" translate="yes" xml:space="preserve">
          <source>Get a value from the Redis SDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff9ad407459d4f8eceecf3ac7ca976b76a968a4" translate="yes" xml:space="preserve">
          <source>Get a value from the cache service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59b7684cbc30cb939e2c30c8ddd68b118a10dc1" translate="yes" xml:space="preserve">
          <source>Get a value from the dictionary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfff4222e6031b42b630a2fc985d48adc5cbc674" translate="yes" xml:space="preserve">
          <source>Get a value from the etcd service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d94715b6f0b2723e955b0b27b83264be02c14c" translate="yes" xml:space="preserve">
          <source>Get a value from the vault service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08563ccbd4f3dc31b9a007c8316964cb9ec5d3d1" translate="yes" xml:space="preserve">
          <source>Get account policy for the AWS account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e57cfc8e403b74efe5656b724c41b532c669199" translate="yes" xml:space="preserve">
          <source>Get acls on a znode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd586b84863f9478f9d86ad2b341be8612275fd8" translate="yes" xml:space="preserve">
          <source>Get alarm details. Also can be used to check to see if an alarm exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e77918582a1f62e593596040714b0ed271d0da" translate="yes" xml:space="preserve">
          <source>Get all API stages for a given apiID and deploymentID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416e74553f6d43d237b2211e39da9746e67b3099" translate="yes" xml:space="preserve">
          <source>Get all EFS properties or a specific instance property if filesystemid is specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472134922a032aa7d69dc47e7764963cdf824e99" translate="yes" xml:space="preserve">
          <source>Get all IAM role details. Produces results that can be used to create an sls file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a118b0011f3f19daddba1c8ad767365d22dc54c" translate="yes" xml:space="preserve">
          <source>Get all IAM user details. Produces results that can be used to create an sls file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c89933e1103e38d92c30836a49c8ad4f3216ed" translate="yes" xml:space="preserve">
          <source>Get all MFA devices associated with an IAM user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1408aaef3823aa4db463927ce0b6b1023baca140" translate="yes" xml:space="preserve">
          <source>Get all access keys from a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03afa80fd64947592c2d5a7e5a4f3ae1a27ccbc" translate="yes" xml:space="preserve">
          <source>Get all alarm details. Produces results that can be used to create an sls file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb94b35849c01d23854f90cc50dc35cbb2e227d3" translate="yes" xml:space="preserve">
          <source>Get all alarms again, verify no changes $ salt-call boto_cloudwatch.get_all_alarms --out=txt | sed &quot;s/local: //&quot; &amp;gt; final_alarms.sls $ diff final_alarms.sls managed_alarms.sls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be571f6e8e21f61514608b284dcae1192318841" translate="yes" xml:space="preserve">
          <source>Get all alarms with new prefixed names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7a4d541e75a48e5c72da9123f04accb6a9a7c1" translate="yes" xml:space="preserve">
          <source>Get all alert definitions associated with a given deployment or if metric_name is specified, obtain the specific alert config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675caf74b87496560f1ee4f1bb80094fb75c92f7" translate="yes" xml:space="preserve">
          <source>Get all available log format names and ids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3a86d670994e5c65a9538b343b7b2a1cc6b5df" translate="yes" xml:space="preserve">
          <source>Get all channel names from Slack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d46e61724d3cc2b5431438aaeb5839837b80c12" translate="yes" xml:space="preserve">
          <source>Get all configured IIS applications for the specified site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f335097f14408089cfe7361893e1b94c5615eb80" translate="yes" xml:space="preserve">
          <source>Get all configured IIS bindings for the specified site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed2f88c7e6771d2621513594fd515a79531065e" translate="yes" xml:space="preserve">
          <source>Get all configured IIS virtual directories for the specified site, or for the combination of site and application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c266186faa4da98fb5931c8b87ea254cbec3bad" translate="yes" xml:space="preserve">
          <source>Get all fields and values from a redis hash, returns dict</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ad6a26c188bc419a0e7b57946ad3eaa9af62ab" translate="yes" xml:space="preserve">
          <source>Get all host information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5475dc33b64385cf7ca88c5e966a795e056125" translate="yes" xml:space="preserve">
          <source>Get all keys from the minion datastore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbaff2bddb235a512877e049a0d00a15d8045e9" translate="yes" xml:space="preserve">
          <source>Get all mine data for &lt;a href=&quot;salt.modules.dockermod#salt.modules.dockermod.ps_&quot;&gt;&lt;code&gt;docker.ps&lt;/code&gt;&lt;/a&gt; and run an aggregation routine. The &lt;code&gt;interfaces&lt;/code&gt; parameter allows for specifying the network interfaces from which to select IP addresses. The &lt;code&gt;cidrs&lt;/code&gt; parameter allows for specifying a list of subnets which the IP address must match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8b00b044eefd2e78af0702e605ba1d95b9b1a4" translate="yes" xml:space="preserve">
          <source>Get all models for a given API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e17494e95ad6733d081c9bda8eec55a108b2c5" translate="yes" xml:space="preserve">
          <source>Get all network security groups applied to a specific network interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d32a73bfa792ca381f9045476a0e935245a2a60" translate="yes" xml:space="preserve">
          <source>Get all of the certificate serials in the specified store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47245128b2f3c7a7f4bd12e54b5736901f03e1d0" translate="yes" xml:space="preserve">
          <source>Get all principals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4f8f90c320e166b7cafbf3265bd962122336f6" translate="yes" xml:space="preserve">
          <source>Get all resource records from a given zone matching the provided StartRecordName (if given) or all records in the zone (if not), optionally filtered by a specific StartRecordType. This will return any and all RRs matching, regardless of their special AWS flavors (weighted, geolocation, alias, etc.) so your code should be prepared for potentially large numbers of records back from this function - for example, if you've created a complex geolocation mapping with lots of entries all over the world providing the same server name to many different regional clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672655b94a11a680668833c6115a49c67c03c5b8" translate="yes" xml:space="preserve">
          <source>Get all route tables for a specific network interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fb9e360ef277a5c7a90628cf5eff320d399ae3" translate="yes" xml:space="preserve">
          <source>Get all searches again, verify no changes $ salt-call splunk_search.list_all --out=txt | sed &quot;s/local: //&quot; &amp;gt; final_searches.sls $ diff final_searches.sls managed_searches.sls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b7e91b0b529686ec507a0fcbd3202caa1af1d1" translate="yes" xml:space="preserve">
          <source>Get all searches with new prefixed names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b950e7015bcf44a7685136bcd32a576d85a9a091" translate="yes" xml:space="preserve">
          <source>Get all splunk search details. Produces results that can be used to create an sls file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212073f9bc5f57129a0884a4d16dabcb25bfc71a" translate="yes" xml:space="preserve">
          <source>Get all the EFS mount point properties for a specific filesystemid or the properties for a specific mounttargetid. One or the other must be specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21de3404a504d6ee2862d8c2b8179f4f838a337c" translate="yes" xml:space="preserve">
          <source>Get all the zones in the candidate configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2608b587d4008936665c4fb7bbe66a977430ba" translate="yes" xml:space="preserve">
          <source>Get all user policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a715a0632639d352e427184f2b1fa0d8d3267d0" translate="yes" xml:space="preserve">
          <source>Get all users from Slack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925de0da06023bd59bc96f3dbdcd3df1a8786a73" translate="yes" xml:space="preserve">
          <source>Get an AWS id for a VPC resource by type and name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9761003990b81de28d74bc35880fc23b103fc5" translate="yes" xml:space="preserve">
          <source>Get an AzureARM resource by id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ca37497be460295e7636080f9ae436e903cb1e" translate="yes" xml:space="preserve">
          <source>Get an EC2 instance attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41984caafb4873bf0a5b9e6c663d1b5b79d66b63" translate="yes" xml:space="preserve">
          <source>Get an ELB configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93c71ceeae5502fa6ac9e5e6de9da60c63bc4ad" translate="yes" xml:space="preserve">
          <source>Get an Elastic Network Interface id from its name tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce17c4b5ae317d00c2e780c4ec97cdb8585127a" translate="yes" xml:space="preserve">
          <source>Get an Elastic Network Interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada4092ff191667d401c5d723b1233f55a5439a3" translate="yes" xml:space="preserve">
          <source>Get an SELinux context from a given path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086e88a22c11548035a51ed58aca1f56e095af53" translate="yes" xml:space="preserve">
          <source>Get an existing continuous query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be318b559ffa7ff628d982d957920f9f40415f9b" translate="yes" xml:space="preserve">
          <source>Get an existing retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc7c489d82735eb05805499d51153fc0e344210" translate="yes" xml:space="preserve">
          <source>Get an image of a node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5662a12ee5020e6c7be2ac53c08017a1a9e26707" translate="yes" xml:space="preserve">
          <source>Get an individual DMI string from SMBIOS info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22041feb1995cae8bff055053a7844d285c0ded9" translate="yes" xml:space="preserve">
          <source>Get an integration for a given method in a given API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9492da53566c54b1d9da0522f72c13ac71d986" translate="yes" xml:space="preserve">
          <source>Get an integration response for a given method in a given API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e36b1f29e2dc887b9d57f02c4edcaabe8f48951" translate="yes" xml:space="preserve">
          <source>Get and return all IAM group details, starting at the optional path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9030fd9b0186371df9a3ae6fd55921470d9c7ea3" translate="yes" xml:space="preserve">
          <source>Get and return all IAM instance profiles, starting at the optional path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e1677a05e394094bc28a06c638bbec0e989b3a" translate="yes" xml:space="preserve">
          <source>Get and return all IAM role details, starting at the optional path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d3e66b633937155294c5d75a7b30321f3933a2" translate="yes" xml:space="preserve">
          <source>Get and return all IAM user details, starting at the optional path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6170d10bb8e0ea8eb0d90d584f2b445d66c3de4c" translate="yes" xml:space="preserve">
          <source>Get anti-virus information from PaloAlto Networks server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3185476d6e9de695038100bd9d0d60dc5dcd5228" translate="yes" xml:space="preserve">
          <source>Get any single pagerduty resource by key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cde5fbafc8da116b9aafe67080ae5481b0ef0c2" translate="yes" xml:space="preserve">
          <source>Get args and kwargs from the argset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7928f86958e619500ec8738493021d5002ed07" translate="yes" xml:space="preserve">
          <source>Get channel info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb58d82f96c6e3b57f8c5096682cdb2e2690aa98" translate="yes" xml:space="preserve">
          <source>Get children in znode path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fb4f398a25a6eaa608f08273d70b7a96f73bd6" translate="yes" xml:space="preserve">
          <source>Get cluster member status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abcb6d8da3e0f8bae64ddccb7bb4f8ae674ded4" translate="yes" xml:space="preserve">
          <source>Get cluster status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5518abe2fe1a9e3e254dd70278c82e3375443368" translate="yes" xml:space="preserve">
          <source>Get collection list for an alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aded448aa164bbf2b1174a8e2799cb70fd71fcc2" translate="yes" xml:space="preserve">
          <source>Get collection option list that can only be defined at creation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179636fcca53b466a3d2180ddc2d387ed79cca78" translate="yes" xml:space="preserve">
          <source>Get collection options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dea252b84070d4ee1e9f23f5fbbfdd3206d168" translate="yes" xml:space="preserve">
          <source>Get complete stream info from AWS, returning only when the stream is in the ACTIVE state. Continues to retry when stream is updating or creating. If the stream is deleted during retries, the loop will catch the error and break.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9048c3727d9633de9230ed42fced8e6924882b" translate="yes" xml:space="preserve">
          <source>Get current Windows Update settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd505fd3ae08b8bed2ab6c2f968b6bb5aad52957" translate="yes" xml:space="preserve">
          <source>Get current X keyboard setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcbb651d4451e899d76aceab3ead94bf82ee254" translate="yes" xml:space="preserve">
          <source>Get current boot device override information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26520fad9c68bdf28887007755c1032ac95c01d1" translate="yes" xml:space="preserve">
          <source>Get current hardware clock setting (UTC or localtime)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d490d1263e807640d3d16aaa0d17c6ec3ac8e27b" translate="yes" xml:space="preserve">
          <source>Get current numeric timezone offset from UCT (i.e. -0700)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810b7d2da9cd7d2211cd17521d47a5eff82f1443" translate="yes" xml:space="preserve">
          <source>Get current numeric timezone offset from UTC (i.e. -0700)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da874a7eb56dd6c18cee257d0a1954efb5df7a03" translate="yes" xml:space="preserve">
          <source>Get current power state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424c5ea70cdfaf7cd02384c46b1b2d3fff54fe6b" translate="yes" xml:space="preserve">
          <source>Get current system keyboard setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bae63bcfc1cdbf79cdc1f82b301ee487870484" translate="yes" xml:space="preserve">
          <source>Get current timezone (i.e. America/Denver)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49528fe772e888203009e45eb41f292b27c0d9f" translate="yes" xml:space="preserve">
          <source>Get current timezone (i.e. PST, MDT, etc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40bfe24ff0bd4544ab77a82bbca272292b7eb0e" translate="yes" xml:space="preserve">
          <source>Get data from the mine based on the target, function and tgt_type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a572d3f6caef75afd6ea2d5b7246a6821b0cee" translate="yes" xml:space="preserve">
          <source>Get detailed information about a given snapshot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8048c766e5dddb3ccb936c9720837ee27595b1" translate="yes" xml:space="preserve">
          <source>Get detailed information about a key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c91b98fc097fec76c71f1363609a313f3137e02" translate="yes" xml:space="preserve">
          <source>Get details about a default security rule within a security group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79c91dbd9254646e22c664e46997c0cac857922" translate="yes" xml:space="preserve">
          <source>Get details about a network security group within a resource group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddde9fe0f753732dcefe465dd276f19e03d777f" translate="yes" xml:space="preserve">
          <source>Get details about a specific deployment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cd2b0766bf3dc194a0f99d5f7e9b97d338ab52" translate="yes" xml:space="preserve">
          <source>Get details about a specific load balancer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752ec27a6dbd0ec946b2f76b8eac12e3b4c4f919" translate="yes" xml:space="preserve">
          <source>Get details about a specific network interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ea3456904190755cf37d18458d90c3d5cf616e" translate="yes" xml:space="preserve">
          <source>Get details about a specific policy assignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba4c1cb43157048b77f47064c7405615eaec39d" translate="yes" xml:space="preserve">
          <source>Get details about a specific policy definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dc2fa2ddc655896996d6a01061c5d2fbefab24" translate="yes" xml:space="preserve">
          <source>Get details about a specific public IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1c66a91ff5b9d600d0d5d3c311a18121a4d40a" translate="yes" xml:space="preserve">
          <source>Get details about a specific route filter rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4036e852176ccf5c31149d5bb20591dbe34a6c18" translate="yes" xml:space="preserve">
          <source>Get details about a specific route filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d196fd19e3719534d8e32598e2f9948158513c8" translate="yes" xml:space="preserve">
          <source>Get details about a specific route table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d543a769ca79af860913a82dd93b7aa908db8d2e" translate="yes" xml:space="preserve">
          <source>Get details about a specific route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cf2ab8ab78c8c472dd2372fe77ded8c9c89e30" translate="yes" xml:space="preserve">
          <source>Get details about a specific subnet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab052f9b6f091d0a3cce6fc39947697692081a6" translate="yes" xml:space="preserve">
          <source>Get details about a specific virtual network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959029b17d33e12095461ef4823550eba57126de" translate="yes" xml:space="preserve">
          <source>Get details about a subscription.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eaa1cc5102821c85d86b49d09ad8b8cb26cf9e" translate="yes" xml:space="preserve">
          <source>Get details about all the interfaces on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2897b9cafd27d8e913ed1914bf166d4afe3e2c61" translate="yes" xml:space="preserve">
          <source>Get details of all CloudFront distributions. Produces results that can be used to create an SLS file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1152f2d3ae2f0102bc946429006ed26c4612e76" translate="yes" xml:space="preserve">
          <source>Get existing repository details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34adb68c78d9103c006a6a8333664042ece4f354" translate="yes" xml:space="preserve">
          <source>Get fetch and push URLs for each remote in a git checkout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b487887970a064ab9e58ec3ec4ceb828db41a7" translate="yes" xml:space="preserve">
          <source>Get filesystem geometry information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc93452130093bb56afcc13530a061f7dc7ca67d" translate="yes" xml:space="preserve">
          <source>Get flags for a given package or DEPEND atom. Warning: This only works if the configuration files tree is in the correct format (the one enforced by enforce_nice_config)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacb3e76eafa064af26f877abd313774b9418c42" translate="yes" xml:space="preserve">
          <source>Get full info on a MySQL user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fc485d9bc3a6a475789820958975e8a5ef1b9b" translate="yes" xml:space="preserve">
          <source>Get fully qualified domain name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba714e092c32049a55bbc56f0efa697eec308bef" translate="yes" xml:space="preserve">
          <source>Get grains for proxy minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f770f06009c49fba1576a42f8afcb555f0ef7229" translate="yes" xml:space="preserve">
          <source>Get group information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46227e678bc23bd213bbfb69d95532749e060d76" translate="yes" xml:space="preserve">
          <source>Get host domain name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0caf8a5048ef11996985be8cd5e51d27849dcaf" translate="yes" xml:space="preserve">
          <source>Get host information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f491b5bc018a6fc049307e672bd9bd43852ce38" translate="yes" xml:space="preserve">
          <source>Get host information about slave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aca23f88d6b7c04db555cb13f3b580acc6e9801" translate="yes" xml:space="preserve">
          <source>Get host ipv4addr information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f806e3fadfcdd184bda0dd85cd3092fe20c3b9" translate="yes" xml:space="preserve">
          <source>Get host ipv6addr information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220c49059e2ba76a0647f0eb81809b8f3df552e2" translate="yes" xml:space="preserve">
          <source>Get hostname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72f4b42635f53a05a79f62ff86578baac88aed0" translate="yes" xml:space="preserve">
          <source>Get hostname from cache node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4c181de1fe1797a32ea2437ade1e678b60c7aa" translate="yes" xml:space="preserve">
          <source>Get hostname from replication cache group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0df58cb002a5032049ee40445efd2fffedc5ffa" translate="yes" xml:space="preserve">
          <source>Get hostname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c51940227652853c86d8487605e391e6594b327" translate="yes" xml:space="preserve">
          <source>Get info about all available lamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cb5fed77b4a5b861f38633c91c67bfb9c081e9" translate="yes" xml:space="preserve">
          <source>Get info about an available postgresql extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d858b146f4244d42c23204032ab4e028af81c8" translate="yes" xml:space="preserve">
          <source>Get info about an installed postgresql extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173abcc95f18b8d337d1c7505192e988f64020ae" translate="yes" xml:space="preserve">
          <source>Get information about a CloudFront distribution (configuration, tags) with a given name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c6ec673c54d9f0cc7134f37b2552824b59230c" translate="yes" xml:space="preserve">
          <source>Get information about a cache subnet group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56a4632bb543bf9d5b46020a1742274c34d5acf" translate="yes" xml:space="preserve">
          <source>Get information about a service on the system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cd1d77a1bca5b7c73819e91224f2532632e930" translate="yes" xml:space="preserve">
          <source>Get information about a session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821f914a29c1653163c32e30a35b85aec1919b64" translate="yes" xml:space="preserve">
          <source>Get information about a specfic network interface within a scale set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806158d1bed0852967451b0db92b230506d8b76b" translate="yes" xml:space="preserve">
          <source>Get information about all network interfaces in a specific virtual machine within a scale set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e19f46b8b4adf2ce88407020317d74924dfa68f" translate="yes" xml:space="preserve">
          <source>Get information about all network interfaces within a scale set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c272306ba03fc2c43eb3d860089f852a72b112d" translate="yes" xml:space="preserve">
          <source>Get information about given user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981172803cc6750d75b23f4573f5b21153a6ccc4" translate="yes" xml:space="preserve">
          <source>Get information and statistics about the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a699071e5c67745c22c35809de45fbf382931b9b" translate="yes" xml:space="preserve">
          <source>Get information for a role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a5c6282f1ba681f2f7996fdfd419f33ac357ef" translate="yes" xml:space="preserve">
          <source>Get information on changes made to container's filesystem since it was created. Equivalent to running the &lt;code&gt;docker diff&lt;/code&gt; Docker CLI command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bfe2371628d530875391e68011ddcabd68e907" translate="yes" xml:space="preserve">
          <source>Get ip for sentinel master</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edd248370344f2870b8711427a1d0dcd74cbae7" translate="yes" xml:space="preserve">
          <source>Get ip range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1c338043c93e4d69cda218131887ad6e3c6ce7" translate="yes" xml:space="preserve">
          <source>Get ipv4 address from host record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cafc3f6463eb6a7d0feea3a815628c60077182" translate="yes" xml:space="preserve">
          <source>Get items from the minion datastore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f83dbfba47425b8edb42d10345790f1b37a465" translate="yes" xml:space="preserve">
          <source>Get just the values (ignoring the minion IDs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6067a069eca2efa074959fb25641d8d486af61a6" translate="yes" xml:space="preserve">
          <source>Get k8s namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147d4960c9c5dce6b552ea18a4e9a76a68c0e111" translate="yes" xml:space="preserve">
          <source>Get key from Consul</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473800f610fa2e256667f5fd34f18732ed0bd245" translate="yes" xml:space="preserve">
          <source>Get key in a particular GNOME schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e5be1b170fafa5c26a925d0d9915e08d8b4395" translate="yes" xml:space="preserve">
          <source>Get known BTRFS formatted devices on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58bae93de35d1edad92c28ee4efc5037ee3d630" translate="yes" xml:space="preserve">
          <source>Get known XFS formatted devices on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add4dfcc0b47788c042e3a7b3f5f3f1f0490c7c8" translate="yes" xml:space="preserve">
          <source>Get labels from the current node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60924a41b2596c2dd65b909e9e7d53f832fe362" translate="yes" xml:space="preserve">
          <source>Get lifecycle information about an extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74d365f24626579385b04cc5dbf781f92e80303" translate="yes" xml:space="preserve">
          <source>Get list of all networks. This is helpful when looking up subnets to use with func:nextavailableip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c595eaf488de41cbad1d4852817df2a6c16887e" translate="yes" xml:space="preserve">
          <source>Get list of all subscriptions to a specific topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b235d898ab966f6101a75fbe3eeb8662c200506" translate="yes" xml:space="preserve">
          <source>Get list of available images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a380791b2a8d7d8d19ef5878c72583388b8778" translate="yes" xml:space="preserve">
          <source>Get list of configured NTP servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9549049d4754a71c3a5d04be6da4ac26ccc8a7fa" translate="yes" xml:space="preserve">
          <source>Get list of configured NTP servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fb2eed13c018d482b40a80ea66d47e3ab8ef9d" translate="yes" xml:space="preserve">
          <source>Get lock (with optional timeout)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3cee70f190d2b86170688f62decb2454f5c7a94" translate="yes" xml:space="preserve">
          <source>Get mac address from host record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb0c451be3a818dc679f460ea2752d6a9cb1cf7" translate="yes" xml:space="preserve">
          <source>Get major/minor info from a device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1468310c93bcf451594d953d3059748f086b30f0" translate="yes" xml:space="preserve">
          <source>Get matches for path expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592cefc4a6d3a8a5ae7ad7ea3fc4fe867fe67c32" translate="yes" xml:space="preserve">
          <source>Get max users in channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f229a0aa39caa6b9b27dbbc619aacf7cb451a4" translate="yes" xml:space="preserve">
          <source>Get members in a Redis set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f2ffafc6370a3698027a56fd535d6780506d7b" translate="yes" xml:space="preserve">
          <source>Get memcached status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42495e50ef7e9d7cd4ab661d10f900fb4197d338" translate="yes" xml:space="preserve">
          <source>Get metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eabdc6c1096dac095a6e473885fc7683f2b75ef" translate="yes" xml:space="preserve">
          <source>Get monitor data of the instance. If instance name is missing, will show all the instance monitor data on the region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666566c74d0583f25502184735434c7a86f186b5" translate="yes" xml:space="preserve">
          <source>Get new license(s) using from the Palo Alto Network Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804824a75d5a769f3c49350a9858cc50dee77be1" translate="yes" xml:space="preserve">
          <source>Get number of current sessions on server in backend (scur)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298a1f4af77d5e0ec891e0d5bd830015f1cd2bfc" translate="yes" xml:space="preserve">
          <source>Get objects from the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e921264388a4d2616b02d8a4f1e1deb468bdb8ef" translate="yes" xml:space="preserve">
          <source>Get one or all kubernetes namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd74e4e89168202275683750142ad7da939fd57" translate="yes" xml:space="preserve">
          <source>Get one or more salt process environment variables. Returns a dict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649da41110bb4bc0bd207117681a753e987853dd" translate="yes" xml:space="preserve">
          <source>Get package version information for the specified chroot (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ae4cc41fec2bce9d773144a007b3a2ef21e4ed" translate="yes" xml:space="preserve">
          <source>Get package version information for the specified jail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c987ec73035c434743a11e43dda21ee3f4edce42" translate="yes" xml:space="preserve">
          <source>Get package version information for the specified root (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4585c043b8f9596e4c1ff0bdd2c902b3aea45e" translate="yes" xml:space="preserve">
          <source>Get pillar data from Vault for the configuration &lt;code&gt;conf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8999d85e450ee4e5e3cacb3730624e91869d43" translate="yes" xml:space="preserve">
          <source>Get policy details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b4947335f533a8c989eb5f74ebdfaa8a8a3a12" translate="yes" xml:space="preserve">
          <source>Get princial details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ad6442a1a51ffce097de390d2e048a716fa96f" translate="yes" xml:space="preserve">
          <source>Get public addresses of some, or all EIPs associated with the current account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd686059a9cb81e58baf20e14f0e1a5f82cc5f52" translate="yes" xml:space="preserve">
          <source>Get raw infoblox object. This is a low level api call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff074059e1ccd7cb5184969149f5fa3eec0b38f" translate="yes" xml:space="preserve">
          <source>Get record information for the given zone_id on the given profile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762b3061de1455e202286a359ccb9ec0e6b80df7" translate="yes" xml:space="preserve">
          <source>Get redis key type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138b779f9388f509421091cb74238ddb4bf91120" translate="yes" xml:space="preserve">
          <source>Get redis key value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de171bf735dc4c22914ba525446fdd8254b7581" translate="yes" xml:space="preserve">
          <source>Get redis keys, supports glob style patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7682a40f977804bf2939f7ebff559d4748a746f6" translate="yes" xml:space="preserve">
          <source>Get redis server configuration values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8ad07fd0a9c025917f113321d92eff1588dbe9" translate="yes" xml:space="preserve">
          <source>Get replication group information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4fcb87cbf38e8fe7e42551ec03838a99cd25ed" translate="yes" xml:space="preserve">
          <source>Get resource permissions for the given lambda function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189b49d33baaaf2c43945e75316f63d462da1d0a" translate="yes" xml:space="preserve">
          <source>Get roles that the username is assigned from switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a5fba551dd23de385d84931d06f385c7362db4" translate="yes" xml:space="preserve">
          <source>Get sensor readings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28afcdd5c354f9e2e713754ffbe72f5a9232be2f" translate="yes" xml:space="preserve">
          <source>Get server weight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc9b3ec7e33b2ea3cb4e063d80bbe6b92ba9256" translate="yes" xml:space="preserve">
          <source>Get single user from MongoDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8961b87e0aac93a4fd76dd2495f4c4cdbc44b461" translate="yes" xml:space="preserve">
          <source>Get software information from PaloAlto Networks server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c049be3893569eebe12aa7e966835970ab5d35" translate="yes" xml:space="preserve">
          <source>Get specific field value from a redis hash, returns dict</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a098a9b745dded7207cba7c6c6cba9c0516e1c" translate="yes" xml:space="preserve">
          <source>Get status from mon daemon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d46c8a199fbfdf171465be26b30379cbf8d7d4b" translate="yes" xml:space="preserve">
          <source>Get status of running jboss instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a2e33a09ee234ce9574c40bf29fa27a9f01230" translate="yes" xml:space="preserve">
          <source>Get status of whether or not key rotation is enabled for a key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b557cf198769c0d7dec0b6ad37e3fad0296896e" translate="yes" xml:space="preserve">
          <source>Get system information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b655fd49028ffe970f1e75de234bcdb9fb114d" translate="yes" xml:space="preserve">
          <source>Get the ACL of an object. Will filter by user if one is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5b0b89625c32b9d7c4754939bd0e89bbbbfcdc" translate="yes" xml:space="preserve">
          <source>Get the C240 server BIOS token values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843421cb954d4b2ba7c557e0f09e153bdc11e5c3" translate="yes" xml:space="preserve">
          <source>Get the CIMC users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5b6ffd40e0eaf69b4cc5ecbcc886940ca43065" translate="yes" xml:space="preserve">
          <source>Get the CPU product ID details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f7087c3dccb1cfcec8639322948ce5747427de" translate="yes" xml:space="preserve">
          <source>Get the DNS server configuration from the candidate configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1032c95d0aa6e36feb8dd5eddbdb586adf9823" translate="yes" xml:space="preserve">
          <source>Get the Docker Swarm Manager or Worker join tokens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c363ecd100fb8cd1dfdee496fbdb8b74e85df0" translate="yes" xml:space="preserve">
          <source>Get the HDD product ID details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f7b7be1775776408a2eb0932ff396dbf090bee" translate="yes" xml:space="preserve">
          <source>Get the IMM/Memory unit product ID details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f8b7edec698691a861899708bce47b0b5a4524" translate="yes" xml:space="preserve">
          <source>Get the IP address of the VM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13969321fc5cf019391f38bd719a2a916e732811" translate="yes" xml:space="preserve">
          <source>Get the IP addresses that are permitted to establish management connections to the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644fb13045919530b6590bb849be55909b8beaa3" translate="yes" xml:space="preserve">
          <source>Get the IPGrant list for the SMTP virtual server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850196b2b54d67e5e4c381712ab66fb93bc21639" translate="yes" xml:space="preserve">
          <source>Get the List of identifiers in a particular party, optionally waiting for the specified minimum number of nodes (min_nodes) to appear</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a29efce1020735a58302a16b5c62972eaabcbb9" translate="yes" xml:space="preserve">
          <source>Get the NTP configuration from the candidate configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8865739ea048213dbcb437c72a2c1d9bec2a3f92" translate="yes" xml:space="preserve">
          <source>Get the NTP configuration information for a given host or list of host_names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e78731db7c718ca5b3db04265b60018eb53eaad" translate="yes" xml:space="preserve">
          <source>Get the PCI adapter product ID details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86352b0ec62dfc3e6873bd79bd736949040cdfc" translate="yes" xml:space="preserve">
          <source>Get the RelayIpList list for the SMTP virtual server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f40fe29b5edf0885cbd0b02b71d6d18a21f19ee" translate="yes" xml:space="preserve">
          <source>Get the SMTP virtual server names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9130065a094c07ba9326c33894f201093e879cb7" translate="yes" xml:space="preserve">
          <source>Get the SNMP configuration from the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a44b298011bc177e8e164e4842eeca34a258af" translate="yes" xml:space="preserve">
          <source>Get the Security ID for the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f287212f57f5bc89072919b9e4310e0f15c9fdf2" translate="yes" xml:space="preserve">
          <source>Get the Syslog client-server details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbde629ca372bd4c1efc0a4fec2c886a0e2dd08" translate="yes" xml:space="preserve">
          <source>Get the Syslog configuration settings from the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6575f0ba9a639612ba7509be3180f1d498cbca8" translate="yes" xml:space="preserve">
          <source>Get the UNIX time in seconds of the last successful save to disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc680857257034ae1958540a99b5e28fc8a3bbb" translate="yes" xml:space="preserve">
          <source>Get the VIC adapter general profile details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e86806dcba48a44f987d55914342054655f950" translate="yes" xml:space="preserve">
          <source>Get the VIC adapter uplink port details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951d6f8357478ae6653bd4fe13009880997203e1" translate="yes" xml:space="preserve">
          <source>Get the VMotion enabled status for a given host or a list of host_names. Returns &lt;code&gt;True&lt;/code&gt; if VMotion is enabled, &lt;code&gt;False&lt;/code&gt; if it is not enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca2e2a6b6677a3a8f6519cf9cda8edcd0d64bd3" translate="yes" xml:space="preserve">
          <source>Get the VSAN enabled status for a given host or a list of host_names. Returns &lt;code&gt;True&lt;/code&gt; if VSAN is enabled, &lt;code&gt;False&lt;/code&gt; if it is not enabled, and &lt;code&gt;None&lt;/code&gt; if a VSAN Host Config is unset, per host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcfdea1b08e2cb918c7c4096c1f981aa995732f" translate="yes" xml:space="preserve">
          <source>Get the Windows computer description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bd96251e422f5be52bcd7c7425143701bcdc4d" translate="yes" xml:space="preserve">
          <source>Get the Windows computer name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919128376c480508d2ee4ffcd5e5da10e2b3e825" translate="yes" xml:space="preserve">
          <source>Get the Windows system date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77afc9e9abb281f1e037fd13a75e9bbec5189e86" translate="yes" xml:space="preserve">
          <source>Get the active log format for the SMTP virtual server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a419a6bc5fa083dc405eab92deaac2869b27ab" translate="yes" xml:space="preserve">
          <source>Get the adapter Ethernet interface details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2e887d33445192693720c14ffcdf883e9b293f" translate="yes" xml:space="preserve">
          <source>Get the adapter fibre channel interface details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5534d7b08360e3baaab59ca9213d65813a8dcb2" translate="yes" xml:space="preserve">
          <source>Get the available certificates in the given store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8c7ffd7b88eedf7cdb2387c625dfdd75b5eafe" translate="yes" xml:space="preserve">
          <source>Get the backup of stored a configuration rollback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe8546b355a38db617993593a434a01bfd78a71" translate="yes" xml:space="preserve">
          <source>Get the broadcast address associated with a CIDR address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085c2a64c0d3a0d9ca6d124acb56fda9ab4a3fc1" translate="yes" xml:space="preserve">
          <source>Get the candidate configuration for the specified address group. This will not return address groups that are marked as pre-defined objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe4571079a512e639f16f0fbffb87df2a27da72" translate="yes" xml:space="preserve">
          <source>Get the candidate configuration for the specified get_address object. This will not return address objects that are marked as pre-defined objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ec89cb510d6ed259259b0992a6943becaeef34" translate="yes" xml:space="preserve">
          <source>Get the candidate configuration for the specified security rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86dcd666e120b46bec6a9324d9bb9c415db696c" translate="yes" xml:space="preserve">
          <source>Get the candidate configuration for the specified service group. This will not return service groups that are marked as pre-defined objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0156d525b9c39316390b078c3e75dbf0ecb517ed" translate="yes" xml:space="preserve">
          <source>Get the candidate configuration for the specified service object. This will not return services that are marked as pre-defined objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d114aaafd3558ef15aedecb9b65afe4cf14badb8" translate="yes" xml:space="preserve">
          <source>Get the candidate configuration for the specified zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b807485013580eeedc3567c00a2b817df90250f3" translate="yes" xml:space="preserve">
          <source>Get the certificate location contexts and their corresponding stores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36666cf8e94d1c4562df5ff71c3fdac3efa53a22" translate="yes" xml:space="preserve">
          <source>Get the certificate path or content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c00a0a408638598bfd135930fd7919658eed1fa" translate="yes" xml:space="preserve">
          <source>Get the cluster status, including health if in quorum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba076dca0bc32a37a57c322e8acd264a32773d73" translate="yes" xml:space="preserve">
          <source>Get the cluster's quorum status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06a4ab39f15fdf47f0c41b639c328a3c961e27f" translate="yes" xml:space="preserve">
          <source>Get the configuration for a cache cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838a1748efe79c41432bfa6bb392868518f54b6a" translate="yes" xml:space="preserve">
          <source>Get the configuration for a security group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b62720edab12583711403d0af591d994af827c4" translate="yes" xml:space="preserve">
          <source>Get the configuration for an autoscale group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062099d0ef1cc365eccf6375b3b5a799393b5398" translate="yes" xml:space="preserve">
          <source>Get the configuration for the specified pre-defined application object. This will only return pre-defined application objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22d9425208ab88a3b0c682cc4d86069cd353e37" translate="yes" xml:space="preserve">
          <source>Get the configuration of the device tree at the given path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49b578997ac4c8e6f83ed2da11cc6c5558e6d41" translate="yes" xml:space="preserve">
          <source>Get the configuration of the power settings from the device. This is only available on some C-Series servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b190d41511e78b79012f6ca794d3b7ffbcf3794" translate="yes" xml:space="preserve">
          <source>Get the configured lxc root for containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea8c12d86796901a8ee4f038bf2cca6c684afbf" translate="yes" xml:space="preserve">
          <source>Get the content of the docker-compose file into a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04552887b4fde974829ccded3cbd23612e5548c" translate="yes" xml:space="preserve">
          <source>Get the counter statistics for interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e131a8df996eb01995063411dc998b3a43585ffa" translate="yes" xml:space="preserve">
          <source>Get the current DSC Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bbbf6b2ee615ad99083a051e664c3974adc75b" translate="yes" xml:space="preserve">
          <source>Get the current Local Configuration Manager settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4ce75712cabf17c69226ad55ac4bae1b197b72" translate="yes" xml:space="preserve">
          <source>Get the current accepted SNMP community names and their permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba51a314c6d1d51698fd79d5b013e23d15a11bb" translate="yes" xml:space="preserve">
          <source>Get the current catalog being used for update lookups. Will return a url if a custom catalog has been specified. Otherwise the word 'Default' will be returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47178365173f5db7c88f663a46757a89bf864d4" translate="yes" xml:space="preserve">
          <source>Get the current disk timeout of the given scheme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be8bcadb0d6beaf59d80b40f1c2517983768c87" translate="yes" xml:space="preserve">
          <source>Get the current hibernate timeout of the given scheme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a78fbd4c8750f125ffa495b1cfe31c60b2d15f" translate="yes" xml:space="preserve">
          <source>Get the current monitor timeout of the given scheme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da3a62626b8f146863602ff52f4ca24259c3cf7" translate="yes" xml:space="preserve">
          <source>Get the current running config (not from disk)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2424424c02e1b47e870187c2c32a757008d0119" translate="yes" xml:space="preserve">
          <source>Get the current standby timeout of the given scheme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd1f9f7bbaffb1ff3bcaddd5dd2bbf62c359336" translate="yes" xml:space="preserve">
          <source>Get the current system locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243d89b92a036b26e088e4ba3545e2b54a17d15e" translate="yes" xml:space="preserve">
          <source>Get the current system time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32a263b0f1a4b362733df80b7536893e6377bde" translate="yes" xml:space="preserve">
          <source>Get the currently selected target for the given module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325951c8b3ecde9d585d08ce238931b8bf480d6e" translate="yes" xml:space="preserve">
          <source>Get the curret health check status for targets in a target group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250eec3ee4b2271924386262b3d8dd46dd486f07" translate="yes" xml:space="preserve">
          <source>Get the datacenter of the chassis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8052ce8069c0594738515d9a59fb21725cc9405e" translate="yes" xml:space="preserve">
          <source>Get the date/time information for a given host or list of host_names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6bf56b0da384ef210f4c830d6b8aa93ee40db4" translate="yes" xml:space="preserve">
          <source>Get the date/time of the last failed login attempt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1c075309c9dcc744dfea5967adb7e1dcdd28ca" translate="yes" xml:space="preserve">
          <source>Get the date/time the account was changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575d2504f120e6be3d442c04e041682fc9f6d5e6" translate="yes" xml:space="preserve">
          <source>Get the date/time the account was created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86aacc8516c345cc61db8cc8dd903c871779dd7" translate="yes" xml:space="preserve">
          <source>Get the default keychain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9e87d74e17c8317f81412017e69c3f899ada86" translate="yes" xml:space="preserve">
          <source>Get the default values of BIOS tokens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a767fd6a217722cd088dd41e67682b4c258d3d6d" translate="yes" xml:space="preserve">
          <source>Get the definition of the specified pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407a1d9783794ec6a217d3e4a3aa9e20f8e3a133" translate="yes" xml:space="preserve">
          <source>Get the details about a task in the task scheduler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbeb100d0efbc2e2913ca3eb67ea1b8f6bcb24c" translate="yes" xml:space="preserve">
          <source>Get the details for a container object (file or object in the cloud)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4e8bb53b3aab4bcd0c9145870867c41fbcad54" translate="yes" xml:space="preserve">
          <source>Get the details for a load balancer by ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b03d2c610baad6a6766ac5774e1dbe7db8a792" translate="yes" xml:space="preserve">
          <source>Get the details for a load balancer by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9b531d21988759b9c11f02715b9c983a87d71a" translate="yes" xml:space="preserve">
          <source>Get the details of a local PSGet repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024ac64099721afe9792ada7c74fe530911804eb" translate="yes" xml:space="preserve">
          <source>Get the details of the certificate file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff1f92a3a0c6ba4e1526b550b4ac1632596514d" translate="yes" xml:space="preserve">
          <source>Get the document with a given JID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58816f17cb62fbaa925fc7c329dc9e6ed3e9f2f8" translate="yes" xml:space="preserve">
          <source>Get the domain name configuration from the candidate configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c0234b30e1da222d2aca9e2f1d2f8b809a10d3" translate="yes" xml:space="preserve">
          <source>Get the domain or workgroup the computer belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd0a83fe314b5a9cff077b5c440f9b53c20819a" translate="yes" xml:space="preserve">
          <source>Get the fetch and push URL for a specific remote</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0974b295cf97ec9c525fb604324c69ed35f2a78a" translate="yes" xml:space="preserve">
          <source>Get the firewall property from the specified profile in the specified store as returned by &lt;code&gt;netsh advfirewall&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca0bd6745fb46b35def05e750c82d08e8be7a57" translate="yes" xml:space="preserve">
          <source>Get the friendly name of the given certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd0c59695879161a205caadc9a904afc0432cd0" translate="yes" xml:space="preserve">
          <source>Get the full replication details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71aad468a8de54fc8f3353e45cc4fee682aed5c7" translate="yes" xml:space="preserve">
          <source>Get the grains from the proxied device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061fee742919844efc16abb2c88092b105cebe60" translate="yes" xml:space="preserve">
          <source>Get the grains from the proxy device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c2123cc7ab7a586fc004d62c87bdef4f23eb1e" translate="yes" xml:space="preserve">
          <source>Get the handle for a particular rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8900c0c5e3388995738fbbd56c96b9d3f21636" translate="yes" xml:space="preserve">
          <source>Get the hash sum of a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48404830c9e187e277de4f027555cbee20da90a" translate="yes" xml:space="preserve">
          <source>Get the health check configured for this ELB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2443882efbfbdaa90ccd81679db356ec8165ffeb" translate="yes" xml:space="preserve">
          <source>Get the high availability configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5c7b01554074c8544b9a2fc5bb4dac12a1afff" translate="yes" xml:space="preserve">
          <source>Get the hostname of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8374af7c857064c94fe092caff4d1c078332bdf" translate="yes" xml:space="preserve">
          <source>Get the hostname of the windows minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcde1d470e3069876983e23b89dcc2dcf9f6eae" translate="yes" xml:space="preserve">
          <source>Get the image uuid from an imported docker image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461c79a3b60635d4ff7ba1b17ed0156f201854bb" translate="yes" xml:space="preserve">
          <source>Get the kapacitor version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a706da1169043cb511b6a5c34530519ecf09b3" translate="yes" xml:space="preserve">
          <source>Get the kernel architecture setting from &lt;code&gt;com.apple.Boot.plist&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315f790e76f8f8dfa202862e9a7d886dcf3a5d06" translate="yes" xml:space="preserve">
          <source>Get the length of a list in Redis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1f0cd0bc9bf7530839fa3845b36d5a245ea8a9" translate="yes" xml:space="preserve">
          <source>Get the length of a sorted set in Redis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ed884a8928362fd3185a3be1c8ac0041e15ac8" translate="yes" xml:space="preserve">
          <source>Get the list of network adapaters and configuration details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619496192cadad0f6283a62e7e7d50d8673d640a" translate="yes" xml:space="preserve">
          <source>Get the list of organisations a user belong to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b565b77b7872deb92c07751abf0d12eed5e6b0e" translate="yes" xml:space="preserve">
          <source>Get the list of users that belong to the organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aefa53362e03e91a83928e42ea9f66733d430c5" translate="yes" xml:space="preserve">
          <source>Get the local administrative user account configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120d4f0e7dea4a61a916b3021fba7b0d2926a082" translate="yes" xml:space="preserve">
          <source>Get the location of the chassis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18111d22da8e89f9637326b518779dbd4c2b301" translate="yes" xml:space="preserve">
          <source>Get the login class of the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268511237ba6bfc6d9f13a08aeaee5f115fe1b88" translate="yes" xml:space="preserve">
          <source>Get the many addresses of the Bluetooth adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7906838ea66423f86f405a0b9242636b7ef2d2" translate="yes" xml:space="preserve">
          <source>Get the master key properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1277010a92793b190b9856093d02268c3892b34c" translate="yes" xml:space="preserve">
          <source>Get the maximum age of the password</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a604ffe70f830cddbb10e07c28cea2b575a12191" translate="yes" xml:space="preserve">
          <source>Get the memory RAS BIOS token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262ccc1bfba174e4ba0416551191c5957c717407" translate="yes" xml:space="preserve">
          <source>Get the name of a chassis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744a28d8ef548a230bf925f356d57a9f303bffc7" translate="yes" xml:space="preserve">
          <source>Get the name of a slot number in the chassis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7bd83d2ccc1f903902de79fad8d19779458c46" translate="yes" xml:space="preserve">
          <source>Get the netmask address associated with a CIDR address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efd0520dad1447fa2a4dee5a6d92715d3e67024" translate="yes" xml:space="preserve">
          <source>Get the number of seconds after which the computer will start up after a power failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39707316ed3d71b21751d8bc5bafc33ede35dde" translate="yes" xml:space="preserve">
          <source>Get the operational state of a systemd based container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bd41fed9ff41e5789a9b952dbc8e9e28baf56c" translate="yes" xml:space="preserve">
          <source>Get the organization address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9da9ee999d26c09bb047149db04c80ca15bbb4a" translate="yes" xml:space="preserve">
          <source>Get the organization preferences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c6453f6794d5c787800ec67167c7c22c3f65f7" translate="yes" xml:space="preserve">
          <source>Get the output volume (range 0 to 100)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2823766c29cbff9ce563b59f4d7725bf9f92eabd" translate="yes" xml:space="preserve">
          <source>Get the percentage of relative humidity from the humidity sensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e3ab0aeb89381b22e822eafbe56121e8be165d" translate="yes" xml:space="preserve">
          <source>Get the permission types that can be configured for communities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3a9cfdb37586c286d1fa6b427ddadd7e8a9421" translate="yes" xml:space="preserve">
          <source>Get the pipeline id, if it exists, for the given name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185ad6fb1bd21ae757bc23fc18ef30b440f47127" translate="yes" xml:space="preserve">
          <source>Get the platform model information and limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f51f70d866d29f424fb27d10a320b2dd13ae8a6" translate="yes" xml:space="preserve">
          <source>Get the policy for the specified key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91affbb60902472de7251a2ee7f54b7758c04c46" translate="yes" xml:space="preserve">
          <source>Get the serial number of a certificate file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c1424b4e3ff71f4b624bb10db15d5ccb389738" translate="yes" xml:space="preserve">
          <source>Get the service name's policy for a given host or list of hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f9f81b9b2b272c5c3a2df43f2b6ea08e68b7af" translate="yes" xml:space="preserve">
          <source>Get the service name's running state for a given host or list of hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6116edf776171aade6f9e579d0a0c977d598e435" translate="yes" xml:space="preserve">
          <source>Get the size information for scsi devices. This option should be set to False for older OS distributions (RHEL6 and older) due to lack of support for the '-s' option in lsscsi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31085320453f006900fb0e1ee5197298ce087e8c" translate="yes" xml:space="preserve">
          <source>Get the snmp configuration details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdf58712a32fd8c0fb21288154fa9cd957c42ee" translate="yes" xml:space="preserve">
          <source>Get the status for a VM, either via the ID or the hostname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbffa6bc0c96b2295194a946353966b97e0014f5" translate="yes" xml:space="preserve">
          <source>Get the status of all the firewall profiles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e408920813e40dbc75eec1cce089e9ab96c7b6" translate="yes" xml:space="preserve">
          <source>Get the status of the current DSC Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619ad8a8b61ddb5e3afa0de5a2b0ff616ca69d2f" translate="yes" xml:space="preserve">
          <source>Get the summary from module monit and try to see if service is being monitored. If it is then stop monitoring the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3069f387136449736421255efe04049a823ff44" translate="yes" xml:space="preserve">
          <source>Get the summary from module monit and try to see if service is being monitored. If not then monitor the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b644f3c1a3cf100be5d4c38dc84b4b6d215bb119" translate="yes" xml:space="preserve">
          <source>Get the supported algorithms for a profile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566197a2032af30dda8309caf9f53ef4509ef11f" translate="yes" xml:space="preserve">
          <source>Get the sysServices types that can be configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15461e8d5a3c31f43393bfe6de9448ff6f0e7096" translate="yes" xml:space="preserve">
          <source>Get the system date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb419b2588082fdf36c3ea104f8fb2de515bed4" translate="yes" xml:space="preserve">
          <source>Get the system date/time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b764d08f20f390321378f16d24da80de5c0e236d" translate="yes" xml:space="preserve">
          <source>Get the system information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abaa59f639bbd351fd5b6fa594acc30fbaa6e3f5" translate="yes" xml:space="preserve">
          <source>Get the system time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8254a01244cb0accbd4653c8117ca2ca2bd1b524" translate="yes" xml:space="preserve">
          <source>Get the the number of failed login attempts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a244b121a7140c5fb4b1da11fd0f4488d4894ed" translate="yes" xml:space="preserve">
          <source>Get the type of DNS configuration (dhcp / static)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab47c75f6537fc2f64cd878abc26c601651ae86" translate="yes" xml:space="preserve">
          <source>Get the user list for a specific database on the MS SQL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a9188f77dc0a04a433cf5a19280ea3ee03e355" translate="yes" xml:space="preserve">
          <source>Get the username that salt-minion is running under. If salt-minion is running as a service it should return the Local System account. If salt is running from a command prompt it should return the username that started the command prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fd7a2b96a594814c5e09b29d4d6b35fd7d4746" translate="yes" xml:space="preserve">
          <source>Get the value for a specific configuration line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc39b3952a4ce2037d3cbdadf3ee8d146d3b8f1b" translate="yes" xml:space="preserve">
          <source>Get the value of CFLAGS variable in the make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d145479968b06f812ecb6c2c4d13f3c25a88bb" translate="yes" xml:space="preserve">
          <source>Get the value of CHOST variable in the make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabe850559521ad0968316b191dc819c1e97f8c5" translate="yes" xml:space="preserve">
          <source>Get the value of CXXFLAGS variable in the make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf48a7dc13bc33f6ff183e8fed94181b307ab15" translate="yes" xml:space="preserve">
          <source>Get the value of EMERGE_DEFAULT_OPTS variable in the make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17eddf3a252bd563afb1a732422051a18a778c46" translate="yes" xml:space="preserve">
          <source>Get the value of FEATURES variable in the make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3379a3353a3ce88ec577ba2ce7ff492ff8998a" translate="yes" xml:space="preserve">
          <source>Get the value of GENTOO_MIRRORS variable in the make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e999118fb4476c8ca8de2642742f2030006ba68c" translate="yes" xml:space="preserve">
          <source>Get the value of MAKEOPTS variable in the make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47143bf683a926b82036ce1dac8db171e52181fb" translate="yes" xml:space="preserve">
          <source>Get the value of SYNC variable in the make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abbf1492f497d4b04e665baf555031b1d47cc2f" translate="yes" xml:space="preserve">
          <source>Get the value of a key in the git configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06be6fdd5242edb0da16b7ab3db52beb5f0e7c04" translate="yes" xml:space="preserve">
          <source>Get the value of a key or keys in the git configuration file using regexes for more flexible matching. The return data is a dictionary mapping keys to lists of values matching the &lt;code&gt;value_regex&lt;/code&gt;. If no values match, an empty dictionary will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be30997e6a33423b1fb1192c30048c2093f64ad0" translate="yes" xml:space="preserve">
          <source>Get the value of a variable in make.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87939172266c56b26c864dbf6c22674101f2c310" translate="yes" xml:space="preserve">
          <source>Get the value of the setting for the IIS container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f67bc7052abc244635893b099356c9b2127591f" translate="yes" xml:space="preserve">
          <source>Get the value of the setting for the IIS web application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e403f8d96b0cc872ea05e730d151902a597888d4" translate="yes" xml:space="preserve">
          <source>Get the value of the setting for the SMTP virtual server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9a82fc28210e955a316acd1ce4d7ea13a7353b" translate="yes" xml:space="preserve">
          <source>Get the version of ceph installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fc850ec5263af32dc084c714494c90339c9d7b" translate="yes" xml:space="preserve">
          <source>Get the virtual server rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee495a3fc1687b8986fcf80dbbb0d7d4838333c" translate="yes" xml:space="preserve">
          <source>Get the zone ID for the given zone name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdde9fe234e1b7c863fce815161983deaea544af" translate="yes" xml:space="preserve">
          <source>Get user access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ba33360d6adf944903c847964515f344567200" translate="yes" xml:space="preserve">
          <source>Get user account details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761db4bc935fa107d96ba7858d9e81067296eb67" translate="yes" xml:space="preserve">
          <source>Get user data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6691efcfca04d6a45dc8bbaf2790658d5b17c7db" translate="yes" xml:space="preserve">
          <source>Get user from uid and access on channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f81ba7a58e638dbafc7fb1a05a7913809ee0ef" translate="yes" xml:space="preserve">
          <source>Get user information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d220894af3755ce8637c3cf2dc41e81eae2d3b97" translate="yes" xml:space="preserve">
          <source>Get user name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cc1af67e22d958aa1096af4aa2968add6530a2" translate="yes" xml:space="preserve">
          <source>Get username line from switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8807efca42b4148df971b7c0f9318fb56361a9e4" translate="yes" xml:space="preserve">
          <source>Get value of a key from a section in an ini file. Returns &lt;code&gt;None&lt;/code&gt; if no matching key was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f409c119b5ac6405d70243e0d5f58cdff2146db" translate="yes" xml:space="preserve">
          <source>Get value saved in znode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a0856fee8c231c5bf15506c793f8cad128de5e" translate="yes" xml:space="preserve">
          <source>Get values from the minion datastore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef00ce8ce0ec1dde1d250790edb3fa1a8dba8b2" translate="yes" xml:space="preserve">
          <source>Get verbose output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb35b3e4f946dcc2c133e10e5bbbebd61f7df74e" translate="yes" xml:space="preserve">
          <source>Get virtual block devices on VM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7d27dcab452cb911aa281dc64c7d6f21275cfc" translate="yes" xml:space="preserve">
          <source>Get whether or not the keyboard should be disabled when the X Serve enclosure lock is engaged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30777cb5b4b01a9c728ab9c5e9403040520b7e08" translate="yes" xml:space="preserve">
          <source>Get whether the idle activation is enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdd0d44a9c4750948eaf0aca0fcdd81e61c4477" translate="yes" xml:space="preserve">
          <source>Get zone information for the given zone_id on the given profile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468e8f0c7b2ab827a8f4aeabf7b98f43c2a1637d" translate="yes" xml:space="preserve">
          <source>Get/set Host Protected Area settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536efa029854d001f9c3945393b060b2904a6b5f" translate="yes" xml:space="preserve">
          <source>Geta list of storage repositories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca41540d3e215fb615c3c84943f6e895e63e614" translate="yes" xml:space="preserve">
          <source>Gets a list of DNS servers associated with the requested domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f736fd45df4dd85e4a882fc04d13f543dfa1b75" translate="yes" xml:space="preserve">
          <source>Gets all keys or filters them by name and returns a list. keynames (list):: A list of the names of keypairs to retrieve. If not provided, all key pairs will be returned. filters (dict) :: Optional filters that can be used to limit the results returned. Filters are provided in the form of a dictionary consisting of filter names as the key and filter values as the value. The set of allowable filter names/values is dependent on the request being performed. Check the EC2 API guide for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31152e67c6872356f0393e6f65a6ce063fb2b99f" translate="yes" xml:space="preserve">
          <source>Gets all of the proxy settings in one call, only available on Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1166dc7999b9023a64001ccb2a1d5d75a0967195" translate="yes" xml:space="preserve">
          <source>Gets all properties for all profiles in the specified store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7e0fa0ba807fcbc09d80543338f83c35e41be8" translate="yes" xml:space="preserve">
          <source>Gets all the properties for the specified profile in the specified store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d17671435e078423354d1f3be40a0bed069283" translate="yes" xml:space="preserve">
          <source>Gets info about the given api key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da7b6c4f7d4251502d3e1c03c27effd07b85147" translate="yes" xml:space="preserve">
          <source>Gets information about fund in the user's account. This method returns the following information: Available Balance, Account Balance, Earned Amount, Withdrawable Amount and Funds Required for AutoRenew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c832d42613e224ebe9d005bce71b6edf0f754967" translate="yes" xml:space="preserve">
          <source>Gets information about the defined API Deployments. Return list of api deployments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616b981a58590b0b48b8003966e224c13024ef13" translate="yes" xml:space="preserve">
          <source>Gets information about the defined API Keys. Return list of apiKeys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1777d57779181b2601c60511fedbc974979bed0" translate="yes" xml:space="preserve">
          <source>Gets latest snapshot of the given artifact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5790a9a83d6007866bcb7f47a7efb2bc21831cd7" translate="yes" xml:space="preserve">
          <source>Gets snapshot of the desired version of the artifact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8fab48e82e1d46385fea3c6c723843ca377149" translate="yes" xml:space="preserve">
          <source>Gets the computer name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51ad66a4870dc8e0dda160e3890ccb7492ca759" translate="yes" xml:space="preserve">
          <source>Gets the current IUSE flags from the tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a084838318325f2f6907cc778f878a7486428faa" translate="yes" xml:space="preserve">
          <source>Gets the current pressure in Millibars from the pressure sensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8185be9ce0122202261a39e6bef7b3576722a3" translate="yes" xml:space="preserve">
          <source>Gets the current setting for Auto Login</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4355a36db6bd96a208f36c6c142562960646b058" translate="yes" xml:space="preserve">
          <source>Gets the date on which the account expires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92dc2817e9ebcf13fc1cd0d402798ec76b1d512" translate="yes" xml:space="preserve">
          <source>Gets the date on which the password expires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dc14fee7992d8597ca91631d94995a1d044ed1" translate="yes" xml:space="preserve">
          <source>Gets the difference between the candidate and the current configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0b3235e61b446bcda7f03f26349a4288a9d94a" translate="yes" xml:space="preserve">
          <source>Gets the installed USE flags from the VARDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656b246ab50b20ca5e28432ac2757f137d455908" translate="yes" xml:space="preserve">
          <source>Gets the latest release of the artifact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32740920a5213e6e8c6396c51cfa55412a21013" translate="yes" xml:space="preserve">
          <source>Gets the local subnet name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07814772ced01cea8fa0b7d3138b4338f541ec3a" translate="yes" xml:space="preserve">
          <source>Gets the lucene version that solr is using. If you are running a multi-core setup you should specify a core name since all the cores run under the same servlet container, they will all have the same version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d898a3f0f3b37086c893b30105c718dcc8a68a31" translate="yes" xml:space="preserve">
          <source>Gets the names of team members in lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45e6b1b734639b0dead2c0753acd268494c980b" translate="yes" xml:space="preserve">
          <source>Gets the repo details for a given team as a dict from repo_name to repo details. Note that repo names are always in lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33407c48d02fcfd4b377ada730d6edfe465d5ca" translate="yes" xml:space="preserve">
          <source>Gets the solr version for the core specified. You should specify a core here as all the cores will run under the same servlet container and so will all have the same version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e82b68f1895ed4914752fdce64c4066f6c9dde" translate="yes" xml:space="preserve">
          <source>Gets the specified release of the artifact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7af8d105e3c9172b5a8a3d6665ba17419a0056e" translate="yes" xml:space="preserve">
          <source>Gets the temperature in degrees Celsius from the humidity sensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350b2a02fe8e6b90a093495993a53a8857e32772" translate="yes" xml:space="preserve">
          <source>Gets the temperature in degrees Celsius from the humidity sensor. Equivalent to calling &lt;code&gt;get_temperature_from_humidity&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4161871714719802bed989a92701a4b6a9bd0e" translate="yes" xml:space="preserve">
          <source>Gets the temperature in degrees Celsius from the pressure sensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ea991519947e806368720ca8dc29c9d83bbe33" translate="yes" xml:space="preserve">
          <source>Git Fileserver Backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd90a73712f13d78c208d2db66b8d5f3cd349b7" translate="yes" xml:space="preserve">
          <source>Git needs to be installed and available via PATH if pyenv is to be installed automatically by the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9208679a79e1b1dc5be5721a6fba7f56395c9a7b" translate="yes" xml:space="preserve">
          <source>Git remote to use. If this state needs to clone the repo, it will clone it using this value as the initial remote name. If the repository already exists, and a remote by this name is not present, one will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af8cf4e66492edb9de6c438f304fbac47130f26" translate="yes" xml:space="preserve">
          <source>Git tag of version to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7915123f4026a870fd70a382086ac778b22b350d" translate="yes" xml:space="preserve">
          <source>GitHub paginates data in their API calls. Use this value to increase or decrease the number of issues gathered from GitHub, per page. If not set, GitHub defaults are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5111006caa809eff5f56a97b3587ec0a7604b24d" translate="yes" xml:space="preserve">
          <source>GitHub paginates data in their API calls. Use this value to increase or decrease the number of issues gathered from GitHub, per page. If not set, GitHub defaults are used. Maximum is 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd1e6a8efe5b33655568f8e8163382cd9c63dad" translate="yes" xml:space="preserve">
          <source>GitHub paginates data in their API calls. Use this value to increase or decrease the number of pull requests gathered from GitHub, per page. If not set, GitHub defaults are used. Maximum is 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57e8352da29acce78124f87b04885feb2e40126" translate="yes" xml:space="preserve">
          <source>Github User State Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af941fd8f4d0d8a488a28be3c892a5b6740098b" translate="yes" xml:space="preserve">
          <source>Github handle of the user in organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9723420dabab00d35c7972e107c7d05ee247d77f" translate="yes" xml:space="preserve">
          <source>Given Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a301c2398b71f514cbaf91eb0d52803748d322f" translate="yes" xml:space="preserve">
          <source>Given VPC properties, return the VPC id if a match is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3240f3b35058c8ebd8bc6db84758f1d8cefbab9c" translate="yes" xml:space="preserve">
          <source>Given a VPC ID describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25635e5b0ee171df8eca67df7412f9ccd42b9da0" translate="yes" xml:space="preserve">
          <source>Given a VPC ID or VPC name, delete the VPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d496213380bf0f5dc9d1f52c5977a0c3c7e9c80e" translate="yes" xml:space="preserve">
          <source>Given a VPC ID or subnet CIDR, returns a list of associated subnets and their details. Return all subnets if VPC ID or CIDR are not provided. If a subnet id or CIDR is provided, only its associated subnet details will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67000f421506caacdcb324de3fe301238b060c7" translate="yes" xml:space="preserve">
          <source>Given a VPC ID, check to see if the given VPC ID exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b8eda45eb7754bfc8b78f8687f8350fe29d6ef" translate="yes" xml:space="preserve">
          <source>Given a bucket name describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad19bd9c471438f544ddb635087619290e0336f1" translate="yes" xml:space="preserve">
          <source>Given a bucket name, check to see if the given bucket exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d4c4fd41f73134839ad7c46066300fa4d443fd" translate="yes" xml:space="preserve">
          <source>Given a bucket name, delete it, optionally emptying it first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a609757504038f7d927d35d20a687538244199" translate="yes" xml:space="preserve">
          <source>Given a customer gateway ID or name, delete the customer gateway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f957b850490986a6c69dc77da1c9b9dffaa271a2" translate="yes" xml:space="preserve">
          <source>Given a customer gateway ID, check if the customer gateway ID exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366275231837af55835e76909a3225f476cc9b41" translate="yes" xml:space="preserve">
          <source>Given a domain name describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101129aecc90d60e532b8b7fce19d49a7b0772aa" translate="yes" xml:space="preserve">
          <source>Given a domain name describe its status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7129f81511502a8b5eb1f85de9bcb1ef5ca1146" translate="yes" xml:space="preserve">
          <source>Given a domain name, check to see if the given domain exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53421f2fd356083f6ffe60b14a9cccf8325fc843" translate="yes" xml:space="preserve">
          <source>Given a domain name, delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f5f31ddb3fa2d7915cfab91a41bda0def02e12" translate="yes" xml:space="preserve">
          <source>Given a function name and alias name describe the properties of the alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb39d14338755b017e43d05f3ddddbdfeec0bcf4" translate="yes" xml:space="preserve">
          <source>Given a function name and alias name, check to see if the given alias exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815eb04c4c88097c13e1ce89d2c467d3f11cdfa1" translate="yes" xml:space="preserve">
          <source>Given a function name and alias name, delete the alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7a552286240c358778f3531bc1dede93392a8b" translate="yes" xml:space="preserve">
          <source>Given a function name and optional version qualifier, delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1825983e47339aa50579d1afe38bdb4a0f6c839" translate="yes" xml:space="preserve">
          <source>Given a function name describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08abd4d7b92823b518ce1047a624375143891890" translate="yes" xml:space="preserve">
          <source>Given a function name, check to see if the given function name exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facacd890eaebf284cbb157f1079f029b702f6b7" translate="yes" xml:space="preserve">
          <source>Given a grains dictionary that contains the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d8856805be210b350f7a275ad4df628d31b945" translate="yes" xml:space="preserve">
          <source>Given a list of job_ids, return a dictionary of those job_ids that have completed and their results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72597ebf7df370d999b152438fc69ad69739a582" translate="yes" xml:space="preserve">
          <source>Given a list of security groups and a vpc_id, convert_to_group_ids will convert all list items in the given list to security group ids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d935fb294b8341e2cfae40b24428de6fbaeeafb7" translate="yes" xml:space="preserve">
          <source>Given a network acl and subnet ids or names, associate a network acl to a subnet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123ff21f0e44524291d3c3ed2aeeea53eb0ce2d4" translate="yes" xml:space="preserve">
          <source>Given a path, return a dict listing the total available space as well as the free space, and used space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9815d31acbc281a43d6e146c950a96754cbdd0a" translate="yes" xml:space="preserve">
          <source>Given a policy name and version ID, check to see if the given policy version exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3998b23a9686b278bb9e9de0fab8a0c2194cd701" translate="yes" xml:space="preserve">
          <source>Given a policy name and version describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9c31ba4f8bd81621d1ad051beffcf1a0286434" translate="yes" xml:space="preserve">
          <source>Given a policy name and version, delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77780e83cfce5d56b59f22dda574f9a76cc04ef4" translate="yes" xml:space="preserve">
          <source>Given a policy name describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7729914116287805506d7f3b7a67d5aa146bb11f" translate="yes" xml:space="preserve">
          <source>Given a policy name, check to see if the given policy exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e51884f943b186ce49715661e94aab523db8f83" translate="yes" xml:space="preserve">
          <source>Given a policy name, delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a49f6fb42f3a2e96ec69f9ef707305f407bccf" translate="yes" xml:space="preserve">
          <source>Given a resource type and name, return {exists: true} if it exists, {exists: false} if it does not exist, or {error: {message: error text} on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e955296b0c9c924f54456e2cea2ac5837b35da" translate="yes" xml:space="preserve">
          <source>Given a route table and subnet name or id, associates the route table with the subnet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323664ebfde3e0e8664e4ad2c2ad3b73cac64f6d" translate="yes" xml:space="preserve">
          <source>Given a rule name describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52085cbc1c3ccba65fa7b94faa0816c96d382a31" translate="yes" xml:space="preserve">
          <source>Given a rule name list the targets of that rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38f4fa84b35fe4e0ec544bec414b62a0a1c9431" translate="yes" xml:space="preserve">
          <source>Given a rule name remove the named targets from the target list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50497820d6776244b4175e7af94d1445360da927" translate="yes" xml:space="preserve">
          <source>Given a rule name, check to see if the given rule exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085b37e9935a9a67959d29afeb273f877785fc17" translate="yes" xml:space="preserve">
          <source>Given a rule name, delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9e9632e54d3282e34c5921dbffcbe50029afcb" translate="yes" xml:space="preserve">
          <source>Given a simple salt-ssh tree with a Saltfile:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda770a800e3a11737504ef8f9ff26292d03a634" translate="yes" xml:space="preserve">
          <source>Given a subnet (aka: a vpc zone identifier) or list of subnets, returns vpc association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278fcde711a63595a7c7ae28e1e21679d3487292" translate="yes" xml:space="preserve">
          <source>Given a subnet ID or name, delete the subnet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4ca4604560a1f0706948a10b6ee2d146caa522" translate="yes" xml:space="preserve">
          <source>Given a subnet ID, disassociates a network acl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767c4987bbe31bb96567829953057d5b2891ddcd" translate="yes" xml:space="preserve">
          <source>Given a subnet id or name, describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f43ba6a129c75aca6826bf1cf8870ef36c5eb78" translate="yes" xml:space="preserve">
          <source>Given a thing type name describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f8241cba00073d37e8f5ca68f3200139205688" translate="yes" xml:space="preserve">
          <source>Given a thing type name, check to see if the given thing type exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55783d78ab64c04bb8a836298f264261b9fe2c9b" translate="yes" xml:space="preserve">
          <source>Given a thing type name, delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93aaad8acf9d215ad6e5a92290ac68d5471ec4dd" translate="yes" xml:space="preserve">
          <source>Given a thing type name, deprecate it when undoDeprecate is False and undeprecate it when undoDeprecate is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8cf983e0a9368d17e990003bdabc28bd9a3569" translate="yes" xml:space="preserve">
          <source>Given a topic rule name describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3938292a688b757aa9780fee9280fcb76d4d35ab" translate="yes" xml:space="preserve">
          <source>Given a trail name describe its properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc684cc4e950080e305e4db7ede91327b24584ef" translate="yes" xml:space="preserve">
          <source>Given a trail name, check to see if the given trail exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc0d21d700a4e7a677be65207a5f29ae8d274ba" translate="yes" xml:space="preserve">
          <source>Given a trail name, delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c782d95cc58af5cbc820658d498685a7611481d4" translate="yes" xml:space="preserve">
          <source>Given a valid CIDR block, create a VPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc717f7c2254aa73f6bda9371e07fdbb57e4656f" translate="yes" xml:space="preserve">
          <source>Given a valid VPC ID or Name and a CIDR block, create a subnet for the VPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d9773f0811e9ab75a65eedd9cde0b483e9c20b" translate="yes" xml:space="preserve">
          <source>Given a valid VPN connection type, a static IP address and a customer gateway&amp;rsquo;s Border Gateway Protocol (BGP) Autonomous System Number, create a customer gateway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e717649066666b25a13e66bca01c6f6212587c44" translate="yes" xml:space="preserve">
          <source>Given a valid config, create a domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df22003346567faf6013bbb6d6c16baa901470a" translate="yes" xml:space="preserve">
          <source>Given a valid config, create a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9606e014ca4adf233b396a58fe7b558e746f79cf" translate="yes" xml:space="preserve">
          <source>Given a valid config, create a new version of a policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae0d0e8f2b53548b6c0defde861e860f7505e22" translate="yes" xml:space="preserve">
          <source>Given a valid config, create a policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15171a2d36f1780a9f2884c6a4c0bbec293b0ea7" translate="yes" xml:space="preserve">
          <source>Given a valid config, create a thing type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794b1223ef58bb43ab9daf2a350ed9b440295e62" translate="yes" xml:space="preserve">
          <source>Given a valid config, create a topic rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be677f43e28e752a737752b1dc5565bdb9d8912" translate="yes" xml:space="preserve">
          <source>Given a valid config, create a trail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fedbc5a90dfe53b161cf803ef1400de17ae6e31" translate="yes" xml:space="preserve">
          <source>Given a valid config, create an S3 Bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848a492e69a2c540f114b435cef74f5491293c47" translate="yes" xml:space="preserve">
          <source>Given a valid config, create an alias to a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c6e1719d0ef547f4a45cefd2eafb45f0a6f3ba" translate="yes" xml:space="preserve">
          <source>Given a valid config, create an event rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4419688bec229359c5443e8f71b219136dbce1" translate="yes" xml:space="preserve">
          <source>Given a valid config, replace a topic rule with the new values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03aa4f578a00b38beac62494923ca3fd3ebd333c" translate="yes" xml:space="preserve">
          <source>Given a valid config, update a trail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afb0f1b06a603b3bcba062ccd2d8568739ebd6e" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the ACL for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b942f58d6fd6e3eb2c76aa2a8841f1e419ab64e" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the CORS rules for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72dffe92597103e5a59127ab803df6ca94d973f" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the Lifecycle rules for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0bb328817e9a383b9d5c3e6595ab9200663e5f" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the logging parameters for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c7c67bdf6ddfbcfa2700e1c356010dea049edf" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the notification parameters for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2517dbab8c86854a521fcd54ce5dbe6f6ee210" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the policy for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbb05c5f74a5741eeedd1147bef9b0b324a0514" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the replication configuration for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785a07714d62c91d3178a21edade2ba27c9b21e6" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the request payment configuration for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a68b830c53b3aa3d70b8894da009e3c869f09f1" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the tags for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b638d405bc669adc2b93324ad1377cb851df7efc" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the versioning configuration for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b8dd326db753b36966ba8c87a70e6d2ac67013" translate="yes" xml:space="preserve">
          <source>Given a valid config, update the website configuration for a bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2f85b5515eedb0c3b471b344a4b935d9835c2f" translate="yes" xml:space="preserve">
          <source>Given a vpc_id, creates a network acl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b3be8595e59dd0533dae212176fdda5ff876d9" translate="yes" xml:space="preserve">
          <source>Given an email address, creates a notification-channels if one is not found and also returns the corresponding notification channel id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9b941d720dd60d6676284e0a6377b61db189f3" translate="yes" xml:space="preserve">
          <source>Given an event source and function name, return a list of mapping IDs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b460e3a5eaec698fc6a4ee42b21c893ef90f996" translate="yes" xml:space="preserve">
          <source>Given an event source mapping ID or an event source ARN and FunctionName, check whether the mapping exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6fa7a778715d69cfc2b7605c2c472030162bcd" translate="yes" xml:space="preserve">
          <source>Given an event source mapping ID or an event source ARN and FunctionName, delete the event source mapping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066764aa3620eb63f6dc1f603724c1230dc99a6f" translate="yes" xml:space="preserve">
          <source>Given an event source mapping ID or an event source ARN and FunctionName, obtain the current settings of that mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5830ae082bcf697ce9e79fd0b58da883d8359e98" translate="yes" xml:space="preserve">
          <source>Given an identity pool id, set the given AuthenticatedRole and UnauthenticatedRole (the Role can be an iam arn, or a role name) If AuthenticatedRole or UnauthenticatedRole is not given, the authenticated and/or the unauthenticated role associated previously with the pool will be cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98dc3c6aedd1ae8e505930d2ed4a9baac68a621" translate="yes" xml:space="preserve">
          <source>Given an identity pool name, (optionally if an identity pool id if given, the given name will be ignored)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084df90b808fe8e511bf3236c82277f3ce8f2c9e" translate="yes" xml:space="preserve">
          <source>Given an identity pool name, (optionally if an identity pool id is given, the given name will be ignored)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd18e8bb56a127bcabd8924299e4c7fef6e6a8dc" translate="yes" xml:space="preserve">
          <source>Given an image name (or partial image ID), return the full image ID. If no match is found among the locally-pulled images, then &lt;code&gt;False&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf5f73665cfc7cd1c1a1de157eef0a0f4bca314" translate="yes" xml:space="preserve">
          <source>Given an instance id, check to see if the given instance id exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b539c7f5049407c6b31ec0983e31861cd4beeb30" translate="yes" xml:space="preserve">
          <source>Given an instance_id, return a list of tags associated with that instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c558c1d85e168dd185b3bb716a47a0675c2e07" translate="yes" xml:space="preserve">
          <source>Given image properties, find and return matching AMI ids</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88354641697865386dc2598612005f8cdc3df4cb" translate="yes" xml:space="preserve">
          <source>Given instance properties that define exactly one instance, create AMI and return AMI-id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c3730e15373fe9c329557b61e014b791c958a6" translate="yes" xml:space="preserve">
          <source>Given instance properties, find and return matching instance ids</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81cebcf76377137878a48417bfc057f056fcc0a" translate="yes" xml:space="preserve">
          <source>Given instance properties, return the instance id if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd5dfaf2ebf48d20b72e78f448dbf8b24fccd6a" translate="yes" xml:space="preserve">
          <source>Given rest api id, and an absolute resource path, create all the resources and return all resources in the resourcepath, returns False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e416dce5570348820d9fa383b9cce4b369552f2" translate="yes" xml:space="preserve">
          <source>Given rest api id, and an absolute resource path, returns the resource id for the given path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d952a0d49cceff1c492a4c00e007286854556787" translate="yes" xml:space="preserve">
          <source>Given rest api id, resource path, and http method (must be one of DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT), return the method for the api/resource path if defined. Return False if method is not defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e36a250fe422a0704ebd85b3a3648d64a62276" translate="yes" xml:space="preserve">
          <source>Given rest api id, return all resources for this api.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025db7d6b25b926778f584cc6b465e353af7a244" translate="yes" xml:space="preserve">
          <source>Given restApiId and an absolute resource path, delete the resources starting from the absolute resource path. If resourcepath is the root resource '/', the function will return False. Returns False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172764a3fa4e3e231b92d5154b7da667b74d0c66" translate="yes" xml:space="preserve">
          <source>Given route table properties, return details of all matching route tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627df3573ba5c310f5719d2e2bb51b6fdd409252" translate="yes" xml:space="preserve">
          <source>Given route table properties, return route table details if matching table(s) exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7789e2770bed15dbf71a5cb79274e8a9b5e961" translate="yes" xml:space="preserve">
          <source>Given the above example, &lt;code&gt;os_family&lt;/code&gt; matches will be processed first, with &lt;code&gt;os&lt;/code&gt; matches processed after. This would have the effect of assigning &lt;code&gt;smbd&lt;/code&gt; as the &lt;code&gt;service&lt;/code&gt; attribute on Ubuntu minions. If the &lt;code&gt;priority&lt;/code&gt; item was not defined, or if the order of the items in the &lt;code&gt;priority&lt;/code&gt; tuple were reversed, Ubuntu minions would have a &lt;code&gt;service&lt;/code&gt; attribute of &lt;code&gt;samba&lt;/code&gt;, since &lt;code&gt;os_family&lt;/code&gt; matches would have been processed second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194cb64b0567142760e30d0614d8ae4de5eb3513" translate="yes" xml:space="preserve">
          <source>Given the above example, the following is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab8a80abe34ce5b55c28369317155624d6a51eb" translate="yes" xml:space="preserve">
          <source>Given the above, the chip is 'coretemp-isa-0000'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca4ad8cbad913f84d60c9e9195d56e9ffd415c7" translate="yes" xml:space="preserve">
          <source>Given the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa1e64ae2776efcc6dd047ea1e1f0c3513cd177" translate="yes" xml:space="preserve">
          <source>Given the package destination directory, the spec file source and package sources, use mock to safely build the rpm defined in the spec file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fa0f04b538208c4a5573e794d77e04f36829a6" translate="yes" xml:space="preserve">
          <source>Given the package destination directory, the tarball containing debian files (e.g. control) and package sources, use pbuilder to safely build the platform package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb71bc552461d88d2dcb21b341a57b8e77a9db96" translate="yes" xml:space="preserve">
          <source>Given the performance overhead and HTTP timeouts for long-running operations described above, the most effective and most scalable way to use both Salt and salt-api is to run commands asynchronously using the &lt;code&gt;local_async&lt;/code&gt;, &lt;code&gt;runner_async&lt;/code&gt;, and &lt;code&gt;wheel_async&lt;/code&gt; clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08213e6a59ed45217826c97965b02d8f9769e2c0" translate="yes" xml:space="preserve">
          <source>Given the repodir (directory to create repository in), create a Debian repository and optionally sign it and packages present. This state is best used with onchanges linked to your package building states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edee0679ca011fd3c1244a96a5c78c105365ec55" translate="yes" xml:space="preserve">
          <source>Given the repodir, create a &lt;code&gt;yum&lt;/code&gt; repository out of the rpms therein and optionally sign it and packages present, the name is directory to turn into a repo. This state is best used with onchanges linked to your package building states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c2e2110cecce773a000f596d367b29a6dd42cf" translate="yes" xml:space="preserve">
          <source>Given valid DHCP options id and a valid VPC id, associate the DHCP options record with the VPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ef9bdf5f255ad7660d6f900ef7441d4f496118" translate="yes" xml:space="preserve">
          <source>Given valid DHCP options, create a DHCP options record, optionally associating it with an existing VPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a71be2478f1858618985ba139b95dd85f173baa" translate="yes" xml:space="preserve">
          <source>Glance module for interacting with OpenStack Glance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcec6f2010dc839ff2432ede652bcb740bf22fe8" translate="yes" xml:space="preserve">
          <source>Glob Target to match minion ids</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78ee1bbc28ed1995ed7a494f91f04d2c8c19242" translate="yes" xml:space="preserve">
          <source>Glob or regex to exclude certain files from being cached from the given path. If matching with a regex, the regex must be prefixed with &lt;code&gt;E@&lt;/code&gt;, otherwise the expression will be interpreted as a glob.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16fcc52948e43e750076ad613149d9e8276042b" translate="yes" xml:space="preserve">
          <source>Glob or regex to narrow down the files cached from the given path. If matching with a regex, the regex must be prefixed with &lt;code&gt;E@&lt;/code&gt;, otherwise the expression will be interpreted as a glob.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb546cdf9b9030cbf827275b8ac4d5c3ff6a2b5" translate="yes" xml:space="preserve">
          <source>Global secondary indexes (GSIs) are managed with some exceptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c643380cd5284883588bb767873877cc699afaf4" translate="yes" xml:space="preserve">
          <source>Globbing is supported (i.e. &lt;code&gt;/var/log/foo/*.log&lt;/code&gt;, but if globbing is being used then the path should be quoted to keep the shell from attempting to expand the glob expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce37b528f155cd587dc2b76e490d9eea4fb2292" translate="yes" xml:space="preserve">
          <source>Glue execution module to link to the &lt;a href=&quot;../../proxy/all/salt.proxy.fx2#module-salt.proxy.fx2&quot;&gt;&lt;code&gt;fx2 proxymodule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc75355d18dd350201ed996873e4fc8a5a3f72f6" translate="yes" xml:space="preserve">
          <source>Glues the VMware vSphere Execution Module to the VMware ESXi Proxy Minions to the &lt;a href=&quot;../../proxy/all/salt.proxy.esxi#module-salt.proxy.esxi&quot;&gt;&lt;code&gt;esxi proxymodule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d98a65b93fb08979dd9adb702d728fa46077c70" translate="yes" xml:space="preserve">
          <source>Go through Zabbix object params specification and if needed get given object ID from Zabbix API and put it back as a value. Definition of the object is done via dict with keys &quot;query_object&quot; and &quot;query_name&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85da47176b2a4485c1818a5699487d198bbfe0e" translate="yes" xml:space="preserve">
          <source>GoGrid Cloud Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b447a84c22948b6dce89083b99f19050cd3e10" translate="yes" xml:space="preserve">
          <source>Google Compute Engine Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edee3b26ce9c8f7ec4e668623a58f8150237909f" translate="yes" xml:space="preserve">
          <source>Grab data from consul, trim base path and remove any keys which are folders. Take the remaining data and send it to be formatted in such a way as to be used as pillar data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fcad62007e1c3b4679d228824e373912d62abb" translate="yes" xml:space="preserve">
          <source>Grab the current network settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e387111db89a368b3a271dca196318c2f69aeda6" translate="yes" xml:space="preserve">
          <source>Grabs external pillar data based on configured function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2f5cd5df8561b8f761b224065df34e2513d0a4" translate="yes" xml:space="preserve">
          <source>Gracefully shutdown the specified zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44ad94776d5b1dee7877401fac0c6b31cd4b54b" translate="yes" xml:space="preserve">
          <source>Grafting data from files to arbitrary namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92259eeb8acf0b7bfa6bdc524c995f95588bad7" translate="yes" xml:space="preserve">
          <source>Grains for junos. NOTE this is a little complicated--junos can only be accessed via salt-proxy-minion.Thus, some grains make sense to get them from the minion (PYTHONPATH), but others don't (ip_interfaces)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aaae56fce6e9aa249ce094ac33d78fbf21f46d1" translate="yes" xml:space="preserve">
          <source>Grains from cloud metadata servers at 169.254.169.254</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc62daca5c11fcff546c1cb1e2654a1c1bfdfab2" translate="yes" xml:space="preserve">
          <source>Grains set or altered with this module are stored in the 'grains' file on the minions, By default, this file is located at: &lt;code&gt;/etc/salt/grains&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae55581dd13ec5b8d9c9462dc1a5b7ea15c7dfc" translate="yes" xml:space="preserve">
          <source>Grains set or altered with this module are stored in the 'grains' file on the minions. By default, this file is located at: &lt;code&gt;/etc/salt/grains&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fe45fa629010650a12b0c989e65a83f1295d61" translate="yes" xml:space="preserve">
          <source>Grant a privilege on a database to a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa2ab2a1b46e23d11405dd50cc7f74bafbdf0f5" translate="yes" xml:space="preserve">
          <source>Grant a role in a project/domain to a user/group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e471f404f5b8a4ae4c7534a9bdc593b744a0508" translate="yes" xml:space="preserve">
          <source>Grant access to auto-mounted shared folders to the users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5c6a12b310c1d67f7b94dc7c0f725bd6c7a2e0" translate="yes" xml:space="preserve">
          <source>Grant cluster administration privileges to a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c9761e5cf293766767e67b12bd74de69416ccd" translate="yes" xml:space="preserve">
          <source>Grant one or many roles to a MongoDB user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8a6646b22f439e26cd2a1d4a70bb44ab937b41" translate="yes" xml:space="preserve">
          <source>Grant permissions to a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074b549125b0a0d33401fd706e55a75d9899491e" translate="yes" xml:space="preserve">
          <source>Grant privileges on a postgres object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1a20745602473571fec50f3d142c362cdd4f1c" translate="yes" xml:space="preserve">
          <source>Grant the requested privilege(s) on the specified object to a role</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad11d1c84978ce0db8a3585c1124fff3b0fbdbf5" translate="yes" xml:space="preserve">
          <source>Graphics Definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb357ff4151584b4211c481228c43f5cf9b0759" translate="yes" xml:space="preserve">
          <source>Graphics device to create for the new virtual machine. See &lt;a href=&quot;../../modules/all/salt.modules.virt#init-graphics-def&quot;&gt;Graphics Definition&lt;/a&gt; for more details on this dictionary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36b4565188d199094e34a6c2468517563d4872e" translate="yes" xml:space="preserve">
          <source>Graphics type. The possible values are &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;'spice'&lt;/code&gt;, &lt;code&gt;'vnc'&lt;/code&gt; and other values allowed as a libvirt graphics type (Default: &lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a445dd2ce8412f5ad94327b08c2edc37509bfcd" translate="yes" xml:space="preserve">
          <source>Grep for a string in the specified file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb45f810155f54c4dd8e8d2e52af7852595204d" translate="yes" xml:space="preserve">
          <source>Group Associations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099026c4f0d969eeee86af08c3d877ebae1016f3" translate="yes" xml:space="preserve">
          <source>Group Id of the artifact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f90fa2556067ec60362ebe448a851961df0163" translate="yes" xml:space="preserve">
          <source>Group Policy Required (Read-only):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2836bbcdf34e1f948a69cf44cf9027e3c56eb15d" translate="yes" xml:space="preserve">
          <source>Group name under with device will appear in Server Density dashboard. Default -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35b1728cadd5b31d38b689f66d36b5ccb42235c" translate="yes" xml:space="preserve">
          <source>Group owner of file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1166b35afbc959a28a327cdb0819188663e2b5" translate="yes" xml:space="preserve">
          <source>Group to run script as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1694991257ac4601af6fb036b48bd8b2fa6091dd" translate="yes" xml:space="preserve">
          <source>Group to set privilege to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db99fb9a95433654c3717e1adf8992078d69b6e" translate="yes" xml:space="preserve">
          <source>Groups to set for the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361d7218044ef21bf5c8aff89acb7dac4f6bc9aa" translate="yes" xml:space="preserve">
          <source>Groups to which the user should belong, can be passed either as a python list or a comma-separated string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4e4ef73201c7c343428b43298247485f12b3a1" translate="yes" xml:space="preserve">
          <source>Guarantees that the source directory is always copied to the target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ad4fcf78da2db98431d3afe5e4cbae0ae79bbd" translate="yes" xml:space="preserve">
          <source>H3c S5800 Series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57af1bc3aafce661e38ac7324a9c08c812f5c9f7" translate="yes" xml:space="preserve">
          <source>HH:MM (24 hour)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c0589ee4e9a37148ba37440d5d8e725f081946" translate="yes" xml:space="preserve">
          <source>HH:MM AM/PM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b804aee1910a337e47e2de3676b4df82324fce7c" translate="yes" xml:space="preserve">
          <source>HH:MM:SS (24 hour)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d9c92e9fc8674763af960ca01a7d0d6525f3aa" translate="yes" xml:space="preserve">
          <source>HH:MM:SS AM/PM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc172effaba8bacd2a947cfe2e8147256d6b6b86" translate="yes" xml:space="preserve">
          <source>HKEY_CLASSES_ROOT (HKCR)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6cb05c95ff7249fc826f885118b86b361eb552" translate="yes" xml:space="preserve">
          <source>HKEY_CLASSES_ROOT or HKCR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4a7fa5213b95631a285df85e57f30129259f71" translate="yes" xml:space="preserve">
          <source>HKEY_CURRENT_CONFIG</source>
          <target state="translated">HKEY_CURRENT_CONFIG</target>
        </trans-unit>
        <trans-unit id="0d3c6b4743d0a6b004aa7dd218855fa3430a3b8a" translate="yes" xml:space="preserve">
          <source>HKEY_CURRENT_CONFIG or HKCC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f25099303fcd1db4e160eff921ffb793c150f2" translate="yes" xml:space="preserve">
          <source>HKEY_CURRENT_USER</source>
          <target state="translated">HKEY_CURRENT_USER</target>
        </trans-unit>
        <trans-unit id="5921965abb1efc651f7b59953c97b931e9197b5f" translate="yes" xml:space="preserve">
          <source>HKEY_CURRENT_USER or HKCU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d333ae5ab42a3b74a802ce74e184a3ec1ae49f" translate="yes" xml:space="preserve">
          <source>HKEY_CURRENT_USER(HKCU)</source>
          <target state="translated">HKEY_CURRENT_USER(HKCU)</target>
        </trans-unit>
        <trans-unit id="52d7f4c2fb762010c6925a7a75c9df061c569c7a" translate="yes" xml:space="preserve">
          <source>HKEY_LOCAL MACHINE (HKLM)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec9574c1454e751aa663466765b0866e7160435" translate="yes" xml:space="preserve">
          <source>HKEY_LOCAL_MACHINE</source>
          <target state="translated">HKEY_LOCAL_MACHINE</target>
        </trans-unit>
        <trans-unit id="dc9decdb71f7270cfb4e45ebb99fd0c216271e36" translate="yes" xml:space="preserve">
          <source>HKEY_LOCAL_MACHINE or HKLM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4754e6824e536e81dad3ca5c7d0b2ee80816711" translate="yes" xml:space="preserve">
          <source>HKEY_USER</source>
          <target state="translated">HKEY_USER</target>
        </trans-unit>
        <trans-unit id="826e99f7aec0886d2b2de97e151f0b859a0e2d78" translate="yes" xml:space="preserve">
          <source>HKEY_USER (HKU)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a812f50eb21ed03b7f27fb964cb87b7a7cd6bf0" translate="yes" xml:space="preserve">
          <source>HKEY_USER or HKU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2589c00d9e89a321c8e9d383999461f15c8c8b7" translate="yes" xml:space="preserve">
          <source>HKEY_USERS or HKU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e779dbdcea2f6627c2d8a0d68c273ebbb037fd" translate="yes" xml:space="preserve">
          <source>HKLMSOFTWAREPython 'HKLMSOFTWAREPython'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2f3c1ccd59456c24b16cb7a3ea2643abf64d52" translate="yes" xml:space="preserve">
          <source>HTTP Basic Auth password for HTTPS (only) clones</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090fcc9f16bc7cee0726eec4adae021a9c0affde" translate="yes" xml:space="preserve">
          <source>HTTP Basic Auth username for HTTPS (only) clones</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fef3d1a924d9dc1e726c5d7dc4b2165d6587737" translate="yes" xml:space="preserve">
          <source>HTTP Logstash engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6ebd35ba12cbb36163d6b20913e7748e5f20c5" translate="yes" xml:space="preserve">
          <source>HTTP base URL for a custom endpoint, such as Azure Stack. The &lt;code&gt;/metadata/endpoints&lt;/code&gt; path will be added to the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f5369e351374a23c2268cf37bc9c52b487beca" translate="yes" xml:space="preserve">
          <source>HTTP monitoring states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9922f2086b5eaa52acb57e925ead8704d0871f7" translate="yes" xml:space="preserve">
          <source>HTTP/HTTPS server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e189793e472eea26400065e92e9f53f689ca6f" translate="yes" xml:space="preserve">
          <source>Halt a running system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cb8b5968bfe5d2a0c1ba441cc43c51a7ffc4d5" translate="yes" xml:space="preserve">
          <source>Halt a running system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfec015e8c23c54772363684aa2d4dc402195750" translate="yes" xml:space="preserve">
          <source>Halt the specified zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d22d241573cdb2e728f738c68b30d374546d32" translate="yes" xml:space="preserve">
          <source>Handle RPM field errors. If 'ignore' is chosen, then various mistakes are simply ignored and omitted from the texts or strings. If 'report' is chonen, then a field with a mistake is not returned, instead a 'N/A (broken)' (not available, broken) text is placed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04dbdb3576ca0d7cd07a2ce83002677c6460fd08" translate="yes" xml:space="preserve">
          <source>Handle configured proxies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbd849d2ef095d754bda23a43b87c1be306170b" translate="yes" xml:space="preserve">
          <source>Handle for the &lt;em&gt;volatile&lt;/em&gt; database, which serves the purpose of caching the inspected data. This database can be destroyed or corrupted, so it should be simply re-created from scratch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a83fd761c0145b85de479749fe178cb408a194" translate="yes" xml:space="preserve">
          <source>Handle requests for the &lt;a href=&quot;https://www.statuspage.io/&quot;&gt;StatusPage&lt;/a&gt;&lt;a href=&quot;http://doers.statuspage.io/api/v1/&quot;&gt;API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0212bf33313087973171061ef96d564becfb55" translate="yes" xml:space="preserve">
          <source>Handler</source>
          <target state="translated">Handler</target>
        </trans-unit>
        <trans-unit id="6ee2edec51b026769f7ef7fd9a65076266a3630d" translate="yes" xml:space="preserve">
          <source>Hard power down the virtual machine, this is equivalent to powering off the hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f834bd96941f1cce53e48edb03efcc86bf8cf57" translate="yes" xml:space="preserve">
          <source>Hard power down the virtual machine, this is equivalent to pulling the power</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797e564182900d15d3752a1ac1c3015890b20f21" translate="yes" xml:space="preserve">
          <source>Hard power down the virtual machine, this is equivalent to pulling the power.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4892af79e8285ff6e66a6c4020c305e2d0f4dca7" translate="yes" xml:space="preserve">
          <source>Hard shutdown the virtual machine. (vagrant halt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c51d0baee793631785969e65bb75f9f347f5c9e" translate="yes" xml:space="preserve">
          <source>Hard-limit size of the volume (MB/GB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3a949231134aa666af2220068ee69f404f2226" translate="yes" xml:space="preserve">
          <source>Hardware Security</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e655d2cb83ef6103748a4a37fe473f8f120d6f4" translate="yes" xml:space="preserve">
          <source>Hash algorithm to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcbb837b5864086ac66f2a381f51006c142b16f" translate="yes" xml:space="preserve">
          <source>Hash all hostnames and addresses in the known hosts file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5344725ccbf5f4a6b936b6e6882199de2f34ae20" translate="yes" xml:space="preserve">
          <source>Hash all the hostnames in the known hosts file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3b6818a11435a670e0b538e2e054b5bec0f8b4" translate="yes" xml:space="preserve">
          <source>Hash file/expression, as used in &lt;a href=&quot;../../states/all/salt.states.file#module-salt.states.file&quot;&gt;&lt;code&gt;file&lt;/code&gt;&lt;/a&gt; and other states. If this value refers to a remote URL or absolute path to a local file, it will be cached and &lt;a href=&quot;#salt.modules.file.extract_hash&quot;&gt;&lt;code&gt;file.extract_hash&lt;/code&gt;&lt;/a&gt; will be used to obtain a hash from it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c2e107abbad66720125adedb6c50fac518178f" translate="yes" xml:space="preserve">
          <source>Hash of source file, or file with list of hash-to-file mappings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9436d1b709a4bbd7650866bc47b489f07906a8" translate="yes" xml:space="preserve">
          <source>Hash of the template file. Format: &lt;code&gt;{hash_type: 'md5', 'hsum': &amp;lt;md5sum&amp;gt;}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc51ec0734612c4b12d1a7971fc52cad0d479bf" translate="yes" xml:space="preserve">
          <source>Have private gpg loaded into &lt;code&gt;user&lt;/code&gt;'s gpg keyring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197d605aeda44397f796a9f2094721bc4c0dd8be" translate="yes" xml:space="preserve">
          <source>Having multiple sources in the same release may result in the default install candidate being newer than what is desired. If this is the case, the desired version must be specified using the &lt;code&gt;version&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d919e5555ab268334eae1529d41bb4e3dea888f6" translate="yes" xml:space="preserve">
          <source>Health information about the registered node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbd604f5080fefac2fb8aea6b399edf553d3e6e" translate="yes" xml:space="preserve">
          <source>Health information about the registered service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e08863a25d4f927b528b3f8f913988e02520faa" translate="yes" xml:space="preserve">
          <source>Health information about the requested node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceda24baab0401c938a082384358c991e5763d48" translate="yes" xml:space="preserve">
          <source>Healthcheck type. HTTP | HTTPS | HTTP_STR_MATCH | HTTPS_STR_MATCH | TCP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e859cc333f0c516107ec5daf5608359fab185128" translate="yes" xml:space="preserve">
          <source>Helper class that implements a hash function for a dictionary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d9139efb72543c924865980a7dd95fb1d06ca2" translate="yes" xml:space="preserve">
          <source>Helper function that sets the salt design document. Uses get_valid_salt_views and some hardcoded values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4576ae0be094dd9e0c1e48479b822bd882d874b" translate="yes" xml:space="preserve">
          <source>Helper function to test cross-calling to the __proxy__ dunder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdc3a7318e8e51d7993ad4251d6bd9f9d992135" translate="yes" xml:space="preserve">
          <source>Helper method for absent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9768a7fd497785ed600abdc116871d0c4f45db" translate="yes" xml:space="preserve">
          <source>Helper that can be used inside a state SLS, in order to get the filter configuration given its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e2b29e38f8ead32fb64f39e6797d40f68d7f7b" translate="yes" xml:space="preserve">
          <source>Helper that can be used inside a state SLS, in order to get the term configuration given its name, under a certain filter uniquely identified by its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10953aad40f486311c9d63865975ad94b97bbea2" translate="yes" xml:space="preserve">
          <source>Helpers for the NAPALM modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3fc3dac7c2610f19172d33b654b99f82029bf8" translate="yes" xml:space="preserve">
          <source>Here are a few examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6252b8967b760e887e64f4271afdb9663f2be3" translate="yes" xml:space="preserve">
          <source>Here are some other examples using the modern &lt;code&gt;module.run&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505b0be60a9ba0a3726451d9162de279ceb7a6c7" translate="yes" xml:space="preserve">
          <source>Here is a basic example of printing each event as it comes in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc915da19ad2c04cf86052dd32819276a887031" translate="yes" xml:space="preserve">
          <source>Here is a list of keywords hidden by the state system, which must be prefixed with &lt;code&gt;m_&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93da4a6a59c289a6b793ecd2c94574bcb947dd79" translate="yes" xml:space="preserve">
          <source>Here is a simple example scenario. In this example &lt;code&gt;ca&lt;/code&gt; is the ca server, and &lt;code&gt;www&lt;/code&gt; is a web server that needs a certificate signed by &lt;code&gt;ca&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fd58b1f3bb8d0c001fcedc2bc5e03239ecf365" translate="yes" xml:space="preserve">
          <source>Here is an example git_pillar configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f28db4bace58b7425be66f299ea13e30c89544" translate="yes" xml:space="preserve">
          <source>Here is an example of a block device:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9caa84f309ad245a45c89dd60d135bad00f62dc3" translate="yes" xml:space="preserve">
          <source>Here is an example of a fifo pipe:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d009d77f1691d4df9dc140fac67bbad04be4715" translate="yes" xml:space="preserve">
          <source>Here is an example of a mixed IPv4/IPv6 subnet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0601049b8bd94339a116666dc2787e67fa7ab428" translate="yes" xml:space="preserve">
          <source>Here is an example of creating a table using sql statements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd35313b4e15369ef82aaef56485ed64e50dafd9" translate="yes" xml:space="preserve">
          <source>Here is an example of creating a table using yaml/jinja instead of sql:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260d89cd6e317c778f0135429a0893010f526ddb" translate="yes" xml:space="preserve">
          <source>Here is an example of making sure a table is absent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848892303b633791e06b08b989ec468206376865" translate="yes" xml:space="preserve">
          <source>Here is an example of removing a row from a table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96eff7a7f3716a958b71abb9fe35c8727e2fa308" translate="yes" xml:space="preserve">
          <source>Here is an example of sending urlencoded data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927e5281d223222ae87a7de86b0bcf351b810f10" translate="yes" xml:space="preserve">
          <source>Here is an example of such a configuration, which should speak by itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675092cf445696a37787f7e2f669b066263ae487" translate="yes" xml:space="preserve">
          <source>Here is an example of using awk to filter events based on tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d9a50e813b28396482c98172d955148dcb303c" translate="yes" xml:space="preserve">
          <source>Here is an example of what the configuration might look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cd6f3ed619998fc9309c89cbe737f29ee44cfc" translate="yes" xml:space="preserve">
          <source>Here is an example that will fire an event 30 seconds after the state of nginx changes and report an uncleanshutdown. This example is for Arch, which places nginx's pid file in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a625c24202b93b81343db5d01f0c33eea156f8" translate="yes" xml:space="preserve">
          <source>Here's a list of features enabled by this renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bebd030d3a89bed106b61d383687eac070f16e2" translate="yes" xml:space="preserve">
          <source>Here's an example Keyspace / ColumnFamily setup that works with this returner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1464a6bea1e3464f12ed4c64d9f1c7a407347670" translate="yes" xml:space="preserve">
          <source>Here's an example of how one might write a shell script for use with a stateful command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd69534c3df227ff2c3f9e4393b9689caf4f8178" translate="yes" xml:space="preserve">
          <source>Here's an example of using &lt;code&gt;__env__&lt;/code&gt; as the git_pillar environment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17bc4cb0255d172518d3c073362c0711f137c98" translate="yes" xml:space="preserve">
          <source>Here's an example using the above &lt;code&gt;win_*&lt;/code&gt; parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a87eceadac3ee8f82312451598426781033c39" translate="yes" xml:space="preserve">
          <source>Here, application-web-0.39.war file is downloaded from Salt file system to /tmp/application-web-0.39.war file on minion. Existing deployments are checked if any of them matches 'application-web-.*' regular expression, and if so then it is undeployed before deploying the application. This is useful to automate deployment of new application versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463d7b91dcb04f518ec31f31d3abb01cbf5857a7" translate="yes" xml:space="preserve">
          <source>Here, we define a new service that encompasses TCP ports 4505 4506:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22cc5a2053d149b25a915fead9f6a5e76a7ae30" translate="yes" xml:space="preserve">
          <source>Hidden directories (directories beginning with '</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2030cfdee6f1a01ee92a805737ca4bcb77ed62" translate="yes" xml:space="preserve">
          <source>HipChat Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a05cb9dc399624219785d7511da614b2be44ec" translate="yes" xml:space="preserve">
          <source>Hipchat settings may also be configured as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94426e2f8ff3e793ef5c78f5e1ba81a10f30841a" translate="yes" xml:space="preserve">
          <source>Hive:</source>
          <target state="translated">Hive:</target>
        </trans-unit>
        <trans-unit id="e165759110d0c75d3c32a88a6138a9f11e612510" translate="yes" xml:space="preserve">
          <source>Hives</source>
          <target state="translated">Hives</target>
        </trans-unit>
        <trans-unit id="506ee1eb7b956633db20ed2b703f24fc283aed2e" translate="yes" xml:space="preserve">
          <source>Hives are the main sections of the registry and all begin with the word HKEY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3622666f46e9d77d90f1cc02bce37c3a29f30f5" translate="yes" xml:space="preserve">
          <source>Hives contain keys. These are basically the folders beneath the hives. They can contain any number of subkeys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643a3f9ecab0dccf061cc5e4d85a706cda0c566b" translate="yes" xml:space="preserve">
          <source>Holds a virtual network lease as used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454908ba9b297806c62f4ff4e9f033b4b84bcd80" translate="yes" xml:space="preserve">
          <source>Home dashboard for the org.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54dcef9417726bea8388f0f6a6c0a7602a33115" translate="yes" xml:space="preserve">
          <source>Homebrew for macOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57e85b6398e0780a58be6d5512abd4e19871615" translate="yes" xml:space="preserve">
          <source>Host VNic port through which to communicate. Defaults to &lt;code&gt;vmk0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcb0e1611b2e4bc838af89c9112b9d22a22d540" translate="yes" xml:space="preserve">
          <source>Host and volume must exist or else will return False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4858dbe0aa4cef258f9c85c5a5787d213e316dd" translate="yes" xml:space="preserve">
          <source>Host for which this user/password combo applies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486a9be0656b2d7f7c7bdecb9ca40c40b1d95376" translate="yes" xml:space="preserve">
          <source>HostedZoneId</source>
          <target state="translated">HostedZoneId</target>
        </trans-unit>
        <trans-unit id="eb8c4f6dec4f90153bbcf91838a4a1af90c0dc21" translate="yes" xml:space="preserve">
          <source>Hostname of the container. If not provided, and if a &lt;code&gt;name&lt;/code&gt; has been provided, the &lt;code&gt;hostname&lt;/code&gt; will default to the &lt;code&gt;name&lt;/code&gt; that was passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1511ce3484c6d9ec4e9a1f51a210ad88e896b194" translate="yes" xml:space="preserve">
          <source>Hostname of the container. If not provided, the value passed as the container's``name`` will be used for the hostname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1534c9cf9e3dde813ac8c8f2f90486452c2a48" translate="yes" xml:space="preserve">
          <source>Hostname or IP address of remote host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be0f950b67f0fde1b4aa501307653af9e621ac2" translate="yes" xml:space="preserve">
          <source>Hostname or address of remote host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff02be5830ee0d92ac1d7828fd86d74436fa4249" translate="yes" xml:space="preserve">
          <source>Hostname: ftp2 Port: 24007 Uuid: cbcb256b-e66e-4ec7-a718-21082d396c24 State: Peer in Cluster (Connected)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2d77a844a6fafa0ac4d6f8178b654df384e1ad" translate="yes" xml:space="preserve">
          <source>Hostname: ftp3 Uuid: 5ea10457-6cb2-427b-a770-7897509625e9 State: Peer in Cluster (Connected)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae7746ee4bab4d07493fa1bf5ce12b1ee708d3f" translate="yes" xml:space="preserve">
          <source>Hostnames to filter on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28e0e0bdd28f44c4fd2c46617f113c37b8a8199" translate="yes" xml:space="preserve">
          <source>How Multiple Remotes Are Handled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681572f85d01c2217dec50dacf0384cc9853ac2f" translate="yes" xml:space="preserve">
          <source>How about something a little more complex. Here we're going to get into the core of how to use pyobjects to write states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430199220d34c6b09a6312422986ae471ae35ef0" translate="yes" xml:space="preserve">
          <source>How do I create an environment from a pillar map?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716ce065ace9fcbd12f99662825b385ecb857712" translate="yes" xml:space="preserve">
          <source>How long InfluxDB keeps the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db85ff3a39f1cb91974fca4a36068a362e6f856b" translate="yes" xml:space="preserve">
          <source>How long the pattern is repeated. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f311a085ab79df80ba16b73ba096a68191932a61" translate="yes" xml:space="preserve">
          <source>How long the rule should exist. If supplied,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a36c41784d3c87116ba1930f82c12ed3ac17d3c" translate="yes" xml:space="preserve">
          <source>How long to wait, after creating the instance, for the provider to return information about it (default 300 seconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dde6266d23c0726f730cced7d506f1aa1d8c839" translate="yes" xml:space="preserve">
          <source>How many copies of the data are stored in the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10158fc3c9ee9bae2b33539812827373f8b9fe8e" translate="yes" xml:space="preserve">
          <source>How many replicas you want running in the swarm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26f68df622fe9d1c2bc0850e6cae5fde66c68e0" translate="yes" xml:space="preserve">
          <source>How much of the configuration to buffer into memory at once. The default value &lt;code&gt;1&lt;/code&gt; processes one line at a time. The special value &lt;code&gt;file&lt;/code&gt; may be specified which will read the entire file into memory before processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136fd36a92b4668fdcfdef42cac9d22db5ddb9cf" translate="yes" xml:space="preserve">
          <source>How much of the file to buffer into memory at once. The default value &lt;code&gt;1&lt;/code&gt; processes one line at a time. The special value &lt;code&gt;file&lt;/code&gt; may be specified which will read the entire file into memory before processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6538ca916eb3d1f34fcbb5c98c1ba020df0aa60" translate="yes" xml:space="preserve">
          <source>How much space was freed and how many derivations were removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea21118b14c42d5c00f8bbe882ce3f90946f9304" translate="yes" xml:space="preserve">
          <source>How often the mines are refreshed, can be specified using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb91d18af1639358126f084c98301e785528f982" translate="yes" xml:space="preserve">
          <source>How to Tell What An Event Means</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba427a23d6083a329181dd7ccdb45284a82003d8" translate="yes" xml:space="preserve">
          <source>How to find the artifact to be deployed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b8d55261d8824d6e9dcb1820def36bf4cffabf" translate="yes" xml:space="preserve">
          <source>How to fmt the output from info. (str, xml, list, dict)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cbc80ce3fe73a70f71b156130f8aa945efded6" translate="yes" xml:space="preserve">
          <source>How to use this module?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86092cc3fb9b12e91267e3009cd3a3cc163f5c5d" translate="yes" xml:space="preserve">
          <source>However, if the package definition files have changed, as would be the case if you are developing a new package definition, this function should be called to ensure the minion has the latest information about packages available to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f13eb8ca64577b0fc540e3559c44fa165ac5b41" translate="yes" xml:space="preserve">
          <source>However, in cases where both ro/rw and an selinux context are combined, the only option is to use a YAML list, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fc4e1172dd3b7295b595fcfe4b25bdadd7bfa4" translate="yes" xml:space="preserve">
          <source>However, in order to get the files in the second and third git_pillar remotes to work, you would need to first create the directory structure underneath it (i.e. place them underneath &lt;code&gt;web/server/&lt;/code&gt; in the repository). This also makes it tedious to reorganize the configuration, as changing &lt;code&gt;web.server.nginx&lt;/code&gt; to &lt;code&gt;web.nginx&lt;/code&gt; in the top file would require you to also move the SLS files in the &lt;code&gt;pillar-nginx&lt;/code&gt; up a directory level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff4dc12ede16875d8f9131c145bb67888a9a8e9" translate="yes" xml:space="preserve">
          <source>However, it is possible to place the entire set of chassis configuration data in pillar. Here's an example pillar structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9779b429c42af8cef3039193ae031dba8d72ef9d" translate="yes" xml:space="preserve">
          <source>However, note that not all arguments are supported. For example, when deserializing JSON, arguments like &lt;code&gt;parse_float&lt;/code&gt; and &lt;code&gt;parse_int&lt;/code&gt; which accept a callable object cannot be handled in an SLS file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a8693603930c467834cef49fcd2eef840f6b4e" translate="yes" xml:space="preserve">
          <source>However, since git_pillar does not have an equivalent to the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-pillar_roots&quot;&gt;&lt;code&gt;pillar_roots&lt;/code&gt;&lt;/a&gt; parameter, configuration is slightly different. A Pillar top file is required to be in the git repository and must still contain the relevant environment, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce57f9e941c270090f2c2989d54dba5f8b9e8574" translate="yes" xml:space="preserve">
          <source>However, some functions should be used against ESXi hosts, not vCenter Servers. Functionality such as getting a host's coredump network configuration should be performed against a host and not a vCenter server. If the authentication information you're using is against a vCenter server and not an ESXi host, you can provide the host name that is associated with the vCenter server in the command, as a list, using the &lt;code&gt;host_names&lt;/code&gt; or &lt;code&gt;esxi_host&lt;/code&gt; kwarg. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23947e905d82d5275a4a5da17268d5c1fe5f4e7f" translate="yes" xml:space="preserve">
          <source>However, sometimes a hash file will include multiple similar paths:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7ed96ad08e0b8bd1a6426685431228cd82ed14" translate="yes" xml:space="preserve">
          <source>However, the second example will be a bit quicker since Salt will do all the deletions in a single run, rather than executing the state separately on each image (as it would in the first example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1057e7fee1e335609665eeff6a26f3eeeac758" translate="yes" xml:space="preserve">
          <source>However, the second example will be a bit quicker since Salt will stop all specified containers in a single run, rather than executing the state separately on each image (as it would in the first example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36bb95017bc1cc3eea199d0394016094f10e185" translate="yes" xml:space="preserve">
          <source>However, this won't work. It can however be worked around like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e0b595ae9ba0d76840d4b99a2028befea5fcd3" translate="yes" xml:space="preserve">
          <source>However, you can configure MakoStack in 3 different ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4883b7d32cfe648bd012498c0abe262190b89e17" translate="yes" xml:space="preserve">
          <source>However, you can configure PillarStack in 3 different ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ebde509b882e423871fdaf1e62941e980ea53d" translate="yes" xml:space="preserve">
          <source>Huawei: NE40E, quidway series, Enterprise Network Simulation Framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4236dda9a5611836298f22e1104cef50059bc30f" translate="yes" xml:space="preserve">
          <source>Human readable format is &lt;code&gt;days, hours:min:sec&lt;/code&gt;. Days will only be displayed if more than 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d0d50c3f4f9e04ad4106143e785ec48635b837" translate="yes" xml:space="preserve">
          <source>IAM Roles may take some time to propagate to all regions once created. During that time function creation may fail; this state will atuomatically retry this number of times. The default is 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181a8a454620b410a938ce1be085b767b52415e6" translate="yes" xml:space="preserve">
          <source>IAM access policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff92972df8769dac47cd66c6e37d669296cf635" translate="yes" xml:space="preserve">
          <source>ID of Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d324cee6b8c0ed5d66d21ad5a9c915304d3a307c" translate="yes" xml:space="preserve">
          <source>ID of deleted host interfaces, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ce0c6f1c18292750c573c9121e66b2b9946cf1" translate="yes" xml:space="preserve">
          <source>ID of deleted mediatype, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d968bac447bc98de112e8f902fbc93b75c81934" translate="yes" xml:space="preserve">
          <source>ID of image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5f2fb3d1713882e8eb33b92b0ac84e35e3f844" translate="yes" xml:space="preserve">
          <source>ID of network</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1175726ed4aebf8902495bda44acb76fec95a8d" translate="yes" xml:space="preserve">
          <source>ID of the VPC to create VPC peering connection with. This can be a VPC in another account. Exclusive with peer_vpc_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75f96563fd67c2281bf47503744c501508be488" translate="yes" xml:space="preserve">
          <source>ID of the VPC tp crete VPC peering connection with. This can be a VPC in another account. Exclusive with peer_vpc_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33291664990af77146ea54260bb06dc17cd16303" translate="yes" xml:space="preserve">
          <source>ID of the VPC tp crete VPC peering connection with. This can be a VPC in another account. Exclusive with peer_vpc_name. String type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1eaed49b397a9cc4a42568b156c7ccba39cb91" translate="yes" xml:space="preserve">
          <source>ID of the created host group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531cd2d321a8a5fde1f4a6604a09896208af2ca7" translate="yes" xml:space="preserve">
          <source>ID of the created host interface, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea14df43828034b6d43521ddc0f70dc847c0ba58" translate="yes" xml:space="preserve">
          <source>ID of the deleted host groups, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ec703529e70dc0ef13b6bcaeb33b295fbf7de5" translate="yes" xml:space="preserve">
          <source>ID of the instance to be deleted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c27c2b42ecb92082c3c16832bb7e28f43f901e" translate="yes" xml:space="preserve">
          <source>ID of the instance to be locked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71eebc11c018eb3b503dbdb35d354891fd65b9e6" translate="yes" xml:space="preserve">
          <source>ID of the instance to be resumed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edd3eeafaeae27400de4910b70dc18f9026524c" translate="yes" xml:space="preserve">
          <source>ID of the instance to be suspended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b7311d2394d177c326f3b101d40a6ea7811cd2" translate="yes" xml:space="preserve">
          <source>ID of the owner of the peer VPC. Defaults to your account ID, so a value is required if peering with a VPC in a different account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3453f2276e60399b31662b396cb8911ccd738d49" translate="yes" xml:space="preserve">
          <source>ID of the owner of the peer VPC. String type. If this isn't supplied AWS uses your account ID. Required if peering to a different account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5c820abd1297225636a88cfdde2bf04453e973" translate="yes" xml:space="preserve">
          <source>ID of the peering connection to delete. Exclusive with conn_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2661418fe7a54bca2110bbd1856545be9c9fb15" translate="yes" xml:space="preserve">
          <source>ID of the requesting VPC. Exclusive with requester_vpc_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00628b9d9aaf52c35b47dd3d7262a7added37de3" translate="yes" xml:space="preserve">
          <source>ID of the requesting VPC. Exclusive with requester_vpc_name. String type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8e4bf5d1fb4cdb0fbfb318f1a736cc71fbc62a" translate="yes" xml:space="preserve">
          <source>ID of the snapshot to be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7acf13bd45247796d0c5bc18aa4349dbafa31e" translate="yes" xml:space="preserve">
          <source>ID of the updated host interface, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02695de9ec469335c8a163282756fe49aac48d8e" translate="yes" xml:space="preserve">
          <source>ID of the updated host, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a33726b2522ea470b98fd49f6535ff55c837a82" translate="yes" xml:space="preserve">
          <source>ID of the updated host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2a2f0dedf54f3ace64506d46eff9cecad18d01" translate="yes" xml:space="preserve">
          <source>ID to call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298ed96d74b6f6375c405bafda8423599165ca5e" translate="yes" xml:space="preserve">
          <source>IDs of the created media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e547c8c1fb382a660641ee104986397a5e795a6" translate="yes" xml:space="preserve">
          <source>IDs of the created user groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c28d20721888f52089e6e74ce5d7a1652456f0a" translate="yes" xml:space="preserve">
          <source>IDs of the deleted hosts, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18213d964a26e7d125b9188f18ada37339bff168" translate="yes" xml:space="preserve">
          <source>IDs of the deleted hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb34d82528d4a75aef7ac06d4b7f93fe5e60d8d" translate="yes" xml:space="preserve">
          <source>IDs of the deleted media, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48845698f00a693b40c57aac0bf51c5072347144" translate="yes" xml:space="preserve">
          <source>IDs of the deleted user groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4951808e14c62c6301216b4d9aa8e1c62b696a43" translate="yes" xml:space="preserve">
          <source>IDs of the updated mediatypes, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a9f1924a5466604edbfce46abb9f074295da86" translate="yes" xml:space="preserve">
          <source>IDs of the updated user group, False on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea261b46961c6d1446e9b4e2fd335a9007fee2d" translate="yes" xml:space="preserve">
          <source>IDs of updated host groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0203a4d94edf30948f3177cf407c26b33d0393" translate="yes" xml:space="preserve">
          <source>IKE policy information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8adfd68ad4a78afa20e22172a3968d8db3649aa" translate="yes" xml:space="preserve">
          <source>IMPORTANT NOTE: Objects (except for template name) are identified by name (or by other key in some exceptional cases) so changing name of object means deleting old one and creating new one with new ID !!!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20ea07e32d25c072a65368c234d6f5a88f4521a" translate="yes" xml:space="preserve">
          <source>INSERT</source>
          <target state="translated">INSERT</target>
        </trans-unit>
        <trans-unit id="1baca7ec80e67360178415a9896f9b78adc896f6" translate="yes" xml:space="preserve">
          <source>IP Address set for the nameserver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72a67c741f46373339b75bf4e3c29f825a090ab" translate="yes" xml:space="preserve">
          <source>IP address of host that will accept the dump.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e639af4899f4e092044a230c1a52811595083391" translate="yes" xml:space="preserve">
          <source>IP address to check. ip_addr or fqdn is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06212da74941de7e2c14f9b25810c13865097b9e" translate="yes" xml:space="preserve">
          <source>IP address with subnet length (ex. &lt;code&gt;10.1.2.3/24&lt;/code&gt;). The &lt;a href=&quot;#salt.modules.win_ip.get_subnet_length&quot;&gt;&lt;code&gt;ip.get_subnet_length&lt;/code&gt;&lt;/a&gt; function can be used to calculate the subnet length from a netmask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1143297683434ba26607e97624de090831f44d7" translate="yes" xml:space="preserve">
          <source>IP addresses are specified using the format &lt;code&gt;&amp;lt;ip-address&amp;gt;/&amp;lt;subnet-length&amp;gt;&lt;/code&gt;. Salt provides a convenience function called &lt;a href=&quot;../../modules/all/salt.modules.win_ip#salt.modules.win_ip.get_subnet_length&quot;&gt;&lt;code&gt;ip.get_subnet_length&lt;/code&gt;&lt;/a&gt; to calculate the subnet length from a netmask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ba0bcd5e3c273106f88c507a7b2cbb18576e1f" translate="yes" xml:space="preserve">
          <source>IP maximum time-to-live value (or IPv6 maximum hop-limit value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9815362dd84bbdecfdcbce3242ebc7ea2d480b6f" translate="yes" xml:space="preserve">
          <source>IP protocol version: ipv4 or ipv6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2084159040ea2229dea384e7645ec1e840b7d80" translate="yes" xml:space="preserve">
          <source>IP time-to-live value (IPv6 hop-limit value) (1..255 hops)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8120fc383a987c409cb5793f049142137a2dfc3e" translate="yes" xml:space="preserve">
          <source>IPAM driver to use, if different from the default one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6406cfab0e94234b055395129a7f0741ec31043a" translate="yes" xml:space="preserve">
          <source>IPMI Device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65374aa0cc90145ab3587bc5d77eb2b8f377c041" translate="yes" xml:space="preserve">
          <source>IPS pkg support for Solaris</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408250b266c9a2e788fa9726755b8d71a358ca3d" translate="yes" xml:space="preserve">
          <source>IPSec policy information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526687b2d93651c1abe4ffbafa90ad0768580197" translate="yes" xml:space="preserve">
          <source>IPSec site connection information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f49ebdd3019766aa1f6140b0fcd8c0a32593b1" translate="yes" xml:space="preserve">
          <source>IPv4 gateway for the master subnet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a487b48c7858fa7ae0b4028b616fc12c3b36fb80" translate="yes" xml:space="preserve">
          <source>IPv4 or IPv6 gateway for the master subnet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436b2f8330d96322da29381919c345a6c55867dd" translate="yes" xml:space="preserve">
          <source>IPv6 Router Advertisement mode. Valid values are &lt;code&gt;dhcpv6-stateful&lt;/code&gt;, &lt;code&gt;dhcpv6-stateless&lt;/code&gt;, or &lt;code&gt;slaac&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0121c73a17e7d89ffe06584aac7487833305351b" translate="yes" xml:space="preserve">
          <source>IPv6 Router Advertisement mode. Valid values are: &amp;lsquo;dhcpv6-stateful&amp;rsquo;, &amp;lsquo;dhcpv6-stateless&amp;rsquo;, or &amp;lsquo;slaac&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46eb5554c87d6335032300d259c2d1b658cbe4a5" translate="yes" xml:space="preserve">
          <source>IPv6 address mode. Valid values are &lt;code&gt;dhcpv6-stateful&lt;/code&gt;, &lt;code&gt;dhcpv6-stateless&lt;/code&gt;, or &lt;code&gt;slaac&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ad1ccd51036cc632b52db5e542fc77cf1c7971" translate="yes" xml:space="preserve">
          <source>IPv6 address mode. Valid values are: &amp;lsquo;dhcpv6-stateful&amp;rsquo;, &amp;lsquo;dhcpv6-stateless&amp;rsquo;, or &amp;lsquo;slaac&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8703285e1ba815e73a2a12f339fe8903134db5fb" translate="yes" xml:space="preserve">
          <source>IPv6 support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524f27e7c9aac41f643f8adff15a8c25c83773c7" translate="yes" xml:space="preserve">
          <source>IPy &amp;gt;= 0.81</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ece460c3898032c1c305d930a47fc57bc14ae79" translate="yes" xml:space="preserve">
          <source>IRC Bot engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792761065b16fc57d1bcc68d4bec6a9741464752" translate="yes" xml:space="preserve">
          <source>IRC Bot for interacting with salt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f8d982d049d44b27515847e40aa4233c6251b7" translate="yes" xml:space="preserve">
          <source>Icinga2 Python module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a887212fc9b637ecfff0f9d5b5d6a2b168982dcb" translate="yes" xml:space="preserve">
          <source>Icinga2 master node for which this certificate will be saved</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abaedef5c071efd7fb069b274dabbbdb8d011ec" translate="yes" xml:space="preserve">
          <source>Icinga2 port, defaults to 5665</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9015cb3caafb67b63f237770e62053f191518ba" translate="yes" xml:space="preserve">
          <source>Icinga2 state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497db05d709c215a54f69b1b4545fa7b25374f5b" translate="yes" xml:space="preserve">
          <source>Icon to use instead of WebHook default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474ae52625b87d7628ae7b20a499329a99e07119" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">Id</target>
        </trans-unit>
        <trans-unit id="6c1b30e9e029d392f54209d6d8cd8cc1e215de94" translate="yes" xml:space="preserve">
          <source>Id of the NAT Gateway</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3db077b7c8f244ffeb37ac5a23e77cd694d9e8" translate="yes" xml:space="preserve">
          <source>Id of the VPC in which the subnet should be placed. Either vpc_name or vpc_id must be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c752af67362fb7dc9d7e7793da4eb9ab680c80f5" translate="yes" xml:space="preserve">
          <source>Id of the VPC to which the internet_gateway should be attached. Only one of vpc_name or vpc_id may be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d542b74771a22e3fdd3d0963c48f72fb4f0648c" translate="yes" xml:space="preserve">
          <source>Id of the VPC with which the route table should be associated. Either vpc_name or vpc_id must be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da45d6af7b669cdff80b02ba96358b12f042e4e" translate="yes" xml:space="preserve">
          <source>Id of the created usage plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb46a538b06c23289f40a45f2e9a31c1e1268fb" translate="yes" xml:space="preserve">
          <source>Id of the datasource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554139586f244198a492e64edaa853099adbe138" translate="yes" xml:space="preserve">
          <source>Id of the organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e319bf5fffdba7ebc9995850bd108542a51dc577" translate="yes" xml:space="preserve">
          <source>Id of the subnet within which the nat gateway should exist. Either subnet_name or subnet_id must be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965b7156d6968867bcfcdc0cbf58809bc9a07a8f" translate="yes" xml:space="preserve">
          <source>Id of the updated user on success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a562db2a808ccc2950f6c010c490f430a88fda8d" translate="yes" xml:space="preserve">
          <source>Id of the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3e561346fb182fdd16c7546acf8bf4941d810b" translate="yes" xml:space="preserve">
          <source>Identifiers can be the GUID, the KB number, or any part of the Title of the Microsoft update. GUIDs and KBs are the preferred method to ensure you're installing the correct update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048d51999dd8ad45267f5d884f40fe27268b830e" translate="yes" xml:space="preserve">
          <source>Identifiers can be the GUID, the KB number, or any part of the Title of the Microsoft update. GUIDs and KBs are the preferred method to ensure you're uninstalling the correct update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2dd068201be33f8a4ee463af69652507e03c2f" translate="yes" xml:space="preserve">
          <source>Identifies a stream as an event source for a Lambda function. It can be either an Amazon Kinesis stream or an Amazon DynamoDB stream. AWS Lambda invokes the specified function when records are posted to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b237fe1428bdcff96b39b757b2b5e1e88dc4c854" translate="yes" xml:space="preserve">
          <source>Identifies path to the template source. The template can be either stored on the local machine, either remotely. The recommended location is under the &lt;code&gt;file_roots&lt;/code&gt; as specified in the master config file. For example, let's suppose the &lt;code&gt;file_roots&lt;/code&gt; is configured as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161a0d365673284a65128d9d871fda2b4b6b8b8f" translate="yes" xml:space="preserve">
          <source>Identifies services (processes) that are linked against deleted files (for example after downloading an updated binary of a shared library).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915d32e660dc01cb76b4bda46bdbe23c0bd5f76f" translate="yes" xml:space="preserve">
          <source>IdentityPoolName</source>
          <target state="translated">IdentityPoolName</target>
        </trans-unit>
        <trans-unit id="f965a13df7fdc33e432065b6166e485e73244897" translate="yes" xml:space="preserve">
          <source>Ie, if my.fqdn.yaml file contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="508b1b773eb8e538054f2038e266c6802bffb0da" translate="yes" xml:space="preserve">
          <source>If 'resolve' is False, don't resolve names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2c52e1fcd183c95927f05cfe9cfb9002747d9f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#salt.modules.syslog_ng.set_binary_path&quot;&gt;&lt;code&gt;syslog_ng.set_config_file&lt;/code&gt;&lt;/a&gt;, is called before, this function will use the set binary path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777e2298565f707e6088c053c1ec12b20bd0d4d2" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#salt.modules.syslog_ng.set_config_file&quot;&gt;&lt;code&gt;syslog_ng.set_config_file&lt;/code&gt;&lt;/a&gt;, is called before, this function will use the set config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b305ab28d18fdd324400fee017c614e78742da4f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;/var/www&lt;/code&gt; already existed, this would effectively make &lt;code&gt;if_missing&lt;/code&gt; a required argument, just to get Salt to extract the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04187364549d3846ca333a815af84f1537d61622" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt; a fetch will not be performed and only local refs will be reachable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7134abeeca7f7ff944f5c6ba11ad8b4757f16e71" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, ensure that the container is stopped</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ceca88e1e1e2388d07593d7c4839c50c78afc12" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, prunes unreferenced networks (&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/network_prune/#filtering)&quot;&gt;documentation&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0df453180afe3c38924c3a71a6c18cab6f5818" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, the package database will &lt;em&gt;not&lt;/em&gt; be refreshed before checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3e7678002af38f1953b9ead9d8475cd2499895" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, the package database will &lt;em&gt;not&lt;/em&gt; be refreshed before installing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc9db04168c213c722706923be5f8548191b752" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, then &lt;a href=&quot;http://git-scm.com/docs/git-worktree&quot;&gt;git-worktree(1)&lt;/a&gt; will fail to create the worktree if the targeted branch already exists. Set this argument to &lt;code&gt;True&lt;/code&gt; to reset the targeted branch to point at &lt;code&gt;ref&lt;/code&gt;, and checkout the newly-reset branch into the new worktree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6ae9f05671774d3c941f7a8287b8b4d57411f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, this function will return a list of files/dirs in the archive. If &lt;code&gt;True&lt;/code&gt;, it will return a dictionary categorizing the paths into separate keys containing the directory names, file names, and also directories/files present in the top level of the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58716e19ebc40407f6bf13b3f3c45f5be167af72" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;None&lt;/code&gt; is returned, then &lt;a href=&quot;http://tukaani.org/xz/&quot;&gt;xz&lt;/a&gt; is not present and must be installed. It is widely available and should be packaged as either &lt;code&gt;xz&lt;/code&gt; or &lt;code&gt;xz-utils&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edba2019283e5838be2e0e62fbd96962e39945c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;None&lt;/code&gt;, do nothing with regards to the running state of the container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac505b8cfa51de0f3c34042c668d480b31917b43" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; (default), needed config parameters will be sourced from grains and from &lt;a href=&quot;../../modules/all/salt.modules.status#salt.modules.status.all_status&quot;&gt;&lt;code&gt;status.all_status&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d76c592bceae4e1cdbdd34db48055a13678401f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; (default), takes the name from the &lt;code&gt;id&lt;/code&gt; grain. If &lt;code&gt;False&lt;/code&gt;, the provided name is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b273d24285b88bf16444a21b811868a61c70591d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; a hard reset will be performed before the checkout and any uncommitted modifications to the working directory will be discarded. Untracked files will remain in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab96ca4eceed21cbf2faaf179c7c4d9022832bc5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; an &lt;code&gt;api_response&lt;/code&gt; key will be present in the return data, containing the raw output from the Docker API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259a84d2ee19758cbff82f5112288afdc4e56d4f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; and allow_passwordless is &lt;code&gt;True&lt;/code&gt; then will be used unix_socket auth plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1251c488ae42dbec6b87e443518a07af6781c077" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; and allow_passwordless is &lt;code&gt;True&lt;/code&gt;, the unix_socket auth plugin will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81d4023bad05f0143e3849f2f00107938985743" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; and the container is paused, it will be unpaused before attempting to stop the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fd88472cfb2a8af787fdd7d1068edfa5b7af17" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; and the container is stopped, the container will be started before attempting to freeze.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc4f5e45abff44718d5f52d40021d01b00f6224" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; the existing DACL will be cleared and replaced with the settings defined in this function. If &lt;code&gt;False&lt;/code&gt;, new entries will be appended to the existing DACL. Default is &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aacac6b744adf6aa131c54f7e2c184301223c2a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; the existing DACL will be cleared and replaced with the settings defined in this function. If &lt;code&gt;False&lt;/code&gt;, new entries will be appended to the existing DACL. Default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7432a3882db193c2a2a799e0dc605c45723f2c82" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; the existing DCL will be cleared and replaced with the settings defined in this function. If &lt;code&gt;False&lt;/code&gt;, new entries will be appended to the existing DACL. Default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f0f77885c19f10027a6015d552b4b1099a9a00" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; the software package will not be SCP&amp;rsquo;d to the device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e44801e1b5d8e82682691dcdc97b453fe75b812" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; the software package will not be copied to the remote device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3de7af14f18b092e2addbb17c3764f064eb3190" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; unset all values for a multivar. If &lt;code&gt;False&lt;/code&gt;, and &lt;code&gt;key&lt;/code&gt; is a multivar, an error will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de36a8ba1b28d3344417cfea535bd779ff35144" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, &lt;em&gt;always&lt;/em&gt; run &lt;code&gt;composer install&lt;/code&gt; in the directory. This is the default behavior. If &lt;code&gt;False&lt;/code&gt;, only run &lt;code&gt;composer install&lt;/code&gt; if there is no vendor directory present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8df8bb3bb91999c9923d73be7188fec65c9007a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, Salt will not automatically convert the characters &lt;code&gt;\\n&lt;/code&gt; present in the &lt;code&gt;stdin&lt;/code&gt; value to newlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ca21bc560dc6342cfd6a146f8579a6562204d2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, Salt will not automatically convert the characters &lt;code&gt;\n&lt;/code&gt; present in the &lt;code&gt;stdin&lt;/code&gt; value to newlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333bea2392acd7e51ffc8598aa76a0230e104fbd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, Set the network administrative state to &quot;up&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e194cd9c8089e0976f01d675c0f86b4b45b39e82" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, a &lt;code&gt;docker inspect&lt;/code&gt; will be run on each container returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76001a2e73e38725e396f9703149740702bde61" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, a &lt;code&gt;docker inspect&lt;/code&gt; will be run on each image returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe036c11735fbde0ce5fe6691f880a9bb0b6cb83" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, a list of all matching tags will be returned. If the image is found but there are no tags, then a list will still be returned, but it will simply contain the image ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b92ba7cabb08af197b6344def330a4137604d44" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, an &lt;code&gt;API_Response&lt;/code&gt; key will be present in the return data, containing the raw output from the Docker API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7534a39bc26384fb5d4843bd6a45c7a6d4d126d7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, an error will be raised if any repo SLS files failed to process. If &lt;code&gt;False&lt;/code&gt;, no error will be raised, and a dictionary containing the full results will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f9a856998187f5e26ae3729f567054f3c8a7e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, an error will be raised if any repo SLS files fails to process. If &lt;code&gt;False&lt;/code&gt;, no error will be raised, and a dictionary containing the full results will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59c02f28e1339ca3f5d04261644866f663731ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, and a repository must be initialized, then the repository will be a bare repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fd0e8ee49920ba75b4fe53329123cb2435ee7b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, and if &lt;code&gt;name&lt;/code&gt; points to an existing directory which does not contain a git repository, then the contents of that directory will be recursively removed and a new repository will be initialized in its place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420ea2d7f4b3e9145fcde2c12400e451b7bdd0c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, and if &lt;code&gt;prune=True&lt;/code&gt;, then forcibly remove these images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ead13b1b56754126e93ddd2d32adebdda3d6950" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, and if the named container already exists, this will remove the existing container. The default behavior is to return a &lt;code&gt;False&lt;/code&gt; result when the container already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc1f60de7209a0400aecc23a8b3412b42cfae2c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, and the &lt;code&gt;source&lt;/code&gt; is a file from the Salt fileserver (or a local file on the minion), the mode of the destination file will be set to the mode of the source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccb452ae69afbe02011b419abefe4e9be9bda4e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, and the named container already exists, &lt;em&gt;and&lt;/em&gt;&lt;code&gt;replace&lt;/code&gt; is also set to &lt;code&gt;True&lt;/code&gt;, then the container will be forcibly removed. Otherwise, the state will not proceed and will return a &lt;code&gt;False&lt;/code&gt; result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d78efea82751c3368b0599672d9ee9e5dbda43" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, and the network is in the global scope, non-service containers on worker nodes will be able to connect to the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e2e4001edbe1fc3a8d07120451f268c683acd9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, and this function would update the package version, any packages held using the yum/dnf &quot;versionlock&quot; plugin will be unheld so that they can be updated. Otherwise, if this function attempts to update a held package, the held package(s) will be skipped and an error will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aade854a201a3adce122c444a52b502a711347fe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, and this function would update the package version, any packages which are being held will be temporarily unheld so that they can be updated. Otherwise, if this function attempts to update a held package, the held package(s) will be skipped and the state will fail. By default, this parameter is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee192700a7d9981f2c302ed7dee6c5cdd0c76125" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, append the specified group(s). Otherwise, this function will replace the user's groups with the specified group(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810dfe4a8541f304b1fd22c46e53f1145e9a21c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, cancel ongoing scrub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf1348da777794d59e81cc6c4c97c4ae053de13" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, checks for networks with duplicate names. Since networks are primarily keyed based on a random ID and not on the name, and network name is strictly a user-friendly alias to the network which is uniquely identified using ID, there is no guaranteed way to check for duplicates. This option providess a best effort, checking for any networks which have the same name, but it is not guaranteed to catch all name collisions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dd2714e6da48e90283c843c2194cbdd5f3ae41" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, cleans after installation. Equivalent to running &lt;code&gt;make
install clean BATCH=yes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4fb09dd2a5756e13931e872dc4937a08ee1486" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, clears the builder cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659333fd7028fd36474fcf149a2874a08d33ea71" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, compare staged changes to &lt;code&gt;item1&lt;/code&gt; (if specified), otherwise compare them to the most recent commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421e7d931a148dbf61527e7d45ac0a850701fa73" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, create an ingress network which provides the routing-mesh in swarm mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9325629b94577c35a4ff083f34755208edb1dd85" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, do not log an error to the minion log if the git command returns a nonzero exit status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1946af379bb4c90af21e5a620d20b18570a1cca3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, do not make any edits to the file and simply return the changes that &lt;em&gt;would&lt;/em&gt; be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262190e2650bd081f597ff8b1caec9f2fb0f045a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, ensure that the container is running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96407dcef92aa8c96a88b7d85bb0428b4acac5a5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, ensures that new submodules are initialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76ac1044124d41d27d7e003ff74eb5ba45c06f3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, files managed using &lt;code&gt;contents&lt;/code&gt;, &lt;code&gt;contents_pillar&lt;/code&gt;, or &lt;code&gt;contents_grains&lt;/code&gt; will have a newline added to the end of the file if one is not present. Setting this option to &lt;code&gt;False&lt;/code&gt; will omit this final newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e5657a34faa340315ae16ab6c292c24f98d595" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, fire progress events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc245c3ea8798e659af2c8615f66b3f6fbdfd2f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, hash verification of remote file sources (&lt;code&gt;http://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt;, &lt;code&gt;ftp://&lt;/code&gt;) will be skipped, and the &lt;code&gt;source_hash&lt;/code&gt; argument will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23ed13c83b15eb4825b369771e7b766975440c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, include expired certificates in the CRL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b335adb1bdb0451cf396015ae3a50082781a7d17" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, include the minions that did &lt;em&gt;not&lt;/em&gt; return from the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d28bc3043ea98b6806a0a347b00228e08557842" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, include the minions that did return from the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5c33a49c5358a50eb79f07fc2fd912d921b05c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, init a bare repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ccc10b0d78618a6980a23e50edcaf4eb4abddb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, list remote branches. Otherwise, local branches will be listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b8dd8de9c807d892b118b2688cf0d4b0c2a598" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, local host's network topology will be included</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975610756e78c1b6493002f279a785748ab991d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, mount the container&amp;rsquo;s root filesystem as read only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a4dd61b9b44bb37cc998d651ec89ee32016c06" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, networking will be disabled within the container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150d412b290947b0b796731a8bc2a78d4ac4b144" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, packages will be built even if they already exist in the &lt;code&gt;dest_dir&lt;/code&gt;. This is useful when building a package for continuous or nightly package builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67b1fd7f09fd404b4da1506ce1b449b6a266e81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, pause ongoing scrub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141ecf8de625f9c4bf445a4060ad9403bc93224b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, pillar data will be compiled for the master</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531e6fb8227af7ca84d75af56438023a598d22b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, prunes containers, images, networks, and builder cache. Assumed to be &lt;code&gt;True&lt;/code&gt; if none of &lt;code&gt;containers&lt;/code&gt;, &lt;code&gt;images&lt;/code&gt;, &lt;code&gt;networks&lt;/code&gt;, or &lt;code&gt;build&lt;/code&gt; are set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca011bb2caf9c306343c93cffde719b40c07d4ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, prunes stopped containers (&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/container_prune/#filtering&quot;&gt;documentation&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131324b3f7f379582f48433b6f41f88ea02509b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, prunes unreferenced volumes (&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/volume_prune/&quot;&gt;documentation&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f320fdad4f3f8f3fa699379f150cc79cd3866c0b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, prunes unused images (&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/image_prune/#filtering&quot;&gt;documentation&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bb2f9ef77b182d5710401d4d495a72febaedcb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, query the global git configuration. Otherwise, only the local git configuration will be queried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757904daef4f11941f48ec9743b3e5261284f4b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, reboot instead of shutting down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8ff82a8413f05c839010c5928c5047feb39c69" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available beacons on the minion. This refresh will be performed even if no new beacons are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd3d3571c7155c9368d2c4610d2e065fed0fec1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules and recompile pillar data for the minion. This refresh will be performed even if no new grains modules are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98208ed862e9c0875d991fde49df66e498ae203" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new Thorium modules are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2f12caf9837c3d7ee21cce4534d235b5499cf9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new engine modules are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107464fcf56130a7218caa3b9b1beb885a10ff63" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new execution modules are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c8b6ce8f19324578aca802457ea87b0930461d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new log handlers are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86fa62f5ed57f93ee453470de97650f88eaff60b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new matcher modules are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdff6a91d3704fc64c0192531afdb17525c30038" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new outputters are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7c467316e146f4641396bc42c5ff7f6b1e3288" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new proxy modules are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33954711ef89d315f262d7ec1a44b7292099ec0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new renderers are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd0a920600f26c65a79b76bf985d837ff627eb6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new returners are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a39b462cd9d404a5fd8d014d4bde737731d9eb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new serializer modules are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c47d701ff51b31cfc1c895ed09ec8390f375d3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available execution modules on the minion. This refresh will be performed even if no new utility modules are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd11b529546d3c30ce697f79272685ad0b93027" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, refresh the available states on the minion. This refresh will be performed even if no new state modules are synced. Set to &lt;code&gt;False&lt;/code&gt; to prevent this refresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fd7ca7f56584cdcec5ca5a72c4ecd507e30acd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, remove all but the specified block_icmp from the zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a67e95e0507a1cbb0217e0d02a518bb00e57f1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, remove all but the specified interfaces from the zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b258a41b1c7cc79ec8dee936c874ec27ba328b4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, remove all but the specified port_fwd from the zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19947a6aadd1b7132ce26ac4321b3e37813d6dc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, remove all but the specified ports from the zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebe403600d3e9903cbf03b175422aa5eb5a3e81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, remove all but the specified rich rules from the zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d291eb54b89e20c35d7d5018fd8e5d36138cff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, remove all but the specified services from the zone. .. note:: Currently defaults to True for compatibility, but will be changed to False in a future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076db3cfd3d75dbef3f2b199bf30d132f3130125" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, remove all but the specified sources from the zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5418aebe5a44075383ae708c947f8f38725431ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, restricts external access to the network</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b35660a80ab9b1a6ddfaea9d03904a68ed62a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return &lt;em&gt;only&lt;/em&gt; worktrees whose gitdir is no longer present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee7a5916f4240c6c420f3af67a24a59345b217a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return a diff of changes made. Otherwise, return &lt;code&gt;True&lt;/code&gt; if changes were made, and &lt;code&gt;False&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9f917c175d539ae317ed9a30c80f217deb9a70" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return a list of all values set for &lt;code&gt;key&lt;/code&gt;. If the key does not exist, &lt;code&gt;None&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ddd88b4287081c1097f2e3b2b48d3ce3efd10e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return an abbreviated SHA1 git hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b76253c23b9031be116dc74874b01339851fc5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return extended info about each container (IP configuration, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a260916a2f7a4afd97dd3b80faeaef064013b942" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return only active (i.e. running) containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d08c5268bf5563f52ea9271a9259758ce57167a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return the (armored) decrypted block as a string without the standard comment/res dict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c141ee12f37e2aacc3409ec81f67a3b974658b5f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return the (armored) encrypted block as a string without the standard comment/res dict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9a4048d5b86f4c9c9a08a4dee02e8e02dd85c4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return the PEM text without writing to a file. Default &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6860691bb45060433b174d19dcb75f409cc5041" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, return the version in a versioninfo list (e.g. &lt;code&gt;[2, 5,
0]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245bb5bd70cfb708114953ffe6e2eca6e462f909" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, run command in background and do not await or deliver it's results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2d6045ce8b34dd6b0f7565927871637b05ed5e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, run command in background and do not await or deliver its results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375402e4a557866ce56e397a09dcaf79ae7b60ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, run command in background and do not await or deliver its results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696e0be5c4da4b58117c975ddcf4cf2a21adc76a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, run container in background and do not await or deliver its results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c33a6ebdb74efad0146067ed9b708187f8ce88" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, run the container's command in the background (daemon mode)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226eab815b792755eb1388d8baba604eb18e8008" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, runs a &lt;code&gt;make rmconfig&lt;/code&gt; for the port, clearing its configuration before setting the desired options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29edf155aebd08f790b7137831bd9414419d932" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, runs a &lt;code&gt;portsnap extract&lt;/code&gt; after fetching, should be used for first-time installation of the ports tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71852465547287912d73c06ddab59ad87e4331a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, runs the exec process with extended privileges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b4a96fd1174d1b7972dd33577663e3240d3661" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, set a global variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ebe665941bf6d798740e4587111586104a39f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, set the network as shared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820f110d2e398a22dd1699087715d367647a0dab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, start container after creating it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abbe304166edbfc8280b9ecce254b4e5d1a89e8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, start the service once enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab39236d7a3aa2887b600920601a3e2f95d8532" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, stop volume before delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e43775981d04936eef5c64cad10c2f01d29e49" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, stopped containers will also be returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650e0758747476215702cb40856328c45623031b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, stopped containers will be included in return data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa3791f54914000137589a7e11c066ba4fd8729" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, suppress stdout and stderr in the return data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280e274fa2a31a6b94aad5869fbbcb6b57eacbfa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the Docker client will permit the use of insecure (non-HTTPS) registries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67cb6864d6c098b9abb333448d5985c195bf7f4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the apt cache will be refreshed first. By default, no refresh is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581fc656139cddfc8cb2917a668d79ae91ec5eab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the container will be destroyed even if it is running/frozen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723dd01cc1476078434b41fdbe44f09708e32e47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the container will be force-stopped instead of gracefully shut down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afccc9eccd249c242dcdd27c176cb7916de36fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the container will be killed first before removal, as the Docker API will not permit a running container to be removed. This option is set to &lt;code&gt;False&lt;/code&gt; by default to prevent accidental removal of a running container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99098b9e74c14e85aa7c68f7eede174f4dd67f48" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the container will be pushed to the master using &lt;a href=&quot;salt.modules.cp#salt.modules.cp.push&quot;&gt;&lt;code&gt;cp.push&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abc2a81533dd7c643a73e0d89e5c1933775ae25" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the container will be stopped first before removal, as the Docker API will not permit a running container to be removed. This option is set to &lt;code&gt;False&lt;/code&gt; by default to prevent accidental removal of a running container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e80ca3932cc6b16445b9c10526de10e6f1365b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the default group id will be set to the id of the group with the same name as the user. If the group does not exist the state will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb65447e786114a8c662dafecac7d234adeac3f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the image will be removed even if the Minion has containers created from that image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3971e311d1228fb9e2d9a753b4992ba1d7707bf3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the package database will be refreshed (&lt;code&gt;apt-get
update&lt;/code&gt; or equivalent, depending on platform) before installing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af5d744365f8e81b64e2a8a98fe85ab11bb660b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the package database will be refreshed (&lt;code&gt;apt-get update&lt;/code&gt; or equivalent, depending on platform) before checking for the latest available version of the requested packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3a79893a5ad49725a9ed9730387df3deef7e17" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the retrieved values will be merged into the passed default. When the default and the retrieved value are both dictionaries, the dictionaries will be recursively merged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f74c67b0be582d6921d9fb90062e58a96e7568e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the return data will simply be a list of the commands run to build the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34baf4574e79c8c20bb85de6d2d00b49adebebe2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the state will return a &lt;code&gt;False&lt;/code&gt; result if the exit code of the container is non-zero. When this argument is set to &lt;code&gt;False&lt;/code&gt;, the state will return a &lt;code&gt;True&lt;/code&gt; result regardless of the container's exit code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afb76a73f9d7468fa66b8ec9c6e562c72149da0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;password_hash&lt;/code&gt; can be omitted (or set to &lt;code&gt;None&lt;/code&gt;) to permit a passwordless login.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147278d41454e899b3cb5fa13a420d77fd09c5d8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;password_hash&lt;/code&gt; can be omitted to permit a passwordless login.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546fe69ab17c64ffa3b7d8fa2de80a75efc8fdbf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then Salt will delete tags which exist in the local clone but are not found on the remote repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfc0d694856cefb076e6a085172622fe73c3467" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then if the parent directory of the file specified by the &lt;code&gt;path&lt;/code&gt; argument does not exist, Salt will attempt to create it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c82328ea477aa8bca1bafaaa2d3c617a0bf81bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then instead of returning the merge base, return a boolean telling whether or not the first commit is an ancestor of the second commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5eea1a0afd59bea5bda5849b3328678176eee1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then only packages which have been marked to be purged, but can't be purged due to their status as dependencies for other installed packages, will be returned. Note that these packages will appear in installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90db45a87cfc585ec041c24cca26d95b783c96f5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then only packages which have been removed (but not purged) will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c124607b438b4f5898deefaceca914dc4dc649ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then return all worktrees tracked under $GIT_DIR/worktrees, including ones for which the gitdir is no longer present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a37eaeeb8afbb2bab406bdbe790e404403baf4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then the container will be started to retrieve the info. A &lt;code&gt;Started&lt;/code&gt; key will be in the return data if the container was started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83856a0671f141f89a8d0cb52d9c8252388bb0ca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then this function will determine the best common ancestors of all specified commits, in preparation for an n-way merge. See &lt;a href=&quot;http://git-scm.com/docs/git-merge-base#_discussion&quot;&gt;here&lt;/a&gt; for a description of how these bases are determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20b068a76d0abb195f50ad991921d5e5b56d81b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then this function will report what would have been pruned, but no changes will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6406c38fb1855533467faf74beb37a318d74b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, then when a fetch is performed all tags will be fetched, even those which are not reachable by any branch on the remote.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc9d745cb554a71f7ae24b05f2c2a2d1f08d97b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, this IP address will be added to the interface. Default is &lt;code&gt;False&lt;/code&gt;, which overrides any existing configuration for the interface and sets &lt;code&gt;addr&lt;/code&gt; as the only address on the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7985f78c02679256b10e90c7a51d91afdde52f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, this function will block until the container exits and return the logs when it does. The default behavior is to return what is in the log at the time this function is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc510df5a5bd811099ca5df066a9965d91548d1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, this function will not wait for the container to exit and will not return its logs. It will however return the container's name and ID, allowing for &lt;a href=&quot;#salt.modules.dockermod.logs&quot;&gt;&lt;code&gt;docker.logs&lt;/code&gt;&lt;/a&gt; to be used to view the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255c983f75a75778e2baf3058735c36b2a1ffb7f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, this function will return the IDs of the refs/commits passed which cannot be reached by another commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799b5cecdd553442b1e6a8135d88e8603fe116fe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, this function will simply return the number of processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab27941e90b1a5e85884b35bcf92974debcc0184" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, this will set a global git config option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bdba67429c054486545bb6f8c2a717102fd513" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, unset all matches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0faa2b01c5cade7cb0683a810c09576c75d102" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, unset set a global variable. Otherwise, a local variable will be unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9eef9d40c202432081a27531a9ad7871c7d3cc2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, untagged images will also be returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317c742061282caaccbbb4c80c674398665aa4d4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, untagged parent image layers will be removed as well, set this to &lt;code&gt;False&lt;/code&gt; to keep them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e128e29e4cb0beb704dc67588fb23b770836942d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, usage will be in KB/MB/GB etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4897f3acee37325d9106fd72b09dfeb7ce483122" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, use the default subnetpool for &lt;code&gt;ip_version&lt;/code&gt; to obtain a CIDR. It is required to pass &lt;code&gt;None&lt;/code&gt; to the &lt;code&gt;cidr&lt;/code&gt; argument when enabling this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0378f26e9ef0345babb4ffb812226cc740d1b1ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, will attempt to de-duplicate and consolidate sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dba9506b245999648cc7042c9bccacde37e6e7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;: an &lt;code&gt;API_Response&lt;/code&gt; key will be present in the return data, containing the raw output from the Docker API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8faa44ce35b01ac034e52224db149169d90c7f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;__env__&lt;/code&gt; is specified as the branch name, then git_pillar will decide which branch to use based on the following criteria:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53238d2a25da66e7263bb57dfe89037806b0df10" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;all&lt;/code&gt; is specified, all valid attributes will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00c5957220e940d0053db068c83b185ad85a251" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cert_filename&lt;/code&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfda408139bd6adebf7693df64c7e50e42c5d535" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;changes&lt;/code&gt; is used, then terse output will be used if there was no error and no changes, otherwise full output will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a172fd03ce29f1eb8dbbe885eec7d29e48a7be06" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;containers&lt;/code&gt; is not used, and the network is replaced, then Salt will keep track of the containers which were connected to the network and reconnect them to the network after it is replaced. Salt will first attempt to reconnect using the same IP the container had before the network was replaced. If that fails (for instance, if the network was replaced because the subnet was modified), then the container will be reconnected without an explicit IP address, and its IP will be assigned by Docker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a32d9b1e352716e64b53a65a025ba42ee02b9a9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;delete_policies: False&lt;/code&gt; is specified, existing policies that are not in the given list of policies will not be deleted. This allows manual modifications on the IAM role to be persistent. This functionality was added in 2015.8.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7c06c37a3c1f8b3842e8ded59437e6d3c30612" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;file1&lt;/code&gt; is an http(s)/ftp URL and the file exists in the minion's file cache, this option can be passed to keep the minion from re-downloading the archive if the cached copy matches the specified hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032b9234177276f29aa9d6b0b6e38269301458ee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;file2&lt;/code&gt; is an http(s)/ftp URL and the file exists in the minion's file cache, this option can be passed to keep the minion from re-downloading the archive if the cached copy matches the specified hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5402443ca99586850bd2ecd741ec68033e3f0b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;filter&lt;/code&gt; is used, then either or both of two different filters can be used: &lt;code&gt;exclude&lt;/code&gt; or &lt;code&gt;terse&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3ed55fcce9ccac89b425e5d0deb6cfc9229413" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;force&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; no checks will be made and the repository will be generated if &lt;code&gt;allow_empty&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; then the state will not return an error if there are 0 packages,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a625964a3539e90ec6f23d363cd0ad90fd51eb5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;found&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, then a second key called &lt;code&gt;suggestions&lt;/code&gt; will be present, which will contain a list of possible matches. This list will be empty if the package name was specified in &lt;code&gt;category/pkgname&lt;/code&gt; format, since the suggestions are only intended to disambiguate ambiguous package names (ones submitted without a category).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c48e3d93665e7d476d16c950303fbafef93075c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;host&lt;/code&gt; is a vCenter host, then use esxi_hosts to execute this function on a list of one or more ESXi machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca2869c022cba62d796396b406d60362fb43cdc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;keep_newline&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the pillar values for files ending in newlines will keep that newline. The default behavior is to remove the end-of-file newline. &lt;code&gt;keep_newline&lt;/code&gt; should be turned on if the pillar data is intended to be used to deploy a file using &lt;code&gt;contents_pillar&lt;/code&gt; with a &lt;a href=&quot;../../states/all/salt.states.file#salt.states.file.managed&quot;&gt;&lt;code&gt;file.managed&lt;/code&gt;&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811281f0e9695ee2138c3e133b67230426c4abe4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;merge_lists=True&lt;/code&gt;, will aggregate list object types instead of replace. The list in &lt;code&gt;upd&lt;/code&gt; is added to the list in &lt;code&gt;dest&lt;/code&gt;, so the resulting list is &lt;code&gt;dest[key] + upd[key]&lt;/code&gt;. This behaviour is only activated when &lt;code&gt;recursive_update=True&lt;/code&gt;. By default &lt;code&gt;merge_lists=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd77cfe4209fb7b7d1472e07f214c789dbfe6352" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;merge_lists=True&lt;/code&gt;, will aggregate list object types instead of replacing. This behavior is only activated when &lt;code&gt;recursive_update=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8859b978fe7235a2cf34fd00c9c69393ff4686c9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mixed&lt;/code&gt; is used, then terse output will be used unless a state failed, in which case full output will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a10051ceb66d9d47858ddcf25cc8122d43d8df3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode=insert&lt;/code&gt; is used, at least one of the following options must also be defined: &lt;code&gt;location&lt;/code&gt;, &lt;code&gt;before&lt;/code&gt;, or &lt;code&gt;after&lt;/code&gt;. If &lt;code&gt;location&lt;/code&gt; is used, it takes precedence over the other two options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58466edd2c55cd95a2e4004df513cd1bb19b90f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; contains a &quot;?&quot; or &quot;*&quot; then it will re-start a group of VMs which have been paused or stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e4b6ac7ac7d521e851c33456464031481ec6e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is an http(s) or ftp URL and the file exists in the minion's file cache, this option can be passed to keep the minion from re-downloading the file if the cached copy matches the specified hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341fa8e265aa1a0bc1181a9ed783de02b9189f9d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is an http(s)/ftp URL and the file exists in the minion's file cache, this option can be passed to keep the minion from re-downloading the archive if the cached copy matches the specified hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221b134f974949d7e460471669cc2f9fa5a38ea2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;passwd&lt;/code&gt; isn't found in the &lt;code&gt;roster&lt;/code&gt;, a default SSH password can be set here. Keep in mind that &lt;code&gt;ssh_password&lt;/code&gt; will not override the roster &lt;code&gt;passwd&lt;/code&gt; value if it is already defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53f9753b782d1408ed87dade8b1bbcc77fb680d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is an http(s) or ftp URL and the file exists in the minion's file cache, this option can be passed to keep the minion from re-downloading the file if the cached copy matches the specified hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4c992159ac6f415529ce03a82fb3edd474cb6e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;prefix&lt;/code&gt; is not specified it defaults to the basename of the repo directory.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
