<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="8cf8bf61ddc4fc10268191c7b923a80ce86cf06e" translate="yes" xml:space="preserve">
          <source>This package provides a framework for authentication and authorization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585e00ae601feb02a5ee588fc76aa9029611f54d" translate="yes" xml:space="preserve">
          <source>This package provides a framework for authentication and authorization. The framework allows authentication to be performed in pluggable fashion. Different authentication modules can be plugged under an application without requiring modifications to the application itself. The authorization component allows specification of access controls based on code location, code signers and code executors (Subjects).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b241db3e5e99bd902e88e34e403f37c15bc708" translate="yes" xml:space="preserve">
          <source>This package provides a pluggable authentication framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0ae3a875eea4e928df1d9c9385662126ef4fdb" translate="yes" xml:space="preserve">
          <source>This package provides the classes necessary for services to interact with applications in order to retrieve information (authentication data including usernames or passwords, for example) or to display information (error and warning messages, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3eba22098545c6ce5a9f5fd1345be1d0a19794f" translate="yes" xml:space="preserve">
          <source>This package provides the interface to be used for implementing pluggable authentication modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e57cb2a47fe4f7bfd15bdd8a5a5360176d864ac" translate="yes" xml:space="preserve">
          <source>This package provides tools that allow the units and fields of date and time to be accessed in a general way most suited for frameworks. &lt;a href=&quot;temporal&quot;&gt;&lt;code&gt;Temporal&lt;/code&gt;&lt;/a&gt; provides the abstraction for date time types that support fields. Its methods support getting the value of a field, creating a new date time with the value of a field modified, and querying for additional information, typically used to extract the offset or time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0b99d9136d2e568ed95906de81775f38ca6405" translate="yes" xml:space="preserve">
          <source>This padding is intended for padding other than zero-padding. Zero-padding should be achieved using the appendValue methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd57fb20d6a013aba58d0f79a974cb326cdd55c" translate="yes" xml:space="preserve">
          <source>This padding will pad to a fixed width using spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dc9d3155937cf0a98abdb1af1f7f611097dee6" translate="yes" xml:space="preserve">
          <source>This page ranges attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c9bbabb7cab1a3490720af07be578f4788961c" translate="yes" xml:space="preserve">
          <source>This pages per minute attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23d0592408d1d95d6f022686a061ef100696b62" translate="yes" xml:space="preserve">
          <source>This parameter is required as it is the Relation Service that is aware of the definition of the relation type of the given relation, so that will be able to check update operations (set).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1f4981083f92107f5553aa390face10ebf6dcc" translate="yes" xml:space="preserve">
          <source>This parse method is convenient for use when the parser can handle optional elements. For example, a pattern of 'uuuu-MM-dd HH.mm[ VV]' can be fully parsed to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, or partially parsed to a &lt;code&gt;LocalDateTime&lt;/code&gt;. The queries must be specified in order, starting from the best matching full-parse option and ending with the worst matching minimal parse option. The query is typically a method reference to a &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bcc66aefc15e396e51fa856a9d1eb9b8f39168" translate="yes" xml:space="preserve">
          <source>This parses the entire text producing a temporal object. It is typically more useful to use &lt;a href=&quot;datetimeformatter#parse-java.lang.CharSequence-java.time.temporal.TemporalQuery-&quot;&gt;&lt;code&gt;parse(CharSequence, TemporalQuery)&lt;/code&gt;&lt;/a&gt;. The result of this method is &lt;code&gt;TemporalAccessor&lt;/code&gt; which has been resolved, applying basic validation checks to help ensure a valid date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479610d5332d358d34e0ac2d5258a03dbaa2c3bd" translate="yes" xml:space="preserve">
          <source>This parses the text without requiring the parse to start from the beginning of the string or finish at the end. The result of this method is &lt;code&gt;TemporalAccessor&lt;/code&gt; which has been resolved, applying basic validation checks to help ensure a valid date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7237b11624367017631acb6484feab482e7bcc41" translate="yes" xml:space="preserve">
          <source>This parsing operation uses the &lt;a href=&quot;dateformat#calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt; to produce a &lt;code&gt;Date&lt;/code&gt;. All of the &lt;code&gt;calendar&lt;/code&gt;'s date-time fields are &lt;a href=&quot;../util/calendar#clear--&quot;&gt;cleared&lt;/a&gt; before parsing, and the &lt;code&gt;calendar&lt;/code&gt;'s default values of the date-time fields are used for any missing date-time information. For example, the year value of the parsed &lt;code&gt;Date&lt;/code&gt; is 1970 with &lt;a href=&quot;../util/gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt; if no year value is given from the parsing operation. The &lt;code&gt;TimeZone&lt;/code&gt; value may be overwritten, depending on the given pattern and the time zone value in &lt;code&gt;text&lt;/code&gt;. Any &lt;code&gt;TimeZone&lt;/code&gt; value that has previously been set by a call to &lt;a href=&quot;dateformat#setTimeZone-java.util.TimeZone-&quot;&gt;&lt;code&gt;setTimeZone&lt;/code&gt;&lt;/a&gt; may need to be restored for further operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cf0421c7c78eba74d00de3c5dd30dc406410cb" translate="yes" xml:space="preserve">
          <source>This parsing operation uses the &lt;a href=&quot;dateformat#calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt; to produce a &lt;code&gt;Date&lt;/code&gt;. As a result, the &lt;code&gt;calendar&lt;/code&gt;'s date-time fields and the &lt;code&gt;TimeZone&lt;/code&gt; value may have been overwritten, depending on subclass implementations. Any &lt;code&gt;TimeZone&lt;/code&gt; value that has previously been set by a call to &lt;a href=&quot;dateformat#setTimeZone-java.util.TimeZone-&quot;&gt;&lt;code&gt;setTimeZone&lt;/code&gt;&lt;/a&gt; may need to be restored for further operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ae30943574c4cf8a3131438be150331f722044" translate="yes" xml:space="preserve">
          <source>This path &lt;em&gt;starts&lt;/em&gt; with the given path if this path's root component &lt;em&gt;starts&lt;/em&gt; with the root component of the given path, and this path starts with the same name elements as the given path. If the given path has more name elements than this path then &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a0bb40bee4d982a7b4237a125365f082f1d869" translate="yes" xml:space="preserve">
          <source>This permission allows the user to read from or write to the preferences backing store if the user running the code has sufficient OS privileges to read/write to that backing store. The actual backing store may reside within a traditional filesystem directory or within a registry depending on the platform OS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652b7de694fe0da73d220e9d7d14266caab011c6" translate="yes" xml:space="preserve">
          <source>This permission represents &quot;trust&quot; in a signer or codebase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67c5a75aaa1e3981e2c2fab5d8fbd6ee33a249b" translate="yes" xml:space="preserve">
          <source>This pipe's sink channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d238aa3ea53ac0e487a7e6eb531546332e140b7" translate="yes" xml:space="preserve">
          <source>This pipe's source channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfc171ce3321b204a72d74161a70fbabaef4e38" translate="yes" xml:space="preserve">
          <source>This printer info attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548aeb72136753d0db244e106b8c35ffb8c87a07" translate="yes" xml:space="preserve">
          <source>This printer info attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d042cec29c0c3d72423d515db91e594ade6d859" translate="yes" xml:space="preserve">
          <source>This printer location attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36df0737952dcd028d0ae8519195e562cfa37f22" translate="yes" xml:space="preserve">
          <source>This printer location attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8739f1e6b0cf3d15be476e0c2584eefd16c3396d" translate="yes" xml:space="preserve">
          <source>This printer make and model attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9be2a847ee0c2635f5998fb5538a4b3c00e5437" translate="yes" xml:space="preserve">
          <source>This printer make and model attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e9fe874027b36bdf8657f27020dd9af2625756" translate="yes" xml:space="preserve">
          <source>This printer message from operator attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966bca291b507cbb83b4ab803745c189c4eed395" translate="yes" xml:space="preserve">
          <source>This printer message from operator attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cea157d0d62a1cc3b790787a34f598222bbdbc" translate="yes" xml:space="preserve">
          <source>This printer more info attribute's URI and &lt;code&gt;object&lt;/code&gt;'s URI are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a3ad06e0ea7fac03d534af9db8c60447beb0a4" translate="yes" xml:space="preserve">
          <source>This printer more info manufacturer attribute's URI and &lt;code&gt;object&lt;/code&gt;'s URI are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bba88ce3ed5b62522be5a3f71bfe4c2c30be5c" translate="yes" xml:space="preserve">
          <source>This printer name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8889c2fe27b2f5f7d332e4b8a347077e8debdae" translate="yes" xml:space="preserve">
          <source>This printer name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef85016b50af35019725e09f3e5ba4a1a8eb149d" translate="yes" xml:space="preserve">
          <source>This prints 1 line with the log level (&lt;code&gt;4$&lt;/code&gt;), the log message (&lt;code&gt;5$&lt;/code&gt;) and the timestamp (&lt;code&gt;1$&lt;/code&gt;) in a square bracket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e2729eee9255ef59a2636030b11a5077fb1f41" translate="yes" xml:space="preserve">
          <source>This prints 2 lines similar to the example above with a different date/time formatting and does not print the throwable and its backtrace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1711d3b6165efc55205f2e816da36cac6810e3" translate="yes" xml:space="preserve">
          <source>This prints 2 lines where the first line includes the timestamp (&lt;code&gt;1$&lt;/code&gt;) and the source (&lt;code&gt;2$&lt;/code&gt;); the second line includes the log level (&lt;code&gt;4$&lt;/code&gt;) and the log message (&lt;code&gt;5$&lt;/code&gt;) followed with the throwable and its backtrace (&lt;code&gt;6$&lt;/code&gt;), if any:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb5e430a4d846253fbd39240f45d294b4ee414c" translate="yes" xml:space="preserve">
          <source>This produces a result equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a49828bfd4ca3f76ae969984b5246b9042f303" translate="yes" xml:space="preserve">
          <source>This produces a result similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e330b90faf246f7d48a3103acd8b42cd9a528c25" translate="yes" xml:space="preserve">
          <source>This property is a numeral giving the estimated target size N (in bytes) of each archive segment. If a single input file requires more than N bytes, it will be given its own archive segment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f438f599c56507d76f42537e9cc24db91eeb97c8" translate="yes" xml:space="preserve">
          <source>This property, and the mechanism which implements it, may be removed in a future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8740fc347bf9416cb92aa7e6d0d2240e48d868ae" translate="yes" xml:space="preserve">
          <source>This protocol is described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#SSLContext&quot;&gt; SSLContext section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec748b44e8b73d0a80c91a2cd6a2d61a71ed5e8e" translate="yes" xml:space="preserve">
          <source>This protocol is written by JVM 1.2. Externalizable data is written in block data mode and is terminated with TC_ENDBLOCKDATA. Externalizable class descriptor flags has SC_BLOCK_DATA enabled. JVM 1.1.6 and greater can read this format change. Enables writing a nonSerializable class descriptor into the stream. The serialVersionUID of a nonSerializable class is set to 0L.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8053e3cf75b5e96866b19a4f6ec6a970d225f3aa" translate="yes" xml:space="preserve">
          <source>This provides a detailed message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29fd230b83879900613dd287a9b8e75ff62b9c6" translate="yes" xml:space="preserve">
          <source>This provides a hysteresis mechanism to avoid repeated triggering of notifications when the attribute value makes small oscillations around the high or low threshold value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d3c67d1f80d2fad015136ea0325bcf7c687683" translate="yes" xml:space="preserve">
          <source>This provides access to historic information on how the amount of daylight savings has changed over time. This is the difference between the standard offset and the actual offset. Typically the amount is zero during winter and one hour during summer. Time-zones are second-based, so the nanosecond part of the duration will be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a4a4f046353d0868a5f696209f9d1fd01354b5" translate="yes" xml:space="preserve">
          <source>This provides access to historic information on how the standard offset has changed over time. The standard offset is the offset before any daylight saving time is applied. This is typically the offset applicable during winter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a7fc62fff2de78b290991fd97224d6564f707b" translate="yes" xml:space="preserve">
          <source>This provides no detailed message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b158d65bdc9d014ed58f969f690bf7c39ab0aeca" translate="yes" xml:space="preserve">
          <source>This queries &lt;a href=&quot;../util/timezone#getDefault--&quot;&gt;&lt;code&gt;TimeZone.getDefault()&lt;/code&gt;&lt;/a&gt; to find the default time-zone and converts it to a &lt;code&gt;ZoneId&lt;/code&gt;. If the system default time-zone is changed, then the result of this method will also change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a1ec120de1eed5ba3c126b02c69b1fe29ec257" translate="yes" xml:space="preserve">
          <source>This queries a &lt;code&gt;TemporalAccessor&lt;/code&gt; for the chronology. If the target &lt;code&gt;TemporalAccessor&lt;/code&gt; represents a date, or part of a date, then it should return the chronology that the date is expressed in. As a result of this definition, objects only representing time, such as &lt;code&gt;LocalTime&lt;/code&gt;, will return null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e19ace8367bfd6da9f44be37d73c5cc78bc06bc" translate="yes" xml:space="preserve">
          <source>This queries a &lt;code&gt;TemporalAccessor&lt;/code&gt; for the time precision. If the target &lt;code&gt;TemporalAccessor&lt;/code&gt; represents a consistent or complete date-time, date or time then this must return the smallest precision actually supported. Note that fields such as &lt;code&gt;NANO_OF_DAY&lt;/code&gt; and &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; are defined to always return ignoring the precision, thus this is the only way to find the actual smallest supported unit. For example, were &lt;code&gt;GregorianCalendar&lt;/code&gt; to implement &lt;code&gt;TemporalAccessor&lt;/code&gt; it would return a precision of &lt;code&gt;MILLIS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94582e24a391df16a8ac836bf6c0f26b269b38a2" translate="yes" xml:space="preserve">
          <source>This queries a &lt;code&gt;TemporalAccessor&lt;/code&gt; for the zone. It first tries to obtain the zone, using &lt;a href=&quot;temporalqueries#zoneId--&quot;&gt;&lt;code&gt;zoneId()&lt;/code&gt;&lt;/a&gt;. If that is not found it tries to obtain the &lt;a href=&quot;temporalqueries#offset--&quot;&gt;&lt;code&gt;offset()&lt;/code&gt;&lt;/a&gt;. Thus a &lt;a href=&quot;../zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt; will return the result of &lt;code&gt;getZone()&lt;/code&gt;, while an &lt;a href=&quot;../offsetdatetime&quot;&gt;&lt;code&gt;OffsetDateTime&lt;/code&gt;&lt;/a&gt; will return the result of &lt;code&gt;getOffset()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683fb9b553d41b99498c9188d2305348a98875ce" translate="yes" xml:space="preserve">
          <source>This queries a &lt;code&gt;TemporalAccessor&lt;/code&gt; for the zone. The zone is only returned if the date-time conceptually contains a &lt;code&gt;ZoneId&lt;/code&gt;. It will not be returned if the date-time only conceptually has an &lt;code&gt;ZoneOffset&lt;/code&gt;. Thus a &lt;a href=&quot;../zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt; will return the result of &lt;code&gt;getZone()&lt;/code&gt;, but an &lt;a href=&quot;../offsetdatetime&quot;&gt;&lt;code&gt;OffsetDateTime&lt;/code&gt;&lt;/a&gt; will return null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e127110fb6f447739b707fe8e92ffa775424e56" translate="yes" xml:space="preserve">
          <source>This queries the date-time for the value of the specified field. The returned value may be outside the valid range of values for the field. If the date-time cannot return the value, because the field is unsupported or for some other reason, an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f5438f2761d22ad9ffbaa7884edc37a3cb45d3" translate="yes" xml:space="preserve">
          <source>This queries the date-time for the value of the specified field. The returned value will always be within the valid range of values for the field. If the date-time cannot return the value, because the field is unsupported or for some other reason, an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e6db5588774406fabf11920e9daf5eba3107cb" translate="yes" xml:space="preserve">
          <source>This queries the specified temporal object to return an object using the logic encapsulated in the implementing class. Examples might be a query that checks if the date is the day before February 29th in a leap year, or calculates the number of days to your next birthday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7176238ae4cbf5df921c1d098752b22b1cb8f11" translate="yes" xml:space="preserve">
          <source>This queries the temporal object for the value of this field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b55023bcfce5a3dd81cf7880345cbdc4a5b928" translate="yes" xml:space="preserve">
          <source>This queries this date for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a2ea8701b69a818636498f941d8f602f8344a1" translate="yes" xml:space="preserve">
          <source>This queries this date for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4da719cd092b08a74131eed236394f14e717ed" translate="yes" xml:space="preserve">
          <source>This queries this date using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb43d1bcbdb88f286803d33ea4073a2c8c30a723" translate="yes" xml:space="preserve">
          <source>This queries this date-time for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741114853d6f25058065725bfd64da1151b1bd49" translate="yes" xml:space="preserve">
          <source>This queries this date-time for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae508e19b85e850df75159fbebbd42ae9d755f8" translate="yes" xml:space="preserve">
          <source>This queries this date-time using the specified query strategy object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058516fa39fa5915f50381b46bc5d15036ae6c19" translate="yes" xml:space="preserve">
          <source>This queries this date-time using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a810f7f01b8e27cd246df5589f40fceba9e99ec" translate="yes" xml:space="preserve">
          <source>This queries this day-of-week for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2968e94bdf8058f26f84ca7cafd17231b3fbe32c" translate="yes" xml:space="preserve">
          <source>This queries this day-of-week for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59df2ae0d998a4ecf11455b827648e7d6c25237" translate="yes" xml:space="preserve">
          <source>This queries this day-of-week using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c63e2a8a20610cdfdf326d6d813a75d658dd681" translate="yes" xml:space="preserve">
          <source>This queries this era for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74edcee7ce0aba0c147773f3174f8c2d1b48a4e7" translate="yes" xml:space="preserve">
          <source>This queries this era for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd0eeb96cd2bc2d7207c10f4e02d4dbf92c0007" translate="yes" xml:space="preserve">
          <source>This queries this era using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9649dfb6743732021877366adc77f74ff302f480" translate="yes" xml:space="preserve">
          <source>This queries this instant for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed08c703efaa20c806da042790537e00c389beb0" translate="yes" xml:space="preserve">
          <source>This queries this instant for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb2c9df8ff70f32f804f228c991fdfda5a8f7f3" translate="yes" xml:space="preserve">
          <source>This queries this instant using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d726366ba84cde262a3754203e61e74d3e5b8a" translate="yes" xml:space="preserve">
          <source>This queries this month for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bbbda09795f416b62accf90e6424c6ab06718d" translate="yes" xml:space="preserve">
          <source>This queries this month for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce2a7901a265f34b88a1f93839ef62ae71981e2" translate="yes" xml:space="preserve">
          <source>This queries this month-day for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1015a854f0a80db1496c4852b962da4b935492" translate="yes" xml:space="preserve">
          <source>This queries this month-day for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb46af924e3cf782f2e3190cbdc64e2950462626" translate="yes" xml:space="preserve">
          <source>This queries this month-day using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99959c59fa3ebf5077cb5040bbefea7c1cb9b81" translate="yes" xml:space="preserve">
          <source>This queries this month-of-year using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a65cb7e1b8690b4a0ef299cb1fda71fc1559a4" translate="yes" xml:space="preserve">
          <source>This queries this offset for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b420633f2c17a93dafa3019be09cf8c52540110" translate="yes" xml:space="preserve">
          <source>This queries this offset for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6c363967a26b996c339a3c591ec708f221be10" translate="yes" xml:space="preserve">
          <source>This queries this offset using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83efeb0596442f5b95e7c5fb60110b8d5318657" translate="yes" xml:space="preserve">
          <source>This queries this time for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcaf6faefca28a62e84d74c375bc211c0ba9f65" translate="yes" xml:space="preserve">
          <source>This queries this time for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e926e6c7e55ecf26914a2f327154eca805f8fc2" translate="yes" xml:space="preserve">
          <source>This queries this time using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ef824ef70ad30db75aceae8f10587fc49e374c" translate="yes" xml:space="preserve">
          <source>This queries this year for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3455e2e24f151855eab3bfaa4b3b1c2a904fd3e" translate="yes" xml:space="preserve">
          <source>This queries this year for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7291e45ece50ca3c766431cbabd461f8f742af7b" translate="yes" xml:space="preserve">
          <source>This queries this year using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4d49a95241bb6c6468af90b59eb60260ffeda3" translate="yes" xml:space="preserve">
          <source>This queries this year-month for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c60563806058149b04ee40855b7e4c606e2eef4" translate="yes" xml:space="preserve">
          <source>This queries this year-month for the value of the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b56532de68545c791d96994608eb6882d92d1a" translate="yes" xml:space="preserve">
          <source>This queries this year-month using the specified query strategy object. The &lt;code&gt;TemporalQuery&lt;/code&gt; object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bbbabd9fb7698078cc4e0d27d49328fca72690" translate="yes" xml:space="preserve">
          <source>This queued job count attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73b1402dc4724fe2adba36fbf3674b2d3c4bbf4" translate="yes" xml:space="preserve">
          <source>This readResolve method follows the same invocation rules and accessibility rules as writeReplace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd71bf53f45646d4d77f5ac15898f952a7c562c" translate="yes" xml:space="preserve">
          <source>This reason indicates that it is known or suspected that the certificate subject's private key has been compromised. It applies to authority attribute (AA) certificates only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33dce86aec7d23b7bbb2f3f6f201204209c59f0d" translate="yes" xml:space="preserve">
          <source>This reason indicates that it is known or suspected that the certificate subject's private key has been compromised. It applies to certificate authority (CA) certificates only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d5f6639c5db228657d0612a50cdebf351c2711" translate="yes" xml:space="preserve">
          <source>This reason indicates that it is known or suspected that the certificate subject's private key has been compromised. It applies to end-entity certificates only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffaf1d2ab399103ed6a382a7bbe8291ff091d67e" translate="yes" xml:space="preserve">
          <source>This reason indicates that it is unspecified as to why the certificate has been revoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ecd6b339d00010c6d87c7fa5591840d79a20e0" translate="yes" xml:space="preserve">
          <source>This reason indicates that the certificate has been put on hold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2f534feca528585522d3e8253912abbb81ad24" translate="yes" xml:space="preserve">
          <source>This reason indicates that the certificate has been superseded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82f6b77e3cdeeeaa49d979b2c8b63f0f44854e5" translate="yes" xml:space="preserve">
          <source>This reason indicates that the certificate is no longer needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1a98bbb2ea937f36704db2023c3757e8da71d4" translate="yes" xml:space="preserve">
          <source>This reason indicates that the certificate was previously on hold and should be removed from the CRL. It is for use with delta CRLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47cf960ad78b88ee8ae60834582d6ebfd6d8fcb" translate="yes" xml:space="preserve">
          <source>This reason indicates that the privileges granted to the subject of the certificate have been withdrawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f537fecb3282d85eec0ec4f1aa594e95d34d0d" translate="yes" xml:space="preserve">
          <source>This reason indicates that the subject's name or other information has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c699b10bc8b8d578726e7130a4df8980cac7e3b" translate="yes" xml:space="preserve">
          <source>This rectangle is offset by (&lt;code&gt;getDestinationOffset().x&lt;/code&gt;, &lt;code&gt;getDestinationOffset().y&lt;/code&gt;) and clipped against the destination bounds. If no destination image has been set, the destination is defined to have a width of &lt;code&gt;getDestinationOffset().x&lt;/code&gt; + &lt;code&gt;w&lt;/code&gt;, and a height of &lt;code&gt;getDestinationOffset().y&lt;/code&gt; + &lt;code&gt;h&lt;/code&gt; so that all pixels of the source region may be written to the destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f116a1fc856d7a278049b21c4a74b7f9a635019a" translate="yes" xml:space="preserve">
          <source>This release does not define any &lt;em&gt;standard&lt;/em&gt; modifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597fa8c1a9131f423de6d375e4d958418a9d7453" translate="yes" xml:space="preserve">
          <source>This removes any previous request controls and adds &lt;code&gt;requestControls&lt;/code&gt; for use by subsequent methods invoked on this context. This method does not affect this context's connection request controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8026d1a7d0ff49e0c2e02cf36284a82e8987b1c9" translate="yes" xml:space="preserve">
          <source>This represents a marker interface for Configuration parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14924fea8fd7486a2360df337bbb1decca51d62e" translate="yes" xml:space="preserve">
          <source>This represents a marker interface for Policy parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3913f76d69ac0c895c345c4a1f8338e7ef19822a" translate="yes" xml:space="preserve">
          <source>This represents concept of the count of days within the period of a week where the weeks are aligned to the start of the month. This field is typically used with &lt;a href=&quot;chronofield#ALIGNED_WEEK_OF_MONTH&quot;&gt;&lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0049803386bb47daa6e8c079d82c925557b35e4" translate="yes" xml:space="preserve">
          <source>This represents concept of the count of days within the period of a week where the weeks are aligned to the start of the year. This field is typically used with &lt;a href=&quot;chronofield#ALIGNED_WEEK_OF_YEAR&quot;&gt;&lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4aca10d89213078b94fa72df5806abda6e8705" translate="yes" xml:space="preserve">
          <source>This represents concept of the count of weeks within the period of a month where the weeks are aligned to the start of the month. This field is typically used with &lt;a href=&quot;chronofield#ALIGNED_DAY_OF_WEEK_IN_MONTH&quot;&gt;&lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03e9c779e01c947095d4ae0014c7a61f305a217" translate="yes" xml:space="preserve">
          <source>This represents concept of the count of weeks within the period of a year where the weeks are aligned to the start of the year. This field is typically used with &lt;a href=&quot;chronofield#ALIGNED_DAY_OF_WEEK_IN_YEAR&quot;&gt;&lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81abdf1d1da9a608aa306ade1b2dabb829ff6fe" translate="yes" xml:space="preserve">
          <source>This represents the concept of the count of weeks within the month where weeks start on a fixed day-of-week, such as Monday. This field is typically used with &lt;a href=&quot;weekfields#dayOfWeek--&quot;&gt;&lt;code&gt;dayOfWeek()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbc2d1eb30001d49aa529d0718d0662c5276c95" translate="yes" xml:space="preserve">
          <source>This represents the concept of the count of weeks within the year where weeks start on a fixed day-of-week, such as Monday and each week belongs to exactly one year. This field is typically used with &lt;a href=&quot;weekfields#dayOfWeek--&quot;&gt;&lt;code&gt;dayOfWeek()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt;&lt;code&gt;weekBasedYear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559c87e01dacf6346115ff43a7c66524b7a40910" translate="yes" xml:space="preserve">
          <source>This represents the concept of the count of weeks within the year where weeks start on a fixed day-of-week, such as Monday. This field is typically used with &lt;a href=&quot;weekfields#dayOfWeek--&quot;&gt;&lt;code&gt;dayOfWeek()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccae918e26217d0e9f85c3a3ea90e7284e02a8f" translate="yes" xml:space="preserve">
          <source>This represents the concept of the day within the month. In the default ISO calendar system, this has values from 1 to 31 in most months. April, June, September, November have days from 1 to 30, while February has days from 1 to 28, or 29 in a leap year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e3e5fb5ab89b741c595e7048c7b52a91f5c871" translate="yes" xml:space="preserve">
          <source>This represents the concept of the day within the year. In the default ISO calendar system, this has values from 1 to 365 in standard years and 1 to 366 in leap years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa80f2945c6ecfdb206fe1322c870e6b094b24d" translate="yes" xml:space="preserve">
          <source>This represents the concept of the era, which is the largest division of the time-line. This field is typically used with &lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt;&lt;code&gt;YEAR_OF_ERA&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f74c556d7f8c1293b2371af06c559ab1e5544c1" translate="yes" xml:space="preserve">
          <source>This represents the concept of the month within the year. In the default ISO calendar system, this has values from January (1) to December (12).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9840de1346154aafc1079340c3c09c7c21078c25" translate="yes" xml:space="preserve">
          <source>This represents the concept of the offset in seconds of local time from UTC/Greenwich.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03f8024f845b90096dc680db4468d432f9f95d3" translate="yes" xml:space="preserve">
          <source>This represents the concept of the sequential count of seconds where 1970-01-01T00:00Z (ISO) is zero. This field may be used with &lt;a href=&quot;chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; to represent the fraction of the second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc2087ab76a5e40bfc2866806a79083bc05093b" translate="yes" xml:space="preserve">
          <source>This represents the concept of the year where weeks start on a fixed day-of-week, such as Monday and each week belongs to exactly one year. This field is typically used with &lt;a href=&quot;weekfields#dayOfWeek--&quot;&gt;&lt;code&gt;dayOfWeek()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt;&lt;code&gt;weekOfWeekBasedYear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06b6f4923305f918b25ad2624ea96fa62a940df" translate="yes" xml:space="preserve">
          <source>This represents the concept of the year within the era. This field is typically used with &lt;a href=&quot;chronofield#ERA&quot;&gt;&lt;code&gt;ERA&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa8676c407d8ff82b5af1aa0c1d6aa8b97e7eff" translate="yes" xml:space="preserve">
          <source>This represents the concept of the year, counting sequentially and using negative numbers. The proleptic year is not interpreted in terms of the era. See &lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt;&lt;code&gt;YEAR_OF_ERA&lt;/code&gt;&lt;/a&gt; for an example showing the mapping from proleptic year to year-of-era.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ac0ad92622189312352ccd32121eb9dc9d30a7" translate="yes" xml:space="preserve">
          <source>This represents the standard concept of the day of the week. In the default ISO calendar system, this has values from Monday (1) to Sunday (7). The &lt;a href=&quot;../dayofweek&quot;&gt;&lt;code&gt;DayOfWeek&lt;/code&gt;&lt;/a&gt; class can be used to interpret the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7a031274fcdfddcb1cda64f879eef337a9385d" translate="yes" xml:space="preserve">
          <source>This requesting user name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fab906225499e281cbcc8802f2936a84c6cefd" translate="yes" xml:space="preserve">
          <source>This requesting user name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebbc27b0a5d5a4e2f1903351f17d443fe86bfe8" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; formed from this date at the specified time. All possible combinations of date and time are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87354fb00800f07bc20e1b821343ae42e9625d77" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; formed from this date-time at the specified time-zone. The result will match this date-time as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23b844a7eef21bca9f0842ab78d489d3e153c06" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;Chronology&lt;/code&gt; based on the specified locale, typically returning &lt;code&gt;IsoChronology&lt;/code&gt;. Other calendar systems are only returned if they are explicitly selected within the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f279bc6f69adf94b824712b34da1bb2e98810c1c" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;HijrahDate&lt;/code&gt; with the specified fields. The day must be valid for the year and month, otherwise an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159de26e4c8db983a5e1b113023ef719905f9997" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;Instant&lt;/code&gt;, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0e1fd36240fc3a17e439684b86fdfc7c06a535" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;JapaneseDate&lt;/code&gt; with the specified fields. The day must be valid for the year and month, otherwise an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671b133197ae3cc4e02bd4f604929b8f7282da22" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt; based on this year-month. The day-of-month is set to the last valid day of the month, taking into account leap years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0b0c57184b9ae69c2c60443e3791de44b20728" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt; formed from this month-day and the specified year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310296d191f909b79a3e836666ac7aa0614bfb8c" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt; formed from this year and the specified day-of-year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f7221f246482d3240b5c9d882c124314449924" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt; formed from this year and the specified month-day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b61175b19230574c8854d084891f3544ddbf6ef" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt; formed from this year-month and the specified day-of-month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620b0d6dd7eca0d2b862d2d4d65d9d18ce761e35" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt; with the same year, month and day as this date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aab9633efd651fefa3818c0942ce8633149d6f2" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified epoch-day. The &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01. Negative numbers represent earlier days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d658ef2e10477baef7bf7120917a97bde0bdc393" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified year and day-of-year. The day-of-year must be valid for the year, otherwise an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fae2903f9e2f6160a8b07aa8aa15660733b765a" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified year, month and day-of-month. The day must be valid for the year and month, otherwise an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6281f1a6009073ae6cfa5d29c7c8b5dd71fcf625" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt;, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926974239343e3097d41f813e5f85da19545c37a" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt;, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b621d399196cefad7cb5dbda3a9d22ea0388cc3e" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt;, based on this one, with the date adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1808fe32aefcf5aca9c8234a5a79dad2a2ed7fc2" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt;, based on this one, with the specified amount added. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a43965e1fcd4e5fe1720a148227bc57a80b369" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt;, based on this one, with the specified amount subtracted. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6010345cd7193dcccba27f18e73fa576abe73fe" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDate&lt;/code&gt;, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the year, month or day-of-month. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38611ae52bf3564bf827c2d421703e4c07ad224e" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; formed from this date at the specified hour and minute. The seconds and nanosecond fields will be set to zero. The individual time fields must be within their valid range. All possible combinations of date and time are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7a2df2ff65d2b5f012786bc574cfe3b374219b" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; formed from this date at the specified hour, minute and second. The nanosecond field will be set to zero. The individual time fields must be within their valid range. All possible combinations of date and time are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26aa5f9a16a41b5ad9d26e039a3ccb630f4ef509" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; formed from this date at the specified hour, minute, second and nanosecond. The individual time fields must be within their valid range. All possible combinations of date and time are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b083306ad1a2aadcb8ea61ddd32fc360fb9dcc0" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; formed from this date at the specified time. All possible combinations of date and time are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770fa63d46f56556a442c17dbdfe8fbc21401bab" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; formed from this date at the time of midnight, 00:00, at the start of this date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebb6e87efa659f8818e8d7ca5395486cd2509a8" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; formed from this time at the specified date. All possible combinations of date and time are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d613117bbd89759a3f912d00de93f4bf5c66395b" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; with the same year, month, day and time as this date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc831a85f53d8181bd7af6b61d8711bd262bae7" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; with the specified year, month, day-of-month, hour and minute. The day must be valid for the year and month, otherwise an exception will be thrown. The second and nanosecond fields will be set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa37225e20131ecd2da264455cc417d21ca84564" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; with the specified year, month, day-of-month, hour, minute and second. The day must be valid for the year and month, otherwise an exception will be thrown. The nanosecond field will be set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dac8e5199e05d1704648fc0c0f2fd7341775b6d" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt; with the specified year, month, day-of-month, hour, minute, second and nanosecond. The day must be valid for the year and month, otherwise an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5802d09e827bba1631b17ea5185eeb289a545b" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt;, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c7d7bd35ad78669cd8385b10107082879e45b1" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt;, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaa8faa438ad251b7f7e445ad79289966ff78db" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt;, based on this one, with the date-time adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f90c4c580c8763b999d7dffbf1b2499f82c6e6b" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt;, based on this one, with the specified amount added. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92ee8408f997894dace14895264accbe314ff85" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt;, based on this one, with the specified amount subtracted. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d524eedf2ace72e66e533fa3154dcacbc89485" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalDateTime&lt;/code&gt;, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the year, month or day-of-month. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11ad88bee33dd858b1f078116d61bde445b2d41" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt; with the same hour, minute, second and nanosecond as this date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6f6d3af7e17a27209da885a06595240e64b7f9" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified hour and minute. The second and nanosecond fields will be set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bdd42dc3254170c6a17cb8f3f6c380ac50a5ea" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified hour, minute and second. The nanosecond field will be set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704c69dfbc4b4be61bac7e47a446b86d531790a8" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified hour, minute, second and nanosecond.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be75ebcfe24b02abaf70917e70a30b405466e20" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nanosecond-of-day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f6c2b4a838362f13034b8a0ae3ad15e4609507" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified second-of-day. The nanosecond field will be set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fe709901a4a2955332a89caea1a4966601f92f" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt;, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970703dac700f326309065dc46c7538c1128e17e" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt;, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7318cc0ded87393e67a9f61c9ab4c2a3ad2dbf0" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt;, based on this one, with the specified amount added. The amount is typically &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc56279529639238ee8990dc6d0cb0d03f2ee62c" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt;, based on this one, with the specified amount subtracted. The amount is typically &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03c4b86af4db6f249dfa8b9e80934971acfb04c" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt;, based on this one, with the time adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b9a0bdfaeacbe9dd7b7ca66bae2f410ad82f40" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;LocalTime&lt;/code&gt;, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the hour, minute or second. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8494750ab6d4a0feed6988c84799128cdf283ff" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;MinguoDate&lt;/code&gt; with the specified fields. The day must be valid for the year and month, otherwise an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78aa371eebf445c40f8e0bd49adbbf81a82c539f" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;TemporalQuery&lt;/code&gt; that can be used to query a temporal object for the local date. The query will return null if the temporal object cannot supply a local date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac965c423d941470ebb9b7432c2d3d1e35b6860a" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;TemporalQuery&lt;/code&gt; that can be used to query a temporal object for the local time. The query will return null if the temporal object cannot supply a local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9d7cf5ce155f2bda54030230bbac44d47fc823" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;TemporalQuery&lt;/code&gt; that can be used to query a temporal object for the offset. The query will return null if the temporal object cannot supply an offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca5095e7c3473f8ca4f52927371ad8637145984" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; with the specified fields. The day must be valid for the year and month, otherwise an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b143dc796762a6fb7293c6c1d751264901878da9" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;Year&lt;/code&gt;, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad75b902219e8210bf5be6dc674eb0b8c37e2cd" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;Year&lt;/code&gt;, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d9c657a33a5bd9de741b42d64ba4e9a5bbcf08" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;Year&lt;/code&gt;, based on this one, with the specified amount added. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5006d1eebd643242a7a1208474fffac92ffec64" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;Year&lt;/code&gt;, based on this one, with the specified amount subtracted. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b233664d89f5633e1c3e1dd9d935b58a5f5105" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;Year&lt;/code&gt;, based on this one, with the value for the specified field changed. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9578a1b5130c63c1b07d2684bc1becd5fd1aebe" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;Year&lt;/code&gt;, based on this one, with the year adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16c96e37972c0a5c597f175ed5bcf2922facff5" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;YearMonth&lt;/code&gt; formed from this year and the specified month. All possible combinations of year and month are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e6b54c09db2c189799f85db7bccb44fa7d428e" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;YearMonth&lt;/code&gt;, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312b63bce5318f566394e82305fa7472ae66b182" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;YearMonth&lt;/code&gt;, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe6e572eeffcdb9f6340e5fecb4605b95d4c293" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;YearMonth&lt;/code&gt;, based on this one, with the specified amount added. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3d2b6e5d31a3285424385d51ee5cd1ba6ab4bc" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;YearMonth&lt;/code&gt;, based on this one, with the specified amount subtracted. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b40fe04e9cce683a4c83570836f8dc06623ddf6" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;YearMonth&lt;/code&gt;, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the year or month. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adaceb34a32603f6b3f596c59dc5622c11f95faa" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;YearMonth&lt;/code&gt;, based on this one, with the year-month adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72f5957cdfb0d60b723f124399d4f0aee9595c7" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ZonedDateTime&lt;/code&gt; formed from this date-time and the specified time-zone. This conversion will ignore the visible local date-time and use the underlying instant instead. This avoids any problems with local time-line gaps or overlaps. The result might have different values for fields such as hour, minute an even day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676374d78ea0d8e5c46e1b47870daea1a51c4eac" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ZonedDateTime&lt;/code&gt; formed from this date-time and the specified time-zone. Where possible, the result will have the same local date-time as this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bf69a32ed1b98b3093a61c9614e6c0325c7bf0" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ZonedDateTime&lt;/code&gt; formed from this date-time at the specified time-zone. The result will match this date-time as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b80cd6549237bf743c64e615c04e14d9ef91637" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ZonedDateTime&lt;/code&gt;, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef259fb176363bee37c93a3d1e89d7427be85af" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ZonedDateTime&lt;/code&gt;, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45973a1693c18ca0132f2007c28bf281ff1f4f47" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ZonedDateTime&lt;/code&gt;, based on this one, with the date-time adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6734e437eb010e73ff677bd081117f28800891" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ZonedDateTime&lt;/code&gt;, based on this one, with the specified amount added. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a072e00b222295248783ac07722769910b2164" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ZonedDateTime&lt;/code&gt;, based on this one, with the specified amount subtracted. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cfe66e19138423cfb327e34c3d3a4755b71b7c" translate="yes" xml:space="preserve">
          <source>This returns a &lt;code&gt;ZonedDateTime&lt;/code&gt;, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the year, month or day-of-month. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44bec7f0ddc1cdecca4bb74419c3bf7719b6b76" translate="yes" xml:space="preserve">
          <source>This returns a chronology based on either the ID or the type. The &lt;a href=&quot;chronology#getId--&quot;&gt;&lt;code&gt;chronology ID&lt;/code&gt;&lt;/a&gt; uniquely identifies the chronology. The &lt;a href=&quot;chronology#getCalendarType--&quot;&gt;&lt;code&gt;calendar system type&lt;/code&gt;&lt;/a&gt; is defined by the CLDR specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11081f54804acd0580cca05e285902c1aee371cb" translate="yes" xml:space="preserve">
          <source>This returns a duration with the specified nano-of-second, retaining the seconds part of this duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d66a851d1c4e7ff2ed58d405ef60e5300f8a09" translate="yes" xml:space="preserve">
          <source>This returns a duration with the specified seconds, retaining the nano-of-second part of this duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbaa6618a56e31d3abf401886b5f08e3e639f8c" translate="yes" xml:space="preserve">
          <source>This returns a formatter that will format or parse a date-time. The exact format pattern used varies by locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd662256e6acf6d496b5c7eecaa5c6211b2492a" translate="yes" xml:space="preserve">
          <source>This returns a formatter that will format or parse a date. The exact format pattern used varies by locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2066ab5b2392b96b4995cf2169976ca9feac6e" translate="yes" xml:space="preserve">
          <source>This returns a formatter that will format or parse a time. The exact format pattern used varies by locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a01460bdbaff23a926c20b64a81572b0947fa64" translate="yes" xml:space="preserve">
          <source>This returns a formatter with similar state to this formatter but with the override chronology set. By default, a formatter has no override chronology, returning null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ebbc9ea2b632db421b65c45170d57ecf469a39" translate="yes" xml:space="preserve">
          <source>This returns a formatter with similar state to this formatter but with the override zone set. By default, a formatter has no override zone, returning null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ca20c9a783cafda1a1866f975830868528a6eb" translate="yes" xml:space="preserve">
          <source>This returns a formatter with similar state to this formatter but with the resolver fields set. By default, a formatter has no resolver fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991c413231067eba69f6977e48e6db2541adba0b" translate="yes" xml:space="preserve">
          <source>This returns a formatter with similar state to this formatter but with the resolver style set. By default, a formatter has the &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt; resolver style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02195d4643308555e87433710593fb3ce5432d88" translate="yes" xml:space="preserve">
          <source>This returns a local date with the same year, month and day as this date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df59aedaeeba5ffd6cb8488c13a67d9c4930f78" translate="yes" xml:space="preserve">
          <source>This returns a local time with the same hour, minute, second and nanosecond as this date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e07a08205e2cc8483c1c5f8134bf4aa08412b75" translate="yes" xml:space="preserve">
          <source>This returns a map of historical rules keyed by a version string. The exact meaning and format of the version is provider specific. The version must follow lexicographical order, thus the returned map will be order from the oldest known rules to the newest available rules. The default 'TZDB' group uses version numbering consisting of the year followed by a letter, such as '2009e' or '2012f'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bab08a0552d94f06ef6dcbf37ad7d74bce22665" translate="yes" xml:space="preserve">
          <source>This returns a month-day with the specified day-of-month. If the day-of-month is invalid for the month, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923586b17fc498a590f906db64725673bdc46571" translate="yes" xml:space="preserve">
          <source>This returns a month-day with the specified month. If the day-of-month is invalid for the specified month, the day will be adjusted to the last valid day-of-month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc30378ece26d35e47c8535808b6b0fdbcb45f5" translate="yes" xml:space="preserve">
          <source>This returns a new object based on this one with the value for the specified field changed. For example, on a &lt;code&gt;LocalDate&lt;/code&gt;, this could be used to set the year, month or day-of-month. The returned object will have the same observable type as this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33509e59c03344264bab7be48a4f8c601d62f40c" translate="yes" xml:space="preserve">
          <source>This returns a new temporal object based on the specified one with the value for this field changed. For example, on a &lt;code&gt;LocalDate&lt;/code&gt;, this could be used to set the year, month or day-of-month. The returned object has the same observable type as the specified object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3d39192911732fe215e2f237b059943d82cd73" translate="yes" xml:space="preserve">
          <source>This returns a period tied to the ISO chronology using the specified years, months and days. See &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554d08f2898602703ee68c405694d53de5fb73fb" translate="yes" xml:space="preserve">
          <source>This returns a period tied to this chronology using the specified years, months and days. All supplied chronologies use periods based on years, months and days, however the &lt;code&gt;ChronoPeriod&lt;/code&gt; API allows the period to be represented using other units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf815500f0a8567b3edf3a02733ee183b7e6c31" translate="yes" xml:space="preserve">
          <source>This returns a period with each of the years, months and days units individually multiplied. For example, a period of &quot;2 years, -3 months and 4 days&quot; multiplied by 3 will return &quot;6 years, -9 months and 12 days&quot;. No normalization is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72c3e0d265ddeeb05ae08c41f1b2d40b30a82f8" translate="yes" xml:space="preserve">
          <source>This returns a period with each of the years, months and days units individually negated. For example, a period of &quot;2 years, -3 months and 4 days&quot; will be negated to &quot;-2 years, 3 months and -4 days&quot;. No normalization is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d74f4cd3ad7fcda3043bde4924c1888cdd4163" translate="yes" xml:space="preserve">
          <source>This returns a period with each supported unit individually multiplied. For example, a period of &quot;2 years, -3 months and 4 days&quot; multiplied by 3 will return &quot;6 years, -9 months and 12 days&quot;. No normalization is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4039f9cd72211de4f9159993055bf911c588735" translate="yes" xml:space="preserve">
          <source>This returns a period with each supported unit individually negated. For example, a period of &quot;2 years, -3 months and 4 days&quot; will be negated to &quot;-2 years, 3 months and -4 days&quot;. No normalization is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d5b25b36f778b44625af405aa3ed9fb4b0e051" translate="yes" xml:space="preserve">
          <source>This returns a singleton &lt;a href=&quot;../temporal/temporalquery&quot;&gt;query&lt;/a&gt; that provides access to additional information from the parse. The query always returns a non-null boolean, true if parsing saw a leap-second, false if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace9e8bb38c700887e071566e63c26fd82ec508b" translate="yes" xml:space="preserve">
          <source>This returns a singleton &lt;a href=&quot;../temporal/temporalquery&quot;&gt;query&lt;/a&gt; that provides access to additional information from the parse. The query always returns a non-null period, with a zero period returned instead of null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa63c107207685cce400b6e0b00689ddeb59c0f4" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the date and time changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a114c193e248e18b616fff1454425f08fe2a67" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the date changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ff1790f466eb611361798d96a7d3caceda4cc4" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the day-of-week changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e417f268c26d0c74b43796166eb7bac7dd1fee03" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the era changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9da0cdda2d8f94dec4ef5bc723198f4d5422b0" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the instant changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa8ff68f2dbc15cbf8df481d160109950337517" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the month and day-of-month changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9025da6b24961d790a24ed8e9f4c9a89f6abf1" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the month-of-year changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72df566d774972f514d20cb0c884ed23a98cf0fc" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the offset and time changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9c529967741eea5df9ec35aa96c9121ec3e59a" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the offset changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb8b6a814de5c376e7e4f0b5312c9ed603038fe" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the offset, date and time changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61a31f7f869c056767be3486fd180c8a43b24c4" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the time changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de67fc7fcb1601f7f6bee6ca1846372846785351" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the year and month changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc148d7cfc07cf3178f9d051b4c32d72a4257d17" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with the year changed to be the same as this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813a6011b2b65e54da8409cb48f431336d0db82c" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with this duration added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dedcf82132c102b871182a582757bd4a01c979d" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with this duration subtracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74a037eed2feb50e3ccf222e36580972d468e19" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with this period added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f80e7486d68476028daa9ad3ee8589a0c199030" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with this period added. If the temporal has a chronology, it must be the ISO chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe0fae41231f4d06c778d745bb08ac460aa8352" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with this period subtracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1230282e07cf030b86f30b94210265068798b15c" translate="yes" xml:space="preserve">
          <source>This returns a temporal object of the same observable type as the input with this period subtracted. If the temporal has a chronology, it must be the ISO chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f2b0f87201e0c6482eb55b5ea1c5b3418ed73f" translate="yes" xml:space="preserve">
          <source>This returns a value for each of the three supported units, &lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. All other units throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913d8f6f6b5e3db83c88c9eb2ff8e6d0b52aa525" translate="yes" xml:space="preserve">
          <source>This returns a value for each of the two supported units, &lt;a href=&quot;temporal/chronounit#SECONDS&quot;&gt;&lt;code&gt;SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#NANOS&quot;&gt;&lt;code&gt;NANOS&lt;/code&gt;&lt;/a&gt;. All other units throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bcf2ab7a409dbd591feda4d7401c5e1774f3d7" translate="yes" xml:space="preserve">
          <source>This returns a zoned date-time where the zone ID is the same as &lt;a href=&quot;zoneddatetime#getOffset--&quot;&gt;&lt;code&gt;getOffset()&lt;/code&gt;&lt;/a&gt;. The local date-time, offset and instant of the result will be the same as in this date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a37ef919e31a1f7182500ab4e689af81a0ec9f" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;Instant&lt;/code&gt; representing the same point on the time-line as this date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d745db1bd4c675804eebff051989a918536e1524" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;Instant&lt;/code&gt; representing the same point on the time-line as this date-time. The calculation combines the &lt;a href=&quot;chronozoneddatetime#toLocalDateTime--&quot;&gt;local date-time&lt;/a&gt; and &lt;a href=&quot;chronozoneddatetime#getOffset--&quot;&gt;offset&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37eab0fd2ff69038250521d3de4bc17bf989ed61" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;Instant&lt;/code&gt;, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0478548478d51af33ef844cafecc59f0d0c755bd" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;Instant&lt;/code&gt;, based on this one, with the instant adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d7cfd7eeeda6eea6e3470975c3617217a07199" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;Instant&lt;/code&gt;, based on this one, with the specified amount added. The amount is typically &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d1f2e3158de4c890658c09f0ac9edd256f9870" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;Instant&lt;/code&gt;, based on this one, with the specified amount subtracted. The amount is typically &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7f4c2cf40a51729c986bce6e4be7075a7461e7" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;Instant&lt;/code&gt;, based on this one, with the value for the specified field changed. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2992941426c41c6bbc527c7c5d20c9827f5e2d7c" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt; formed from this date at the specified time. All possible combinations of date and time are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec3615eb75996a0a26434fb0fa485edccbf8b37" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt; formed from this date-time at the specified offset. All possible combinations of date-time and offset are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880c2ee463c810d3becc8c4bed5945e006817961" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt; formed from this instant at the specified offset from UTC/Greenwich. An exception will be thrown if the instant is too large to fit into an offset date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5189c884bf5830721ff6fa22f37eb954073e8d9" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt; formed from this time and the specified date. All possible combinations of date and time are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008b361963d08c5147c3e3268e83386af7745888" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt;, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18217c3ab01ea0657797c4c32a918c9742f1cc1" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt;, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3641951803fc877ed59093c9faaa0bd1c933171" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt;, based on this one, with the date-time adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52df485e956afbde7e9218bc7a8c7405ec921186" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt;, based on this one, with the specified amount added. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac01890195426910593f1ae6f8aa4bafcb1c3735" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt;, based on this one, with the specified amount subtracted. The amount is typically &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42d78f9dc7b20ad7b9cc7ccdfdc5bedaaf953a5" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetDateTime&lt;/code&gt;, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the year, month or day-of-month. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d2a3bedd8b1769d9a3004c7fcdb84d0a64f690" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetTime&lt;/code&gt; formed from this time at the specified offset. All possible combinations of time and offset are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b7e4dbfcb26182d8389919e528332c3e2578fd" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetTime&lt;/code&gt;, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117fbe91250075a2ea26a45a3512cb87a6a68531" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetTime&lt;/code&gt;, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447e87c28d9d7a6d47fc96d26d0620b26c160c45" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetTime&lt;/code&gt;, based on this one, with the specified amount added. The amount is typically &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b96abcb46a603a0b4ec0086bda28c8367905468" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetTime&lt;/code&gt;, based on this one, with the specified amount subtracted. The amount is typically &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43733f6b301ea1c9e18bb02fc2539a14f390b9fd" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetTime&lt;/code&gt;, based on this one, with the time adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7d5d3cf8a563ac8525d1ddb74311de951f7622" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;OffsetTime&lt;/code&gt;, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the hour, minute or second. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9d24a0521335c00001d8f584b99d6e07ab80e9" translate="yes" xml:space="preserve">
          <source>This returns an &lt;code&gt;ZonedDateTime&lt;/code&gt; formed from this instant at the specified time-zone. An exception will be thrown if the instant is too large to fit into a zoned date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3cf7f5891f590c2460d83fcc023576435758e1" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing a format that extends the ISO-8601 extended offset date-time format to add the time-zone. The section in square brackets is not part of the ISO-8601 standard. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eee421f62c3976f53cefad078af79ca0ea4d28" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing most of the RFC-1123 format. RFC-1123 updates RFC-822 changing the year from two digits to four. This implementation requires a four digit year. This implementation also does not handle North American or military zone names, only 'GMT' and offset amounts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991db3fe69bc88f699697611b3a8d632f5faa963" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 basic local date format. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc45161156c7aa82736036493a235b6fa5d72dfd" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 extended date format. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64f2b0ee35ee2145eedca35085dbf5167349a71" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 extended local date format. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76956a16c6de45367cb0a5501a4d93b356b1252f" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 extended local or offset date-time format, as well as the extended non-ISO form specifying the time-zone. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4edacace093a94145bd7ed8fd8c83ab19262db" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 extended local time format. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e79f0494e6eef67390338a75c6b92f0ce12f460" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 extended offset date format. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3a0e82d9baac26d1543aa07ccdd142f692b392" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 extended offset date-time format. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb59da19a31ae2bb22ac679bbafa14869834b53" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 extended offset time format. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1e1bfb7989ca2464a993e7902d9366805030ea" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 extended ordinal date format. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd59efc89cff3fbd57117900bb0a88c630cdaee" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 extended week-based date format. The format consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b4feba4bd190a41f8f470a5a18a0f6aca52383" translate="yes" xml:space="preserve">
          <source>This returns an immutable formatter capable of formatting and parsing the ISO-8601 instant format. When formatting, the second-of-minute is always output. The nano-of-second outputs zero, three, six or nine digits digits as necessary. When parsing, time to at least the seconds field is required. Fractional seconds from zero to nine are parsed. The localized decimal style is not used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d26129de09f6da4202262c4524f02eb39584d7f" translate="yes" xml:space="preserve">
          <source>This returns an instant representing the current instant as defined by the clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64922aeecd1f717b992fd3acc18ce94662fe9fa4" translate="yes" xml:space="preserve">
          <source>This returns an offset time with the same local time and offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d92550695ec90648f0861f9b22526e80f7b9c3d" translate="yes" xml:space="preserve">
          <source>This returns details of the next transition after the specified instant. For example, if the instant represents a point where &quot;Summer&quot; daylight savings time applies, then the method will return the transition to the next &quot;Winter&quot; time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d39006366a06976d3c14daff6b5f591120f498a" translate="yes" xml:space="preserve">
          <source>This returns details of the previous transition after the specified instant. For example, if the instant represents a point where &quot;summer&quot; daylight saving time applies, then the method will return the transition from the previous &quot;winter&quot; time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac076647ac216c18f5f92657baa10eac4598f96e" translate="yes" xml:space="preserve">
          <source>This returns the day-of-year that this month begins on, using the leap year flag to determine the length of February.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85adf0ce2eb81aa9793ffaae9d507ca265cd7512" translate="yes" xml:space="preserve">
          <source>This returns the days unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2568966702048833bb047169d5a86ecad31410" translate="yes" xml:space="preserve">
          <source>This returns the latest available rules for the zone ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698bb3e14421510ee8f0dde287f9ff296220edd4" translate="yes" xml:space="preserve">
          <source>This returns the length of the month in days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a0b7a0d5b73826aa985c6def30e388bc9e8d78" translate="yes" xml:space="preserve">
          <source>This returns the length of the month in days. For example, a date in January would return 31.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa25cb17469c5fee7818cb0491daf6eab530772" translate="yes" xml:space="preserve">
          <source>This returns the length of the month in days. Month lengths in the Hijrah calendar system vary between 29 and 30 days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d474e18979b1fd6e2f51c8e4cabbc71f465a8b" translate="yes" xml:space="preserve">
          <source>This returns the length of the month in days. Month lengths match those of the ISO calendar system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e08dc113f0874dae1acb7ed515e5a0e8999c046" translate="yes" xml:space="preserve">
          <source>This returns the length of the year in days, either 365 or 366.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f3a90e42caf168d0fdc1d1c84e9f7b7d15e928" translate="yes" xml:space="preserve">
          <source>This returns the length of the year in days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf3c8b5e7687e6308a4be54ea4774f2aa853cd8" translate="yes" xml:space="preserve">
          <source>This returns the length of the year in days. A Hijrah calendar system year is typically shorter than that of the ISO calendar system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe3ac88bf39a76da4732bdf44e668f3aeabe5b5" translate="yes" xml:space="preserve">
          <source>This returns the millisecond-based instant, measured from 1970-01-01T00:00Z (UTC). This is equivalent to the definition of &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a67dbd5ed250cca48be12a5099d8c289ede88d" translate="yes" xml:space="preserve">
          <source>This returns the months unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d0deb28c8b702f4dacadc6659aa4fb0eb51cc0" translate="yes" xml:space="preserve">
          <source>This returns the override chronology, used to convert dates. By default, a formatter has no override chronology, returning null. See &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;withChronology(Chronology)&lt;/code&gt;&lt;/a&gt; for more details on overriding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b009ec74c468ab2d72c45bdbfb9715ea2d55c7cf" translate="yes" xml:space="preserve">
          <source>This returns the override zone, used to convert instants. By default, a formatter has no override zone, returning null. See &lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZone(ZoneId)&lt;/code&gt;&lt;/a&gt; for more details on overriding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8c9085f46aae4c4967e39ba7f11364d7b0e0f8" translate="yes" xml:space="preserve">
          <source>This returns the resolver fields, used during the second phase of parsing when fields are resolved into dates and times. By default, a formatter has no resolver fields, and thus returns null. See &lt;a href=&quot;datetimeformatter#withResolverFields-java.util.Set-&quot;&gt;&lt;code&gt;withResolverFields(Set)&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6b49f99ff4bf2580087673d2d32655ac42cf69" translate="yes" xml:space="preserve">
          <source>This returns the resolver style, used during the second phase of parsing when fields are resolved into dates and times. By default, a formatter has the &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt; resolver style. See &lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fd8336fc362bc5aac55e1897bc653403768731" translate="yes" xml:space="preserve">
          <source>This returns the stored time-zone id used to determine the time-zone rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bafd5d00918f4bcca7ec8974909bf2d2e89d7bb" translate="yes" xml:space="preserve">
          <source>This returns the textual name used to identify the chronology, suitable for presentation to the user. The parameters control the style of the returned text and the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce375a6da270c55f61a60db92f4bf608a55d99c4" translate="yes" xml:space="preserve">
          <source>This returns the textual name used to identify the day-of-week, suitable for presentation to the user. The parameters control the style of the returned text and the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb2bd6bd70e9525d0549c9af4a6bae2085b9f40" translate="yes" xml:space="preserve">
          <source>This returns the textual name used to identify the era, suitable for presentation to the user. The parameters control the style of the returned text and the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53590da3c9ae5519901d33cba0b185bdfb2f416b" translate="yes" xml:space="preserve">
          <source>This returns the textual name used to identify the month-of-year, suitable for presentation to the user. The parameters control the style of the returned text and the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4123dfbf0c9d35368934c8fd196497f33e9985" translate="yes" xml:space="preserve">
          <source>This returns the textual name used to identify the time-zone ID, suitable for presentation to the user. The parameters control the style of the returned text and the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5744e1220c1b523bda776b9b5af68a90f90cbfc7" translate="yes" xml:space="preserve">
          <source>This returns the total number of days in the duration by dividing the number of seconds by 86400. This is based on the standard definition of a day as 24 hours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a225141cff24cd2a1222f9a8085e5adc6e8a87b" translate="yes" xml:space="preserve">
          <source>This returns the total number of hours in the duration by dividing the number of seconds by 3600.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14275e94ae32e7034c89aeddae90a84a23c09ea" translate="yes" xml:space="preserve">
          <source>This returns the total number of minutes in the duration by dividing the number of seconds by 60.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8706b7efa6b987be8f9ce75c90f454c68504b837" translate="yes" xml:space="preserve">
          <source>This returns the total number of months in the period by multiplying the number of years by 12 and adding the number of months.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c2e614c04c3ba693e6ea33cfadc03848bce057" translate="yes" xml:space="preserve">
          <source>This returns the years unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334e86618febc92e8719958eb7bf5aa1c9bd49ce" translate="yes" xml:space="preserve">
          <source>This returns the zone ID. This identifies the time-zone &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; that determine when and how the offset from UTC/Greenwich changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b02f78fad7d08257e61a225265f273ba2d11bf" translate="yes" xml:space="preserve">
          <source>This routine provides a hook to enable the current version of Serialization to write in a format that is backwards compatible to a previous version of the stream format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8da78bdcdc1e67725fd498b450f05b888b2feec" translate="yes" xml:space="preserve">
          <source>This runtime exception is thrown to indicate that a method parameter which was expected to be an item name of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94145887480bb76b20808a96af12fa9c5a409ff7" translate="yes" xml:space="preserve">
          <source>This runtime exception is thrown to indicate that the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b651149e7843322ccc9da8cc484107115589569" translate="yes" xml:space="preserve">
          <source>This runtime exception is thrown to indicate that the index of a row to be added to a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dac59d8fe86b40d1db5fa3522f97fea2c0b28c" translate="yes" xml:space="preserve">
          <source>This section is intended to provide a brief overview of formatting concepts. For precise behavioral details, refer to the &lt;a href=&quot;#detail&quot;&gt;Details&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a4b0dae45272436ce02a39126f76b893fb7099" translate="yes" xml:space="preserve">
          <source>This section is intended to provide behavioral details for formatting, including conditions and exceptions, supported data types, localization, and interactions between flags, conversions, and data types. For an overview of formatting concepts, refer to the &lt;a href=&quot;#summary&quot;&gt;Summary&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e68a8133fa9b4008791dc21b4cc023b10fa2702" translate="yes" xml:space="preserve">
          <source>This selectable channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc9600db137d139d932414b45eb96b9268cd79e" translate="yes" xml:space="preserve">
          <source>This selection key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5ffe6a42022525353df9fceb3b58f71b90b54a" translate="yes" xml:space="preserve">
          <source>This selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a6bf1b800fb98f85559e591690d03d378f373e" translate="yes" xml:space="preserve">
          <source>This selector's key set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a16b0d4353f6c201778a73c44fa5c84d982a251" translate="yes" xml:space="preserve">
          <source>This selector's selected-key set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456674d59034bdba55239785e2e4ad229d8cd966" translate="yes" xml:space="preserve">
          <source>This set can be used in conjunction with &lt;a href=&quot;chronoperiod#get-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;get(TemporalUnit)&lt;/code&gt;&lt;/a&gt; to access the entire state of the period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ac481a6ec0ae773b822b574daa881f52a6b14f" translate="yes" xml:space="preserve">
          <source>This set can be used in conjunction with &lt;a href=&quot;duration#get-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;get(TemporalUnit)&lt;/code&gt;&lt;/a&gt; to access the entire state of the duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd18d39815370874d9a46fd6d98118abe3a9dbaf" translate="yes" xml:space="preserve">
          <source>This set can be used in conjunction with &lt;a href=&quot;period#get-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;get(TemporalUnit)&lt;/code&gt;&lt;/a&gt; to access the entire state of the period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb3e18da75477fc612a82ac2bfee5de4c8683bc" translate="yes" xml:space="preserve">
          <source>This set includes the string form of all available region-based IDs. Offset-based zone IDs are not included in the returned set. The ID can be passed to &lt;a href=&quot;zoneid#of-java.lang.String-&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;ZoneId&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ebd5419ab385f23a18b48360c9e60ad2e226ab" translate="yes" xml:space="preserve">
          <source>This set of fields provide field-based access to manipulate a date, time or date-time. The standard set of fields can be extended by implementing &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f39cd73d53a8bba2f7fdf6c7ee14c95368b9bf" translate="yes" xml:space="preserve">
          <source>This set of units provide unit-based access to manipulate a date, time or date-time. The standard set of units can be extended by implementing &lt;a href=&quot;temporalunit&quot;&gt;&lt;code&gt;TemporalUnit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19f092bdc263fa849ee399523c71e175708aec9" translate="yes" xml:space="preserve">
          <source>This set should only be used while synchronized upon it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d3168a6e9a0e95fc4c95f399dfe803942a42a4" translate="yes" xml:space="preserve">
          <source>This set-of-integer attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ea65e39761bd209916627edf67d5f575e993da" translate="yes" xml:space="preserve">
          <source>This set-of-integer attribute's members in canonical array form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061f8e905678df0b21d773ba87766e26e7890e11" translate="yes" xml:space="preserve">
          <source>This sets the amount of the days unit in a copy of this period. The years and months units are unaffected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcbf0130af48adfc6fd14d8ddca6226cf08ba25" translate="yes" xml:space="preserve">
          <source>This sets the amount of the months unit in a copy of this period. The years and days units are unaffected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e990e51d9d97f77db96cee0ca522d398ad8b9ba" translate="yes" xml:space="preserve">
          <source>This sets the amount of the years unit in a copy of this period. The months and days units are unaffected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdbac4dde8b94380ef3d0fae0b90cc88a917e8a" translate="yes" xml:space="preserve">
          <source>This should be in the plural and upper-first camel case, such as 'Days' or 'Minutes'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4955d45d2d6df0040c06164fafd783ba3345d640" translate="yes" xml:space="preserve">
          <source>This signature object is reset to its initial state (the state it was in after a call to one of the &lt;code&gt;initSign&lt;/code&gt; methods) and can be reused to generate further signatures with the same private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2e6479b2da5f01704d337835ee7984f7347015" translate="yes" xml:space="preserve">
          <source>This socket option is intended for use with sockets that are configured in &lt;a href=&quot;../nio/channels/selectablechannel#isBlocking--&quot;&gt;&lt;code&gt;blocking&lt;/code&gt;&lt;/a&gt; mode only. The behavior of the &lt;code&gt;close&lt;/code&gt; method when this option is enabled on a non-blocking socket is not defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c5b63c8e45adb6466e5f8c9d0671e399c03d7c" translate="yes" xml:space="preserve">
          <source>This sort is guaranteed to be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe7595312433eec96238f23e4e1031799a9ba6d" translate="yes" xml:space="preserve">
          <source>This sounds more complicated than it is in practice. For example, the following are equivalent ways of expressing the same thing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5641892125662b3b0a13d92b8c7441fd3e81f85d" translate="yes" xml:space="preserve">
          <source>This specification is divided into two sections. The first section, &lt;a href=&quot;#summary&quot;&gt;Summary&lt;/a&gt;, covers the basic formatting concepts. This section is intended for users who want to get started quickly and are familiar with formatted printing in other programming languages. The second section, &lt;a href=&quot;#detail&quot;&gt;Details&lt;/a&gt;, covers the specific implementation details. It is intended for users who want more precise specification of formatting behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17dd1467678e8e968d6375d2680c5ecbace4b32" translate="yes" xml:space="preserve">
          <source>This stream's length, in sample frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bbdb20f4b0f58fc6e0bf1ecb805138a9e16a0a" translate="yes" xml:space="preserve">
          <source>This string will be output during a format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f85826b0a05105b44738f365da3e28fec34e06f" translate="yes" xml:space="preserve">
          <source>This subtracts the amount from the days unit in a copy of this period. The years and months units are unaffected. For example, &quot;1 year, 6 months and 3 days&quot; minus 2 days returns &quot;1 year, 6 months and 1 day&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eed4e4cefc185b2ed068b55303cdbcc6527e64a" translate="yes" xml:space="preserve">
          <source>This subtracts the amount from the months unit in a copy of this period. The years and days units are unaffected. For example, &quot;1 year, 6 months and 3 days&quot; minus 2 months returns &quot;1 year, 4 months and 3 days&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac25a3007cf3829e4934cee18f0819c46606945" translate="yes" xml:space="preserve">
          <source>This subtracts the amount from the years unit in a copy of this period. The months and days units are unaffected. For example, &quot;1 year, 6 months and 3 days&quot; minus 2 years returns &quot;-1 years, 6 months and 3 days&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a870041f90b2d72778cbe2dc6be288574098a6" translate="yes" xml:space="preserve">
          <source>This subtracts the specified number of hours from this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e923dbd7431e53641d58be351038a2f49f319b9b" translate="yes" xml:space="preserve">
          <source>This subtracts the specified number of minutes from this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f5827593f1076b9ec763673f1218ac9f3d942d" translate="yes" xml:space="preserve">
          <source>This subtracts the specified number of nanoseconds from this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eede954128fec59703276803e94562b74539a287" translate="yes" xml:space="preserve">
          <source>This subtracts the specified number of seconds from this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70c101ebdf330f1d4b2c945ca115cf18e75323b" translate="yes" xml:space="preserve">
          <source>This table shows examples of some composite names. Each row shows the string form of a composite name and its corresponding structural form (&lt;code&gt;CompositeName&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89abc2006f75ea65700fa66fc4deb6e37af3bcdb" translate="yes" xml:space="preserve">
          <source>This takes a flag to determine whether to return the length for a leap year or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efe0c31c7fd62af94051ed6ec7d8e65806c6df6" translate="yes" xml:space="preserve">
          <source>This technique is particularly useful if a module takes a map on input, copies it, and later returns results whose order is determined by that of the copy. (Clients generally appreciate having things returned in the same order they were presented.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870fd1c52f7fd6219cfbdf2221b93dc96183ecfc" translate="yes" xml:space="preserve">
          <source>This technique is particularly useful if a module takes a set on input, copies it, and later returns results whose order is determined by that of the copy. (Clients generally appreciate having things returned in the same order they were presented.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129c6e9ecb74310290bb89871b9472f24d5eda3c" translate="yes" xml:space="preserve">
          <source>This text attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d584f983a0be747aedd7cecbbc0190c57828f37" translate="yes" xml:space="preserve">
          <source>This text attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c0d53e662e6cfcdcd49e445ee0e31c74883b26" translate="yes" xml:space="preserve">
          <source>This thread information class is designed for use in monitoring of the system, not for synchronization control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8ae0eeea7ffd0f55b462dceb2151f38d5cbe5b" translate="yes" xml:space="preserve">
          <source>This time will be passed to the formatter to produce a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d17d49021f601a1af2a4bc13ab25e6f3624e70" translate="yes" xml:space="preserve">
          <source>This transformation may return &lt;code&gt;this&lt;/code&gt; if the method handle is already of variable arity and its trailing parameter type is identical to &lt;code&gt;arrayType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafa6fe9bff7a16fcf26010147213a84a4cce848" translate="yes" xml:space="preserve">
          <source>This type can be created only by factory methods. All factory methods may cache values, though caching is not guaranteed. Some factory methods are static, while others are virtual methods which modify precursor method types, e.g., by changing a selected parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a890404450f474876c0349ece208541a80a28f" translate="yes" xml:space="preserve">
          <source>This type is described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertStore&quot;&gt; CertStore section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other types are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a61ac84144ebce6f88f1fbc93c85a45da352c46" translate="yes" xml:space="preserve">
          <source>This type is described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyStore&quot;&gt; KeyStore section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other types are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f62a2c8f2722c08e1a92e27d7110553ca82ad0" translate="yes" xml:space="preserve">
          <source>This type of entry can be used to authenticate other parties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070297843cc79373d48617ca3feb603680b1350e" translate="yes" xml:space="preserve">
          <source>This type of entry contains a single public key &lt;code&gt;Certificate&lt;/code&gt; belonging to another party. It is called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cda0440443b5119252aaf881dfa69c9635eb6e3" translate="yes" xml:space="preserve">
          <source>This type of entry holds a cryptographic &lt;code&gt;PrivateKey&lt;/code&gt;, which is optionally stored in a protected format to prevent unauthorized access. It is also accompanied by a certificate chain for the corresponding public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2ff75456289519cba6aa785b9fb82e3049b9fb" translate="yes" xml:space="preserve">
          <source>This type of entry holds a cryptographic &lt;code&gt;SecretKey&lt;/code&gt;, which is optionally stored in a protected format to prevent unauthorized access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01ab36a78fcc58b5747a8824bd5fd6d6bc38c3a" translate="yes" xml:space="preserve">
          <source>This unit is an immutable and thread-safe singleton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871e6ec334563dcb95fe0181c7de9fe7db763b3a" translate="yes" xml:space="preserve">
          <source>This usage ensures that the lock is unlocked if it was acquired, and doesn't try to unlock if the lock was not acquired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1bec5e8928bb9a4f127bf47de9a85b6e93d557" translate="yes" xml:space="preserve">
          <source>This uses standard ASCII characters for zero, positive, negative and a dot for the decimal point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e8e67e2d935b3914a2c93671092e778e4d9bf2" translate="yes" xml:space="preserve">
          <source>This uses the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81270459cd4ff0746a4adb82001a5f80ccff5a55" translate="yes" xml:space="preserve">
          <source>This uses the &lt;a href=&quot;chronozoneddatetime#toLocalDateTime--&quot;&gt;local date-time&lt;/a&gt; and &lt;a href=&quot;chronozoneddatetime#getOffset--&quot;&gt;offset&lt;/a&gt; to calculate the epoch-second value, which is the number of elapsed seconds from 1970-01-01T00:00:00Z. Instants on the time-line after the epoch are positive, earlier are negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99550cf99dfee1c78a125feaf32ceefcb74ef58" translate="yes" xml:space="preserve">
          <source>This uses the temporal object to find the range of valid values for the field. This is similar to &lt;a href=&quot;temporalfield#range--&quot;&gt;&lt;code&gt;TemporalField.range()&lt;/code&gt;&lt;/a&gt;, however this method refines the result using the temporal. For example, if the field is &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; the &lt;code&gt;range&lt;/code&gt; method is not accurate as there are four possible month lengths, 28, 29, 30 and 31 days. Using this method with a date allows the range to be accurate, returning just one of those four options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99c6970a57ecf1168762af79648a797b4c1be8b" translate="yes" xml:space="preserve">
          <source>This uses the temporal object to find the range of valid values for the field. This is similar to &lt;a href=&quot;temporalfield#range--&quot;&gt;&lt;code&gt;range()&lt;/code&gt;&lt;/a&gt;, however this method refines the result using the temporal. For example, if the field is &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; the &lt;code&gt;range&lt;/code&gt; method is not accurate as there are four possible month lengths, 28, 29, 30 and 31 days. Using this method with a date allows the range to be accurate, returning just one of those four options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4994d6c8876a90a15239925775e9ec47104a15a5" translate="yes" xml:space="preserve">
          <source>This validates that the value is within the outer range of valid values returned by &lt;a href=&quot;chronofield#range--&quot;&gt;&lt;code&gt;range()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603ab41c3bf3b7cd520fdf8192fa3141c8863801" translate="yes" xml:space="preserve">
          <source>This validates that the value is within the outer range of valid values returned by &lt;a href=&quot;chronofield#range--&quot;&gt;&lt;code&gt;range()&lt;/code&gt;&lt;/a&gt;. It also checks that all valid values are within the bounds of an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de22c09cc50a52819899d43aaee5974ff4765765" translate="yes" xml:space="preserve">
          <source>This validates that the value is within the valid range of values and that all valid values are within the bounds of an &lt;code&gt;int&lt;/code&gt;. The field is only used to improve the error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fda261d0222c841751c00451160d9ca5e39339" translate="yes" xml:space="preserve">
          <source>This validates that the value is within the valid range of values. The field is only used to improve the error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cc9eca6ed1a00ff2b5401e743a6568a2287aba" translate="yes" xml:space="preserve">
          <source>This value does not indicate the level of performance of the Java virtual machine and is not intended for performance comparisons of different virtual machine implementations. The implementations may have different definitions and different measurements of the compilation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030a0f03b8fa7f7a240038b2fe1f52e79413b47b" translate="yes" xml:space="preserve">
          <source>This value indicates that a binding is to be applied to the document; the type and placement of the binding is site-defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0beda2dbbb986f92712e036b8af84f046facdf78" translate="yes" xml:space="preserve">
          <source>This value is always in the range &lt;code&gt;-1&lt;/code&gt; through &lt;code&gt;pos&lt;/code&gt;. If there is no marked position in the input stream, this field is &lt;code&gt;-1&lt;/code&gt;. If there is a marked position in the input stream, then &lt;code&gt;buf[markpos]&lt;/code&gt; is the first byte to be supplied as input after a &lt;code&gt;reset&lt;/code&gt; operation. If &lt;code&gt;markpos&lt;/code&gt; is not &lt;code&gt;-1&lt;/code&gt;, then all bytes from positions &lt;code&gt;buf[markpos]&lt;/code&gt; through &lt;code&gt;buf[pos-1]&lt;/code&gt; must remain in the buffer array (though they may be moved to another place in the buffer array, with suitable adjustments to the values of &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;pos&lt;/code&gt;, and &lt;code&gt;markpos&lt;/code&gt;); they may not be discarded unless and until the difference between &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;markpos&lt;/code&gt; exceeds &lt;code&gt;marklimit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c62699b45ad890956217f2b28c0884555d65773" translate="yes" xml:space="preserve">
          <source>This value is always in the range &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;count&lt;/code&gt;. If it is less than &lt;code&gt;count&lt;/code&gt;, then &lt;code&gt;buf[pos]&lt;/code&gt; is the next byte to be supplied as input; if it is equal to &lt;code&gt;count&lt;/code&gt;, then the next &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;skip&lt;/code&gt; operation will require more bytes to be read from the contained input stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80a4f493fc678c48fb64268b947460758b6972d" translate="yes" xml:space="preserve">
          <source>This value is not authenticated and should not be relied upon. It is mainly used as a hint for &lt;code&gt;SSLSession&lt;/code&gt; caching strategies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338ab4a8b76c989abf5e786727614c1a14bbd4e7" translate="yes" xml:space="preserve">
          <source>This value is only generated by a call to &lt;code&gt;SSLEngine.wrap()/unwrap()&lt;/code&gt; when that call finishes a handshake. It is never generated by &lt;code&gt;SSLEngine.getHandshakeStatus()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf935482047a1d7d946ac83d63cc292f1dda28ec" translate="yes" xml:space="preserve">
          <source>This value is specified when it is desired to select a non-printed (or pre-printed) cover for the document. This does not supplant the specification of a printed cover (on cover stock medium) by the document itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2de46d6a5d173c281f89e5ffd2f50aa32d96b5f" translate="yes" xml:space="preserve">
          <source>This value may change during a particular invocation of the virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d7c5d53659ae990e81084091d446235bfde9e4" translate="yes" xml:space="preserve">
          <source>This value may change during a particular invocation of the virtual machine. Applications that are sensitive to the number of available processors should therefore occasionally poll this property and adjust their resource usage appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bff8864c3d0191ec80dd8f4f06f963df94d0f0" translate="yes" xml:space="preserve">
          <source>This variable is set by the &lt;code&gt;setDoInput&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getDoInput&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eac59c94bb888fb44776b3968997c18cbd0015e" translate="yes" xml:space="preserve">
          <source>This variable is set by the &lt;code&gt;setDoOutput&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getDoOutput&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2535f75c4ee7784803210fa4c2ca06c28bf84574" translate="yes" xml:space="preserve">
          <source>This variable is set by the &lt;code&gt;setIfModifiedSince&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getIfModifiedSince&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8e657336145845856452c0eeb53be06482ac05" translate="yes" xml:space="preserve">
          <source>This version of the unpacker is compatible with all previous versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd5ec834363f0bfe1fade720dde552742b2a7c7" translate="yes" xml:space="preserve">
          <source>This will create a formatter with the &lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt;default FORMAT locale&lt;/a&gt;. Numbers will be printed and parsed using the standard DecimalStyle. The resolver style will be &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4dac3a1bfb9210890fc2a1d06d17617e4450f9" translate="yes" xml:space="preserve">
          <source>This will create a formatter with the specified locale. Numbers will be printed and parsed using the standard DecimalStyle. The resolver style will be &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab38c9664df556481f2d51dfa76e580d88277188" translate="yes" xml:space="preserve">
          <source>This will generate a new key pair every time it is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b66aca30d5516165d0d54b76b287be829817962" translate="yes" xml:space="preserve">
          <source>This will look up appropriate values from the provider of localization data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51631d282e296baa21b9558d237e218fff48f4a3" translate="yes" xml:space="preserve">
          <source>This will parse a textual representation of a duration, including the string produced by &lt;code&gt;toString()&lt;/code&gt;. The formats accepted are based on the ISO-8601 duration format &lt;code&gt;PnDTnHnMn.nS&lt;/code&gt; with days considered to be exactly 24 hours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea3fa437e506a5a1971a2ca4e8d888a853c0203" translate="yes" xml:space="preserve">
          <source>This will parse the string produced by &lt;code&gt;toString()&lt;/code&gt; which is based on the ISO-8601 period formats &lt;code&gt;PnYnMnD&lt;/code&gt; and &lt;code&gt;PnW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2230694209aa2317fc76b1b24e757431678172d5" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973c26b5bc3319d923f63cd006bd44273d33455b" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41407725abc0b30ba6397cb5f98d01c738927873" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665959bc639edfac15a73b628c7d40292c657afd" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bf469d6445df27e6d4da34047b5416f4f7778b" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee0e9065dc29d677335d80c13d87feb9259ae65" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current month-day. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad8dfc68d70ae6ac0ab47c11a7c585a6516f6c2" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0245657cf2d66d387048d5eca72e6afcd21ef7f9" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6f86b6dab6dcd4e4a110a4462cc3e9b8289b36" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year-month. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770bd27e885a9f0b88771df564df12dc7a17ee02" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b30385519a5d72e4a197ac6824fdeb31803d613" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce726aba1854603c8707ad4db9f6b85c2ef2632" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7e359999c96071dde4096430f18285388cd7b5" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The zone and offset will be set based on the time-zone in the clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adff1aa350c98b0ea3203e87ff62393779ffd65" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0349406cf4b8868af6b8306ec85731e4f6f75b08" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current month-day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5647c2131f117bd2ecdd62acb50fb78a955b58" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1be01c9423aa939291ac93f48bcac53d427c2a3" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e31ca88d8bfcdf0d499745ce10c21a4bf4bf48d" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year-month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9de08ee82ae4786740e7b930d590cf4a6183ac" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f321f27144684e10d42dbb9bf339ee409ea0e88f" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemUTC--&quot;&gt;&lt;code&gt;system UTC clock&lt;/code&gt;&lt;/a&gt; to obtain the current instant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a3c787ff1a4f93da19b797f10dcb8d33cf8745" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;../clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c5245822e1245cd9ca0670bc71059f3444c0ef" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;../clock&quot;&gt;dependency injection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d581abe1f1ca54266a7b3d0b574a865a1bd39666" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ecbbe86ade988c0f7af15d7c9e93a7cfbfe9df" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date-time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64464121176e6f8078cbf9b5bbaa582a773f52ff" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date-time. The zone and offset will be set based on the time-zone in the clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979323f8a1230cc1ff96b4264fede9355440178b" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date-time. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066349d83f341ec0776b2f0c8b118c0ac5f0c336" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current month-day. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54eee961956929aac90360979e3f61a8a40984a3" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca01b34fd4e3914216939e9c0d62dfd2005e282d" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66524c4d69a7ed26367a83fe537172c3254f3f30" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current time. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb747cc0b3b1a469e438d1c2db15a64feb99a97" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current year-month. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fe7e87e82c99d55ca687f561c4abf1d3b51724" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current year. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd390f8dfde647c926076af19a84c11f8de9d52d" translate="yes" xml:space="preserve">
          <source>This would allow an attacker to configure the system identity scope with certificates that should not be trusted, thereby granting applet or application code signed with those certificates privileges that would have been denied by the system's original identity scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4b372775693a3f3729fb4a12596b5f177dba17" translate="yes" xml:space="preserve">
          <source>This would allow an attacker to replace somebody else's (the &quot;target's&quot;) keypair with a possibly weaker keypair (e.g., a keypair of a smaller keysize). This also would allow the attacker to listen in on encrypted communication between the target and its peers. The target's peers might wrap an encryption session key under the target's &quot;new&quot; public key, which would allow the attacker (who possesses the corresponding private key) to unwrap the session key and decipher the communication data encrypted under that session key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3287cbec2ba672203f22a68abe1da17bd16a41" translate="yes" xml:space="preserve">
          <source>This would allow code to read the particular file associated with the file descriptor read. This is dangerous if the file contains confidential data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b09ac9d75e1b34a75decabc7990049448779b0" translate="yes" xml:space="preserve">
          <source>This would allow code to read the value, or determine the existence, of a particular environment variable. This is dangerous if the variable contains confidential data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78245f19ad38908342afcca7d4670ae693a02bd" translate="yes" xml:space="preserve">
          <source>This would allow somebody to introduce a possibly malicious provider (e.g., one that discloses the private keys passed to it) as the highest-priority provider. This would be possible because the Security object (which manages the installed providers) currently does not check the integrity or authenticity of a provider before attaching it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6662c8190dbce153e597e67e53e732b988a736d7" translate="yes" xml:space="preserve">
          <source>This would allow somebody to introduce a possibly malicious provider (e.g., one that discloses the private keys passed to it) as the highest-priority provider. This would be possible because the Security object (which manages the installed providers) currently does not check the integrity or authenticity of a provider before attaching it. The &quot;insertProvider&quot; permission subsumes the &quot;insertProvider.{provider name}&quot; permission (see the section below for more information).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a78017524cd98bc8d0f44d22192a40383c71771" translate="yes" xml:space="preserve">
          <source>This would correspond to the following inner class implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3055edf0bfd18992e0a6de528bcff05da3c9d7" translate="yes" xml:space="preserve">
          <source>This would grant an attacker permission to get the class loader for a particular class. This is dangerous because having access to a class's class loader allows the attacker to load other classes available to that class loader. The attacker would typically otherwise not have access to those classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad63d6825444e50e947e58c76661b32b65b26dc" translate="yes" xml:space="preserve">
          <source>This writeReplace method is invoked by serialization if the method exists and it would be accessible from a method defined within the class of the object being serialized. Thus, the method can have private, protected and package-private access. Subclass access to this method follows java accessibility rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6153a4519f91fd5f347f26300009c2204cb88817" translate="yes" xml:space="preserve">
          <source>This writer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38908dca9805c5a238fb04ae01e8f4050fec50f" translate="yes" xml:space="preserve">
          <source>This year will be passed to the formatter to produce a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3155e2890a538a42cabf40f857ade908fe129fd5" translate="yes" xml:space="preserve">
          <source>This year-month will be passed to the formatter to produce a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2dc477b42bd28584c257d149ff8e2a45fa2af8" translate="yes" xml:space="preserve">
          <source>This zip entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021dfe21335b14b4968e4b2ded3d2749b66ffb3d" translate="yes" xml:space="preserve">
          <source>Those that affect the namespace (add/remove/rename an object)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d43c29f5ca524c1ab57ac963b166ac1727f85d" translate="yes" xml:space="preserve">
          <source>Those that affect the objects' contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2257a9a6819dd695a05d6dfb0d9d438845c5a51" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;null&lt;/code&gt; is a valid &lt;code&gt;name&lt;/code&gt;, when &lt;code&gt;getAttributes(null)&lt;/code&gt; is invoked on a &lt;code&gt;Manifest&lt;/code&gt; obtained from a jar file, &lt;code&gt;null&lt;/code&gt; will be returned. While jar files themselves do not allow &lt;code&gt;null&lt;/code&gt;-named attributes, it is possible to invoke &lt;a href=&quot;manifest#getEntries--&quot;&gt;&lt;code&gt;getEntries()&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;Manifest&lt;/code&gt;, and on that result, invoke &lt;code&gt;put&lt;/code&gt; with a null key and an arbitrary value. Subsequent invocations of &lt;code&gt;getAttributes(null)&lt;/code&gt; will return the just-&lt;code&gt;put&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7726b449187faa9ac0fce42a6b634bcfe416bd" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optional#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a4ed9dd4cd840a425d290fb66814a060470728" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optionaldouble#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77aae136cefeffc558a45b9df9b56e6e43f74883" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optionalint#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62e1ce6b1ba7918fdd05b0b1bc91e6d3a38ca00" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optionallong#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7863f7503e5377891a3b7452c7d6cc377d443fe7" translate="yes" xml:space="preserve">
          <source>Thread</source>
          <target state="translated">Thread</target>
        </trans-unit>
        <trans-unit id="47da6895e1e6b88393c30e25b50c55119b8f50a9" translate="yes" xml:space="preserve">
          <source>Thread CPU time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5c53fe9a4d8244bf0c25a63e7182e6adff93b7" translate="yes" xml:space="preserve">
          <source>Thread Contention Monitoring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36518333df71af3800afef11101d5e994956a61" translate="yes" xml:space="preserve">
          <source>Thread ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f76e42195d15468b3b9fa18723e7fa6b81585ed" translate="yes" xml:space="preserve">
          <source>Thread ID is a positive long value returned by calling the &lt;a href=&quot;../thread#getId--&quot;&gt;&lt;code&gt;Thread.getId()&lt;/code&gt;&lt;/a&gt; method for a thread. The thread ID is unique during its lifetime. When a thread is terminated, this thread ID may be reused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709e7d50f757d668c561bcdc2ac04e1234cd811b" translate="yes" xml:space="preserve">
          <source>Thread ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db928b13a70f56d0745b7f5a1040b50baa958b5a" translate="yes" xml:space="preserve">
          <source>Thread information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e04278e885f30adacf4ed40fd0d643789254ec" translate="yes" xml:space="preserve">
          <source>Thread information. &lt;code&gt;ThreadInfo&lt;/code&gt; contains the information about a thread including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245257161e6583b400ed0b2e4c375d5c08cf3d19" translate="yes" xml:space="preserve">
          <source>Thread pools address two different problems: they usually provide improved performance when executing large numbers of asynchronous tasks, due to reduced per-task invocation overhead, and they provide a means of bounding and managing the resources, including threads, consumed when executing a collection of tasks. Each &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; also maintains some basic statistics, such as the number of completed tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cef5deb223649da3c92e68bafacf5c8ccd785e" translate="yes" xml:space="preserve">
          <source>Thread safety</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e27057aee71462f8ef5ca1cc912182af819db7" translate="yes" xml:space="preserve">
          <source>Thread state for a runnable thread. A thread in the runnable state is executing in the Java virtual machine but it may be waiting for other resources from the operating system such as processor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1446e3c3300c50d045828f33142928402b6b95" translate="yes" xml:space="preserve">
          <source>Thread state for a terminated thread. The thread has completed execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a31282db01ce2b51fcf38902248613f6ffba8e0" translate="yes" xml:space="preserve">
          <source>Thread state for a thread blocked waiting for a monitor lock. A thread in the blocked state is waiting for a monitor lock to enter a synchronized block/method or reenter a synchronized block/method after calling &lt;a href=&quot;object#wait--&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48710439938209a9068defb0dd2b0bf3e76f0613" translate="yes" xml:space="preserve">
          <source>Thread state for a thread which has not yet started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7250ddba064781f1554cf011ff62ae96e59908" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread with a specified waiting time. A thread is in the timed waiting state due to calling one of the following methods with a specified positive waiting time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941d814bdcb829ba77fc90cf8890778199edba85" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread. A thread is in the waiting state due to calling one of the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1ce44fa0295a976b81d62000e1b31dbca131c4" translate="yes" xml:space="preserve">
          <source>Thread state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37915ecf8d3fbed9a5eee81ef2911cbb3a5e3207" translate="yes" xml:space="preserve">
          <source>Thread.State</source>
          <target state="translated">Thread.State</target>
        </trans-unit>
        <trans-unit id="227b8c08cb3e154fa0c97f680236579b595d2cdf" translate="yes" xml:space="preserve">
          <source>Thread.State.valueOf()</source>
          <target state="translated">Thread.State.valueOf()</target>
        </trans-unit>
        <trans-unit id="eab39abeba8f1421cd199818dca838a9a46b93d6" translate="yes" xml:space="preserve">
          <source>Thread.State.values()</source>
          <target state="translated">Thread.State.values()</target>
        </trans-unit>
        <trans-unit id="3b1e1ddec40a1768b399e0e7edd5a51d8ac63a2f" translate="yes" xml:space="preserve">
          <source>Thread.UncaughtExceptionHandler</source>
          <target state="translated">Thread.UncaughtExceptionHandler</target>
        </trans-unit>
        <trans-unit id="b2907aff7a7f3b35e8c36c18838b4cc8379af99b" translate="yes" xml:space="preserve">
          <source>Thread.UncaughtExceptionHandler.uncaughtException()</source>
          <target state="translated">Thread.UncaughtExceptionHandler.uncaughtException()</target>
        </trans-unit>
        <trans-unit id="017eeed09c879121d0e05abd5fe58899b43d4ea0" translate="yes" xml:space="preserve">
          <source>Thread.activeCount()</source>
          <target state="translated">Thread.activeCount()</target>
        </trans-unit>
        <trans-unit id="999d0445f342e796eca1980b7690afdcb5158b12" translate="yes" xml:space="preserve">
          <source>Thread.checkAccess()</source>
          <target state="translated">Thread.checkAccess()</target>
        </trans-unit>
        <trans-unit id="f2c765012cdb2c99f4040d45437af41d1440bb47" translate="yes" xml:space="preserve">
          <source>Thread.clone()</source>
          <target state="translated">Thread.clone()</target>
        </trans-unit>
        <trans-unit id="c8a71b66c4398d49d8980ac355b64a2eebcf7856" translate="yes" xml:space="preserve">
          <source>Thread.countStackFrames()</source>
          <target state="translated">Thread.countStackFrames()</target>
        </trans-unit>
        <trans-unit id="14d63f03738836e668f5f71f9e55e8365a75ae1b" translate="yes" xml:space="preserve">
          <source>Thread.currentThread()</source>
          <target state="translated">Thread.currentThread()</target>
        </trans-unit>
        <trans-unit id="a17a2ac01af96173a4c81f70feeeb92bf1433728" translate="yes" xml:space="preserve">
          <source>Thread.destroy()</source>
          <target state="translated">Thread.destroy()</target>
        </trans-unit>
        <trans-unit id="44c77da31f926c9d694c2a498f020854d765caf6" translate="yes" xml:space="preserve">
          <source>Thread.dumpStack()</source>
          <target state="translated">Thread.dumpStack()</target>
        </trans-unit>
        <trans-unit id="ecc7a70e392fa8cc950aaac5e645a2e789efc731" translate="yes" xml:space="preserve">
          <source>Thread.enumerate()</source>
          <target state="translated">Thread.enumerate()</target>
        </trans-unit>
        <trans-unit id="31cf59305d3b9681e3d76421833bfc1166f6f122" translate="yes" xml:space="preserve">
          <source>Thread.getAllStackTraces()</source>
          <target state="translated">Thread.getAllStackTraces()</target>
        </trans-unit>
        <trans-unit id="1649662c849479f9870629ce2cab73c37e20eedb" translate="yes" xml:space="preserve">
          <source>Thread.getContextClassLoader()</source>
          <target state="translated">Thread.getContextClassLoader()</target>
        </trans-unit>
        <trans-unit id="5a412458b1b23392b311b35cf5bb335105a370fb" translate="yes" xml:space="preserve">
          <source>Thread.getDefaultUncaughtExceptionHandler()</source>
          <target state="translated">Thread.getDefaultUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="16f1a575881cc5847fafd379ea1d9d300fa44c53" translate="yes" xml:space="preserve">
          <source>Thread.getId()</source>
          <target state="translated">Thread.getId()</target>
        </trans-unit>
        <trans-unit id="6a0dabdeb42a3697bd9fac5a96a70d14fb3c58df" translate="yes" xml:space="preserve">
          <source>Thread.getName()</source>
          <target state="translated">Thread.getName()</target>
        </trans-unit>
        <trans-unit id="b6170d84660464b3f7f949e18707f34c2e85ee8f" translate="yes" xml:space="preserve">
          <source>Thread.getPriority()</source>
          <target state="translated">Thread.getPriority()</target>
        </trans-unit>
        <trans-unit id="26f9e3f0516e77b15937f086b1eeb053b130f252" translate="yes" xml:space="preserve">
          <source>Thread.getStackTrace()</source>
          <target state="translated">Thread.getStackTrace()</target>
        </trans-unit>
        <trans-unit id="71ac7c92823b4424bc7162bb1b89de74457ffce4" translate="yes" xml:space="preserve">
          <source>Thread.getState()</source>
          <target state="translated">Thread.getState()</target>
        </trans-unit>
        <trans-unit id="e12f6eb305e7411829c51497fd129040d275818a" translate="yes" xml:space="preserve">
          <source>Thread.getThreadGroup()</source>
          <target state="translated">Thread.getThreadGroup()</target>
        </trans-unit>
        <trans-unit id="f7f7ae37d7deb49b7be39a8b531af9d469695dc6" translate="yes" xml:space="preserve">
          <source>Thread.getUncaughtExceptionHandler()</source>
          <target state="translated">Thread.getUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="d1aff596760ca7e8dc9570a3667e4b946bf25433" translate="yes" xml:space="preserve">
          <source>Thread.holdsLock()</source>
          <target state="translated">Thread.holdsLock()</target>
        </trans-unit>
        <trans-unit id="0c679e1ae42be00487fdd2405b3876efe6e45677" translate="yes" xml:space="preserve">
          <source>Thread.interrupt()</source>
          <target state="translated">Thread.interrupt()</target>
        </trans-unit>
        <trans-unit id="d0f93e9cceb068dd91c27b2e8f651777100317b6" translate="yes" xml:space="preserve">
          <source>Thread.interrupted()</source>
          <target state="translated">Thread.interrupted()</target>
        </trans-unit>
        <trans-unit id="31066e35d013a30e202a803a47b8519877c009eb" translate="yes" xml:space="preserve">
          <source>Thread.isAlive()</source>
          <target state="translated">Thread.isAlive()</target>
        </trans-unit>
        <trans-unit id="5d05ccb7edc96d5f1ad39a8d33098b7143a0cd91" translate="yes" xml:space="preserve">
          <source>Thread.isDaemon()</source>
          <target state="translated">Thread.isDaemon()</target>
        </trans-unit>
        <trans-unit id="9678dd137c825627a6ae3fdeaa3c4c9a489db969" translate="yes" xml:space="preserve">
          <source>Thread.isInterrupted()</source>
          <target state="translated">Thread.isInterrupted()</target>
        </trans-unit>
        <trans-unit id="073de4e92c9d623f1bd8b870a9e735df18ae281c" translate="yes" xml:space="preserve">
          <source>Thread.join()</source>
          <target state="translated">Thread.join()</target>
        </trans-unit>
        <trans-unit id="b729d431e0b564d96dc90f2bed4afecb0ecd0b33" translate="yes" xml:space="preserve">
          <source>Thread.resume()</source>
          <target state="translated">Thread.resume()</target>
        </trans-unit>
        <trans-unit id="e2d01b8112bf5d5ce95d8ab511e5f58e457b4ebd" translate="yes" xml:space="preserve">
          <source>Thread.run()</source>
          <target state="translated">Thread.run()</target>
        </trans-unit>
        <trans-unit id="2eeb3ea9181940cd157763e860fcc2d31214fef8" translate="yes" xml:space="preserve">
          <source>Thread.setContextClassLoader()</source>
          <target state="translated">Thread.setContextClassLoader()</target>
        </trans-unit>
        <trans-unit id="e6bba6264d61a80c3b03757c36a799fbd9a9a8a5" translate="yes" xml:space="preserve">
          <source>Thread.setDaemon()</source>
          <target state="translated">Thread.setDaemon()</target>
        </trans-unit>
        <trans-unit id="51fc3228f0259239be05e033ff097a6e05bc88e8" translate="yes" xml:space="preserve">
          <source>Thread.setDefaultUncaughtExceptionHandler()</source>
          <target state="translated">Thread.setDefaultUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="d2500dc1d856ba3e2e8480d5653722c0d4b94520" translate="yes" xml:space="preserve">
          <source>Thread.setName()</source>
          <target state="translated">Thread.setName()</target>
        </trans-unit>
        <trans-unit id="ef7bd4ccc7035bdacfccfa2c76e7fc3418d5acc3" translate="yes" xml:space="preserve">
          <source>Thread.setPriority()</source>
          <target state="translated">Thread.setPriority()</target>
        </trans-unit>
        <trans-unit id="00b42ae30a214ac4d46dbd095019858a956a56fa" translate="yes" xml:space="preserve">
          <source>Thread.setUncaughtExceptionHandler()</source>
          <target state="translated">Thread.setUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="03ccf24176b10508883d0f15c0a5b719b142f622" translate="yes" xml:space="preserve">
          <source>Thread.sleep()</source>
          <target state="translated">Thread.sleep()</target>
        </trans-unit>
        <trans-unit id="c6a87556f30c1e309db6481c92974797e01b0d3c" translate="yes" xml:space="preserve">
          <source>Thread.start()</source>
          <target state="translated">Thread.start()</target>
        </trans-unit>
        <trans-unit id="8df1b2c26de1f0e2c12a00e7f10d398fe12ce9c4" translate="yes" xml:space="preserve">
          <source>Thread.stop()</source>
          <target state="translated">Thread.stop()</target>
        </trans-unit>
        <trans-unit id="947baa5d0e303b1e099f6774b4ba07547fc1ac61" translate="yes" xml:space="preserve">
          <source>Thread.suspend()</source>
          <target state="translated">Thread.suspend()</target>
        </trans-unit>
        <trans-unit id="821acae9dc94b56c58d6278790aa30ffa5fee076" translate="yes" xml:space="preserve">
          <source>Thread.toString()</source>
          <target state="translated">Thread.toString()</target>
        </trans-unit>
        <trans-unit id="c3a7b2ce085b6df3fdd37512478dfb38b0c3a7e0" translate="yes" xml:space="preserve">
          <source>Thread.yield()</source>
          <target state="translated">Thread.yield()</target>
        </trans-unit>
        <trans-unit id="2023533734ec13e574b188e53e027097d56ed4e2" translate="yes" xml:space="preserve">
          <source>ThreadDeath</source>
          <target state="translated">ThreadDeath</target>
        </trans-unit>
        <trans-unit id="d5cc85fdc4d23e7c32473be563d01a3470f47625" translate="yes" xml:space="preserve">
          <source>ThreadFactory</source>
          <target state="translated">ThreadFactory</target>
        </trans-unit>
        <trans-unit id="639f6a21b1097ef66b7f8d57d149541a4d21130e" translate="yes" xml:space="preserve">
          <source>ThreadFactory.newThread()</source>
          <target state="translated">ThreadFactory.newThread()</target>
        </trans-unit>
        <trans-unit id="22c12761263399de65de26186a64d96b9dd55b6a" translate="yes" xml:space="preserve">
          <source>ThreadGroup</source>
          <target state="translated">ThreadGroup</target>
        </trans-unit>
        <trans-unit id="059898a018c9719d82c47e8df552210a319afaee" translate="yes" xml:space="preserve">
          <source>ThreadGroup that new threads are instantiated into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2168fa2cbca8d1075577c5d6ed7f5547778673b5" translate="yes" xml:space="preserve">
          <source>ThreadGroup.activeCount()</source>
          <target state="translated">ThreadGroup.activeCount()</target>
        </trans-unit>
        <trans-unit id="07e64be12afbfadcc7b97b9cd27c5a055c953a07" translate="yes" xml:space="preserve">
          <source>ThreadGroup.activeGroupCount()</source>
          <target state="translated">ThreadGroup.activeGroupCount()</target>
        </trans-unit>
        <trans-unit id="6c3bffc705dd7e213fd32e46407349bd3f7eacdb" translate="yes" xml:space="preserve">
          <source>ThreadGroup.allowThreadSuspension()</source>
          <target state="translated">ThreadGroup.allowThreadSuspension()</target>
        </trans-unit>
        <trans-unit id="e42649105d36947129821d6afcf4d4941152e6f6" translate="yes" xml:space="preserve">
          <source>ThreadGroup.checkAccess()</source>
          <target state="translated">ThreadGroup.checkAccess()</target>
        </trans-unit>
        <trans-unit id="e9f1476100d91f7a4dc9f25d3d892bcc4feac01a" translate="yes" xml:space="preserve">
          <source>ThreadGroup.destroy()</source>
          <target state="translated">ThreadGroup.destroy()</target>
        </trans-unit>
        <trans-unit id="241d3244ab07bffab77bbe3bba3a4ab773658693" translate="yes" xml:space="preserve">
          <source>ThreadGroup.enumerate()</source>
          <target state="translated">ThreadGroup.enumerate()</target>
        </trans-unit>
        <trans-unit id="d44de7cf6f1aef179d419b24a490017cac204f16" translate="yes" xml:space="preserve">
          <source>ThreadGroup.getMaxPriority()</source>
          <target state="translated">ThreadGroup.getMaxPriority()</target>
        </trans-unit>
        <trans-unit id="f40cd031292c5455288b01f9b83ee4a091478356" translate="yes" xml:space="preserve">
          <source>ThreadGroup.getName()</source>
          <target state="translated">ThreadGroup.getName()</target>
        </trans-unit>
        <trans-unit id="72e5af96234c224f451a65a8f85461a187502c95" translate="yes" xml:space="preserve">
          <source>ThreadGroup.getParent()</source>
          <target state="translated">ThreadGroup.getParent()</target>
        </trans-unit>
        <trans-unit id="2ce9a4034c94b1856a7323c10b97ea3cc3b972f5" translate="yes" xml:space="preserve">
          <source>ThreadGroup.interrupt()</source>
          <target state="translated">ThreadGroup.interrupt()</target>
        </trans-unit>
        <trans-unit id="c6ee92ca409444bb1119ad7e5be546639fff1aab" translate="yes" xml:space="preserve">
          <source>ThreadGroup.isDaemon()</source>
          <target state="translated">ThreadGroup.isDaemon()</target>
        </trans-unit>
        <trans-unit id="ef8db58035c24c3952b22cbc94ca8dff9f742ba0" translate="yes" xml:space="preserve">
          <source>ThreadGroup.isDestroyed()</source>
          <target state="translated">ThreadGroup.isDestroyed()</target>
        </trans-unit>
        <trans-unit id="1b950c9b638a93c4424ebca8f4a2d43daebc89d5" translate="yes" xml:space="preserve">
          <source>ThreadGroup.list()</source>
          <target state="translated">ThreadGroup.list()</target>
        </trans-unit>
        <trans-unit id="e0958cbd01ddadec8f957373a4b6880bef0d255d" translate="yes" xml:space="preserve">
          <source>ThreadGroup.parentOf()</source>
          <target state="translated">ThreadGroup.parentOf()</target>
        </trans-unit>
        <trans-unit id="8e9e8cb9830f6025a6d0263c09a26a47bad662bd" translate="yes" xml:space="preserve">
          <source>ThreadGroup.resume()</source>
          <target state="translated">ThreadGroup.resume()</target>
        </trans-unit>
        <trans-unit id="21ba900981c697065bf740d11886e2983b5c636f" translate="yes" xml:space="preserve">
          <source>ThreadGroup.setDaemon()</source>
          <target state="translated">ThreadGroup.setDaemon()</target>
        </trans-unit>
        <trans-unit id="c3127b8d5b70fa4af53794e7f5223f23703c18ff" translate="yes" xml:space="preserve">
          <source>ThreadGroup.setMaxPriority()</source>
          <target state="translated">ThreadGroup.setMaxPriority()</target>
        </trans-unit>
        <trans-unit id="9592078d2d0911b903fe2b1e44c99f493c6c6000" translate="yes" xml:space="preserve">
          <source>ThreadGroup.stop()</source>
          <target state="translated">ThreadGroup.stop()</target>
        </trans-unit>
        <trans-unit id="13611581a61716c64f44d18f4a2552f3ea821453" translate="yes" xml:space="preserve">
          <source>ThreadGroup.suspend()</source>
          <target state="translated">ThreadGroup.suspend()</target>
        </trans-unit>
        <trans-unit id="f3fd385adb838a7df1c1aa867a084dd13ebe0e24" translate="yes" xml:space="preserve">
          <source>ThreadGroup.toString()</source>
          <target state="translated">ThreadGroup.toString()</target>
        </trans-unit>
        <trans-unit id="16f389539d6a08ff1048907b073387ed3e6ad9fa" translate="yes" xml:space="preserve">
          <source>ThreadGroup.uncaughtException()</source>
          <target state="translated">ThreadGroup.uncaughtException()</target>
        </trans-unit>
        <trans-unit id="afc57ece9cf03472cd12808a8721cb53a66a5db4" translate="yes" xml:space="preserve">
          <source>ThreadInfo</source>
          <target state="translated">ThreadInfo</target>
        </trans-unit>
        <trans-unit id="51f458be46fb5e6e46005c703419cb052bd48737" translate="yes" xml:space="preserve">
          <source>ThreadInfo.from()</source>
          <target state="translated">ThreadInfo.from()</target>
        </trans-unit>
        <trans-unit id="5b475793851011cd916326209f8aae652389dff1" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getBlockedCount()</source>
          <target state="translated">ThreadInfo.getBlockedCount()</target>
        </trans-unit>
        <trans-unit id="c2ac56d10c5e84f02866dd5bf2bde296086849a1" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getBlockedTime()</source>
          <target state="translated">ThreadInfo.getBlockedTime()</target>
        </trans-unit>
        <trans-unit id="6bb6cf5e2668e662d342264e63db576ba478a81d" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockInfo()</source>
          <target state="translated">ThreadInfo.getLockInfo()</target>
        </trans-unit>
        <trans-unit id="279fb7e22d469c26bca51c4b4cc47449426fe535" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockName()</source>
          <target state="translated">ThreadInfo.getLockName()</target>
        </trans-unit>
        <trans-unit id="f1442fd463c7c703a720b700e9b34e63b69373dc" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockOwnerId()</source>
          <target state="translated">ThreadInfo.getLockOwnerId()</target>
        </trans-unit>
        <trans-unit id="0e3459f517cf142609f581ec4df76d912782fc29" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockOwnerName()</source>
          <target state="translated">ThreadInfo.getLockOwnerName()</target>
        </trans-unit>
        <trans-unit id="e9f0257cc11605fac44cbb92bbeb2da2206a08dd" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockedMonitors()</source>
          <target state="translated">ThreadInfo.getLockedMonitors()</target>
        </trans-unit>
        <trans-unit id="c76532e0ef6ddfd41220640231ab75476649f719" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockedSynchronizers()</source>
          <target state="translated">ThreadInfo.getLockedSynchronizers()</target>
        </trans-unit>
        <trans-unit id="162c47fb57d9ecb804a75415311893cb53dfd1e7" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getStackTrace()</source>
          <target state="translated">ThreadInfo.getStackTrace()</target>
        </trans-unit>
        <trans-unit id="a94d7984cb5a5f902ff8baaf2ef4ef6af80927c7" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getThreadId()</source>
          <target state="translated">ThreadInfo.getThreadId()</target>
        </trans-unit>
        <trans-unit id="317b1a52c13c077a7434cd4b65cb1be1c08c7aca" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getThreadName()</source>
          <target state="translated">ThreadInfo.getThreadName()</target>
        </trans-unit>
        <trans-unit id="18b4298ae9a04f40df9ca1864bbfe9df63823192" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getThreadState()</source>
          <target state="translated">ThreadInfo.getThreadState()</target>
        </trans-unit>
        <trans-unit id="fa450fdcd0d633c012b0196754c8f415e75f14b8" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getWaitedCount()</source>
          <target state="translated">ThreadInfo.getWaitedCount()</target>
        </trans-unit>
        <trans-unit id="5a52e40ceff85f86fd4d15145c74344f31319a91" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getWaitedTime()</source>
          <target state="translated">ThreadInfo.getWaitedTime()</target>
        </trans-unit>
        <trans-unit id="de9e94bbb6033eeca6772ce8168334dc71979b2f" translate="yes" xml:space="preserve">
          <source>ThreadInfo.isInNative()</source>
          <target state="translated">ThreadInfo.isInNative()</target>
        </trans-unit>
        <trans-unit id="43e65e159fd271dd58fb800e6762176c537acf71" translate="yes" xml:space="preserve">
          <source>ThreadInfo.isSuspended()</source>
          <target state="translated">ThreadInfo.isSuspended()</target>
        </trans-unit>
        <trans-unit id="dffcb8b612a67880c30df2549fd53ebad6515bb9" translate="yes" xml:space="preserve">
          <source>ThreadInfo.toString()</source>
          <target state="translated">ThreadInfo.toString()</target>
        </trans-unit>
        <trans-unit id="8a77bfd3db44e0aeb0a80c2f055eea2ff97f89d4" translate="yes" xml:space="preserve">
          <source>ThreadLocal</source>
          <target state="translated">ThreadLocal</target>
        </trans-unit>
        <trans-unit id="15a9e9559806004daf00b91be8ab2489cd4086f3" translate="yes" xml:space="preserve">
          <source>ThreadLocal.get()</source>
          <target state="translated">ThreadLocal.get()</target>
        </trans-unit>
        <trans-unit id="374a65448cdae0a9c4a7564ba1697744ca6286ed" translate="yes" xml:space="preserve">
          <source>ThreadLocal.initialValue()</source>
          <target state="translated">ThreadLocal.initialValue()</target>
        </trans-unit>
        <trans-unit id="dacb0909125c4d07d9f0fc1c0650dc3f858ec4d2" translate="yes" xml:space="preserve">
          <source>ThreadLocal.remove()</source>
          <target state="translated">ThreadLocal.remove()</target>
        </trans-unit>
        <trans-unit id="fad47872087ae46c0ae8801dcd216aac1629b8ba" translate="yes" xml:space="preserve">
          <source>ThreadLocal.set()</source>
          <target state="translated">ThreadLocal.set()</target>
        </trans-unit>
        <trans-unit id="ea76ebb3afba7ca5ca185d93e419ac9d7bef11a0" translate="yes" xml:space="preserve">
          <source>ThreadLocal.withInitial()</source>
          <target state="translated">ThreadLocal.withInitial()</target>
        </trans-unit>
        <trans-unit id="388f79e7f6cd9af6475504d43031fda444936124" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom</source>
          <target state="translated">ThreadLocalRandom</target>
        </trans-unit>
        <trans-unit id="c51cd7526dcb058d5725d7b97c9cf1842042f017" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.current()</source>
          <target state="translated">ThreadLocalRandom.current()</target>
        </trans-unit>
        <trans-unit id="5168002791e5e3766e8d2bac85b194773e4bf72e" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.doubles()</source>
          <target state="translated">ThreadLocalRandom.doubles()</target>
        </trans-unit>
        <trans-unit id="518cecff24b0802c13974e5eb757ed3036528994" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.ints()</source>
          <target state="translated">ThreadLocalRandom.ints()</target>
        </trans-unit>
        <trans-unit id="84faa68f340ad21c01aa0dbf0e1e9b1708ada7a9" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.longs()</source>
          <target state="translated">ThreadLocalRandom.longs()</target>
        </trans-unit>
        <trans-unit id="24fedf2bd3ecab7a2c06bba403ee506fd8b26be3" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.next()</source>
          <target state="translated">ThreadLocalRandom.next()</target>
        </trans-unit>
        <trans-unit id="c8adfe0aba9bab398b7b25b9a5d333645a7fdff5" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextBoolean()</source>
          <target state="translated">ThreadLocalRandom.nextBoolean()</target>
        </trans-unit>
        <trans-unit id="134b41249c461f28c399dde9b6fab0e592a6e3e7" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextDouble()</source>
          <target state="translated">ThreadLocalRandom.nextDouble()</target>
        </trans-unit>
        <trans-unit id="f24698da57c58571edcc85c3374b37628aae6f04" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextFloat()</source>
          <target state="translated">ThreadLocalRandom.nextFloat()</target>
        </trans-unit>
        <trans-unit id="83febbb9d6050b072117e6f1dd63688acbb6631b" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextGaussian()</source>
          <target state="translated">ThreadLocalRandom.nextGaussian()</target>
        </trans-unit>
        <trans-unit id="e575d279e9c78f1ec1dd0ceb779e5210fc6a4b27" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextInt()</source>
          <target state="translated">ThreadLocalRandom.nextInt()</target>
        </trans-unit>
        <trans-unit id="b6fca32ef59f5e0bfe30521e4cfde599339502ae" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextLong()</source>
          <target state="translated">ThreadLocalRandom.nextLong()</target>
        </trans-unit>
        <trans-unit id="f8ca4ad4cdfa04559b5b65d9c7a318aa910c6ac1" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.setSeed()</source>
          <target state="translated">ThreadLocalRandom.setSeed()</target>
        </trans-unit>
        <trans-unit id="a10ff84fac420e7f316a20bc0b94ea47b14bdade" translate="yes" xml:space="preserve">
          <source>ThreadMXBean</source>
          <target state="translated">ThreadMXBean</target>
        </trans-unit>
        <trans-unit id="3d0b651efc0f0a81c992b53220709251da91b5fc" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.dumpAllThreads()</source>
          <target state="translated">ThreadMXBean.dumpAllThreads()</target>
        </trans-unit>
        <trans-unit id="7c1ba97afe4c4a6572769579cb7c064e7a9a15d5" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.findDeadlockedThreads()</source>
          <target state="translated">ThreadMXBean.findDeadlockedThreads()</target>
        </trans-unit>
        <trans-unit id="2d930f7d99a532b8271117121586e39b589fb39c" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.findMonitorDeadlockedThreads()</source>
          <target state="translated">ThreadMXBean.findMonitorDeadlockedThreads()</target>
        </trans-unit>
        <trans-unit id="7e3fb081e1ace73ca6853739b66bdcb8e822bdf8" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getAllThreadIds()</source>
          <target state="translated">ThreadMXBean.getAllThreadIds()</target>
        </trans-unit>
        <trans-unit id="0e680848a18b89f5046d2e0078bec092bd035396" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getCurrentThreadCpuTime()</source>
          <target state="translated">ThreadMXBean.getCurrentThreadCpuTime()</target>
        </trans-unit>
        <trans-unit id="216ddb51b7ac7475ab788d3d6ec8c6fdf3dabd5f" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getCurrentThreadUserTime()</source>
          <target state="translated">ThreadMXBean.getCurrentThreadUserTime()</target>
        </trans-unit>
        <trans-unit id="535dac6197aed1f130e46ded648770696cd9ce37" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getDaemonThreadCount()</source>
          <target state="translated">ThreadMXBean.getDaemonThreadCount()</target>
        </trans-unit>
        <trans-unit id="bccd3eff09eabed514da6b3f82c1fdf55d88f79e" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getPeakThreadCount()</source>
          <target state="translated">ThreadMXBean.getPeakThreadCount()</target>
        </trans-unit>
        <trans-unit id="25a7985ce2f8a9b9e2a7df1d3076558dfa1bdfe2" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadCount()</source>
          <target state="translated">ThreadMXBean.getThreadCount()</target>
        </trans-unit>
        <trans-unit id="8478ed530d45010a41b3927c61fb835f892753ae" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadCpuTime()</source>
          <target state="translated">ThreadMXBean.getThreadCpuTime()</target>
        </trans-unit>
        <trans-unit id="ee478f284f0bc74be3488715a1ee92be295df179" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadInfo()</source>
          <target state="translated">ThreadMXBean.getThreadInfo()</target>
        </trans-unit>
        <trans-unit id="817b796175b303a6e6804ea24aac176ccecf96eb" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadUserTime()</source>
          <target state="translated">ThreadMXBean.getThreadUserTime()</target>
        </trans-unit>
        <trans-unit id="070aed62e0989092ae5d156b47e79ecfacf0424f" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getTotalStartedThreadCount()</source>
          <target state="translated">ThreadMXBean.getTotalStartedThreadCount()</target>
        </trans-unit>
        <trans-unit id="22642e0709ff7d93dac027a226301d094f29aa1e" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isCurrentThreadCpuTimeSupported()</source>
          <target state="translated">ThreadMXBean.isCurrentThreadCpuTimeSupported()</target>
        </trans-unit>
        <trans-unit id="4f5eb882b75a3b985ecba7e8200444dd1e9b2842" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isObjectMonitorUsageSupported()</source>
          <target state="translated">ThreadMXBean.isObjectMonitorUsageSupported()</target>
        </trans-unit>
        <trans-unit id="4ca77425cf7ef9d43a09cb76be40e2b572b6ec33" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isSynchronizerUsageSupported()</source>
          <target state="translated">ThreadMXBean.isSynchronizerUsageSupported()</target>
        </trans-unit>
        <trans-unit id="c021cf53a65415b0f248c41bf1327082a2ed894a" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadContentionMonitoringEnabled()</source>
          <target state="translated">ThreadMXBean.isThreadContentionMonitoringEnabled()</target>
        </trans-unit>
        <trans-unit id="30a6d9e52a20a4e80f8dcbba927ffcacc1af758f" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadContentionMonitoringSupported()</source>
          <target state="translated">ThreadMXBean.isThreadContentionMonitoringSupported()</target>
        </trans-unit>
        <trans-unit id="b8e9c7741661179460be305a7b1ff5366c157322" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadCpuTimeEnabled()</source>
          <target state="translated">ThreadMXBean.isThreadCpuTimeEnabled()</target>
        </trans-unit>
        <trans-unit id="1ef8a931131e0666c8f6831f70f2432b7763134a" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadCpuTimeSupported()</source>
          <target state="translated">ThreadMXBean.isThreadCpuTimeSupported()</target>
        </trans-unit>
        <trans-unit id="984c959dc877c2aca2b750ad50d892ee893874c5" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.resetPeakThreadCount()</source>
          <target state="translated">ThreadMXBean.resetPeakThreadCount()</target>
        </trans-unit>
        <trans-unit id="90a4041d734ffb1bcfc54716dbe0cf7793e9329e" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.setThreadContentionMonitoringEnabled()</source>
          <target state="translated">ThreadMXBean.setThreadContentionMonitoringEnabled()</target>
        </trans-unit>
        <trans-unit id="7c4537db9ab28220401454e0be9e69074f0bcdf8" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.setThreadCpuTimeEnabled()</source>
          <target state="translated">ThreadMXBean.setThreadCpuTimeEnabled()</target>
        </trans-unit>
        <trans-unit id="f4ccad88952fdcd6a1fc61663ba8a6b67b062047" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor</source>
          <target state="translated">ThreadPoolExecutor</target>
        </trans-unit>
        <trans-unit id="f2c79d25c8bbeb1de3eb6b991c9c74c92e3a244e" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.AbortPolicy</source>
          <target state="translated">ThreadPoolExecutor.AbortPolicy</target>
        </trans-unit>
        <trans-unit id="d7cc9e13b352c70b3ae3f5dd893ed6f2e88d6d05" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.AbortPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.AbortPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="7b533b964444519aa5cf3169bc513754145d9b96" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.CallerRunsPolicy</source>
          <target state="translated">ThreadPoolExecutor.CallerRunsPolicy</target>
        </trans-unit>
        <trans-unit id="5c445d96d1e1aaa9fe5baec0f0c7895f8ffddbaf" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.CallerRunsPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.CallerRunsPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="eaf6a5f1aabc931cf9f0c22af511f7a995c70bd3" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardOldestPolicy</source>
          <target state="translated">ThreadPoolExecutor.DiscardOldestPolicy</target>
        </trans-unit>
        <trans-unit id="40b1fd685130406b521e03f6b69d8e1bfe7a2ad7" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardOldestPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.DiscardOldestPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="8e3bf12c969ea180a4519fc58d1b9242617651b7" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardPolicy</source>
          <target state="translated">ThreadPoolExecutor.DiscardPolicy</target>
        </trans-unit>
        <trans-unit id="659da8d6807d95d356ca26bbf195573e27a2aef2" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.DiscardPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="a07a97ed57555cb5c116d4d576ae5fa5afe4a11a" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.afterExecute()</source>
          <target state="translated">ThreadPoolExecutor.afterExecute()</target>
        </trans-unit>
        <trans-unit id="b6abc016d184ee9001f123cf7acda91338f878fc" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.allowCoreThreadTimeOut()</source>
          <target state="translated">ThreadPoolExecutor.allowCoreThreadTimeOut()</target>
        </trans-unit>
        <trans-unit id="6e4f95316b15e284ab4612f86782a7b28afcb84b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.allowsCoreThreadTimeOut()</source>
          <target state="translated">ThreadPoolExecutor.allowsCoreThreadTimeOut()</target>
        </trans-unit>
        <trans-unit id="c05151e0a08d6bb09aaef5e33c022ac6e63fa9f8" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.awaitTermination()</source>
          <target state="translated">ThreadPoolExecutor.awaitTermination()</target>
        </trans-unit>
        <trans-unit id="5907ee60c1305e06c4e7c6d216e843fb9401700b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.beforeExecute()</source>
          <target state="translated">ThreadPoolExecutor.beforeExecute()</target>
        </trans-unit>
        <trans-unit id="cd40bf4b1c64224658a5dda766b3ca0378219d78" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.execute()</source>
          <target state="translated">ThreadPoolExecutor.execute()</target>
        </trans-unit>
        <trans-unit id="6d18ed6bcdeac2481871aff10ed90da081adb943" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.finalize()</source>
          <target state="translated">ThreadPoolExecutor.finalize()</target>
        </trans-unit>
        <trans-unit id="a65cec0917fe013463b0be91a2ff0daa9bb53e5d" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getActiveCount()</source>
          <target state="translated">ThreadPoolExecutor.getActiveCount()</target>
        </trans-unit>
        <trans-unit id="e4b3c04ca39b02420d9d29787cf945f10a50c5a2" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getCompletedTaskCount()</source>
          <target state="translated">ThreadPoolExecutor.getCompletedTaskCount()</target>
        </trans-unit>
        <trans-unit id="63116374dd7127f9740b3e59fdf638fffde3ad16" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getCorePoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getCorePoolSize()</target>
        </trans-unit>
        <trans-unit id="a3412a61aac2a4a090d1279b3351cdbc54894e3c" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getKeepAliveTime()</source>
          <target state="translated">ThreadPoolExecutor.getKeepAliveTime()</target>
        </trans-unit>
        <trans-unit id="aa5dc0279c590e30e67ec8056b1f531642bad724" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getLargestPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getLargestPoolSize()</target>
        </trans-unit>
        <trans-unit id="5b2487e8db27a8ff85fd7d2ad6c140c79be7179b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getMaximumPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getMaximumPoolSize()</target>
        </trans-unit>
        <trans-unit id="1e433e740c79571196ce4c40a7d2e4de9a4d82d8" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getPoolSize()</target>
        </trans-unit>
        <trans-unit id="16a98562b9a01e91841b292ec928b1c3697c3c5f" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getQueue()</source>
          <target state="translated">ThreadPoolExecutor.getQueue()</target>
        </trans-unit>
        <trans-unit id="7a35a232ce690a4fbd789ec5f1eb91c79350d866" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getRejectedExecutionHandler()</source>
          <target state="translated">ThreadPoolExecutor.getRejectedExecutionHandler()</target>
        </trans-unit>
        <trans-unit id="d9884834a18ae8875adc0dc72374bb5df10b3176" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getTaskCount()</source>
          <target state="translated">ThreadPoolExecutor.getTaskCount()</target>
        </trans-unit>
        <trans-unit id="38a332410da078a93276896dad4c5d958124d97e" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getThreadFactory()</source>
          <target state="translated">ThreadPoolExecutor.getThreadFactory()</target>
        </trans-unit>
        <trans-unit id="d48791041fe0838566d09999493b06a8f4172585" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.isShutdown()</source>
          <target state="translated">ThreadPoolExecutor.isShutdown()</target>
        </trans-unit>
        <trans-unit id="8db47e1b9fc0fc612ba95c8ab8837cb580e09057" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.isTerminated()</source>
          <target state="translated">ThreadPoolExecutor.isTerminated()</target>
        </trans-unit>
        <trans-unit id="154a1158ff0bc95ff0218a7f6729285e9006f9fa" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.isTerminating()</source>
          <target state="translated">ThreadPoolExecutor.isTerminating()</target>
        </trans-unit>
        <trans-unit id="b8c9e8cab95909d0f9f6f4c14a6eb05ccf7b0c70" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.prestartAllCoreThreads()</source>
          <target state="translated">ThreadPoolExecutor.prestartAllCoreThreads()</target>
        </trans-unit>
        <trans-unit id="e8e0209bc08f6b1bffc4fd25066c640edc090d7d" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.prestartCoreThread()</source>
          <target state="translated">ThreadPoolExecutor.prestartCoreThread()</target>
        </trans-unit>
        <trans-unit id="23dfab8cc11462680b9eeb1bc2197f88b7b18f36" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.purge()</source>
          <target state="translated">ThreadPoolExecutor.purge()</target>
        </trans-unit>
        <trans-unit id="7348f105a42e42d949f33acc99f16f70ea15a7a7" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.remove()</source>
          <target state="translated">ThreadPoolExecutor.remove()</target>
        </trans-unit>
        <trans-unit id="171c9977d1eba377a7a5fba0d1a178f82be4fcc8" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setCorePoolSize()</source>
          <target state="translated">ThreadPoolExecutor.setCorePoolSize()</target>
        </trans-unit>
        <trans-unit id="ffdcd6085baf7ea939001521e5c6791114da2d41" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setKeepAliveTime()</source>
          <target state="translated">ThreadPoolExecutor.setKeepAliveTime()</target>
        </trans-unit>
        <trans-unit id="142eb53a1492c0f895f65f0a6d01f644ee8ba3bb" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setMaximumPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.setMaximumPoolSize()</target>
        </trans-unit>
        <trans-unit id="628548d7b463f0709c6f86a57cdd0d2269e58547" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setRejectedExecutionHandler()</source>
          <target state="translated">ThreadPoolExecutor.setRejectedExecutionHandler()</target>
        </trans-unit>
        <trans-unit id="9efe3a8706a4364989090e0a5fe176c47e485000" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setThreadFactory()</source>
          <target state="translated">ThreadPoolExecutor.setThreadFactory()</target>
        </trans-unit>
        <trans-unit id="da192288deea93eb600f964fab0db8c7f6c523e2" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.shutdown()</source>
          <target state="translated">ThreadPoolExecutor.shutdown()</target>
        </trans-unit>
        <trans-unit id="1a067c0a488a5e47d757724e51fc90736e37dc53" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.shutdownNow()</source>
          <target state="translated">ThreadPoolExecutor.shutdownNow()</target>
        </trans-unit>
        <trans-unit id="f64b4cef9f08cda6f2061e93f5d833d78e23fd3b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.terminated()</source>
          <target state="translated">ThreadPoolExecutor.terminated()</target>
        </trans-unit>
        <trans-unit id="c9cbb28f68a32b755c11fc3f6ccc630ae8bc7429" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.toString()</source>
          <target state="translated">ThreadPoolExecutor.toString()</target>
        </trans-unit>
        <trans-unit id="5541d0b76d127f6a3c54bbc247ffcc1b6c2bbc25" translate="yes" xml:space="preserve">
          <source>Threading</source>
          <target state="translated">Threading</target>
        </trans-unit>
        <trans-unit id="de4e9c7a680290a7be76fdc747bd300e110ee012" translate="yes" xml:space="preserve">
          <source>Threading Issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4f01800311acd6dc47585b32eb83273995c915" translate="yes" xml:space="preserve">
          <source>Three digits for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_YEAR&quot;&gt;&lt;code&gt;day-of-year&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure three digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92c0c34ed0eca6d90d4dc9a82a1b224030f48bc" translate="yes" xml:space="preserve">
          <source>Three letter &lt;a href=&quot;../temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;day-of-week&lt;/code&gt;&lt;/a&gt; in English.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bdfefee4ac2aa9176fc0669c8e504ff8a01d0f" translate="yes" xml:space="preserve">
          <source>Three letter &lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;month-of-year&lt;/code&gt;&lt;/a&gt; in English.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab82e400141b434308880b18f5d90ab1df67021" translate="yes" xml:space="preserve">
          <source>Three-letter language/country(region) codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3394744981ae3b0d160ba5fa153018728b86da8" translate="yes" xml:space="preserve">
          <source>Three-letter time zone IDs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5556acb4e84bfb80d4f798219daaad9dbdbdf7ec" translate="yes" xml:space="preserve">
          <source>Through methods of the &lt;code&gt;Line&lt;/code&gt; interface, which &lt;code&gt;Mixer&lt;/code&gt; extends, a mixer might provide a set of controls that are global to the mixer. For example, the mixer can have a master gain control. These global controls are distinct from the controls belonging to each of the mixer's individual lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29fa5a3481369653554d192305a3d49ea5c81669" translate="yes" xml:space="preserve">
          <source>Throughput and scalability are generally highest for the default barging (also known as &lt;em&gt;greedy&lt;/em&gt;, &lt;em&gt;renouncement&lt;/em&gt;, and &lt;em&gt;convoy-avoidance&lt;/em&gt;) strategy. While this is not guaranteed to be fair or starvation-free, earlier queued threads are allowed to recontend before later queued threads, and each recontention has an unbiased chance to succeed against incoming threads. Also, while acquires do not &quot;spin&quot; in the usual sense, they may perform multiple invocations of &lt;code&gt;tryAcquire&lt;/code&gt; interspersed with other computations before blocking. This gives most of the benefits of spins when exclusive synchronization is only briefly held, without most of the liabilities when it isn't. If so desired, you can augment this by preceding calls to acquire methods with &quot;fast-path&quot; checks, possibly prechecking &lt;a href=&quot;abstractqueuedsynchronizer#hasContended--&quot;&gt;&lt;code&gt;hasContended()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;abstractqueuedsynchronizer#hasQueuedThreads--&quot;&gt;&lt;code&gt;hasQueuedThreads()&lt;/code&gt;&lt;/a&gt; to only do so if the synchronizer is likely not to be contended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abf11297f412ee4fff55514bb434f634e293565" translate="yes" xml:space="preserve">
          <source>Throwable</source>
          <target state="translated">Throwable</target>
        </trans-unit>
        <trans-unit id="98ad00fadfe509294b8793d010a54fc9acb13d66" translate="yes" xml:space="preserve">
          <source>Throwable.addSuppressed()</source>
          <target state="translated">Throwable.addSuppressed()</target>
        </trans-unit>
        <trans-unit id="0c47561a8f890315e653b9cc117aa39ca8c38c67" translate="yes" xml:space="preserve">
          <source>Throwable.fillInStackTrace()</source>
          <target state="translated">Throwable.fillInStackTrace()</target>
        </trans-unit>
        <trans-unit id="cae7225746c3e3d75356859bb685613b213e4379" translate="yes" xml:space="preserve">
          <source>Throwable.getCause()</source>
          <target state="translated">Throwable.getCause()</target>
        </trans-unit>
        <trans-unit id="cd4d4d68986b90e5907c5e1d03ffbf1dcd713548" translate="yes" xml:space="preserve">
          <source>Throwable.getLocalizedMessage()</source>
          <target state="translated">Throwable.getLocalizedMessage()</target>
        </trans-unit>
        <trans-unit id="0e930f6c77fd1a322a22f35a097179d8cb8ef2e4" translate="yes" xml:space="preserve">
          <source>Throwable.getMessage()</source>
          <target state="translated">Throwable.getMessage()</target>
        </trans-unit>
        <trans-unit id="dfdb46c2fa44323329c34d19d00faadb4f29cedb" translate="yes" xml:space="preserve">
          <source>Throwable.getStackTrace()</source>
          <target state="translated">Throwable.getStackTrace()</target>
        </trans-unit>
        <trans-unit id="81966576a0ddab78739d3dd60d9e2f5b4c488a0b" translate="yes" xml:space="preserve">
          <source>Throwable.getSuppressed()</source>
          <target state="translated">Throwable.getSuppressed()</target>
        </trans-unit>
        <trans-unit id="50fa4943f7e6382fb6a0ed657c438da27448c947" translate="yes" xml:space="preserve">
          <source>Throwable.initCause()</source>
          <target state="translated">Throwable.initCause()</target>
        </trans-unit>
        <trans-unit id="4b30a8b60ba03a343483fe862a0a26fb68000e06" translate="yes" xml:space="preserve">
          <source>Throwable.printStackTrace()</source>
          <target state="translated">Throwable.printStackTrace()</target>
        </trans-unit>
        <trans-unit id="3f5d61ee96878a562cc64674a60e417a0bdec190" translate="yes" xml:space="preserve">
          <source>Throwable.setStackTrace()</source>
          <target state="translated">Throwable.setStackTrace()</target>
        </trans-unit>
        <trans-unit id="6562f58691de1dc184d89b483c459a8ab9d6db45" translate="yes" xml:space="preserve">
          <source>Throwable.toString()</source>
          <target state="translated">Throwable.toString()</target>
        </trans-unit>
        <trans-unit id="13986754d05f8d0840da837200315be5d97506ab" translate="yes" xml:space="preserve">
          <source>Throwing &lt;code&gt;null&lt;/code&gt; as if it were a &lt;code&gt;Throwable&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dac3b7a9730402058d3af55f2a3f82c5d5b1e8" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;code&gt;String&lt;/code&gt; methods to indicate that an index is either negative or greater than the size of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144e7f92010c33f921437350f5bad319e14da26c" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;code&gt;String&lt;/code&gt; methods to indicate that an index is either negative or greater than the size of the string. For some methods such as the charAt method, this exception also is thrown when the index is equal to the size of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880bf456a54a70675982d129fa0b480180cdaf07" translate="yes" xml:space="preserve">
          <source>Thrown by a &lt;code&gt;Scanner&lt;/code&gt; to indicate that the token retrieved does not match the pattern for the expected type, or that the token is out of range for the expected type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449d68c28afb5144db6be3ee1bdaf776191d13c8" translate="yes" xml:space="preserve">
          <source>Thrown by a method invocation on a proxy instance if its invocation handler's &lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method throws a checked exception (a &lt;code&gt;Throwable&lt;/code&gt; that is not assignable to &lt;code&gt;RuntimeException&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt;) that is not assignable to any of the exception types declared in the &lt;code&gt;throws&lt;/code&gt; clause of the method that was invoked on the proxy instance and dispatched to the invocation handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2026bb949c8942d0b6ff954de426689bedd22a0f" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6451678b25a75ad37657496ad6b021f9742247c7" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid. This may occur either because the initial class file bytes were invalid or a previously applied transform corrupted the bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020cb90959939fef07e8618b70b83b808a7ab6c3" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;&lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt;&lt;/a&gt; when one of the specified classes cannot be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f4915444489b296f8a95b9b3a5484f0f810de5" translate="yes" xml:space="preserve">
          <source>Thrown by methods in &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;locale.builder&quot;&gt;&lt;code&gt;Locale.Builder&lt;/code&gt;&lt;/a&gt; to indicate that an argument is not a well-formed BCP 47 tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a0ec2666db0d1770ce4ee7ceaa041a300fc918" translate="yes" xml:space="preserve">
          <source>Thrown by methods in the &lt;code&gt;Stack&lt;/code&gt; class to indicate that the stack is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87839756f2b4a9bdafa9add0a5b76630b551723c" translate="yes" xml:space="preserve">
          <source>Thrown by the security manager to indicate a security violation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638a53a219cd761cc43bce87f81cd26bd5efe2ad" translate="yes" xml:space="preserve">
          <source>Thrown by various accessor methods to indicate that the element being requested does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508e7b614f5c1b1263478222d628a114be76f6fd" translate="yes" xml:space="preserve">
          <source>Thrown if an application attempts to access or modify a field, or to call a method that it does not have access to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869d003fbbd88ace377fa534fb1cf7362cbf9994" translate="yes" xml:space="preserve">
          <source>Thrown if an application tries to access or modify a specified field of an object, and that object no longer has that field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35416788a1bd097dd83b51fbf396ce3397d9350" translate="yes" xml:space="preserve">
          <source>Thrown if an application tries to call a specified method of a class (either static or instance), and that class no longer has a definition of that method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa5f401421c28f34721102b2aaea3b599adcdcf" translate="yes" xml:space="preserve">
          <source>Thrown if an application tries to create an array with negative size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cacfda15a370bf1f448b1b8734326c58b5e5ab2" translate="yes" xml:space="preserve">
          <source>Thrown if the Java Virtual Machine cannot find an appropriate native-language definition of a method declared &lt;code&gt;native&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4b30764bfef85ec04d2330e9c4230db6e74c8e" translate="yes" xml:space="preserve">
          <source>Thrown if the Java Virtual Machine or a &lt;code&gt;ClassLoader&lt;/code&gt; instance tries to load in the definition of a class (as part of a normal method call or as part of creating a new instance using the &lt;code&gt;new&lt;/code&gt; expression) and no definition of the class could be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41a5283fb09f87113fc151fba33158899deefe0" translate="yes" xml:space="preserve">
          <source>Thrown to indicate a problem with time-zone configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3983324dddc861a832d725ae45cd3b7f60d3579e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate some unexpected internal error has occurred in the Java Virtual Machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3e4a0f1f3fa89bbf8d9b5da71fc426af023520" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a HTTP request needs to be retried but cannot be retried automatically, due to streaming mode being enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540d804314f89ee62b22cb986c1385ddf340ae9d" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a malformed URL has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6f32daeda821c29c3ca8469339c0da181d14f4" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a malformed URL has occurred. Either no legal protocol could be found in a specification string or the string could not be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0c26de4391b628372b987bc09c64a422883e4c" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a method has been passed an illegal or inappropriate argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3969dcb5b1cacd4b351f464d7cbd2f69e84f3112" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a preferences operation could not complete because of a failure in the backing store, or a failure to contact the backing store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ddf5259c94abd224ba4a9bb539fc79886290d3" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation type that was added to the annotation type definition after the annotation was compiled (or serialized).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5239569b289f742c10f1a049c81ec9e3872a1bbe" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation type that was added to the annotation type definition after the annotation was compiled (or serialized). This exception will not be thrown if the new element has a default value. This exception can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396e7ce9ea643597626cd549a33491cd8c6ef479" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled (or serialized).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56668c6b68c397fb5a223b8e1ca0567f75cb2a3" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled (or serialized). This exception can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4c519a933997728d1498c9a610464926087237" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a thread has attempted to wait on an object's monitor or to notify other threads waiting on an object's monitor without owning the specified monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5640785c45e7765a6d9b60e968cf411a55241ae" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a thread is not in an appropriate state for the requested operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104f9c2d0af4cd752935e91bc4dac004678b631a" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a thread is not in an appropriate state for the requested operation. See, for example, the &lt;code&gt;suspend&lt;/code&gt; and &lt;code&gt;resume&lt;/code&gt; methods in class &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66861cc613fc6090138285ae273fece145579c8e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an &lt;code&gt;invokedynamic&lt;/code&gt; instruction has failed to find its bootstrap method, or the bootstrap method has failed to provide a &lt;a href=&quot;invoke/callsite&quot;&gt;call site&lt;/a&gt; with a &lt;a href=&quot;invoke/callsite#getTarget--&quot;&gt;target&lt;/a&gt; of the correct &lt;a href=&quot;invoke/methodhandle#type&quot;&gt;method type&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102ef32c651cb8c531134e2d5666f4c8921e8d5a" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an array has been accessed with an illegal index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e638105227ffc56d46887520a9df3fe725ecf6bf" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3788a6bc96dd93a0423e65a2392c4aefa6564479" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an assertion has failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b932c33fe1548f8d27998a525122baefbc9517" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8dfd8c4ad7a3be4deff5dd0a1a73d68b62f9a3" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects. For example, the following code generates an &lt;code&gt;ArrayStoreException&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f6549a0587858bd0fb2c54a050332bf79bf62e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an index of some sort (such as to an array, to a string, or to a vector) is out of range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a57f59f92df555e7bc14534566186bfe4a4075" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of preferences, as per the &lt;a href=&quot;preferences&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef87496cb36d2707364b4b160f0cab796ab79c2" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of properties, as per the &lt;a href=&quot;properties&quot;&gt;&lt;code&gt;Properties&lt;/code&gt;&lt;/a&gt; specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af993c3944abc68b7713ec33d09f8faacc3dade8" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an unknown service exception has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b381bb1c81dc4ca192e0de5ff0ecde91c4dac6" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an unknown service exception has occurred. Either the MIME type returned by a URL connection does not make sense, or the application is attempting to write to a read-only URL connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5493a6ebb1e010e9dd2cea973b53ecbf4af2dea2" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that code has attempted to call a method handle via the wrong method type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ac50091a1f8c77798686f70107577cf2451182" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that code has attempted to call a method handle via the wrong method type. As with the bytecode representation of normal Java method calls, method handle calls are strongly typed to a specific type descriptor associated with a call site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92c41a850d254a4780135c9c69967168dabaafc" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the &lt;code&gt;clone&lt;/code&gt; method in class &lt;code&gt;Object&lt;/code&gt; has been called to clone an object, but that the object's class does not implement the &lt;code&gt;Cloneable&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8478a05f127fe7cb9c0488a21cfdaaa771e4f86" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the IP address of a host could not be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa7f8c02d77f4c0cf3b797c8fcecce755192567" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the Java Virtual Machine is broken or has run out of resources necessary for it to continue operating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383825884ffb24c7fd28f3f1256478dd6354193a" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the application has attempted to convert a string to one of the numeric types, but that the string does not have the appropriate format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d77fa13959fc7eaa7f9d341784fbcd5f5ca9eea" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c506a5ebbdd9f9271eda27d1cea842ba88758187" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance. For example, the following code generates a &lt;code&gt;ClassCastException&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a1967fe0da3125703acfb2f8268a0b79a2042b" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be performed because the set is unmodifiable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b1734f96c51dcec87166c6792985e9dc831b91" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99d78d4dde5392bb96f28ceab1fd0b14f1f18e4" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an error creating or accessing a Socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf43f98e6868d5fac49daf31f93cdbc9d0c4f2f" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an error in the underlying protocol, such as a TCP error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5966211edde30cdd2a3cf811bcc64351630ec522" translate="yes" xml:space="preserve">
          <source>Thrown when &lt;a href=&quot;executable#getParameters--&quot;&gt;&lt;code&gt;the
 java.lang.reflect package&lt;/code&gt;&lt;/a&gt; attempts to read method parameters from a class file and determines that one or more parameters are malformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea327af5e49b562dedb37469442db8fcd3880f1e" translate="yes" xml:space="preserve">
          <source>Thrown when a file system operation fails on one or two files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c8ea5944303943cba55b2bd34f2f77daa12756" translate="yes" xml:space="preserve">
          <source>Thrown when a file system operation fails on one or two files. This class is the general class for file system exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b356658f537a4564f86e8316f0d9b9d4bd5b569" translate="yes" xml:space="preserve">
          <source>Thrown when a particular method cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473aef2086c18bb75b2527e5f479c40478fb31a6" translate="yes" xml:space="preserve">
          <source>Thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc8d3f3349c445f738743923e1d85c669bd665d" translate="yes" xml:space="preserve">
          <source>Thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it. For example, if the number of type arguments to a parameterized type is wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f3c5a41292fa168570f2fd4a41460ed538818e" translate="yes" xml:space="preserve">
          <source>Thrown when a serious I/O error has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c339926ccc01f06f95cfd36ba516e167e648173" translate="yes" xml:space="preserve">
          <source>Thrown when a stack overflow occurs because an application recurses too deeply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69fa9230dccf801abde7f829b6712ffde1f2600" translate="yes" xml:space="preserve">
          <source>Thrown when a syntactically malformed signature attribute is encountered by a reflective method that needs to interpret the generic signature information for a type, method or constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13159ce6dfd56a2d1d891aba708f3644e1858209" translate="yes" xml:space="preserve">
          <source>Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09b0f18154fb0be95c6024931d3b93eefc7c0c0" translate="yes" xml:space="preserve">
          <source>Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity. Occasionally a method may wish to test whether the current thread has been interrupted, and if so, to immediately throw this exception. The following code can be used to achieve this effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225db7a3c32fdda714d3a100271f518cdd05102e" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access a sequence of &lt;a href=&quot;../../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; objects each corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9acf0947c9de40df52ae2fe13a861f6ea15113" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access the &lt;a href=&quot;../../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d2fa5db6cc3f5ae02f3bb6d25cd64e447d437b" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to use &lt;code&gt;null&lt;/code&gt; in a case where an object is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d794833472e9887dedcf95a573622747a3250e" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to use &lt;code&gt;null&lt;/code&gt; in a case where an object is required. These include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efdcf35f82ddf5acbc1ee386d430193d9c08f60" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access a type using a string representing the type's name, but no definition for the type with the specified name can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d583f6390e88d58a321cdd57cd3f045c610841a6" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access a type using a string representing the type's name, but no definition for the type with the specified name can be found. This exception differs from &lt;a href=&quot;classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; in that &lt;code&gt;ClassNotFoundException&lt;/code&gt; is a checked exception, whereas this exception is unchecked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394d02ea1dad51f2e7fea8427dbdfb2dc48460b1" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef87971ac4029e84916a62d3d21f03b3407a94cf" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name. This exception can be thrown by the &lt;a href=&quot;reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e1287ede5f17d39e118dcc0654e2e9da0386c3" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to call an abstract method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8952421e86e0b4cec4184d03f07efd2efca2d6f1" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to call an abstract method. Normally, this error is caught by the compiler; this error can only occur at run time if the definition of some class has incompatibly changed since the currently executing method was last compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d599ac9e124da1067640464856740be65dcb3fc5" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to create an instance of a class using the &lt;code&gt;newInstance&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;, but the specified class object cannot be instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5da040c056249dd1c7fbcfdea1a071f540ddb76" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to create an instance of a class using the &lt;code&gt;newInstance&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;, but the specified class object cannot be instantiated. The instantiation can fail for a variety of reasons including but not limited to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf321247c46d7739ccd9a0b52a0d88daf189f0c" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to load in a class through its string name using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ba4c30bc96d518611c82265d700edfac455648" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to load in a class through its string name using: The &lt;code&gt;forName&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf137b773f9859fde3407fbc5844cd52f1a45bfe" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to use the Java &lt;code&gt;new&lt;/code&gt; construct to instantiate an abstract class or an interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbd13add8ba126043071ece75b6a53958168b5c" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to apply either of the following: A subquery expression to an MBean or a qualified attribute expression to an MBean of the wrong class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f5ccd6d74e1e11b46464103f4bd32cb8d0e745" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to apply either of the following: A subquery expression to an MBean or a qualified attribute expression to an MBean of the wrong class. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8f8ddb11e46f4a61f57676c0712e4c59869f15" translate="yes" xml:space="preserve">
          <source>Thrown when an exception happens during Introspection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf4b1fcd2c1835e34a0b539588da56420cfbfe4" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4095093e5e2e1f08f1094f0cb7cdc298b4807f" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred. For example, an integer &quot;divide by zero&quot; throws an instance of this class. &lt;code&gt;ArithmeticException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c3b51563fba6681b56fff23ad6e3f7caa032a5" translate="yes" xml:space="preserve">
          <source>Thrown when an incompatible class change has occurred to some class definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03dbcc1ff09820ec670644adf9fb836fd881505" translate="yes" xml:space="preserve">
          <source>Thrown when an incompatible class change has occurred to some class definition. The definition of some class, on which the currently executing method depends, has since changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859c313b24fee600258c58da585f738aa69eefda" translate="yes" xml:space="preserve">
          <source>Thrown when an instance is required to have a Serializable interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8212e9b4f24451f5d6042e552f5a1924bf917b44" translate="yes" xml:space="preserve">
          <source>Thrown when an instance is required to have a Serializable interface. The serialization runtime or the class of the instance can throw this exception. The argument should be the name of the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68caee0d2483ccee0c8bedc33ef0d8c32c01186f" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid MBean attribute is passed to a query constructing method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4924793bd0e16d66f4de3676bc5bc92d8b866d" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid MBean attribute is passed to a query constructing method. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65027c2cbefb9a86f7e5896157d0a564dc68c8a2" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid expression is passed to a method for constructing a query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612fd061d4632211a9f42160d42efe19a4953464" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid expression is passed to a method for constructing a query. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5156c265aa48ef9e6123c4e2b94e041b51d8612" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid string operation is passed to a method for constructing a query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a721eac456b7c9447845cc8c07c5d51ce86fd74" translate="yes" xml:space="preserve">
          <source>Thrown when an unknown but serious exception has occurred in the Java Virtual Machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f0535770ad610db510a22dd91b17d0ecb07058" translate="yes" xml:space="preserve">
          <source>Thrown when control information that was read from an object stream violates internal consistency checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d94c66beac535279aeecb37d1880f959ac08af" translate="yes" xml:space="preserve">
          <source>Thrown when serialization or deserialization is not active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d46bdd3f1bde41e39251582589cfaad576ea3a9" translate="yes" xml:space="preserve">
          <source>Thrown when the &quot;verifier&quot; detects that a class file, though well formed, contains some sort of internal inconsistency or security problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e008bbf65d9a350656cb038f08e70432f6f069f3" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine attempts to read a class file and determines that the file is malformed or otherwise cannot be interpreted as a class file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc1214c2d99c634bec6c595d0849d6c2fe5591c" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine attempts to read a class file and determines that the major and minor version numbers in the file are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225d524010f1bd6efec2c88237f9c71cbb8350e3" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc64fdd683025546acfff552400f086c70aac922" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. &lt;code&gt;OutOfMemoryError&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031c30cc5094ce5c4a0da5e119a594f2fec0e626" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine detects a circularity in the superclass hierarchy of a class being loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212e011343d58000abfbc7c33228a1c8770b4591" translate="yes" xml:space="preserve">
          <source>Thrown when the Serialization runtime detects one of the following problems with a Class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268d43717775e9a46e419decbb0b34f324b2fc13" translate="yes" xml:space="preserve">
          <source>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d93b2e90840d752626ad4f57ce3e02d72ee34d" translate="yes" xml:space="preserve">
          <source>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed. This error can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fd660c53c5155458a03c531cf971e59cbb246d" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;&quot;de-*-DE&quot;&lt;/code&gt; is not a valid basic language range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bcd658de7adf03be526b1f4c13b4043b6de281" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;nosuchmethoderror&quot;&gt;&lt;code&gt;NoSuchMethodError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4eb1b7e95ca67674015b9400cf0bd76a61969be" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; because &lt;code&gt;ReadLocks&lt;/code&gt; do not support conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866a4b95987c85cee1e61367384eb97fddc2254b" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71463ab935ff7965f4bb58554d2f740ad341d01d" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Setting seeds in this generator is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c5180f23af8ef04642e893263bb662bb2d9ce1" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException as a Thread can not be meaningfully cloned. Construct a new Thread instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7906d41002453e852ec1ee359aac34142c9c10e" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException. This guarantees that enums are never cloned, which is necessary to preserve their &quot;singleton&quot; status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef933213f30747ab820a8ac6fc361588a2855817" translate="yes" xml:space="preserve">
          <source>Throws SocketException if the option is unrecognized, the socket is closed, or some low-level error occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be311179773fef72b8e322098317b5607696664e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a483d1a1cce3c98637f041f03044671cbe2e89" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access or modify the system properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f7c6fbaf9a2607bc25a6acc5fa0c8f060a9989" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the AWT event queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a41bc1c166f380713d9ba97b29c985e0e4a579" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the package specified by the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f496850217aa0260833640ec37d1833905978aad" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the system clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee651fa0fe2ac3ba0abb353dbe90d4880e5f272d" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the system property with the specified &lt;code&gt;key&lt;/code&gt; name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0f42f7ce4bc6efbaa975a76c42159794ec73ff" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to cause the Java Virtual Machine to halt with the specified status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1ea61f78b2cd6b2339492e62dcd23635cf3fd1" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to create a new class loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6dbdd3781f34d5c9960948cde79f67a33094d0" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to create a subprocess.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f119cb4bb17d984742723135c67fd80d9a5479" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to define classes in the package specified by the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93928659d55c05442babb348bde7f9097f9e3bb9" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to delete the specified file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44b9f9df6244dd1cedb020ade27ffd9d377ac2f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to dynamic link the library code specified by the string argument file. The argument is either a simple library name or a complete filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18eb7ec4e7cf6dd8f0810f8fbd3de11dda2ab520" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to initiate a print job request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f1abf24c7ec33534c68edc39f44985b7130de5" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to modify the thread argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c82afd4e3102f2b30f0f490f95269fcefb1ea11" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to modify the thread group argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9348c9c27c4d0b27be635ebd4243b5159774bd3c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to open a socket connection to the specified host and port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd511dcc00428d20e199d504e5a62cf049f420e6" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to read from the specified file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613665d6a7892ee299b4b9a41dd7850681647520" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to read the file specified by the string argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b4f2564e11bd9010431ad73cb7dbcb64671417" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to set the socket factory used by &lt;code&gt;ServerSocket&lt;/code&gt; or &lt;code&gt;Socket&lt;/code&gt;, or the stream handler factory used by &lt;code&gt;URL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a992423182e7fd2f0c68a6e3399d48fb61a2c4ea" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to use (join/leave/send/receive) IP multicast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42179baf69e295d476e665b60f38e3b57c0d823e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to wait for a connection request on the specified local port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c71db3bcf9f3e867fee15210966a56b5576646" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to write to the file specified by the string argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b59151923ebac69423a301ee1ca0d61eea1f8b" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to write to the specified file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa607d3467b07e33aa5dbab627a8cb509730651e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not permitted to accept a socket connection from the specified host and port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3911c97d748b3105f51a1c90495fee8541f38427" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the requested access, specified by the given permission, is not permitted based on the security policy currently in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d182175e27ba08a0b9e896a7124bd7728f59f68" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is denied access to the resource specified by the given permission. The context must be a security context returned by a previous call to &lt;code&gt;getSecurityContext&lt;/code&gt; and the access control decision is based upon the configured security policy for that security context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0a8e2aad645347a8283d1be96e9faf74fb172f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to open a socket connection to the specified host and port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe7a014c93f4282d4cf240fe9f4785ceeb3567c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to read the file specified by the string argument. The context must be a security context returned by a previous call to &lt;code&gt;getSecurityContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304bfe57b073a4145ee415402af9e5b48a0f327f" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;IOException&lt;/code&gt; if the stream has been closed. Subclasses may call this method from any of their methods that require the stream not to be closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f451515ac1645688e90d030ff9b7ee8761a8ad3" translate="yes" xml:space="preserve">
          <source>Throws an exception appropriate to the result described by this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1b3e348c5e658c9f04296e21ad3e2315006119" translate="yes" xml:space="preserve">
          <source>Throws:</source>
          <target state="translated">Throws:</target>
        </trans-unit>
        <trans-unit id="a30856303a88309d99f53e90a911f2241ad88676" translate="yes" xml:space="preserve">
          <source>Ths default is &quot;sticky&quot;, being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7050380a0757ca93c6160fb310b67b6ebbd5740d" translate="yes" xml:space="preserve">
          <source>Thumbnails will be returned in their entirety regardless of the region settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76031ddf92450ba52c1e3945097079807a9065c2" translate="yes" xml:space="preserve">
          <source>Thursday</source>
          <target state="translated">Thursday</target>
        </trans-unit>
        <trans-unit id="3d04b20ba0bec439ae9bc45463e71ca3adffc239" translate="yes" xml:space="preserve">
          <source>Thus &quot;FooBah&quot; becomes &quot;fooBah&quot; and &quot;X&quot; becomes &quot;x&quot;, but &quot;URL&quot; stays as &quot;URL&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1406418bbdae0badf2726e6c650822f58e9a9bc5" translate="yes" xml:space="preserve">
          <source>Thus any implementation of ModelMBeanInfo should always add those two notifications in addition to those specified by the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ecb3e422cd1d28153f56d873a84dcc58af876d1" translate="yes" xml:space="preserve">
          <source>Thus for a class such as &quot;sun.xyz.OurButton&quot; we would first look for a BeanInfo class called &quot;sun.xyz.OurButtonBeanInfo&quot; and if that failed we'd look in each package in the BeanInfo search path for an OurButtonBeanInfo class. With the default search path, this would mean looking for &quot;sun.beans.infos.OurButtonBeanInfo&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39eb837b9fc8b3cfe8f618eade937385de94fe08" translate="yes" xml:space="preserve">
          <source>Thus for example a pattern of &quot;%t/java%g.log&quot; with a count of 2 would typically cause log files to be written on Solaris to /var/tmp/java0.log and /var/tmp/java1.log whereas on Windows 95 they would be typically written to C:\TEMP\java0.log and C:\TEMP\java1.log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bec96d1db6450dc1a885bd7b05bf79842923ad" translate="yes" xml:space="preserve">
          <source>Thus if the argument name is &quot;fred&quot;, it will assume that there is an indexed reader method &quot;getFred&quot;, a non-indexed (array) reader method also called &quot;getFred&quot;, an indexed writer method &quot;setFred&quot;, and finally a non-indexed writer method &quot;setFred&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0eef772246048b29012102df64202a5a3b0e9f" translate="yes" xml:space="preserve">
          <source>Thus if three processes were all trying to log to fred%u.%g.txt then they might end up using fred0.0.txt, fred1.0.txt, fred2.0.txt as the first file in their rotating sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30bef851397fcfa834b5d84559d2fc29425fcce" translate="yes" xml:space="preserve">
          <source>Thus these two notifications are always added to those specified by the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175a69d195bb39a6e49e26db6468a1cc4c4f0c15" translate="yes" xml:space="preserve">
          <source>Thus, a method type mismatch which might show up as a linkage error in a statically typed program can show up as a dynamic &lt;code&gt;WrongMethodTypeException&lt;/code&gt; in a program which uses method handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c7f4c120a26932bbddcc1fc1d6486b24537a52" translate="yes" xml:space="preserve">
          <source>Thus, byte values between &lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0x7f&lt;/code&gt; are simply returned as integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;127&lt;/code&gt;. Values between &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0xff&lt;/code&gt;, which normally represent negative &lt;code&gt;byte&lt;/code&gt;values, will be mapped into positive integers between &lt;code&gt;128&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d5d9388d642541526ec7a4d22824785e336cf7" translate="yes" xml:space="preserve">
          <source>Thus, for any given local date-time there can be zero, one or two valid offsets. This method returns that list of valid offsets, which is a list of size 0, 1 or 2. In the case where there are two offsets, the earlier offset is returned at index 0 and the later offset at index 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecac47baa2a0453ec61d9b7f00a6b3be988dfffb" translate="yes" xml:space="preserve">
          <source>Thus, for any given local date-time there can be zero, one or two valid offsets. This method returns the single offset in the Normal case, and in the Gap or Overlap case it returns the offset before the transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05cc43cc27a279b762a0084bba5cae97c6ea3f3" translate="yes" xml:space="preserve">
          <source>Thus, handles to non-public methods, or to methods in non-public classes, should generally be kept secret. They should not be passed to untrusted code unless their use from the untrusted code would be harmless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd17657c1d0440eb89690887c93cacc2d6efb86" translate="yes" xml:space="preserve">
          <source>Thus, the purpose of AccessControlContext is for those situations where a security check that should be made within a given context actually needs to be done from within a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98476dff4d031897aba6eab3b7fd173f84c35a5b" translate="yes" xml:space="preserve">
          <source>Thus, two &lt;code&gt;Date&lt;/code&gt; objects are equal if and only if the &lt;code&gt;getTime&lt;/code&gt; method returns the same &lt;code&gt;long&lt;/code&gt; value for both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c3d429db909b0bed898ed1c23e12a0253ff1c8" translate="yes" xml:space="preserve">
          <source>Thus, when a &lt;code&gt;Locale&lt;/code&gt; object contains Unicode locale attributes and keywords, &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; will return a String representing this information, for example, &quot;nu-thai&quot;. The &lt;code&gt;Locale&lt;/code&gt; class also provides &lt;a href=&quot;locale#getUnicodeLocaleAttributes--&quot;&gt;&lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;locale#getUnicodeLocaleKeys--&quot;&gt;&lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt;&lt;/a&gt; which allow you to access Unicode locale attributes and key/type pairs directly. When represented as a string, the Unicode Locale Extension lists attributes alphabetically, followed by key/type sequences with keys listed alphabetically (the order of subtags comprising a key's type is fixed when the type is defined)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6784f4bdace33c20dfec97fb8e85a458830053" translate="yes" xml:space="preserve">
          <source>Time formatted for the 12-hour clock as &lt;code&gt;&quot;%tI:%tM:%tS %Tp&quot;&lt;/code&gt;. The location of the morning or afternoon marker (&lt;code&gt;'%Tp'&lt;/code&gt;) may be locale-dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0fcf04a794ce3095e0649fe7de98b0aa7efd9c" translate="yes" xml:space="preserve">
          <source>Time formatted for the 24-hour clock as &lt;code&gt;&quot;%tH:%tM&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6d94004f978d6098c423e1892852b097c9b10b" translate="yes" xml:space="preserve">
          <source>Time formatted for the 24-hour clock as &lt;code&gt;&quot;%tH:%tM:%tS&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabfafbde1bcee333b2792b5a75b20bd748367c1" translate="yes" xml:space="preserve">
          <source>Time unit representing one second</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0427592ba03900f5b05775749a82fa6413478361" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a microsecond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bb947eb596cc0808ba5a6e9ecb5e1f991eafa8" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a millisecond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50f471fb69b28b20b8e59aff81ba82cdfda6dba" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a second</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab70b98a2301e438690d8226a7540fb93a18051" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty minutes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25db4b139768b0c095e63a33f97da9c2ced0a3e6" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020cbda4d020d26de73dea56e6abbaa04d2631e6" translate="yes" xml:space="preserve">
          <source>Time unit representing twenty four hours</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f57c9112e204a7e40fe8299e9501ca95885d1f" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The calculation effectively converts both zoned date-times to instants and then calculates the period between the instants. For example, the period from noon on day 1 to noon the following day in hours may be 23, 24 or 25 hours (or some other amount) depending on whether there was a daylight savings change or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed6b3c9aeefe2bc6282eff254e96b8c3817061f" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first added to the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the addition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831e64c683b21b66a0babbd03d6b96ebea1847d5" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first subtracted from the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the subtraction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050590f9af11ee8fbb6d37006b75678e145d12dd" translate="yes" xml:space="preserve">
          <source>Time with offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa53650ff34d0afa2cc90c62149dba0ee3a43b8" translate="yes" xml:space="preserve">
          <source>Time with or without offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a771812f6037b30385960c0fae367957acff4a" translate="yes" xml:space="preserve">
          <source>Time without offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea79afd832854a3b24153b928ee9c62c7457dbe" translate="yes" xml:space="preserve">
          <source>Time zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb54ab1e88ff1d025269859104bf56b528ef8af" translate="yes" xml:space="preserve">
          <source>Time zone names are supported by &lt;a href=&quot;timezonenameprovider&quot;&gt;&lt;code&gt;TimeZoneNameProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4878b36a0d9264640a70315c2a5bb65e680e2f" translate="yes" xml:space="preserve">
          <source>Time zone rules are expressed in one of three ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e881d4f0c8acf36a5646394d4530435fc6c9f4a" translate="yes" xml:space="preserve">
          <source>Time-scale</source>
          <target state="translated">Time-scale</target>
        </trans-unit>
        <trans-unit id="8830a64163772ea12b0403c9616e1650d28ab38b" translate="yes" xml:space="preserve">
          <source>Time-zone IDs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ded71aae7cb19513a319ece1e1ed4533d56bc6" translate="yes" xml:space="preserve">
          <source>Time-zone rules are defined by governments and change frequently. There are a number of organizations, known here as groups, that monitor time-zone changes and collate them. The default group is the IANA Time Zone Database (TZDB). Other organizations include IATA (the airline industry body) and Microsoft.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6137849a9f17f87165fee1499b4099d6a4fd65ee" translate="yes" xml:space="preserve">
          <source>Time-zone rules are political, thus the data can change at any time. Each provider will provide the latest rules for each zone ID, but they may also provide the history of how the rules changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090fb0c18ce47a2edb59226eb740058c265f757b" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may not be midnight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d8919b61a4696f2edbdb1a0ffd8942c9a32cd6" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt; to retain the offset from this instance if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626b62a0eab63d8138cbffcf2c050e1dbc225369" translate="yes" xml:space="preserve">
          <source>Time-zones are defined by governments and change frequently. This method allows applications to find the history of changes to the rules for a single zone ID. The map is keyed by a string, which is the version string associated with the rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de905fd055ac463c8b08925d00ee67eebc8d728" translate="yes" xml:space="preserve">
          <source>TimeLimitExceededException</source>
          <target state="translated">TimeLimitExceededException</target>
        </trans-unit>
        <trans-unit id="df40c3b93b006f00eef205beea090efa3f7e9e8d" translate="yes" xml:space="preserve">
          <source>TimeUnit</source>
          <target state="translated">TimeUnit</target>
        </trans-unit>
        <trans-unit id="dc6d78829b2f8c3106a4bdf822f751696435efcb" translate="yes" xml:space="preserve">
          <source>TimeUnit.convert()</source>
          <target state="translated">TimeUnit.convert()</target>
        </trans-unit>
        <trans-unit id="830cc0bd2e0a2fe9eac0e502ef3b5b9156d31f8b" translate="yes" xml:space="preserve">
          <source>TimeUnit.sleep()</source>
          <target state="translated">TimeUnit.sleep()</target>
        </trans-unit>
        <trans-unit id="83f017325323a2fb1c3d3b6db20dd4b319aa7f08" translate="yes" xml:space="preserve">
          <source>TimeUnit.timedJoin()</source>
          <target state="translated">TimeUnit.timedJoin()</target>
        </trans-unit>
        <trans-unit id="5f6deaa8e8a85d9852e3e80f21a713e5ffac59c6" translate="yes" xml:space="preserve">
          <source>TimeUnit.timedWait()</source>
          <target state="translated">TimeUnit.timedWait()</target>
        </trans-unit>
        <trans-unit id="c8e371532ae3111ecdf8ef29a5548ddd918cb4f1" translate="yes" xml:space="preserve">
          <source>TimeUnit.toDays()</source>
          <target state="translated">TimeUnit.toDays()</target>
        </trans-unit>
        <trans-unit id="99b0f5def87732225751e7031078408f4f134430" translate="yes" xml:space="preserve">
          <source>TimeUnit.toHours()</source>
          <target state="translated">TimeUnit.toHours()</target>
        </trans-unit>
        <trans-unit id="ef73133eee66e8d60b240f6c276328790c87d794" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMicros()</source>
          <target state="translated">TimeUnit.toMicros()</target>
        </trans-unit>
        <trans-unit id="c68987acb22a0f1133564c2feeec03d3e5d7b531" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMillis()</source>
          <target state="translated">TimeUnit.toMillis()</target>
        </trans-unit>
        <trans-unit id="3730ed7851bf04f1d33d3ff0080311423a464267" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMinutes()</source>
          <target state="translated">TimeUnit.toMinutes()</target>
        </trans-unit>
        <trans-unit id="4dd5c6566718095f94c4b947cdb8e61d5741f1d9" translate="yes" xml:space="preserve">
          <source>TimeUnit.toNanos()</source>
          <target state="translated">TimeUnit.toNanos()</target>
        </trans-unit>
        <trans-unit id="a79b9e1c9998086855c45b2ecd7a5f4c333edfe8" translate="yes" xml:space="preserve">
          <source>TimeUnit.toSeconds()</source>
          <target state="translated">TimeUnit.toSeconds()</target>
        </trans-unit>
        <trans-unit id="57ef650399f2712bf741a27ec482a93a859abb4a" translate="yes" xml:space="preserve">
          <source>TimeUnit.valueOf()</source>
          <target state="translated">TimeUnit.valueOf()</target>
        </trans-unit>
        <trans-unit id="a359ca57ee573718caff5b8c3e63b5fc924bf389" translate="yes" xml:space="preserve">
          <source>TimeUnit.values()</source>
          <target state="translated">TimeUnit.values()</target>
        </trans-unit>
        <trans-unit id="a4208dd784207f8d84ef4fa31bd30bdd2b432c1d" translate="yes" xml:space="preserve">
          <source>TimeZone</source>
          <target state="translated">TimeZone</target>
        </trans-unit>
        <trans-unit id="e9cbb9369e1389fce6fec9ee7402639ce40b5d8a" translate="yes" xml:space="preserve">
          <source>TimeZone.clone()</source>
          <target state="translated">TimeZone.clone()</target>
        </trans-unit>
        <trans-unit id="d2c14798f600f15426d37393363602c92fa2a2f2" translate="yes" xml:space="preserve">
          <source>TimeZone.getAvailableIDs()</source>
          <target state="translated">TimeZone.getAvailableIDs()</target>
        </trans-unit>
        <trans-unit id="b37d04d3329436f7f71234e48d7d2bc525eef972" translate="yes" xml:space="preserve">
          <source>TimeZone.getDSTSavings()</source>
          <target state="translated">TimeZone.getDSTSavings()</target>
        </trans-unit>
        <trans-unit id="a36b3c7befab558d8c90ba31a7714dde07f2d526" translate="yes" xml:space="preserve">
          <source>TimeZone.getDefault()</source>
          <target state="translated">TimeZone.getDefault()</target>
        </trans-unit>
        <trans-unit id="6c480eb94416dc3381f7dd97c7c459c72e05d9aa" translate="yes" xml:space="preserve">
          <source>TimeZone.getDisplayName()</source>
          <target state="translated">TimeZone.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="79e758338012138895c385e324e812e297c7e960" translate="yes" xml:space="preserve">
          <source>TimeZone.getID()</source>
          <target state="translated">TimeZone.getID()</target>
        </trans-unit>
        <trans-unit id="5cef88fd890c75151720b6f231afd2108cb8f294" translate="yes" xml:space="preserve">
          <source>TimeZone.getOffset()</source>
          <target state="translated">TimeZone.getOffset()</target>
        </trans-unit>
        <trans-unit id="89330dcc6b6c1d1c028fe320c5f593c5b989fe9e" translate="yes" xml:space="preserve">
          <source>TimeZone.getRawOffset()</source>
          <target state="translated">TimeZone.getRawOffset()</target>
        </trans-unit>
        <trans-unit id="10d1274880ae857877db690d3c0220040aff62da" translate="yes" xml:space="preserve">
          <source>TimeZone.getTimeZone()</source>
          <target state="translated">TimeZone.getTimeZone()</target>
        </trans-unit>
        <trans-unit id="1b8c437f45170fda63fafc1a7c082d45c20fced2" translate="yes" xml:space="preserve">
          <source>TimeZone.hasSameRules()</source>
          <target state="translated">TimeZone.hasSameRules()</target>
        </trans-unit>
        <trans-unit id="ff334a3e562bd71e91ec01e6fe9899d37c05c857" translate="yes" xml:space="preserve">
          <source>TimeZone.inDaylightTime()</source>
          <target state="translated">TimeZone.inDaylightTime()</target>
        </trans-unit>
        <trans-unit id="1f697c26f417f7d9d7cdfbd4587c9d2fcd681320" translate="yes" xml:space="preserve">
          <source>TimeZone.observesDaylightTime()</source>
          <target state="translated">TimeZone.observesDaylightTime()</target>
        </trans-unit>
        <trans-unit id="a0c48fd39e019f85ce0aab5d72e0b366c8359b4d" translate="yes" xml:space="preserve">
          <source>TimeZone.setDefault()</source>
          <target state="translated">TimeZone.setDefault()</target>
        </trans-unit>
        <trans-unit id="626b6b713b4bdcd72171c0a543c3568bf7e9b7d9" translate="yes" xml:space="preserve">
          <source>TimeZone.setID()</source>
          <target state="translated">TimeZone.setID()</target>
        </trans-unit>
        <trans-unit id="1eb9d165355823bccfd58e6ad48f0bf613215d5c" translate="yes" xml:space="preserve">
          <source>TimeZone.setRawOffset()</source>
          <target state="translated">TimeZone.setRawOffset()</target>
        </trans-unit>
        <trans-unit id="05df22f63337599f3180142338eb2e7d8e3d4163" translate="yes" xml:space="preserve">
          <source>TimeZone.toZoneId()</source>
          <target state="translated">TimeZone.toZoneId()</target>
        </trans-unit>
        <trans-unit id="a64731e93346a78a35c5c19948993596c27b8261" translate="yes" xml:space="preserve">
          <source>TimeZone.useDaylightTime()</source>
          <target state="translated">TimeZone.useDaylightTime()</target>
        </trans-unit>
        <trans-unit id="16f1ab458f74bc6b63fec460f972ba78af52cb77" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider</source>
          <target state="translated">TimeZoneNameProvider</target>
        </trans-unit>
        <trans-unit id="2cb73024ec0e6f28e0a0dcc16ab5bd51ad99c21a" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider.getDisplayName()</source>
          <target state="translated">TimeZoneNameProvider.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="d4eec88fceb36fe86366dd0d4aadff59ad8c78c7" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider.getGenericDisplayName()</source>
          <target state="translated">TimeZoneNameProvider.getGenericDisplayName()</target>
        </trans-unit>
        <trans-unit id="3188114969e7bc52ee2de7d28da57b1a4e07a31e" translate="yes" xml:space="preserve">
          <source>TimeoutException</source>
          <target state="translated">TimeoutException</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="81883e3bc6886077cba970d3d858196e709beb20" translate="yes" xml:space="preserve">
          <source>Timer.addNotification()</source>
          <target state="translated">Timer.addNotification()</target>
        </trans-unit>
        <trans-unit id="4896acdf5c63a6f47b6f6e5849ec30459d3397c8" translate="yes" xml:space="preserve">
          <source>Timer.cancel()</source>
          <target state="translated">Timer.cancel()</target>
        </trans-unit>
        <trans-unit id="9bb39f74d2e3a29a5d75b90c5890df232ec8a798" translate="yes" xml:space="preserve">
          <source>Timer.getAllNotificationIDs()</source>
          <target state="translated">Timer.getAllNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="97ea8e20a2d0daef8655419765a1ff27524f3f68" translate="yes" xml:space="preserve">
          <source>Timer.getDate()</source>
          <target state="translated">Timer.getDate()</target>
        </trans-unit>
        <trans-unit id="2af097df8af116002578d5ede08febd3159da119" translate="yes" xml:space="preserve">
          <source>Timer.getFixedRate()</source>
          <target state="translated">Timer.getFixedRate()</target>
        </trans-unit>
        <trans-unit id="1df4cccd4d4a572b241065bce89ac0d714bf31c2" translate="yes" xml:space="preserve">
          <source>Timer.getNbNotifications()</source>
          <target state="translated">Timer.getNbNotifications()</target>
        </trans-unit>
        <trans-unit id="529f55d399ba2c6c3ad532c17a0040d4bcbabf41" translate="yes" xml:space="preserve">
          <source>Timer.getNbOccurences()</source>
          <target state="translated">Timer.getNbOccurences()</target>
        </trans-unit>
        <trans-unit id="337e7f895c06efc9798f62fade28c2c7bc75afb0" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationIDs()</source>
          <target state="translated">Timer.getNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="dc7343a202131d19a3692f24d648b04ebe01ace1" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationInfo()</source>
          <target state="translated">Timer.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="b7078c5612fe13ddc75429a66eef5a6cf51c7f79" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationMessage()</source>
          <target state="translated">Timer.getNotificationMessage()</target>
        </trans-unit>
        <trans-unit id="df06bf539a64e1d86be94d1f6c21668177afed89" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationType()</source>
          <target state="translated">Timer.getNotificationType()</target>
        </trans-unit>
        <trans-unit id="029175da9ac93fd9fe81c7afedd7c0a95ef244e3" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationUserData()</source>
          <target state="translated">Timer.getNotificationUserData()</target>
        </trans-unit>
        <trans-unit id="57357051a09d379f81cc559540f30392aaeb31ea" translate="yes" xml:space="preserve">
          <source>Timer.getPeriod()</source>
          <target state="translated">Timer.getPeriod()</target>
        </trans-unit>
        <trans-unit id="f78b87ef04f0bb00580e579f2fcd11ab4279366c" translate="yes" xml:space="preserve">
          <source>Timer.getSendPastNotifications()</source>
          <target state="translated">Timer.getSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="4446979211b5db6ce570fbcb22219fbb9c77aae8" translate="yes" xml:space="preserve">
          <source>Timer.isActive()</source>
          <target state="translated">Timer.isActive()</target>
        </trans-unit>
        <trans-unit id="87706d3abfd020bfef2fb744b330e323bcddc5a8" translate="yes" xml:space="preserve">
          <source>Timer.isEmpty()</source>
          <target state="translated">Timer.isEmpty()</target>
        </trans-unit>
        <trans-unit id="79df4ac63affeeebf92910d568c126ee51c99e46" translate="yes" xml:space="preserve">
          <source>Timer.postDeregister()</source>
          <target state="translated">Timer.postDeregister()</target>
        </trans-unit>
        <trans-unit id="7b5f54b95af92a706d03f83f7098c293894eca3f" translate="yes" xml:space="preserve">
          <source>Timer.postRegister()</source>
          <target state="translated">Timer.postRegister()</target>
        </trans-unit>
        <trans-unit id="447f824bc2e0b6f94331da66e273cf93caaa4ea8" translate="yes" xml:space="preserve">
          <source>Timer.preDeregister()</source>
          <target state="translated">Timer.preDeregister()</target>
        </trans-unit>
        <trans-unit id="a7234e331e0c317bc0dcc660197a94021b492954" translate="yes" xml:space="preserve">
          <source>Timer.preRegister()</source>
          <target state="translated">Timer.preRegister()</target>
        </trans-unit>
        <trans-unit id="469a71915f47f697b0dbc948b29da72d062b3076" translate="yes" xml:space="preserve">
          <source>Timer.purge()</source>
          <target state="translated">Timer.purge()</target>
        </trans-unit>
        <trans-unit id="60bbc2e3fb8c12e5c337cff4039fb8100605ec93" translate="yes" xml:space="preserve">
          <source>Timer.removeAllNotifications()</source>
          <target state="translated">Timer.removeAllNotifications()</target>
        </trans-unit>
        <trans-unit id="f6d90aa3f0b109727d4e7aff37653de419bf0d73" translate="yes" xml:space="preserve">
          <source>Timer.removeNotification()</source>
          <target state="translated">Timer.removeNotification()</target>
        </trans-unit>
        <trans-unit id="230ad18a70470f6b72de5c59f28a6bcb0da1496a" translate="yes" xml:space="preserve">
          <source>Timer.removeNotifications()</source>
          <target state="translated">Timer.removeNotifications()</target>
        </trans-unit>
        <trans-unit id="56182922191e990b74ab5db444640f9b00561de9" translate="yes" xml:space="preserve">
          <source>Timer.schedule()</source>
          <target state="translated">Timer.schedule()</target>
        </trans-unit>
        <trans-unit id="fa0c7e4a2fb9be5aeebfe683e8eb7a3969fb53ab" translate="yes" xml:space="preserve">
          <source>Timer.scheduleAtFixedRate()</source>
          <target state="translated">Timer.scheduleAtFixedRate()</target>
        </trans-unit>
        <trans-unit id="dae275a30a1987fa3697a4e86ae79c78c06b14f3" translate="yes" xml:space="preserve">
          <source>Timer.setSendPastNotifications()</source>
          <target state="translated">Timer.setSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="68fca54c892ed8115fe16a2ca295987b82732716" translate="yes" xml:space="preserve">
          <source>Timer.start()</source>
          <target state="translated">Timer.start()</target>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="translated">Timer.stop()</target>
        </trans-unit>
        <trans-unit id="4745ab42c374b6ddd2749572dda476df993af964" translate="yes" xml:space="preserve">
          <source>TimerMBean</source>
          <target state="translated">TimerMBean</target>
        </trans-unit>
        <trans-unit id="ab45a18791516a0d8b992c386c17f0a94fc001c7" translate="yes" xml:space="preserve">
          <source>TimerMBean.addNotification()</source>
          <target state="translated">TimerMBean.addNotification()</target>
        </trans-unit>
        <trans-unit id="cabf14affb9bb3d2bbc0f2c10e3cb6215380a957" translate="yes" xml:space="preserve">
          <source>TimerMBean.getAllNotificationIDs()</source>
          <target state="translated">TimerMBean.getAllNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="f2f0224a15f20d7056f6b466379a8ebc59bedc03" translate="yes" xml:space="preserve">
          <source>TimerMBean.getDate()</source>
          <target state="translated">TimerMBean.getDate()</target>
        </trans-unit>
        <trans-unit id="57ad433c1188325131ba6d348a3fc9160a47240e" translate="yes" xml:space="preserve">
          <source>TimerMBean.getFixedRate()</source>
          <target state="translated">TimerMBean.getFixedRate()</target>
        </trans-unit>
        <trans-unit id="4ea1d519219b502c595dfa0c65a4889379e40649" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNbNotifications()</source>
          <target state="translated">TimerMBean.getNbNotifications()</target>
        </trans-unit>
        <trans-unit id="4f12890f2f9cac3684436b6c5b0a1bdec58ece20" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNbOccurences()</source>
          <target state="translated">TimerMBean.getNbOccurences()</target>
        </trans-unit>
        <trans-unit id="636fbad0075124d3cabcdf71e9c9f9391391709d" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationIDs()</source>
          <target state="translated">TimerMBean.getNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="8999c51a2b18d4699c6dda98c540926c265aa3a8" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationMessage()</source>
          <target state="translated">TimerMBean.getNotificationMessage()</target>
        </trans-unit>
        <trans-unit id="6c0efd75ba28af29bcdd7915bb0d7897f6ccf178" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationType()</source>
          <target state="translated">TimerMBean.getNotificationType()</target>
        </trans-unit>
        <trans-unit id="eb83d72bf4861b48f7b70f189221cda6219db761" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationUserData()</source>
          <target state="translated">TimerMBean.getNotificationUserData()</target>
        </trans-unit>
        <trans-unit id="08c496ea5938bf04aa0cdb99f985c2885382ca33" translate="yes" xml:space="preserve">
          <source>TimerMBean.getPeriod()</source>
          <target state="translated">TimerMBean.getPeriod()</target>
        </trans-unit>
        <trans-unit id="843bcdc502f986de4d2ac74ff6b6441a45eaf612" translate="yes" xml:space="preserve">
          <source>TimerMBean.getSendPastNotifications()</source>
          <target state="translated">TimerMBean.getSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="2e80500c146295abc08326321704a668cb47dbd0" translate="yes" xml:space="preserve">
          <source>TimerMBean.isActive()</source>
          <target state="translated">TimerMBean.isActive()</target>
        </trans-unit>
        <trans-unit id="b529b73caf402e506be7a04417d98526209f1c60" translate="yes" xml:space="preserve">
          <source>TimerMBean.isEmpty()</source>
          <target state="translated">TimerMBean.isEmpty()</target>
        </trans-unit>
        <trans-unit id="31caa0e6959c22a72c11796f5c3053213f1bb25c" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeAllNotifications()</source>
          <target state="translated">TimerMBean.removeAllNotifications()</target>
        </trans-unit>
        <trans-unit id="06443e5fc2f1bcca44edf9fe88470effe45f27e0" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeNotification()</source>
          <target state="translated">TimerMBean.removeNotification()</target>
        </trans-unit>
        <trans-unit id="36084ae3698c86f6e82e72e8816e56d3e3f031e0" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeNotifications()</source>
          <target state="translated">TimerMBean.removeNotifications()</target>
        </trans-unit>
        <trans-unit id="41852f9f70d5bf0ec98d16d92088277a4daaa735" translate="yes" xml:space="preserve">
          <source>TimerMBean.setSendPastNotifications()</source>
          <target state="translated">TimerMBean.setSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="e691dc971ee42a7b95439844a5ac2c29fb25dd0a" translate="yes" xml:space="preserve">
          <source>TimerMBean.start()</source>
          <target state="translated">TimerMBean.start()</target>
        </trans-unit>
        <trans-unit id="2499248a5c4c8fea79097eec24a71eb010236fd9" translate="yes" xml:space="preserve">
          <source>TimerMBean.stop()</source>
          <target state="translated">TimerMBean.stop()</target>
        </trans-unit>
        <trans-unit id="1e50eeda781ceb9ef85731b34490acd306b91521" translate="yes" xml:space="preserve">
          <source>TimerNotification</source>
          <target state="translated">TimerNotification</target>
        </trans-unit>
        <trans-unit id="df5b02b9b175d4b10e997bf48fda3ed1c1208b04" translate="yes" xml:space="preserve">
          <source>TimerNotification.getNotificationID()</source>
          <target state="translated">TimerNotification.getNotificationID()</target>
        </trans-unit>
        <trans-unit id="db860929e828fe0641ac766efabe87b45c980daf" translate="yes" xml:space="preserve">
          <source>TimerTask</source>
          <target state="translated">TimerTask</target>
        </trans-unit>
        <trans-unit id="9d8bbad39e66d5ec2b1a732a23c2e6f13ecb6887" translate="yes" xml:space="preserve">
          <source>TimerTask.cancel()</source>
          <target state="translated">TimerTask.cancel()</target>
        </trans-unit>
        <trans-unit id="792a79da08a7e0bb591e07d3e8064893b257bd69" translate="yes" xml:space="preserve">
          <source>TimerTask.run()</source>
          <target state="translated">TimerTask.run()</target>
        </trans-unit>
        <trans-unit id="78dadea3be55e36f60d5fbec8b0b892eca60f6cb" translate="yes" xml:space="preserve">
          <source>TimerTask.scheduledExecutionTime()</source>
          <target state="translated">TimerTask.scheduledExecutionTime()</target>
        </trans-unit>
        <trans-unit id="19eabc961735d78f12fc7be906ffcb033853cf85" translate="yes" xml:space="preserve">
          <source>Timestamp</source>
          <target state="translated">Timestamp</target>
        </trans-unit>
        <trans-unit id="94cdc1fe977cba1c2d58d57a70bae983f620006e" translate="yes" xml:space="preserve">
          <source>Timestamp.equals()</source>
          <target state="translated">Timestamp.equals()</target>
        </trans-unit>
        <trans-unit id="f317887dcb89cda6b356ea42eade8c2b5e28868f" translate="yes" xml:space="preserve">
          <source>Timestamp.getSignerCertPath()</source>
          <target state="translated">Timestamp.getSignerCertPath()</target>
        </trans-unit>
        <trans-unit id="69059e7deee2c95ea43368902a077e27ccf8cf59" translate="yes" xml:space="preserve">
          <source>Timestamp.getTimestamp()</source>
          <target state="translated">Timestamp.getTimestamp()</target>
        </trans-unit>
        <trans-unit id="fa5ebbc5912e10adb01112392bbc56892ec74298" translate="yes" xml:space="preserve">
          <source>Timestamp.hashCode()</source>
          <target state="translated">Timestamp.hashCode()</target>
        </trans-unit>
        <trans-unit id="e6f9a7710e9367ff6d7245db561ce54c3724dacd" translate="yes" xml:space="preserve">
          <source>Timestamp.toString()</source>
          <target state="translated">Timestamp.toString()</target>
        </trans-unit>
        <trans-unit id="098024dc5537ca3623978ac7c0a6140ce39062b8" translate="yes" xml:space="preserve">
          <source>Timing</source>
          <target state="translated">Timing</target>
        </trans-unit>
        <trans-unit id="f7fb128ab2b2b606667607db6ec0f87259f7a1e5" translate="yes" xml:space="preserve">
          <source>Titlecase</source>
          <target state="translated">Titlecase</target>
        </trans-unit>
        <trans-unit id="ae79ea1e9c6391a9ed83a2e18a031b835feec0c9" translate="yes" xml:space="preserve">
          <source>To</source>
          <target state="translated">To</target>
        </trans-unit>
        <trans-unit id="5f14923c5999c9e1a81cbb61d2e7edb34d0b3030" translate="yes" xml:space="preserve">
          <source>To &quot;run&quot; as a particular &lt;code&gt;Principal&lt;/code&gt;, code invokes the &lt;code&gt;Subject.doAs(subject, ...)&lt;/code&gt; method. After invoking that method, the code runs as all the Principals associated with the specified &lt;code&gt;Subject&lt;/code&gt;. Note that this &lt;code&gt;Policy&lt;/code&gt; (and the Permissions granted in this &lt;code&gt;Policy&lt;/code&gt;) only become effective after the call to &lt;code&gt;Subject.doAs&lt;/code&gt; has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57af1372f17114a8bcc2db8d5516bec385ce0653" translate="yes" xml:space="preserve">
          <source>To a user of your program, however, both of these sequences should be treated as the same &quot;user-level&quot; character &quot;A with acute accent&quot;. When you are searching or comparing text, you must ensure that these two sequences are treated as equivalent. In addition, you must handle characters with more than one accent. Sometimes the order of a character's combining accents is significant, while in other cases accent sequences in different orders are really equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e64d08ea8166d722ce0f8580516aea74cb7327d" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of parsing the available provider-configuration files and instantiating providers must be done by the iterator itself. Its &lt;a href=&quot;iterator#hasNext--&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#next--&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; methods can therefore throw a &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; if a provider-configuration file violates the specified format, or if it names a provider class that cannot be found and instantiated, or if the result of instantiating the class is not assignable to the service type, or if any other kind of exception or error is thrown as the next provider is located and instantiated. To write robust code it is only necessary to catch &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; when using a service iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e906cc18369f863dd230411fdde5ac28d756e1c8" translate="yes" xml:space="preserve">
          <source>To add a new attribute node with a qualified name and namespace URI, use the &lt;code&gt;setAttributeNodeNS&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0901ef1364b0bc7003aefcc673f8da9f739ccaea" translate="yes" xml:space="preserve">
          <source>To address this problem, and to simplify the design of clients providing multiple docs to a Print Job, every Print Service proxy that supports multidoc print jobs is required to access a MultiDoc object using the interleaved pattern. That is, given a MultiDoc object, the print service proxy will call &lt;a href=&quot;multidoc#getDoc--&quot;&gt;&lt;code&gt;getDoc()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains the current Doc object. The print service proxy will then obtain the current doc's print data, not proceeding until all the print data is obtained or an unrecoverable error occurs. If it is able to continue, the print service proxy will then call &lt;a href=&quot;multidoc#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains either the next MultiDoc object or an indication that there are no more. An implementation of interface MultiDoc can assume the print service proxy will follow this interleaved pattern; for any other pattern of usage, the MultiDoc implementation's behavior is unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a153e650f00cf6ae0dd2b8b108821031836e76a" translate="yes" xml:space="preserve">
          <source>To allow for concurrent handling of new connections, the completion handler is not invoked directly by the initiating thread when a new connection is accepted immediately (see &lt;a href=&quot;asynchronouschannelgroup#threading&quot;&gt;Threading&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0149ec9554c159ccbe058966b05df35f3701f32" translate="yes" xml:space="preserve">
          <source>To allow subtypes of non-serializable classes to be serialized, the subtype may assume responsibility for saving and restoring the state of the supertype's public, protected, and (if accessible) package fields. The subtype may assume this responsibility only if the class it extends has an accessible no-arg constructor to initialize the class's state. It is an error to declare a class Serializable if this is not the case. The error will be detected at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b02950d208e8aeb726121c4232fee22a90ca25" translate="yes" xml:space="preserve">
          <source>To allow the Relation Service to maintain the consistency (in case of MBean unregistration) and to be able to perform queries, this method must be called when a role is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098cffcdc8ae98f9e73fb6b3bc4c693ece84d5b2" translate="yes" xml:space="preserve">
          <source>To assign a specific &lt;code&gt;ProtectionDomain&lt;/code&gt; to the class, use the &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt;&lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method that takes a &lt;code&gt;ProtectionDomain&lt;/code&gt; as one of its arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7963056aeb1e3fe7d72c198290f32b36c2c30f8b" translate="yes" xml:space="preserve">
          <source>To attempt to retain the values of the fields, use &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d51c18a01968c9e81085024407b1e88d5039d3" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the documentation for &lt;a href=&quot;double#valueOf-java.lang.String-&quot;&gt;&lt;code&gt;Double.valueOf&lt;/code&gt;&lt;/a&gt; lists a regular expression which can be used to screen the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5563f0afb09a3844b6d08118ec1a1c5fc780d991" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the regular expression below can be used to screen the input string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668d902875e5660f744a686581109ccac6b67276" translate="yes" xml:space="preserve">
          <source>To avoid collisions between MBeans supplied by different vendors, a useful convention is to begin the domain name with the reverse DNS name of the organization that specifies the MBeans, followed by a period and a string whose interpretation is determined by that organization. For example, MBeans specified by &lt;code&gt;example.com&lt;/code&gt; would have domains such as &lt;code&gt;com.example.MyDomain&lt;/code&gt;. This is essentially the same convention as for Java-language package names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11ede55a71c6248b71e81342253042ee5847dea" translate="yes" xml:space="preserve">
          <source>To avoid infinite recursion, if the specified array contains itself as an element, or contains an indirect reference to itself through one or more levels of arrays, the self-reference is converted to the string &lt;code&gt;&quot;[...]&quot;&lt;/code&gt;. For example, an array containing only a reference to itself would be rendered as &lt;code&gt;&quot;[[...]]&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9f7d7071e28faad12ca6077ede6939f3bbcb22" translate="yes" xml:space="preserve">
          <source>To avoid race conditions, calls to &lt;code&gt;setTarget&lt;/code&gt; and &lt;code&gt;syncAll&lt;/code&gt; should generally be performed under some sort of mutual exclusion. Note that reader threads may observe an updated target as early as the &lt;code&gt;setTarget&lt;/code&gt; call that install the value (and before the &lt;code&gt;syncAll&lt;/code&gt; that confirms the value). On the other hand, reader threads may observe previous versions of the target until the &lt;code&gt;syncAll&lt;/code&gt; call returns (and after the &lt;code&gt;setTarget&lt;/code&gt; that attempts to convey the updated version).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2f4c173618b481634504b07869653ce32189fe" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the class file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aceb19707e74a7f2174ca9ab49548d039860ecb" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the source file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd35ab6a8c06d360cbb65355b85d9fbf1af619f6" translate="yes" xml:space="preserve">
          <source>To be added as a relation, the MBean must conform to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c929685592eb7dd72839b0b7ddca865cf01e746f" translate="yes" xml:space="preserve">
          <source>To be handled as a relation, the &lt;code&gt;RelationSupport&lt;/code&gt; object has to be added to the Relation Service using the Relation Service method addRelation().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a748dd0e04f95aff698fcdef2145934fa8ff1739" translate="yes" xml:space="preserve">
          <source>To be implemented by a any class acting as a notification filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bea40cd4dd3d35083217eb1e5827a09e2816a62" translate="yes" xml:space="preserve">
          <source>To be implemented by a any class acting as a notification filter. It allows a registered notification listener to filter the notifications of interest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa1f94f9b6a662f59e0397dd2d57a3b1cf7527b" translate="yes" xml:space="preserve">
          <source>To be robust when running in different tool implementations, an annotation processor should have the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88dbdb72a8dc5710ba81907c1d505d6f93d8a007" translate="yes" xml:space="preserve">
          <source>To be useful across a wide range of contexts, this class provides many adjustable parameters and extensibility hooks. However, programmers are urged to use the more convenient &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; factory methods &lt;a href=&quot;executors#newCachedThreadPool--&quot;&gt;&lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt;&lt;/a&gt; (unbounded thread pool, with automatic thread reclamation), &lt;a href=&quot;executors#newFixedThreadPool-int-&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt; (fixed size thread pool) and &lt;a href=&quot;executors#newSingleThreadExecutor--&quot;&gt;&lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt;&lt;/a&gt; (single background thread), that preconfigure settings for the most common usage scenarios. Otherwise, use the following guide when manually configuring and tuning this class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af1c11afc8cfc4b7a8797ee836b3f9f4ad2b42e" translate="yes" xml:space="preserve">
          <source>To be useful, an MBean must be registered in an &lt;em&gt;MBean Server&lt;/em&gt;. An MBean Server is a repository of MBeans. Usually the only access to the MBeans is through the MBean Server. In other words, code no longer accesses the Java object implementing the MBean directly, but instead accesses the MBean by name through the MBean Server. Each MBean has a unique name within the MBean Server, defined by the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d65dc6887ac1dd59675099ed4d4af3e8a59cf9" translate="yes" xml:space="preserve">
          <source>To be valid, the local date-time must not be in a gap and the offset must match one of the valid offsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1dda8f60be6ccdd68366fa5b3526dbaaf5e344" translate="yes" xml:space="preserve">
          <source>To cancel the remapping reload instrument &lt;code&gt;from&lt;/code&gt; by invoking one of &lt;a href=&quot;synthesizer#loadInstrument-javax.sound.midi.Instrument-&quot;&gt;&lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;synthesizer#loadInstruments-javax.sound.midi.Soundbank-javax.sound.midi.Patch:A-&quot;&gt;&lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;synthesizer#loadAllInstruments-javax.sound.midi.Soundbank-&quot;&gt;&lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be8336b7115a72362232acff67cab5d31ad64ab" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;chronozoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba22c3c91be7bb4a1b614e70312b432e314453d5" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;zoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fec9c95a4da51399394703581f182ba52a20925" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;offsetdatetime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8364aad1736c04d486c11667371207fe4ea657" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;offsettime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d53b327a76d23201fb03d673f3a5e3ba6d80dc" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;chronozoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bb8e9dce97fedd17ba93b900abfb561816c1a4" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;zoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c019e479f28fa520e4b25c1389f58c638560ba3a" translate="yes" xml:space="preserve">
          <source>To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4f722fe3026ef77704c6c722d1dd4b2c998af4" translate="yes" xml:space="preserve">
          <source>To compare the underlying local time of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, use &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245c4d91674938b9243301b17cdfbec11707bbd6" translate="yes" xml:space="preserve">
          <source>To compare two nanoTime values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db54c8f8a02c8d006edd754b51f4c637374eadf8" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest input stream's &lt;a href=&quot;digestinputstream#read--&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca822c9d032e884c819b5572500df5caeb9a899" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest output stream's &lt;a href=&quot;digestoutputstream#write-int-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e85b1ac5bb1ea53e984d6388f99052847f6c694" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;SimpleTimeZone&lt;/code&gt; with a daylight saving time schedule, the schedule can be described with a set of rules, &lt;em&gt;start-rule&lt;/em&gt; and &lt;em&gt;end-rule&lt;/em&gt;. A day when daylight saving time starts or ends is specified by a combination of &lt;em&gt;month&lt;/em&gt;, &lt;em&gt;day-of-month&lt;/em&gt;, and &lt;em&gt;day-of-week&lt;/em&gt; values. The &lt;em&gt;month&lt;/em&gt; value is represented by a Calendar &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field value, such as &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;Calendar.MARCH&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;day-of-week&lt;/em&gt; value is represented by a Calendar &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; value, such as &lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt;. The meanings of value combinations are as follows.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
