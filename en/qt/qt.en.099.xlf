<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="21e655f88ad50102898d4750ec7272112b932b4b" translate="yes" xml:space="preserve">
          <source>An integer specifying a DM_PAPER entry on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314c7a9ffa50fda725138fcad8157ff0c50b2d5b" translate="yes" xml:space="preserve">
          <source>An integer specifying l {&lt;a href=&quot;qvirtualkeyboardselectionlistmodel#DictionaryType-enum&quot;&gt;QVirtualKeyboardSelectionListModel::DictionaryType&lt;/a&gt;}{dictionary type}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964803a7279d3dd4790d3c4d0154446f1ac3be74" translate="yes" xml:space="preserve">
          <source>An integer specifying the length of the word the completion part expressed as the number of characters counted from the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116373607b78a877c30c8706652400d2d96ad51b" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of copies to print.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb203851c2dffd4adcac100b64ad409c910ea43" translate="yes" xml:space="preserve">
          <source>An interface for camera capture related settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdc68f1d2bcf2b7f998c23d397744dd64fe4654" translate="yes" xml:space="preserve">
          <source>An interface for camera capture related settings. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741461979bb52c230ee8eda408848797f1ad4f85" translate="yes" xml:space="preserve">
          <source>An interface for capturing camera images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12decb3a0dc9eadad629ebdcdfdda5ec81f20768" translate="yes" xml:space="preserve">
          <source>An interface for capturing camera images. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eede7dc22f0bd7bbbbb4c9cc5bdd1847d35f64e" translate="yes" xml:space="preserve">
          <source>An interface for exposure related camera settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a15887cfe40f9916d8b13959a1c76b0f42a7e3" translate="yes" xml:space="preserve">
          <source>An interface for exposure related camera settings. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a3c9d3d986dc6c66c6d5fe913f65ca1c7a36d6" translate="yes" xml:space="preserve">
          <source>An interface for flash related camera settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ee5ea1aed3e658b2d21eaaa0f9ad001e91966e" translate="yes" xml:space="preserve">
          <source>An interface for flash related camera settings. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d983e494e5f6c1d7815a7625d3edba3cc3e05d8" translate="yes" xml:space="preserve">
          <source>An interface for focus related camera settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b4ba87c8c4affdd746343598a203f9a8ae1935" translate="yes" xml:space="preserve">
          <source>An interface for focus related camera settings. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cb37141e0c6cd8642b79798e456dc52cc0505e" translate="yes" xml:space="preserve">
          <source>An interface providing access to some of the graphics API specific internals of the scenegraph. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f4a76bd63bf4b171a61b5bbd60ef70fd177eb2" translate="yes" xml:space="preserve">
          <source>An intermediate class (not registered as a QML type) for any type of handler which requires and acts upon a specific number of multiple touchpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e69a9e81a4dbe5f1f074b0d7bc7eb3a70ced63" translate="yes" xml:space="preserve">
          <source>An intermediate class (not registered as a QML type) for handlers which allow filtering based on device type, pointer type, or keyboard modifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a81fde8ea2e2b0afbab66e01754d29e1a8741a" translate="yes" xml:space="preserve">
          <source>An intermediate class (not registered as a QML type) for the most common handlers: those which expect only a single point. wantsPointerEvent() will choose the first point which is inside the &lt;a href=&quot;qmake-variable-reference#target&quot;&gt;target&lt;/a&gt; item, and return true as long as the event contains that point. Override handleEventPoint() to implement a single-point handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11350c17057820713e63daaa55baf066983dc370" translate="yes" xml:space="preserve">
          <source>An internal URL for accessing the currently displayed web site icon, also known as favicon or shortcut icon. The icon is already downloaded and stored by the Qt WebEngine's favicon manager. This read-only URL corresponds to the image used within a mobile browser application to represent a bookmarked page on the device's home screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c51c37dcfc1e6041273d07e5f71ef4e21dac27" translate="yes" xml:space="preserve">
          <source>An internal error occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1520588b995d2804a7031f70208dceaad851eb" translate="yes" xml:space="preserve">
          <source>An internal object type declaration allows a QML document to be registered as a type which becomes available only to the other QML documents contained in the directory import. The internal type will not be made available to clients who import the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaf96133139239530eb263cfab7854f6847d13a" translate="yes" xml:space="preserve">
          <source>An interval is specified by an inclusive &lt;a href=&quot;qmediatimeinterval#start&quot;&gt;start&lt;/a&gt;() and &lt;a href=&quot;qmediatimeinterval#end&quot;&gt;end&lt;/a&gt;() time. These must be set in the constructor, as this is an immutable class. The specific units of time represented by the class have not been defined - it is suitable for any times which can be represented by a signed 64 bit integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28add5bb9e803ddc729e6cede37d5ccf1c938366" translate="yes" xml:space="preserve">
          <source>An introduction to GUI programming, showing how to put together a simple yet fully-functioning application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd25f786be5ecacc79981bca5349a68bd35ff9d8" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; object will have no attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ae96c1d18084c0b6c98f901dd453fc30b74a5f" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is returned if field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d41ec2826ec6c7cce706ae22b16e5efacfaa530" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fdc3ca395c2df05d76ec0ba5552eb4a1469ed4" translate="yes" xml:space="preserve">
          <source>An invalid button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db02995b32528414742a2db40e2d8f3e6cef4dd8" translate="yes" xml:space="preserve">
          <source>An invalid characteristic object is not associated with any service (default-constructed) or the associated service is no longer valid due to a disconnect from the underlying Bluetooth Low Energy device, for example. Once the object is invalid it cannot become valid anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27303d80db27284ab136bcde82904921c78b2a2a" translate="yes" xml:space="preserve">
          <source>An invalid coordinate. A coordinate is invalid if its latitude or longitude values are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308d87c2543cf235cdae1a5b792eeeb892ea82c3" translate="yes" xml:space="preserve">
          <source>An invalid descriptor instance is not associated with any service (default-constructed) or the associated service is no longer valid due to a disconnect from the underlying Bluetooth Low Energy device, for example. Once the object is invalid it cannot become valid anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6199af2419fcbac7e8421eaf2bda05657ff15ad" translate="yes" xml:space="preserve">
          <source>An invalid format as created by the default constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17aa5df0e22445dbdbe8ac9a48e3a104222e52e0" translate="yes" xml:space="preserve">
          <source>An invalid frame has no video buffer associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b945ca21c1cc4f6d44d2e6692e867fdb12f82f00" translate="yes" xml:space="preserve">
          <source>An invalid network configuration always returns the &lt;a href=&quot;qnetworkconfiguration#BearerType-enum&quot;&gt;BearerUnknown&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4c6ca18707a27695038b7c7f83b0add6cb2aae" translate="yes" xml:space="preserve">
          <source>An invalid object can be checked with &lt;a href=&quot;qelapsedtimer#isValid&quot;&gt;isValid&lt;/a&gt;(). Calculations of timer elapsed since invalid data are undefined and will likely produce bizarre results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62cff2e6322adf86275798d709f614740a8d2d8" translate="yes" xml:space="preserve">
          <source>An invalid time is represented as -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3a43310789158fed8d6ae7fbd386120f7c3ab5" translate="yes" xml:space="preserve">
          <source>An invalid token or sequence of tokens was encountered that does not conform with the syntax of the language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a8be710e768e89000a808461bfaad13df94087" translate="yes" xml:space="preserve">
          <source>An irrecoverable error occurred while the server was attempting to perform the requested action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdd6ab98c95e17b569727934d983202398e5c39" translate="yes" xml:space="preserve">
          <source>An item becomes a mouse grabber when it receives and accepts a mouse press event, and it stays the mouse grabber until either of the following events occur:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c808631459a8527de560ed7cd7d2bf6b4bd166" translate="yes" xml:space="preserve">
          <source>An item can be removed from the persistedItems group by setting the &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt;.&lt;a href=&quot;qml-qtqml-models-delegatemodel#inPersistedItems-attached-prop&quot;&gt;inPersistedItems&lt;/a&gt; property to false. If the item is not referenced by a view at that time it will be destroyed. Adding an item to this group will not create a new instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad1180f8231717c865f705022be4eaf52c1afb1" translate="yes" xml:space="preserve">
          <source>An item can determine its index within the model via the &lt;a href=&quot;qml-qtqml-models-objectmodel#index-attached-prop&quot;&gt;index&lt;/a&gt; attached property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d41e0666fb9fd5a84049339518cf45d0af8af7" translate="yes" xml:space="preserve">
          <source>An item can have several roles, giving out different data depending on the role specified. The items in our model only have one role, &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt;, so we return the data for items irrespective of the role specified. However, we could reuse the data we provide for the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt; in other roles, such as the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;ToolTipRole&lt;/a&gt; that views can use to display information about items in a tooltip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e49fdea685d0d6d36a1cffff48b25f45394cef5" translate="yes" xml:space="preserve">
          <source>An item can only be active if the scene is active. An item is active if it is, or is a descendent of, an active panel. Items in non-active panels are not active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7f3b84482bdce3dc25c514fac66b57c9f2315f" translate="yes" xml:space="preserve">
          <source>An item can only filter events for other items in the same scene. Also, an item cannot filter its own events; instead, you can reimplement &lt;a href=&quot;qgraphicsitem#sceneEvent&quot;&gt;sceneEvent&lt;/a&gt;() directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e4d9984ae99d97349bd43a6dcf3bd4f5a59753" translate="yes" xml:space="preserve">
          <source>An item has been added to the selection in an item view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27c29a83da67b9037b11f411ab422a7e4fcaa9d" translate="yes" xml:space="preserve">
          <source>An item has been removed from an item view selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86a510fef9a11000d87098c3e240eca2c563d92" translate="yes" xml:space="preserve">
          <source>An item in a list of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d172651542e7d96e00d238a1ef72b7a96cb022cd" translate="yes" xml:space="preserve">
          <source>An item in a menu or menu bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466b94ef149e74408bcd5e7b01681f8767580e29" translate="yes" xml:space="preserve">
          <source>An item in a tree structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2531f0b7a65ba624a1bd3278fbfb8f7ad5327c41" translate="yes" xml:space="preserve">
          <source>An item inside an item view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b80bf64dc6827dc47383af7a4323e9303344c0" translate="yes" xml:space="preserve">
          <source>An item is activated when it is selected while the popup is open, causing the popup to close (and &lt;a href=&quot;qml-qtquick-controls2-combobox#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; to change), or while the popup is closed and the combo box is navigated via keyboard, causing the &lt;a href=&quot;qml-qtquick-controls2-combobox#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; to change. The &lt;a href=&quot;qml-qtquick-controls2-combobox#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; property is set to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7612630d43611323423dfe05e0fe36951968dd" translate="yes" xml:space="preserve">
          <source>An item loaded with a Loader element may be released by resetting the &quot;source&quot; or &quot;sourceComponent&quot; property of the Loader, while other items may be explicitly released by calling destroy() on them. In some cases, it may be necessary to leave the item active, in which case it should be made invisible at the very least.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52905253efd34c40d53f6d9b8320555711b9ccbf" translate="yes" xml:space="preserve">
          <source>An item may not be visible to its ancestors even if &lt;a href=&quot;qgraphicsitem#isVisible&quot;&gt;isVisible&lt;/a&gt;() is true. It may also be visible to its ancestors even if &lt;a href=&quot;qgraphicsitem#isVisible&quot;&gt;isVisible&lt;/a&gt;() is false. If any ancestor is hidden, the item itself will be implicitly hidden, in which case this function will return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe487d8f5b816f4dac59df51d9636e08ab86e349" translate="yes" xml:space="preserve">
          <source>An item of a &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;, a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;, a &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;, or a &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1e18449504ce0e55036d9c6cbcb3973ab3872b" translate="yes" xml:space="preserve">
          <source>An item pushed onto the &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; can be either an Item, a URL, a string containing a URL, or a Component. To push it, assign it to a property &quot;item&quot; inside a property list, and pass it as an argument to &lt;a href=&quot;qml-qtquick-controls-stackview#push-method&quot;&gt;push&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6092fcd2958cf32a19663b257722753634a3d20e" translate="yes" xml:space="preserve">
          <source>An item selection can be constructed and initialized to contain a range of items from an existing model. The following example constructs a selection that contains a range of items from the given &lt;code&gt;model&lt;/code&gt;, beginning at the &lt;code&gt;topLeft&lt;/code&gt;, and ending at the &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e154fb02b4da7caea11f48256af2e47f8150a8d" translate="yes" xml:space="preserve">
          <source>An item with 0 opacity will still receive mouse events. To stop mouse events, set the visible property of the item to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fffe789044684ca0559e8af995d3a4be59d7c8" translate="yes" xml:space="preserve">
          <source>An item's children are stacked on top of the parent, and sibling items are stacked by insertion order (i.e., in the same order that they were either added to the scene, or added to the same parent). If you add item A, and then B, then B will be on top of A. If you then add C, the items' stacking order will be A, then B, then C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6370e52b0c95b9dace64858dfed2987d9c937c9e" translate="yes" xml:space="preserve">
          <source>An item's children can be sorted by calling &lt;a href=&quot;qstandarditem#sortChildren&quot;&gt;sortChildren&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9169d7a0691d2b44fc56559fdeb7e417aff73b" translate="yes" xml:space="preserve">
          <source>An item's lifecycle in the &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; can have the following transitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab07a138472528072a9ea0d5484d3154f53ca267" translate="yes" xml:space="preserve">
          <source>An item's visual parent can be changed at any time by setting its &lt;a href=&quot;qml-qtquick-item#parent-prop&quot;&gt;parent&lt;/a&gt; property. Thus, an item's visual parent may not necessarily be the same as its object parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad8ecbb2bf6e4f333853ae981b7c73664311781" translate="yes" xml:space="preserve">
          <source>An iterator can be constructed and used to access the fragments within a text block in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9b9f872b438ef66f20fe120224069256e8a66e" translate="yes" xml:space="preserve">
          <source>An iterator over the non-overlapping rectangles that make up the region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b875332e7891e13c4704f01a86d153d031cb6c" translate="yes" xml:space="preserve">
          <source>An namespace declaration consists of a &lt;a href=&quot;qxmlstreamnamespacedeclaration#prefix&quot;&gt;prefix&lt;/a&gt;() and a &lt;a href=&quot;qxmlstreamnamespacedeclaration#namespaceUri&quot;&gt;namespaceUri&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82314bd83d6c73d141a5d002758a8e321597da4" translate="yes" xml:space="preserve">
          <source>An notation declaration consists of a &lt;a href=&quot;qxmlstreamnotationdeclaration#name&quot;&gt;name&lt;/a&gt;(), a &lt;a href=&quot;qxmlstreamnotationdeclaration#systemId&quot;&gt;systemId&lt;/a&gt;(), and a &lt;a href=&quot;qxmlstreamnotationdeclaration#publicId&quot;&gt;publicId&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4f6c9cf3f9b4c0662decd97f34f1a369fc1f44" translate="yes" xml:space="preserve">
          <source>An object (or embed) tag for a plugin or a resource that a plugin requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eba6efd09e753468d7d1ba673617d8ffc4e2b5a" translate="yes" xml:space="preserve">
          <source>An object can be notified through a &lt;a href=&quot;#signal-handler-attributes&quot;&gt;signal handler&lt;/a&gt; whenever a particular signal is emitted. A signal handler is declared with the syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4407eb261fa63d93fb7296e923cd0162de35d8b" translate="yes" xml:space="preserve">
          <source>An object can be referred to by its &lt;code&gt;id&lt;/code&gt; from anywhere within the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a75aa6fe581e364c2f34d28d67d3e0223c020a" translate="yes" xml:space="preserve">
          <source>An object can have one or more properties. Some properties are associated with the canvas (e.g., x, y, width, height, and opacity) while others may be data specific to that type (e.g., the &quot;text&quot; property of the &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729acc90c01e1acb37054f47f22426446acf69a8" translate="yes" xml:space="preserve">
          <source>An object constructed in this way can only be used with context and other contexts that share with it. Use &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html#initializeOpenGLFunctions&quot;&gt;initializeOpenGLFunctions()&lt;/a&gt; to change the object's context association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e81a92788232bd1f3f06e0ecdd645a468884fa5" translate="yes" xml:space="preserve">
          <source>An object declaration consists of the name of its object type, followed by a set of curly braces. All attributes and child objects are then declared within these braces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd28c95a9b472773b78d8f770c3967da9885b9b3" translate="yes" xml:space="preserve">
          <source>An object declaration may define a read-only property using the &lt;code&gt;readonly&lt;/code&gt; keyword, with the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce24908e4bc2b235137d595dce8b7564489bdd2f" translate="yes" xml:space="preserve">
          <source>An object definition can have a single</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba74b0fac83db895e59e7a48905708f0aa7e68e" translate="yes" xml:space="preserve">
          <source>An object gets a child (&lt;a href=&quot;qchildevent&quot;&gt;QChildEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1029f369d1945c021ef322c246d6cd5f0514d28c" translate="yes" xml:space="preserve">
          <source>An object has gained keyboard focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725c0c073438a14db6dbc95ad56ced6665eb111f" translate="yes" xml:space="preserve">
          <source>An object instance can be used to specify a model with a single object type. The properties of the object are provided as roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70084fba63d2619d4f26d707b9f612794eeb4133" translate="yes" xml:space="preserve">
          <source>An object is a Controller to any other object connected to a controlling signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b61fcaf3588ecf5b0ebc6b23087e61e6eb0f837" translate="yes" xml:space="preserve">
          <source>An object is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483d5d4ab21379f181c8aa78682fe89fb89eabdb" translate="yes" xml:space="preserve">
          <source>An object is displayed; for example, with &lt;a href=&quot;qwidget#show&quot;&gt;QWidget::show&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd49578fca5d11b93fc043e1ad4a5a9da302ec0" translate="yes" xml:space="preserve">
          <source>An object is hidden; for example, with &lt;a href=&quot;qwidget#hide&quot;&gt;QWidget::hide&lt;/a&gt;(). Any children the object that is hidden has do not send this event. It is not sent when an object is hidden as it is being obcured by others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db591eb1495df1870c5f205a9310ba8293dc278" translate="yes" xml:space="preserve">
          <source>An object is not correctly terminated with a closing curly bracket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393173404d3b9010473c4c711e992d496f4e85f8" translate="yes" xml:space="preserve">
          <source>An object list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b462e723426cbfb284f3eaf206ad512b6b83113f" translate="yes" xml:space="preserve">
          <source>An object loses a child (&lt;a href=&quot;qchildevent&quot;&gt;QChildEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79084498b480f0ef41764e9126b6bc6670b06ec5" translate="yes" xml:space="preserve">
          <source>An object name (restricted set of valid characters).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2157b8f73593307f579fb7c63c75ff2f1837b6a" translate="yes" xml:space="preserve">
          <source>An object of this class can be passed to &lt;a href=&quot;qopenglcontext#versionFunctions-1&quot;&gt;QOpenGLContext::versionFunctions&lt;/a&gt;() to request a functions object for a specific version and profile of OpenGL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c3db73af18bc1f3773ac2c6df52da3fe80b717" translate="yes" xml:space="preserve">
          <source>An object of this class contains a set of translations from a source language to a target language. &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; provides functions to look up translations in a translation file. Translation files are created using &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlinguist-index.html&quot;&gt;Qt Linguist&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337f3e707ed569f8fc6a84cb753395945dd89db0" translate="yes" xml:space="preserve">
          <source>An object of this class provides a descriptor to be added to a &lt;a href=&quot;qlowenergycharacteristicdata&quot;&gt;QLowEnergyCharacteristicData&lt;/a&gt; object via &lt;a href=&quot;qlowenergycharacteristicdata#addDescriptor&quot;&gt;QLowEnergyCharacteristicData::addDescriptor&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b2a295bfc7438f5b2823026eda68a56fa30033" translate="yes" xml:space="preserve">
          <source>An object of this class provides the parameters that &lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt; will use to generate DTLS cookies. They include a cryptographic hash algorithm and a secret.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9903b4561bbe7f470778311ee35bb693f026bf6" translate="yes" xml:space="preserve">
          <source>An object of this class, obtained from &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;, provides access to certain global user interface parameters of the current platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e100a18dd93bf52a3a45adf3ae88455a7b76e5a" translate="yes" xml:space="preserve">
          <source>An object of type Layout is attached to children of the layout to provide layout specific information about the item. The properties of the attached object influence how the layout will arrange the items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3160e01d497143d02366418f8dda2b0a1e3c4c" translate="yes" xml:space="preserve">
          <source>An object of type Positioner is attached to the top-level child item within a Column, Row, Flow or Grid. It provides properties that allow a child item to determine where it exists within the layout of its parent Column, Row, Flow or Grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f2e22c9f59e67294a8b731e8106c38dbc72751" translate="yes" xml:space="preserve">
          <source>An object that can contain layered children, e.g. in a stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1228c584061a475900393ab2515d2c2d00af88fe" translate="yes" xml:space="preserve">
          <source>An object that displays a graphical representation of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078117c4c88f13ba548ba523baa6ddf072d1642c" translate="yes" xml:space="preserve">
          <source>An object that displays an animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0364c54978bbe84c58d6119d9af5823c009ddf0" translate="yes" xml:space="preserve">
          <source>An object that displays graphics that the user can interact with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55c292a1a2ddaaec3724a9d8fcb617ce929222b" translate="yes" xml:space="preserve">
          <source>An object that displays help in a separate, short lived window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1901255e1d484f2478f41f01f34d8be8085adf0f" translate="yes" xml:space="preserve">
          <source>An object that is used to alert the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e0073caef1635d3eb10ce2821132dc13b5c8ca" translate="yes" xml:space="preserve">
          <source>An object that provids interactive help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ddbbbc7808bba80c0cfa594913307102213d85" translate="yes" xml:space="preserve">
          <source>An object that represents a border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa4dbc85531df2f239590b6d73eb96caa578a0f" translate="yes" xml:space="preserve">
          <source>An object that represents a dial or knob.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3d031294dd6673d81f5f8a490e7492fc5b09d7" translate="yes" xml:space="preserve">
          <source>An object that represents a logical grouping of other objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84388711947ba8ce54b897342acb5df57ade4909" translate="yes" xml:space="preserve">
          <source>An object that represents a mathematical equation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1bc368c3e63dbe5b9db3a7cf419fefa8f70762" translate="yes" xml:space="preserve">
          <source>An object that represents a notification (e.g. in the system tray). This role only has an effect on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbeca9917fe663cbd788a958751e4096db021cc" translate="yes" xml:space="preserve">
          <source>An object that represents a sound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c755d442b2404d818c7150bfa77a50817bdc5a" translate="yes" xml:space="preserve">
          <source>An object that represents an option that can be checked or unchecked. Some options provide a &quot;mixed&quot; state, e.g. neither checked nor unchecked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2527f03dabbc0986cd185da76356a1d2f6b2b8" translate="yes" xml:space="preserve">
          <source>An object that represents an option that is mutually exclusive with other options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe8983ad3556fe6e0a4a82feb3b91dd2c5e7f3e" translate="yes" xml:space="preserve">
          <source>An object that represents the mouse cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa5402d16138bb654d5c24bb11614b7a0b3ec34" translate="yes" xml:space="preserve">
          <source>An object that represents the system caret (text cursor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e52a7ef367a5f62e3d88f487f4f81a21859adad" translate="yes" xml:space="preserve">
          <source>An object type declaration allows a QML document to be exposed with the given &lt;code&gt;&amp;lt;TypeName&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5f59efa3be2523fb5891ccb963e9275a9ca745" translate="yes" xml:space="preserve">
          <source>An object was expected but couldn't be found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02c0c62cc076f7e27541f3d66a809497c97892c" translate="yes" xml:space="preserve">
          <source>An object which has a &lt;a href=&quot;qtqml-syntax-propertybinding#&quot;&gt;property binding&lt;/a&gt; is known as the binding's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764794b44328bd7ec4e8d303de14cb035ed91045" translate="yes" xml:space="preserve">
          <source>An object's &lt;a href=&quot;qaccessibleinterface#state&quot;&gt;state&lt;/a&gt;() property is a combination of different state flags and can describe both how the object's state differs from a &quot;normal&quot; state, e.g. it might be unavailable, and also how it behaves, e.g. it might be selectable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf54f7df50e66b066e381d2eb03ab4d9088dba9a" translate="yes" xml:space="preserve">
          <source>An object's location on the screen has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ac1c4c310a125c573bbeec762d25e288438ffc" translate="yes" xml:space="preserve">
          <source>An object's parent object changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d09388a06ab7f5dc3ee22052bc4bdfdfdb3c96" translate="yes" xml:space="preserve">
          <source>An object's property can be assigned a static value which stays constant until it is explicitly assigned a new value. However, to make the fullest use of QML and its built-in support for dynamic object behaviors, most QML objects use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1636cefc14bfe934d48b2c53efb45b731671a72" translate="yes" xml:space="preserve">
          <source>An object, which receives the image from QRenderCapture::requestCapture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38231de89a21247f5944bb5a2214529c2fa736f" translate="yes" xml:space="preserve">
          <source>An object. Use &lt;a href=&quot;qjsonvalue#toObject-1&quot;&gt;toObject&lt;/a&gt;() to convert to a &lt;a href=&quot;qjsonobject&quot;&gt;QJsonObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab34993e6f5f90b44e762672a189b72165ce33c" translate="yes" xml:space="preserve">
          <source>An off-the-record profile leaves no record on the local machine, and has no persistent data or cache. Thus, the HTTP cache can only be in memory and the cookies can only be non-persistent. Trying to change these settings will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdb76a170430e34de7edf156df8856388875cae" translate="yes" xml:space="preserve">
          <source>An offset in seconds from Coordinated Universal Time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600e4ec570e934e0e0a62934c7f3d01e259b1e3e" translate="yes" xml:space="preserve">
          <source>An opacity effect renders the source with an opacity. This effect is useful for making the source semi-transparent, similar to a fade-in/fade-out sequence. The opacity can be modified using the &lt;a href=&quot;qgraphicsopacityeffect#opacity-prop&quot;&gt;setOpacity&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0681e3e10e0e7d55741e2d9a1a6b91b2ba8a1c" translate="yes" xml:space="preserve">
          <source>An opacity mask allows you apply opacity to portions of an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9767b2cc5a6b25b0666ef4c1390f0d74b87acd" translate="yes" xml:space="preserve">
          <source>An open session is created by calling &lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession::open&lt;/a&gt;() and closed via &lt;a href=&quot;qnetworksession#close&quot;&gt;QNetworkSession::close&lt;/a&gt;(), respectively. If the session is &lt;a href=&quot;qnetworksession#State-enum&quot;&gt;disconnected&lt;/a&gt; at the time of the &lt;a href=&quot;qnetworksession#open&quot;&gt;open()&lt;/a&gt; call the underlying interface is started; otherwise only the reference counter against the global session is incremented. The opposite behavior can be observed when using &lt;a href=&quot;qnetworksession#close&quot;&gt;close()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c748ca94dcb744633f16738fba3fe9474a09ed22" translate="yes" xml:space="preserve">
          <source>An operand or argument is incompatible with the type expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d256eb5f4c3d6d0b2b9f05c9cb6f2bea7d0df60" translate="yes" xml:space="preserve">
          <source>An operation that completes in constant time is said to be wait-free. Such operations are not implemented using locks or loops of any kind. For atomic operations that are always supported, and that are wait-free, Qt defines the Q_ATOMIC_INT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc180540e4f31ea7753846942d874ae64bf646ad" translate="yes" xml:space="preserve">
          <source>An operation that completes in constant time is said to be wait-free. Such operations are not implemented using locks or loops of any kind. For atomic operations that are always supported, and that are wait-free, Qt defines the Q_ATOMIC_POINTER_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea142d2d909783437aeb1e37d28fe1c36816ebb" translate="yes" xml:space="preserve">
          <source>An operation was attempted in a state that did not permit it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e935d7a8b3fdcee54c544d3814d40432b89bc1" translate="yes" xml:space="preserve">
          <source>An operation was attempted while the service was not ready. An example might be the attempt to write to the service while it was not yet in the &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;ServiceDiscovered&lt;/a&gt;&lt;a href=&quot;qlowenergyservice#state&quot;&gt;state&lt;/a&gt;() or the service is invalid due to a loss of connection to the peripheral device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af27fe3d990517f7c14ee3ca7de8c33c80c91a8" translate="yes" xml:space="preserve">
          <source>An operation was attempted while the socket was in a state that did not permit it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba13b7233ca9a46bb45d71cb5293bb657546d54" translate="yes" xml:space="preserve">
          <source>An operation with default transitions (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744e6126fe5b0d482c0c8e77f305f7e27f14849d" translate="yes" xml:space="preserve">
          <source>An operation with pop transitions (since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d927e3028e6780df31eb4f72c63b5770eb124e" translate="yes" xml:space="preserve">
          <source>An operation with push transitions (since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8473a1bdccd3cbbc617c943738a477010a90b71" translate="yes" xml:space="preserve">
          <source>An operation with replace transitions (since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028d1e4cf14d756ba92cb2aaf57f296d135ba8e4" translate="yes" xml:space="preserve">
          <source>An out-of-process executable server is generated from a &lt;code&gt;.pro&lt;/code&gt; file like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c354bf5f06b638009bd90d2db894a1584638c12" translate="yes" xml:space="preserve">
          <source>An output iterator is an iterator that can be used for writing data sequentially to a container or to some output stream. It must provide the following operators: unary &lt;code&gt;*&lt;/code&gt; for writing a value (i.e., &lt;code&gt;*it = val&lt;/code&gt;) and prefix &lt;code&gt;++&lt;/code&gt; for advancing to the next item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8280a16e32b5b6d1f5d513e43fbf8e933e03e7da" translate="yes" xml:space="preserve">
          <source>An overlay icon indicates change in the state of an application, whereas a progress indicator shows how time-consuming tasks are progressing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb4c25a89b5a3a6023d91921209163d376c2f04" translate="yes" xml:space="preserve">
          <source>An overridden property is resolved according to the scope in which it is referenced. Inside the scope of the Person component, or from an external scope that refers to an instance of the Person component, &lt;code&gt;title&lt;/code&gt; resolves to the property declared inside Person.qml. The &lt;code&gt;fullName&lt;/code&gt; function will refer to the &lt;code&gt;title&lt;/code&gt; property declared inside Person.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff80b9d1399ee83bd9c4b3b9d1f4bffa31f95a70" translate="yes" xml:space="preserve">
          <source>An uncategorized audio/video device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122c9de8ae5ebc68eaeff04db3ddb8adc189667a" translate="yes" xml:space="preserve">
          <source>An uncategorized computer device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafc81fd4cd0a6814f69b52003474eb371e0b9ed" translate="yes" xml:space="preserve">
          <source>An uncategorized health device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bdc1e02e8e574b3fcc3f80e7ae84b6d0964b0b" translate="yes" xml:space="preserve">
          <source>An uncategorized imaging device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f59fe70e42b600e4e1514946252d9d46f1c76e" translate="yes" xml:space="preserve">
          <source>An uncategorized miscellaneous device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edb6067006dc693affdfbfbde2825c1c3fcbc52" translate="yes" xml:space="preserve">
          <source>An uncategorized peripheral device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efca25153769379d071e175ac7ba89bf90da1c4e" translate="yes" xml:space="preserve">
          <source>An uncategorized phone device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e9f09af69387ed56fbddf4aad20d19592ccb2d" translate="yes" xml:space="preserve">
          <source>An uncategorized toy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63716b0b7785571bd07db4934f82553cc5d3b7e" translate="yes" xml:space="preserve">
          <source>An uncategorized wearable device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9b40627aca349b0f6dd9d633db6a7f2fed860c" translate="yes" xml:space="preserve">
          <source>An unchecked &lt;a href=&quot;qml-qtquick-extras-togglebutton&quot;&gt;ToggleButton&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c41753666b6c4fe43856b7fe442d0fb5e668ee4" translate="yes" xml:space="preserve">
          <source>An uncreatable base type that contains position information for an object in a 3D scene. The object is considered to be a single point in the coordinate space without dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa169ccc5b50b8adf5cd0c2659fa487c1f80cdb1" translate="yes" xml:space="preserve">
          <source>An uncreatable type that is used to define the top, bottom, left, and right margins. The margins are used for drawing the title, axes, and legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b41515a1efd67fcbc01ed1e2f8bdb1f8437ecc" translate="yes" xml:space="preserve">
          <source>An undefined value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff53f9a553536b488fa30d4d3d6eabbaf98852d" translate="yes" xml:space="preserve">
          <source>An undo stack maintains a stack of commands that have been applied to a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23148337da3e5c3bea22c7e662604970cea75e6f" translate="yes" xml:space="preserve">
          <source>An unidentified error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5445ea7c7029ca1fec14017e2c142935f8ed08" translate="yes" xml:space="preserve">
          <source>An unidentified proprietary target tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20415fba6b776879d106a443a89c7ea2e7a2d653" translate="yes" xml:space="preserve">
          <source>An unknown device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bda4c6fb36e7ac4deb2677516f906c4f07c16d" translate="yes" xml:space="preserve">
          <source>An unknown error has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0babf0f879bcc13df72a215754b15f2cff8513d" translate="yes" xml:space="preserve">
          <source>An unknown error occurred and no further details are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616cddfa3cb8d2cf050d1e16bbba85d288ef147a" translate="yes" xml:space="preserve">
          <source>An unknown error occurred when interacting with the service. This value was introduced by Qt 5.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285cc7fd9a74af5944d7f446e0c93db31c7c26f9" translate="yes" xml:space="preserve">
          <source>An unknown error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952e3e7219d0a68ed0f391d99c64ca934f8090d5" translate="yes" xml:space="preserve">
          <source>An unknown error occurred. If you get this value after calling &lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;(), it is most likely caused by a bug in &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a8de7e131b5d266ad6986019df507f4ec7b58f" translate="yes" xml:space="preserve">
          <source>An unknown error occurred. If you get this value after calling &lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;(), it is most likely caused by a bug in &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845d097a74ef46895d4999552cc4fd3296e3aa71" translate="yes" xml:space="preserve">
          <source>An unknown error occurred. This is the default return value of &lt;a href=&quot;qprocess#error&quot;&gt;error&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766d3fe4d981b0f52db1b0c79e70ae8b6f605b0e" translate="yes" xml:space="preserve">
          <source>An unknown graphics API is in use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087462a54d848fdf840cfe0799ad3678936d8f7d" translate="yes" xml:space="preserve">
          <source>An unknown or unrecognized extended type, represented by its tag (a &lt;a href=&quot;qtcborcommon#QCborTag-enum&quot;&gt;QCborTag&lt;/a&gt;) and the tagged value (a &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc96649ccce8298456e3f799ce46f29dd8423e91" translate="yes" xml:space="preserve">
          <source>An unknown or unsupported operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e516bbecdb7a6c28e6b11342b56eb902bd8eaa3" translate="yes" xml:space="preserve">
          <source>An unknown parameter was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e8a2fd09d6a617f9c9bebc9a1e88f512c8533c" translate="yes" xml:space="preserve">
          <source>An unresolved item can be bound to the data model using the &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup#resolve-method&quot;&gt;DelegateModelGroup::resolve()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d936d758b1800756f6b96642d7a145721a981b6" translate="yes" xml:space="preserve">
          <source>An unscaled image is displayed using an Image. The &lt;a href=&quot;qml-qtquick-borderimage#border-prop&quot;&gt;border&lt;/a&gt; property is used to determine the parts of the image that will lie inside the unscaled corner areas and the parts that will be stretched horizontally and vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35a84ba4989b64b3132a64724a196d50c9a30b4" translate="yes" xml:space="preserve">
          <source>An unspecified error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1847a7b528ba6feabab2f046cd00efee839542d9" translate="yes" xml:space="preserve">
          <source>An updates enabled widget receives paint events and has a system background; a disabled widget does not. This also implies that calling &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() and &lt;a href=&quot;qwidget#repaint&quot;&gt;repaint&lt;/a&gt;() has no effect if updates are disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45872df77270b6bc751772a4186ccfe3c8e4b927" translate="yes" xml:space="preserve">
          <source>Analog Clock Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c0bbe4ad6499ed0b970f8db79e11a209a3d4e3" translate="yes" xml:space="preserve">
          <source>AnalogAxisInput</source>
          <target state="translated">AnalogAxisInput</target>
        </trans-unit>
        <trans-unit id="ea1fcb63d458d536d7d0e7bebd6583964899d245" translate="yes" xml:space="preserve">
          <source>AnalogAxisInput (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e5d56d89ab8c8f670c54c1b038f899e7eb8d97" translate="yes" xml:space="preserve">
          <source>AnalogAxisInput QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6eb2a9f14ac0be6ccd4bc0e87946580bfd8f6fb" translate="yes" xml:space="preserve">
          <source>AnalogAxisInput.axis</source>
          <target state="translated">AnalogAxisInput.axis</target>
        </trans-unit>
        <trans-unit id="dea5e481bdf1cd2be5ee03dbfb319ae1d998bfeb" translate="yes" xml:space="preserve">
          <source>Analogy</source>
          <target state="translated">Analogy</target>
        </trans-unit>
        <trans-unit id="c848cf416c24ba3556fdf18a8517c9fe0260c8c9" translate="yes" xml:space="preserve">
          <source>Analyzing Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afa6e94f9a94b9e32e910e7d5724e718c974135" translate="yes" xml:space="preserve">
          <source>Anatomy of Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d16c26aafdb910a6de98644a2f82c86329498c7" translate="yes" xml:space="preserve">
          <source>Ancestor</source>
          <target state="translated">Ancestor</target>
        </trans-unit>
        <trans-unit id="40fc19b4f055bf3d21dc3e01d8a69a5dc27ce0a9" translate="yes" xml:space="preserve">
          <source>Anchor Margins and Offsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8930d64bee09fd8ba1faa71372aec202e18555e6" translate="yes" xml:space="preserve">
          <source>Anchor or link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0381dc37d657123d26b8a1fd6afc0772a2922c08" translate="yes" xml:space="preserve">
          <source>Anchor rectangle is often used by various text editing controls like text prediction popups for following the text selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a219b32cd0470d9d0beb8507756d9d6265cb2c23" translate="yes" xml:space="preserve">
          <source>AnchorAnimation</source>
          <target state="translated">AnchorAnimation</target>
        </trans-unit>
        <trans-unit id="c4125effa19fb48f32fc701ed4e82d96cca1a644" translate="yes" xml:space="preserve">
          <source>AnchorAnimation (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826cb91ed48053c4030936c5047dda2a19013460" translate="yes" xml:space="preserve">
          <source>AnchorAnimation QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b87684a069f38d25bce4898c04604cfc08448df" translate="yes" xml:space="preserve">
          <source>AnchorAnimation.duration</source>
          <target state="translated">AnchorAnimation.duration</target>
        </trans-unit>
        <trans-unit id="afdd4db769dc0522b25a8e29a8bcf4697da3da81" translate="yes" xml:space="preserve">
          <source>AnchorAnimation.groupeasing.type</source>
          <target state="translated">AnchorAnimation.groupeasing.type</target>
        </trans-unit>
        <trans-unit id="6c804d3768dca74aade023e4f9b3c03ac7867bbc" translate="yes" xml:space="preserve">
          <source>AnchorAnimation.targets</source>
          <target state="translated">AnchorAnimation.targets</target>
        </trans-unit>
        <trans-unit id="80d206a00a98db759a4948871449393b287f38c4" translate="yes" xml:space="preserve">
          <source>AnchorChanges</source>
          <target state="translated">AnchorChanges</target>
        </trans-unit>
        <trans-unit id="11db4b1179105ffa754bd003b58de0b039d34c09" translate="yes" xml:space="preserve">
          <source>AnchorChanges (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4aeb86a3c0d84221078b295ae00f28020ac6b42" translate="yes" xml:space="preserve">
          <source>AnchorChanges QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498368580607afe841700c73ac8342d692672f5a" translate="yes" xml:space="preserve">
          <source>AnchorChanges.groupanchors.left</source>
          <target state="translated">AnchorChanges.groupanchors.left</target>
        </trans-unit>
        <trans-unit id="f4af3adbb74069762546f943ff76c12a2681ef23" translate="yes" xml:space="preserve">
          <source>AnchorChanges.target</source>
          <target state="translated">AnchorChanges.target</target>
        </trans-unit>
        <trans-unit id="88ba33434836b28654c906a9bbf6844ffb36c13c" translate="yes" xml:space="preserve">
          <source>Anchors are always set up between edges of an item, where the &quot;center&quot; is also considered to be an edge. Consider the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4c15f05bf7a041d88fba8d61f38bed5aa56965" translate="yes" xml:space="preserve">
          <source>Anchors can also be changed imperatively within JavaScript. However, these changes should be carefully ordered, or they may produce unexpected outcomes. The following example illustrates the issue:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf27c830a6e70632a12df2973d384942bf0accf9" translate="yes" xml:space="preserve">
          <source>Anchors provide a way to position an item by specifying its relationship with other items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef6b9b29bb53a95927c9cff1ce31d5715c970fd" translate="yes" xml:space="preserve">
          <source>Anchors two or four edges of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a77366196f7ea491cf22483fe53f595c34c3da" translate="yes" xml:space="preserve">
          <source>And a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa0cc7fc3190d5213754a7187344404cfee72fb" translate="yes" xml:space="preserve">
          <source>And from another device you create another node:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed58b8f98c37efec076c24626236528faad20a24" translate="yes" xml:space="preserve">
          <source>And here is its output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc59c70dd95358c80b419fe5a4fc75a0ba2973de" translate="yes" xml:space="preserve">
          <source>And here is the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; that selects all the attributes from the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50099739f6cb0d8fbd929f6460216d042df3462c" translate="yes" xml:space="preserve">
          <source>And here's how to install it on two widgets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b82e14772e898162726a51b5b59ba5a3ef1558a" translate="yes" xml:space="preserve">
          <source>And in QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b496a827eb581465b651f4e7c8c963f38b3595" translate="yes" xml:space="preserve">
          <source>And include these macros in your configuration file to prevent QDoc from doing some escaping that doesn't validate in XML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da9a5d2b0f028adc56d700f73e3f41961815e37" translate="yes" xml:space="preserve">
          <source>And like any other C++ loop construct, you can use braces around the body of a &lt;code&gt;foreach&lt;/code&gt; loop, and you can use &lt;code&gt;break&lt;/code&gt; to leave the loop:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71202bddcb525debc8df6eb8ba7095037779384" translate="yes" xml:space="preserve">
          <source>And on the replica side:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb27a9da5e1fc018565e95a5379fd09c718f50e7" translate="yes" xml:space="preserve">
          <source>And the following snippet will ignore a regular expression matching a number of possible warning messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc7b0490a56d1b748351eb125ef802aa4f8e6c5" translate="yes" xml:space="preserve">
          <source>And the function's entry in &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;'s list of public functions will be rendered as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42ab45035394ca6d7194f97fc71a8e46cd63ade" translate="yes" xml:space="preserve">
          <source>And the resulting RenderViews are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd4e921940656403c4ddcaf7e0fc0520c72036e" translate="yes" xml:space="preserve">
          <source>And then how to use it from QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25eedf5e8767aa175abe965fee3cd3b7c5d0188d" translate="yes" xml:space="preserve">
          <source>And then, in the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590ea79b2f7ba6d259d8a3cdd2aabbb2471a545b" translate="yes" xml:space="preserve">
          <source>And this is what those few lines of code produce:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7923fd8adc5c7d6e6ec9e2319f5bcebb562add" translate="yes" xml:space="preserve">
          <source>And this query returns the next to last &lt;code&gt;&amp;lt;recipe&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37f033cfca3fe4d5d1ff925c6c2fecfc91dfe92" translate="yes" xml:space="preserve">
          <source>And when the request is done, we can use the reply to show the suggestions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1928f95c598b9e69462fcb512625cf8e28923044" translate="yes" xml:space="preserve">
          <source>Android</source>
          <target state="translated">Android</target>
        </trans-unit>
        <trans-unit id="3bb6ece37e66ad28ed6a2b2ac32a7f043bb8516e" translate="yes" xml:space="preserve">
          <source>Android - Supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c69430d48300df062c07b405105bfc3cc3c6ee2" translate="yes" xml:space="preserve">
          <source>Android 5, 6, 7, 8 (API Level 21)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab9f83ba0f66984ae1201bfbe09d1b31d9c697a" translate="yes" xml:space="preserve">
          <source>Android Browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3e1a2e9031233c93cb4065fede845cd1122d80" translate="yes" xml:space="preserve">
          <source>Android Development in Qt Creator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86ea8b5664ab0f727090fcf59669276bec3b25c" translate="yes" xml:space="preserve">
          <source>Android GNU C++ run-time licensing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157b701cc525b645de4cc7dd414511c1ad8268f4" translate="yes" xml:space="preserve">
          <source>Android SDK package. Use the following command from the Windows command prompt to install the extras package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0feb0fc177f3f661dca9c30981b3a7267922487" translate="yes" xml:space="preserve">
          <source>Android Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a7697f846d0b87c36dd26132cd11db30dea750" translate="yes" xml:space="preserve">
          <source>Android Style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0983a53cd0c16f64c046d87c5b99242c4078d39b" translate="yes" xml:space="preserve">
          <source>Android Themes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8529bbe9c22f4d1c95f2f1787ee2ea93597b2ca5" translate="yes" xml:space="preserve">
          <source>Android builds of QML applications importing &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlmodule.html&quot;&gt;QtDataVisualization&lt;/a&gt; also require &quot;QT += datavisualization&quot; in the pro file. This is because Qt Data Visualization QML plugin has a dependency to Qt Data Visualization C++ library, which Qt Creator doesn't automatically add to the deployment package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa6c27fb15d3fd19080cb728f89da02550e7188" translate="yes" xml:space="preserve">
          <source>Android only indirectly permits the adjustment of this parameter set. The connection parameters are separated into three categories (high, low &amp;amp; balanced priority). Each category implies a pre-configured set of values for &lt;a href=&quot;qlowenergyconnectionparameters#minimumInterval&quot;&gt;QLowEnergyConnectionParameters::minimumInterval&lt;/a&gt;(), &lt;a href=&quot;qlowenergyconnectionparameters#maximumInterval&quot;&gt;QLowEnergyConnectionParameters::maximumInterval&lt;/a&gt;() and &lt;a href=&quot;qlowenergyconnectionparameters#latency&quot;&gt;QLowEnergyConnectionParameters::latency&lt;/a&gt;(). Although the connection request is an asynchronous operation, Android does not provide a callback stating the result of the request. This is an acknowledged Android bug. Due to this bug Android does not emit the &lt;a href=&quot;qlowenergycontroller#connectionUpdated&quot;&gt;connectionUpdated&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a642e1ec21630b56869f0f3129c3b1086e85e4b6" translate="yes" xml:space="preserve">
          <source>Android only indirectly permits the adjustment of this parameter set. The platform separates the connection parameters into three categories (hight, low &amp;amp; balanced priority). Each category implies a predefined set of values for &lt;a href=&quot;qlowenergyconnectionparameters#minimumInterval&quot;&gt;minimumInterval&lt;/a&gt;(), &lt;a href=&quot;qlowenergyconnectionparameters#maximumInterval&quot;&gt;maximumInterval&lt;/a&gt;() and &lt;a href=&quot;qlowenergyconnectionparameters#latency&quot;&gt;latency&lt;/a&gt;(). Additionally, the value ranges of each category can vary from one Android device to the next. Qt uses the &lt;a href=&quot;qlowenergyconnectionparameters#minimumInterval&quot;&gt;minimumInterval&lt;/a&gt;() to determine the target category as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ec04d0e0b1ca4081bb9ecf3009710be94ea1be" translate="yes" xml:space="preserve">
          <source>Android only support &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;RFCOMM&lt;/a&gt; based sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31960f038bba7d8d2a5fbae7e6fa2e9fe3d5e29c" translate="yes" xml:space="preserve">
          <source>Android only supports two levels of security (secure and non-secure). If this flag is set to &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::NoSecurity&lt;/a&gt; the server object will not employ any authentication or encryption. Any other security flag combination will trigger a secure Bluetooth connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f61e8c2a7ed3516cae6ad744350cbd8afbbe2b" translate="yes" xml:space="preserve">
          <source>Android only supports two levels of security (secure and non-secure). If this flag is set to &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::NoSecurity&lt;/a&gt; the socket object will not employ any authentication or encryption. Any other security flag combination will trigger a secure Bluetooth connection. This flag is set to &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Secure&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396ee0e484686a76f3b36c0a5c16916612d1a432" translate="yes" xml:space="preserve">
          <source>Android priority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938502428dd0e9053a384f71947a9d753b825968" translate="yes" xml:space="preserve">
          <source>Android support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f206b08c65febfd52f80bd2059ffdf1af6d90986" translate="yes" xml:space="preserve">
          <source>Android, the registration of NDEF message handlers is done via the &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/manifest-intro.html&quot;&gt;Android manifest file&lt;/a&gt;. This means the application has to provide an AndroidManifest.xml file with proper &lt;a href=&quot;http://developer.android.com/guide/topics/connectivity/nfc/nfc.html#manifest&quot;&gt;NFC intent-filter.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17cbdb4db1263196ffb1948cb14cc72183579351" translate="yes" xml:space="preserve">
          <source>AndroidManifest.xml</source>
          <target state="translated">AndroidManifest.xml</target>
        </trans-unit>
        <trans-unit id="f8a1eabff32bdacd823e02553aad728cfec1e8ff" translate="yes" xml:space="preserve">
          <source>AndroidPurchaseData: The purchase data returned by the Google Play store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3bf3c62cdffac7f57572662009a1af79e12e11" translate="yes" xml:space="preserve">
          <source>AndroidSignature: The signature of the transaction, as given by the private key for the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29afe5b8315ce8108c59c7dc7cd342225211b12a" translate="yes" xml:space="preserve">
          <source>Angle is specified by degrees clockwise from straight right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b1737f0d9c4bac25c53a40382f63014e5ceadb" translate="yes" xml:space="preserve">
          <source>Angle of acceleration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef3b896db7c0aacdd859e590013b9688626a541" translate="yes" xml:space="preserve">
          <source>AngleDirection (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81df1a00b54a94b8b556b656151188fd3723cbe2" translate="yes" xml:space="preserve">
          <source>AngleDirection QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdf1307cd00bb0ff2f671b697fdf3ad5ace27bc" translate="yes" xml:space="preserve">
          <source>AngleDirection.angle</source>
          <target state="translated">AngleDirection.angle</target>
        </trans-unit>
        <trans-unit id="cb5fb939b6f3bd615283d620cb6b14586f060d7d" translate="yes" xml:space="preserve">
          <source>AngleDirection.angleVariation</source>
          <target state="translated">AngleDirection.angleVariation</target>
        </trans-unit>
        <trans-unit id="abb1105e048b0d614d860f985593f810c6255de0" translate="yes" xml:space="preserve">
          <source>AngleDirection.magnitude</source>
          <target state="translated">AngleDirection.magnitude</target>
        </trans-unit>
        <trans-unit id="d6cd4955aaa4e82c18e82cf17a710edd1dcecb99" translate="yes" xml:space="preserve">
          <source>AngleDirection.magnitudeVariation</source>
          <target state="translated">AngleDirection.magnitudeVariation</target>
        </trans-unit>
        <trans-unit id="81203277ca2f67b89d2760eaf3f3643e977e7d5a" translate="yes" xml:space="preserve">
          <source>Angles are reported clockwise, with zero degrees at the 3 o'clock position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e183d08317139fa353a45d5de05d6ce0b0d436" translate="yes" xml:space="preserve">
          <source>Angles are specified in degrees. Clockwise arcs can be specified using negative angles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89211c9cc727eb0c105a89068ebb61027e4f671" translate="yes" xml:space="preserve">
          <source>Animate a click when up or down is pressed in a spin box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66245238f50d8ab61d78afcc41f627edad06c076" translate="yes" xml:space="preserve">
          <source>Animated Images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890e7b5e7421dff553d5e88c3e2a5ad2b08dcbd4" translate="yes" xml:space="preserve">
          <source>Animated SVG drawings are supported, and can be controlled with a simple collection of functions and properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6102825458ccde4e98fc8720db0ed3a569e08e4d" translate="yes" xml:space="preserve">
          <source>AnimatedImage</source>
          <target state="translated">AnimatedImage</target>
        </trans-unit>
        <trans-unit id="035c4240b26c9a9a5e3eba4390bddb046f5c45a0" translate="yes" xml:space="preserve">
          <source>AnimatedImage (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c988da55e9c013b2fc7fe081ec7e9cd8ec67b2" translate="yes" xml:space="preserve">
          <source>AnimatedImage QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9b00fe79d0180a116ca6cd75212fa50544b8ec" translate="yes" xml:space="preserve">
          <source>AnimatedImage.currentFrame</source>
          <target state="translated">AnimatedImage.currentFrame</target>
        </trans-unit>
        <trans-unit id="fa243e966caf651ebf720a849cbb3a540f3ac9a5" translate="yes" xml:space="preserve">
          <source>AnimatedImage.paused</source>
          <target state="translated">AnimatedImage.paused</target>
        </trans-unit>
        <trans-unit id="63e37fd3d48b7ad80d2df50cc6c840c243e96a1a" translate="yes" xml:space="preserve">
          <source>AnimatedImage.playing</source>
          <target state="translated">AnimatedImage.playing</target>
        </trans-unit>
        <trans-unit id="491ab20dd1f51e0fc4f1d3c7c1d79f61eefe7d33" translate="yes" xml:space="preserve">
          <source>AnimatedImage.source</source>
          <target state="translated">AnimatedImage.source</target>
        </trans-unit>
        <trans-unit id="7fdbf8b64240bbec303d60fd98f7001fcd9669c5" translate="yes" xml:space="preserve">
          <source>AnimatedImage.speed</source>
          <target state="translated">AnimatedImage.speed</target>
        </trans-unit>
        <trans-unit id="889cd457d1d73ed251f0b8823a816e3f2d9a6908" translate="yes" xml:space="preserve">
          <source>AnimatedSprite (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1868c5405d698153db92444559cc43b8df17d60b" translate="yes" xml:space="preserve">
          <source>AnimatedSprite QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f1066ae539d8d63d177e0ffaa1b369cea4dd3c" translate="yes" xml:space="preserve">
          <source>AnimatedSprite Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc57de3d65bdb83fbbf5f5a4acc4ebefe641006" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.advance()</source>
          <target state="translated">AnimatedSprite.advance()</target>
        </trans-unit>
        <trans-unit id="a63c6708c5076641c047cdff20297c0bea177199" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.currentFrame</source>
          <target state="translated">AnimatedSprite.currentFrame</target>
        </trans-unit>
        <trans-unit id="2e85fd1b7766e25c842f02cfd8da0967ec2e850e" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.finished()</source>
          <target state="translated">AnimatedSprite.finished()</target>
        </trans-unit>
        <trans-unit id="15c1c4d05bfbe1e5e438d1bfa2cb945b9236c3bb" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.frameCount</source>
          <target state="translated">AnimatedSprite.frameCount</target>
        </trans-unit>
        <trans-unit id="197176cfd5fb5fe61b0214e99aba869ef83e2125" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.frameDuration</source>
          <target state="translated">AnimatedSprite.frameDuration</target>
        </trans-unit>
        <trans-unit id="379ea1411e28b33881d8edc89ab7c39d3728528f" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.frameHeight</source>
          <target state="translated">AnimatedSprite.frameHeight</target>
        </trans-unit>
        <trans-unit id="64099f2de53b0d4556c1946f76e666e88fb4fad4" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.frameRate</source>
          <target state="translated">AnimatedSprite.frameRate</target>
        </trans-unit>
        <trans-unit id="857cdacfc7f9c14541ad9a26dfb46230ac9a5e2c" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.frameSync</source>
          <target state="translated">AnimatedSprite.frameSync</target>
        </trans-unit>
        <trans-unit id="e067d1dd19b29332dea9a3ef26e2ca0f67af2232" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.frameWidth</source>
          <target state="translated">AnimatedSprite.frameWidth</target>
        </trans-unit>
        <trans-unit id="eb3c5b3274fcd19d72d75853e656b20f2ab2c6c5" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.frameX</source>
          <target state="translated">AnimatedSprite.frameX</target>
        </trans-unit>
        <trans-unit id="bde860773d322329562fa143aeaa71e51fb83fbf" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.frameY</source>
          <target state="translated">AnimatedSprite.frameY</target>
        </trans-unit>
        <trans-unit id="92b9330a1a74e2f94786c0f758cc0cb53ec62393" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.interpolate</source>
          <target state="translated">AnimatedSprite.interpolate</target>
        </trans-unit>
        <trans-unit id="4809d03c3680f96c0015cd85a2ef8d9b7c4300fc" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.loops</source>
          <target state="translated">AnimatedSprite.loops</target>
        </trans-unit>
        <trans-unit id="d11164144e8ba5736f6bd75f3a66733bba5c8b22" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.pause()</source>
          <target state="translated">AnimatedSprite.pause()</target>
        </trans-unit>
        <trans-unit id="df9e5e3dc1bd4740bfc25834a023a0c42426b9f5" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.paused</source>
          <target state="translated">AnimatedSprite.paused</target>
        </trans-unit>
        <trans-unit id="88241ff6aec417e4581d1bae13c0f2ebeaaf1a34" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.restart()</source>
          <target state="translated">AnimatedSprite.restart()</target>
        </trans-unit>
        <trans-unit id="1ab2987df6367807beac3b4fe2802a014344d5a7" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.resume()</source>
          <target state="translated">AnimatedSprite.resume()</target>
        </trans-unit>
        <trans-unit id="0bf947fb3c7d7460f5f897e064f6487049355d25" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.reverse</source>
          <target state="translated">AnimatedSprite.reverse</target>
        </trans-unit>
        <trans-unit id="0f1c295bb93553020c1ea6935d91f69691105627" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.running</source>
          <target state="translated">AnimatedSprite.running</target>
        </trans-unit>
        <trans-unit id="b57154d98ec2d645d8eea224edd994c22d5d9b65" translate="yes" xml:space="preserve">
          <source>AnimatedSprite.source</source>
          <target state="translated">AnimatedSprite.source</target>
        </trans-unit>
        <trans-unit id="aad5102ac387941291ec131ce14f4543fe03c9a9" translate="yes" xml:space="preserve">
          <source>Animates Qt properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e3703900de00b100c9e4ff8cc0cfc4de95d89c" translate="yes" xml:space="preserve">
          <source>Animates an item along a path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd95f5958b5fbb729c22b579fe2edc4958baa6d" translate="yes" xml:space="preserve">
          <source>Animates an item along a path. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2875219143ba9a512e3e8b83160bc6530d9c3b" translate="yes" xml:space="preserve">
          <source>Animates changes in QVector3d values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938d00b83134249386e67effbbafecd92b20ae0a" translate="yes" xml:space="preserve">
          <source>Animates changes in QVector3d values. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6dcf167c3c680d11eb615f180701a2419d5657" translate="yes" xml:space="preserve">
          <source>Animates changes in anchor values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7526c084a8a8b99f3b4aa1c7d95783082a42bd" translate="yes" xml:space="preserve">
          <source>Animates changes in anchor values. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca172927f8c47815caf92593e617618e241003f" translate="yes" xml:space="preserve">
          <source>Animates changes in color values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c207644c6f339c623b14bc9335ca269ba143c3e8" translate="yes" xml:space="preserve">
          <source>Animates changes in color values. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1066a21d96196835f324fcb86bb62faa9a6ab970" translate="yes" xml:space="preserve">
          <source>Animates changes in parent values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dff44410fd7671c29b90a93ff8d80d60ec42f5b" translate="yes" xml:space="preserve">
          <source>Animates changes in parent values. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca45b1a7bf402eddc84a6698a0c58274034581e" translate="yes" xml:space="preserve">
          <source>Animates changes in property values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf302af7cd3fb40930cd41227a39853bd7e9e54" translate="yes" xml:space="preserve">
          <source>Animates changes in property values. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66579586c98974cbbd07076b509430eb4d50a91b" translate="yes" xml:space="preserve">
          <source>Animates changes in qreal-type values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25687702c68e692d7d476c2273d3cffde6bc221f" translate="yes" xml:space="preserve">
          <source>Animates changes in qreal-type values. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128f6398bd01cc053180891b4eee8673144940df" translate="yes" xml:space="preserve">
          <source>Animates changes in rotation values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a708aebc411ad0c7e5733f1a96bbc27a8c68ba2c" translate="yes" xml:space="preserve">
          <source>Animates changes in rotation values. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfd81177de56891bd1e5b64142085af104e7d30" translate="yes" xml:space="preserve">
          <source>Animating Items to Intermediate Positions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b6fa60abc3c96148e0c76bf0fcccef126965ba" translate="yes" xml:space="preserve">
          <source>Animating Property Assignments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89aca45e0901e94a12aea0509d5124a1c21a211d" translate="yes" xml:space="preserve">
          <source>Animating State Changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb37870dcb96dfc6c5cb3c7782c05510fd933916" translate="yes" xml:space="preserve">
          <source>Animating is false when keyboard is fully open or closed. When &lt;code&gt;animating&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;visibility&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; keyboard is being opened. When &lt;code&gt;animating&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;visibility&lt;/code&gt; is false keyboard is being closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62afd21e88769f01ba1c9330803baad57564d6e9" translate="yes" xml:space="preserve">
          <source>Animation</source>
          <target state="translated">Animation</target>
        </trans-unit>
        <trans-unit id="ede7a17cf2ebcb29af3d0281d6c99e102464efd3" translate="yes" xml:space="preserve">
          <source>Animation (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9389db0578177537f2cc26f4e274bc2768b894" translate="yes" xml:space="preserve">
          <source>Animation Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab2bbca0673d19e39c55895978633d4e8702b56" translate="yes" xml:space="preserve">
          <source>Animation Framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2fdac62670cfb20a0d7c30d2a69736bea1e3fc" translate="yes" xml:space="preserve">
          <source>Animation Playback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1b7249cb2ee6ed8cc8a64c92d6955d4b7ff0f8" translate="yes" xml:space="preserve">
          <source>Animation QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a963ffc67ad48c020bf122f2390081cd16fad0d" translate="yes" xml:space="preserve">
          <source>Animation and Transitions Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0ebdada2d5e2b5ac61118248b494b03810c367" translate="yes" xml:space="preserve">
          <source>Animation and Transitions in Qt Quick</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6158fa37602e8dcda753ac035b83a048cdb91c1b" translate="yes" xml:space="preserve">
          <source>Animation blend trees are used with a &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt; to dynamically blend a set of animation clips together. The way in which the blending of animation clips is performed is controlled by the structure of the blend tree and the properties on the nodes it contains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493336d0f4167001c36bc47e6e9ec675616f615e" translate="yes" xml:space="preserve">
          <source>Animation blend trees are used with a &lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt; to dynamically blend a set of animation clips together. The way in which the blending of animation clips is performed is controlled by the structure of the blend tree and the properties on the nodes it contains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e50838e780f06e37dd25df70d5ef6937bda110" translate="yes" xml:space="preserve">
          <source>Animation clips are also used as the leaf node values in animation blend trees:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f41ee77d2be94d5ae15c61f4a2e6b40b08961a7" translate="yes" xml:space="preserve">
          <source>Animation is disabled in the chart. This is the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f81fb23ba5ff39131d148826e34ea7f6d9dacc" translate="yes" xml:space="preserve">
          <source>Animation.alwaysRunToEnd</source>
          <target state="translated">Animation.alwaysRunToEnd</target>
        </trans-unit>
        <trans-unit id="fb1d320d99243c93e02f279f4d904028f5788ce2" translate="yes" xml:space="preserve">
          <source>Animation.complete()</source>
          <target state="translated">Animation.complete()</target>
        </trans-unit>
        <trans-unit id="0f30f5a0b4b32f58f550dfcdcf6b9fc81b95d993" translate="yes" xml:space="preserve">
          <source>Animation.finished()</source>
          <target state="translated">Animation.finished()</target>
        </trans-unit>
        <trans-unit id="946040cdd42ddf68c5fba608dc1ba22893bfaa08" translate="yes" xml:space="preserve">
          <source>Animation.loops</source>
          <target state="translated">Animation.loops</target>
        </trans-unit>
        <trans-unit id="007b817b31120063edafdd10ce34ec1b88903520" translate="yes" xml:space="preserve">
          <source>Animation.pause()</source>
          <target state="translated">Animation.pause()</target>
        </trans-unit>
        <trans-unit id="8b9a25b166fa9bf7c1b0108d0db08ab10cb4ef1f" translate="yes" xml:space="preserve">
          <source>Animation.paused</source>
          <target state="translated">Animation.paused</target>
        </trans-unit>
        <trans-unit id="f79b3ab95ff3acac471a66b64c5d68ece937b27f" translate="yes" xml:space="preserve">
          <source>Animation.restart()</source>
          <target state="translated">Animation.restart()</target>
        </trans-unit>
        <trans-unit id="70681382be6b7f0c2cfac0e3f38c787b31cb32e1" translate="yes" xml:space="preserve">
          <source>Animation.resume()</source>
          <target state="translated">Animation.resume()</target>
        </trans-unit>
        <trans-unit id="3e13403b725b663b8b6000b2effb244538dba9cb" translate="yes" xml:space="preserve">
          <source>Animation.running</source>
          <target state="translated">Animation.running</target>
        </trans-unit>
        <trans-unit id="36786ebe011f1183c986e87d6c7eb5242040de53" translate="yes" xml:space="preserve">
          <source>Animation.start()</source>
          <target state="translated">Animation.start()</target>
        </trans-unit>
        <trans-unit id="1dd8036cb93d231cb8d16cf43913348da13c7166" translate="yes" xml:space="preserve">
          <source>Animation.started()</source>
          <target state="translated">Animation.started()</target>
        </trans-unit>
        <trans-unit id="436e9e84975222ac1db83a2e8881f8b497cbb2a2" translate="yes" xml:space="preserve">
          <source>Animation.stop()</source>
          <target state="translated">Animation.stop()</target>
        </trans-unit>
        <trans-unit id="9d11f88aec6f7bb1ea91b7f015fe3cd6b96950d4" translate="yes" xml:space="preserve">
          <source>Animation.stopped()</source>
          <target state="translated">Animation.stopped()</target>
        </trans-unit>
        <trans-unit id="d0164d26d51109cc5c29a9469bdbf7fd1b576f94" translate="yes" xml:space="preserve">
          <source>AnimationController</source>
          <target state="translated">AnimationController</target>
        </trans-unit>
        <trans-unit id="493c97013ec520334b5d098aac518a2bbc18edbe" translate="yes" xml:space="preserve">
          <source>AnimationController (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee8643800d21c0628815b898683582865812fe4" translate="yes" xml:space="preserve">
          <source>AnimationController QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877d2dc7f0312b632b9e9eac68c160b3339c3fc8" translate="yes" xml:space="preserve">
          <source>AnimationController.activeAnimationGroup</source>
          <target state="translated">AnimationController.activeAnimationGroup</target>
        </trans-unit>
        <trans-unit id="61bf7f1a602d05b796aa1801431af8975780d7d0" translate="yes" xml:space="preserve">
          <source>AnimationController.animation</source>
          <target state="translated">AnimationController.animation</target>
        </trans-unit>
        <trans-unit id="33f3adf21e10cfb2f7970aeadeeeea22b37197e7" translate="yes" xml:space="preserve">
          <source>AnimationController.animationGroups</source>
          <target state="translated">AnimationController.animationGroups</target>
        </trans-unit>
        <trans-unit id="509afe85c3dc74b8946122ffa37f8405aae1fc3d" translate="yes" xml:space="preserve">
          <source>AnimationController.completeToBeginning()</source>
          <target state="translated">AnimationController.completeToBeginning()</target>
        </trans-unit>
        <trans-unit id="f785cdb47e8bd96b962141602ccfe9c5415cd184" translate="yes" xml:space="preserve">
          <source>AnimationController.completeToEnd()</source>
          <target state="translated">AnimationController.completeToEnd()</target>
        </trans-unit>
        <trans-unit id="3fda17609e093f8854bbd8e1280a1ad36d485815" translate="yes" xml:space="preserve">
          <source>AnimationController.entity</source>
          <target state="translated">AnimationController.entity</target>
        </trans-unit>
        <trans-unit id="59a9b1d0a7aa0a779f3bed8fd68a0f05e34b9b9d" translate="yes" xml:space="preserve">
          <source>AnimationController.getAnimationIndex()</source>
          <target state="translated">AnimationController.getAnimationIndex()</target>
        </trans-unit>
        <trans-unit id="78764b0f5fa9c270ce26ecf7a6118ab8c5770719" translate="yes" xml:space="preserve">
          <source>AnimationController.getGroup()</source>
          <target state="translated">AnimationController.getGroup()</target>
        </trans-unit>
        <trans-unit id="09ac634430c5736d22a28cedf7072ab45a63db61" translate="yes" xml:space="preserve">
          <source>AnimationController.position</source>
          <target state="translated">AnimationController.position</target>
        </trans-unit>
        <trans-unit id="6cd64066a093fa359d79cc6e22b6f74d83abf014" translate="yes" xml:space="preserve">
          <source>AnimationController.positionOffset</source>
          <target state="translated">AnimationController.positionOffset</target>
        </trans-unit>
        <trans-unit id="88a668c83e00b9e4075d185ab949ba2164f65678" translate="yes" xml:space="preserve">
          <source>AnimationController.positionScale</source>
          <target state="translated">AnimationController.positionScale</target>
        </trans-unit>
        <trans-unit id="7688f772ab5cf94af2e642added05180d5a3ed51" translate="yes" xml:space="preserve">
          <source>AnimationController.progress</source>
          <target state="translated">AnimationController.progress</target>
        </trans-unit>
        <trans-unit id="6a7b611907c6778838f3fe8bd51fb361489da7b0" translate="yes" xml:space="preserve">
          <source>AnimationController.recursive</source>
          <target state="translated">AnimationController.recursive</target>
        </trans-unit>
        <trans-unit id="ad0cce9cbd9dec68ad7cca9a9c7a169ee62e2edd" translate="yes" xml:space="preserve">
          <source>AnimationController.reload()</source>
          <target state="translated">AnimationController.reload()</target>
        </trans-unit>
        <trans-unit id="74bc15070e2b98f21f78285e88c90c019386af7e" translate="yes" xml:space="preserve">
          <source>AnimationGroup (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ef8f6d9d4ec4cb763a7fe7504ed7f549c2ecec" translate="yes" xml:space="preserve">
          <source>AnimationGroup &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qt3d-animation-animationcontroller#getGroup-method&quot;&gt;getGroup&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f522059b58118db4f40e193529f3a4520098f3a8" translate="yes" xml:space="preserve">
          <source>AnimationGroup QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b9b5a1887aeb233f1263a24e98ff569448d4f9" translate="yes" xml:space="preserve">
          <source>AnimationGroup.animations</source>
          <target state="translated">AnimationGroup.animations</target>
        </trans-unit>
        <trans-unit id="5c76b6f344a8973584a4a305c9accba1a8796a19" translate="yes" xml:space="preserve">
          <source>AnimationGroup.duration</source>
          <target state="translated">AnimationGroup.duration</target>
        </trans-unit>
        <trans-unit id="a3633878ea5f45b4966de4ab01a2ee8f6ce4fb54" translate="yes" xml:space="preserve">
          <source>AnimationGroup.name</source>
          <target state="translated">AnimationGroup.name</target>
        </trans-unit>
        <trans-unit id="1a9bc69ef53cec243ef64c67b3e223fe7101a54d" translate="yes" xml:space="preserve">
          <source>AnimationGroup.position</source>
          <target state="translated">AnimationGroup.position</target>
        </trans-unit>
        <trans-unit id="c77dcdedc0f40e8dac08a08c8bef7255abb90e75" translate="yes" xml:space="preserve">
          <source>Animations</source>
          <target state="translated">Animations</target>
        </trans-unit>
        <trans-unit id="cf17b4ae5e82789341f02dd550788b3a44f6e78d" translate="yes" xml:space="preserve">
          <source>Animations are created by applying animation objects to property values to gradually change the properties over time. These</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c241e8cef5afb2971019e1f2321890c4cd4a515b" translate="yes" xml:space="preserve">
          <source>Animations are created by applying animation types to property values. Animation types will interpolate property values to create smooth transitions. As well, state transitions may assign animations to state changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2173d2596297c4b5d4b978ae992468f7fb970b" translate="yes" xml:space="preserve">
          <source>Animations are enabled or disabled based on this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6319bfb4ff92e5d1f37a5e643c5456f324c960" translate="yes" xml:space="preserve">
          <source>Animations can also be paused and resumed imperatively from JavaScript using the &lt;code&gt;pause()&lt;/code&gt; and &lt;code&gt;resume()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6ce1dfd3801b0817a02064c42cc88f0e945e8a" translate="yes" xml:space="preserve">
          <source>Animations can also be started and stopped imperatively from JavaScript using the &lt;code&gt;start()&lt;/code&gt; and &lt;code&gt;stop()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b62653b4bd47900623700889690e6d1b4fb9ea2" translate="yes" xml:space="preserve">
          <source>Animations can run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25608a009fa90b244f5b2d5c0131af858794135a" translate="yes" xml:space="preserve">
          <source>Animations defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; are automatically run in parallel, so &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; can be used to enclose the animations in a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; if this is the preferred behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34138115522ef42b9afdc27bd65c5e1a680b87ab" translate="yes" xml:space="preserve">
          <source>Animations in QML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d55422c1936db72f18f5b9e960c2719a3560d7" translate="yes" xml:space="preserve">
          <source>Animator</source>
          <target state="translated">Animator</target>
        </trans-unit>
        <trans-unit id="983e17f5e5c80d49cfcf2b9d5cf0cd242efd8e4f" translate="yes" xml:space="preserve">
          <source>Animator (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d270b8afd02318ca9a76d21d0ab686bc7fad381" translate="yes" xml:space="preserve">
          <source>Animator QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8157733ea95e5572fee653eb6af2d13a768ab20f" translate="yes" xml:space="preserve">
          <source>Animator types are a special type of animation which operate directly on Qt Quick's scene graph, rather than the QML objects and their properties like regular Animation types do. This has the benefit that Animator based animations can animate on the &lt;a href=&quot;qtquick-visualcanvas-scenegraph#threaded-render-loop-threaded&quot;&gt;scene graph's rendering thread&lt;/a&gt; even when the UI thread is blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5676a9b9da355add4103aa2b53b419597cae8f8" translate="yes" xml:space="preserve">
          <source>Animator.duration</source>
          <target state="translated">Animator.duration</target>
        </trans-unit>
        <trans-unit id="4111129196ec0d0a065b30c689733dcc9d1b63f7" translate="yes" xml:space="preserve">
          <source>Animator.from</source>
          <target state="translated">Animator.from</target>
        </trans-unit>
        <trans-unit id="fd0172400f64a296c662d834ae428984fcc6ecbe" translate="yes" xml:space="preserve">
          <source>Animator.groupeasing.type</source>
          <target state="translated">Animator.groupeasing.type</target>
        </trans-unit>
        <trans-unit id="55051861f91c8221b9554005ddbdcd6f2b70e6b6" translate="yes" xml:space="preserve">
          <source>Animator.target</source>
          <target state="translated">Animator.target</target>
        </trans-unit>
        <trans-unit id="f9669d6ad6a33f99434b6b96332bae70f6206611" translate="yes" xml:space="preserve">
          <source>Animator.to</source>
          <target state="translated">Animator.to</target>
        </trans-unit>
        <trans-unit id="dfc164ad04b0a3d67d538d37b4ef14e8ca7bde91" translate="yes" xml:space="preserve">
          <source>Annotated URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b82e66e081f316e690176aaf07fd8f98885fb6" translate="yes" xml:space="preserve">
          <source>Another advantage of using these classes is that it can make your code easier to adapt to other data sources. For example, if you use &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; and later decide to use XML files to store data instead of a database, it is essentially just a matter of replacing one data model with another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e90386060d263a0e1a2086e1dada6c4d34079c7" translate="yes" xml:space="preserve">
          <source>Another alternative is &lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimer&lt;/a&gt;. It is typically less cumbersome than using &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject::startTimer&lt;/a&gt;() directly. See &lt;a href=&quot;timers#&quot;&gt;Timers&lt;/a&gt; for an overview of all three approaches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3f67de8d4ce849ce9d3668b694bcaf914b35f0" translate="yes" xml:space="preserve">
          <source>Another approach is to put the widget into a library that is linked to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e85cd44e28dee548947f6f7c4454dd81f97b0f0" translate="yes" xml:space="preserve">
          <source>Another approach is to set the size of the array using &lt;a href=&quot;qbytearray#resize&quot;&gt;resize&lt;/a&gt;() and to initialize the data byte per byte. &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; uses 0-based indexes, just like C++ arrays. To access the byte at a particular index position, you can use operator[](). On non-const byte arrays, operator[]() returns a reference to a byte that can be used on the left side of an assignment. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f5b320b2adf8977f18b7df96ee2f5b8dd29dc6" translate="yes" xml:space="preserve">
          <source>Another approach is to set the size of the string using &lt;a href=&quot;qstring#resize&quot;&gt;resize&lt;/a&gt;() and to initialize the data character per character. &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; uses 0-based indexes, just like C++ arrays. To access the character at a particular index position, you can use &lt;a href=&quot;qstring#operator-5b-5d&quot;&gt;operator[]&lt;/a&gt;(). On non-const strings, &lt;a href=&quot;qstring#operator-5b-5d&quot;&gt;operator[]&lt;/a&gt;() returns a reference to a character that can be used on the left side of an assignment. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc32748b51fed69e7585d5d5f2f15bb1b744540d" translate="yes" xml:space="preserve">
          <source>Another approach that does not require the use of an event filter is to provide our own editor widget, perhaps subclassing &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; for convenience. This alternative approach would give us more control over how the editor widget behaves at the cost of writing additional code. It is usually easier to install an event filter in the delegate if you need to customize the behavior of a standard Qt editor widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02fec4f72039c0553a492006c272639b81eab5fe" translate="yes" xml:space="preserve">
          <source>Another benefit is that we can explore an object's signals and slots at runtime. We can establish connections using type-safe call-by-name, without having to know the exact types of the objects we are connecting. This is impossible with a template based solution. This kind of runtime introspection opens up new possibilities, for example GUIs that are generated and connected from Qt Designer's XML UI files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2853a5eef1e383611981cb628d8abacfb4fcde5b" translate="yes" xml:space="preserve">
          <source>Another benefit of identifying transform nodes as batch roots is that it allows the renderer to retain the parts of the tree that have not changed. For instance, say a UI consists of a list and a button row. When the list is being scrolled and delegates are being added and removed, the rest of the UI, the button row, is unchanged and can be drawn using the geometry already stored on the GPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0db10e51c1b21e5c5d3307e39e816b4f4494fff" translate="yes" xml:space="preserve">
          <source>Another benefit of using opaque primitives is that opaque primitives do not require &lt;code&gt;GL_BLEND&lt;/code&gt; to be enabled, which can be quite costly, especially on mobile and embedded GPUs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ad2df5048099d45c3e1a8f675a8a3e9437687c" translate="yes" xml:space="preserve">
          <source>Another class of buttons are option buttons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c102039bc7a5965e5885153ab0c636a0fc0e737" translate="yes" xml:space="preserve">
          <source>Another class of buttons are option buttons \e (see QRadioButton).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69f614b1867e8b77f4a8b04ceab1e5e7b4cb83c" translate="yes" xml:space="preserve">
          <source>Another common cause of this bug is to confuse the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9300ae13d7a920d0d304fd917f3e623d2e5c33f" translate="yes" xml:space="preserve">
          <source>Another common way to manage the layout of objects on a form is to place them in a splitter. These splitters arrange the objects horizontally or vertically in the same way as normal layouts, but also allow the user to adjust the amount of space allocated to each object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1894a1cc0fc6444a76a65db242ca71748264dd0" translate="yes" xml:space="preserve">
          <source>Another component can display this model data in a &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt;, as in the following example, which creates a &lt;code&gt;ContactModel&lt;/code&gt; component for its model, and a &lt;a href=&quot;qml-qtquick-column&quot;&gt;Column&lt;/a&gt; (containing &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; items) for its delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f1eee747b06708b0bd55a6198c8de4b216ee01" translate="yes" xml:space="preserve">
          <source>Another component can display this model data in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e27ad2c0b399657977873b7803751f29bda6ef4" translate="yes" xml:space="preserve">
          <source>Another error happened, for instance a full partition prevented writing out the lock file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75941c95694c80a1d83c2e57ea8df947457e8689" translate="yes" xml:space="preserve">
          <source>Another example of automatic signal and slot connection would be the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtuitools-textfinder-example.html&quot;&gt;Text Finder&lt;/a&gt; with its &lt;code&gt;on_findButton_clicked()&lt;/code&gt; slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7848613e429d4644f5aad113caf6791981d34d2" translate="yes" xml:space="preserve">
          <source>Another example with a different pattern, showing the behaviour of preferring a complete match over a partial one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcca4df3316ac4f5a4013ca7b3d47b5cf5f5e3b7" translate="yes" xml:space="preserve">
          <source>Another example would be dynamically populated tree models, where we reimplement &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore()&lt;/a&gt; when a branch in the tree model is expanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5627b90aa3622fe6255b173d801a3306587572aa" translate="yes" xml:space="preserve">
          <source>Another exception to &lt;b&gt;Tab&lt;/b&gt; support is text-entry widgets that must support the insertion of tabs; almost all text editors fall into this class. Qt treats &lt;b&gt;Ctrl+Tab&lt;/b&gt; as &lt;b&gt;Tab&lt;/b&gt; and &lt;b&gt;Ctrl+Shift+Tab&lt;/b&gt; as &lt;b&gt;Shift+Tab&lt;/b&gt;, and such widgets can reimplement &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() and handle Tab before calling &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() to get normal processing of all other keys. However, since some systems use &lt;b&gt;Ctrl+Tab&lt;/b&gt; for other purposes, and many users aren't aware of &lt;b&gt;Ctrl+Tab&lt;/b&gt; anyway, this isn't a complete solution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d300d518aef9215bc54ee419d86a09acca3d5568" translate="yes" xml:space="preserve">
          <source>Another item calls grabKeyboard(); the item will regain the keyboard grab when the other item calls &lt;a href=&quot;qgraphicsitem#ungrabKeyboard&quot;&gt;ungrabKeyboard&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92dcf0cff00d6965f8cea82c8acf0c1e69f6e43" translate="yes" xml:space="preserve">
          <source>Another item calls grabMouse(); the item will regain the mouse grab when the other item calls &lt;a href=&quot;qgraphicsitem#ungrabMouse&quot;&gt;ungrabMouse&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839977a158b8ff6a54e7aec5dff489179540ce30" translate="yes" xml:space="preserve">
          <source>Another key concept is that of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534f994fcf450e044c9d4469e0f5170b3d2d5fad" translate="yes" xml:space="preserve">
          <source>Another method of creating object types from within QML is to use the &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; type. This allows a type to be defined inline within a QML document, instead of using a separate document in a &lt;code&gt;.qml&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e189040f642c56e31f366395793d72a21f1455e6" translate="yes" xml:space="preserve">
          <source>Another nuanced value is SOURCEONLYSETTER, which provides another way of specifying asymmetric behavior, where the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; (specifically the helper class, &lt;code&gt;SimpleSource&lt;/code&gt;) will have a public getter and setter for the property, but it will be ReadOnly (with a notify signal) on the &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; side. Thus the property can be fully controlled from the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; side, but only observed from the &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; side. SOURCEONLYSETTER is the mode used by repc for MODEL and CLASS instances, meaning the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; can change the pointed to object, but the &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; can not provide a new object, as no set&amp;lt;Prop&amp;gt; or push&amp;lt;Prop&amp;gt; method is generated. Note, this does not impact the behavior of the pointed to type's properties, just the ability to change the pointer itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11d26f98ed17abcd46ea4244d0dca9830ce8605" translate="yes" xml:space="preserve">
          <source>Another option is to create a custom item that inherits from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;. The item can the set up its own timers, and control animations with incremental steps in &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject::timerEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b5d1e6ce8b5d2b409427b606ebdc3ef7a980d7" translate="yes" xml:space="preserve">
          <source>Another option is to reimplement &lt;a href=&quot;qvariantanimation#interpolated&quot;&gt;interpolated&lt;/a&gt;(), which returns interpolation values for the value being interpolated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecc0b65e3b91461d482c564a4755d48fe82c103" translate="yes" xml:space="preserve">
          <source>Another option would be to preview your form with device skins. A list of generic device skins are available in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8a10a4401f3e9e5fc82bd4ae68d09f1c759fae" translate="yes" xml:space="preserve">
          <source>Another popular target is &lt;code&gt;/opt&lt;/code&gt;. This folder is located in a read-only partition on many systems, making deployment impossible. Make sure that you use a destination folder which meets your needs. You can set it in the &lt;code&gt;install.path&lt;/code&gt; variable in the &lt;code&gt;.pro&lt;/code&gt; file of your project, see &lt;a href=&quot;qmake-advanced-usage#installing-files&quot;&gt;Installing Files&lt;/a&gt; in the &lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt; documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca15014a578ac2f244e0e91c4051ab8181e8e19" translate="yes" xml:space="preserve">
          <source>Another reason, usually application-specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7008a2adbe592e834e31b598e3d472cbed60e89e" translate="yes" xml:space="preserve">
          <source>Another responsibility that &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; has, is to propagate events from &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;. To send an event to a scene, you construct an event that inherits &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt;, and then send it using, for example, &lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;QApplication::sendEvent&lt;/a&gt;(). &lt;a href=&quot;qgraphicsscene#event&quot;&gt;event&lt;/a&gt;() is responsible for dispatching the event to the individual items. Some common events are handled by convenience event handlers. For example, key press events are handled by &lt;a href=&quot;qgraphicsscene#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt;(), and mouse press events are handled by &lt;a href=&quot;qgraphicsscene#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47fd29a7c2c66a576cf8e41ec58645a8ce88c53" translate="yes" xml:space="preserve">
          <source>Another similar scenario is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4120150da9c773e86d47a616a6a02eb2fdf94de" translate="yes" xml:space="preserve">
          <source>Another thread signals it using &lt;a href=&quot;qwaitcondition#wakeOne&quot;&gt;wakeOne&lt;/a&gt;() or &lt;a href=&quot;qwaitcondition#wakeAll&quot;&gt;wakeAll&lt;/a&gt;(). This function will return true in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95eff95c62bb3f7766e078eaf1fb52bd98914f5" translate="yes" xml:space="preserve">
          <source>Another use for \meta command is to include metadata (tags) in &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#example-command&quot;&gt;\example&lt;/a&gt; documentation. By default, QDoc generates example tags based on the example's &lt;a href=&quot;20-qdoc-commands-namingthings#title-command&quot;&gt;\title&lt;/a&gt; and module name. These tags are displayed in Qt Creator's Welcome mode, helping users navigate the list of examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c3848e26fd9266bb93029f54974b14de43ef03" translate="yes" xml:space="preserve">
          <source>Another use-case is to execute a certain operation for a specific timeslice. For this, &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; provides the &lt;a href=&quot;qelapsedtimer#hasExpired&quot;&gt;hasExpired&lt;/a&gt;() convenience function, which can be used to determine if a certain number of milliseconds has already elapsed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b0b00ab892dc812480f079a3ef57dbc6089a84" translate="yes" xml:space="preserve">
          <source>Another way to access the data stored in a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; is to call &lt;a href=&quot;qvector#data&quot;&gt;data&lt;/a&gt;(). The function returns a pointer to the first item in the vector. You can use the pointer to directly access and modify the elements stored in the vector. The pointer is also useful if you need to pass a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; to a function that accepts a plain C++ array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a03ad13780b281fa46f4039538d6fbfb853e14b" translate="yes" xml:space="preserve">
          <source>Another way to center a popup in the window regardless of its parent item is to use &lt;a href=&quot;qml-qtquick-controls2-popup#anchors.centerIn-prop&quot;&gt;anchors.centerIn&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a19460ffcc5174582c35beacd90cea2fdafa58" translate="yes" xml:space="preserve">
          <source>Another way to create macros is to use the convenience functions &lt;a href=&quot;qundostack#beginMacro&quot;&gt;QUndoStack::beginMacro&lt;/a&gt;() and &lt;a href=&quot;qundostack#endMacro&quot;&gt;QUndoStack::endMacro&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8292d1b47115cffb2538875febc29ab6ac3ca02" translate="yes" xml:space="preserve">
          <source>Another way to insert items into the set is to use operator&amp;lt;&amp;lt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0834d527459cea77db5206406f0d900a6caec295" translate="yes" xml:space="preserve">
          <source>Another way to make code run in a separate thread, is to subclass &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; and reimplement &lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt;(). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027dacee22b515faf611acf8207a6cea8cc76f22" translate="yes" xml:space="preserve">
          <source>Another way to run an XSLT stylesheet is to use the &lt;code&gt;xmlpatterns&lt;/code&gt; command line utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75d577a46794c96f22cdd6bb5893e7c0511bd9f" translate="yes" xml:space="preserve">
          <source>Anti-aliased Painting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8e49ec668ce553a773a449a75efe2a053eb662" translate="yes" xml:space="preserve">
          <source>Anti-aliasing is turned on by default on C++, except in OpenGL ES2 environments, where anti-aliasing is not supported by Qt Data Visualization. To specify non-default anti-aliasing for a graph, give a custom surface format as a constructor parameter. You can use the convenience function &lt;code&gt;QtDataVisualization::qDefaultSurfaceFormat()&lt;/code&gt; to create the surface format object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd725ffa392b7eedfa34af09a044a06a66c3ae72" translate="yes" xml:space="preserve">
          <source>Anti-aliasing rasterizer from FreeType 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78939d37f8c7dc0048a0da4dc947069880ed669" translate="yes" xml:space="preserve">
          <source>Antialiasing</source>
          <target state="translated">Antialiasing</target>
        </trans-unit>
        <trans-unit id="feb820161bff90336ed3cac21ace044febf8abef" translate="yes" xml:space="preserve">
          <source>Antialiasing and Quality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e70e519a0bc8fe5fc17dda72736bc2c082b885" translate="yes" xml:space="preserve">
          <source>Antialiasing and a smooth pixmap tranformation algorithm are both used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d8c49ee1969daa5dd903c4d1e61b2ed3ac741a" translate="yes" xml:space="preserve">
          <source>Antialiasing in the OpenGL paint engine is done using multisampling. Most hardware require significantly more memory to do multisampling and the resulting quality is not on par with the quality of the software paint engine. The OpenGL paint engine's strength lies in its performance, not its visual rendering quality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902bc6eef8a0bb8f079b76b738de8a3515ae1ecb" translate="yes" xml:space="preserve">
          <source>Antialiasing is used but no smooth pixmap transformation algorithm (Default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1783d55d98c4085ca23dbd95f26e9df90baef315" translate="yes" xml:space="preserve">
          <source>Antialiasing or a smooth pixmap transformation algorithm are not used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="0bee57c8e00a9a372a959cae2470021af514fd21" translate="yes" xml:space="preserve">
          <source>Any 3rd party engine that shares its context with the Qt 3D renderer can now provide texture ids that will be referenced by the Qt 3D texture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3945abf99aa75249c1fd8d8150c349530c6ff07" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;qlowenergyservice&quot;&gt;QLowEnergyService&lt;/a&gt;, &lt;a href=&quot;qlowenergycharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; or &lt;a href=&quot;qlowenergydescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt; instance that resulted from the current connection is automatically invalidated. Once any of those objects become invalid they remain invalid even if this controller object reconnects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fdef3100f018afae5281483a021621abda2221" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;qlowenergyservice&quot;&gt;QLowEnergyService&lt;/a&gt;, &lt;a href=&quot;qlowenergycharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; or &lt;a href=&quot;qlowenergydescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt; instance which is later created from this controller's connection becomes invalid as soon as the controller disconnects from the remote Bluetooth Low Energy device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad60e2b784931cb9be7ca818aad9696674cd29ec" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass can be used as the type for a sub object in ActiveX, as long as it is known to the &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;. Then the type can be used in properties, or as the return type or parameter of a slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc7aa4274a3af54d5cfb0446b7aaf39b5c369c3" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-based instance can be made available for use with scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d15f2bd6ca2e64669504768ffe3b4350e24769c" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class may be used as a type for the exchange of data between QML and C++, providing the class has been registered with the QML type system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b4529d05b3ecfcd979aaf6873ab792ba075d02" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived type that is registered as an instantiable QML object type can optionally specify a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f3556d76ef46b4d0dadf5fd6898fdd52ee6aa8" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;'s created on this engine will be invalidated, but not destroyed (unless they are parented to the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61ccca532a9300ba9843e251d9a77c90d2dd9bd" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; that has no parent will become a window, and will on most platforms be listed in the desktop's task bar. This is usually only wanted for one window in the application, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3729b5f98b94ac1ad748dfe1f161d57ea1339107" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;SquareButton&lt;/code&gt; object could make use of the &lt;code&gt;pressed&lt;/code&gt; property, &lt;code&gt;buttonClicked&lt;/code&gt; signal and &lt;code&gt;randomizeColor()&lt;/code&gt; method that have been added to the root &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12ea6ea1bf802b2d45a63c41283eb7cd2218c08" translate="yes" xml:space="preserve">
          <source>Any ASCII linefeed characters (\n) in the inserted text are transformed into unicode block separators, corresponding to &lt;a href=&quot;qtextcursor#insertBlock&quot;&gt;insertBlock&lt;/a&gt;() calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14d3314f1a499a6971583f150042ee413b473b5" translate="yes" xml:space="preserve">
          <source>Any CAN bus frame type can be matched by setting this variable to &lt;a href=&quot;qcanbusframe#FrameType-enum&quot;&gt;QCanBusFrame::InvalidFrame&lt;/a&gt;. The filter object is invalid if type is equal to &lt;a href=&quot;qcanbusframe#FrameType-enum&quot;&gt;QCanBusFrame::UnknownFrame&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cee397ecf2761a98437bb23d21f1ac6d414e45" translate="yes" xml:space="preserve">
          <source>Any QML file on the local file system can import a local directory as using an import statement that refers to the directory's absolute or relative file system path, enabling the file to use the &lt;a href=&quot;qtqml-typesystem-objecttypes#&quot;&gt;object types&lt;/a&gt; defined within that directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538c650d0f7a05f9bfff8cb4834c514f6e496725" translate="yes" xml:space="preserve">
          <source>Any Qt Quick application can be launched with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be22f1fac4b91444f331927fe09eda607dc8534" translate="yes" xml:space="preserve">
          <source>Any Qt program can run as a Wayland client (as part of a multi-process system) or a standalone client (single-process). This is determined on startup, where you can choose between the different backends. During the development process, you can develop the client on the desktop first, then test it on the target hardware later. You don't need to run your clients on the actual target hardware all the time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01944f07e03c053b4cc119aecd004f05ba0e7b03" translate="yes" xml:space="preserve">
          <source>Any additional arguments passed to Qt.&lt;a href=&quot;qml-qtqml-qt#callLater-method&quot;&gt;callLater()&lt;/a&gt; will be passed on to the function invoked. Note that if redundant calls are eliminated, then only the last set of arguments will be passed to the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf2252acd039dd5a588481c63dad459ea9e1e2a" translate="yes" xml:space="preserve">
          <source>Any animations defined for the &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; position of &lt;a href=&quot;qml-qtquick-controls2-control#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt; will be triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2ae592f08018a3894f46328efd81cc93d9e21e" translate="yes" xml:space="preserve">
          <source>Any argument that isn't an option (i.e. doesn't start with a &lt;code&gt;-&lt;/code&gt;) is stored as a &quot;positional argument&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc86e047deb2135beb6eb056336f0c9537ef118" translate="yes" xml:space="preserve">
          <source>Any attempt to modify the global object - either implicitly or explicitly - will cause an exception. If uncaught, this will result in a warning being printed, that includes the file and line number of the offending code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f5c7b79cd21c737ee6adecf817b993553aa736" translate="yes" xml:space="preserve">
          <source>Any attempts to modify the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; or copies of it will cause it to create a deep copy of the data, ensuring that the raw data isn't modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573281120bb6007d6323ba3cf496604f1073d1c0" translate="yes" xml:space="preserve">
          <source>Any buffer in the device is bypassed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c6245148d18f36b6a09efbafe00fc7eb19d22b" translate="yes" xml:space="preserve">
          <source>Any buffers returned should have this format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76c936a01086dc887b4ef2dc12e991074f928f8" translate="yes" xml:space="preserve">
          <source>Any button can display a label containing text and an icon. &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;setText&lt;/a&gt;() sets the text; &lt;a href=&quot;qabstractbutton#icon-prop&quot;&gt;setIcon&lt;/a&gt;() sets the icon. If a button is disabled, its label is changed to give the button a &quot;disabled&quot; appearance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaafda46ba0df761aa7127a79fa6cdea0003c00c" translate="yes" xml:space="preserve">
          <source>Any character permitted but not required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6634002470d5b6ff210f9d8b2ee6510541232af0" translate="yes" xml:space="preserve">
          <source>Any character represents itself apart from those mentioned below. Thus &lt;b&gt;c&lt;/b&gt; matches the character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad34bba00c42c8672ef1f71542310b5745dc583" translate="yes" xml:space="preserve">
          <source>Any character required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c9eb515e4020fa22eb55e6e2c8368a6308e0b1" translate="yes" xml:space="preserve">
          <source>Any class or struct that has a public default constructor, a public copy constructor, and a public destructor can be registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffb877c9fed8171a4b0a8f2d16d93d01be2ca8b" translate="yes" xml:space="preserve">
          <source>Any client &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;s that are still connected must either disconnect or be reparented before the server is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5cfe006cec960a2ccaabc54b1e862cd2fa0318" translate="yes" xml:space="preserve">
          <source>Any client QLocalSockets that are still connected must either disconnect or be reparented before the server is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b7ef4240c00d950cd7fe04d770209505e9f1d5" translate="yes" xml:space="preserve">
          <source>Any color in Qt is represented by the &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; class which supports the RGB, HSV and CMYK color models. &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; also support alpha-blended outlining and filling (specifying the transparency effect), and the class is platform and device independent (the colors are mapped to hardware using the &lt;a href=&quot;qcolormap&quot;&gt;QColormap&lt;/a&gt; class). For more information, see the &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; class documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3881d4e35ea50501b1122b981bd7b683f7b43e1" translate="yes" xml:space="preserve">
          <source>Any configurations not listed above are not actively tested by the Qt Project. However, Qt may run on configurations other than those actively tested on, and additional configurations may be raised to tested state, if sufficient effort is made to bring continuous integration to an acceptable state for that particular configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d571cb51c56d04d5c8b5c67bbbf9330a5017984" translate="yes" xml:space="preserve">
          <source>Any data in the write buffer is flushed before the socket is closed. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3327dc1d5c49d9afa497754c6f6eec7253e9250c" translate="yes" xml:space="preserve">
          <source>Any data that is transferred from C++ to QML, whether as a property value, a method parameter or return value, or a signal parameter value, must be of a type that is supported by the QML engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa5703282be72ab076b904a189293115fe2cd58" translate="yes" xml:space="preserve">
          <source>Any delegate instances created by &lt;a href=&quot;qml-qtquick-particles-itemparticle&quot;&gt;ItemParticle&lt;/a&gt; will be destroyed when the logical particle expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10db02d9be5efe1f85480ed6dea1b267b075ae7" translate="yes" xml:space="preserve">
          <source>Any empty cells in the grid must be created by defining placeholder items at the appropriate places in the Grid definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef81fec8b9762a0c569fcfe0547049313423c1d2" translate="yes" xml:space="preserve">
          <source>Any entry in the list can be used with &lt;code&gt;value()&lt;/code&gt; or with &lt;code&gt;values()&lt;/code&gt; to get any relevant option values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a90f9b1167579f38179cbe518e819293078c026" translate="yes" xml:space="preserve">
          <source>Any existing column delegate for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8b0d6340ed6c40b2bcfd640823faa73b687866" translate="yes" xml:space="preserve">
          <source>Any existing delegate will be removed, but not deleted. &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; does not take ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2192ec6b284bc54e02c4193c72f688f73ece8b20" translate="yes" xml:space="preserve">
          <source>Any existing formatter is deleted when a new formatter is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d88d5001dbff5f4992fa95409a6c6ac273e781a" translate="yes" xml:space="preserve">
          <source>Any existing layout manager is deleted before the new layout is assigned. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6773be7bee1e4c179d0b86983247966c304df18f" translate="yes" xml:space="preserve">
          <source>Any existing proxy model will be removed, but not deleted. The file dialog will take ownership of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd34474b2f0762aacf0f08ce54961e4e807b361c" translate="yes" xml:space="preserve">
          <source>Any existing row delegate for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37ef6b939cf440abaa97d762aeeb0be8fbe0361" translate="yes" xml:space="preserve">
          <source>Any expressions, or sub-contexts dependent on this context will be invalidated, but not destroyed (unless they are parented to the &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d45a6dedcfdcfac953df85f55ac056234427138" translate="yes" xml:space="preserve">
          <source>Any field that is not represented in the format will be set to zero. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651af7439be6f4117954eafd740ad385d47d3c10" translate="yes" xml:space="preserve">
          <source>Any general parsed entity reference which is not defined in the internal subset and which occurs in the content is represented as a &lt;a href=&quot;qdomentityreference&quot;&gt;QDomEntityReference&lt;/a&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7622e76254565edbc139c7e15ca3835b4a38ff" translate="yes" xml:space="preserve">
          <source>Any given library project can be configured so that the resulting library file is placed in a &lt;a href=&quot;http://developer.apple.com/documentation/MacOSX/Conceptual/BPFrameworks/Concepts/WhatAreFrameworks.html&quot;&gt;framework&lt;/a&gt;, ready for deployment. To do this, set up the project to use the &lt;a href=&quot;qmake-variable-reference#template&quot;&gt;&lt;code&gt;lib&lt;/code&gt; template&lt;/a&gt; and add the &lt;code&gt;lib_bundle&lt;/code&gt; option to the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040efda984dba52bc3a56e13c540a78a85ccdfc6" translate="yes" xml:space="preserve">
          <source>Any ignored points are eligible to activate other Input Handlers that have different constraints, on the same Item or on other Items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2e367923e2034fe4637f52c85d3a71062f4b9c" translate="yes" xml:space="preserve">
          <source>Any instance of &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; acts as a reference to an underlying data structure in &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;. The test for equality checks if the two references point to the same underlying node. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3976747ee3446048cd8ec26b5c60f1ced96e2804" translate="yes" xml:space="preserve">
          <source>Any item properties that come from the model are updated when the item is reused. This includes &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;row&lt;/code&gt;, and &lt;code&gt;column&lt;/code&gt;, but also any model roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb80f3b4be88158d3fe2cd0cc086ef717eb579ee" translate="yes" xml:space="preserve">
          <source>Any item within a Package may be assigned a name via the &lt;a href=&quot;qml-package#name-attached-prop&quot;&gt;Package.name&lt;/a&gt; attached property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763153b56b91061ed6efed813728e4582583c98f" translate="yes" xml:space="preserve">
          <source>Any mapping options can be passed through</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577d33364eb5057b729dce87ff3e9694669371e6" translate="yes" xml:space="preserve">
          <source>Any method of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived type is accessible from QML code if it is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2ede786826d9aff4939c4d3d92a61ac898722d" translate="yes" xml:space="preserve">
          <source>Any non 0 value indicates a discrete stepSize. The following example will generate a slider with integer values in the range [0-5].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19c2bc50011739c18e1def9fefcb63e5e2ff512" translate="yes" xml:space="preserve">
          <source>Any object assigned to an item's &lt;a href=&quot;qml-qtquick-item#data-prop&quot;&gt;data&lt;/a&gt; property becomes a child of the item within its &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; hierarchy, for memory management purposes. Additionally, if an object added to the data property is of the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; type, it is also assigned to the &lt;a href=&quot;qml-qtquick-item#children-prop&quot;&gt;Item::children&lt;/a&gt; property and becomes a child of the item within the visual scene hierarchy. (Most Qt Quick hierarchy crawling algorithms, especially the rendering algorithms, only consider the visual parent hierarchy.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22854f56a03a6d7c16306558d3e8700fafa31a4" translate="yes" xml:space="preserve">
          <source>Any object declaration can define child objects through nested object declarations. In this way, &lt;b&gt;any object declaration implicitly declares an object tree that may contain any number of child objects&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3e8d3afaa548fd14875e7a36f381cae4b5e21f" translate="yes" xml:space="preserve">
          <source>Any object in a QML file - including nested objects and nested QML component instances - can use this attached property. If there is more than one &lt;code&gt;onCompleted()&lt;/code&gt; handler to execute at startup, they are run sequentially in an undefined order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912ddb74fa3a14a8535e9a32a8c8fce69df19507" translate="yes" xml:space="preserve">
          <source>Any object that use this type and refer to its &lt;code&gt;color&lt;/code&gt; property will be referring to the alias rather than the ordinary &lt;a href=&quot;qml-qtquick-rectangle#color-prop&quot;&gt;Rectangle::color&lt;/a&gt; property. Internally, however, the rectangle can correctly set its &lt;code&gt;color&lt;/code&gt; property and refer to the actual defined property rather than the alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e128c7a065790d932d98903c1f1136aed941cf8f" translate="yes" xml:space="preserve">
          <source>Any of the &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;QML Basic Types&lt;/a&gt; aside from the &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt; type can be used as custom property types. For example, these are all valid property declarations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03dc242419576ccdf93497a8a41b65ea384d47dc" translate="yes" xml:space="preserve">
          <source>Any of the following values or a bitwise combination of multiple values may be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc2e210157edd5c5e1134884df50db45d87e89a" translate="yes" xml:space="preserve">
          <source>Any of these may be OR-ed with one of these flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c30def67d82f2bce72c4134698f7a7b7ce80a1" translate="yes" xml:space="preserve">
          <source>Any operations that have not been inserted are discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2db198d7bec3be33708092944a634932afdc591" translate="yes" xml:space="preserve">
          <source>Any other key sequence that represents a valid character, will cause the character to be inserted into the line edit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab99846bef3911d7173a0653173dfb2c5e088f9" translate="yes" xml:space="preserve">
          <source>Any other type will be converted to a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; using &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant::toString&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9491f03f7f86e751101317ae44215db4fa2e08" translate="yes" xml:space="preserve">
          <source>Any other value implies that the given value should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe6dbb00c6651799c556d51e25301806bbab2d8" translate="yes" xml:space="preserve">
          <source>Any other value will cause &lt;code&gt;Qt.AlignBottom&lt;/code&gt; to be used, which is also the default value for this orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa3986e15f201825f9c8d20942c4a6b7d2feada" translate="yes" xml:space="preserve">
          <source>Any other value will cause &lt;code&gt;Qt.AlignLeft&lt;/code&gt; to be used, which is also the default value for this orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f28e89ef444213ff3f51f61749a6abfc33f745" translate="yes" xml:space="preserve">
          <source>Any parsed entity reference which is not defined in the internal subset and which occurs outside of the content is replaced with an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4202a0a6ea20996e0e813f35de7b1435eeff71ee" translate="yes" xml:space="preserve">
          <source>Any password in the URL is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b3f38174272f3752f774a7a6fdf1455f4be21a" translate="yes" xml:space="preserve">
          <source>Any previous corner widget is hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c30d5048fe000f0f72fe1fa9ab421be4ad98d8" translate="yes" xml:space="preserve">
          <source>Any previous side widget is hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36b46af4d9f67789f69e0875759766c8f11183e" translate="yes" xml:space="preserve">
          <source>Any previously monitored objects will no longer be monitored. Passing in the same (valid) object will be ignored, but monitoring will continue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5aecae4c8ab6987b4e4228e6572ab21fb747a04" translate="yes" xml:space="preserve">
          <source>Any previously monitored objects will no longer be monitored. Passing in the same object will be ignored, but monitoring will continue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ea95fb8eda9718a3dfacbfae05e2df09b71ba1" translate="yes" xml:space="preserve">
          <source>Any previously set corner widget is hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9be5ff617e93462085eaa6e4e463ce55fc22121" translate="yes" xml:space="preserve">
          <source>Any previously set widget in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9370891d12c29c68598f558b455eeaa65a0ca18c" translate="yes" xml:space="preserve">
          <source>Any properties declared in a QML object are automatically accessible from C++. Given a QML item like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267adf6345051d10f4e7b10e8c688a4bdcad0b04" translate="yes" xml:space="preserve">
          <source>Any property changes in these data sets will be bubble up and change the output of the Shape. This means that it is simple and easy to change, or even animate, the starting and ending position, control points, or any stroke or fill parameters using the usual QML bindings and animation types like &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f097a11eb47d84616a6c2437e0398167059c9ee" translate="yes" xml:space="preserve">
          <source>Any public &lt;a href=&quot;signalsandslots&quot;&gt;signal&lt;/a&gt; of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived type is accessible from QML code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0032b8a097eab78baff23c5605ea873c4c6f1ed2" translate="yes" xml:space="preserve">
          <source>Any public slot in the class will be accessible through the bus over messages of the MethodCall type. (See &lt;a href=&quot;qdbusdeclaringslots#&quot;&gt;Declaring Slots in D-Bus Adaptors&lt;/a&gt; for more information). Signals in the class will be automatically relayed over D-Bus. However, not all types are allowed signals or slots' parameter lists: see &lt;a href=&quot;qdbustypesystem#&quot;&gt;The Qt D-Bus Type System&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099b4f69cd18c1328a031a35f8b7c18e16da9264" translate="yes" xml:space="preserve">
          <source>Any puck-like device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2ff834ddf44732f70e3dab9a6d93fb7d4537db" translate="yes" xml:space="preserve">
          <source>Any read-only object-type property is accessible from QML code as a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cab2ae921219afa39d84ad2f7860c8cd79d78dc" translate="yes" xml:space="preserve">
          <source>Any return value from the function is available via &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fe7fa1e83898d059025a972216af16c681d6d5" translate="yes" xml:space="preserve">
          <source>Any sequence of characters enclosed in single quotes will be included verbatim in the output string (stripped of the quotes), even if it contains formatting characters. Two consecutive single quotes (&quot;''&quot;) are replaced by a single quote in the output. All other characters in the format string are included verbatim in the output string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4d8b530bb0aa82aca49be79c873b310ad2a578" translate="yes" xml:space="preserve">
          <source>Any signal in a class derived from &lt;a href=&quot;qdbusabstractadaptor&quot;&gt;QDBusAbstractAdaptor&lt;/a&gt; will be automatically relayed into D-Bus, provided that the signal's parameters conform to certain rules (see &lt;a href=&quot;qdbustypesystem#&quot;&gt;The Qt D-Bus Type System&lt;/a&gt; for more information). No special code is necessary to make this relay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21dfa8008be97d8e5b54369bb8dd34d6097341d" translate="yes" xml:space="preserve">
          <source>Any signals emitted from the loaded object can be received using the &lt;a href=&quot;qml-qtqml-connections&quot;&gt;Connections&lt;/a&gt; type. For example, the following &lt;code&gt;application.qml&lt;/code&gt; loads &lt;code&gt;MyItem.qml&lt;/code&gt;, and is able to receive the &lt;code&gt;message&lt;/code&gt; signal from the loaded item through a &lt;a href=&quot;qml-qtqml-connections&quot;&gt;Connections&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8bf7f2b5a0dfb2947b4a1ffac5c1e2951badc6" translate="yes" xml:space="preserve">
          <source>Any specified port is removed from the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474d54135adbae4520d1bf9601cc2e8662872366" translate="yes" xml:space="preserve">
          <source>Any state that is the source state of a transition (which is not a target-less transition) is left, and re-entered when necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406b8718814e3c59482b650b9ecd0e2c0fec06f8" translate="yes" xml:space="preserve">
          <source>Any supported protocol. This value is used by &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe0ec962f2c776329995883e135da40832cae99" translate="yes" xml:space="preserve">
          <source>Any unparsed entity reference is replaced with an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c99ac881c835c5ac95f54cd8ae0aa6452b17d3b" translate="yes" xml:space="preserve">
          <source>Any unsaved changes will eventually be written to permanent storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b822633a24086f2358c44f335d0b26464aa76099" translate="yes" xml:space="preserve">
          <source>Any usage of the returned &lt;a href=&quot;qgeopositioninfosource&quot;&gt;QGeoPositionInfoSource&lt;/a&gt; instance should account for the fact that it may reside in a different thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70361e14d88c692d53adc90c007280ae37f7b2bc" translate="yes" xml:space="preserve">
          <source>Any user information in the URL is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfe47417aed9a2b34f244b5abdb9e51e94f66b2" translate="yes" xml:space="preserve">
          <source>Any whitespace in the pattern string which is not escaped and outside a character class is ignored. Moreover, an unescaped sharp (&lt;b&gt;#&lt;/b&gt;) outside a character class causes all the following characters, until the first newline (included), to be ignored. This can be used to increase the readability of a pattern string as well as put comments inside regular expressions; this is particulary useful if the pattern string is loaded from a file or written by the user, because in C++ code it is always possible to use the rules for string literals to put comments outside the pattern string. This option corresponds to the &lt;code&gt;/x&lt;/code&gt; modifier in Perl regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3af89be9a42ccfaa51cbb797bad094d4a3771cd" translate="yes" xml:space="preserve">
          <source>Any widgets that are allocated less space than their minimum size (or minimum size hint if no minimum size is specified) are allocated this minimum size they require. (Widgets don't have to have a minimum size or minimum size hint in which case the stretch factor is their determining factor.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7d10b3fed8d250cc5c00aabcc0056c209fae4e" translate="yes" xml:space="preserve">
          <source>Any widgets that are allocated more space than their maximum size are allocated the maximum size space they require. (Widgets do not have to have a maximum size in which case the stretch factor is their determining factor.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ec52ba691a9ba9643d836e6fe6c41004b78ba5" translate="yes" xml:space="preserve">
          <source>Anyone can define and use new SAX2 properties for their readers. Property support is not mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69f5338bf9291b0633d3eae68c1565675981350" translate="yes" xml:space="preserve">
          <source>Apache License 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272ad9e685e1228658ee42595eeb846548e7e912" translate="yes" xml:space="preserve">
          <source>Apache License 2.0 and BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115f369cd6bbc1de6b73a7c76f06f609a3341d91" translate="yes" xml:space="preserve">
          <source>Apart from some extra overhead at the OS level, running multiple clients may also use more main memory as some parts need to be duplicated once per client. For example, if you run QML, each client requires a separate QML engine. Consequently, if you run a single client that uses Qt Quick Controls, it's loaded once. If you then split this client into multiple clients, you're loading Qt Quick Controls multiple times, resulting in a higher startup cost to initialize your clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f02ac0fe0e12a506b0776423d8cb042114fc5b8" translate="yes" xml:space="preserve">
          <source>Apart from that, QTEST() behaves exactly as &lt;a href=&quot;qtest#QCOMPARE&quot;&gt;QCOMPARE&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d830ce5eb6f9873ad633db644d6abcf2c6477531" translate="yes" xml:space="preserve">
          <source>Apart from the model's constructor, we only need to implement two functions: &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount()&lt;/a&gt; returns the number of rows in the model and &lt;a href=&quot;qabstractitemmodel#data&quot;&gt;data()&lt;/a&gt; returns an item of data corresponding to a specified model index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e549640b0a7b2e25eb4f7119108763267ec68ffb" translate="yes" xml:space="preserve">
          <source>Apart from those already mentioned, the following SAX2 support classes provide additional useful functionality:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73162b1a6cb443bf49e03b6324cabb90aad8448f" translate="yes" xml:space="preserve">
          <source>AppConfigLocation</source>
          <target state="translated">AppConfigLocation</target>
        </trans-unit>
        <trans-unit id="97db1bd0cd16dce76e6c31c4d232cbc31e21dfbd" translate="yes" xml:space="preserve">
          <source>AppDataLocation</source>
          <target state="translated">AppDataLocation</target>
        </trans-unit>
        <trans-unit id="81c61546c4f299cc26f222613063021f1e26900e" translate="yes" xml:space="preserve">
          <source>AppID</source>
          <target state="translated">AppID</target>
        </trans-unit>
        <trans-unit id="9f2f127f5e6a40c113464c4cfac524cee055f3bc" translate="yes" xml:space="preserve">
          <source>AppIcon29x29.png: 29 x 29</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598a6be79bd927b2517261a73ab23ea5865f2435" translate="yes" xml:space="preserve">
          <source>AppIcon29x29@2x.png: 58 x 58</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65155d6cfbeff566d18f05ae4bb64edd24eada91" translate="yes" xml:space="preserve">
          <source>AppIcon29x29@2x~ipad.png: 58 x 58</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2285f0e4fd3876a72b61f0686fcf9a6b9cb18faf" translate="yes" xml:space="preserve">
          <source>AppIcon29x29~ipad.png: 29 x 29</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873cf86dd87cce9fae0f6d468f24e2cfeaea1ef3" translate="yes" xml:space="preserve">
          <source>AppIcon40x40@2x.png: 80 x 80</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317295151bb76449286b1e7d2fcede762b819f1a" translate="yes" xml:space="preserve">
          <source>AppIcon40x40@2x~ipad.png: 80 x 80</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51db7cc3a91954edb2a7fcf9ec14a88685f6398" translate="yes" xml:space="preserve">
          <source>AppIcon40x40~ipad.png: 40 x 40</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3293495cc1408b7bcd3309464943522217139ded" translate="yes" xml:space="preserve">
          <source>AppIcon50x50@2x~ipad.png: 100 x 100</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00949274140590e1fa797e5691b2752e6ef93bf" translate="yes" xml:space="preserve">
          <source>AppIcon50x50~ipad.png: 50 x 50</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fce1d08279102e4a280cb2e165c46d8aa7b198" translate="yes" xml:space="preserve">
          <source>AppIcon57x57.png: 57 x 57</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4c028eade309ca7549a8702a4592cc092b3967" translate="yes" xml:space="preserve">
          <source>AppIcon57x57@2x.png: 114 x 114</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f073e1def18e250ee25b710b439b6981249325e" translate="yes" xml:space="preserve">
          <source>AppIcon60x60@2x.png: 120 x 120</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278fd4f21743789a4b8d8f2ad303efa5cdc66dcc" translate="yes" xml:space="preserve">
          <source>AppIcon72x72@2x~ipad.png: 144 x 144</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240fb500849f8c8782b1861cc34b26e9308c83f8" translate="yes" xml:space="preserve">
          <source>AppIcon72x72~ipad.png: 72 x 72</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5fb0f92ec78e40a98bf173ab250829f75be6b3" translate="yes" xml:space="preserve">
          <source>AppIcon76x76@2x~ipad.png: 152 x 152</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a302ce644160390f6e1a3e68b6d58c1e08bb4a61" translate="yes" xml:space="preserve">
          <source>AppIcon76x76~ipad.png: 76 x 76</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7b89195ca672123e1c703139786445e8d1bad8" translate="yes" xml:space="preserve">
          <source>AppLocalDataLocation</source>
          <target state="translated">AppLocalDataLocation</target>
        </trans-unit>
        <trans-unit id="41def7a0febe741da87c5b79ce78ce27b83f3ae7" translate="yes" xml:space="preserve">
          <source>Appearance</source>
          <target state="translated">Appearance</target>
        </trans-unit>
        <trans-unit id="a3405599774f3b290103fc7d66334ed3abd5f4ec" translate="yes" xml:space="preserve">
          <source>Append &lt;a href=&quot;qt3dinput-qabstractactioninput&quot;&gt;QAbstractActionInput&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83b34b9475520cd06d681908ce8e6fc7aff074c" translate="yes" xml:space="preserve">
          <source>Append &lt;code&gt;&amp;lt;postfix&amp;gt;&lt;/code&gt; to all generated classnames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b8e13904b4ddeaf723a690476345e9240d72e4" translate="yes" xml:space="preserve">
          <source>Append a copy of field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92dda1ca394960a109fc15b419b93eab74ae2f0" translate="yes" xml:space="preserve">
          <source>Append a tag and not append the corresponding tagged value (&lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; produces no diagnostic).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6432299cbce065bf7aa67ff88690182d05c57b2f" translate="yes" xml:space="preserve">
          <source>Append additional meta data to plugins. If a class has &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; specified, the key-value pair will be added to its meta data. This will end up in the Json object that gets resolved for the plugin at run time (accessible from &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt;). This argument is typically used for tagging static plugins with information resolved by the build system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a911032f5372cbf9e6b99ea97cc28000f7635e09" translate="yes" xml:space="preserve">
          <source>Append multiple media content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f17c53fa3096ece126cfeac97dd0e60e2929627" translate="yes" xml:space="preserve">
          <source>Append the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f515e5f5312f22f54389cb07cd769d5da82be2" translate="yes" xml:space="preserve">
          <source>Append the &lt;a href=&quot;qt3dinput-qabstractactioninput&quot;&gt;QAbstractActionInput&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a4b408f847d1d8698abc2b59870a977e8fcd1b" translate="yes" xml:space="preserve">
          <source>Append the media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e0e2bda0c308eeba20f222e479eeeedb4a31c6" translate="yes" xml:space="preserve">
          <source>Append the return value to the result list and then begin the next iteration of the FLWOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076ebe6462d4192b8f6315926ad7a796e3b895af" translate="yes" xml:space="preserve">
          <source>Append too many or too few items to an array or map with explicit length (&lt;a href=&quot;qcborstreamwriter#endMap&quot;&gt;endMap&lt;/a&gt;() and &lt;a href=&quot;qcborstreamwriter#endArray&quot;&gt;endArray&lt;/a&gt;() will return false and &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; will log with &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167de6b2735058224e7740b7823db63ec976cbee" translate="yes" xml:space="preserve">
          <source>Appending</source>
          <target state="translated">Appending</target>
        </trans-unit>
        <trans-unit id="4132139449aa4c87762239b625db311163d9246e" translate="yes" xml:space="preserve">
          <source>Appending Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8df9055e644754be5aa91b45778f165202c5a2f" translate="yes" xml:space="preserve">
          <source>Appending the value of INCLUDEPATH to DEPENDPATH is enabled. Set by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9592e275e673d45ed44c6cf58ee2d1845341704f" translate="yes" xml:space="preserve">
          <source>Appends</source>
          <target state="translated">Appends</target>
        </trans-unit>
        <trans-unit id="cc493c8c618d7ca8deedf4ca2134338d444a07c7" translate="yes" xml:space="preserve">
          <source>Appends a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab87e216b75a661ffd93e0177232efb86b5d5593" translate="yes" xml:space="preserve">
          <source>Appends a CBOR Null value to the stream. This function is equivalent to (and implemented as):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf1cc71f0a5a421587974aec24684cb5950d858" translate="yes" xml:space="preserve">
          <source>Appends a CBOR Null value to the stream. This function is equivalent to (and implemented as): The parameter is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf61cb1b63057b3f95c31447ec376e0b9e5ccfe" translate="yes" xml:space="preserve">
          <source>Appends a CBOR Undefined value to the stream. This function is equivalent to (and implemented as):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98016bdf464795a88914f997433c71ce60fe8916" translate="yes" xml:space="preserve">
          <source>Appends a column containing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fcd55da15a418ad408410db2525d4e64246531" translate="yes" xml:space="preserve">
          <source>Appends a contact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceffe1b17e5a99d0cc18bde2986793da3b04c7f5" translate="yes" xml:space="preserve">
          <source>Appends a coordinate to the list of waypoints. Same coordinate can be set multiple times. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b3be1ee68e8509a966e185d8bbd4ee9c3d9689" translate="yes" xml:space="preserve">
          <source>Appends a list of real values specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7500a4ab98e01b751f88ee244dbe46b003461458" translate="yes" xml:space="preserve">
          <source>Appends a new &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14574bbfa5efe541f643d8ae4148af9ea3bdf2e3" translate="yes" xml:space="preserve">
          <source>Appends a new attribute entry to the list of attributes. The qualified name of the attribute is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df41f664650622bd50f9c478820b25104832c7c" translate="yes" xml:space="preserve">
          <source>Appends a new attribute with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419d01f1e237c3037049e99b41a22386ac8efcfd" translate="yes" xml:space="preserve">
          <source>Appends a new attribute with qualified name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eba6b98b1e703615263bd839df66c822c6d9241" translate="yes" xml:space="preserve">
          <source>Appends a new box-and-whiskers item with the label specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f45bfe468bcd05c8d0a294f66f11bf89777af4" translate="yes" xml:space="preserve">
          <source>Appends a new category to the axis with the label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ff3785f2e92fa845e43352fbbd422913ab7e97" translate="yes" xml:space="preserve">
          <source>Appends a new item to the end of the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aef5163d71d73a64d0a8cfb17e1b8988ee12cef" translate="yes" xml:space="preserve">
          <source>Appends a new paragraph with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08084e616a2e74c006a74d36172ee5069389a99" translate="yes" xml:space="preserve">
          <source>Appends a new row to the current test data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fe5b769f1ea5340af2e0c61580d62768d8cde1" translate="yes" xml:space="preserve">
          <source>Appends a new row to the current test data. The function's arguments are passed to &lt;a href=&quot;qbytearray#qsnprintf&quot;&gt;qsnprintf&lt;/a&gt;() for formatting according to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83458c053ab24e9f0408ec85a1bdd857a38ad821" translate="yes" xml:space="preserve">
          <source>Appends a point with the coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436d5a058920aa94e4596048b32fb7e4f14bf127" translate="yes" xml:space="preserve">
          <source>Appends a record matching the template parameter to the NDEF filter. The record must occur between</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eee2c06bd1f663a5f98bce169107681187786d1" translate="yes" xml:space="preserve">
          <source>Appends a record with type name format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d814bb98c5693f11a305296f646a2a04b636a575" translate="yes" xml:space="preserve">
          <source>Appends a row containing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0295372923a5cf8376a87dfee865162bfb26132c" translate="yes" xml:space="preserve">
          <source>Appends a separator to the menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbcf9080b2e9c91b5cf029e873af306d142df29" translate="yes" xml:space="preserve">
          <source>Appends a single slice with the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9871cfad259b421a78274c189c35a504d63b323" translate="yes" xml:space="preserve">
          <source>Appends item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbc3fd51b23bffa39d2f7c64a285d608ab1a466" translate="yes" xml:space="preserve">
          <source>Appends rows containing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee78b989fdbf0e3b21c26391ace311a496be7341" translate="yes" xml:space="preserve">
          <source>Appends the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc29dede566604d87701bf50b0dec4c8ae899cf3" translate="yes" xml:space="preserve">
          <source>Appends the 64-bit negative value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97eeac24dd55baf501cb64b67107d39c00b0c95" translate="yes" xml:space="preserve">
          <source>Appends the 64-bit signed value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cdda3a1d53292f3cca488eed00b3f59b04fb0c4" translate="yes" xml:space="preserve">
          <source>Appends the 64-bit unsigned value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2808044e3c6f98e8b398360aae2319f2207103" translate="yes" xml:space="preserve">
          <source>Appends the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b2460b6a06a50b625c0072d3a03ddd113f50a5" translate="yes" xml:space="preserve">
          <source>Appends the &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ced031d15de0067b7261d005ab9f073c3975a1" translate="yes" xml:space="preserve">
          <source>Appends the CBOR simple type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745146464ede9e6f967a2ee953aa7387e8feeea5" translate="yes" xml:space="preserve">
          <source>Appends the CBOR tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b9b7bad90a6cc39534ac8ff980c7c4891765a1" translate="yes" xml:space="preserve">
          <source>Appends the Latin-1 string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba6dfd95e19e8c8f25774569414b7d1e0ee744e" translate="yes" xml:space="preserve">
          <source>Appends the action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca7e897849e17def3075d57948f16048b7683e1" translate="yes" xml:space="preserve">
          <source>Appends the actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8c5c013ac78a39b72585e1094ec9205998ac95" translate="yes" xml:space="preserve">
          <source>Appends the argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199cf5e09f364c0ca6d9278d81d38f9e7400e60e" translate="yes" xml:space="preserve">
          <source>Appends the array of slices specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a761ef7e968721844c6643ba48a3580e15e8d67" translate="yes" xml:space="preserve">
          <source>Appends the boolean value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9e708a5916e1a0f830b4c24e6dc75196a179f0" translate="yes" xml:space="preserve">
          <source>Appends the box-and-whiskers item specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aef4fd396ed8c9426b7fbad5a6e36fd48963a42" translate="yes" xml:space="preserve">
          <source>Appends the byte array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f69e3dc63f95c980870ecd63b55df7e3c0ecbfe" translate="yes" xml:space="preserve">
          <source>Appends the character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ba1d713a1a399fdc94cd1ba0b855e56be95025" translate="yes" xml:space="preserve">
          <source>Appends the element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84b66cab5f997344daeab90c993e6ef212f266f" translate="yes" xml:space="preserve">
          <source>Appends the field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef10477be81a6e116d31ee38d38b18fa3727edc6" translate="yes" xml:space="preserve">
          <source>Appends the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d652c2088a0ed256a830c6149c7b7b27f70e3a" translate="yes" xml:space="preserve">
          <source>Appends the floating point number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79568b22e21975ddb797307e09f4a5cef2559e8" translate="yes" xml:space="preserve">
          <source>Appends the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1bbddbeb8629f33ae20a1752703a9515ed5231" translate="yes" xml:space="preserve">
          <source>Appends the given list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401f158b28b90da952e962468177742af68c2f9f" translate="yes" xml:space="preserve">
          <source>Appends the given string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1e87cd25ba418845365ae3753dcd2043816336" translate="yes" xml:space="preserve">
          <source>Appends the given string,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17cac3bc1d88ec10b99cd62ab5e425bf19ef74e2" translate="yes" xml:space="preserve">
          <source>Appends the items of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b6b3c5865e21ab117b12e7f6cd297fc05ceef3" translate="yes" xml:space="preserve">
          <source>Appends the list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6f1ce06c989a50750a3fb441c3e20064733ec6" translate="yes" xml:space="preserve">
          <source>Appends the list of URLs in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c97ef8b5eaf26c6aa86e5425c05f780518fb65" translate="yes" xml:space="preserve">
          <source>Appends the list of real values specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55c3405a447e5f821915af83bea2d453640066b" translate="yes" xml:space="preserve">
          <source>Appends the new value specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409122878989c3ea90888864d5f3bfc5544f12fb" translate="yes" xml:space="preserve">
          <source>Appends the pair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8834c20516e935e6b62ac4bf9289b837de8f78f8" translate="yes" xml:space="preserve">
          <source>Appends the primitive value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9824bd350ebdf0d2049a00db17b49a23162e407" translate="yes" xml:space="preserve">
          <source>Appends the slice specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa2233d0dab368dd922888b3389cbe7919a3832" translate="yes" xml:space="preserve">
          <source>Appends the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7866d8f197c27a75e2eb2a0007443ddb1e9bb3" translate="yes" xml:space="preserve">
          <source>Appends the string reference to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dc5b9ae7f6b2b56d8e15489912c0b8d02684f2" translate="yes" xml:space="preserve">
          <source>Appends the string section referenced by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3922276f2a447219f8bcffbd68984402c6c40c2" translate="yes" xml:space="preserve">
          <source>Appends the text string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd680954a13e44ffa9519b367d4079ec2686a8d2" translate="yes" xml:space="preserve">
          <source>Apple Icon Image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e200660f3a20124c7833ad7dd9bbe7b44c09aa98" translate="yes" xml:space="preserve">
          <source>Apple Platforms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2686709a69821ae6b7fc89091ab7592b473eab26" translate="yes" xml:space="preserve">
          <source>Apple platforms have a built-in way to express the OS versions that an application supports, which allows older versions of the platforms to automatically display a user friendly error message prompting the user to update their OS, as opposed to crashing and displaying a stack trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="eb6c683f59e1d264268f24340ac89a8532c9ef4f" translate="yes" xml:space="preserve">
          <source>Application Assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3925a6e948fb7872d335532f8d20c939d631d4b3" translate="yes" xml:space="preserve">
          <source>Application Identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e40172027d30d86e935e6ff42f79ecaa6d203f8" translate="yes" xml:space="preserve">
          <source>Application Main Window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7323247f5a7af4bbcd10e86002151d0465b9432" translate="yes" xml:space="preserve">
          <source>Application Menu | About &amp;lt;application name&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1be79e8ee065a818733b399c26489b5f4f3890" translate="yes" xml:space="preserve">
          <source>Application Menu | Preferences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80be2254170a3f07b62935e4c6b062e51cc4ff4" translate="yes" xml:space="preserve">
          <source>Application Menu | Quit &amp;lt;application name&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ff2241133976524c32f4d2feb3fe63e5446b40" translate="yes" xml:space="preserve">
          <source>Application Package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e36eadcb2a449b1f19d57b5ea5d9acbd25dee9" translate="yes" xml:space="preserve">
          <source>Application Window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec97012deefee9b415f6ac7443c6b16207ccc9b4" translate="yes" xml:space="preserve">
          <source>Application Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b07d4b0e283482066da7b843356ed2ed30e7d9" translate="yes" xml:space="preserve">
          <source>Application and Library Paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d662d9592fc02d08b355d05e7553efcf33a09cdf" translate="yes" xml:space="preserve">
          <source>Application and user interface components need to communicate with each other. For example, a button needs to know that the user has clicked on it. The button may change colors to indicate its state or perform some logic. As well, application needs to know whether the user is clicking the button. The application may need to relay this clicking event to other applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a8864c4e56a9311281082b309aaba577a102c9" translate="yes" xml:space="preserve">
          <source>Application cursors are stored on an internal stack. setOverrideCursor() pushes the cursor onto the stack, and &lt;a href=&quot;qguiapplication#restoreOverrideCursor&quot;&gt;restoreOverrideCursor&lt;/a&gt;() pops the active cursor off the stack. &lt;a href=&quot;qguiapplication#changeOverrideCursor&quot;&gt;changeOverrideCursor&lt;/a&gt;() changes the curently active application override cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f6d0abb946799b96e062063a34b2aa12972844" translate="yes" xml:space="preserve">
          <source>Application developers need not concern themselves with the &lt;a href=&quot;qplacemanagerengine&quot;&gt;QPlaceManagerEngine&lt;/a&gt;. Backend implementers however will need to derive from &lt;a href=&quot;qplacemanagerengine&quot;&gt;QPlaceManagerEngine&lt;/a&gt; and provide implementations for the abstract virtual functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead52ddb0ec69d17eee07cf54886c13d415aaec6" translate="yes" xml:space="preserve">
          <source>Application display name and identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f113ade799bd38f0451572e87264647cc7bb122" translate="yes" xml:space="preserve">
          <source>Application override cursors are intended for showing the user that the application is in a special state, for example during an operation that might take some time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc0e785d1629568c19d71c4b7f71420d00ee4b4" translate="yes" xml:space="preserve">
          <source>Application settings may be divided into logical categories by specifying a category name via the &lt;a href=&quot;qml-qt-labs-settings-settings#category-prop&quot;&gt;category&lt;/a&gt; property. Using logical categories not only provides a cleaner settings structure, but also prevents possible conflicts between setting keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c72b8d84634fbe058060b21c62e1c9e80f9ff8" translate="yes" xml:space="preserve">
          <source>Application specific settings are identified by providing application &lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;name&lt;/a&gt;, &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organization&lt;/a&gt; and &lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;domain&lt;/a&gt;, or by specifying &lt;a href=&quot;qml-qt-labs-settings-settings#fileName-prop&quot;&gt;fileName&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c2cb698337bc42ffb9296aee16eab2d7bd5775" translate="yes" xml:space="preserve">
          <source>Application-specific directories should be assumed to be unreachable by other applications. Therefore, files placed there might not be readable by other applications, even if run by the same user. On the other hand, generic directories should be assumed to be accessible by all applications run by this user, but should still be assumed to be unreachable by applications by other users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8f045797552418a8690112f95575d587db6060" translate="yes" xml:space="preserve">
          <source>ApplicationWindow</source>
          <target state="translated">ApplicationWindow</target>
        </trans-unit>
        <trans-unit id="c87139b68e490b101ffc0b3eb9df171948283af1" translate="yes" xml:space="preserve">
          <source>ApplicationWindow (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95086c6e38bdb25419952e7314b6109566d2d56" translate="yes" xml:space="preserve">
          <source>ApplicationWindow Control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc56ecd855b87102edd0fd3a6d77254d3a98dce" translate="yes" xml:space="preserve">
          <source>ApplicationWindow QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888d241fa21d518451d070595340a905c619e2b2" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.activeFocusControl</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.activeFocusControl</target>
        </trans-unit>
        <trans-unit id="1cc95b142b11a5aeb21eb7bedb9aac08fcc1f487" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.contentItem</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.contentItem</target>
        </trans-unit>
        <trans-unit id="89aa83aa2977e2c1cc61c04d32b76a65cc25c987" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.footer</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.footer</target>
        </trans-unit>
        <trans-unit id="dd2a0fbfd577f55dc072597072eb7558116685a3" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.header</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.header</target>
        </trans-unit>
        <trans-unit id="6f988730af7f806beb7f123311d2922a2f18b648" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.menuBar</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.menuBar</target>
        </trans-unit>
        <trans-unit id="ec54ddc1158ba5e16ba27dc0389fde155dd7e8ab" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.ApplicationWindow.window</source>
          <target state="translated">ApplicationWindow.ApplicationWindow.window</target>
        </trans-unit>
        <trans-unit id="6cfde3fcc08dc96da4abd5095a1cd0b4569969a0" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.activeFocusControl</source>
          <target state="translated">ApplicationWindow.activeFocusControl</target>
        </trans-unit>
        <trans-unit id="09fe9cbca9b602e7353c054fc918fa1d4429abbc" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.background</source>
          <target state="translated">ApplicationWindow.background</target>
        </trans-unit>
        <trans-unit id="861ba6559d7bcc0e9a30f2f9165906c7a7260bbe" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.contentData</source>
          <target state="translated">ApplicationWindow.contentData</target>
        </trans-unit>
        <trans-unit id="d692622db50a435b99a17eb17567d54dbad5a58e" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.contentItem</source>
          <target state="translated">ApplicationWindow.contentItem</target>
        </trans-unit>
        <trans-unit id="7383cfc654ff6281b007a4f0bcd4bf368f411cbf" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.font</source>
          <target state="translated">ApplicationWindow.font</target>
        </trans-unit>
        <trans-unit id="6d862d0b9ce6a1725648f04f1f912e049fd5c4b9" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.footer</source>
          <target state="translated">ApplicationWindow.footer</target>
        </trans-unit>
        <trans-unit id="1b9a1ceea5079934160b1f80ca19f833a3c292ac" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.header</source>
          <target state="translated">ApplicationWindow.header</target>
        </trans-unit>
        <trans-unit id="6d15a64960ebc299e13a6f71149ccb206edc6421" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.locale</source>
          <target state="translated">ApplicationWindow.locale</target>
        </trans-unit>
        <trans-unit id="468c197b3f8ebb751e955786acdf2d61664d6feb" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.menuBar</source>
          <target state="translated">ApplicationWindow.menuBar</target>
        </trans-unit>
        <trans-unit id="04b875225bd0bcae0b0d60cee19ec992c976457c" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.palette</source>
          <target state="translated">ApplicationWindow.palette</target>
        </trans-unit>
        <trans-unit id="ad6e44ef2a32b1c37940943d252c5ab781f71c5a" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.statusBar</source>
          <target state="translated">ApplicationWindow.statusBar</target>
        </trans-unit>
        <trans-unit id="c13894c28725e64375ac98bc82fe0581bcfe5748" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.style</source>
          <target state="translated">ApplicationWindow.style</target>
        </trans-unit>
        <trans-unit id="186ff5ca97b7321346cfc2505ec6824e39691249" translate="yes" xml:space="preserve">
          <source>ApplicationWindow.toolBar</source>
          <target state="translated">ApplicationWindow.toolBar</target>
        </trans-unit>
        <trans-unit id="610902bd2173043cf5bf7bc6cecd73bae70b7f4b" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle</source>
          <target state="translated">ApplicationWindowStyle</target>
        </trans-unit>
        <trans-unit id="f08f614ed810905ce69136905eeda68e1bf41ca2" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c67eea9c15549344f9926fc2ee453a3bcd0108c" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c3c063a4401b0a04c531790dd15dc65222d83d" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle.background</source>
          <target state="translated">ApplicationWindowStyle.background</target>
        </trans-unit>
        <trans-unit id="e8d68389d631dbb69c6e4b41afaa72afe2a65467" translate="yes" xml:space="preserve">
          <source>ApplicationWindowStyle.control</source>
          <target state="translated">ApplicationWindowStyle.control</target>
        </trans-unit>
        <trans-unit id="67a434eb21e1c7f1252ffeb7632d243814ba65a2" translate="yes" xml:space="preserve">
          <source>Applications can access Qt Sensors using QML or C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6079d99f066e0baf888f83c2ba22f55f832eb161" translate="yes" xml:space="preserve">
          <source>Applications can also communicate with each other by putting data on the clipboard. To access this, you need to obtain a &lt;a href=&quot;qclipboard&quot;&gt;QClipboard&lt;/a&gt; object from the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d31cb1a98a04153cfdddc87dda3d949e2d73e0" translate="yes" xml:space="preserve">
          <source>Applications can connect to the &lt;a href=&quot;qnearfieldmanager#targetDetected&quot;&gt;targetDetected&lt;/a&gt;() and &lt;a href=&quot;qnearfieldmanager#targetLost&quot;&gt;targetLost&lt;/a&gt;() signals to get notified when an NFC Forum Tag enters or leaves proximity. Before these signals are emitted target detection must be started with the &lt;a href=&quot;qnearfieldmanager#startTargetDetection&quot;&gt;startTargetDetection&lt;/a&gt;() function. Target detection can be stopped with the &lt;a href=&quot;qnearfieldmanager#stopTargetDetection&quot;&gt;stopTargetDetection&lt;/a&gt;() function. Before a detected target can be accessed it is necessary to request access rights. This must be done before the target device is touched. The &lt;a href=&quot;qnearfieldmanager#setTargetAccessModes&quot;&gt;setTargetAccessModes&lt;/a&gt;() function is used to set the types of access the application wants to perform on the detected target. When access is no longer required the target access modes should be set to &lt;a href=&quot;qnearfieldmanager#TargetAccessMode-enum&quot;&gt;NoTargetAccess&lt;/a&gt; as other applications may be blocked from accessing targets. The current target access modes can be retried with the &lt;a href=&quot;qnearfieldmanager#targetAccessModes&quot;&gt;targetAccessModes&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70d1194e4746360c3ce21e9a8092718d4f4e070" translate="yes" xml:space="preserve">
          <source>Applications can embed a toolbar in the thumbnail of a window, which is shown when hovering over its taskbar icon. A thumbnail toolbar may provide quick access to the commands of a window without requiring the user to restore or activate the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dd2c54a9a414c1623cd4cada970a3445e64d09" translate="yes" xml:space="preserve">
          <source>Applications can expose actions, which can be invoked by the client. In order to support actions in an object, inherit the &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d672e8996b07b30355857210c8aef0a1d48da253" translate="yes" xml:space="preserve">
          <source>Applications can prohibit the use of touch events in the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10a9b5fb0eb3c5c12498c82a7e609551d9488f1" translate="yes" xml:space="preserve">
          <source>Applications can respond to these events to know when the underlying platform surface exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fe341b33fdce03cda50b78c1577c4129900c8a" translate="yes" xml:space="preserve">
          <source>Applications can share NDEF data or file content using NFC technology by tapping two NFC-enabled devices together. The &lt;a href=&quot;qnearfieldsharemanager&quot;&gt;QNearFieldShareManager&lt;/a&gt; provides a high level entry point to access this functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900064092b3ec48b518040eb62887303671f6908" translate="yes" xml:space="preserve">
          <source>Applications do not have access to system fonts. Font files must be distributed with the application, for example in Qt resources. Qt for WebAssembly itself embeds one such font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b614e23b443a76e1a13c29fee410cb259b4948c6" translate="yes" xml:space="preserve">
          <source>Applications may choose a specific &lt;a href=&quot;http://developer.android.com/design/style/themes.html&quot;&gt;Android theme&lt;/a&gt; by specifying it in &lt;a href=&quot;https://doc.qt.io/qt-5.13/deployment-android.html#androidmanifest-xml&quot;&gt;AndroidManifest.xml&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670f4431db3fed86bc7c7375afec7853136f2847" translate="yes" xml:space="preserve">
          <source>Applications may connect to the &lt;a href=&quot;qnetworksession#preferredConfigurationChanged&quot;&gt;preferredConfigurationChanged&lt;/a&gt;() signal in order to receive notifications when a more suitable access point becomes available. In response to this signal the application must either initiate the roaming via &lt;a href=&quot;qnetworksession#migrate&quot;&gt;migrate&lt;/a&gt;() or &lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;() the new access point. Once the session has roamed the &lt;a href=&quot;qnetworksession#newConfigurationActivated&quot;&gt;newConfigurationActivated&lt;/a&gt;() signal is emitted. The application may now test the carrier and must either &lt;a href=&quot;qnetworksession#accept&quot;&gt;accept&lt;/a&gt;() or &lt;a href=&quot;qnetworksession#reject&quot;&gt;reject&lt;/a&gt;() it. The session will return to the previous access point if the roaming was rejected. The subsequent state diagram depicts the required state transitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0940283d47a16a6344d8ca45e49cbb8eea19ca4a" translate="yes" xml:space="preserve">
          <source>Applications may use this signal to release resources, but should be prepared to reinstantiated them again fast. The scene graph and the graphics context are not released at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c10cc2fc1360376d79bd2eb89cacb2d0bb94e4" translate="yes" xml:space="preserve">
          <source>Applications mostly work with device independent pixels. Notable exceptions are OpenGL and code that works with raster graphics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa1eb877fb0a208fad515b23788ec731ad9384c" translate="yes" xml:space="preserve">
          <source>Applications must adapt to situations where users have multiple displays with varying resolution. For example, they might use a 4K monitor for the document window of an image editor and a low resolution monitor for the tool box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbff14fdf9952d9d1de0b5b17d977cd90f60a7ff" translate="yes" xml:space="preserve">
          <source>Applications run in fullscreen mode only (see &lt;a href=&quot;qstylehints&quot;&gt;QStyleHints&lt;/a&gt;). On desktop, the screen size varies as the application is resized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e624b3f0c05be2a737d939d1b457fea3542a177" translate="yes" xml:space="preserve">
          <source>Applications should act on this signal at their own discretion. The data provided by the model could be out of date and so the model should be reupdated sometime, however an immediate reupdate may be disconcerting to users if the categories change without any action on their part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4283087e120f502c2fff9fbb65d942153b802b3" translate="yes" xml:space="preserve">
          <source>Applications should check this property to determine whether positioning is available and enabled on the runtime platform, and react accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e84f9b49f31ef4ca100c7417ad56468763e5e9" translate="yes" xml:space="preserve">
          <source>Applications should connect to this signal if they wish to handle errors, like OpenGL context creation failures, in a custom way. When no slot is connected to the signal, the behavior will be different: Quick will print the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4348998c86ba193bc58a864ecaa92bbe12d6a7" translate="yes" xml:space="preserve">
          <source>Applications should connect to this signal if they wish to handle errors, like graphics context creation failures, in a custom way. When no slot is connected to the signal, the behavior will be different: Quick will print the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be63e02443edb75de24d5a1d221f77a1dfd6f7d" translate="yes" xml:space="preserve">
          <source>Applications should not exit programmatically. In particular, calling exit() before the UI is shown causes a crash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078f11fb40841f98a21ebbc9f244eee4d9ec8068" translate="yes" xml:space="preserve">
          <source>Applications should only use further values if a corresponding specification has been published, otherwise interpretation and validation by the remote may fail. Values 24 to 31 are reserved and must not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e0d4410ba26ad8270df753b5bd3ada94b1aba4" translate="yes" xml:space="preserve">
          <source>Applications should use the Asynchronous incubation mode to create objects that are not needed immediately. For example, the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; type uses Asynchronous incubation to create objects that are slightly off screen while the list is being scrolled. If, during asynchronous creation, the object is needed immediately the &lt;a href=&quot;qqmlincubator#forceCompletion&quot;&gt;QQmlIncubator::forceCompletion&lt;/a&gt;() method can be called to complete the creation process synchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbec31f7dd373771a9c631da6a9a11a1d574189" translate="yes" xml:space="preserve">
          <source>Applications submitted to the App Store must be code-signed with the App Sandbox feature enabled. The App Sandbox feature interferes with Chromium's own sandbox initialization, which results in Chromium not being properly initialized. This also ties in with the private API usage. Furthermore, standalone Chromium itself is not officially tested with the App Sandbox enabled, and even if work is done to bypass the App Store's restrictions, that would not guarantee correct behavior of the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3f209f93d2eeb87b946ddc82a7bd59829a0509" translate="yes" xml:space="preserve">
          <source>Applications that define &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; (as explained in the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; documentation) don't have access to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;'s &lt;code&gt;const char *&lt;/code&gt; API. To provide an efficient way of specifying constant Latin-1 strings, Qt provides the &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;, which is just a very thin wrapper around a &lt;code&gt;const char *&lt;/code&gt;. Using &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;, the example code above becomes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3730dd0b0eedc7b541372ab0bf269065e8298df" translate="yes" xml:space="preserve">
          <source>Applications that require &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; not to fall back to non-cryptographic quality generators are advised to check their operating system documentation or restrict their deployment to one of the above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073297d1e5bdb771ff14f2cc14a050dd7dfb9317" translate="yes" xml:space="preserve">
          <source>Applications typically subclass both &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; and &lt;a href=&quot;qvulkanwindowrenderer&quot;&gt;QVulkanWindowRenderer&lt;/a&gt;. The former allows handling events, for example, input, while the latter allows implementing the Vulkan resource management and command buffer building that make up the application's rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbb644ec321c502bbcdb383add66b0077763218" translate="yes" xml:space="preserve">
          <source>Applications using Qt WebEngine are not compatible with the Mac App Store, because:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ddb28194a7d5e0a4f541b14d76165df576b59a" translate="yes" xml:space="preserve">
          <source>Applications using Qt XML Patterns are subject to the same limitations of software as other systems. Generally, these can not be checked. This means Qt XML Patterns does not prevent rogue queries from consuming too many resources. For example, a query could take too much time to execute or try to transfer too much data. A query could also do too much recursion, which could crash the system. XQueries can do these things accidentally, but they can also be done as deliberate denial of service attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a5a2d4c29949b7fe6ee2de6905bb4ee56ab2aa" translate="yes" xml:space="preserve">
          <source>Applications using UI designs with fixed coordinates look small. The combination of font size specification in points and other sizes in pixels is particularly problematic since points are independent of the monitor resolution. For example, a frame of 40x20 pixels around the text &quot;hello&quot; using a 12pt font looks correct on low resolution monitors, but the frame will be too small on high DPI monitors, causing the text to be clipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380bc95783790db84b1676f9fd59fcdb97de0dd1" translate="yes" xml:space="preserve">
          <source>Applications which uses the &lt;a href=&quot;qml-qtpurchasing-store#restorePurchases-method&quot;&gt;restorePurchases()&lt;/a&gt; function should include this handler in all unlockable products. In the handler, the application should make sure information about the purchase is stored and call &lt;a href=&quot;qml-qtpurchasing-transaction#finalize-method&quot;&gt;finalize()&lt;/a&gt; on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0521744f52d365e3307bd93bcc82758be330e281" translate="yes" xml:space="preserve">
          <source>Applications which want to define custom MIME types need to install an XML file into the locations searched for MIME definitions. These locations can be queried with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643c58c67234f5f4367ed166266328a7e31f29f5" translate="yes" xml:space="preserve">
          <source>Applications will usually have to connect to 4 important signals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35b605509788df3a9d880763122cf2f62fc55a4" translate="yes" xml:space="preserve">
          <source>Applications with a monochrome background should set it using &lt;a href=&quot;qquickwindow#color-prop&quot;&gt;QQuickWindow::setColor&lt;/a&gt;() rather than using a top-level Rectangle item. &lt;a href=&quot;qquickwindow#color-prop&quot;&gt;QQuickWindow::setColor&lt;/a&gt;() will be used in a call to &lt;code&gt;glClear()&lt;/code&gt;, which is potentially faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438d6d1831736d014296c8d54a1b862dfdba748d" translate="yes" xml:space="preserve">
          <source>ApplicationsLocation</source>
          <target state="translated">ApplicationsLocation</target>
        </trans-unit>
        <trans-unit id="1d46e73504253261f8b269d5dbc0432ad20874f5" translate="yes" xml:space="preserve">
          <source>Applies</source>
          <target state="translated">Applies</target>
        </trans-unit>
        <trans-unit id="866badc20ca4d7b59d2c8e8252dd02e41bd75f15" translate="yes" xml:space="preserve">
          <source>Applies a blur effect with a varying intesity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd15aa7f69872ceb66c170f8b521a185f792fdf" translate="yes" xml:space="preserve">
          <source>Applies a blur effect with a varying intesity. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0dc4a3e6cf0dcbfd303c3f99a11aa53a0dbcac" translate="yes" xml:space="preserve">
          <source>Applies a change to the document. This function must be implemented in the derived class. Calling &lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack::push&lt;/a&gt;(), &lt;a href=&quot;qundostack#undo&quot;&gt;QUndoStack::undo&lt;/a&gt;() or &lt;a href=&quot;qundostack#redo&quot;&gt;QUndoStack::redo&lt;/a&gt;() from this function leads to undefined beahavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130096e9d49176b1a46e06394e6e99004a4b027a" translate="yes" xml:space="preserve">
          <source>Applies a fast blur effect to one or more source items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a1caff37bd4683d67fb3d65b6b7d00af7d5f9c" translate="yes" xml:space="preserve">
          <source>Applies a fast blur effect to one or more source items. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae4ebb1121d0eab057488fbbc33a0f69f24b70d" translate="yes" xml:space="preserve">
          <source>Applies a higher quality blur effect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea65603eef710f0893a7d775de55f9147e6d4996" translate="yes" xml:space="preserve">
          <source>Applies a higher quality blur effect. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f684381c852d2c9db98d6a25eff451aee18f09a" translate="yes" xml:space="preserve">
          <source>Applies alterations to the attributes of logical particles at any point in their lifetime. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0f1851b37b25fc017626674dee0c14196cf6a0" translate="yes" xml:space="preserve">
          <source>Applies blur effect to the specified direction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fb2d57667df6bf937b731698c98a99872d16a5" translate="yes" xml:space="preserve">
          <source>Applies blur effect to the specified direction. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2375a9296e06ee3ef9a341df4824e9ae9faba052" translate="yes" xml:space="preserve">
          <source>Applies custom shaders to a rectangle. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f701de2b3385c7371ffd9cb491289012e2f92ee9" translate="yes" xml:space="preserve">
          <source>Applies directional blur effect towards source items center point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d53a560cc390357ae0e7ff09ee2b4afad91fcfd" translate="yes" xml:space="preserve">
          <source>Applies directional blur effect towards source items center point. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0375ce8613278b8810ba2dd94f90724c703fbb59" translate="yes" xml:space="preserve">
          <source>Applies directional blur in a circular direction around the items center point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976ce34010e87136dba4df813878be42eed3763c" translate="yes" xml:space="preserve">
          <source>Applies directional blur in a circular direction around the items center point. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54e2077e74673a2d0dc0953d8710eaa1e87ffdc" translate="yes" xml:space="preserve">
          <source>Applies only to axes that support minor grid lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277870d1f2dd450ab431f72aad0ac4d9b775c11c" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;qregion#intersected&quot;&gt;intersected&lt;/a&gt;() function to this region and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f9bb66b0d768a797a0cbe1dd827879ca63fe9a" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;qregion#subtracted&quot;&gt;subtracted&lt;/a&gt;() function to this region and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e444215913626b026e8a170e34d8527f76b5dc" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;qregion#united&quot;&gt;united&lt;/a&gt;() function to this region and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9743edf949aafc1468bf758297f81e0fb0c8a64f" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;qregion#xored&quot;&gt;xored&lt;/a&gt;() function to this region and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c849d9dd2f98b402af18dbc16b9606bda5c474" translate="yes" xml:space="preserve">
          <source>Applies the selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfea419c3b4e8b02ee586e70a28bf846e44cdda4" translate="yes" xml:space="preserve">
          <source>Apply</source>
          <target state="translated">Apply</target>
        </trans-unit>
        <trans-unit id="16711b6efd8ea96c8782439f671909aa55f27759" translate="yes" xml:space="preserve">
          <source>Apply all automatic formatting. Currently only automatic bullet lists are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9502ac0373000c8701724e89336c56dd0f6df065" translate="yes" xml:space="preserve">
          <source>Apply this macro to declarations of member functions to allow them to be invoked via the meta-object system. The macro is written before the return type, as shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbb382a462106b7b4d33047fe5aaa2c87a3481f" translate="yes" xml:space="preserve">
          <source>Apply this macro to declarations of member functions to tag them with a revision number in the meta-object system. The macro is written before the return type, as shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476a543e021c8a81c9d9ab17f8fe1dd834f78c91" translate="yes" xml:space="preserve">
          <source>Applying mirroring in this manner does not change the actual value of the relevant anchor, &lt;code&gt;layoutDirection&lt;/code&gt; or &lt;code&gt;horizontalAlignment&lt;/code&gt; properties. The separate read-only property &lt;code&gt;effectiveLayoutDirection&lt;/code&gt; can be used to query the effective layout direction of positioners and model views that takes the mirroring into account. Similarly the &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; types have gained the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; for querying the effective visual alignment of text. For anchors, the read only &lt;a href=&quot;qml-qtquick-item#anchors.top-prop&quot;&gt;anchors.mirrored&lt;/a&gt; property reflects whether anchors have been mirrored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba446e866948fe090bc99358baa64d4a742d932" translate="yes" xml:space="preserve">
          <source>Applying the &lt;code&gt;[1]&lt;/code&gt; filter to the &lt;code&gt;/span&lt;/code&gt; step returns the first &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element of each &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451cefdac5dd0124a1e28cab04fd9c1054424a49" translate="yes" xml:space="preserve">
          <source>Approaches to Binding Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69be4bf88eeab6713e92fc9f8e3d6d37f1982528" translate="yes" xml:space="preserve">
          <source>April (3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644abaa7258ab02f926a338360e1d1d6895f953c" translate="yes" xml:space="preserve">
          <source>Aqua</source>
          <target state="translated">Aqua</target>
        </trans-unit>
        <trans-unit id="2d91dd4d3929f64eb1b05b72cf83115c9f95c550" translate="yes" xml:space="preserve">
          <source>Aqua is an essential part of the macOS platform. As with Cocoa and Carbon, Qt provides widgets that look like those described in the Human Interface Descriptions. Qt's widgets use HIThemes to implement the look and feel. In other words, we use Apple's own APIs for doing the rendering. More documentation about Aqua is found at the macOS Human Interface Guidelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4f4762f9bd3f0f4a10caf5b6e63dc4ce543724" translate="yes" xml:space="preserve">
          <source>Arabic</source>
          <target state="translated">Arabic</target>
        </trans-unit>
        <trans-unit id="d5c9a17b4395c52e43c58e3f041e32d12c8e4497" translate="yes" xml:space="preserve">
          <source>Arabic Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c41d518fdc3d17322018b87c66d135e50d626a1" translate="yes" xml:space="preserve">
          <source>Arabic input mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fff8708561b49f1a3307ef00025f8d5b7fb8e3" translate="yes" xml:space="preserve">
          <source>Arbitrary data can be represented as properties on the &lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; subclass and on the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; instances passed to its signals. What exactly these properties and signals are, is up to the individual video filters. Completion of the operations can be indicated by signals. Computations that do not result in a modified image will pass the input image through so that subsequent filters can be placed after them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2701072f67f3cbdf7c24b7d3d52105f4ae3ff2" translate="yes" xml:space="preserve">
          <source>Arbitrary simple values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479ffb29f16c0d45fca6818b1d1543d24f691407" translate="yes" xml:space="preserve">
          <source>ArchData</source>
          <target state="translated">ArchData</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="a10f3b5aa08c9646632d8e35bf3374804be6df80" translate="yes" xml:space="preserve">
          <source>Architectures</source>
          <target state="translated">Architectures</target>
        </trans-unit>
        <trans-unit id="535b9a2f1700c0937442185b5600be479b6a9cf4" translate="yes" xml:space="preserve">
          <source>Area containing the label (icon with text or pixmap).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec6abab8a9a760983d28530991e834f769f7923" translate="yes" xml:space="preserve">
          <source>Area for a frame's contents using the shape in &lt;a href=&quot;qstyleoptionframe&quot;&gt;QStyleOptionFrame&lt;/a&gt;; see &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd1fe1ed390abf0c32ec5cff51aefc721d0619c" translate="yes" xml:space="preserve">
          <source>Area for a frame's contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996cbef1591c035a58ca746148709b27c620fa4c" translate="yes" xml:space="preserve">
          <source>Area for a line edit's contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d625f2177641e83922107fa8fe0945c1a234ac" translate="yes" xml:space="preserve">
          <source>Area for a toolbox tab's icon and label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38039cebc9a972903879e00ec75b44c25bcac759" translate="yes" xml:space="preserve">
          <source>Area for a view item's check mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a206cb54f2e2e7c7088d52bc80d8c3f70d71f2" translate="yes" xml:space="preserve">
          <source>Area for a view item's decoration (icon).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15c344347ca6330e5a3e4b9a6a791a3eb072540" translate="yes" xml:space="preserve">
          <source>Area for a view item's focus rect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71210b90ac09cb96b804c1b99fce169916fd2e3" translate="yes" xml:space="preserve">
          <source>Area for a view item's text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13c2fc8f77c8fac60c5301fb7aff26d7bf46de1" translate="yes" xml:space="preserve">
          <source>Area for a widget on the left side of a tab in a tab bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d149dee448fb590f234c497fe4a512c07a797416" translate="yes" xml:space="preserve">
          <source>Area for a widget on the right side of a tab in a tab bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22560181ca881597d004e6fcb18b916d937f69f" translate="yes" xml:space="preserve">
          <source>Area for the actual disclosure item in a tree branch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606a1d29814a7245a7c24bcf223ba372fb9da815" translate="yes" xml:space="preserve">
          <source>Area for the contents of the tab widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcd28540d30cc262211b77e0c45ed166ba05a4f" translate="yes" xml:space="preserve">
          <source>Area for the focus indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecd2bd4ef6aaaa02323b7b4dc790d554c0186af" translate="yes" xml:space="preserve">
          <source>Area for the focus rect (usually larger than the contents rect).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69799701a78a828138095c10e3057576ccfe936" translate="yes" xml:space="preserve">
          <source>Area for the groove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23c53c39dfb3b6826222d61a5977ae62f20d93d" translate="yes" xml:space="preserve">
          <source>Area for the handle of a tool bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01b59bd91f53365fa18f3a47828f70d86ea3b17" translate="yes" xml:space="preserve">
          <source>Area for the label (text or pixmap).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3bcf5d68aff0bc2816cff2bbf7d5e84ffdc0cd" translate="yes" xml:space="preserve">
          <source>Area for the label in a header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65d786b45b3e5f45ec2bf0ccb6678ce3dadad85" translate="yes" xml:space="preserve">
          <source>Area for the label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13ecb0a287b3e2becd310e4ee5944b89c338cc2" translate="yes" xml:space="preserve">
          <source>Area for the left corner widget in a tab widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3039dbda981933bcb4504aac23b93c739b39fd93" translate="yes" xml:space="preserve">
          <source>Area for the pane of a tab widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39635be96b35976e4588212659d747676bb9f02d" translate="yes" xml:space="preserve">
          <source>Area for the progress indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb6285f6cd1d450aa22bf4d4bec5a64af0702bc" translate="yes" xml:space="preserve">
          <source>Area for the right corner widget in a tab widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae81551ca03dbe2287beccf10b7efb541feea9ea" translate="yes" xml:space="preserve">
          <source>Area for the scroll left button on a tab bar with scroll buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d088c29245d46a52e463d46dedf98531b02ecc4" translate="yes" xml:space="preserve">
          <source>Area for the scroll right button on a tab bar with scroll buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf0dbc08aaa6142fa399fca7bf284fdcc8feb99" translate="yes" xml:space="preserve">
          <source>Area for the sort indicator for a header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09112dc0806c916e1f33d0927cc5a1ce510d2dea" translate="yes" xml:space="preserve">
          <source>Area for the state indicator (e.g., check mark).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5920a1ea031d42ebf4c5174cb98e9517ab212d9" translate="yes" xml:space="preserve">
          <source>Area for the state indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9b7423765460500b6a94cf583dd6ac4766da9e" translate="yes" xml:space="preserve">
          <source>Area for the tab bar widget in a tab widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe80f8b3a44ae2160f72af5c86b6e1f0506540e" translate="yes" xml:space="preserve">
          <source>Area for the tear indicator on the left side of a tab bar with scroll arrows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d347bf554c04c8874a811982205338817ec79371" translate="yes" xml:space="preserve">
          <source>Area for the tear indicator on the right side of a tab bar with scroll arrows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998ab79f788929e9b5839a5aed4f09093e3e8720" translate="yes" xml:space="preserve">
          <source>Area for the text label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f689ba2ed61ac45fe27fb3d42434baded3fd85" translate="yes" xml:space="preserve">
          <source>Area for the text on a tab in a tab bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d7de0a3812d9abd5c47796a043a6f0e1c85d4e" translate="yes" xml:space="preserve">
          <source>Area in which MDI windows are displayed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3d757e88061f76b52e980cd1a554f9d06096f3" translate="yes" xml:space="preserve">
          <source>Area that counts for the parent layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93aa9b9e374870c122e716b092248e4e80a303b" translate="yes" xml:space="preserve">
          <source>AreaSeries</source>
          <target state="translated">AreaSeries</target>
        </trans-unit>
        <trans-unit id="b87f5f9f05b6cfc0734e3463fd5f7fb7554362cb" translate="yes" xml:space="preserve">
          <source>AreaSeries (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cac81aee98155eaf540e28dbf266768a7e253a" translate="yes" xml:space="preserve">
          <source>AreaSeries QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082c098d89b3e4390201d833c440f743796b0564" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisAngular</source>
          <target state="translated">AreaSeries.axisAngular</target>
        </trans-unit>
        <trans-unit id="fee028d96d394ff4a51ccff98670410ed21a34d7" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisRadial</source>
          <target state="translated">AreaSeries.axisRadial</target>
        </trans-unit>
        <trans-unit id="efc9c6b7fda89b66e30119f302bd72276c89d3c5" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisX</source>
          <target state="translated">AreaSeries.axisX</target>
        </trans-unit>
        <trans-unit id="2d4c3476487185317a00c9e726baff7dda394cb8" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisXTop</source>
          <target state="translated">AreaSeries.axisXTop</target>
        </trans-unit>
        <trans-unit id="4fa5d1de3ad3d15399e779b058a130d81995955f" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisY</source>
          <target state="translated">AreaSeries.axisY</target>
        </trans-unit>
        <trans-unit id="cdc7d8432bcf7d70579992707186dac42ee475cd" translate="yes" xml:space="preserve">
          <source>AreaSeries.axisYRight</source>
          <target state="translated">AreaSeries.axisYRight</target>
        </trans-unit>
        <trans-unit id="e8ba7c149a49277c3a122eeca497f0d28ab61c32" translate="yes" xml:space="preserve">
          <source>AreaSeries.borderColor</source>
          <target state="translated">AreaSeries.borderColor</target>
        </trans-unit>
        <trans-unit id="1cc7f40779f9908ab2a2e265bc46c8bf15f362a6" translate="yes" xml:space="preserve">
          <source>AreaSeries.borderWidth</source>
          <target state="translated">AreaSeries.borderWidth</target>
        </trans-unit>
        <trans-unit id="6559de9df3daf9b75251aa7a8cf613040cc44fa0" translate="yes" xml:space="preserve">
          <source>AreaSeries.brush</source>
          <target state="translated">AreaSeries.brush</target>
        </trans-unit>
        <trans-unit id="1943573ba843b93576b7fcdea0c4fb11fbd96005" translate="yes" xml:space="preserve">
          <source>AreaSeries.brushFilename</source>
          <target state="translated">AreaSeries.brushFilename</target>
        </trans-unit>
        <trans-unit id="223c5417377c7cbb671cfbbc9d5a9a7ba7ccf83f" translate="yes" xml:space="preserve">
          <source>AreaSeries.clicked()</source>
          <target state="translated">AreaSeries.clicked()</target>
        </trans-unit>
        <trans-unit id="1b2951e0d4d24ce12c15b0f2efcdcfe2a5d0734c" translate="yes" xml:space="preserve">
          <source>AreaSeries.color</source>
          <target state="translated">AreaSeries.color</target>
        </trans-unit>
        <trans-unit id="27f9e34e748082203b16fef220f45bb36d34682b" translate="yes" xml:space="preserve">
          <source>AreaSeries.doubleClicked()</source>
          <target state="translated">AreaSeries.doubleClicked()</target>
        </trans-unit>
        <trans-unit id="19de277cccd3cba00c831f43a504a4f08a05a48a" translate="yes" xml:space="preserve">
          <source>AreaSeries.hovered()</source>
          <target state="translated">AreaSeries.hovered()</target>
        </trans-unit>
        <trans-unit id="9df8002f9f61b9cddbf2f8415dd6d47ca1595c2d" translate="yes" xml:space="preserve">
          <source>AreaSeries.lowerSeries</source>
          <target state="translated">AreaSeries.lowerSeries</target>
        </trans-unit>
        <trans-unit id="eeab19ab0b4b35b1ba4556670d75dcba50c4369b" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsClipping</source>
          <target state="translated">AreaSeries.pointLabelsClipping</target>
        </trans-unit>
        <trans-unit id="386fc6e15ef1c63c5f220eb802ab892cfce51ff9" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsColor</source>
          <target state="translated">AreaSeries.pointLabelsColor</target>
        </trans-unit>
        <trans-unit id="9bd6dbac99e9e14fc587b100f99576c092f10c9e" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsFont</source>
          <target state="translated">AreaSeries.pointLabelsFont</target>
        </trans-unit>
        <trans-unit id="d9178cd1d5a2aff5519dfa119addac0dab96007f" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsFormat</source>
          <target state="translated">AreaSeries.pointLabelsFormat</target>
        </trans-unit>
        <trans-unit id="7aab9ef51bb0d411fd6cc56a18cdeb40bae301e2" translate="yes" xml:space="preserve">
          <source>AreaSeries.pointLabelsVisible</source>
          <target state="translated">AreaSeries.pointLabelsVisible</target>
        </trans-unit>
        <trans-unit id="0da30bafeb2841f449ced3e210a2820744d84afc" translate="yes" xml:space="preserve">
          <source>AreaSeries.pressed()</source>
          <target state="translated">AreaSeries.pressed()</target>
        </trans-unit>
        <trans-unit id="6cec7cad3d8160a04a80a655326e7bcd23a65709" translate="yes" xml:space="preserve">
          <source>AreaSeries.released()</source>
          <target state="translated">AreaSeries.released()</target>
        </trans-unit>
        <trans-unit id="b2d3449ed77070c1aa0f6b29dd8bef8ff0b1948b" translate="yes" xml:space="preserve">
          <source>AreaSeries.upperSeries</source>
          <target state="translated">AreaSeries.upperSeries</target>
        </trans-unit>
        <trans-unit id="e082e8656ffbbf09ccdc4b5e8c037b9f54130ed3" translate="yes" xml:space="preserve">
          <source>Areas outside this will be transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab6ebe4bad7044325def8edcab950ba7ccad54d" translate="yes" xml:space="preserve">
          <source>Areas that the route must not cross.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="d94a8e1cd954b8b843be6463a70504f095a33fa0" translate="yes" xml:space="preserve">
          <source>Argument Formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d233a99b3c19dc229c1384324fe9612e1e81a99" translate="yes" xml:space="preserve">
          <source>Argument handling is identical to the respective &lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;() overload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="3d1ab73d494db068b278339299acc2d36f2e0210" translate="yes" xml:space="preserve">
          <source>Arguments are applied to back-facing polygons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c7e52bf2c1c5b609c1c72236dc5b854e008ecb" translate="yes" xml:space="preserve">
          <source>Arguments are applied to both front- and back-facing polygons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d63ba93e5c76bd18855d603fc091e8b843860d" translate="yes" xml:space="preserve">
          <source>Arguments are applied to front-facing polygons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492f20b06638cc0bfa76f34df71f7cdfe6ddd9af" translate="yes" xml:space="preserve">
          <source>Arguments containing spaces must be quoted to be correctly supplied to the new process. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521ad937aa1f53eee397385106d065e03d4fd528" translate="yes" xml:space="preserve">
          <source>Armature</source>
          <target state="translated">Armature</target>
        </trans-unit>
        <trans-unit id="6f5f1e1355dbdb7e2edc9f0b1b8a1ea5f4efb8c8" translate="yes" xml:space="preserve">
          <source>Armature (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ac82f94a41e19423c5b4c822d6090fdc7cd3b1" translate="yes" xml:space="preserve">
          <source>Armature QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0448d89703712a541edda15d367fd809da8ac1d3" translate="yes" xml:space="preserve">
          <source>Armature.skeleton</source>
          <target state="translated">Armature.skeleton</target>
        </trans-unit>
        <trans-unit id="1a0d21145500640fd3f6136eeba595bfe934d364" translate="yes" xml:space="preserve">
          <source>Armenian</source>
          <target state="translated">Armenian</target>
        </trans-unit>
        <trans-unit id="41127ee8f7ab4f314142f165d2c9bc6558b3e351" translate="yes" xml:space="preserve">
          <source>Arrange elements to adhere to layout guidelines for different platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49775465a2662efa781833958f1606cec4319e36" translate="yes" xml:space="preserve">
          <source>Arranges all child windows in a tile pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca9725a03114d31504328c6e0f24c2dc4218921" translate="yes" xml:space="preserve">
          <source>Arranges all the child windows in a cascade pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="6eb6467e007cb070adc85d58a09cd75d99be0f3c" translate="yes" xml:space="preserve">
          <source>Array Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521d9c30534a654804e203a996e2583803023671" translate="yes" xml:space="preserve">
          <source>Array Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1e485a44970093e89d987c652ebc18c9e3e534" translate="yes" xml:space="preserve">
          <source>Array Prototype Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5eaaa07a6a7538a98bf3593e431703f3438b78" translate="yes" xml:space="preserve">
          <source>Array of bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f9e14823a5f2ef4dcfd880e753267cfc281058" translate="yes" xml:space="preserve">
          <source>Array of bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6bf23201e44d3b137865089f87083f36883d00" translate="yes" xml:space="preserve">
          <source>Array of range values as float point numbers. The value for the most detailed representation should be specified first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0047289ea45c5ac540ffeb8876e5f8bf8c711934" translate="yes" xml:space="preserve">
          <source>Array or Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc24b8b8b7122608af5aca9337f1476bfe952d8" translate="yes" xml:space="preserve">
          <source>Array, converted using QCborArray::formJsonArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2704c6d097885b6494eef2fc12c3cea109979946" translate="yes" xml:space="preserve">
          <source>Array, map and string lengths must be as short as possible. As above, &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; automatically does this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95971ea269213b08d09c9553e6421bde178a5ca7" translate="yes" xml:space="preserve">
          <source>ArrayBuffer</source>
          <target state="translated">ArrayBuffer</target>
        </trans-unit>
        <trans-unit id="c3ee4aa92cf96bfba3d79f58e87e55f061989e7e" translate="yes" xml:space="preserve">
          <source>Arrays are sets of zero or more elements of the same type, while structures are a set of a fixed number of elements, each of any type. Maps or dictionaries are implemented as arrays of a pair of elements, so there can be zero or more elements in one map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131ede22d0b614ba1e8e1c1d1f9d48cf630840ac" translate="yes" xml:space="preserve">
          <source>Arrays as well as pointers that have been allocated with &lt;code&gt;malloc&lt;/code&gt; must not be deleted using &lt;code&gt;delete&lt;/code&gt;. &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt;'s second template parameter can be used for custom cleanup handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a8fd3a5efab24761461f71d384408878728213" translate="yes" xml:space="preserve">
          <source>Arrays, Maps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900f175af84d0000f64c370336540ee485194334" translate="yes" xml:space="preserve">
          <source>Arrays, maps and strings must use explicit length. &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; always does this for strings; for arrays and maps, be sure to call &lt;a href=&quot;qcborstreamwriter#startArray&quot;&gt;startArray&lt;/a&gt;() and &lt;a href=&quot;qcborstreamwriter#startMap&quot;&gt;startMap&lt;/a&gt;() overloads with explicit length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65665c0319750f55e0fe69874130a1cf6d4ed0a" translate="yes" xml:space="preserve">
          <source>Arrow keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3094e340f7ad15ed65f9617c27dee5b6efab8cd1" translate="yes" xml:space="preserve">
          <source>Arrow pointing upwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482272bf7ce3a81c43b80e4333215720dc80f919" translate="yes" xml:space="preserve">
          <source>Arrow used to indicate sorting on a list or table header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4360c2dcd4af965377499b10a52640af435c9258" translate="yes" xml:space="preserve">
          <source>Article</source>
          <target state="translated">Article</target>
        </trans-unit>
        <trans-unit id="7c422841b7e3951946583038790545c4ed38481b" translate="yes" xml:space="preserve">
          <source>Articles</source>
          <target state="translated">Articles</target>
        </trans-unit>
        <trans-unit id="56a51ffa3fabb3657751bd1808f69bd249d154a1" translate="yes" xml:space="preserve">
          <source>Articles &amp;amp; Overviews</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76582ba600897c1f50a1ed73084718b7ec73e5f" translate="yes" xml:space="preserve">
          <source>Articles and Guides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba62974dfe83ad2c48a0cacc75fc3b90edbd918" translate="yes" xml:space="preserve">
          <source>Articles and overviews are a style of writing best used for providing summary detail on a topic or concept. It may introduce a technology or discuss how a concept may be applied, but without discussing exact steps in too much detail. However, this type of content could provide the entry point for readers to find instructional and reference materials that do, such as tutorials, examples and class documentation. An example of an overview might be a product page, such as a top level discussion of Qt Quick, individual modules, design principles, or tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb014dddbd39352d4f2501f7cd58d46273b26e54" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; introduces three layers at once - the RCW, COM and finally &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; itself - the performance penalty when using the generic Qt/&lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt;/COM/RCW/.NET bridge is larger than when using a hand-crafted IJW-wrapper class. The execution speed however is still sufficient for connecting to and modifying interactive elements in a user interface, and as soon as the benefit of using Qt and C++ to implement and compile performance critical algorithms into native code kicks in, &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; becomes a valid choice for making even non-visual parts of your application accessible to .NET.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0488e03b7814927148f633c567527954a0a28b9d" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; only supports &lt;a href=&quot;qml-qtquick-controls-action&quot;&gt;Action&lt;/a&gt; as child items, we need to manually assign the &lt;code&gt;exclusiveGroup&lt;/code&gt; property for other objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade9c251f0915adc500091aaeaf3e818b6d593e5" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;qml-qtquick-controls-styles-gaugestyle&quot;&gt;GaugeStyle&lt;/a&gt;'s documentation adequately covers common use cases, this tutorial will cover a different scenario: one where the gauge's tickmarks cover the value bar, instead of being aligned to the left or right of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69a651254e342082cc21d33924742d5f778b280" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; applications are run in a sandboxed environment, setting the path variable to point to the files required will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5280d982a17a3e0de0ede57fb2cb960f7534849" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; applications run in a sandboxed environment, some restrictions should be taken into account when considering porting or writing cross-platform applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179fa0580ebf568a8f4c369b2c3b32a6d10fad25" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;kmap&lt;/code&gt; files are plain-text files, they can also be hand crafted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65734a6653f2a94889fe5a8a39e3c63c4de56dc6" translate="yes" xml:space="preserve">
          <source>As Connection is just a handle, the underlying signal-slot connection is unaffected when Connection is destroyed or reassigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d04630e30c94d76c00827289ef0aa28c1a2e1cc" translate="yes" xml:space="preserve">
          <source>As JavaScript's built-in scope mechanism is very simple, QML enhances it to fit more naturally with the QML language extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea302238182d60e7a1d90aef8ef88a5ebb8e14a" translate="yes" xml:space="preserve">
          <source>As QML uses Qt's meta-type system all of the existing &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; classes can be used to introspect and interact with objects created by QML. However, some of the new features provided by QML - such as type safety and attached properties - are most easily used through the &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt; class that simplifies some of their natural complexity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8050ae2b35d13151611656688d5708e78d314421" translate="yes" xml:space="preserve">
          <source>As a comparison, the &lt;a href=&quot;qtquick-visualcanvas-scenegraph&quot;&gt;Qt Quick 2 scenegraph renderer&lt;/a&gt; responsible for drawing Qt Quick 2 scenes is hard-wired in C++ to do things like batching of primitives and rendering opaque items followed by rendering of transparent items. In the case of Qt Quick 2 that is perfectly fine as that covers all of the requirements. As you can see from some of the examples listed above, such a hard-wired renderer is not likely to be flexible enough for generic 3D scenes given the multitude of rendering methods available. Or if a renderer could be made flexible enough to cover all such cases, its performance would likely suffer from being too general. To make matters worse, more rendering methods are being researched all of the time. We therefore needed an approach that is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16654ae817ec13afbedfbef208383509128f9788" translate="yes" xml:space="preserve">
          <source>As a concrete example, say you have a set of processes talking to each other on your target hardware using a registry, with the &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; at &quot;local:registry&quot; and separate processes using a node at &quot;local:MyHost&quot; that holds &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; objects. If you wanted to access these objects, but over tcp, you could create a new proxyNode like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffead72fbf19f5ddae185bf2691d1eb7b5e5e0c7" translate="yes" xml:space="preserve">
          <source>As a consequence to this signal the application must either start the roaming process by calling &lt;a href=&quot;qnetworksession#migrate&quot;&gt;migrate&lt;/a&gt;() or choose to &lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;() the new access point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5876200fc35ab75ebbc30bc52742a18c9b8e9cea" translate="yes" xml:space="preserve">
          <source>As a convenience for the two most common connection types, the &lt;a href=&quot;qdbusconnection#sessionBus&quot;&gt;sessionBus&lt;/a&gt;() and &lt;a href=&quot;qdbusconnection#systemBus&quot;&gt;systemBus&lt;/a&gt;() functions return open connections to the session server daemon and the system server daemon, respectively. Those connections are opened when first used and are closed when the &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; destructor is run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cd22f5dd9d530194b81069ccce8c4e6570bcd5" translate="yes" xml:space="preserve">
          <source>As a convenience, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; supports &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;'s blocking functions &lt;a href=&quot;qsslsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;(), and &lt;a href=&quot;qsslsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;(). It also provides &lt;a href=&quot;qsslsocket#waitForEncrypted&quot;&gt;waitForEncrypted&lt;/a&gt;(), which will block the calling thread until an encrypted connection has been established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1088883528471d54845c4626a618c3a3db0753" translate="yes" xml:space="preserve">
          <source>As a convenience, many of these types can be specified in QML by string values, or by a related method provided by the &lt;a href=&quot;qml-qtqml-qt&quot;&gt;QtQml::Qt&lt;/a&gt; object. For example, the &lt;a href=&quot;qml-qtquick-image#sourceSize-prop&quot;&gt;Image::sourceSize&lt;/a&gt; property is of type &lt;a href=&quot;qml-size&quot;&gt;size&lt;/a&gt; (which automatically translates to the &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; type) and can be specified by a string value formatted as &quot;width&lt;code&gt;x&lt;/code&gt;height&quot;, or by the Qt.&lt;a href=&quot;qml-qtquick-controls2-stackview#size&quot;&gt;size&lt;/a&gt;() function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91dde3df4079d9c3a3343b655d043066679d2b27" translate="yes" xml:space="preserve">
          <source>As a convention the &lt;a href=&quot;qscrollerproperties&quot;&gt;QScrollerProperties&lt;/a&gt; are in physical units (meter, seconds) and are converted by &lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; using the current DPI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8871724b0fde815d1283276bd102e65e68db1482" translate="yes" xml:space="preserve">
          <source>As a countermeasure to these attacks, &lt;a href=&quot;https://tools.ietf.org/html/rfc6347#section-4.2.1&quot;&gt;RFC 6347, section 4.2.1&lt;/a&gt; proposes a stateless cookie technique that a server may deploy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f8a9c1f819f1f448c84d5bb0f7d67c17b6314e" translate="yes" xml:space="preserve">
          <source>As a general rule, scenes should avoid using separate Shape items when it is not absolutely necessary. Prefer using one Shape item with multiple &lt;a href=&quot;qml-qtquick-shapes-shapepath&quot;&gt;ShapePath&lt;/a&gt; elements over multiple Shape items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df4a49b6b80ccfd011cef828b5f51f01a304bb6" translate="yes" xml:space="preserve">
          <source>As a general rule, the usage of XCB on embedded devices is not advisable. Plugins like eglfs are likely to provide better performance, and hardware acceleration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fa84cd4c7bc5c9851232e73a6f86616a3a3db2" translate="yes" xml:space="preserve">
          <source>As a general rule, use a push button when the application or dialog window performs an action when the user clicks on it (such as Apply, Cancel, Close and Help)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff23a97d4eec6ad9471102c507cc95562693a902" translate="yes" xml:space="preserve">
          <source>As a last resort it uses the Information icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673221f4dc3fc922538641fbc20eb7e8f3a08805" translate="yes" xml:space="preserve">
          <source>As a lower-level alternative to the text rules, you can also implement a custom filter via &lt;a href=&quot;qloggingcategory#installFilter&quot;&gt;installFilter&lt;/a&gt;(). All filter rules are ignored in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d005db4617a4c9b96e7f3ea999dc0c551615b14" translate="yes" xml:space="preserve">
          <source>As a property value source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cd33ea13e6c171386b3d59bc3397b39825e6ae" translate="yes" xml:space="preserve">
          <source>As a result of calling open() the interface will be started if it is not connected/up yet. Some platforms may not provide support for out-of-process sessions. On such platforms the session counter ignores any sessions held by another process. The platform capabilities can be detected via &lt;a href=&quot;qnetworkconfigurationmanager#capabilities&quot;&gt;QNetworkConfigurationManager::capabilities&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa12ddb8dd10eb2f7246effd2d855748abda0176" translate="yes" xml:space="preserve">
          <source>As a result of calling this function, this item will receive a &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;focus in event&lt;/a&gt; with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813e172927aa12e3257604ea837bdba6db263749" translate="yes" xml:space="preserve">
          <source>As a result of this operation, any scopes that test for &lt;code&gt;opengl&lt;/code&gt; will be processed. We can use this feature to give the final executable an appropriate name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03648f1f0e3af66e6698cf463333c191091bdc28" translate="yes" xml:space="preserve">
          <source>As a result, both human-readable strings and hard-coded key codes can both be problematic to use when specifying a key sequence that can be used on a variety of different keyboard layouts. Only the use of &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;standard shortcuts&lt;/a&gt; guarantees that the user will be able to use the shortcuts that the developer intended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780994c44c6578054e951f95bf10d47aceee09e8" translate="yes" xml:space="preserve">
          <source>As a result, certain kinds of effects may be slower than expected on certain devices. It may be possible to compensate for this performance hit by making optimizations in other areas; for example, by using &lt;a href=&quot;#opengl-rendering&quot;&gt;OpenGL&lt;/a&gt; to render a scene. However, any such optimizations may themselves cause a reduction in performance if they also rely on the presence of floating point hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509a5a65045b1dee34a168ea7f6aa09a4d1650be" translate="yes" xml:space="preserve">
          <source>As a result, only the model needs to know how to obtain data, and the type of data managed by the model can be defined fairly generally. Model indexes contain a pointer to the model that created them, and this prevents confusion when working with more than one model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0588ee170f603557321108977e5cdf0bf6f6b9" translate="yes" xml:space="preserve">
          <source>As a result, the value returned by &lt;a href=&quot;qpainter#clipRegion&quot;&gt;QPainter::clipRegion&lt;/a&gt;() on a newly-constructed &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; will not reflect the clip region that is used by the paint system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c30b1d56552477a8af20723738b54ec71f7fd02" translate="yes" xml:space="preserve">
          <source>As a side effect of the item being repainted, other items that overlap the area</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5fbf9210ce0832de1c9a2b86d3dae1d5733b7e" translate="yes" xml:space="preserve">
          <source>As a special case &lt;a href=&quot;qlocale#Country-enum&quot;&gt;QLocale::AnyCountry&lt;/a&gt; returns those IANA IDs that do not have any specific country.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a985d0d6324e02d41df5240563842cd4c6b960" translate="yes" xml:space="preserve">
          <source>As a special case, &lt;a href=&quot;qlocale#Country-enum&quot;&gt;QLocale::AnyCountry&lt;/a&gt; returns the default of those IANA IDs that do not have any specific country.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bb094a8b46620e18ef2cb0247f60e39d120f2e" translate="yes" xml:space="preserve">
          <source>As a special case, a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67709323f7c64dee226e1200d1040d9c06f23da2" translate="yes" xml:space="preserve">
          <source>As a special case, a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with a timeout of 0 will time out as soon as all the events in the window system's event queue have been processed. This can be used to do heavy work while providing a snappy user interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d0f233e23748a57b37d4a76e41c49ed1d4e06a" translate="yes" xml:space="preserve">
          <source>As a special exception, &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; allows the strings &quot;nan&quot; and &quot;inf&quot; to represent NAN and INF floats or doubles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f326801eacc88fc8812ba4adab1baebb1f102d0" translate="yes" xml:space="preserve">
          <source>As already mentioned, the Qt compressed help file contains all data, so there is no need any longer to ship all the single HTML files. Instead, only the compressed help file and, optionally, the collection file have to be distributed. The collection file is optional since any existing collection file, for example from an older release, could be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc7b9b08e8bec5164fab76d0c53a03c534d89f4" translate="yes" xml:space="preserve">
          <source>As an alternative to &lt;a href=&quot;qgraphicsitem#transform&quot;&gt;QGraphicsItem::transform&lt;/a&gt;, &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; lets you create and control advanced transformations that can be configured independently using specialized properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0332798e4516d184f064e7a0a7edcfc335541e1" translate="yes" xml:space="preserve">
          <source>As an alternative to manually writing build type conditionals, some variables offer build-specific variants, for example &lt;a href=&quot;#qmake-lflags-release&quot;&gt;QMAKE_LFLAGS_RELEASE&lt;/a&gt; in addition to the general &lt;a href=&quot;#qmake-lflags&quot;&gt;QMAKE_LFLAGS&lt;/a&gt;. These should be used when available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d811721ede4b79118569ba78597d3d240a70ced0" translate="yes" xml:space="preserve">
          <source>As an application developer, you must strive to allow the rendering engine to achieve a consistent 60 frames-per-second refresh rate. 60 FPS means that there is approximately 16 milliseconds between each frame in which processing can be done, which includes the processing required to upload the draw primitives to the graphics hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f864e8e873f7b562f3409d72ed59901f914db6" translate="yes" xml:space="preserve">
          <source>As an example consider the following blend tree:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e354dda0d5380c69ede32dc0a26ec085dfa89f3" translate="yes" xml:space="preserve">
          <source>As an example this might return &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(0, 0, 1280, 1024), or in a virtual desktop setting &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(1280, 0, 1280, 1024).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8183283ddc349000b8b8c6cf12886851819490ef" translate="yes" xml:space="preserve">
          <source>As an example, assume the device is rotated by 180 degrees and therefore the screen orientation also is rotated by 180 degrees from the native orientation. Without automatic axes orientation, the reading values would now be changed: Both the X and the Y values would be negated, forcing an application developer to manually cancel out the negation in application code. Automatic axes orientation does this automatically, in this mode the X and Y values would be the same as with the default screen orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ab05c4c6d0b29177a5e1d479a42058bab461eb" translate="yes" xml:space="preserve">
          <source>As an example, consider the above diagram which illustrates the sprites for a hypothetical 2D platform game character. The character starts by displaying the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fe18229a3074802f21205f5b43e2430614638b" translate="yes" xml:space="preserve">
          <source>As an example, consider the case where you have a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt; representing your current position:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e567e492be073f0e487fa8c7dc2194af4c370a86" translate="yes" xml:space="preserve">
          <source>As an example, consider the following code snippet, which constructs a multipart message containing a text part followed by an image part:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0108d7b1db298aa7fe12b736a3788ca5637999" translate="yes" xml:space="preserve">
          <source>As an example, discovering all connected screens and creating a &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; for each of them can be done like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab774f1c52ff97764e9a982927552907fb69acf" translate="yes" xml:space="preserve">
          <source>As an example, let's add an attached property that controls elevation. Our style will illustrate the elevation with a drop shadow; the higher the elevation, the larger the shadow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b72c79fd7cbd16b7128fc10ba6e7a88fc10bc7" translate="yes" xml:space="preserve">
          <source>As an example, take the above image. For now, just consider the black numbers, and assume the squares are 40x40 pixels. Normally, the image is read from the top-left corner. If you specified the frame size as 40x40 pixels, and a frame count of 8, then it would read in the frames as they are numbered. The frame in the top left would be the first frame, the frame in the top right would be the fifth frame, and then it would wrap to the next row (at pixel location 0,40 in the file) to read the sixth frame. It would stop reading after the frame marked 8, and if there was any image data in the square below frame four then it would not be included in the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a52e07f2944d94cd6bc5510f3a8ce976380ac50" translate="yes" xml:space="preserve">
          <source>As an example, this returns 3 for &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; because there are 3 properties defined in that class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43532c2564e75716221cce9b86b4d67fa4467927" translate="yes" xml:space="preserve">
          <source>As an example, we use &lt;a href=&quot;qstring#contains&quot;&gt;QString::contains&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f5d893a9fde01e7080134a30ff4412381d5ffa" translate="yes" xml:space="preserve">
          <source>As an example, we will examine the styling of check boxes in the Java style. We describe the complete process and print all code in both the Java style and Qt classes involved. In the rest of this document, we will not examine the source code of the individual widgets. Hopefully, this will give you an idea on how to search through the code if you need to check specific implementation details; most widgets follow the same structure as the check boxes. We have edited the &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; code somewhat to remove code that is not directly relevant for check box styling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d87f7f4b49efa6c89aeb036846430f905a5ac3" translate="yes" xml:space="preserve">
          <source>As an example, we'll use QImage::scaledToWidth():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdfd1a02b277df422b06ec379cc68cb08dd0752" translate="yes" xml:space="preserve">
          <source>As an example, when targeting the Raspberry Pi with the Broadcom proprietary graphics drivers, the output should contain something like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02edf70f6ffe6e19a4c67186b97d306867feb01a" translate="yes" xml:space="preserve">
          <source>As before, this ensures that the resources are linked into the final application binary in the case of static linking, but also triggers loading of the library in the case of dynamic linking, such as plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8833483dbc5045fbad9be9119ba17ef640bab6ec" translate="yes" xml:space="preserve">
          <source>As can be seen from the above snippets, a script is provided to the engine in the form of a string. One common way of loading scripts is by reading the contents of a file and passing it to &lt;a href=&quot;qjsengine#evaluate&quot;&gt;evaluate&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946ff9861327c49a2cf70cb070d95311176abccb" translate="yes" xml:space="preserve">
          <source>As can be seen from the code extract, the common style gets the bounding rectangles of the two sub elements of CE_CheckBox, and then draws them. If the checkbox has focus, the focus frame is also drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf38601a1214ad64f7ee0f4545277b4bd4be77dc" translate="yes" xml:space="preserve">
          <source>As can be seen in the example above, &lt;a href=&quot;qdeadlinetimer&quot;&gt;QDeadlineTimer&lt;/a&gt; offers a templated version of &lt;a href=&quot;qdeadlinetimer#remainingTime&quot;&gt;remainingTime&lt;/a&gt;() and &lt;a href=&quot;qdeadlinetimer#deadline&quot;&gt;deadline&lt;/a&gt;() that can be used to return &lt;code&gt;std::chrono&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c07713bfee91ea3b4371e0451db99e7799937bd" translate="yes" xml:space="preserve">
          <source>As can be seen in the example, when a delayed reply is in place, the return value(s) from the slot will be ignored by Qt D-Bus. They are used only to determine the slot's signature when communicating the adaptor's description to remote applications, or in case the code in the slot decides not to use a delayed reply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a812ce77a7db9b2e16f6e97939903ce7443214ab" translate="yes" xml:space="preserve">
          <source>As data gets decoded, the &lt;a href=&quot;qaudiodecoder#bufferReady&quot;&gt;bufferReady&lt;/a&gt;() signal will be emitted when enough data has been decoded. Calling &lt;a href=&quot;qaudiodecoder#read&quot;&gt;read&lt;/a&gt;() will then return an audio buffer without blocking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425c2b50ba4939aafdebc33fae48cd4ebb023d02" translate="yes" xml:space="preserve">
          <source>As demonstrated above, Qt provides different solutions for developing threaded applications. The right solution for a given application depends on the purpose of the new thread and the thread's lifetime. Below is a comparison of Qt's threading technologies, followed by recommended solutions for some example use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b89a65b7338ce30f6a9398b5ab3e7d2967fde9a" translate="yes" xml:space="preserve">
          <source>As described above, it is simpler and more robust to set the requested format globally so that it applies to all windows and contexts during the lifetime of the application. Below is an example of this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3abb8aa86837a817c87c44a25ceaaef9e950a2c" translate="yes" xml:space="preserve">
          <source>As described above, subclass &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; to render pure 3D content in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246214847c3f39c6ad14d967249998fb5fb2c87b" translate="yes" xml:space="preserve">
          <source>As described earlier, you can add animations to transitions to make sure property assignments in the target state are animated. If you want a specific animation to be used for a given property regardless of which transition is taken, you can add it as a default animation to the state machine. This is in particular useful when the properties assigned (or restored) by specific states is not known when the machine is constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bd01a484cf2b9d5bd79ff5c06bedaecdb7a54f" translate="yes" xml:space="preserve">
          <source>As described in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt5-intro.html#multimedia&quot;&gt;Multimedia&lt;/a&gt; overview, Qt Multimedia uses the GStreamer multimedia framework as the backend for audio and video playback on Linux. The minimum required version of GStreamer is 0.10.24. The 1.x series is also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907c7ec10d943c9ac0a46e5302735bc14779b04a" translate="yes" xml:space="preserve">
          <source>As different position sources are available on different platforms and devices, these are categorized by their basic type (Satellite, NonSatellite, and AllPositioningMethods). The available methods for the current platform can be enumerated in the &lt;a href=&quot;qml-qtpositioning-positionsource#supportedPositioningMethods-prop&quot;&gt;supportedPositioningMethods&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33215b6eb121bc79dc9759565d123bb00349b7d" translate="yes" xml:space="preserve">
          <source>As display resolutions improve, a scalable application UI becomes more and more important. One of the approaches to achieve this is to maintain several copies of the UI for different screen resolutions, and load the appropriate one depending on the available resolution. Although this works pretty well, it adds to the maintenance overhead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e7e77c94f602064f7512ab2dd39e931cb8cfa7" translate="yes" xml:space="preserve">
          <source>As documented above, passing arguments is done like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f68e5f667079fcbd12efef41a1536d08e865049" translate="yes" xml:space="preserve">
          <source>As each item is positioned along the path, it will be rotated accordingly: an item at the beginning of the path with be not be rotated, an item at the end of the path will be rotated 90 degrees, and an item mid-way along the path will be rotated 45 degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861b1e52071780e34475f74bb1740de8a6475295" translate="yes" xml:space="preserve">
          <source>As for ClampToEdge but also blends samples at 0 and 1 with a fixed border color. Equivalent to GL_CLAMP_TO_BORDER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489756ab6af4bb3f5d866c9af89a60d617a7a7a5" translate="yes" xml:space="preserve">
          <source>As for the OpenGL headers, note that in most cases there will be no need to directly include any headers like GL.h. The OpenGL-related Qt headers will include qopengl.h which will in turn include an appropriate header for the system. This might be an OpenGL ES 3.x or 2.0 header, the highest version that is available, or a system-provided gl.h. In addition, a copy of the extension headers (called glext.h on some systems) is provided as part of Qt both for OpenGL and OpenGL ES. These will get included automatically on platforms where feasible. This means that constants and function pointer typedefs from ARB, EXT, OES extensions are automatically available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50557d0d19a426698ae7938601d4626b0b5ca0f" translate="yes" xml:space="preserve">
          <source>As it can be seen in the example, the main patterns in &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; usage are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3804e05753d87efd96930eede46d873ac4b9420" translate="yes" xml:space="preserve">
          <source>As item coordinates are relative to the visual parent, they can be affected by changes to the visual hierarchy. See the &lt;a href=&quot;qtquick-visualcanvas-coordinates#&quot;&gt;Visual Coordinates&lt;/a&gt; concept page for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d9f61cd79e723319436c749804aa211e9990d0" translate="yes" xml:space="preserve">
          <source>As long as no special locale has been set, this is either the parent's locale or (if this widget is a top level widget), the default locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7562e6e80c6bec5b6cf3c7303cabae888bbc8d" translate="yes" xml:space="preserve">
          <source>As long as one profile has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31771cf7889c576bb0045b26111ec89c137f881e" translate="yes" xml:space="preserve">
          <source>As long as one profile has this option enabled, all other profiles will be able to use it for certificate verification. Only one profile at a time can have this option enabled. It is recommended that the profile has a disk HTTP cache to avoid needlessly re-downloading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002c4e8870afe05bd95ad7ebb6b17435ad918766" translate="yes" xml:space="preserve">
          <source>As mentioned above, &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;'s, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;'s, and &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;'s iterator classes have exactly the same API as &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s. We will now turn to &lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;, which is somewhat different because it iterates on (key, value) pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a21b6a2caa3fb1706b7044f9398496bbe4cdbb" translate="yes" xml:space="preserve">
          <source>As mentioned above, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; provides a lot of functions and operators that make it easy to interoperate with &lt;code&gt;const char *&lt;/code&gt; strings. But this functionality is a double-edged sword: It makes &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; more convenient to use if all strings are US-ASCII or Latin-1, but there is always the risk that an implicit conversion from or to &lt;code&gt;const char *&lt;/code&gt; is done using the wrong 8-bit encoding. To minimize these risks, you can turn off these implicit conversions by defining the following two preprocessor symbols:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8b100197ae92be540c33ca3c3a18d757a58d0f" translate="yes" xml:space="preserve">
          <source>As mentioned above, enabling touch events means multiple widgets can be receiving touch events simultaneously. Combined with the default &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() handling for QTouchEvents, this gives you great flexibility in designing touch user interfaces. Be aware of the implications. For example, it is possible that the user is moving a &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; with one finger and pressing a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; with another. The signals emitted by these widgets will be interleaved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27c2c7f1a131f4e8e3e5ba33bedce5cd8cd5bad" translate="yes" xml:space="preserve">
          <source>As mentioned above, it is possible that several widgets can be receiving QTouchEvents at the same time. However, Qt makes sure to never send duplicate &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt; events to the same widget, which could theoretically happen during propagation if, for example, the user touched 2 separate widgets in a &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; and both widgets ignored the &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842f60ca18c98159f9759ca7612c939b63965419" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, some sequence types are fast (for example, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;int&amp;gt;, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;qreal&amp;gt;, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;bool&amp;gt;, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt;, &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; and &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;&amp;gt;) while others will be much slower. Aside from using these types wherever possible instead of slower types, there are some other performance-related semantics you need to be aware of to achieve the best performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413f8bb6617d772b733f618e8bca7fd5ef11ac7c" translate="yes" xml:space="preserve">
          <source>As mentioned in the &lt;a href=&quot;qsettings#fallback-mechanism&quot;&gt;Fallback Mechanism&lt;/a&gt; section, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; stores settings for an application in up to four locations, depending on whether the settings are user-specific or system-wide and whether the settings are application-specific or organization-wide. For simplicity, we're assuming the organization is called MySoft and the application is called Star Runner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b29575bf97efd6cf0e380e5a427a5042993f47" translate="yes" xml:space="preserve">
          <source>As mentioned in the documentation for &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle&quot;&gt;CircularGaugeStyle&lt;/a&gt;, &lt;code&gt;implicitWidth&lt;/code&gt; and &lt;code&gt;implicitHeight&lt;/code&gt; properties need to be set. This is so that the needle can be positioned properly. We always scale items by the &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#outerRadius-prop&quot;&gt;outerRadius&lt;/a&gt; property of the style, ensuring the control resizes gracefully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c73f69dd3ecef2136f58b17125e12e11ebeaf9a" translate="yes" xml:space="preserve">
          <source>As mentioned in the documentation for &lt;a href=&quot;qml-qtquick-controls-styles-gaugestyle&quot;&gt;GaugeStyle&lt;/a&gt;, &lt;code&gt;implicitWidth&lt;/code&gt; needs to be set when defining your own value bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75374d7df1668bbaacf5dffb82c2b7af658e31eb" translate="yes" xml:space="preserve">
          <source>As mentioned previously, Qt is offering classes that makes it easy to use OpenGL in Qt applications. For example, the &lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt; enables the OpenGL API for rendering with &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8514c32d9fe77e8e0fe4ca4e6881d7cdd5c555" translate="yes" xml:space="preserve">
          <source>As mentioned previously, the development workflow consists of maintaining a normal &lt;code&gt;.pro&lt;/code&gt; file project and exporting it to Xcode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfbd65474a5e18aa6c766d023047ecf56dbb147" translate="yes" xml:space="preserve">
          <source>As mentioned previously, you must have Xcode installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5efce2190a3fa7f47a42983fe443a3543946698" translate="yes" xml:space="preserve">
          <source>As mentioned, a tree structure is built from the accessible objects of an application. By navigating through the tree, the clients can access all elements in the UI. Object relations give clients information about the UI. For instance, a slider handle is a child of the slider to which it belongs. &lt;a href=&quot;qaccessible#RelationFlag-enum&quot;&gt;QAccessible::Relation&lt;/a&gt; describes the various relationships the clients can ask objects for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb6dfb23cfc2cd2dc5a66c3e1900545bf5c2efd" translate="yes" xml:space="preserve">
          <source>As mentioned, the style calculates the size of the widget's contents, which the widgets calculate their size hints from. In addition, complex controls also use the style to test which sub-controls the mouse is over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ec771177724b9285cdfaacb71d52b1794dce5c" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;QtQuick 1.1&lt;/code&gt;, this method accepts an optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da31871d3911fae6e231bbfb632ec219b2e229e8" translate="yes" xml:space="preserve">
          <source>As of Qt 4.2, the unique ID is the same regardless of the orientation of the pen. Earlier versions would report a different value when using the eraser-end versus the pen-end of the stylus on some OS's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e13761e0850786724fe482f4f489d14e8e4b19b" translate="yes" xml:space="preserve">
          <source>As of Qt 5.12 Shape.NvprRenderer is disabled by default and a uniform behavior, based on triangulating the path and generating &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; instances, is used regardless of the graphics card and drivers. To enable using vendor-specific path rendering approaches set the value to &lt;code&gt;true&lt;/code&gt;. Depending on the platform and content, this can lead to improved performance. Setting the value to &lt;code&gt;true&lt;/code&gt; is safe in any case since rendering falls back to the default method when the vendor-specific approach, such as &lt;code&gt;GL_NV_path_rendering&lt;/code&gt;, is not supported at run time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1949e480a7858c47a022532f290ed611d92635" translate="yes" xml:space="preserve">
          <source>As of Qt 5.7 this backend shares many of its internal implementation with the GBM-based backend. This means that multiple screens and the advanced configuration via &lt;code&gt;QT_QPA_EGLFS_KMS_CONFIG&lt;/code&gt; are supported. Some settings, such as &lt;code&gt;hwcursor&lt;/code&gt; and &lt;code&gt;pbuffers&lt;/code&gt; are not applicable however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e634ae2b6dbe8da9c7dd5c9b7ada24ee6870e8" translate="yes" xml:space="preserve">
          <source>As of Qt 5.9, support for caching program binaries on disk is built in. To enable this, switch to using &lt;a href=&quot;qopenglshaderprogram#addCacheableShaderFromSourceCode&quot;&gt;addCacheableShaderFromSourceCode&lt;/a&gt;() and &lt;a href=&quot;qopenglshaderprogram#addCacheableShaderFromSourceFile&quot;&gt;addCacheableShaderFromSourceFile&lt;/a&gt;(). With an OpenGL ES 3.x context or support for &lt;code&gt;GL_ARB_get_program_binary&lt;/code&gt;, this will transparently cache program binaries under &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths::GenericCacheLocation&lt;/a&gt; or &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths::CacheLocation&lt;/a&gt;. When support is not available, calling the cacheable function variants is equivalent to the normal ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447f717e2266f7759adfc3c89a2edd9d42d79f51" translate="yes" xml:space="preserve">
          <source>As of Qt 5.9, the behavior of EGLFS and &lt;a href=&quot;#linuxfb&quot;&gt;LinuxFB&lt;/a&gt; have been synchronized, with regards to the window sizing policy: the first top-level window is forced to cover the entire screen, with both platform plugins. If this is not desired, set the &lt;code&gt;QT_QPA_FB_FORCE_FULLSCREEN&lt;/code&gt; environment variable to &lt;code&gt;0&lt;/code&gt; to restore the behavior from earlier Qt versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed4c1930acaac4e3df87a5ab8afbf50bdaf9cb1" translate="yes" xml:space="preserve">
          <source>As of this writing, there were no cases where combining the two was required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3786b6dd28873c479134bc216612e0662dfa6008" translate="yes" xml:space="preserve">
          <source>As our solutions were being adopted into new environments, we saw an escalating need for easier integration with a wider range of enterprise applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c88dd2657894e3cd5fa0851c5cfd125995ca56" translate="yes" xml:space="preserve">
          <source>As particle systems benefit from stochastic control of parameters across a large number of instances, several stochastic helper types are used by the particle system. If you do not wish to have any stochastic variation in these parameters, then do not specify any variation in these types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b747f45b9296b376c5e37ea21686eb86582d9b" translate="yes" xml:space="preserve">
          <source>As per CAN bus specification, frames of type &lt;a href=&quot;qcanbusframe#FrameType-enum&quot;&gt;remote transfer request (RTR)&lt;/a&gt; do not have a payload, but a length from 0 to 8 (including). This length indicates the expected response payload length from the remote party. Therefore when sending a RTR frame using this function it may still be required to set an arbitrary payload on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de6833e69d2bc54ca2bc3632a87ad479c1873cb" translate="yes" xml:space="preserve">
          <source>As previously noted, there are two kinds of values which may be assigned to a property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9b6bc239bbcf05a411e51d559f8f7bcd0d149c" translate="yes" xml:space="preserve">
          <source>As seen in the above example, properties is specified as a comma-separated string of property names to animate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d539d8441b5daed332c17747f7a25305dbd2cf" translate="yes" xml:space="preserve">
          <source>As shown above, &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt; is typically populated with a static set of pages that are defined inline as children of the view. It is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt;, and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; pages dynamically at run time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5daa3387b834f4bd43ffeabf61a8d98e713210b" translate="yes" xml:space="preserve">
          <source>As shown above, &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt; is typically populated with a static set of tab buttons that are defined inline as children of the tab bar. It is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt;, and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically at run time. The items can be accessed using &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be2028fc8f1c13dd22d7fba6fa40d9781f9d8e4" translate="yes" xml:space="preserve">
          <source>As shown above, QDoc generates a notification when a class is declared reentrant, and lists the exceptions (the declared nonreentrant functions). A link to the general documentation on &lt;a href=&quot;#reentrant&quot;&gt;reentrancy and thread-safety&lt;/a&gt; is included. In addition a warning, &quot;&lt;b&gt;Warning&lt;/b&gt;: This function is not reentrant.&quot;, is generated in the nonreentrant functions' documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7261fb07fb087264244429dac377b9680163ffec" translate="yes" xml:space="preserve">
          <source>As shown above, enumeration types (e.g. &lt;code&gt;TextType&lt;/code&gt;) and values (e.g. &lt;code&gt;Normal&lt;/code&gt;) must begin with an uppercase letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7dd921467245a37c355363aea34246456ddfa94" translate="yes" xml:space="preserve">
          <source>As soon as possible. This value was added in Qt 5.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3f2e8517421aa15632d4e927c6a0e1bc56aa6b" translate="yes" xml:space="preserve">
          <source>As special cases, the &lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt; and &lt;a href=&quot;qcontiguouscache&quot;&gt;QContiguousCache&lt;/a&gt; classes provide efficient hash-lookup of objects in a limited cache storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef567737800bf5672dae577f1fd2091ed2fcc1fe" translate="yes" xml:space="preserve">
          <source>As stated above, an action group is &lt;a href=&quot;qactiongroup#exclusive-prop&quot;&gt;exclusive&lt;/a&gt; by default; it ensures that only one checkable action is active at any one time. If you want to group checkable actions without making them exclusive, you can turn of exclusiveness by calling &lt;a href=&quot;qactiongroup#exclusive-prop&quot;&gt;setExclusive&lt;/a&gt;(false).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a765d5c611c1243bc18a28faa9d3f32e1ce316" translate="yes" xml:space="preserve">
          <source>As stated in the beginning, understanding the finer details of the renderer is not required to get good performance. It is written to optimize for common use cases and will perform quite well under almost any circumstances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d941de4b7fd67188f4223a4a5ebe304ab68022" translate="yes" xml:space="preserve">
          <source>As stated, the various &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; properties provide details specific to the individual item being transitioned as well as the operation that triggered the transition. In the animation above, five items are inserted in succession at index 0. When the fifth and final insertion takes place, adding &quot;Item 4&quot; to the view, the &lt;code&gt;add&lt;/code&gt; transition is run once (for the inserted item) and the &lt;code&gt;displaced&lt;/code&gt; transition is run four times (once for each of the four existing items in the view).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dfb6580dcb33dd351b0c723fa35b4ef316f01b" translate="yes" xml:space="preserve">
          <source>As the &lt;a href=&quot;qml-qtquick-particles-particlepainter&quot;&gt;ParticlePainter&lt;/a&gt; is the QML type visualizing the particles in the scene, it is its Z value which is important when trying to place particles above or below other types visually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3d4b2e454ff43962d5206cb68716ddcd8795d8" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Foo&lt;/code&gt; type is instantiated in QML, it must be registered with the version of qmlRegisterType() that takes an import URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f68cca73e134d1819df7cc9068098e769b59db" translate="yes" xml:space="preserve">
          <source>As the Java style tabs don't overlap, we also present an image of a tab widget in the common style. Note that if you want the tabs to overlap horizontally, you do that when drawing the tabs in &lt;code&gt;CE_TabBarTabShape&lt;/code&gt;; the tabs bounding rectangles will not be altered by the tab bar. The tabs are drawn from left to right in a north tab bar shape, top to bottom in an east tab bar shape, etc. The selected tab is drawn last, so that it is easy to draw it over the other tabs (if it is to be bigger).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d9f09a7455495172aaa1e3fea6f31ddc7c4223" translate="yes" xml:space="preserve">
          <source>As the OpenGL documentation explains; The alpha test discards a fragment conditional on the outcome of a comparison between the incoming fragment's alpha value and a constant reference value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e4cf675bc1a6be48722226b43f207daba83efa" translate="yes" xml:space="preserve">
          <source>As the SAX2 standard suggests, &lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt; defaults to having</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607635cad4dbb481b90ce5525b8a28c88f732a77" translate="yes" xml:space="preserve">
          <source>As the area of a &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt; is the area it follows, a separate shape can be provided to be the shape it emits out of. This shape has width and height specified by &lt;a href=&quot;qml-qtquick-particles-trailemitter#emitWidth-prop&quot;&gt;emitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-particles-trailemitter#emitHeight-prop&quot;&gt;emitHeight&lt;/a&gt;, and is centered on the followed particle's position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c043aa7614cb21ecfaefa2b6117c76eed6fc3dbf" translate="yes" xml:space="preserve">
          <source>As the code snippet above illustrates, you can use this function to avoid emitting a signal that nobody listens to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3809eb24ca5564266c680c6a21b1c9ad885b5109" translate="yes" xml:space="preserve">
          <source>As the example shows, unlike JSON, CBOR requires no escaping for binary content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9a6743d3c664049f394847711891bd457d293b" translate="yes" xml:space="preserve">
          <source>As the expression will not have an associated &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;, this will be a null expression object and its value will always be an invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142fe1bdd9e1c8ee90637fe482874b9ceefa8f87" translate="yes" xml:space="preserve">
          <source>As the fillWidth item will automatically be resized to fit the extra space, explicit assignments to its width and height properties will be ignored (but &lt;a href=&quot;qml-qtquick-layouts-layout#minimumWidth-attached-prop&quot;&gt;Layout.minimumWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-layouts-layout#maximumWidth-attached-prop&quot;&gt;Layout.maximumWidth&lt;/a&gt; will still be respected). The initial sizes of other items should be set via their width and height properties. Any binding assignment to an item's width or height will be broken as soon as the user drags that item's splitter handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db39dc0ad46b7c7ac02fc7af54f97046e0220df1" translate="yes" xml:space="preserve">
          <source>As the life time of &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; can be longer than the playback of one &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt;, this property may change over time, the &lt;a href=&quot;qmediaplayer#audioAvailableChanged&quot;&gt;audioAvailableChanged&lt;/a&gt; signal can be used to monitor it's status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21836ee22337af62029dd3c7fc36cf40bfca7483" translate="yes" xml:space="preserve">
          <source>As the module is header-only, no further modifications to the .pro files are required to use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e099999d6d28eb183765a2684958f47aab736ab" translate="yes" xml:space="preserve">
          <source>As the name implies, &lt;a href=&quot;qml-qt3d-render-sceneloader&quot;&gt;SceneLoader&lt;/a&gt; loads a complete scene subtree. If you wish to load a single piece of geometry, you should rather use the Mesh instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7136d0733258a47b05cdde9d590939f4f8410393" translate="yes" xml:space="preserve">
          <source>As the name implies, &lt;a href=&quot;qt3drender-qsceneloader&quot;&gt;Qt3DRender::QSceneLoader&lt;/a&gt; loads a complete scene subtree. If you wish to load a single piece of geometry, you should rather use the &lt;a href=&quot;qt3drender-qmesh&quot;&gt;Qt3DRender::QMesh&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fae417b8e6e7c6c79a79ad589e798e8d93ab936" translate="yes" xml:space="preserve">
          <source>As the name implies, single execution mode uses a single QDoc process to generate all the Qt5 documentation. The single QDoc process still performs a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dca82c4bbf323214060e920f4ec5a34ceff2154" translate="yes" xml:space="preserve">
          <source>As the point of view changes, the &lt;a href=&quot;qml-qt3d-render-levelofdetail#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; property will change to reflect matching value in the range array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccae1bf1134f1e8ca70b6aed0cb2562faa3bb73" translate="yes" xml:space="preserve">
          <source>As the point of view changes, the &lt;a href=&quot;qt3drender-qlevelofdetail#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; property will change to reflect matching value in the range array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b102bdfcc5003101739adbaa5da053c42574dd7d" translate="yes" xml:space="preserve">
          <source>As the structure of splitters are simple and do not contain any sub elements, we do not include any images of splitters. &lt;code&gt;CE_Splitter&lt;/code&gt; does not use any other elements or metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b33c3f9f805ff5773e89011e1e3742047b77fb" translate="yes" xml:space="preserve">
          <source>As they are shared, .pragma library files cannot access QML component instance objects or properties directly, although QML values can be passed as function parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a66b9840c4e1c65d580c9e732a661e7fae3671c" translate="yes" xml:space="preserve">
          <source>As this number doesn't include any formatting markup it may not be the same as the length of the string returned by the &lt;a href=&quot;qml-qtquick-textedit#text-prop&quot;&gt;text&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e79eea69d3b2cd9d5971b5f4e6a1d5ed015d15f" translate="yes" xml:space="preserve">
          <source>As this number doesn't include any formatting markup, it may not be the same as the length of the string returned by the &lt;a href=&quot;qml-qtquick-controls-textarea#text-prop&quot;&gt;text&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa583af295097756e03534ef635a42dd0b39aed0" translate="yes" xml:space="preserve">
          <source>As we have seen in the previous section, we can configure the behavior of the reader when it comes to namespace processing. This is done by setting and unsetting the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b471fdd9426893d17b4d9c7ddae8dfb898565d64" translate="yes" xml:space="preserve">
          <source>As well as presenting data, views handle navigation between items, and some aspects of item selection. The views also implement basic user interface features, such as context menus and drag and drop. A view can provide default editing facilities for items, or it may work with a &lt;a href=&quot;#delegate-classes&quot;&gt;delegate&lt;/a&gt; to provide a custom editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f892a5ec7510a8d63c21666f702f1f96f1c02d" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-virtualkeyboard-qmlmodule.html&quot;&gt;all other QML types&lt;/a&gt; provided by the module, the &lt;code&gt;QT_IM_MODULE&lt;/code&gt; environment variable must be set to &lt;code&gt;qtvirtualkeyboard&lt;/code&gt; before using &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputpanel&quot;&gt;InputPanel&lt;/a&gt;. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-deployment-guide.html#loading-the-plugin&quot;&gt;Loading the Plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70107fd1daa7f285681be3488ef8e841a8073e16" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;dynamicCall&lt;/a&gt; the parameters can directly be embedded in the function string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2d2acbf84f81265a143b60cb3999fd31e8e802" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;qwidget#close&quot;&gt;QWidget::close&lt;/a&gt;(), done() deletes the dialog if the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_DeleteOnClose&lt;/a&gt; flag is set. If the dialog is the application's main widget, the application terminates. If the dialog is the last window closed, the &lt;a href=&quot;qguiapplication#lastWindowClosed&quot;&gt;QApplication::lastWindowClosed&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dca5b4347978e782f2aae49dca48505a34acc8c" translate="yes" xml:space="preserve">
          <source>As with Flickable, there are several things to keep in mind when using &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dca9237d1f1e146e87a17add20746942e0809ca" translate="yes" xml:space="preserve">
          <source>As with a plain &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; enters the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;, &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;, and finally the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, if the connection is successful. The handshake then starts automatically, and if it succeeds, the &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;encrypted&lt;/a&gt;() signal is emitted to indicate the socket has entered the encrypted state and is ready for use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7eee76ce23e99a1bb82b5e58bcbabae983998f" translate="yes" xml:space="preserve">
          <source>As with any application accessing other content beyond its control, a QML application should perform appropriate checks on any untrusted data it loads. &lt;b&gt;Do not, for example, use &lt;code&gt;import&lt;/code&gt;, &lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt; or &lt;a href=&quot;qtqml-javascript-qmlglobalobject#xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/a&gt; to load any untrusted code or content.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fa63db0b17176c614933a229ff302283cae279" translate="yes" xml:space="preserve">
          <source>As with many text editors, the plain text editor widget can be configured to insert or overwrite existing text with new text entered by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf53e840238f62fd7ed7c78c847f3a401bdd1e65" translate="yes" xml:space="preserve">
          <source>As with many text editors, the text editor widget can be configured to insert or overwrite existing text with new text entered by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488a779e80ab224b087f57e53c24d09fb57b50b3" translate="yes" xml:space="preserve">
          <source>As with other &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; subclasses, a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; object is used to paint onto an instance of this class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3f8396bda2a8f40ac61cfb94922f811947f41e" translate="yes" xml:space="preserve">
          <source>As with property values and method parameters, a signal parameter must have a type that is supported by the QML engine; see &lt;a href=&quot;qtqml-cppintegration-data#&quot;&gt;Data Type Conversion Between QML and C++&lt;/a&gt;. (Using an unregistered type will not generate an error, but the parameter value will not be accessible from the handler.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09de86e376e3caa9b80f7461aea890fc690e099a" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; delegates, it sits behind both &lt;a href=&quot;qml-qtquick-controls2-control#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;. However, a &lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt; whose &lt;code&gt;behind&lt;/code&gt; has been set can be continuously swiped from either side, and will always show the same item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59cdc42e366c3032c136cba2e0c06c1cb9980a2" translate="yes" xml:space="preserve">
          <source>As with the other Qt OpenGL classes, &lt;a href=&quot;qopengltimerquery&quot;&gt;QOpenGLTimerQuery&lt;/a&gt; has a &lt;a href=&quot;qopengltimerquery#create&quot;&gt;create&lt;/a&gt;() function to create the underlying OpenGL object. This is to allow the developer to ensure that there is a valid current OpenGL context at the time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5dfdcce60e6c71c9f6f941d80b07dc06e9af38" translate="yes" xml:space="preserve">
          <source>As with the other Qt OpenGL classes, &lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QOpenGLVertexArrayObject&lt;/a&gt; has a &lt;a href=&quot;qopenglvertexarrayobject#create&quot;&gt;create&lt;/a&gt;() function to create the underlying OpenGL object. This is to allow the developer to ensure that there is a valid current OpenGL context at the time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5bd7d662263ec597439f8e28d46944ffedd4b2" translate="yes" xml:space="preserve">
          <source>As with the other signals, &lt;code&gt;shortcutOverride&lt;/code&gt; will only be emitted for an item if that item has &lt;a href=&quot;qml-qtquick-item#activeFocus-prop&quot;&gt;activeFocus&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b44cd4cd61e1932d8fee83c3a383689100258e3" translate="yes" xml:space="preserve">
          <source>As with the sensor classes, these provide convenience wrappers that reduce the need for casting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72f3abfc1dc38e462f692ce8e762d7d24370882" translate="yes" xml:space="preserve">
          <source>As you can see, there are &lt;a href=&quot;qinappproduct#ProductType-enum&quot;&gt;consumable products&lt;/a&gt; and &lt;a href=&quot;qinappproduct#ProductType-enum&quot;&gt;unlockable products&lt;/a&gt;. The former can be purchased any number of times by the same user, whereas the latter can only be purchased once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2cb2309020c1d950c873e2906840fd61f08cae" translate="yes" xml:space="preserve">
          <source>As you can see, there are consumable products and unlockable products. The former can be purchased any number of times by the same user, while the latter can only be purchased once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861b2f34a7dc04111611d1f7b49c485074014484" translate="yes" xml:space="preserve">
          <source>As you can see, this tree has a single leaf and is composed of 3 nodes in total as shown in the following diagram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed99f639d7e9754980d05f7fcc66b785b4e83872" translate="yes" xml:space="preserve">
          <source>As you now have the &lt;code&gt;MyControls&lt;/code&gt; namespace, you can name the controls after their actual counterparts in the Qt Quick Controls 2 module. You can repeat this process for any control that you wish to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bde0180734ffc3e6fa2aff197971bd9a83cd63" translate="yes" xml:space="preserve">
          <source>Aside from the primitive types, &lt;a href=&quot;qdbusargument&quot;&gt;QDBusArgument&lt;/a&gt; also supports two non-primitive types natively, due to their widespread use in Qt applications: &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; and &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db1a3abb275f2b110ededaa1b75b2221f595548" translate="yes" xml:space="preserve">
          <source>Aside from the reduced performance of complex bindings (for example, due to having to enter the JavaScript execution context to perform evaluation), they also take up more memory both on the C++ heap and the JavaScript heap than bindings which can be evaluated by QML's optimized binding expression evaluator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bb45b38f22429c8fb2eb1ba83a0c598777f3d1" translate="yes" xml:space="preserve">
          <source>Aside: If you have a signals and slots connection in a tight inner loop of a performance critical task and you identify this connection as the bottleneck, think about using the standard listener-interface pattern rather than signals and slots. In cases where this occurs, you probably only require a 1:1 connection anyway. For example, if you have an object that downloads data from the network, it's a perfectly sensible design to use a signal to indicate that the requested data arrived. But if you need to send out every single byte one by one to a consumer, use a listener interface rather than signals and slots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209b536ca15064ddafc5f396c336fd0a64402da6" translate="yes" xml:space="preserve">
          <source>Asking for help.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
