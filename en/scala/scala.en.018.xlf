<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="26f0c6e4f10d9ce47e8c558f53e70eb914b1cb6d" translate="yes" xml:space="preserve">
          <source>Tests whether the immutable sequence is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91b921ed9830970eb006043b2dffa0562cf0963" translate="yes" xml:space="preserve">
          <source>Tests whether the immutable sequence is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ff425834833e4741c9d6831bfb433cb631bfbd" translate="yes" xml:space="preserve">
          <source>Tests whether the immutable set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6adf494ae0bdce7957f0c717645a0bf069949ec" translate="yes" xml:space="preserve">
          <source>Tests whether the immutable sorted set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67858c743fd3aaa6c7396d997c33871d282d1f83" translate="yes" xml:space="preserve">
          <source>Tests whether the immutable tree map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b183830278313125524710bb77913e7db77bb3" translate="yes" xml:space="preserve">
          <source>Tests whether the immutable tree seq map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3915e6b950d79563d45b3beff566abc159b453cf" translate="yes" xml:space="preserve">
          <source>Tests whether the immutable tree set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3234bca437bea62ae8262ed93daf4e35ef5f7548" translate="yes" xml:space="preserve">
          <source>Tests whether the immutable vector map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83fedc41ea3834c80ddaff3ac6754c904f532a7" translate="yes" xml:space="preserve">
          <source>Tests whether the iterable collection is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74acc20264309e7e63f80779cbad0b6a3b35ecd" translate="yes" xml:space="preserve">
          <source>Tests whether the iterable collection is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06520900c14fafbbdd12e943e6ab4bc833c80ba" translate="yes" xml:space="preserve">
          <source>Tests whether the iterator is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a94e2fd2ec0ea1bce9dc95c9cbba0dcc3cbd3f" translate="yes" xml:space="preserve">
          <source>Tests whether the lazy list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a75fbb4f002c99e0f3d0470f18ad5706d5c2a6c" translate="yes" xml:space="preserve">
          <source>Tests whether the linked hash map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269eff0d7f9f710fc98fce0af808e539b8f9e373" translate="yes" xml:space="preserve">
          <source>Tests whether the linked hash set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d038f40321af98e955eedc7b0e1c04f761eda35" translate="yes" xml:space="preserve">
          <source>Tests whether the list buffer is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623a07064e1661fcf0dbc727b798d3aa8cc78d04" translate="yes" xml:space="preserve">
          <source>Tests whether the list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1835b67148e005d30c03f7095cda60903e6035" translate="yes" xml:space="preserve">
          <source>Tests whether the list map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bae6315938208bfa8b6846dc522ffa54adc0f7" translate="yes" xml:space="preserve">
          <source>Tests whether the list set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4320b8d413069da79d18ae16be91d1cc2f936bd4" translate="yes" xml:space="preserve">
          <source>Tests whether the map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9011efe7f1e35c4efc35f2cfdbee4193a41ee681" translate="yes" xml:space="preserve">
          <source>Tests whether the mutable collision-proof hash map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="badb8ea3772a48a041c96e5fe8f3989eaacb11e0" translate="yes" xml:space="preserve">
          <source>Tests whether the mutable hash map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2c1ef4fe2b9b263120a7cfd26832901bfb4572" translate="yes" xml:space="preserve">
          <source>Tests whether the mutable hash set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1481ea6a088cdfda4297b87162af06ab1ee6f432" translate="yes" xml:space="preserve">
          <source>Tests whether the mutable list map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3927b1fa04952e29ecbd5c1e154c8386502c982e" translate="yes" xml:space="preserve">
          <source>Tests whether the mutable map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796048ca522e2647f480575eb908805dae0df62e" translate="yes" xml:space="preserve">
          <source>Tests whether the mutable tree map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0814fa4744a8dc919e71a991b4e0e296390645" translate="yes" xml:space="preserve">
          <source>Tests whether the mutable tree set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eafe41287dddc300fa77ebb07bbc5d9fd2fc579" translate="yes" xml:space="preserve">
          <source>Tests whether the numeric range is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94514d1315d8d1034d8a68897ed4777435054cfd" translate="yes" xml:space="preserve">
          <source>Tests whether the open hash map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b5d603d571ac0d43d13e3fb1e1d44445a16892" translate="yes" xml:space="preserve">
          <source>Tests whether the option contains a given value as an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ea02bf706b705abcc722405b6dc7154f34b921" translate="yes" xml:space="preserve">
          <source>Tests whether the priority queue is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc857af6c3d069736d593f11d8e5af4809c6c621" translate="yes" xml:space="preserve">
          <source>Tests whether the range is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17cde53bc44091cee59e0d69a89ba7f2817f1136" translate="yes" xml:space="preserve">
          <source>Tests whether the sequence is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b94e91d7ccbc4bb7c8c19e395595efd6837c5fa" translate="yes" xml:space="preserve">
          <source>Tests whether the set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336364837eec804fe823fff41f428f019b538347" translate="yes" xml:space="preserve">
          <source>Tests whether the string is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032463a30a12000992ac2d2410f94f25e8f19e93" translate="yes" xml:space="preserve">
          <source>Tests whether the type represented by this manifest is a subtype of the type represented by &lt;code&gt;that&lt;/code&gt; manifest, subject to the limitations described in the header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a400d1a4e16881010d8bea83f80b77b6826d6324" translate="yes" xml:space="preserve">
          <source>Tests whether the view is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b29a6b2fb549f01b2d0d940d9f50764de98307" translate="yes" xml:space="preserve">
          <source>Tests whether the view is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc935b7780859eb529b79cc408f4c806c5fe060" translate="yes" xml:space="preserve">
          <source>Tests whether the weak hash map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758cb39bfa5ebcd1e00eb4e00b2579fc0e511487" translate="yes" xml:space="preserve">
          <source>Tests whether this array contains a given value as an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3a2c60c321b873ef063288964bd5b26111b446" translate="yes" xml:space="preserve">
          <source>Tests whether this array contains the given array at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1d5015dac8fef203084501efb69f1e80e74eb5" translate="yes" xml:space="preserve">
          <source>Tests whether this array contains the given sequence at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427c1185a977412a1d7e09b9d7fcda588c25ad63" translate="yes" xml:space="preserve">
          <source>Tests whether this array ends with the given array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75f2c0dbb169a3153b43f398d8dbe5cd1c86070" translate="yes" xml:space="preserve">
          <source>Tests whether this array ends with the given sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b72c730ee76dd35fc0c6a0d2e58127a7e7f90c" translate="yes" xml:space="preserve">
          <source>Tests whether this array starts with the given array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47102f0ea6f12a6411d441abb6651371e61f2b52" translate="yes" xml:space="preserve">
          <source>Tests whether this collection can be repeatedly traversed. Always true for Iterables and false for Iterators unless overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05265fd3a4c36e94ab557c435eb57e22429bd808" translate="yes" xml:space="preserve">
          <source>Tests whether this immutable sequence can be repeatedly traversed. Always true for Iterables and false for Iterators unless overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18e1ea76657ed8f5ca0c3a29299b26e5cf21926" translate="yes" xml:space="preserve">
          <source>Tests whether this immutable sequence contains a given sequence as a slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c5d0b6f1ef8aa5f37b895c63e0949f5ee87d51" translate="yes" xml:space="preserve">
          <source>Tests whether this immutable sequence contains a given value as an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca1cdd3c0a49435524d3a8998150e935aa3fb54" translate="yes" xml:space="preserve">
          <source>Tests whether this immutable sequence contains given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6ceb5a1af97cfb232fbce97c3d6f3af47b3040" translate="yes" xml:space="preserve">
          <source>Tests whether this immutable sequence contains the given sequence at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d60c6fb9ef77593e70d2f6babbcbc317e6d11a" translate="yes" xml:space="preserve">
          <source>Tests whether this immutable sequence ends with the given sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6214ff6573e29d3c4b15dc9385c0f62321d8c36" translate="yes" xml:space="preserve">
          <source>Tests whether this iterable collection can be repeatedly traversed. Always true for Iterables and false for Iterators unless overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4f541ad73f480a502477cb77f5d1b76b39d83a" translate="yes" xml:space="preserve">
          <source>Tests whether this iterator contains a given value as an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2cab9a09fea26581638ad01439d6c3a440d82d" translate="yes" xml:space="preserve">
          <source>Tests whether this list contains a given value as an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cb830d87c7b36ebc61fe900541d92960c9bb06" translate="yes" xml:space="preserve">
          <source>Tests whether this map contains a binding for a key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ed1259fedfeae4a5f46c9a1c6f1fa4cadf6b78" translate="yes" xml:space="preserve">
          <source>Tests whether this map contains a binding for a key. This method, which implements an abstract method of trait &lt;code&gt;PartialFunction&lt;/code&gt;, is equivalent to &lt;code&gt;contains&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56934f1eb60bd059360452c6534001040c1912e4" translate="yes" xml:space="preserve">
          <source>Tests whether this numeric range contains a given value as an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71886fe8379bb311e6474edec114a1791030ae7b" translate="yes" xml:space="preserve">
          <source>Tests whether this range contains a given value as an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573372dfa7581939ad57303e3ea4134471832039" translate="yes" xml:space="preserve">
          <source>Tests whether this sequence contains a given sequence as a slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf8e83dbfc2a277a5443eec2a27ccb9bdcf1891" translate="yes" xml:space="preserve">
          <source>Tests whether this sequence contains a given value as an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcde3b3d04539b6c205299054e55cc9ea271a46d" translate="yes" xml:space="preserve">
          <source>Tests whether this sequence contains given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaee724340c35d7381c8922eb99b13b3546c76d6" translate="yes" xml:space="preserve">
          <source>Tests whether this sequence contains the given sequence at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c65745290777b4ff42e86f609133ebb78be2e1b" translate="yes" xml:space="preserve">
          <source>Tests whether this sequence ends with the given sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977af54885e72087ee5b0a84021fad618537dcf0" translate="yes" xml:space="preserve">
          <source>Tests whether this set is a subset of another set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2af3f9b4a4272b53bc0a484de57e75bc872f197" translate="yes" xml:space="preserve">
          <source>Tests whether this string contains the given character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b856eb5e675b05904d454e8fc442204695f3dc" translate="yes" xml:space="preserve">
          <source>Tests whether this view can be repeatedly traversed. Always true for Iterables and false for Iterators unless overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3df8e7a16b4b2b395d9575127348e1fe45edd9" translate="yes" xml:space="preserve">
          <source>Tests whether this wrapped string contains the given sequence at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c09799b9b8ce9694202ba8b1afcc944a2e99ea" translate="yes" xml:space="preserve">
          <source>Tests whether this wrapped string ends with the given sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df59dcef6f45b427b2612ad6af118208b6bce52c" translate="yes" xml:space="preserve">
          <source>Text replacement can be performed unconditionally or as a function of the current match:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeaa58922008e1485e44a540f948258b929ee3d8" translate="yes" xml:space="preserve">
          <source>That is, every key &lt;code&gt;k&lt;/code&gt; is bound to a immutable sequence of those elements &lt;code&gt;x&lt;/code&gt; for which &lt;code&gt;f(x)&lt;/code&gt; equals &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e66ccffb1a5116a279758f9ef40c58de7bd125" translate="yes" xml:space="preserve">
          <source>That is, every key &lt;code&gt;k&lt;/code&gt; is bound to a iterable collection of those elements &lt;code&gt;x&lt;/code&gt; for which &lt;code&gt;f(x)&lt;/code&gt; equals &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ad6635d0438a8a2846d5af127f53348524fbe6" translate="yes" xml:space="preserve">
          <source>That is, every key &lt;code&gt;k&lt;/code&gt; is bound to a view of those elements &lt;code&gt;x&lt;/code&gt; for which &lt;code&gt;f(x)&lt;/code&gt; equals &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6bc5377fdf3cb18f3ff8605035c9b90621aba4" translate="yes" xml:space="preserve">
          <source>That is, every key &lt;code&gt;k&lt;/code&gt; is bound to an array of those elements &lt;code&gt;x&lt;/code&gt; for which &lt;code&gt;f(x)&lt;/code&gt; equals &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095babc6712e20912751937a5ab236f0879ed92b" translate="yes" xml:space="preserve">
          <source>That works because a &lt;code&gt;Regex&lt;/code&gt; extractor produces a sequence of strings. Extracting only the year from a date could also be expressed with a sequence wildcard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="ad0c524f44a5c58ac45f790a42b182d85dadf6a1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ch:Char&quot; id=&quot;scala.io.Source#ch&quot; name=&quot;scala.io.Source#ch&quot;&gt;current input&lt;/a&gt; and &lt;a href=&quot;#pos:Int&quot; id=&quot;scala.io.Source#pos&quot; name=&quot;scala.io.Source#pos&quot;&gt;position&lt;/a&gt;, as well as the &lt;a href=&quot;#next():Char&quot; id=&quot;scala.io.Source#next&quot; name=&quot;scala.io.Source#next&quot;&gt;next character&lt;/a&gt; methods delegate to &lt;a href=&quot;source%24positioner&quot; id=&quot;scala.io.Source.Positioner&quot; name=&quot;scala.io.Source.Positioner&quot;&gt;the positioner&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5edd6e6196a74452c4c0be9914d811942a4deca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt; class is a base class to share code between &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; (for reference types) and the manual specializations &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;, &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt; and &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721f8bb58309b89b61561dbe31e22562f1f1aae3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;await%24&quot; id=&quot;scala.concurrent.Await&quot; name=&quot;scala.concurrent.Await&quot;&gt;Await&lt;/a&gt; object provides methods that allow accessing the result of an &lt;code&gt;Awaitable&lt;/code&gt; by blocking the current thread until the &lt;code&gt;Awaitable&lt;/code&gt; has been completed or a timeout has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eeecefbfb1749fad28763678d056927ec3fc6b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scala/index&quot; id=&quot;scala&quot; name=&quot;scala&quot;&gt;scala&lt;/a&gt; package contains core types like &lt;a href=&quot;scala/int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;&lt;code&gt;Int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scala/float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scala/array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;scala/option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt; which are accessible in all Scala compilation units without explicit qualification or imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6dcc6a1e948d4e10f581c152636d9df21b90689" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;source#ch:Char&quot; id=&quot;scala.io.Source#ch&quot; name=&quot;scala.io.Source#ch&quot;&gt;current input&lt;/a&gt; and &lt;a href=&quot;source#pos:Int&quot; id=&quot;scala.io.Source#pos&quot; name=&quot;scala.io.Source#pos&quot;&gt;position&lt;/a&gt;, as well as the &lt;a href=&quot;source#next():Char&quot; id=&quot;scala.io.Source#next&quot; name=&quot;scala.io.Source#next&quot;&gt;next character&lt;/a&gt; methods delegate to &lt;a href=&quot;source%24positioner&quot; id=&quot;scala.io.Source.Positioner&quot; name=&quot;scala.io.Source.Positioner&quot;&gt;the positioner&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25a20867f4bbafbd8dfae4434734d1de0d6bc16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;App&lt;/code&gt; trait can be used to quickly turn objects into executable programs. Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2684a40ce48b5e4b79a1f68bba7398d73c2df9ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IterableOnce&lt;/code&gt; to view. A proper &lt;code&gt;Iterable&lt;/code&gt; is used directly. If it is really only &lt;code&gt;IterableOnce&lt;/code&gt; it gets memoized on the first traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3016a534d9213a201a7d9a27d1404180462909f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JavaConversions&lt;/code&gt; object provides implicit conversions supporting interoperability between Scala and Java concurrency classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d79bc1ce462c652fc9c02156e392964a9edaf9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Predef&lt;/code&gt; object provides definitions that are accessible in all Scala compilation units without explicit qualification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0066c041cfd73202f2e8955ab712c0d3859242f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Process&lt;/code&gt; representing it (&lt;code&gt;run&lt;/code&gt; methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053594db817d1b972915f99a68d015ff3c6ca909" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Range&lt;/code&gt; class represents integer values in range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b5292faaf47fd017a01978a7b1a533757e0a6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Sorting&lt;/code&gt; object provides convenience wrappers for &lt;code&gt;java.util.Arrays.sort&lt;/code&gt;. Methods that defer to &lt;code&gt;java.util.Arrays.sort&lt;/code&gt; say that they do or under what conditions that they do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a753b2be77640d78e9d4881a3d1ee65240063839" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; type in Scala has all the methods of the underlying &lt;code&gt;java.lang.String&lt;/code&gt;, of which it is just an alias. (See the documentation corresponding to your Java version, for example &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/String.html&quot;&gt;http://docs.oracle.com/javase/8/docs/api/java/lang/String.html&lt;/a&gt;.) In addition, extension methods in &lt;a href=&quot;collection/stringops&quot; id=&quot;scala.collection.StringOps&quot; name=&quot;scala.collection.StringOps&quot;&gt;scala.collection.StringOps&lt;/a&gt; are added implicitly through the conversion &lt;a href=&quot;#augmentString(x:String):scala.collection.StringOps&quot; id=&quot;scala.Predef#augmentString&quot; name=&quot;scala.Predef#augmentString&quot;&gt;augmentString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d5a5141d50e993f19f2547efeb7f1ae3f747a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Try&lt;/code&gt; type represents a computation that may either result in an exception, or return a successfully computed value. It's similar to, but semantically different from the &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;scala.util.Either&lt;/a&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e15e0991f5c9e0e2b009803cd7df968e709c88e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;asJavaPrimitiveStream&lt;/code&gt; method converts a &lt;code&gt;Stream[Int]&lt;/code&gt; to an &lt;code&gt;IntStream&lt;/code&gt;. It is the dual of the &lt;code&gt;boxed&lt;/code&gt; method defined on primitive streams (e.g., &lt;code&gt;IntStream.boxed&lt;/code&gt; is a &lt;code&gt;Stream[Integer]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc16ac677bfb9ab396820e3e3c6b56ae280de099" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;asJavaSeqStream &lt;/code&gt; extension method is available on any Scala collection. The &lt;code&gt;asJavaParStream&lt;/code&gt; extension method can only be invoked on collections where the return type of the &lt;code&gt;stepper&lt;/code&gt; method is marked with the &lt;a href=&quot;../collection/stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;scala.collection.Stepper.EfficientSplit&lt;/a&gt; marker trait. This trait is added to steppers that support partitioning, and therefore efficient parallel processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2e22e7e6ab68a0c86f5d98b9f297e1551b30f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.LazyZip2&lt;/code&gt; returned by this method preserves laziness; elements are only evaluated individually as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc45fa5653a761e0e56ef97a4c587d85f9bf250" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.WithFilter&lt;/code&gt; returned by this method preserves laziness; elements are only evaluated individually as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8726ea07973330ec7e4d07273d35dbc29e545f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eq&lt;/code&gt; method implements an &lt;a href=&quot;http://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;equivalence relation&lt;/a&gt; on non-null instances of &lt;code&gt;AnyRef&lt;/code&gt;, and has three additional properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a7c17b4a4ae376d88938002bd669f1afb35f81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxExtraThreads&lt;/code&gt; is the maximum number of extra threads to have at any given time to evade deadlock, see &lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;scala.concurrent.BlockContext&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489fc589d7d0ac0a66e366bec8e2cb26838b15ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orderingBy(orderBy: TreeSeqMap.OrderBy): TreeSeqMap[K, V]&lt;/code&gt; method can be used to switch to the specified ordering for the returned map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d5e08240b1a0ecd05545891f8d7084d147b2a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scala.language&lt;/code&gt; object controls the language features available to the programmer, as proposed in the &lt;a href=&quot;https://docs.google.com/document/d/1nlkvpoIRkx7at1qJEZafJwthZ3GeIklTFhqmXMvTX9Q/edit&quot;&gt;&lt;b&gt;SIP-18 document&lt;/b&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b3b8b4aa3d309286858b5676e6a09bd9db1a8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toScala&lt;/code&gt; extension methods on Java streams collects the result of a stream pipeline into a Scala collection, for example &lt;code&gt;stream.toScala(List)&lt;/code&gt;, &lt;code&gt;stream.toScala(Vector)&lt;/code&gt;. Note that transformation operations on streams are lazy (also called &quot;intermediate&quot;), terminal operations such as &lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt; or &lt;code&gt;toScala&lt;/code&gt; trigger the evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08db4f8f1117dd46a32a01645a5bd85284277e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withExtensions&lt;/code&gt; implicit conversion makes the &lt;code&gt;mapReduce&lt;/code&gt; operation available on any type &lt;code&gt;Repr&lt;/code&gt; for which it exists an implicit &lt;code&gt;IsIterable[Repr]&lt;/code&gt; instance. Note how we keep track of the precise type of the implicit &lt;code&gt;it&lt;/code&gt; argument by using the &lt;code&gt;it.type&lt;/code&gt; singleton type, rather than the wider &lt;code&gt;IsIterable[Repr]&lt;/code&gt; type. We do that so that the information carried by the type members &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; of the &lt;code&gt;it&lt;/code&gt; argument is not lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26077793c98259b33deff6a8f360ada7a95e9a4" translate="yes" xml:space="preserve">
          <source>The &lt;span name=&quot;Stepper&quot;&gt;Stepper&lt;/span&gt; interface provides iterator-like &lt;code&gt;hasStep&lt;/code&gt; and &lt;code&gt;nextStep&lt;/code&gt; methods, and is specialized for &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt;. The &lt;code&gt;intAccumulator.stepper&lt;/code&gt; method creates an &lt;a href=&quot;../collection/intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;scala.collection.IntStepper&lt;/a&gt; that yields the elements of the accumulator without boxing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88c47c7272207a9d6440ce09e50681b34762997" translate="yes" xml:space="preserve">
          <source>The Char to match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234d57b09281f9577a6d14649b5726a31bef1678" translate="yes" xml:space="preserve">
          <source>The Codec of Last Resort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b1bf182cb7c8a60a63b1cf80eece0fa989a39b" translate="yes" xml:space="preserve">
          <source>The CompletionStage which may eventually supply the completion for the returned Scala Future</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475811f50a14e5e0c745be85c862c5b7193f24ac" translate="yes" xml:space="preserve">
          <source>The ExecutionContext is used to configure how and on which</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811770a12472e01f24be6930cad29eb6257dee44" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;Collection&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0ed5b5c182bb356cb681e9658b24f32b821db4" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;ConcurrentMap&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d46e1331ac2c2a5831150b7a5e3f1a2ef1d361" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;Dictionary&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2348cb060ce47bc8377607671541e6a95618206" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;Enumeration&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb81ac75f0a649ffc69d2dedb7a4f70856a2f40c" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;Iterable&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4414df6dc86f67c8ba07bcbd985af828c344b70" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;Iterator&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da80456c567977adff726be048f2e27d623064c0" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;List&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3e78c37a7e94cc77e17920030e50a72e652469" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;Map&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326ba6563df19ddf9e144f7b4f189fc5d4a52233" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;Properties&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75260c970a757b73093ee10fa0c42ecbfcd14951" translate="yes" xml:space="preserve">
          <source>The Java &lt;code&gt;Set&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72076e7a80e7d38a0065c410472902114e71f02" translate="yes" xml:space="preserve">
          <source>The Scala &lt;code&gt;Buffer&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc4b95223a7b51dae5eee1d28bfe4c363506e0d" translate="yes" xml:space="preserve">
          <source>The Scala &lt;code&gt;Iterable&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acc4336c6038783dc7e4e3ddbfabc675325ff67" translate="yes" xml:space="preserve">
          <source>The Scala &lt;code&gt;Iterator&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3c7d7ff2dba39a51b7806d3cd32edf902bd9fe" translate="yes" xml:space="preserve">
          <source>The Scala &lt;code&gt;Map&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0ae555c77a0c74b96ce0fcd05b56a2b95552cc" translate="yes" xml:space="preserve">
          <source>The Scala &lt;code&gt;Seq&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf0c05de18a336065cf72140f2390dd7324bfcc" translate="yes" xml:space="preserve">
          <source>The Scala &lt;code&gt;Set&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b784173d01cf8607f6a7dc4d95f8e24020e792" translate="yes" xml:space="preserve">
          <source>The Scala &lt;code&gt;concurrent.Map&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9398db61d5067687f8fa37479faaf793a2758b" translate="yes" xml:space="preserve">
          <source>The Scala Future which may eventually supply the completion for the returned CompletionStage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f3bd1010896fc4d7b584086ae6499762cf580f" translate="yes" xml:space="preserve">
          <source>The Scala compiler may replace a call to this method with an equivalent, but more efficient, use of a StringBuilder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4df9208b73c7c48420ada583b02026f4cf1608" translate="yes" xml:space="preserve">
          <source>The Scala mutable &lt;code&gt;Map&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daac7f99737bffa0971f58f9c1d7412b1833c67c" translate="yes" xml:space="preserve">
          <source>The Scala mutable &lt;code&gt;Set&lt;/code&gt; to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c4a88072bfc665cd31d7c119c8f5db77580c30" translate="yes" xml:space="preserve">
          <source>The Stepper enables creating a Java stream to operate on the collection, see &lt;a href=&quot;../../jdk/streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt;. For collections holding primitive values, the Stepper can be used as an iterator which doesn't box the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bda5d43c0a40b1ab81b844cf44927d2f47530a" translate="yes" xml:space="preserve">
          <source>The Stepper enables creating a Java stream to operate on the collection, see &lt;a href=&quot;../jdk/streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt;. For collections holding primitive values, the Stepper can be used as an iterator which doesn't box the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c6bee34e6d99c177b239c26888945acecca07f" translate="yes" xml:space="preserve">
          <source>The Stepper enables creating a Java stream to operate on the collection, see &lt;a href=&quot;jdk/streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt;. For collections holding primitive values, the Stepper can be used as an iterator which doesn't box the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c72861ec93ad6c9c21eca6ea0374c757e8724dc" translate="yes" xml:space="preserve">
          <source>The Stepper enables creating a Java stream to operate on the collection, see &lt;a href=&quot;streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt;. For collections holding primitive values, the Stepper can be used as an iterator which doesn't box the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe2110766ec8faa6eb09eeacbbdce73d13d3421" translate="yes" xml:space="preserve">
          <source>The String representation of the scala.Boolean companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be383a81b675dd50dc587adad92563585574ab89" translate="yes" xml:space="preserve">
          <source>The String representation of the scala.Byte companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d735276e3ef071d9ee9f457f23de3d3f993672c" translate="yes" xml:space="preserve">
          <source>The String representation of the scala.Char companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9aac9a1056ab894c01913569813c014f65d1ad1" translate="yes" xml:space="preserve">
          <source>The String representation of the scala.Double companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01573989c3c60145d65441c19183d3d4a4dbe176" translate="yes" xml:space="preserve">
          <source>The String representation of the scala.Float companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29240104b62fff4b356af7fec18dc4c727fc45e4" translate="yes" xml:space="preserve">
          <source>The String representation of the scala.Int companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7511ff9fc925a04e0349307d6ea8cb6721e4a57c" translate="yes" xml:space="preserve">
          <source>The String representation of the scala.Long companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e904f1926d857bcf4e5fb91d869e8a9f73aec13" translate="yes" xml:space="preserve">
          <source>The String representation of the scala.Short companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8d1e99c8b4812e1695d494c4c6c93d12b4e738" translate="yes" xml:space="preserve">
          <source>The String representation of the scala.Unit companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44037e425fcd4c4c6e17e3b9af9b409b49e5081" translate="yes" xml:space="preserve">
          <source>The String to be inserted at the start index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8930b2aa948ef3e828c5422f02e0aa55b6c949f" translate="yes" xml:space="preserve">
          <source>The Undefined value corresponds closely to Double.NaN:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117772815c5bb95d4d65152c0d74b2fa1a0a4e2b" translate="yes" xml:space="preserve">
          <source>The above example returns &lt;code&gt;null&lt;/code&gt; instead of producing a type error at compile-time. The map is implicitly converted to a &lt;code&gt;java.util.Map&lt;/code&gt; which provides a method &lt;code&gt;get(x: AnyRef)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6f0d5ee35917bc6776eac5652960722a49e74b" translate="yes" xml:space="preserve">
          <source>The accumulated value from successive applications of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e30c0e2ecbedb089f0ed75f752fcdafa1584967" translate="yes" xml:space="preserve">
          <source>The accumulated value from successive applications of &lt;code&gt;op&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d519d89c7dbe70697d06e45922bb010178a1bdf" translate="yes" xml:space="preserve">
          <source>The additional logic to apply after all existing finally bodies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab27a938dd228a595365b2eabff94404c37cdb5" translate="yes" xml:space="preserve">
          <source>The annotation can also be attached to implicit parameters. In this case, &lt;code&gt;${Xi}&lt;/code&gt; can refer to type parameters in the current scope. The &lt;code&gt;@implicitNotFound&lt;/code&gt; message on the parameter takes precedence over the one on the parameter's type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aef0bfc78730acd88570302d9d25417fa9a7e9f" translate="yes" xml:space="preserve">
          <source>The arity of this product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee735c01a0d5ec7cec9c82cc8c16b5e9e39c3ff3" translate="yes" xml:space="preserve">
          <source>The array of strings computed by splitting the input around matches of this regexp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a356938773766d7a5723b72dfefcc92a0c136c74" translate="yes" xml:space="preserve">
          <source>The array to sort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a81b5f0676aa6bb2847e5538ff617f7a753203" translate="yes" xml:space="preserve">
          <source>The beginning index, inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b20ba9de2c79722953886808f4b6e3764e45b6" translate="yes" xml:space="preserve">
          <source>The behaviour follows, and is implemented in terms of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#split-java.lang.String-&quot;&gt;String.split(re: String)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019ec4ecb42c67a9eea5ca117e552f625838e960" translate="yes" xml:space="preserve">
          <source>The behaviour of modifying the map during an iteration is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ddec1fa8b5a27acbcdb7b6ce91b51920deb5ea" translate="yes" xml:space="preserve">
          <source>The builder returned by this method only evaluates elements of collections added to it as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f11cb8f3ed980977e660d64d3123b0bc9cfbf47" translate="yes" xml:space="preserve">
          <source>The canonical builder for collections that are growable, i.e. that support an efficient &lt;code&gt;+=&lt;/code&gt; method which adds an element to the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16768244a8cabb52bef8529ac887a207bcbec053" translate="yes" xml:space="preserve">
          <source>The canonical way to create a &lt;code&gt;Regex&lt;/code&gt; is by using the method &lt;code&gt;r&lt;/code&gt;, provided implicitly for strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbaf0887cda629caa889b9ed48cfe30d3269670" translate="yes" xml:space="preserve">
          <source>The central component of the process execution DSL is the &lt;a href=&quot;process/processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; trait. It is &lt;code&gt;ProcessBuilder&lt;/code&gt; that implements the process execution DSL, that creates the &lt;a href=&quot;process/process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;scala.sys.process.Process&lt;/a&gt; that will handle the execution, and return the results of such execution to the caller. We can see that DSL in the introductory example: &lt;code&gt;#|&lt;/code&gt;, &lt;code&gt;#&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;#!!&lt;/code&gt; are methods on &lt;code&gt;ProcessBuilder&lt;/code&gt; used to create a new &lt;code&gt;ProcessBuilder&lt;/code&gt; through composition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4855e38addd28b2b4932e43bf28c10724105b3" translate="yes" xml:space="preserve">
          <source>The central component of the process execution DSL is the &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; trait. It is &lt;code&gt;ProcessBuilder&lt;/code&gt; that implements the process execution DSL, that creates the &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;scala.sys.process.Process&lt;/a&gt; that will handle the execution, and return the results of such execution to the caller. We can see that DSL in the introductory example: &lt;code&gt;#|&lt;/code&gt;, &lt;code&gt;#&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;#!!&lt;/code&gt; are methods on &lt;code&gt;ProcessBuilder&lt;/code&gt; used to create a new &lt;code&gt;ProcessBuilder&lt;/code&gt; through composition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48569cb91a2417c8e808296b24ff65aa92b45d55" translate="yes" xml:space="preserve">
          <source>The char sequence after last character of match in group &lt;code&gt;i&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if nothing was matched for that group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa942d00ffc2bbf06cb25de32af4495325b24c41" translate="yes" xml:space="preserve">
          <source>The char sequence before first character of match in group &lt;code&gt;i&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if nothing was matched for that group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c6d69cbfe695f17e4b736663eefd147606472b" translate="yes" xml:space="preserve">
          <source>The char sequence before first character of match, or &lt;code&gt;null&lt;/code&gt; if nothing was matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e55b502f67f7f8fc84951d6e4226e035fadf9e" translate="yes" xml:space="preserve">
          <source>The character sequence to split</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be618a12a096fe81d07c6518c70249df7cd01ec" translate="yes" xml:space="preserve">
          <source>The close() method closes the underlying resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67be5692031a96d6300fc5106496108a9a148db0" translate="yes" xml:space="preserve">
          <source>The code to evaluate under the new setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5b5f602505c129d472d93fabc0b569dbc1d2c9" translate="yes" xml:space="preserve">
          <source>The collection that gets appended to this lazy list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13a0c8ba280e7cdbf804cec837fe53346de61cd" translate="yes" xml:space="preserve">
          <source>The collection that gets appended to this stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18edae7ef93e604cd01a1c23735e938525b9318b" translate="yes" xml:space="preserve">
          <source>The combining function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58faa61881d78a5859a24963a81b620a4e7a7d9e" translate="yes" xml:space="preserve">
          <source>The command line arguments passed to the application's &lt;code&gt;main&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459dc52b836bb5a40b00476648d38c1567ed1efe" translate="yes" xml:space="preserve">
          <source>The companion object of this array buffer, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4dade9513b2f5f6b50ad85e4972c1c3b822502" translate="yes" xml:space="preserve">
          <source>The companion object of this array deque, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b804c4720b2749451128d5c3bf026aaeaafd0ee" translate="yes" xml:space="preserve">
          <source>The companion object of this growable collection, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31679cd8c466a06917fa88ceb62fef7bfc1222f2" translate="yes" xml:space="preserve">
          <source>The companion object of this immutable array, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af48bae312add1c7e9b741634ceda9d47d6cf765" translate="yes" xml:space="preserve">
          <source>The companion object of this immutable champ hash set, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1ce344833a3d0fc6e942748975b46b2d59073f" translate="yes" xml:space="preserve">
          <source>The companion object of this immutable collection, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb2770836138d2d092238e8980692e27f599fd7" translate="yes" xml:space="preserve">
          <source>The companion object of this immutable map, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e11bde9d68f31de83d00c614550f1be447af849" translate="yes" xml:space="preserve">
          <source>The companion object of this immutable queue, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990aa62456dafd36eb43dc2f27fef08030cad52c" translate="yes" xml:space="preserve">
          <source>The companion object of this immutable sequence, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d531da64e6e5bf43e18fdbb99cdfc7665f3fe46b" translate="yes" xml:space="preserve">
          <source>The companion object of this immutable set, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212a5f70d2d3d34806c7bb86fae2fac8821e2f8d" translate="yes" xml:space="preserve">
          <source>The companion object of this iterable collection, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5711b0b567fdf2108de53549f61b556139718b0e" translate="yes" xml:space="preserve">
          <source>The companion object of this lazy list, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa668eef86b35268db03a3f7bbe97d49a3ea2430" translate="yes" xml:space="preserve">
          <source>The companion object of this linked hash set, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b8624c09861bd8b4cff6649fea39fa81fcb83c" translate="yes" xml:space="preserve">
          <source>The companion object of this list buffer, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990e4ebca3f8763e45486baabc1a7dda884a5ee3" translate="yes" xml:space="preserve">
          <source>The companion object of this list set, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1570a0e01c14af1b4ea1abdd3cee06110f8210" translate="yes" xml:space="preserve">
          <source>The companion object of this list, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969be8fef12a228031482edc7a8f0d07532a8e23" translate="yes" xml:space="preserve">
          <source>The companion object of this map, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7964a43f88b2500cc7f7b54d9a215838bbe513" translate="yes" xml:space="preserve">
          <source>The companion object of this mutable hash set, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c466b91542fcb011b7d1bf244aa9f18ec4e8f42" translate="yes" xml:space="preserve">
          <source>The companion object of this mutable queue, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990677ea16fede4e3bf20d079058c1daf497946c" translate="yes" xml:space="preserve">
          <source>The companion object of this mutable sequence, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d32b7f1bb46a7c728d96709ab155acffca16c7" translate="yes" xml:space="preserve">
          <source>The companion object of this mutable set, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0735f1c741d5690c675c6a10475bc8812c986d21" translate="yes" xml:space="preserve">
          <source>The companion object of this sequence, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea3c26cb6bd39cfb0c9016ac4876fca0bb406a1" translate="yes" xml:space="preserve">
          <source>The companion object of this set, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a8529d87a5f21ca8b175d81ba4a2bd7c0b8c2a" translate="yes" xml:space="preserve">
          <source>The companion object of this shrinkable collection, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e363e1606b447c60c952ba526466dac9eb6363" translate="yes" xml:space="preserve">
          <source>The companion object of this sorted map, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043c5f81e6f220e312045aa255924ee74e9644f0" translate="yes" xml:space="preserve">
          <source>The companion object of this sorted set, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8934920d2922602d47e5a6da9db5711a3ae3ebcb" translate="yes" xml:space="preserve">
          <source>The companion object of this stack, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d29f71b3c510a048a7d86d35824378c1027053f" translate="yes" xml:space="preserve">
          <source>The companion object of this unrolled buffer, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9e2f863a3790d5842c112656d6a3ed07609655" translate="yes" xml:space="preserve">
          <source>The companion object of this vector, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c517097311da64ba0429fe28dce0f203380b3ceb" translate="yes" xml:space="preserve">
          <source>The companion object of this view, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0792ae24116cb82abfaaa185d7d18530e727560" translate="yes" xml:space="preserve">
          <source>The companion object of this wrapped array, providing various factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0239346caa5f24a46ec6d661eb2e31c5dc307bb3" translate="yes" xml:space="preserve">
          <source>The compiler issues the following error messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60dba7f120b456c11d51406ca06a3ba4bea0e04" translate="yes" xml:space="preserve">
          <source>The compiler tries to turn unchecked type tests in pattern matches into checked ones by wrapping a &lt;code&gt;(_: T)&lt;/code&gt; type pattern as &lt;code&gt;ct(_: T)&lt;/code&gt;, where &lt;code&gt;ct&lt;/code&gt; is the &lt;code&gt;ClassTag[T]&lt;/code&gt; instance. Type tests necessary before calling other extractors are treated similarly. &lt;code&gt;SomeExtractor(...)&lt;/code&gt; is turned into &lt;code&gt;ct(SomeExtractor(...))&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; in &lt;code&gt;SomeExtractor.unapply(x: T)&lt;/code&gt; is uncheckable, but we have an instance of &lt;code&gt;ClassTag[T]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd05f0242bc5282f997b8ce278b293d5b3155dbe" translate="yes" xml:space="preserve">
          <source>The compiler will emit deprecation warnings grouped by library and version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c305f0081fd052af57fbb79d8425f03c5a4d1ad" translate="yes" xml:space="preserve">
          <source>The conversion between Duration and Double is done using &lt;a href=&quot;#toUnit(unit:scala.concurrent.duration.TimeUnit):Double&quot; id=&quot;scala.concurrent.duration.Duration#toUnit&quot; name=&quot;scala.concurrent.duration.Duration#toUnit&quot;&gt;Duration.toUnit&lt;/a&gt; (with unit NANOSECONDS) and &lt;a href=&quot;duration%24#fromNanos(nanos:Double):scala.concurrent.duration.Duration&quot; id=&quot;scala.concurrent.duration.Duration#fromNanos&quot; name=&quot;scala.concurrent.duration.Duration#fromNanos&quot;&gt;Duration.fromNanos(Double)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22617a275f08e37750b6e933d6e233a5a78851bf" translate="yes" xml:space="preserve">
          <source>The conversion between Duration and Double is done using &lt;a href=&quot;duration#toUnit(unit:scala.concurrent.duration.TimeUnit):Double&quot; id=&quot;scala.concurrent.duration.Duration#toUnit&quot; name=&quot;scala.concurrent.duration.Duration#toUnit&quot;&gt;Duration.toUnit&lt;/a&gt; (with unit NANOSECONDS) and &lt;a href=&quot;duration%24#fromNanos(nanos:Double):scala.concurrent.duration.Duration&quot; id=&quot;scala.concurrent.duration.Duration#fromNanos&quot; name=&quot;scala.concurrent.duration.Duration#fromNanos&quot;&gt;Duration.fromNanos(Double)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f8bd10e0e6c84e85c369a904564c95b58d20ba" translate="yes" xml:space="preserve">
          <source>The conversion to &lt;code&gt;ArrayOps&lt;/code&gt; takes priority over the conversion to &lt;code&gt;ArraySeq&lt;/code&gt;. For instance, consider the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6f7b9f9065b3fcb7f54f720c70a491b5bf1a89" translate="yes" xml:space="preserve">
          <source>The conversions return adapters for the corresponding API, i.e., the collections are wrapped, not converted. Changes to the original collection are reflected in the view, and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4e80738c53dd2e38aa90c68ecc51f2a9d7bba2" translate="yes" xml:space="preserve">
          <source>The conversions return adapters for the corresponding API, i.e., the collections are wrapped, not converted. Changes to the original collection are reflected in the view, and vice versa:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1d9e0d83c18dcbb05323210660d5c8cb5e6d39" translate="yes" xml:space="preserve">
          <source>The current &lt;code&gt;MatchData&lt;/code&gt; can be captured using the &lt;code&gt;matchData&lt;/code&gt; method. Alternatively, &lt;code&gt;findAllMatchIn&lt;/code&gt; returns an &lt;code&gt;Iterator[Match]&lt;/code&gt;, where there is no interaction between the iterator and &lt;code&gt;Match&lt;/code&gt; objects it has already produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ba8030e240382ab9575def9446d2a47eb7e348" translate="yes" xml:space="preserve">
          <source>The current result of f(), or the final result if complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cf6c6ebfd9d969b1b53af8488e3a2153bf74f7" translate="yes" xml:space="preserve">
          <source>The current value can be retrieved with the value method. New values should be pushed using the &lt;code&gt;withValue&lt;/code&gt; method. Values pushed via &lt;code&gt;withValue&lt;/code&gt; only stay valid while the &lt;code&gt;withValue&lt;/code&gt;'s second argument, a parameterless closure, executes. When the second argument finishes, the variable reverts to the previous value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104cc890addb8f2d3c0fb734bd60578c1f77f029" translate="yes" xml:space="preserve">
          <source>The current value of this &lt;code&gt;Future&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d2d0b0616909d702e038a49a56b132ddf2134c" translate="yes" xml:space="preserve">
          <source>The declaration of &lt;code&gt;addNaturals&lt;/code&gt; states that the list of integers passed should only contain natural numbers (i.e. non-negative), and that the result returned will also be natural. &lt;code&gt;require&lt;/code&gt; is distinct from &lt;code&gt;assert&lt;/code&gt; in that if the condition fails, then the caller of the function is to blame rather than a logical error having been made within &lt;code&gt;addNaturals&lt;/code&gt; itself. &lt;code&gt;ensuring&lt;/code&gt; is a form of &lt;code&gt;assert&lt;/code&gt; that declares the guarantee the function is providing with regards to its return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8148fae229c18cbc4a1d64157d3793015fb8d8ed" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;ExecutionContext&lt;/code&gt; implementation is backed by a work-stealing thread pool. By default, the thread pool uses a target number of worker threads equal to the number of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Runtime.html#availableProcessors--&quot;&gt;available processors&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6def773db77cb94ac209669b881712ef9674e3e" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;ExecutionContext&lt;/code&gt; implementation is backed by a work-stealing thread pool. It can be configured via the following &lt;a href=&quot;../sys/systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;scala.sys.SystemProperties&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9f6c4f0e27ad81b0b7f3204e9f23793fb7d2dc" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;GroupedIterator&lt;/code&gt; can be configured to either pad a partial result to size &lt;code&gt;size&lt;/code&gt; or suppress the partial result entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5fb7c367ef9cc6f21f0339a45ac0a996de7669" translate="yes" xml:space="preserve">
          <source>The default block context will execute the supplied thunk immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84b4628a6bbd753c194cc5e882e50aae2a35145" translate="yes" xml:space="preserve">
          <source>The default end of line character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5d355be8e49f0efd9920b01c88965302d774ad" translate="yes" xml:space="preserve">
          <source>The default hashing algorithm is platform dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7878375b9f4ed607a0ab338abbf4ba3bd4eff69c" translate="yes" xml:space="preserve">
          <source>The default implementation of the &lt;code&gt;clone&lt;/code&gt; method is platform dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7d7f721122a7fef7ed38e4f56ae15afc493081" translate="yes" xml:space="preserve">
          <source>The default implementation provided here needs to traverse the collection twice. Strict collections have an overridden version of &lt;code&gt;partition&lt;/code&gt; in &lt;code&gt;StrictOptimizedIterableOps&lt;/code&gt;, which requires only a single traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005246740c1e8fd8250d792edd7b85da21b9fde4" translate="yes" xml:space="preserve">
          <source>The default implementation returns &quot;Iterable&quot;. It is overridden for the basic collection kinds &quot;Seq&quot;, &quot;IndexedSeq&quot;, &quot;LinearSeq&quot;, &quot;Buffer&quot;, &quot;Set&quot;, &quot;Map&quot;, &quot;SortedSet&quot;, &quot;SortedMap&quot; and &quot;View&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448318c382eaa2f3cf73c61ee4e81a70b19e6185" translate="yes" xml:space="preserve">
          <source>The default implementations in this trait can be used in the common case when &lt;code&gt;CC[A]&lt;/code&gt; is the same as &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53b541123a7d6810b1c7218fa3390dc7d32fbb3" translate="yes" xml:space="preserve">
          <source>The default ordering is consistent with the ordering of Double numbers, which means that Undefined is considered greater than all other durations, including &lt;a href=&quot;duration%24#Inf:scala.concurrent.duration.Duration.Infinite&quot; id=&quot;scala.concurrent.duration.Duration#Inf&quot; name=&quot;scala.concurrent.duration.Duration#Inf&quot;&gt;Duration.Inf&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4e709128b2876c670af11f0a145a1e8d1498f4" translate="yes" xml:space="preserve">
          <source>The default positioner encodes line and column numbers in the position passed to &lt;a href=&quot;#report(pos:Int,msg:String,out:java.io.PrintStream):Unit&quot; id=&quot;scala.io.Source#report&quot; name=&quot;scala.io.Source#report&quot;&gt;report&lt;/a&gt;. This behavior can be changed by supplying a &lt;a href=&quot;#withPositioning(pos:Source.this.Positioner):Source.this.type&quot; id=&quot;scala.io.Source#withPositioning&quot; name=&quot;scala.io.Source#withPositioning&quot;&gt;custom positioner&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e61dfb1470a2da67545c265afb671534304622c" translate="yes" xml:space="preserve">
          <source>The default positioner encodes line and column numbers in the position passed to &lt;a href=&quot;source#report(pos:Int,msg:String,out:java.io.PrintStream):Unit&quot; id=&quot;scala.io.Source#report&quot; name=&quot;scala.io.Source#report&quot;&gt;report&lt;/a&gt;. This behavior can be changed by supplying a &lt;a href=&quot;source#withPositioning(pos:Source.this.Positioner):Source.this.type&quot; id=&quot;scala.io.Source#withPositioning&quot; name=&quot;scala.io.Source#withPositioning&quot;&gt;custom positioner&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342aa4ac8c9e720e392c85dbc76cc90c1bee315f" translate="yes" xml:space="preserve">
          <source>The default reporter simply prints the stack trace of the &lt;code&gt;Throwable&lt;/code&gt; to &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/System.html#err&quot;&gt;System.err&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720571249ee6b5758b424e57d85cc02ff08dae71" translate="yes" xml:space="preserve">
          <source>The default representation is platform dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15feeccd0a7308867ef382cf63609b689dd43e5c" translate="yes" xml:space="preserve">
          <source>The default serialization proxy for collection implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18aa15f77d7974bd6b1872eb3186e29a225f1b95" translate="yes" xml:space="preserve">
          <source>The definition of &lt;code&gt;fibs&lt;/code&gt; above creates a larger number of objects than necessary depending on how you might want to implement it. The following implementation provides a more &quot;cost effective&quot; implementation due to the fact that it has a more direct route to the numbers themselves:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f2c4c808c1c4a5d82b2e07de1c41a3ce19005c" translate="yes" xml:space="preserve">
          <source>The definition of &lt;code&gt;fibs&lt;/code&gt; is a &lt;code&gt;val&lt;/code&gt; not a method. The memoization of the &lt;code&gt;LazyList&lt;/code&gt; requires us to have somewhere to store the information and a &lt;code&gt;val&lt;/code&gt; allows us to do that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce37d28e92f025930caa7fdd9f3dd663b8d7d3e" translate="yes" xml:space="preserve">
          <source>The definition of &lt;code&gt;fibs&lt;/code&gt; is a &lt;code&gt;val&lt;/code&gt; not a method. The memoization of the &lt;code&gt;LazyList&lt;/code&gt; requires us to have somewhere to store the information and a &lt;code&gt;val&lt;/code&gt; allows us to do that.While the &lt;code&gt;LazyList&lt;/code&gt; is actually being modified during access, this does not change the notion of its immutability. Once the values are memoized they do not change and values that have yet to be memoized still &quot;exist&quot;, they simply haven't been realized yet.One must be cautious of memoization; you can very quickly eat up large amounts of memory if you're not careful. The reason for this is that the memoization of the &lt;code&gt;LazyList&lt;/code&gt; creates a structure much like &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;scala.collection.immutable.List&lt;/a&gt;. So long as something is holding on to the head, the head holds on to the tail, and so it continues recursively. If, on the other hand, there is nothing holding on to the head (e.g. we used &lt;code&gt;def&lt;/code&gt; to define the &lt;code&gt;LazyList&lt;/code&gt;) then once it is no longer being used directly, it disappears.Note that some operations, including &lt;a href=&quot;lazylist#drop(n:Int):scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.collection.immutable.LazyList#drop&quot; name=&quot;scala.collection.immutable.LazyList#drop&quot;&gt;drop&lt;/a&gt;, dropWhile, flatMap or &lt;a href=&quot;lazylist#collect%5BB%5D(pf:PartialFunction%5BA,B%5D):scala.collection.immutable.LazyList%5BB%5D&quot; id=&quot;scala.collection.immutable.LazyList#collect&quot; name=&quot;scala.collection.immutable.LazyList#collect&quot;&gt;collect&lt;/a&gt; may process a large number of intermediate elements before returning. These necessarily hold onto the head, since they are methods on &lt;code&gt;LazyList&lt;/code&gt;, and a lazy list holds its own head. For computations of this sort where memoization is not desired, use &lt;code&gt;Iterator&lt;/code&gt; when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76129f120493383591b81fc119e094ff752f004a" translate="yes" xml:space="preserve">
          <source>The details of when and if the &lt;code&gt;finalize&lt;/code&gt; method is invoked, as well as the interaction between &lt;code&gt;finalize&lt;/code&gt; and non-local returns and exceptions, are all platform dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cdb791703d5bdbe0d6baa61bea76271ad7d8e6" translate="yes" xml:space="preserve">
          <source>The development Scala version, if this is not a final release. The precise contents are not guaranteed, but it aims to provide a unique repository identifier (currently the svn revision) in the fourth dotted segment if the running version was built from source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c85e1040838578884e6f350387832c7a5c9f5f7" translate="yes" xml:space="preserve">
          <source>The difference between this class and &lt;code&gt;ArraySeq&lt;/code&gt;s is that calling transformer methods such as &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; will yield an array, whereas an &lt;code&gt;ArraySeq&lt;/code&gt; will remain an &lt;code&gt;ArraySeq&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d993937c2a932cb4b86ce9b17de22411915340" translate="yes" xml:space="preserve">
          <source>The difference between this class and &lt;code&gt;StringOps&lt;/code&gt; is that calling transformer methods such as &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; will yield an object of type &lt;code&gt;WrappedString&lt;/code&gt; rather than a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d52757d0e169d2389afd291325736dcc4e5c20" translate="yes" xml:space="preserve">
          <source>The element at given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616d9d73c36f3f68b76f60d24e67acc4b18bfe6a" translate="yes" xml:space="preserve">
          <source>The element that will be appended to the last segment, if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31428a6ce007feab7a09217e43179c9c2c68701e" translate="yes" xml:space="preserve">
          <source>The elements are appended in the order they are given out by the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ec399bfbf053ea966561de973fb5a856826c24" translate="yes" xml:space="preserve">
          <source>The empty iterable of the same type as this iterable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e616be1e003ce268830e64178cffda860a97b3f4" translate="yes" xml:space="preserve">
          <source>The empty string yields an empty iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d128f69ad674ecc9d61f93f2d01a44e0ec3576" translate="yes" xml:space="preserve">
          <source>The empty value set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371f0e2ea355b9c7b9cc307c8687cfbd195fa420" translate="yes" xml:space="preserve">
          <source>The empty view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4bc0fa803759932ebb10707210a4ce9627a065" translate="yes" xml:space="preserve">
          <source>The ending index, exclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc3652ab74e99a00481dffd8bf11012f6203cc3" translate="yes" xml:space="preserve">
          <source>The entry with the highest key value considered in unsigned order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b0d84b7a0b5b4ad09e70382039751f3a7fee09" translate="yes" xml:space="preserve">
          <source>The entry with the lowest key value considered in unsigned order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddbb7ddd95cd0d044354b5b5f045704d045366a" translate="yes" xml:space="preserve">
          <source>The equality method for reference types. Default implementation delegates to &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9badb9415419a10e0439de03ae06ce49e3d9fa95" translate="yes" xml:space="preserve">
          <source>The example shows that methods on &lt;code&gt;MatchData&lt;/code&gt; such as &lt;code&gt;start&lt;/code&gt; will advance to the first match, if necessary. It also shows that &lt;code&gt;hasNext&lt;/code&gt; will advance to the next unconsumed match, if &lt;code&gt;next&lt;/code&gt; has already returned the current match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25e1c83f7e77164847ff8f6b623542a8fcfce8f" translate="yes" xml:space="preserve">
          <source>The execution of the second one can be conditioned by the return code (exit status) of the first, either only when it's zero, or only when it's not zero. The methods &lt;code&gt;#&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;#||&lt;/code&gt; accomplish these tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392d27bdb556e845a929ffd99e8dd6285106db62" translate="yes" xml:space="preserve">
          <source>The experimental object contains features that are known to have unstable API or behavior that may change in future releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367342d38ffefecd39be48592c0e780ca26e8e48" translate="yes" xml:space="preserve">
          <source>The explicit conversion methods defined here are intended to be used in Java code. For Scala code, it is recommended to use the extension methods defined in &lt;a href=&quot;../collectionconverters%24&quot; id=&quot;scala.jdk.CollectionConverters&quot; name=&quot;scala.jdk.CollectionConverters&quot;&gt;scala.jdk.CollectionConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5196ab4c3b7e9ebc037d5899f25974e4ae6dcb54" translate="yes" xml:space="preserve">
          <source>The explicit conversion methods defined here are intended to be used in Java code. For Scala code, it is recommended to use the extension methods defined in &lt;a href=&quot;../durationconverters%24&quot; id=&quot;scala.jdk.DurationConverters&quot; name=&quot;scala.jdk.DurationConverters&quot;&gt;scala.jdk.DurationConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0de82f466e7762b755828a359fdaa76a2b5623f" translate="yes" xml:space="preserve">
          <source>The explicit conversion methods defined here are intended to be used in Java code. For Scala code, it is recommended to use the extension methods defined in &lt;a href=&quot;../functionconverters%24&quot; id=&quot;scala.jdk.FunctionConverters&quot; name=&quot;scala.jdk.FunctionConverters&quot;&gt;scala.jdk.FunctionConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e216b1c7df28ce37d2d0a5ab0d6d10b1028596d" translate="yes" xml:space="preserve">
          <source>The explicit conversion methods defined here are intended to be used in Java code. For Scala code, it is recommended to use the extension methods defined in &lt;a href=&quot;../futureconverters%24&quot; id=&quot;scala.jdk.FutureConverters&quot; name=&quot;scala.jdk.FutureConverters&quot;&gt;scala.jdk.FutureConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378d19c856e29b56d5deea2f464cf754f06267b5" translate="yes" xml:space="preserve">
          <source>The explicit conversion methods defined here are intended to be used in Java code. For Scala code, it is recommended to use the extension methods defined in &lt;a href=&quot;../optionconverters%24&quot; id=&quot;scala.jdk.OptionConverters&quot; name=&quot;scala.jdk.OptionConverters&quot;&gt;scala.jdk.OptionConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4afa888e154b57b934c9fe2b6bb8148e74a2e9" translate="yes" xml:space="preserve">
          <source>The explicit conversion methods defined here are intended to be used in Java code. For Scala code, it is recommended to use the extension methods defined in &lt;a href=&quot;../streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8488028ba01f7ef7e06ef01b4d9ea4592c6efd15" translate="yes" xml:space="preserve">
          <source>The explicit global &lt;code&gt;ExecutionContext&lt;/code&gt;. Invoke &lt;code&gt;global&lt;/code&gt; when you want to provide the global &lt;code&gt;ExecutionContext&lt;/code&gt; explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cd16a3e12ff40fbdca68e838f52adf06a2c599" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;x == that&lt;/code&gt; is equivalent to &lt;code&gt;if (x eq null) that eq null else x.equals(that)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc666f1bf1fb22deb300db3a9fbe6938f24b7fb" translate="yes" xml:space="preserve">
          <source>The extension methods return adapters for the corresponding API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d60314a02f7445ef0bec3e1c758238ae1465e3a" translate="yes" xml:space="preserve">
          <source>The fact that &lt;code&gt;tail&lt;/code&gt; works at all is of interest. In the definition of &lt;code&gt;fibs&lt;/code&gt; we have an initial &lt;code&gt;(0, 1, LazyList(...))&lt;/code&gt; so &lt;code&gt;tail&lt;/code&gt; is deterministic. If we defined &lt;code&gt;fibs&lt;/code&gt; such that only &lt;code&gt;0&lt;/code&gt; were concretely known then the act of determining &lt;code&gt;tail&lt;/code&gt; would require the evaluation of &lt;code&gt;tail&lt;/code&gt; which would cause an infinite recursion and stack overflow. If we define a definition where the tail is not initially computable then we're going to have an infinite recursion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cda9a7d076e92aad21a26e4a3f26a6e2a9a466" translate="yes" xml:space="preserve">
          <source>The factory to fix the element type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4c1089ec52010011c98e701468d2168b5b8efd" translate="yes" xml:space="preserve">
          <source>The factory to fix the key and value types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a3ab4f632a86fb40e2b23ba5aa224ddcd79d99" translate="yes" xml:space="preserve">
          <source>The filled instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550975953d43b76360f15112897c2c4cbc0e2b10" translate="yes" xml:space="preserve">
          <source>The first argument is a function for obtaining the result at any given point in time, and the second is the lengthy computation. Once the computation is complete, the &lt;code&gt;apply&lt;/code&gt; method will stop recalculating it and return a fixed value from that point forward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78b8a0f161fff2a03107c1bb45f3a5268d31f93" translate="yes" xml:space="preserve">
          <source>The first element of the result lazy list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a7435b3157cca43b6534cadc88e4b59a998914" translate="yes" xml:space="preserve">
          <source>The first element of the result stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6674824b358bb4cb4ea8b44a660fba52d26bd31" translate="yes" xml:space="preserve">
          <source>The first index in the array to sort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b148bf53d1d1754a228848b520e3881278587f" translate="yes" xml:space="preserve">
          <source>The first value that was extracted from the input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5509a8591a39b3c0dfd701bee5cedbba3f525c98" translate="yes" xml:space="preserve">
          <source>The following conversions are supported via &lt;code&gt;asScala&lt;/code&gt; and &lt;code&gt;asJava&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3231bf161de422e7b94f200cdba3e4dfbaa702c1" translate="yes" xml:space="preserve">
          <source>The following conversions are supported via &lt;code&gt;asScala&lt;/code&gt; and through specially-named extension methods to convert to Java collections, as shown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c948a301de4cb899dde16dc08303d3c9d2a7d8" translate="yes" xml:space="preserve">
          <source>The following conversions are supported via &lt;code&gt;asScala&lt;/code&gt; and through specially-named methods to convert to Java collections, as shown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5793a32f244b97d183ef422a156c77c15c45c224" translate="yes" xml:space="preserve">
          <source>The following example prints out &lt;code&gt;5&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58ac6f42a1a9ec68882f47ca908180712ad388a" translate="yes" xml:space="preserve">
          <source>The following expressions are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603b8075a62637c9f7f49a2bb776ae0705b94866" translate="yes" xml:space="preserve">
          <source>The following expressions are semantically equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7242072282f6a2e1eca05647af78d4a4ed3a64ff" translate="yes" xml:space="preserve">
          <source>The following extension methods are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e6f458ae3d4f2518b560181930c0c48d70b86e" translate="yes" xml:space="preserve">
          <source>The following one way conversion is provided via &lt;code&gt;asScala&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf32bf59d7fa79a7be1145bf4926c0ad0a2c708" translate="yes" xml:space="preserve">
          <source>The formatted string interpolator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52bddeea3b0561106700285d7bf889c402e0bb4" translate="yes" xml:space="preserve">
          <source>The full name of the property, e.g., &quot;java.awt.headless&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a491cdb36b12516d22db812df964f15e5329469" translate="yes" xml:space="preserve">
          <source>The fully realized &lt;code&gt;Stream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641daee46133fb2b7e259df964b60a71d8d4fbe2" translate="yes" xml:space="preserve">
          <source>The function computing element values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86386c64b368e60c5af3e4582a1993e1645599aa" translate="yes" xml:space="preserve">
          <source>The function to apply to each key, value mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20bcf2f92a72e2636d408a739c3d3d658b2e6fc" translate="yes" xml:space="preserve">
          <source>The function to bind across &lt;code&gt;Left&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622da0cca1ba348764d5c24889bf6626f31f97b7" translate="yes" xml:space="preserve">
          <source>The function to bind across &lt;code&gt;Right&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5847325a816b547ac42ad2662b8eeafba57d1b59" translate="yes" xml:space="preserve">
          <source>The function used to resolve conflicts between two mappings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76699973407a06349aabbf4f66ac209cbe39fa78" translate="yes" xml:space="preserve">
          <source>The function used to resolve conflicts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ee9fed2cdcc0d22ac19be6ef0abe78c19ae2e9" translate="yes" xml:space="preserve">
          <source>The function which maps a match to another string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621e87ed0a791c92151ec6cbcd1001a53e5a118b" translate="yes" xml:space="preserve">
          <source>The function which optionally maps a match to another string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85746496d66985833a143f8704af2752840330d" translate="yes" xml:space="preserve">
          <source>The functional list is characterized by persistence and structural sharing, thus offering considerable performance and space consumption benefits in some scenarios if used correctly. However, note that objects having multiple references into the same functional list (that is, objects that rely on structural sharing), will be serialized and deserialized with multiple lists, one for each reference to it. I.e. structural sharing is lost after serialization/deserialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1be25999454e841476378204908d9f2f8af1f3" translate="yes" xml:space="preserve">
          <source>The given function is applied if this is a &lt;code&gt;Right&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b181603fb95a29434a657e7b4260dc9b597186" translate="yes" xml:space="preserve">
          <source>The given key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a9252ef0c2c3b47425aceb046e9d0466109b64" translate="yes" xml:space="preserve">
          <source>The given sequence of functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ba091bc2c865441cb074030bda146c75a257df" translate="yes" xml:space="preserve">
          <source>The goal is to provide a minimal interface without any sequential operations. This allows third-party extension like Scala parallel collections to integrate at the level of IterableOnce without inheriting unwanted implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6efe11641720d07d15183bab2a6911043f83f28" translate="yes" xml:space="preserve">
          <source>The group name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09196cfe7052738df6ee830bc0a740aa1ff72981" translate="yes" xml:space="preserve">
          <source>The hashCode method for reference types. See hashCode in &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;scala.Any&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495f001cbf5d8953fc9f25a92945c6352c9a9346" translate="yes" xml:space="preserve">
          <source>The hashCode method for reference types. See hashCode in &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;scala.Any&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9b9f27eac0e0f43ed52e2c62db866960ed6b0d" translate="yes" xml:space="preserve">
          <source>The hashCode method for reference types. See hashCode in &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;scala.Any&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a86ed21407e1b66050983226326cf1c5267341" translate="yes" xml:space="preserve">
          <source>The implementation class of the set returned by &lt;code&gt;keySet&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdbb5ea035c2fa096be97893253bec4fa8f005f" translate="yes" xml:space="preserve">
          <source>The implementation class of the set returned by &lt;code&gt;keySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105de0b77f9630f4bceac272a98132de97fab61b" translate="yes" xml:space="preserve">
          <source>The implementation may allocate temporary storage for elements iterated by one iterator but not yet by the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286d3f3cac14ba8a5d40155d311ac060c18c577c" translate="yes" xml:space="preserve">
          <source>The implementation requires arguments of constant annotations to be passed as named arguments, except if there is a single argument, which then defines the annotation's parameter named &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e0e5d324e9efc17448a019105861c5d3bd7858" translate="yes" xml:space="preserve">
          <source>The implementation safely handles additions after &lt;code&gt;result()&lt;/code&gt; without calling &lt;code&gt;clear()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d360ade8635c2b71800b6cfe1651c827127a60a" translate="yes" xml:space="preserve">
          <source>The implementations of methods &lt;code&gt;apply&lt;/code&gt; and &lt;code&gt;isDefinedAt&lt;/code&gt; turn a &lt;code&gt;Seq[A]&lt;/code&gt; into a &lt;code&gt;PartialFunction[Int, A]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd23e9606abea66660438af6e1c5af5f8c2d8f6" translate="yes" xml:space="preserve">
          <source>The implicit &lt;a href=&quot;../../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; parameter defines the resulting Stepper type according to the element type of this collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe17ceb13940cf92be9153587dd7603b41a9252" translate="yes" xml:space="preserve">
          <source>The implicit &lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; parameter defines the resulting Stepper type according to the element type of this collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14916e61cd468889e3dd19f6951cb1e1ee858720" translate="yes" xml:space="preserve">
          <source>The implicit &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; parameter defines the resulting Stepper type according to the element type of this collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6058e83aa7baab4a7ea3ea6da16a68db81e81837" translate="yes" xml:space="preserve">
          <source>The implicit &lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; parameter defines the resulting Stepper type according to the element type of this collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af2e25da1855fdb725482be0292e142402957df" translate="yes" xml:space="preserve">
          <source>The implicit &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; parameter defines the resulting Stepper type according to the element type of this collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b9cabbbb7b5e48b9df8e004d1ee7f69d8c1d6a" translate="yes" xml:space="preserve">
          <source>The implicit &lt;span name=&quot;StepperShape&quot;&gt;StepperShape&lt;/span&gt; parameter defines the resulting Stepper type according to the element type of this collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26941a8bf04817aeb31f7f5260981dc6e661d76b" translate="yes" xml:space="preserve">
          <source>The implicit global &lt;code&gt;ExecutionContext&lt;/code&gt;. Import &lt;code&gt;global&lt;/code&gt; when you want to provide the global &lt;code&gt;ExecutionContext&lt;/code&gt; implicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad15a822c79de5426b84f10223ef7ba5e71a3662" translate="yes" xml:space="preserve">
          <source>The index corresponding to the element searched for in the sequence, if it was found, or the index where the element would be inserted in the sequence, if it was not in the sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d31693ea69c88aa2802ec1f45845c5232e53c6a" translate="yes" xml:space="preserve">
          <source>The index following the last matched character in group &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af36bc84badfc5eac4a7d8e4b9327ac1cf09cfd" translate="yes" xml:space="preserve">
          <source>The index following the last matched character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0397d5a63d1dda4097c4f18c7bf4bf2995461f8c" translate="yes" xml:space="preserve">
          <source>The index of the first matched character in group &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b80045a0cbc6554fffe7db2c315c906b7ab3edb" translate="yes" xml:space="preserve">
          <source>The index of the first matched character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1910c4f34b3f41f640308af0c2d072d930aa76" translate="yes" xml:space="preserve">
          <source>The index of the last matched character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3e3c66733aac7287a8871e0a31c249acb1b903" translate="yes" xml:space="preserve">
          <source>The index of the offending backslash character in &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4133faa7b2e4bc76842f49dfd04e61fcef46efc" translate="yes" xml:space="preserve">
          <source>The index to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe922df4fdb79428b5e57dee9a5a32d32ba7391" translate="yes" xml:space="preserve">
          <source>The initial part of the array without its last element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597aefc3879d17a285870553b94a3f9ee4fa1b2a" translate="yes" xml:space="preserve">
          <source>The initial part of the collection without its last element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d53ac42ad08f7541097aa64ae4b761280f8a02" translate="yes" xml:space="preserve">
          <source>The initial value from which to count the integers that identifies values at run-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04b34e0409f016b0dcfdd8268deb42fbaa4d220" translate="yes" xml:space="preserve">
          <source>The initial value seeded into the function &lt;code&gt;op&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdabe834448e36fd2d4d941b2e214643c079b4a" translate="yes" xml:space="preserve">
          <source>The input you wish to match against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6535fc2e71a3a04e4fc50b865357efca01e3ead" translate="yes" xml:space="preserve">
          <source>The integer to use to identify the next created value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7cf0f3efe9cc1b80598ca13497e50e42b6ca26" translate="yes" xml:space="preserve">
          <source>The intent of &lt;code&gt;ExecutionContext&lt;/code&gt; is to lexically scope code execution. That is, each method, class, file, package, or application determines how to run its own code. This avoids issues such as running application callbacks on a thread pool belonging to a networking library. The size of a networking library's thread pool can be safely configured, knowing that only that library's network operations will be affected. Application callback execution can be configured separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89f912812bfdf22f6669c351d845c25b7425a2c" translate="yes" xml:space="preserve">
          <source>The interpretation of the formatting patterns is described in &lt;span name=&quot;java.util.Formatter&quot;&gt;java.util.Formatter&lt;/span&gt;, with the addition that classes deriving from &lt;code&gt;ScalaNumber&lt;/code&gt; (such as &lt;a href=&quot;../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;scala.BigInt&lt;/a&gt; and &lt;a href=&quot;../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;scala.BigDecimal&lt;/a&gt;) are unwrapped to pass a type which &lt;code&gt;Formatter&lt;/code&gt; understands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3a574641f69540b9ff247768f9651bce69e013" translate="yes" xml:space="preserve">
          <source>The interpretation of the formatting patterns is described in &lt;span name=&quot;java.util.Formatter&quot;&gt;java.util.Formatter&lt;/span&gt;, with the addition that classes deriving from &lt;code&gt;ScalaNumber&lt;/code&gt; (such as &lt;code&gt;scala.BigInt&lt;/code&gt; and &lt;code&gt;scala.BigDecimal&lt;/code&gt;) are unwrapped to pass a type which &lt;code&gt;Formatter&lt;/code&gt; understands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23818d8cc1faacf66ec000f3a566d1a7df887f9a" translate="yes" xml:space="preserve">
          <source>The interpretation of the formatting patterns is described in &lt;span name=&quot;java.util.Formatter&quot;&gt;java.util.Formatter&lt;/span&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bd4050e008808994759e746a6c20e245c64350" translate="yes" xml:space="preserve">
          <source>The iterable providing the second half of each result pair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0117a5c34abe7e1abea23bfb53964911080939" translate="yes" xml:space="preserve">
          <source>The iterator of patch values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100888d28d874e84cc241d0045a8e761c77227e7" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method mostly preserves laziness; &lt;code&gt;size - step max 1&lt;/code&gt; elements ahead of the iterator are evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a18aacc2fb7aa22582c7ec352e2bbe5c1464214" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method mostly preserves laziness; a single element ahead of the iterator is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6c3fb33117ba9690548f9258f43fbf11814a01" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method preserves laziness; elements are only evaluated individually as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb88ae7212b0fef0a71198d67a895d99722e2aae" translate="yes" xml:space="preserve">
          <source>The iterator which produces no values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecfe0c0212d278f6035ab17bf856347bbc47ca2" translate="yes" xml:space="preserve">
          <source>The java definition of property truth is that the key be in the map and the value be equal to the String &quot;true&quot;, case insensitively. This method creates a BooleanProp instance which adheres to that definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbf4af3d16948da29da456ec55f26c0ae133605" translate="yes" xml:space="preserve">
          <source>The key for which the predicate is checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf69e28ac77cc81b5b50f23f0f87217650acd5d7" translate="yes" xml:space="preserve">
          <source>The key of the binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5f031d7df1756837e68399ecb290566257271f" translate="yes" xml:space="preserve">
          <source>The key to update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec16d98cf6cbb5dbf5c199950e8f81ddf42e97e" translate="yes" xml:space="preserve">
          <source>The key to update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b54bef030bd6af5a47525c5765214d4280174b" translate="yes" xml:space="preserve">
          <source>The key to which to bind the new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdaf06cd93a8f82c89edd95256fc1f071e01d7e" translate="yes" xml:space="preserve">
          <source>The language features are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f7785889e618df49d8092fd8f7cb617e441388" translate="yes" xml:space="preserve">
          <source>The last element of this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351987f4331964ae9b3e9f7fec6d61afbdea8a0b" translate="yes" xml:space="preserve">
          <source>The last element of this immutable champ hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ffbf95293736a131952feb83f39967256c12cb" translate="yes" xml:space="preserve">
          <source>The last element of this immutable champ hash set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e968e748b3037794f72d22f7145d028aa2c453" translate="yes" xml:space="preserve">
          <source>The last element of this immutable sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aad59804c06b385e9792dc84c27333f9db21e24" translate="yes" xml:space="preserve">
          <source>The last element of this immutable tree map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d97c7be1a55f7380fe30e13b9a0e55f7892bddf" translate="yes" xml:space="preserve">
          <source>The last element of this immutable tree seq map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd026535e1aec5bc1e85f5edcae55aeb03d55f7" translate="yes" xml:space="preserve">
          <source>The last element of this immutable tree set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038d25c1c0004a52a44c06a01a8d8dead1954b9b" translate="yes" xml:space="preserve">
          <source>The last element of this immutable vector map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c29ba77a208251e08bf1c19e8b8701a3f0b675a" translate="yes" xml:space="preserve">
          <source>The last element of this iterable collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45dc50646041d5757fd23879c48ba2eeb8b86d27" translate="yes" xml:space="preserve">
          <source>The last element of this linked hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a263dd2be5eae73673001887654ffc5f23917f88" translate="yes" xml:space="preserve">
          <source>The last element of this linked hash set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae649429f7993bb363c482c2587ac14753d16ce" translate="yes" xml:space="preserve">
          <source>The last element of this list buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7451527bc832d6f0857989f2d9443bb00acf6339" translate="yes" xml:space="preserve">
          <source>The last element of this list set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172b9c2e2d49829a89c0f47fd50d023d3756cbfd" translate="yes" xml:space="preserve">
          <source>The last element of this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5f8bb1da2a07cfe328efb0c6af433fae4d2ec1" translate="yes" xml:space="preserve">
          <source>The last element of this mutable tree map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a704700e541cf9b1ccbe469e272f57b7356dc68e" translate="yes" xml:space="preserve">
          <source>The last element of this mutable tree set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccdf05e307b9468e74e9271dd62482ea4dad885" translate="yes" xml:space="preserve">
          <source>The last element of this numeric range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8948f27626e3f00e6d50da61a54ad5440b2e39ec" translate="yes" xml:space="preserve">
          <source>The last element of this range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9b11c17463886e80fbb0433f34b4bcd3ed3a95" translate="yes" xml:space="preserve">
          <source>The last element of this range. This method will return the correct value even if there are too many elements to iterate over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4358d6baedd859ae70b78de449cc25c8ff2c64ec" translate="yes" xml:space="preserve">
          <source>The last element of this sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59efccf30e5ae36f3d3102963f5bfdfcf28a9e91" translate="yes" xml:space="preserve">
          <source>The last element of this vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d59d110f4733ad51ca363fcbb1246609b663f67" translate="yes" xml:space="preserve">
          <source>The last element of this view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b2e91388f628645772178e14b2d6c479b7d1cd" translate="yes" xml:space="preserve">
          <source>The last index (exclusive) in the array to sort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ab9b2b5c9b37437ffa717cd5b039141458eb3c" translate="yes" xml:space="preserve">
          <source>The lazy list containing elements of this lazy list and the iterable object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b765221112bc6724ed9c8bfc0080735ffd15c258" translate="yes" xml:space="preserve">
          <source>The lazy list resulting from the concatenation of this lazy list with the argument lazy list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2385ea11497f0bdfaa5a7b1af85a65ccc8a8487d" translate="yes" xml:space="preserve">
          <source>The left side of the disjoint union, as opposed to the &lt;a href=&quot;right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt; side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b15b0db85928085f1e903901ba25bc376ec9b71" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the array buffer. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf71efcddaf1874a189a4b253ff198f3d268476" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the array deque. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265be76d5df8baa55b9e1aea85e7be188288aa91" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the growable collection. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9ab0e5377ea872899c0e9ffc11010c5384e526" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the immutable array. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69384981a899cd202c90cbee97385ade3d69e71" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the immutable sequence. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9d738ba24c46f610f31b4c363b5c63e81be01f" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the list buffer. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee90b08fca09d514f3503373b4f7e7df6b21a3c" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the list. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ea135fd3cdc20ae84628a1f104f73af1ea334f" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the numeric range. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585ddcf6cb37ab983e182adc1cfbd070f6e96848" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the range. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4769b1eb3a4ed8b08099d94d416334f45ef0a5" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the sequence. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fd629b7a5fca5998d8d63bf3920068d3649a9e" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the string builder. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67188fda22bb517f1d481357dc803661fdeb9081" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the unrolled buffer. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff97669b7fcff092d64fc8bd92cf10a83f86283e" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the vector. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660c202cc25d2c20ce1ebaa67c17d4e227d2a653" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the view. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0597f625326a493be413090b22cce2404003019e" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the wrapped array. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bfa834ef5ea77f28fbc47a6d57dfa6ed61e182" translate="yes" xml:space="preserve">
          <source>The length (number of elements) of the wrapped string. &lt;code&gt;size&lt;/code&gt; is an alias for &lt;code&gt;length&lt;/code&gt; in &lt;code&gt;Seq&lt;/code&gt; collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b485928f3ba376a250e24afadd376e63b146ca" translate="yes" xml:space="preserve">
          <source>The levels &lt;code&gt;ALL&lt;/code&gt; and &lt;code&gt;OFF&lt;/code&gt; are confusing in this context because the sentiment being expressed when using the annotation is at cross purposes with the one being expressed via &lt;code&gt;-Xelide-below&lt;/code&gt;. This confusion reaches its zenith at level &lt;code&gt;OFF&lt;/code&gt;, where the annotation means</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3813757c4f3f18e0dbfa8df36d9baa94790191" translate="yes" xml:space="preserve">
          <source>The list elements to prepend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1330474c6fca7d1756591cbf99255dac71a5ff34" translate="yes" xml:space="preserve">
          <source>The loaded properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c8c7cd16be14fcc71fec1a76c3636cb347591c" translate="yes" xml:space="preserve">
          <source>The loop body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cab2b9152e2c862c35381a89710a38792bed890" translate="yes" xml:space="preserve">
          <source>The lower bound (inclusive) on the keys to be returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3da7f571bb352ba9721ab8e9bbb3aec9e9be68b" translate="yes" xml:space="preserve">
          <source>The lower-bound (inclusive) of the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bffb6306ecdffaa1494e1084f818914c6205066" translate="yes" xml:space="preserve">
          <source>The lower-bound (inclusive) of the ranged projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4378f8d328108f6460f244a1fb2f13f75777b853" translate="yes" xml:space="preserve">
          <source>The lower-bound (inclusive) of the ranged projection. &lt;code&gt;None&lt;/code&gt; if there is no lower bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408017d06f5c3da250411030c1a72d5fc19d5483" translate="yes" xml:space="preserve">
          <source>The main distinction between &lt;code&gt;PartialFunction&lt;/code&gt; and &lt;a href=&quot;function1&quot; id=&quot;scala.Function1&quot; name=&quot;scala.Function1&quot;&gt;scala.Function1&lt;/a&gt; is that the user of a &lt;code&gt;PartialFunction&lt;/code&gt; may choose to do something different with input that is declared to be outside its domain. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba40d8f80150cb78cb1bf828ebd556e335f6b76" translate="yes" xml:space="preserve">
          <source>The main method. This stores all arguments so that they can be retrieved with &lt;code&gt;args&lt;/code&gt; and then executes all initialization code segments in the order in which they were passed to &lt;code&gt;delayedInit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3087dacf13837a0b51c5e008ceee02025c9bee7a" translate="yes" xml:space="preserve">
          <source>The main use case for universal traits is to allow basic inheritance of methods for &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;value classes&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7ea35111ae1bac9b95d88913ab7b71a7b6fb6b" translate="yes" xml:space="preserve">
          <source>The map to form a union with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73473dbf1b960e9ed6639cd4bda694ce04e1f141" translate="yes" xml:space="preserve">
          <source>The map to intersect with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e6d8b6b77f336b503b1af3f45d2e73aaa03510" translate="yes" xml:space="preserve">
          <source>The match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31739519a61dcd66f57b1843b6b27c614a35615a" translate="yes" xml:space="preserve">
          <source>The matched string in group &lt;code&gt;i&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if nothing was matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1838c60acd8fcdf5d5e05f367fa094021f7676ad" translate="yes" xml:space="preserve">
          <source>The matched string, or &lt;code&gt;null&lt;/code&gt; if nothing was matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cfb178bed19c2dedf57c59d55ecc81d9ac3d4b" translate="yes" xml:space="preserve">
          <source>The matched string; equivalent to &lt;code&gt;matched.toString&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dd5d986b0178bb8056e5be225f00d0df6e5909" translate="yes" xml:space="preserve">
          <source>The matches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf4ec3b27bdb7304c4dafa84bc66340d1bf138a" translate="yes" xml:space="preserve">
          <source>The measuring function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d033ef0c4b0d6f232d93d3f0807ac616da701c4f" translate="yes" xml:space="preserve">
          <source>The meta-annotations in package &lt;code&gt;scala.annotation.meta&lt;/code&gt; are used to control where annotations on fields and class parameters are copied. This is done by annotating either the annotation type or the annotation class with one or several of the meta-annotations in this package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29616a4faf25d986708a4cde4a7b2f21ab3eb229" translate="yes" xml:space="preserve">
          <source>The method as implemented here does not call &lt;code&gt;length&lt;/code&gt; directly; its running time is &lt;code&gt;O(length min len)&lt;/code&gt; instead of &lt;code&gt;O(length)&lt;/code&gt;. The method should be overridden if computing &lt;code&gt;length&lt;/code&gt; is cheap and &lt;code&gt;knownSize&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af0cbc55c53de7727dd6906919e0261ccd2e6d6" translate="yes" xml:space="preserve">
          <source>The method as implemented here does not call &lt;code&gt;length&lt;/code&gt; or &lt;code&gt;size&lt;/code&gt; directly; its running time is &lt;code&gt;O(this.length min that.size)&lt;/code&gt; instead of &lt;code&gt;O(this.length + that.size)&lt;/code&gt;. The method should be overridden if computing &lt;code&gt;size&lt;/code&gt; is cheap and &lt;code&gt;knownSize&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48698504d11ae64b9e77ac2df6c5097ecd3c5ca0" translate="yes" xml:space="preserve">
          <source>The method as implemented here does not call &lt;code&gt;size&lt;/code&gt; directly; its running time is &lt;code&gt;O(size min otherSize)&lt;/code&gt; instead of &lt;code&gt;O(size)&lt;/code&gt;. The method should be overridden if computing &lt;code&gt;size&lt;/code&gt; is cheap and &lt;code&gt;knownSize&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2cea369df613ec4712fc5158b91e5343e85ef9" translate="yes" xml:space="preserve">
          <source>The method as implemented here does not call &lt;code&gt;size&lt;/code&gt; directly; its running time is &lt;code&gt;O(this.size min that.size)&lt;/code&gt; instead of &lt;code&gt;O(this.size + that.size)&lt;/code&gt;. The method should be overridden if computing &lt;code&gt;size&lt;/code&gt; is cheap and &lt;code&gt;knownSize&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c09f18afba8be593e1c800bca2424438ae181f1" translate="yes" xml:space="preserve">
          <source>The method call will be replaced with an expression which depends on the type of the elided expression. In decreasing order of precedence:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09b66ce7ce24d97202cb5c39ecd0a1cf19cc4fa" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;asJavaSeqStream&lt;/code&gt; and &lt;code&gt;asJavaParStream&lt;/code&gt; convert a collection to a Java Stream:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a0eb68ed3e3baaa73b85d607b523c76a8b4bcc" translate="yes" xml:space="preserve">
          <source>The methods of &lt;code&gt;ProcessBuilder&lt;/code&gt; are divided in three categories: the ones that combine two &lt;code&gt;ProcessBuilder&lt;/code&gt; to create a third, the ones that redirect input or output of a &lt;code&gt;ProcessBuilder&lt;/code&gt;, and the ones that execute the external processes associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e90841d38ac8fb40971293d07447e0f9a608a50" translate="yes" xml:space="preserve">
          <source>The mix method needs to be called at each step to update the intermediate hash value. For the last chunk to incorporate into the hash mixLast may be used instead, which is slightly faster. Finally finalizeHash needs to be called to compute the final hash value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34b8d80de0da123578137af69511b7cd435ebbf" translate="yes" xml:space="preserve">
          <source>The modified map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880eae9b090376e33e8842836802316c40147567" translate="yes" xml:space="preserve">
          <source>The most idiomatic way to use an &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; instance is to treat it as a collection or monad and use &lt;code&gt;map&lt;/code&gt;,&lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, or &lt;code&gt;foreach&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bd51e35aa61d0a095480f82bb40a9e0a6ef239" translate="yes" xml:space="preserve">
          <source>The n&lt;sup&gt;th&lt;/sup&gt; element of this product, 0-based. In other words, for a product &lt;code&gt;A(x&lt;sub&gt;1&lt;/sub&gt;, ..., x&lt;sub&gt;k&lt;/sub&gt;)&lt;/code&gt;, returns &lt;code&gt;x&lt;sub&gt;(n+1)&lt;/sub&gt;&lt;/code&gt; where &lt;code&gt;0 &amp;lt;= n &amp;lt; k&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b702884d63db453a9680ae0f3b3d03bcda9146" translate="yes" xml:space="preserve">
          <source>The name of the Codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e556a624c21531ed56c732ea37821e8d374b23" translate="yes" xml:space="preserve">
          <source>The name of the n&lt;sup&gt;th&lt;/sup&gt; element of this product, 0-based. In the default implementation, an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3905b04a31e242c58a2707e77ba6f3a645def817" translate="yes" xml:space="preserve">
          <source>The name of the properties file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e4096945b425b1d52f908b2c3ff6b29828cff7" translate="yes" xml:space="preserve">
          <source>The name of this enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a7c468f02cd093c0976c15cc4178af815a588b" translate="yes" xml:space="preserve">
          <source>The names of the groups in the pattern, in the order they appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9f4e2ff44b73dda4631581a9f75f758a276bfc" translate="yes" xml:space="preserve">
          <source>The names of the groups, or an empty sequence if none defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fc87484c391e76cc45a2b83619d136fd661c3a" translate="yes" xml:space="preserve">
          <source>The natural ordering for deadline is determined by the natural order of the underlying (finite) duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c0f255c488e93bb1921925d5e12aaeea580aa3" translate="yes" xml:space="preserve">
          <source>The natural ordering of durations matches the natural ordering for Double, including non-finite values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eac5a1d8e75a6b927f057e9c3e23dbe84859d02" translate="yes" xml:space="preserve">
          <source>The negative number with the greatest (finite) absolute value which is representable by a Double. Note that it differs from &lt;span name=&quot;java.lang.Double.MIN_VALUE&quot;&gt;java.lang.Double.MIN_VALUE&lt;/span&gt;, which is the smallest positive value representable by a Double. In Scala that number is called Double.MinPositiveValue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f77d58cedd07156ac2631f1028623ad9990461f" translate="yes" xml:space="preserve">
          <source>The negative number with the greatest (finite) absolute value which is representable by a Float. Note that it differs from &lt;span name=&quot;java.lang.Float.MIN_VALUE&quot;&gt;java.lang.Float.MIN_VALUE&lt;/span&gt;, which is the smallest positive value representable by a Float. In Scala that number is called Float.MinPositiveValue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4062ee9d6957aff716bba38d055ddd17401ab870" translate="yes" xml:space="preserve">
          <source>The new String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa382fd99846135806bf205503d57a0a3de9a7f" translate="yes" xml:space="preserve">
          <source>The new unanchored regex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3743d1eecb933641cda77a717298bd354faf0984" translate="yes" xml:space="preserve">
          <source>The new value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76530759f0d1ad38dcfc7cae00f010f3965681b0" translate="yes" xml:space="preserve">
          <source>The next matched substring of &lt;code&gt;source&lt;/code&gt;. As a side effect, advance the underlying matcher if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040a8881b6dbdc56bb93235d999eb1020a3d5261" translate="yes" xml:space="preserve">
          <source>The non-wildcard portions of the input pattern, separated by wildcards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a764191d04b3a4fccd8fa7422f5672819d4da7b" translate="yes" xml:space="preserve">
          <source>The number of capturing groups in the pattern. (For a given successful match, some of those groups may not have matched any input.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ad58eca126b48e0620c5d677af63bcf14fcd46" translate="yes" xml:space="preserve">
          <source>The number of elements in the Accumulator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20046f0730bfb4c98b733aeff535ebac4454299c" translate="yes" xml:space="preserve">
          <source>The number of elements in the array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7afff49a1d5bdfbbc1e052434b32ed173ebd60" translate="yes" xml:space="preserve">
          <source>The number of elements in the collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7094e54d93d8591aa4c90a375923f86d3a4560ec" translate="yes" xml:space="preserve">
          <source>The number of elements in the collection under construction, if it can be cheaply computed, -1 otherwise. The default implementation always returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcffb87a1810e9b8fc1582e708326007a240914" translate="yes" xml:space="preserve">
          <source>The number of elements in the immutable array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828f0c3c8298be8cd9047269f7a1fd325a1f9a0c" translate="yes" xml:space="preserve">
          <source>The number of elements in the lazy list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cdd666891d039642875543d0e66f581d86be9f" translate="yes" xml:space="preserve">
          <source>The number of elements in this array buffer, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318f2a2e06faddf5fb8e48249650e7cbce5368a9" translate="yes" xml:space="preserve">
          <source>The number of elements in this array deque, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa96382186f5d385a61d4960b286199024a16d9" translate="yes" xml:space="preserve">
          <source>The number of elements in this collection, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82798029ba823e79aca4058c11b6379dda2207b4" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable champ hash map, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419837ae3e4368e83e268eb0ef39e4cbcbf3a658" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable champ hash set, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66dc2681f675a1e72c1b3f8d95b0b957ae5f2928" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable integer map, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf4e723c62b2ab54d06889ee83d3775a14c588c" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable long integer map, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a07f84ec43751796715a08d0e7502d4b514fa7d" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable map, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f4389cd895f9d8fd60a8e43383d25316ceddf9" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable sequence, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9317389d7a1fa074bbe4ffe3fab5b454aa2276e1" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable set, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d80218be77d2066c634711e5312732b496a9de" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable sorted set, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877cdc0ae50a1f993d3a17aa26b07c2a5362ae1c" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable tree map, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1c9dfa50b08f837ccac95f72915959072be4a8" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable tree seq map, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aeb43b78295bd5c7390d7f9b6f80bed3acdeafc" translate="yes" xml:space="preserve">
          <source>The number of elements in this immutable vector map, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebf034a0ff8bd96951d5ddb21a68ea6d35bf510" translate="yes" xml:space="preserve">
          <source>The number of elements in this iterable collection, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e48d5fd7afa02b243d0a29b8af9854e2072086a" translate="yes" xml:space="preserve">
          <source>The number of elements in this iterator, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705e1134075007904d65bf38102f6712a5d7a830" translate="yes" xml:space="preserve">
          <source>The number of elements in this lazy list, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56000bf3be7e287b65190d666394928c575ccc74" translate="yes" xml:space="preserve">
          <source>The number of elements in this list map, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73226dd2b9d72bf6971f60a462ce44992426726e" translate="yes" xml:space="preserve">
          <source>The number of elements in this list set, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d624c879a0d10b7a93786da082b8ab6ff22464" translate="yes" xml:space="preserve">
          <source>The number of elements in this list, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f96f58582187e5311e39c17baae83bc49234e07" translate="yes" xml:space="preserve">
          <source>The number of elements in this map, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752fec43e1b2d10eb586b13a06049fc5f65c406c" translate="yes" xml:space="preserve">
          <source>The number of elements in this option, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a04e8a85f7be5a791282f5aa15bbf3e6cfb36d1" translate="yes" xml:space="preserve">
          <source>The number of elements in this sequence, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5b305c3819a44e0377e959b704f86a9dfcbd81" translate="yes" xml:space="preserve">
          <source>The number of elements in this string builder, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e418b53a26e1c9bdf2db64a152290b4da2004dd5" translate="yes" xml:space="preserve">
          <source>The number of elements in this view, if it can be cheaply computed, -1 otherwise. Cheaply usually means: Not requiring a collection traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63479132fad90739aeb18387c7f04d8dbe4dc667" translate="yes" xml:space="preserve">
          <source>The number of elements returned by the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d7155980f5abf5fffd98697cf874b23aa10643" translate="yes" xml:space="preserve">
          <source>The number of subgroups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf2158f19544e615b291d890a857568cbe06c84" translate="yes" xml:space="preserve">
          <source>The number of values in the original array that are replaced by the patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7643d378474e130833373c4d66faf8a8e88479" translate="yes" xml:space="preserve">
          <source>The number of values in the original iterator that are replaced by the patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44be79be2b464f6e03208f18cd9fec5af31ea775" translate="yes" xml:space="preserve">
          <source>The number of words (each with 64 bits) making up the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843760f2be32e0bd379d69f5cbca75cb7c42babb" translate="yes" xml:space="preserve">
          <source>The numeric portion of the runtime Scala version, if this is a final release. If for instance the versionString says &quot;version 2.9.0.final&quot;, this would return Some(&quot;2.9.0&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cbdc78830b05b81b15db354a2f98e541051b6b" translate="yes" xml:space="preserve">
          <source>The object &lt;code&gt;Manifest&lt;/code&gt; defines factory methods for manifests. It is intended for use by the compiler and should not be used in client code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b23ad7b85598458c2a4d44078b7ead2a60e792e" translate="yes" xml:space="preserve">
          <source>The object &lt;code&gt;Random&lt;/code&gt; offers a default implementation of scala.util.Random and random-related convenience methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4848e9335fdb8a1c47a40927956b24113269390f" translate="yes" xml:space="preserve">
          <source>The object with which this immutable sequence should be compared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82364897553a1c857ae74de6248b43b09f533a17" translate="yes" xml:space="preserve">
          <source>The object with which this sequence should be compared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d7e8422af945268ef207af07d32f1ce19bcf07" translate="yes" xml:space="preserve">
          <source>The offending string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a260df2fa12f42ebc6cb60dfb8a00b500d4f09c" translate="yes" xml:space="preserve">
          <source>The official documentation on &lt;a href=&quot;http://www.scala-lang.org/news/2.11.0/#binary-compatibility&quot;&gt;binary compatibility&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e588db9489c361705ff7adad26f1bbfd83fa4996" translate="yes" xml:space="preserve">
          <source>The one higher than the highest integer amongst those used to identify values in this enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bd48b9825fb032f4d19d6f3d425e79ec426ef5" translate="yes" xml:space="preserve">
          <source>The operation to perform on successive elements of the &lt;code&gt;LazyList&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ab60848ed07899dfe36400f129bb927dbcb121" translate="yes" xml:space="preserve">
          <source>The operation to perform on successive elements of the &lt;code&gt;Stream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4537606e5e4a24e2d11a60beccc586015f0a7441" translate="yes" xml:space="preserve">
          <source>The option must be nonempty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d17220abfe712689b94cf80e8d50b832391cf74" translate="yes" xml:space="preserve">
          <source>The order in which operations are performed on elements is unspecified and may be nondeterministic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d450226a2f217ed7f15ce88fceed635ce5d894e" translate="yes" xml:space="preserve">
          <source>The package object &lt;code&gt;scala.math&lt;/code&gt; contains methods for performing basic numeric operations such as elementary exponential, logarithmic, root and trigonometric functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67b5f519682f15df09eb4d3bad0f7058000e086" translate="yes" xml:space="preserve">
          <source>The package object &lt;code&gt;scala.sys&lt;/code&gt; contains methods for reading and altering core aspects of the virtual machine as well as the world outside of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60475b5720b6fe0a0060cf0630f7193bf95672f6" translate="yes" xml:space="preserve">
          <source>The partial function with empty domain. Any attempt to invoke empty partial function leads to throwing &lt;a href=&quot;matcherror&quot; id=&quot;scala.MatchError&quot; name=&quot;scala.MatchError&quot;&gt;scala.MatchError&lt;/a&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4731c9633052607a5c29e86b2ac3edadb964b621" translate="yes" xml:space="preserve">
          <source>The particular comparison semantics mirror those of Double.NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c554fd2926909193603e9729b8fb5d405afd9d5" translate="yes" xml:space="preserve">
          <source>The parts that make up the interpolated string, without the expressions that get inserted by interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6852b4861ebffab65d600b957eeb3b0b0a55c280" translate="yes" xml:space="preserve">
          <source>The patch values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e972ec1ba465fdbec9a8ccc3f2ea4c14efd2edc0" translate="yes" xml:space="preserve">
          <source>The pool size of threads is then &lt;code&gt;numThreads&lt;/code&gt; bounded by &lt;code&gt;minThreads&lt;/code&gt; on the lower end and &lt;code&gt;maxThreads&lt;/code&gt; on the high end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91979e59cd087ac434b566a42a8758af5c26c471" translate="yes" xml:space="preserve">
          <source>The predicate used to test elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14f4e418fb2b0da6d9c1a5f1e5bd11872e4a224" translate="yes" xml:space="preserve">
          <source>The predicate which a value assigned to the key must satisfy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4338ab53e6df7514a7b5b8b6297703490befb5" translate="yes" xml:space="preserve">
          <source>The provided callback always runs in the provided implicit &lt;code&gt;ExecutionContext&lt;/code&gt;, though there is no guarantee that the &lt;code&gt;execute()&lt;/code&gt; method on the &lt;code&gt;ExecutionContext&lt;/code&gt; will be called once per callback or that &lt;code&gt;execute()&lt;/code&gt; will be called in the current thread. That is, the implementation may run multiple callbacks in a batch within a single &lt;code&gt;execute()&lt;/code&gt; and it may run &lt;code&gt;execute()&lt;/code&gt; either immediately or asynchronously. Completion of the Future must *happen-before* the invocation of the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f5fec2d8e6ee2dce1a589e01d2f57e3d2df5a2" translate="yes" xml:space="preserve">
          <source>The raw string interpolator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58dcc93d343f3f138ef7a48c32b2855695c2a05" translate="yes" xml:space="preserve">
          <source>The regrettable design of Numeric/Integral/Fractional has them all bumping into one another when searching for this implicit, so they are exiled into their own companions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcf8842eb248af6910e79b0cff59e9fd54aa92c" translate="yes" xml:space="preserve">
          <source>The regular expression to compile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be061ba5f3e11fdb8de0511259270de4238f6964" translate="yes" xml:space="preserve">
          <source>The remaining elements of the result lazy list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3e5f972f646e636188d57892dfd05a3c652c83" translate="yes" xml:space="preserve">
          <source>The remaining elements of the result stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aafeda7977f0cf2e4cb702e70f4965a0acf33a5" translate="yes" xml:space="preserve">
          <source>The removed elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4172e27a7fbf4304fa00fa40aa2eb621c5cafc5a" translate="yes" xml:space="preserve">
          <source>The representation object of type &lt;code&gt;Repr&lt;/code&gt; which contains the collection's elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3760ca22966ea79342c0bc8e707ab0612425ea48" translate="yes" xml:space="preserve">
          <source>The requested group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3ed61fff5c703b996a901f1acba322f3080b19" translate="yes" xml:space="preserve">
          <source>The reset() method creates a fresh copy of this Source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25466298b5a2536f05284e37acea0219f541591a" translate="yes" xml:space="preserve">
          <source>The rest of the array without its &lt;code&gt;n&lt;/code&gt; first elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737bbc9bf5b9d2eb9ec07aa48e4021f0d63344bf" translate="yes" xml:space="preserve">
          <source>The rest of the array without its &lt;code&gt;n&lt;/code&gt; last elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22af7173b2fa5a95e9ec56c9960471054c31952a" translate="yes" xml:space="preserve">
          <source>The rest of the array without its first element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c75ee9f0cdde1822cc2fca483b5ec93eae27baf" translate="yes" xml:space="preserve">
          <source>The rest of the collection without its &lt;code&gt;n&lt;/code&gt; last elements. For linear, immutable collections this should avoid making a copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74db716d2e4e2e74d33efdff8c4bde610c18c00" translate="yes" xml:space="preserve">
          <source>The rest of the collection without its first element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c67f079dbd4caa92ff7f434f460d988c3c4777" translate="yes" xml:space="preserve">
          <source>The result becomes available once the asynchronous computation is completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3beb22ecb8d1e1cf939eea4028aebcc82fa811b5" translate="yes" xml:space="preserve">
          <source>The result becomes available once the resulting Future of the asynchronous computation is completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de43d0c2224aa3e44f0d6b3b94ed77fe69968097" translate="yes" xml:space="preserve">
          <source>The result of applying reduce operator &lt;code&gt;op&lt;/code&gt; between all the elements if the collection is nonempty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafa568eabbde539948741b1bbea1cc83dd49a19" translate="yes" xml:space="preserve">
          <source>The result of applying reduce operator &lt;code&gt;op&lt;/code&gt; between all the elements if the immutable sequence is nonempty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9307d5d9ce15c583f99d896c8cbd31b180a5b163" translate="yes" xml:space="preserve">
          <source>The result of applying reduce operator &lt;code&gt;op&lt;/code&gt; between all the elements if the iterable collection is nonempty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456fe311a4309ef497b08ff0a6bbd9d234c99ae7" translate="yes" xml:space="preserve">
          <source>The result of applying reduce operator &lt;code&gt;op&lt;/code&gt; between all the elements if the view is nonempty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e37ffd3404846d5821199e5c69e678d866fae7" translate="yes" xml:space="preserve">
          <source>The result of performing a search on a sorted sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2167f604d918213a4946950c8124d4489c50212d" translate="yes" xml:space="preserve">
          <source>The result of performing a search on a sorted sequence, where the element was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eb1695575c0278e628196c6b2aaf11edce80da" translate="yes" xml:space="preserve">
          <source>The result of performing a search on a sorted sequence, where the element was not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7675a86018d7aa4c99b24c8d29f310f8d0487da8" translate="yes" xml:space="preserve">
          <source>The result sign has the following meaning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93bf62b6b0fe381a00c027ff07db81592ba623a" translate="yes" xml:space="preserve">
          <source>The result type of the function f.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa9ca41b4c3ce20be5373c401b1e156ad1cfee6" translate="yes" xml:space="preserve">
          <source>The resulting collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8accf6e87ee6925e3f80a58a60a8d302aae6c98b" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the static type of immutable sequence. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09434b0e135c27f97413a2a76103ec78c122b334" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the static type of iterable collection. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2a93e9f87f7b28d8f82dfa8270289a29790ad8" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the static type of lazy list. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b876c3dbccacf304e699afb5f1a8c46f345b2632" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the static type of view. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebd79454a62952d9dd62d610041df06886bcd24" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the type of collection. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638293615a058eac91cca1635979d57060bc3a54" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the type of immutable sequence. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17770c777055997b02ec641f706102b229281b00" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the type of iterable collection. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6aca3df1f591a948213913f2d4452197c1b0363" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the type of iterator. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab644518d9188b78a74ad1f6d4dac717890c731" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the type of lazy list. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6f1e98eda8c0f1f2b091a19e78936f22cd9006" translate="yes" xml:space="preserve">
          <source>The resulting collection's type will be guided by the type of view. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5709861225c7ba3b6865800d13497f86bd85df6" translate="yes" xml:space="preserve">
          <source>The resulting string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e70f99647acf54a8953e83fde094560c2d83c0" translate="yes" xml:space="preserve">
          <source>The resulting string begins with the string &lt;code&gt;start&lt;/code&gt; and ends with the string &lt;code&gt;end&lt;/code&gt;. Inside, the string chars of this string are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0053f7b1ef674f7f9bee825a4cd2e5d5a4b4d0" translate="yes" xml:space="preserve">
          <source>The return type of the specified function &lt;code&gt;f&lt;/code&gt;, return result of which is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862e8d24098413176beb9547f2acb4cdbf29c2b6" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Future&lt;/code&gt; will be successfully completed with the &lt;code&gt;Throwable&lt;/code&gt; of the original &lt;code&gt;Future&lt;/code&gt; if the original &lt;code&gt;Future&lt;/code&gt; fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcf560e3328a3103079a816b98d512eb14569da" translate="yes" xml:space="preserve">
          <source>The returned Java &lt;code&gt;ConcurrentMap&lt;/code&gt; is backed by the provided Scala &lt;code&gt;concurrent.Map&lt;/code&gt; and any side-effects of using it via the Java interface will be visible via the Scala interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c910f6bab041320328150be1f155d4fd0717a0" translate="yes" xml:space="preserve">
          <source>The returned Java &lt;code&gt;Dictionary&lt;/code&gt; is backed by the provided Scala &lt;code&gt;Dictionary&lt;/code&gt; and any side-effects of using it via the Java interface will be visible via the Scala interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad261b8817d86af33f9b4258bc742b110d34c33" translate="yes" xml:space="preserve">
          <source>The returned Java &lt;code&gt;Enumeration&lt;/code&gt; is backed by the provided Scala &lt;code&gt;Iterator&lt;/code&gt; and any side-effects of using it via the Java interface will be visible via the Scala interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8009d9813a2eac186ccc43438396f2a1bc259a6" translate="yes" xml:space="preserve">
          <source>The returned Java &lt;code&gt;Iterable&lt;/code&gt; is backed by the provided Scala &lt;code&gt;Iterable&lt;/code&gt; and any side-effects of using it via the Java interface will be visible via the Scala interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5e0449e81356eddfcc51fb33b0001ae908264e" translate="yes" xml:space="preserve">
          <source>The returned Java &lt;code&gt;Iterator&lt;/code&gt; is backed by the provided Scala &lt;code&gt;Iterator&lt;/code&gt; and any side-effects of using it via the Java interface will be visible via the Scala interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fa52888f4edd1f2db5ef66f983e05167bcd8d0" translate="yes" xml:space="preserve">
          <source>The returned Java &lt;code&gt;List&lt;/code&gt; is backed by the provided Scala &lt;code&gt;Seq&lt;/code&gt; and any side-effects of using it via the Java interface will be visible via the Scala interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf646ab6164a1305da3dc54919a5d47d948f8a84" translate="yes" xml:space="preserve">
          <source>The returned Java &lt;code&gt;Map&lt;/code&gt; is backed by the provided Scala &lt;code&gt;Map&lt;/code&gt; and any side-effects of using it via the Java interface will be visible via the Scala interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe4aa0a8b31c68fab9105212584d120e2bcd203" translate="yes" xml:space="preserve">
          <source>The returned Java &lt;code&gt;Set&lt;/code&gt; is backed by the provided Scala &lt;code&gt;Set&lt;/code&gt; and any side-effects of using it via the Java interface will be visible via the Scala interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefe204655cb470ea2badc151bfec465c2eb0f37" translate="yes" xml:space="preserve">
          <source>The returned Java List is backed by the provided Scala &lt;code&gt;Buffer&lt;/code&gt; and any side-effects of using it via the Java interface will be visible via the Scala interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd65b19fc62c1d6d99f9272f7aa424bf3267d693" translate="yes" xml:space="preserve">
          <source>The returned Scala &lt;code&gt;Buffer&lt;/code&gt; is backed by the provided Java &lt;code&gt;List&lt;/code&gt; and any side-effects of using it via the Scala interface will be visible via the Java interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3820ee01333fa42dfbc8d22fab84fb133a5ba0" translate="yes" xml:space="preserve">
          <source>The returned Scala &lt;code&gt;ConcurrentMap&lt;/code&gt; is backed by the provided Java &lt;code&gt;ConcurrentMap&lt;/code&gt; and any side-effects of using it via the Scala interface will be visible via the Java interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebbeb19e2f00ad354036934cdd7b9643e5a23b5" translate="yes" xml:space="preserve">
          <source>The returned Scala &lt;code&gt;Iterable&lt;/code&gt; is backed by the provided Java &lt;code&gt;Iterable&lt;/code&gt; and any side-effects of using it via the Scala interface will be visible via the Java interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5ce9958de1d7dfcd75c2321eb172c2528299d6" translate="yes" xml:space="preserve">
          <source>The returned Scala &lt;code&gt;Iterator&lt;/code&gt; is backed by the provided Java &lt;code&gt;Enumeration&lt;/code&gt; and any side-effects of using it via the Scala interface will be visible via the Java interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77106f31650dd5849000f6d178328819b741c0f" translate="yes" xml:space="preserve">
          <source>The returned Scala &lt;code&gt;Iterator&lt;/code&gt; is backed by the provided Java &lt;code&gt;Iterator&lt;/code&gt; and any side-effects of using it via the Scala interface will be visible via the Java interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4284153e9e7740fd0955271f98940d76b66e86fb" translate="yes" xml:space="preserve">
          <source>The returned Scala &lt;code&gt;Map&lt;/code&gt; is backed by the provided Java &lt;code&gt;Dictionary&lt;/code&gt; and any side-effects of using it via the Scala interface will be visible via the Java interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf53d584745bef25a83ea77d32e48dd49a596be6" translate="yes" xml:space="preserve">
          <source>The returned Scala &lt;code&gt;Map&lt;/code&gt; is backed by the provided Java &lt;code&gt;Map&lt;/code&gt; and any side-effects of using it via the Scala interface will be visible via the Java interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba112bc38a3b82a27f4e0c892d0fa8b0c1aa85c" translate="yes" xml:space="preserve">
          <source>The returned Scala &lt;code&gt;Map[String, String]&lt;/code&gt; is backed by the provided Java &lt;code&gt;Properties&lt;/code&gt; and any side-effects of using it via the Scala interface will be visible via the Java interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29560f669a1b3c6ab2877aecbe7ea0a37647eae2" translate="yes" xml:space="preserve">
          <source>The returned Scala &lt;code&gt;Set&lt;/code&gt; is backed by the provided Java &lt;code&gt;Set&lt;/code&gt; and any side-effects of using it via the Scala interface will be visible via the Java interface and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d31690b23a30587f0c40fa422c2fd1f24b88e14" translate="yes" xml:space="preserve">
          <source>The right side of the disjoint union, as opposed to the &lt;a href=&quot;left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt; side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c761cb3a200fb0af46125cf4776f6d5dc76567d3" translate="yes" xml:space="preserve">
          <source>The run will be wrapped in a call to buffer. This gives the logger an opportunity to set up and tear down buffering. At present the library implementations of &lt;code&gt;ProcessLogger&lt;/code&gt; simply execute the body unbuffered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b4095c30a157dd90064be6ddc3d8517d6afd27" translate="yes" xml:space="preserve">
          <source>The runtime &lt;a href=&quot;#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt; representation of type &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66839927074feaa9d0d4b049e52e8d6cf3ad0ef7" translate="yes" xml:space="preserve">
          <source>The same iterator, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de498b5e9b2d062e2cff68de019838eeb2d3674" translate="yes" xml:space="preserve">
          <source>The same logical collection as this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a835f9ed92ce3e425f1812b62f56d38385846bc" translate="yes" xml:space="preserve">
          <source>The same map with a given default function. Note: The default is only used for &lt;code&gt;apply&lt;/code&gt;. Other methods like &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;iterator&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, etc. are not affected by &lt;code&gt;withDefault&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698318194d2ae79b7b53b1b813592bd24c7a6299" translate="yes" xml:space="preserve">
          <source>The same map with a given default function. Note: The default is only used for &lt;code&gt;apply&lt;/code&gt;. Other methods like &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;iterator&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, etc. are not affected by &lt;code&gt;withDefaultValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579f18d3d701eec883032fa1848e54770be08ac7" translate="yes" xml:space="preserve">
          <source>The same map with a given default value. Note: The default is only used for &lt;code&gt;apply&lt;/code&gt;. Other methods like &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;iterator&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, etc. are not affected by &lt;code&gt;withDefaultValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0550e4ae8992d599fb50a9df4b1dbb10ac92cf70" translate="yes" xml:space="preserve">
          <source>The same sorted map with a given default function. Note: The default is only used for &lt;code&gt;apply&lt;/code&gt;. Other methods like &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;iterator&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, etc. are not affected by &lt;code&gt;withDefault&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa224102900e991a3cd174b7f94a51928d69f9f" translate="yes" xml:space="preserve">
          <source>The second type parameter of the returned &lt;code&gt;SeqOps&lt;/code&gt; value is still &lt;code&gt;Iterable&lt;/code&gt; (and not &lt;code&gt;Seq&lt;/code&gt;) because &lt;code&gt;SeqView[A]&lt;/code&gt; only extends &lt;code&gt;SeqOps[A, View, View[A]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a46c901f3f82776e8907bf313762ff3f70896ae" translate="yes" xml:space="preserve">
          <source>The selection of primitive types (&lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt;) matches the hand-specialized variants of Java Streams (&lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;java.util.stream.IntStream&lt;/span&gt;, etc.) and the corresponding Java Spliterators (&lt;span name=&quot;Spliterator&quot;&gt;Spliterator&lt;/span&gt;, &lt;span name=&quot;Spliterator.OfInt&quot;&gt;Spliterator.OfInt&lt;/span&gt;, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44d0cc8e4e8cdbd172062c6a9bda07d9a96f38d" translate="yes" xml:space="preserve">
          <source>The semantics of Scala Future demand that all callbacks are invoked asynchronously by default, therefore the returned CompletionStage routes all calls to synchronous transformations to their asynchronous counterparts, i.e., &lt;code&gt;thenRun&lt;/code&gt; will internally call &lt;code&gt;thenRunAsync&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e50c22fceed3c3f97d4614adec47b21643d449" translate="yes" xml:space="preserve">
          <source>The semantics of arithmetic operations on Duration are two-fold:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4119ce8ae66f069635d6ad82752c347b30fd3baa" translate="yes" xml:space="preserve">
          <source>The semantics of the resulting Duration objects matches the semantics of their Double counterparts with respect to arithmetic operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963d0b2fd19291e4377d711caf8dcd368a4b2212" translate="yes" xml:space="preserve">
          <source>The semantics of value are determined at Prop creation. See methods &lt;code&gt;valueIsTrue&lt;/code&gt; and &lt;code&gt;keyExists&lt;/code&gt; in object BooleanProp for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb601f87025b600f57be061daef5b85ac412bdf" translate="yes" xml:space="preserve">
          <source>The sequence should be sorted with the same &lt;code&gt;Ordering&lt;/code&gt; before calling; otherwise, the results are undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545bc6da96a12b06918e77ad8442f8727f103855" translate="yes" xml:space="preserve">
          <source>The side-effecting function to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c60538f196de7b08222cd9c175053a248a25d3" translate="yes" xml:space="preserve">
          <source>The simple string interpolator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bfe0d73618b88fa18e35cc0962d6523631e0eb" translate="yes" xml:space="preserve">
          <source>The simple string matcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648e51039e6a6280681b9c4763fb199f51a5764e" translate="yes" xml:space="preserve">
          <source>The size of this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dfcbcc55690e1ae15238e6ce36d13ff8ff5b05" translate="yes" xml:space="preserve">
          <source>The size of this collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd259429b6f4713b012ad0b9bd5d4748a1e9ea9" translate="yes" xml:space="preserve">
          <source>The size of this concurrent map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f119c1d8d700f3510cd38a224f91fd7441a1058" translate="yes" xml:space="preserve">
          <source>The size of this immutable champ hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507e8b046d4834c9466696641bf92c220a9f8c57" translate="yes" xml:space="preserve">
          <source>The size of this immutable champ hash set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4879dd0a4e6a2294b48f5e1dc2724f80a500039" translate="yes" xml:space="preserve">
          <source>The size of this immutable integer map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b833e90fa7b78d3a4f45a9dbe7e31da19bbc7ffc" translate="yes" xml:space="preserve">
          <source>The size of this immutable long integer map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ec650b58eda927a267cb55312167d3311d51b2" translate="yes" xml:space="preserve">
          <source>The size of this immutable map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa922ace385015661449f21dde52b52dc47f8a2" translate="yes" xml:space="preserve">
          <source>The size of this immutable sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2075cb62b6a96301d3b14bd85a5077f74fd9c440" translate="yes" xml:space="preserve">
          <source>The size of this immutable set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09ed18040d39bf6613f409e100ff81461d913fa" translate="yes" xml:space="preserve">
          <source>The size of this immutable tree map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960b2d515bfefa117515a11630e6a47e490a9b55" translate="yes" xml:space="preserve">
          <source>The size of this immutable tree seq map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752f0d7d3c010c7d216f77d6b898728d62937971" translate="yes" xml:space="preserve">
          <source>The size of this immutable tree set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a61a39126906a85ae4fc036976c94523145f47a" translate="yes" xml:space="preserve">
          <source>The size of this immutable vector map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73da63d695aec4aa564af2e463167348f88d910d" translate="yes" xml:space="preserve">
          <source>The size of this iterable collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8813bed762c3fe1f4c47a238c7620fc760989334" translate="yes" xml:space="preserve">
          <source>The size of this linked hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d47a0630b7a935831d09506365d98902507c44" translate="yes" xml:space="preserve">
          <source>The size of this linked hash set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb15edf9df3addfc2fe44fe4e3c4d9daa3c2f05e" translate="yes" xml:space="preserve">
          <source>The size of this list map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da001311a5646bb8184fe9f28915ff1e96192be" translate="yes" xml:space="preserve">
          <source>The size of this list set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9789d083a29dab05ce45bc735ddf07369fd8ae09" translate="yes" xml:space="preserve">
          <source>The size of this mutable collision-proof hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1fdcddbf361774121a833a93933cbfbbc7a214" translate="yes" xml:space="preserve">
          <source>The size of this mutable hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f773e92c63d1395aef2629f92c26be54c2d691" translate="yes" xml:space="preserve">
          <source>The size of this mutable hash set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb957f8f8dff2f59d5b1e5e119733e6e51fccba" translate="yes" xml:space="preserve">
          <source>The size of this mutable list map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68664497b34e5453251a96fb6cff31a2073f4938" translate="yes" xml:space="preserve">
          <source>The size of this mutable map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58f449319ef39c0a390c80b0660fac14d38826a" translate="yes" xml:space="preserve">
          <source>The size of this mutable tree map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f545eb971a4e76bff4205969f40338644b87c59b" translate="yes" xml:space="preserve">
          <source>The size of this mutable tree set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3a0ebb9c750149da99c5173089bb59b6bca672" translate="yes" xml:space="preserve">
          <source>The size of this open hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a707a03abd55a554e3f6c48a9b3f4dd302f0b02" translate="yes" xml:space="preserve">
          <source>The size of this priority queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9800c06c71340303bdb607c4bd131a65d65ccd" translate="yes" xml:space="preserve">
          <source>The size of this product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccf0d6122e3dfd5f292cf3e9a53e659f26f2b85" translate="yes" xml:space="preserve">
          <source>The size of this sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d112819784b2ed37a23135657b49e88cd5f49c7" translate="yes" xml:space="preserve">
          <source>The size of this set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c235a07cc6f68f0bfb8823aa65498527791f1c4" translate="yes" xml:space="preserve">
          <source>The size of this view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de2836c80f74889287cb51801bc46820e5b1a64" translate="yes" xml:space="preserve">
          <source>The size of this weak hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db24e9eac31ce2fdedebaf32d62acc0a74d1b7c" translate="yes" xml:space="preserve">
          <source>The snapshot is lazily updated - the first time some branch in the snapshot or this TrieMap are accessed, they are rewritten. This means that the work of rebuilding both the snapshot and this TrieMap is distributed across all the threads doing updates or accesses subsequent to the snapshot creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b429016186eb88d3da3bfd2ef44923dc9c9e78ed" translate="yes" xml:space="preserve">
          <source>The snapshot is lazily updated - the first time some branch of this TrieMap are accessed, it is rewritten. The work of creating the snapshot is thus distributed across subsequent updates and accesses on this TrieMap by all threads. Note that the snapshot itself is never rewritten unlike when calling the &lt;code&gt;snapshot&lt;/code&gt; method, but the obtained snapshot cannot be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110537b6cc827d7ca2394864b9c1e7ba6d75795a" translate="yes" xml:space="preserve">
          <source>The sort is stable. That is, elements that are equal (as determined by &lt;code&gt;lt&lt;/code&gt;) appear in the same order in the sorted sequence as in the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fade9ec20b16bc2fa8ee3b09f14527b6adf74205" translate="yes" xml:space="preserve">
          <source>The sort is stable. That is, elements that are equal (as determined by &lt;code&gt;ord.compare&lt;/code&gt;) appear in the same order in the sorted sequence as in the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b50c7efef36abb7a6f5d47a4589edc2d16a346" translate="yes" xml:space="preserve">
          <source>The source from which the match originated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2864c72a4197920926f8319099376c241cbfc248" translate="yes" xml:space="preserve">
          <source>The specified buffer &lt;code&gt;that&lt;/code&gt; is cleared after this operation. This is an O(1) operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72346456bba83436f6b33a824cee7aedf0950316" translate="yes" xml:space="preserve">
          <source>The standard implementation includes nine &lt;code&gt;AnyVal&lt;/code&gt; subtypes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211c510e3e6706884d818e4afaf7dac5b5ba159a" translate="yes" xml:space="preserve">
          <source>The start index from which to patch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a792242671b05e553bdf0b464e00af9508f71c1" translate="yes" xml:space="preserve">
          <source>The starting index, inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1f2fc4f5541359f7d7ac75bf52c13d678279c7" translate="yes" xml:space="preserve">
          <source>The stream containing elements of this stream and the iterable object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1def58fffccc21359fafa67fe34b22268035a047" translate="yes" xml:space="preserve">
          <source>The stream resulting from the concatenation of this stream with the argument stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcba8b7796809c7bce5b341158fc0a4720fa3163" translate="yes" xml:space="preserve">
          <source>The string defining the regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67b209e64e8fb68ad1b59657b5376bedd1207fc" translate="yes" xml:space="preserve">
          <source>The string one wishes to use as literal replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6e115ebcd2bb8323ae825678c371908c9d6f0c" translate="yes" xml:space="preserve">
          <source>The string that will replace each match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f34347cad29266cf6d076f146d1ef35112bfc6a" translate="yes" xml:space="preserve">
          <source>The string that will replace the match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24cbda77ab55bb7e67e89fa73fb04855ad206739" translate="yes" xml:space="preserve">
          <source>The string to match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cebb2c3cef65dc4eea9787cc78b7e55fa12e8b3" translate="yes" xml:space="preserve">
          <source>The string to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ebbc79912b8ad351e4aabc5adcb3c94e7deddb" translate="yes" xml:space="preserve">
          <source>The string to use to name the next created value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2d51554b73dd721cf40085c4be47ff86a12727" translate="yes" xml:space="preserve">
          <source>The string with all escape sequences expanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df472167392f9ed0538d08ad08354b75af83df15" translate="yes" xml:space="preserve">
          <source>The supertype of values in this &lt;code&gt;LongMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69acc8a51561192ebf28879e407239aafb08821" translate="yes" xml:space="preserve">
          <source>The syntax can be improved using a type alias:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fab59d05391567380d52ce656addab4efdef40" translate="yes" xml:space="preserve">
          <source>The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype or subtype of the element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d11e057d1ad380700db81dcc6b4d0186b3f98a" translate="yes" xml:space="preserve">
          <source>The target meta-annotations can be put on the annotation type when instantiating the annotation. In the following example, the annotation &lt;code&gt;@Id&lt;/code&gt; will be added only to the bean getter &lt;code&gt;getX&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc915f92d0bd82258cbf3068f22e940fc7af9144" translate="yes" xml:space="preserve">
          <source>The target string after replacements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4676db7b00aeb5fc622990224e978847fe026bc0" translate="yes" xml:space="preserve">
          <source>The test predicate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024693848a3d10a95a85e49ce3edaf9d3c630827" translate="yes" xml:space="preserve">
          <source>The text to match against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e454f2e713f1b9db4d62f6567baf74a391f581f" translate="yes" xml:space="preserve">
          <source>The text to match against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1badebc5f3f7cc037ed017393cb1529cff1cc92" translate="yes" xml:space="preserve">
          <source>The third type parameter of the returned &lt;code&gt;MapOps&lt;/code&gt; value is still &lt;code&gt;Iterable&lt;/code&gt; (and not &lt;code&gt;Map&lt;/code&gt;) because &lt;code&gt;MapView[K, V]&lt;/code&gt; only extends &lt;code&gt;MapOps[K, V, View, View[A]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0497e01cb563b30d3b312021377c85634d4b1510" translate="yes" xml:space="preserve">
          <source>The throwable to complete the promise with. If the throwable used to fail this promise is an error, a control exception or an interrupted exception, it will be wrapped as a cause within an &lt;code&gt;ExecutionException&lt;/code&gt; which will fail the promise. If the promise has already been fulfilled, failed or has timed out, calling this method will throw an IllegalStateException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fe9651727cb22d562692bbfa0e01150047deb4" translate="yes" xml:space="preserve">
          <source>The transforming function whose result is used to determine the uniqueness of each element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b883d2c3b17d3ce2f05c380793b32237ac7e34" translate="yes" xml:space="preserve">
          <source>The transforming function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b98e460ba4e469a4b8c4ac52a1fb09a99607aa4" translate="yes" xml:space="preserve">
          <source>The treatment to apply to each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f77f82ad1e1c3e09ec19333ec26a40513a40f3" translate="yes" xml:space="preserve">
          <source>The type of elements we can traverse over (e.g. &lt;code&gt;Int&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a05bea8191fe74fb34be327a314dc9a8e84b20b" translate="yes" xml:space="preserve">
          <source>The type of the enumerated values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723a07e19a879c36ecc2342a4ba84f8a5dde2201" translate="yes" xml:space="preserve">
          <source>The type of the resulting collection is guided by the static type of collection. This might cause unexpected results sometimes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f801cc83d7aae36f9106c27fae89725df9f5d460" translate="yes" xml:space="preserve">
          <source>The type of the resulting collection is guided by the static type of immutable sequence. This might cause unexpected results sometimes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c246e93d8cfab448c10e7746170d8aef25f5e87" translate="yes" xml:space="preserve">
          <source>The type of the resulting collection is guided by the static type of iterable collection. This might cause unexpected results sometimes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd28fd26a2a3cfc9aecfe0553fdfc45d95b1da6" translate="yes" xml:space="preserve">
          <source>The type of the resulting collection is guided by the static type of iterator. This might cause unexpected results sometimes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f78f0993dccb06249ec68b74d18367098e4f1e" translate="yes" xml:space="preserve">
          <source>The type of the resulting collection is guided by the static type of lazy list. This might cause unexpected results sometimes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7470548eb223e58cb12f99e4862cd5400daca69c" translate="yes" xml:space="preserve">
          <source>The type of the resulting collection is guided by the static type of list. This might cause unexpected results sometimes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554990cdb609305e214efe532d4262a60ab039f6" translate="yes" xml:space="preserve">
          <source>The type of the resulting collection is guided by the static type of view. This might cause unexpected results sometimes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4524bdaae662cbdf8b80d0bec1b09e7cb48099b6" translate="yes" xml:space="preserve">
          <source>The type of the values in the resulting &lt;code&gt;LongMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926f3c84fcc67776b650df8c52187a65a56fd983" translate="yes" xml:space="preserve">
          <source>The type of value being accumulated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3339cea323002d450ded702d2d15d56f694b4da5" translate="yes" xml:space="preserve">
          <source>The type of values in &lt;code&gt;that&lt;/code&gt;, a supertype of values in &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2d79888616bab7aec23bed54aba6c2738a9410" translate="yes" xml:space="preserve">
          <source>The type of values in &lt;code&gt;that&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cade0afabf61f0f41a43a6906ee89b7886e5c8" translate="yes" xml:space="preserve">
          <source>The type of values in the resulting &lt;code&gt;LongMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5c3660fe46317abde9d42dc61fb6eabeabb86a" translate="yes" xml:space="preserve">
          <source>The type over which the ordering is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5da8752fd96e172d5e51ee3fc1e2f683c9730d1" translate="yes" xml:space="preserve">
          <source>The type returned by transformation operations that preserve the same elements type (e.g. &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;take&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74a8bdf95a566aa5891d9d2ad51e2b743428351" translate="yes" xml:space="preserve">
          <source>The type-relation operators &lt;code&gt;&amp;lt;:&amp;lt;&lt;/code&gt; and &lt;code&gt;=:=&lt;/code&gt; should be considered approximations only, as there are numerous aspects of type conformance which are not yet adequately represented in manifests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f53d69655ee5f3a661df11d8f87d56b3a5d8bb" translate="yes" xml:space="preserve">
          <source>The unanchored &lt;code&gt;Regex&lt;/code&gt; behaves as though those anchors were removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f97d701ac27a35191023ac75c2543f49833ba3" translate="yes" xml:space="preserve">
          <source>The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype or subtype of the element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc1fd5fedb7d9bb19e5bfe828bcbfeb3f5d54c3" translate="yes" xml:space="preserve">
          <source>The underlying basis for the whole package is Java's &lt;code&gt;Process&lt;/code&gt; and &lt;code&gt;ProcessBuilder&lt;/code&gt; classes. While there's no need to use these Java classes, they impose boundaries on what is possible. One cannot, for instance, retrieve a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48a187b8bc42eff80222dd40f67b23159024dd2" translate="yes" xml:space="preserve">
          <source>The universal equality method defined in &lt;code&gt;AnyRef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffbc1b8cf238bd78b6b7c2c3997b8a8ee3ff66d" translate="yes" xml:space="preserve">
          <source>The updated map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85df08a3ddbce27026c85fe289bd4ff9fd4fe4d" translate="yes" xml:space="preserve">
          <source>The upper-bound (exclusive) of the ranged projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b51397b5c9478b521cf7d2eceb55bf2855b597" translate="yes" xml:space="preserve">
          <source>The upper-bound (exclusive) of the ranged projection. &lt;code&gt;None&lt;/code&gt; if there is no upper bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e3ccf22aa709630151bfb2cc93f2a4b91cf3cb" translate="yes" xml:space="preserve">
          <source>The upper-bound (inclusive) of the ranged projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da1b1fbe7bcb3f20f721e53f1ae9defb64dcf5b" translate="yes" xml:space="preserve">
          <source>The user-supplied default value for the key. Throws an exception if no other default behavior was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba52bdf8c64f8035bb90354cbf5e93e1b7f1c56" translate="yes" xml:space="preserve">
          <source>The value of this enumeration with given id &lt;code&gt;x&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa0a41be513d9aa0611cff4eef3a303fc545b7f" translate="yes" xml:space="preserve">
          <source>The value to bind to the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46df17a7619c197aaa7f8a94979df62cc703e62b" translate="yes" xml:space="preserve">
          <source>The value to complete the promise with. If the promise has already been fulfilled, failed or has timed out, calling this method will throw an IllegalStateException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59505f675a48f9a79881e85408e58577f74e799" translate="yes" xml:space="preserve">
          <source>The value to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5588cdcb791f3f5c833e3b1c78764d86234484" translate="yes" xml:space="preserve">
          <source>The value to use if there is no conflict</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a7ef5935c324989b3f2d34f5b079229fa352de" translate="yes" xml:space="preserve">
          <source>The value to use if there is no conflict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5779ffa76a960236bd3b6b4cb491249f192b45" translate="yes" xml:space="preserve">
          <source>The value to which to set the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5bce55e24f8763c3e7fc35d6f311b419ea5c16" translate="yes" xml:space="preserve">
          <source>The values in SystemProperties can be used to access and manipulate designated system properties. See &lt;code&gt;scala.sys.Prop&lt;/code&gt; for particulars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e6386f1abe37baf756f292bc58a0eb49eab1ac" translate="yes" xml:space="preserve">
          <source>The values of this enumeration as a set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83214b9332cc93f4c7857ecdf3d153636845804a" translate="yes" xml:space="preserve">
          <source>The version number of the jar this was loaded from plus &quot;version &quot; prefix, or &quot;version (unknown)&quot; if it cannot be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca5275b2d86ae52d67c301ed0dcfb6e0c5a982c" translate="yes" xml:space="preserve">
          <source>The words at index &lt;code&gt;idx&lt;/code&gt;, or 0L if outside the range of the set &lt;b&gt;Note:&lt;/b&gt; requires &lt;code&gt;idx &amp;gt;= 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bac584d28c2c1db8f91bfb4c002ab452c933d05" translate="yes" xml:space="preserve">
          <source>The wrapped mutable &lt;code&gt;Array&lt;/code&gt; that backs this &lt;code&gt;ArraySeq&lt;/code&gt;. Any changes to this array will break the expected immutability. Its element type does not have to be equal to the element type of this ArraySeq. A primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype or subtype of the element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba4aea7e1db0c6130de97527be605319a40ffce" translate="yes" xml:space="preserve">
          <source>Then locally import a specific &lt;code&gt;ExecutionContext&lt;/code&gt; in one place for the entire application or module, passing it implicitly to individual methods. Alternatively define a local implicit val with the required &lt;code&gt;ExecutionContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6cd927b45a69eb1432a81c89af9ff6c11d76cb" translate="yes" xml:space="preserve">
          <source>There are a number of subtle points to the above example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b6eb97466086bfeb2907fbeb1469c6cbcc7ca9" translate="yes" xml:space="preserve">
          <source>There are manually specialized Accumulators for &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt; that don't box the elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1bcbe991349c73005daac85066ce3fea571f16" translate="yes" xml:space="preserve">
          <source>There are multiple ways to automatically manage resources with &lt;code&gt;Using&lt;/code&gt;. If you only need to manage a single resource, the &lt;a href=&quot;#apply%5BR,A%5D(resource:=&amp;gt;R)(f:R=&amp;gt;A)(implicitevidence%241:scala.util.Using.Releasable%5BR%5D):scala.util.Try%5BA%5D&quot; id=&quot;scala.util.Using#apply&quot; name=&quot;scala.util.Using#apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt; method is easiest; it wraps the resource opening, operation, and resource releasing in a &lt;code&gt;Try&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2c947b09084d59489ed6f2fb8bbf183a1e9b29" translate="yes" xml:space="preserve">
          <source>There are multiple ways to automatically manage resources with &lt;code&gt;Using&lt;/code&gt;. If you only need to manage a single resource, the &lt;code&gt;apply&lt;/code&gt; method is easiest; it wraps the resource opening, operation, and resource releasing in a &lt;code&gt;Try&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767ad83f7824e5def95e9bf6afb7e966d89bc66f" translate="yes" xml:space="preserve">
          <source>There are two possibilities to process elements of a primitive Accumulator without boxing: specialized operations of the Accumulator, or the Stepper interface. The most common collection operations are overloaded or overridden in the primitive Accumulator classes, for example IntAccumulator.map or IntAccumulator.exists. Thanks to Scala's function specialization, &lt;code&gt;intAcc.exists(x =&amp;gt; testOn(x))&lt;/code&gt; does not incur boxing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a205c0974342b1144c216c4f42c770543c3304" translate="yes" xml:space="preserve">
          <source>There is an implicit conversion from &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;scala.Boolean&lt;/a&gt; =&amp;gt; &lt;span name=&quot;scala.runtime.RichBoolean&quot;&gt;scala.runtime.RichBoolean&lt;/span&gt; which provides useful non-primitive operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7b371fef57e5ca74cdcfaf05642958aaaec207" translate="yes" xml:space="preserve">
          <source>There is an implicit conversion from &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;scala.Byte&lt;/a&gt; =&amp;gt; &lt;span name=&quot;scala.runtime.RichByte&quot;&gt;scala.runtime.RichByte&lt;/span&gt; which provides useful non-primitive operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c286342e25bd74af7f691d58524e7ad6e8ff7c" translate="yes" xml:space="preserve">
          <source>There is an implicit conversion from &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;scala.Char&lt;/a&gt; =&amp;gt; &lt;span name=&quot;scala.runtime.RichChar&quot;&gt;scala.runtime.RichChar&lt;/span&gt; which provides useful non-primitive operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dd706b7dd3bb7e5d8b6566d1ec6bc2e5253cc6" translate="yes" xml:space="preserve">
          <source>There is an implicit conversion from &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;scala.Double&lt;/a&gt; =&amp;gt; &lt;span name=&quot;scala.runtime.RichDouble&quot;&gt;scala.runtime.RichDouble&lt;/span&gt; which provides useful non-primitive operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9176cbf5da8bd97449658e7d7ec7f596563d9c65" translate="yes" xml:space="preserve">
          <source>There is an implicit conversion from &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;scala.Float&lt;/a&gt; =&amp;gt; &lt;span name=&quot;scala.runtime.RichFloat&quot;&gt;scala.runtime.RichFloat&lt;/span&gt; which provides useful non-primitive operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c803287c54ecb54398b0fc68e8a01a3367b4fc7d" translate="yes" xml:space="preserve">
          <source>There is an implicit conversion from &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt; =&amp;gt; &lt;span name=&quot;scala.runtime.RichInt&quot;&gt;scala.runtime.RichInt&lt;/span&gt; which provides useful non-primitive operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fcbcc73856e08f0af3fd6feecca6a181910a4f" translate="yes" xml:space="preserve">
          <source>There is an implicit conversion from &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;scala.Long&lt;/a&gt; =&amp;gt; &lt;span name=&quot;scala.runtime.RichLong&quot;&gt;scala.runtime.RichLong&lt;/span&gt; which provides useful non-primitive operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964994721c5fb5a6dcf46deb1ca4222ce4009b84" translate="yes" xml:space="preserve">
          <source>There is an implicit conversion from &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;scala.Short&lt;/a&gt; =&amp;gt; &lt;span name=&quot;scala.runtime.RichShort&quot;&gt;scala.runtime.RichShort&lt;/span&gt; which provides useful non-primitive operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fa2dbd1e675aabf123c55f6dcf4dee7ae555c7" translate="yes" xml:space="preserve">
          <source>Therefore, printing a &lt;code&gt;PriorityQueue&lt;/code&gt; will not reveal the priority order of the elements, though the highest-priority element will be printed first. To print the elements in order, one must duplicate the &lt;code&gt;PriorityQueue&lt;/code&gt; (by using &lt;code&gt;clone&lt;/code&gt;, for instance) and then dequeue them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a200311aa840cc925c5ef9946a01e2d03c092676" translate="yes" xml:space="preserve">
          <source>These are useful methods that exist for both &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;scala.Some&lt;/a&gt; and &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab61afd79996b0d7895343c0682f61c017d1de0" translate="yes" xml:space="preserve">
          <source>These functions are slotted for deprecation, but it is on hold pending superior type inference for tupling anonymous functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d4b339ce6407be2b3faec01edfc68248b01737" translate="yes" xml:space="preserve">
          <source>These implicits create conversions from a value for which an implicit Numeric exists to the inner class which creates infix operations. Once imported, you can write methods as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d55d5e964b9f8757261a19ca722369e7d07c867" translate="yes" xml:space="preserve">
          <source>These operations are equivalent to &lt;span name=&quot;lengthCompare(Int)&quot;&gt;&lt;code&gt;lengthCompare(Int)&lt;/code&gt;&lt;/span&gt;, and allow the following more readable usages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0300d03497f26326e1321c6bc66991c4839e9609" translate="yes" xml:space="preserve">
          <source>These operations are equivalent to &lt;span name=&quot;sizeCompare(Int)&quot;&gt;&lt;code&gt;sizeCompare(Int)&lt;/code&gt;&lt;/span&gt;, and allow the following more readable usages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b248de5435cd1d45346c9c3ab3bd177e4a84433" translate="yes" xml:space="preserve">
          <source>These operations are implemented in terms of &lt;span name=&quot;lengthCompare(Int)&quot;&gt;&lt;code&gt;lengthCompare(Int)&lt;/code&gt;&lt;/span&gt;, and allow the following more readable usages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9283485d3ff47dbd84cfe2e51718afc5c32f76" translate="yes" xml:space="preserve">
          <source>These operations are implemented in terms of &lt;span name=&quot;scala.collection.IterableOps.sizeCompare(Int)&quot;&gt;&lt;code&gt;sizeCompare(Int)&lt;/code&gt;&lt;/span&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3945ea761f5ef2032e8bc1a778fa5c5dfea8a7b3" translate="yes" xml:space="preserve">
          <source>These operations are implemented in terms of &lt;span name=&quot;sizeCompare(Int)&quot;&gt;&lt;code&gt;sizeCompare(Int)&lt;/code&gt;&lt;/span&gt;, and allow the following more readable usages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca01d3c44c2c30871e70984ba4317f224deff54" translate="yes" xml:space="preserve">
          <source>These two features make Accumulators a good candidate to collect the results of a parallel Java stream pipeline into a Scala collection. The &lt;a href=&quot;../collection/convert/streamextensions%24streamhastoscala#toScala%5BC1%5D(factory:scala.collection.Factory%5BA,C1%5D)(implicitinfo:collection.convert.StreamExtensions.AccumulatorFactoryInfo%5BA,C1%5D):C1&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala#toScala&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala#toScala&quot;&gt;scala.collection.convert.StreamExtensions.StreamHasToScala.toScala&lt;/a&gt; extension method on Java streams (available by importing &lt;a href=&quot;streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;&lt;code&gt;scala.jdk.StreamConverters._&lt;/code&gt;&lt;/a&gt;) is specialized for Accumulators: they are built in parallel, the parts are merged efficiently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936a45e68ac6c46a32d0ea9a94d36b1763a39a89" translate="yes" xml:space="preserve">
          <source>They can be executed in parallel, with the output of the first being fed as input to the second, like Unix pipes. This is achieved with the &lt;code&gt;#|&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2dec2325d76b36f104f75a7eb7aaa0100bbd66" translate="yes" xml:space="preserve">
          <source>They can be executed in parallel, with the output of the first being fed as input to the second, like Unix pipes. This is achieved with the &lt;code&gt;#|&lt;/code&gt; method.They can be executed in sequence, with the second starting as soon as the first ends. This is done by the &lt;code&gt;###&lt;/code&gt; method.The execution of the second one can be conditioned by the return code (exit status) of the first, either only when it's zero, or only when it's not zero. The methods &lt;code&gt;#&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;#||&lt;/code&gt; accomplish these tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea1a75a8ed23eadd7c74ab60527025c5c268ea7" translate="yes" xml:space="preserve">
          <source>They can be executed in sequence, with the second starting as soon as the first ends. This is done by the &lt;code&gt;###&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461ce32fa3dfab9a55c6301685182103e9490a1f" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;ExecutionContext&lt;/code&gt; steals execution time from other threads by having its &lt;code&gt;Runnable&lt;/code&gt;s run on the &lt;code&gt;Thread&lt;/code&gt; which calls &lt;code&gt;execute&lt;/code&gt; and then yielding back control to the caller after *all* its &lt;code&gt;Runnable&lt;/code&gt;s have been executed. Nested invocations of &lt;code&gt;execute&lt;/code&gt; will be trampolined to prevent uncontrolled stack space growth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63519c11211179b65870003bd1b624888c9f3296" translate="yes" xml:space="preserve">
          <source>This Builder can be reused after calling &lt;code&gt;result()&lt;/code&gt; without an intermediate call to &lt;code&gt;clear()&lt;/code&gt; in order to build multiple related results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfa25b2747de04b0eea1c2a25f6bc682f2e4fae" translate="yes" xml:space="preserve">
          <source>This StringBuilder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c7aa07d5e047c42ec69ebba6b9f270aa2f51d4" translate="yes" xml:space="preserve">
          <source>This algorithm is designed to generate well-distributed non-cryptographic hashes. It is designed to hash data in 32 bit chunks (ints).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a7dc4bbb4d2b8e7ef5b04d8ae4ba584544d0c5" translate="yes" xml:space="preserve">
          <source>This allows for sophisticated chaining of &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; values without having to check for the existence of a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce95b1e335f100fc3e6ca64552718f8c7d94ec6" translate="yes" xml:space="preserve">
          <source>This allows for-comprehensions over the left side of &lt;code&gt;Either&lt;/code&gt; instances, reversing &lt;code&gt;Either&lt;/code&gt;'s usual right-bias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da57b57baa95f4f37bd112d18b831dee7c025fe" translate="yes" xml:space="preserve">
          <source>This allows passing the &lt;code&gt;Accumulator&lt;/code&gt; object as argument when a &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;collection.Factory&lt;/a&gt;, and the implicit &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;Accumulator.AccumulatorFactoryShape&lt;/a&gt; instance is used to build a specialized Accumulator according to the element type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cab393e1032d2ddbe668146dd65d94798a4d09" translate="yes" xml:space="preserve">
          <source>This allows the caller of the method, or creator of the instance of the class, to decide which &lt;code&gt;ExecutionContext&lt;/code&gt; should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3218802da071a20cc1b51118f8a60926031562d5" translate="yes" xml:space="preserve">
          <source>This annotation configures how Scala prints two-parameter generic types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b4853f805522317c754e6ff570a11a2813bf2a" translate="yes" xml:space="preserve">
          <source>This annotation has the same functionality as &lt;code&gt;scala.beans.BeanProperty&lt;/code&gt;, but the generated Bean getter will be named &lt;code&gt;isFieldName&lt;/code&gt; instead of &lt;code&gt;getFieldName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737b14547d0b7c3e73a1098d83c95e0def5d2dff" translate="yes" xml:space="preserve">
          <source>This builder can be reused to create multiple instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806f52455e85947b664c591e4dc45f7d0233c985" translate="yes" xml:space="preserve">
          <source>This builder can be reused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7e76a69d1cec2664877bba5a7a6ff102a02c53" translate="yes" xml:space="preserve">
          <source>This can be used to help writing replacer functions when you are not interested in match data. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c5d2d2aa3b5fce1a530d753157fc53fdfea017" translate="yes" xml:space="preserve">
          <source>This case object represents non-existent values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c433d9861d479ceaf06ada141e7fb57510209f27" translate="yes" xml:space="preserve">
          <source>This class comes with two implementing case classes &lt;code&gt;scala.Nil&lt;/code&gt; and &lt;code&gt;scala.::&lt;/code&gt; that implement the abstract members &lt;code&gt;isEmpty&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b997ffbfa0690cf462c5c0a40791c64096a8a14" translate="yes" xml:space="preserve">
          <source>This class delegates to the &lt;span name=&quot;java.util.regex&quot;&gt;java.util.regex&lt;/span&gt; package of the Java Platform. See the documentation for &lt;span name=&quot;java.util.regex.Pattern&quot;&gt;java.util.regex.Pattern&lt;/span&gt; for details about the regular expression syntax for pattern strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726d6f8e81e1b4420d631ddd0a3ec58a0e1b84d1" translate="yes" xml:space="preserve">
          <source>This class differs from &lt;a href=&quot;../try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;scala.util.Try&lt;/a&gt; in that it focuses on composing exception handlers rather than composing behavior. All behavior should be composed first and fed to a &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt; object using one of the &lt;code&gt;opt&lt;/code&gt;, &lt;code&gt;either&lt;/code&gt; or &lt;code&gt;withTry&lt;/code&gt; methods. Taken together the classes provide a DSL for composing catch and finally behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfb2d3e358c60809711d2ee3c7898004013bde2" translate="yes" xml:space="preserve">
          <source>This class implements a simple proxy that forwards all calls to the public, non-final methods defined in class &lt;code&gt;Any&lt;/code&gt; to another object self. Those methods are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a4af7cea67e0920489ae5b44ad2f9977c259b3" translate="yes" xml:space="preserve">
          <source>This class implements an immutable linked list that evaluates elements in order and only when needed. Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951837919b7f421f573adf5b3deedf03c184bc86" translate="yes" xml:space="preserve">
          <source>This class implements an immutable map that preserves order using a hash map for the key to value mapping to provide efficient lookup, and a tree for the ordering of the keys to provide efficient insertion/modification order traversal and destructuring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e32f6dc39e68a69474add3f6cf29e4e69f5323" translate="yes" xml:space="preserve">
          <source>This class implements errors which are thrown whenever a field is used before it has been initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16cfc32857abcfa31714a12f8200f16b68b16c3" translate="yes" xml:space="preserve">
          <source>This class implements errors which are thrown whenever an object doesn't match any pattern of a pattern matching expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbeb372e4c22ff99f059932c8dcec9362c4e3cfc" translate="yes" xml:space="preserve">
          <source>This class implements immutable maps using a Compressed Hash-Array Mapped Prefix-tree. See paper https://michael.steindorfer.name/publications/oopsla15.pdf for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225d3c1d1a1a0cc35ba45fba61e1f8a55037f0dc" translate="yes" xml:space="preserve">
          <source>This class implements immutable maps using a list-based data structure. List map iterators and traversal methods visit key-value pairs in the order they were first inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5739a4abef726764ddf4c8a2707987c38dc6c0" translate="yes" xml:space="preserve">
          <source>This class implements immutable maps using a vector/map-based data structure, which preserves insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e908f3f2f36b43501383cf797a4e4bc9c6edbb" translate="yes" xml:space="preserve">
          <source>This class implements immutable sets using a Compressed Hash-Array Mapped Prefix-tree. See paper https://michael.steindorfer.name/publications/oopsla15.pdf for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0264940cbd7af09c01b0d32ca9942af796481db" translate="yes" xml:space="preserve">
          <source>This class implements immutable sets using a list-based data structure. List set iterators and traversal methods visit elements in the order they were first inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa94cad7c8febe44bafd44466909afae91e85c7" translate="yes" xml:space="preserve">
          <source>This class implements immutable sorted sets using a tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf0b52c9233c8fcfb6de92f7e78c3dc0b159bbc" translate="yes" xml:space="preserve">
          <source>This class implements mutable maps using a hashtable with red-black trees in the buckets for good worst-case performance on hash collisions. An &lt;code&gt;Ordering&lt;/code&gt; is required for the element type. Equality as determined by the &lt;code&gt;Ordering&lt;/code&gt; has to be consistent with &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt;. Universal equality of numeric types is not supported (similar to &lt;code&gt;AnyRefMap&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55235888915b79cfd716e1c21d25e1aa83d152af" translate="yes" xml:space="preserve">
          <source>This class implements mutable maps using a hashtable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74aec375ddabc6b72274f315c099c6502f6475f" translate="yes" xml:space="preserve">
          <source>This class implements mutable maps using a hashtable. The iterator and all traversal methods of this class visit elements in the order they were inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ab2a0ef1fdaa2bfc671c7e4eac138e11fb9c5d" translate="yes" xml:space="preserve">
          <source>This class implements mutable maps with &lt;code&gt;AnyRef&lt;/code&gt; keys based on a hash table with open addressing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41cbec0fa73cdb3118383147d2fd21d6ec2163c" translate="yes" xml:space="preserve">
          <source>This class implements mutable maps with &lt;code&gt;Long&lt;/code&gt; keys based on a hash table with open addressing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4f5cb74324faa4c99a320b3c4941724e6d9eb6" translate="yes" xml:space="preserve">
          <source>This class implements mutable sets using a hashtable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974b327617f619e50039bb6512a5aeb38a8901dc" translate="yes" xml:space="preserve">
          <source>This class implements mutable sets using a hashtable. The iterator and all traversal methods of this class visit elements in the order they were inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d68ba7a7eb3e19c10159902d6a8e6c80becab24" translate="yes" xml:space="preserve">
          <source>This class implements priority queues using a heap. To prioritize elements of type A there must be an implicit Ordering[A] available at creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfac7d62870d47175b0f1b154ea499ab7e89221" translate="yes" xml:space="preserve">
          <source>This class is &lt;code&gt;final&lt;/code&gt; and requires an extra &lt;code&gt;Factory&lt;/code&gt; object rather than leaving the details of creating a &lt;code&gt;Builder&lt;/code&gt; to an abstract method that could be implemented by a subclass. This is necessary because the factory is needed for deserializing this class's private state, which happens before any subclass fields would be deserialized. Any additional state required to create the proper &lt;code&gt;Builder&lt;/code&gt; needs to be captured by the &lt;code&gt;factory&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1af73daa60eec5f5617b1ad20d71c1cd81645d" translate="yes" xml:space="preserve">
          <source>This class is not intended for public consumption and will be made private in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa83b03359048398417d4aec9565cbb56df6f52" translate="yes" xml:space="preserve">
          <source>This class is optimal for last-in-first-out (LIFO), stack-like access patterns. If you need another access pattern, for example, random access or FIFO, consider using a collection more suited to this than &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc81a9b331381ceb1a8988a225dd9aa009af35af" translate="yes" xml:space="preserve">
          <source>This class is optimal when range queries will be performed, or when traversal in order of an ordering is desired. If you only need key lookups, and don't care in which order key-values are traversed in, consider using * &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;scala.collection.immutable.HashMap&lt;/a&gt;, which will generally have better performance. If you need insertion order, consider a * &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;scala.collection.immutable.SeqMap&lt;/a&gt;, which does not need to have an ordering supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22ba216d26a50ead591d778b8e9770529a97268" translate="yes" xml:space="preserve">
          <source>This class is typically used as a mixin. It turns maps which map &lt;code&gt;K&lt;/code&gt; to &lt;code&gt;Set[V]&lt;/code&gt; objects into multimaps that map &lt;code&gt;K&lt;/code&gt; to &lt;code&gt;V&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aceda08d053512068eddfbea2a00bf6554ae2ce" translate="yes" xml:space="preserve">
          <source>This class is used to control the I/O of every &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;scala.sys.process.Process&lt;/a&gt;. The functions used to create it will be called with the process streams once it has been started. It might not be necessary to use &lt;code&gt;ProcessIO&lt;/code&gt; directly -- &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; can return the process output to the caller, or use a &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;scala.sys.process.ProcessLogger&lt;/a&gt; which avoids direct interaction with a stream. One can even use the factories at &lt;code&gt;BasicIO&lt;/code&gt; to create a &lt;code&gt;ProcessIO&lt;/code&gt;, or use its helper methods when creating one's own &lt;code&gt;ProcessIO&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f468f39fdfee3c1c657a21fb789ab296765aa7" translate="yes" xml:space="preserve">
          <source>This class provides a simple FIFO queue of data objects, which are read by one or more reader threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29aac20d4f69ed23251a751cd4bd3e74da1a882c" translate="yes" xml:space="preserve">
          <source>This class provides a simple way to get unique objects for equal strings. Since symbols are interned, they can be compared using reference equality. Instances of &lt;code&gt;Symbol&lt;/code&gt; can be created easily with Scala's built-in quote mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa00c76fc84ea9682b401e80fd38141e7d46e9d" translate="yes" xml:space="preserve">
          <source>This class provides methods to access the details of a match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a10b981074c1fbdccd35c5924228555361278c" translate="yes" xml:space="preserve">
          <source>This class provides the basic mechanism to do String Interpolation. String Interpolation allows users to embed variable references directly in *processed* string literals. Here's an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819beb786efc020f3ff66142b12435918d8216f5" translate="yes" xml:space="preserve">
          <source>This class represents a finite duration. Its addition and subtraction operators are overloaded to retain this guarantee statically. The range of this class is limited to &lt;code&gt;+-(2^63-1)&lt;code&gt;ns, which is roughly 292  years.
&lt;/code&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae4cb79b4981f0661413ab2686efeb93e07c271" translate="yes" xml:space="preserve">
          <source>This class represents a tailcalling computation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c135ac8d4f243ff318dbfbc9b838aad2a955d2a9" translate="yes" xml:space="preserve">
          <source>This class represents uninitialized variable/value errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a47b584802f8bfc0828a01780820d6d0d1f72a3" translate="yes" xml:space="preserve">
          <source>This class serves as a wrapper augmenting &lt;code&gt;String&lt;/code&gt;s with all the operations found in indexed sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2b5e486665f434c96cec078c86945bb0fb069a" translate="yes" xml:space="preserve">
          <source>This class serves as a wrapper for &lt;code&gt;Array&lt;/code&gt;s with many of the operations found in indexed sequences. Where needed, instances of arrays are implicitly converted into this class. There is generally no reason to create an instance explicitly or use an &lt;code&gt;ArrayOps&lt;/code&gt; type. It is better to work with plain &lt;code&gt;Array&lt;/code&gt; types instead and rely on the implicit conversion to &lt;code&gt;ArrayOps&lt;/code&gt; when calling a method (which does not actually allocate an instance of &lt;code&gt;ArrayOps&lt;/code&gt; because it is a value class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136f6a3c237b574987a5c244fcc3e5ec11029572" translate="yes" xml:space="preserve">
          <source>This class stores a deadline, as obtained via &lt;code&gt;Deadline.now&lt;/code&gt; or the duration DSL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7248d60a1cc72ac08e258357478383919aed7f0" translate="yes" xml:space="preserve">
          <source>This collection as a &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c310cdd9448ba3d05c7e4fc31664889304f040b" translate="yes" xml:space="preserve">
          <source>This collection as a &lt;code&gt;Seq[A]&lt;/code&gt;. This is equivalent to &lt;code&gt;to(Seq)&lt;/code&gt; but might be faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e3ad9620a5f513b07141ef58c19bc9b7fc1562" translate="yes" xml:space="preserve">
          <source>This collection as an &lt;code&gt;Iterable[A]&lt;/code&gt;. No new collection will be built if &lt;code&gt;this&lt;/code&gt; is already an &lt;code&gt;Iterable[A]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f125eba5afd649269b7fa8231f37f34ca7107576" translate="yes" xml:space="preserve">
          <source>This constructor does not support options as flags, which must be supplied as inline flags in the pattern string: &lt;code&gt;(?idmsux-idmsux)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaceab6975bff86c0d0e5788c2636b2fed43c517" translate="yes" xml:space="preserve">
          <source>This equivalence may be preferable for collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0f38b1f3ac6c0db779547244a2ffbf30847f74" translate="yes" xml:space="preserve">
          <source>This equivalence may be preferable for numeric contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d44b61d0edf920dbe0ad8740e447c9ad2b6fad1" translate="yes" xml:space="preserve">
          <source>This function is an analogue to Ordering.on where the Ordering[S] parameter is passed implicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdee571be69f3b197defa59467036c68d5d661a" translate="yes" xml:space="preserve">
          <source>This function is equivalent to passing the result of &lt;code&gt;Ordering.by(f)&lt;/code&gt; to &lt;code&gt;orElse&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2668babbf99e12709ab21db65d4d32bd4dc240dc" translate="yes" xml:space="preserve">
          <source>This function transforms all the values of mappings contained in this map with function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff89471d095e8dca207c443d4628f007991e2b8b" translate="yes" xml:space="preserve">
          <source>This function will force the realization of the entire LazyList unless the &lt;code&gt;f&lt;/code&gt; throws an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcefe63a02b685391ab29e1797bcc2f30df8861" translate="yes" xml:space="preserve">
          <source>This function will force the realization of the entire Stream unless the &lt;code&gt;f&lt;/code&gt; throws an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cb228d2b8bb68980e2f010f1f0e30335ac9d2f" translate="yes" xml:space="preserve">
          <source>This function will receive standard error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab40526b0d8cf75a700726613b445a5363abc3a5" translate="yes" xml:space="preserve">
          <source>This function will receive standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1d50cc7d2ccf1b18d52da4bc2e5a86ebfe3d8e" translate="yes" xml:space="preserve">
          <source>This future may contain a throwable object and this means that the future failed. Futures obtained through combinators have the same exception as the future they were obtained from. The following throwable objects are not contained in the future:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb33449dd5b444646a32327d37fff703bb9b4e6" translate="yes" xml:space="preserve">
          <source>This group of escape codes provides control over text styling. For example, to turn on reverse video with bold and then turn off all styling embed these codes,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7964b66870e89ab7030590dd48a4977478f0d33c" translate="yes" xml:space="preserve">
          <source>This implementation trait can be mixed into an &lt;code&gt;IterableOnce&lt;/code&gt; to get the basic methods that are shared between &lt;code&gt;Iterator&lt;/code&gt; and &lt;code&gt;Iterable&lt;/code&gt;. The &lt;code&gt;IterableOnce&lt;/code&gt; must support multiple calls to &lt;code&gt;iterator&lt;/code&gt; but may or may not return the same &lt;code&gt;Iterator&lt;/code&gt; every time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4e0e26ff9597de7d4baf9dd50b036c5dae7178" translate="yes" xml:space="preserve">
          <source>This implicit creates a conversion from any value for which an implicit &lt;code&gt;Ordering&lt;/code&gt; exists to the class which creates infix operations. With it imported, you can write methods as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680efe36a37fd8a384219c72e6e0820eeac3da0b" translate="yes" xml:space="preserve">
          <source>This implicit method augments &lt;code&gt;T&lt;/code&gt; with the comparison operators defined in &lt;code&gt;scala.math.Ordering.Ops&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55741443bdc72413041b13ac4d103a5e38aad06" translate="yes" xml:space="preserve">
          <source>This implicitly inherited member is ambiguous. One or more implicitly inherited members have similar signatures, so calling this member may produce an ambiguous implicit conversion compiler error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f01d74ca8c8541a47a59f2e492fee569cd89904" translate="yes" xml:space="preserve">
          <source>This implicitly inherited member is shadowed by one or more members in this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f32c23930653ab8fd48407c77e7868001f61247" translate="yes" xml:space="preserve">
          <source>This inner class defines comparison operators available for &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20592807871c6f447174a2d70ce55d073a812f6" translate="yes" xml:space="preserve">
          <source>This is a base trait for all Scala concurrent map implementations. It provides all of the methods a &lt;code&gt;Map&lt;/code&gt; does, with the difference that all the changes are atomic. It also describes methods specific to concurrent maps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67f629c6b8bca8c68cd1f06b69b6fabf81da36e" translate="yes" xml:space="preserve">
          <source>This is a general form of any factory (&lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;, &lt;a href=&quot;sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;, &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt; and &lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;) whose element type is fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd8abaf95ca8f3ee92fe2190ed4e7fb45cc22d9" translate="yes" xml:space="preserve">
          <source>This is a more general version of copyToArray - this also accepts a srcStart unlike copyToArray This copies maxItems elements from this collections srcStart to dest's destStart If we reach the end of either collections before we could copy maxItems, we simply stop copying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e807b760752f43501d026a35d984b735233a76" translate="yes" xml:space="preserve">
          <source>This is also equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4ac79185efac81e0716dff5fed37f5079b207f" translate="yes" xml:space="preserve">
          <source>This is an atomic operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57026c436a203a7b75748873e6fd582dd5798d37" translate="yes" xml:space="preserve">
          <source>This is an iterator that returns the matched strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35961c9dcfbd3ab92b48558f87b33882ec6a2007" translate="yes" xml:space="preserve">
          <source>This is based on the earlier MurmurHash3 code by Rex Kerr, but the MurmurHash3 algorithm was since changed by its creator Austin Appleby to remedy some weaknesses and improve performance. This represents the latest and supposedly final version of the algorithm (revision 136).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f6eeae2dcdfdd0057f1b65f46cff9c995ac1c7" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;flatMap&lt;/code&gt; except here, &lt;code&gt;f&lt;/code&gt; does not need to wrap its result in an &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955e102dc0b24d25bf20b9c0b6217f7946d88617" translate="yes" xml:space="preserve">
          <source>This is the companion object for the &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;scala.math.Ordering&lt;/a&gt; trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9c446533038d46a94567be2facdc4dc2ff1a9b" translate="yes" xml:space="preserve">
          <source>This is the default text encoding, overridden (unreliably) with &lt;code&gt;JAVA_OPTS=&quot;-Dfile.encoding=Foo&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec3d2df7fe7365500b90acf5fac942bbb0f0d85" translate="yes" xml:space="preserve">
          <source>This is the documentation for the Scala standard library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d68d59e4920d6ed89dbb7f933c3cde9e8611fe" translate="yes" xml:space="preserve">
          <source>This is the encoding to use reading in source files, overridden with -encoding. Note that it uses &quot;prop&quot; i.e. looks in the scala jar, not the system properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94736d6b215f4f0e7834518ced6a8c1fdfdb3405" translate="yes" xml:space="preserve">
          <source>This is the fastest way to add an entry to a &lt;code&gt;LongMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36d6f9160721a3dba843cf214c7c45afda0add7" translate="yes" xml:space="preserve">
          <source>This is the fastest way to add an entry to an &lt;code&gt;AnyRefMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdd7e24a278a87c99bc2d3b4485f1b418402a80" translate="yes" xml:space="preserve">
          <source>This is usually done to warn about a non-final class being made final in a future version. Sub-classing such a class then generates a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da10ccccebf88bec7294ae35d05041565d07c603" translate="yes" xml:space="preserve">
          <source>This map is not intended to contain more than 2&lt;sup&gt;29 entries (approximately 500 million). The maximum capacity is 2&lt;/sup&gt;30, but performance will degrade rapidly as 2^30 is approached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf22ef0bd0ae875b69479897e46e1fca4503438" translate="yes" xml:space="preserve">
          <source>This map is not intended to contain more than 2&lt;sup&gt;29&lt;/sup&gt; entries (approximately 500 million). The maximum capacity is 2&lt;sup&gt;30&lt;/sup&gt;, but performance will degrade rapidly as 2&lt;sup&gt;30&lt;/sup&gt; is approached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d767d33fdab4248ab2c19c3a0ef13c555a1d28bc" translate="yes" xml:space="preserve">
          <source>This marker trait is used by &lt;a href=&quot;await%24&quot; id=&quot;scala.concurrent.Await&quot; name=&quot;scala.concurrent.Await&quot;&gt;Await&lt;/a&gt; to ensure that &lt;a href=&quot;awaitable#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):Awaitable.this.type&quot; id=&quot;scala.concurrent.Awaitable#ready&quot; name=&quot;scala.concurrent.Awaitable#ready&quot;&gt;Awaitable.ready&lt;/a&gt; and &lt;a href=&quot;awaitable#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):T&quot; id=&quot;scala.concurrent.Awaitable#result&quot; name=&quot;scala.concurrent.Awaitable#result&quot;&gt;Awaitable.result&lt;/a&gt; are not directly called by user code. An implicit instance of this trait is only available when user code is currently calling the methods on &lt;a href=&quot;await%24&quot; id=&quot;scala.concurrent.Await&quot; name=&quot;scala.concurrent.Await&quot;&gt;Await&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660b667165e1148200e8e9af14944600da38a7e3" translate="yes" xml:space="preserve">
          <source>This means that an element deprecated in some 2.13.x release will be preserved in all 2.13.x releases, but may be removed in 2.14. (A deprecated element might be kept longer to ease migration, but developers should not rely on this.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f461b36cfe962f7dea812d4007f956f477925624" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from () =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[() =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcabfb3234d3d6483ff7bfe62476dbcd578d5e7c" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from () =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[() =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3390b72d868200f24fa0215548902cd6b176de99" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from () =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[() =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7447dbb0505c6e86c09fa2358580bb446ec6aff4" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from () =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[() =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0732e44e46cb7f023bccd92365a9ae36a0474fc8" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;] performed by method UnliftOps in &lt;a href=&quot;function1%24&quot; id=&quot;scala.Function1&quot; name=&quot;scala.Function1&quot;&gt;scala.Function1&lt;/a&gt;.This conversion will take place only if R is a subclass of Option[B] (R &amp;lt;: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1a26d4dc9f697bf06c6ed2e810144150ea0e6f" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94024834ad5ccd7a81f7ed428f080f2e83e2f057" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.This conversion will take place only if R is a subclass of Option[Nothing] (R &amp;lt;: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221cfd6cbb331cbda90382cf6072a92677a6289a" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fa2cbab170c787d5da6d7eeb206a5dd64b2929" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8ee376bf1735100097c1c9277b999871493d49" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc032f17efa5e2091a7cb7e77cd07f09d025461" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6417041b7212d4f874546ef277bef73ae81ad43" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0acf5c9c3cc87cfa24c3ac71d10244ae8edb030" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36368cd23624ab337591f121cce24f9098aceb5" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0c1fa78242effd9a52509733125701b417dbc4" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a1d37736374771d753210618df39f78bda4628" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c7de514e358d9f580cc4afdc5acdbc63940904" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89291c69aa0081e0ad021d45c65af8f9bb1dbfca" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f6656275cc81611cbdcba7d286fde19c123623" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c557d0cea760511a3623cdc9350553757bcc00a" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1628584c82b6f421de9ca31b0b825b08d85da285" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da61bb0d8d981332716df1bb00e2eecd03f643ce" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ea1b1ecbf6babc3ea4545d58a1c68f0f71e57f" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3cb8cab5786291f69b953ae50f6feb9a4bbe3b" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b51a92b3dfe42500a04688e43f88ad2ed19dc0" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdeeadbbe05beb481ab6019170c3a8823bea1327" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d62461de718558c98fa7d37ad58a82ffd67d1f5" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf1e7ee9314145deb30e3eda41bf5b0d623d721" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c61b9158373dd6b80c8d83505980df7255db80" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0428217374f6c68b0c686b568a0e8ed527602c75" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f69b331a0fbd7ddf18d12fd7c40adf825be2cc" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c5d39cc4d310cdf067872d38d8349c92b38a40" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b240a5aad03b189b159eb681ad0613c18394f6" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71590f257a7126c87202332f4ccc0eaa04a5497" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6538957e59a2f60ccfad069ad42a8c5ecc604e80" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e285a945d1181d1e334d1726faed10478ae1c61f" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a978beb3bc7bdfee045b0c79e6f7a4adc088d2b1" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b734e6cb1ab755b58b6234f2a7789a0f060fa326" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a1fb1b040b9a414dcf4c67693c5032512e36ff" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9836f33c3adcfb48446bd78f155c787b3d89b3dd" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da370afb785f9d89d489299308ee296b89f7750" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0380832d5822287bfc24454cab12b72add03a38e" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2eb3334da992edb96ece23eb5ca8bd9b955ea04" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3e45bbdf92437b14e11fa7c93e23c624b6eff2" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df75e4ab92fe5f51b7a8a31ff523b3ec9147c8d2" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e256fb565b1dcfda190a30633b932d83a67810ef" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299d5f42f1836386486e085cf272024dade51eba" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1059532b189129929b80a524548d07dbbd36f1" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfaf729d40238b5a9a91dff8a761d2559c2816f" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386336e1e32c61ef807c0f4d5a4e3322d49f952b" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05cd0f13989fce84e715ada76763d052a468970" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe4d2e439a85b0abdac3075a1b490dd515c1716" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff7e41875c381dfc595fd37057b4cfac2c6f5ba" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008806531f7b59e91c7756c6c561634c6f6638c7" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cda4764728e1b0f567b3ad1340c64cc387cbe9" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51257f6a9b3a51a7ba00aedbf83868bec0720aa" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0db6c7272ea157d446c8a70f567623cba27632" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8736457ad490973ed387bdcd77d342b4aacb710e" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eaf722527d96fae90016521df4079c4921d91c8" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9724fdeff8cc1ed3492be82b173ec49d8856da39" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833ec276990c96e1293c7709b1026b24df60657d" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bb7ab31d373256c58bbbcd032b96eece114d89" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30381634b26a9d5e2334f7d3d2230c5c4b169244" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c670c325b56d8e068a69962326b3eb8725e977" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53017fe533caf365aa6e237d07e68219165b26b" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725edb89949df8d7e17ffc49ae80b9bc0a75db1e" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d817eaae3c2a81e8b2ae469c1364eccfde346f44" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fceb76569492784ba44e64f1151e9d95651ae521" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d65e96c168257c1cb07129f7192ff8ae431ee31" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a230c1e245149c30a20800389a86122e5206f558" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbc7ea4550c7025181bb0d464fb1d044fe70585" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c5f9024466831c30bc3701aaef6cbb841e8de6" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25261ba594af42603d43050efd933f5dc9917d4" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c472dd4eeddafee442e0d21c5ccc14f79fdc39" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625d12c22b43d49df0385e409cac7e3ec472d953" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa8884579e4b08c2120ce3c5e0661f0bf62f794" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b5232fcfdde29d2bfd51369c38c3191d664977" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144eee628fa3c698abe00fb0d41f9e8bb6df627a" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c240b3f51e7b15260cd26ca8a8b01478b00f243" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850bc552bf0fef419d71c760ea417ba3ad3e3f50" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1029247640126743ab37715bd819a13e14fdff2" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99ebce38394d60fe69ed6d2143835629628ead2" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e693d4b0d73b36e99cb7b6be00b876eddbc16c0" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5073fc8097211c8ab628a5d9aee2fb629dce5f5" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4ea64ba71c7dced87710d602cc9004a8d1ac2e" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d91743b644527fd7a61c049303d08261faae033" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b42f7f50a1c105a87ac089246f76c5cade0cd86" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f219146c78efff57495404a9fbc0a2a4ea93d4d" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d2ecce4f80f90a8d23c823dd0148c435246dcb" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3938909d0116783179ade77aaa8ebb804b4cabe" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89563c7bfd29bd2c5ce7404b260e191c62d92c83" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6229eca9de20f175019f7343e14235f988e89b18" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5990dd70b875dc6edf515810881ab28886de32" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt; to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea93859c2fd6284a52db8f896ec89bd4688583e0" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69702cb25a14e0cb4502baf27ea606f6c9c189c7" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b978867d912112f6b852fa24f071922d1add5534" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42219b08bc1bf29aaeec269b650a06fbb2beacd1" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3a6d13dadc16bd8e512f64893577c4d00dae48" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9aaab52afb860d76190e5a534bad01089b4189" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4db8f939ccd6603448ddaa31dc74ad6e2ef7d6" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ea58b7619d2d156c91f70b624fd98749f70c15" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ecaacd1f215e7a680e095700fc69e0bf2eef68" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe8cb704567b8b15ceb163f47311c6ec3ef0deb" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd77be2eee620c8c2e813b26b89aa47cafb703f0" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41a385b8a12e0086eed4db5c745184e7d779ece" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7591d2dbbdd82e77149876f11470e98b62590e96" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf8bd0deedab387adfe355684e820afc17f89e0" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d669d1d24a8ff069499a5c767e5b8f102f4573" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282a62b8c888619571fbaff6393d174ef38b3f62" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef8af93a326483b6b14da696392c5371500e9ec" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3231e7c3c65a48379819722aa6ef7979744aa611" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82efb6648c316f29eecd44a8238715fb9acb89c6" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c664a0a7a14c18066cc6a3d87b536d182f82dfb" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0e1f3117007f45f8ed6e4c722fcc5a76b93633" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b508b2357fca7731c967a21afd4bf47b0dc057" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268735924a36c78db8692a31112997b9f5511a68" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b83683438ace2e052c27718d1a81153a7edbf9" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf1cff8e885128551d8dd18b0ec56320687aeb8" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea4fba17e9f60f7c84992da439d35d15b987af8" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740e019974b373de152028a4b2edbd2bcca44b3e" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817ac4a6b32e1edadc3c503e6cf353e6fbabfbdf" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63b2fb2e9fd3a48c5584e64a396b221ecb4dcba" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72385751ad6d5ec6eec200756f74875498829a84" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9275ff6c0930d9ecf8b8c898ff4a89624aa655" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f414e51b40926830477e346053d78b9f1f81c5" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0983c0ad1673e604053e638b7526767467ed2ee" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33713cf05c05b53784838cb33115f59f9275306" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946a7274e4e8afd1a472b6b87ea1ab6367c41878" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e7d0cb78c5689c2ea0356bf8fc551540b5c85b" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e702eeb846c2aa8e52c1509d6f41df89bf1c5907" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c85063accd7248194a496483ec1fd60f26b54f1" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a576bad3a3ba598c23a9cc254365360bc2151dcb" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d47bdbf947fed197d84b7e505dd08cbcadd27f" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184c76454b081a35d1f11c17e3a1f81fbb9fe7ca" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687e6480d92e28f2320cbaf9ad739444ac2f490f" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75678e94fd2121e4849105c95138f82f9e8cf22" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f334829e4d6ac7c21d55f76a24a19aa807c102" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9accf2eeb65c659888a94916bf412d9652d98179" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9da623685e451db59a9b0644b5daf447b8e630" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eeea6a78dd98237b009c1ca25b839fb0de4c925" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82b1a8c9a234a06e82ee2fbdad13a00c20fdb76" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301ac71cedf6bee6d8a1c44990d41021f13dbac4" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;) to&lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops&quot;&gt;Ops&lt;/span&gt;[&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;] performed by method tuple2ToZippedOps in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fc7d05a6d2a21c810d4426417885efbaa16f8e" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64a239ceb3c0284b3a790ebe71811cf18f0f727" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e5427e989233ce39eefeabb96b9f5314c5fe6d" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f099cdc849e16367f51c609cb11fa80cf26def8" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a81757bd13643b52de6933847e59e352b4dd781" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0574ebf93d443636e2df427a19b269dfa0d158bb" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68de512abfb03ddd58fd059fcc2ac329a80b0fbc" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f63693f951001086b3294094fbdd6b4e6dd9f3c" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd91e26220cccbbec039db16a2215d9de388fe8" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c3f79cb1661d43e5a527148fe0dd266927cf2e" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d171235f8daaa99fe53afa0371af97a055571792" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105215fbb6b99b3d37e4f99d1fbe77c958fc071a" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2ede12996dc28a50887908a1a030fa33a03d14" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd63775de1231a9afdbe00a315882a8c24136e48" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf8138d29d28075fd5dd62f45e84dfdb75cf2d4" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168639c66d975d45dd5ed65e29d93ee16a98e6d7" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4828716d584dca80f4f45d0008951943fe9068ae" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;) to&lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops&quot;&gt;Ops&lt;/span&gt;[&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;] performed by method tuple3ToZippedOps in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f84cf8a3a12c1a8d237b94b13306df7289114d" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7468952bd203ea047d082e3473968b79bb841a" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18632cd9802a6b3ab9a6bb6d09b78b9cfc343d60" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb1ad9d0d72e879f69730e5e8826c88431d2c8a" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd89e61ff5f9825677f89472fe9bdae15bdfc88" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e9b9c9f995cc892a4a52ce9d8bcdf4242157c4" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d138a1a76239bfd35e961e138b5ff68f5800c7" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da85335547d6915db7dbc6fd0619fa43f5ee98e7" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d58a7cc71e17b95ae3cbe5c1c2274f0ea7018e" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd5e2afdd2adefab256001d43f4c028e254a2cd" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ae30c02896f4d8d5bbec40343ecf4051a58b25" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f0dcf8613ca68a5c9013670d65b57e1cedd000" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815f2bc8a06ac4fe392d20aae0f0a2048ee78e25" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72404cf72a24c013a82ccf8bd7aa9e7a63eeb152" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e8202b7e6a3eaf0b6688b44f46cdbc89bb5bee" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baeacfa72600b941972ac78197c4a458476971f3" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35125502b56ba355068a0a44c131a8c4df7a7e4" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9f4a7c1e5f4a93a3ccb3b0debda9fad51057a8" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2566766631e504fcddf178fa0bcef88aa7748f9" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7489d1f86854149ba586188a6f18b2912aa47e6d" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdfe6ee7215e2efabe460f21fafad8151061f8d" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;) to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea99883b9611f5486b3bca71db01109cb3170405" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;) to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beecb2166b8b4d2dc8f4fd05651fc43b86579596" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;) to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70417947699f51d788785b9a80b57aa879889aa5" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from (&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;) to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[(&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b143a98352dc13a763630c676f8f1671dfc5e1" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;] performed by method UnliftOps in &lt;a href=&quot;../../function1%24&quot; id=&quot;scala.Function1&quot; name=&quot;scala.Function1&quot;&gt;scala.Function1&lt;/a&gt;.This conversion will take place only if A is a subclass of Option[B] (A &amp;lt;: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19c0a469de0b604ea810a341f3dcf9606c09693" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]] performed by method any2stringadd in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d52e8f2d80c6ac93d367daa944da7c76470eb58" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]] performed by method ArrowAssoc in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.This conversion will take place only if A is a subclass of Option[Nothing] (A &amp;lt;: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bffa0112210a19acfead6138c4561b46d5b1d84" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[&lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]] performed by method Ensuring in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794341d4c2f4e90cfc9b6543c3decaae8cdc9a3c" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]] performed by method StringFormat in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e5ebfeedbaca0ee978ac36fb0716a0eccff7d7" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;] performed by method UnliftOps in &lt;a href=&quot;function1%24&quot; id=&quot;scala.Function1&quot; name=&quot;scala.Function1&quot;&gt;scala.Function1&lt;/a&gt;.This conversion will take place only if To is a subclass of Option[B] (To &amp;lt;: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b76c7da1e32fbb655b7b4c956e08e004b297860" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a3a1af84bacad6b55a0e9e2c8dc6bb9b4c82f3" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.This conversion will take place only if To is a subclass of Option[Nothing] (To &amp;lt;: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa4e110e85a0f44c027afefa39bb2462199acb6" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[&lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494ec11bf9f5fa66e985276b446bc1f59f16f77a" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39d8fda8bef7684c9ec202cf3444e80f69eb08d" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;] performed by method UnliftOps in &lt;a href=&quot;function1%24&quot; id=&quot;scala.Function1&quot; name=&quot;scala.Function1&quot;&gt;scala.Function1&lt;/a&gt;.This conversion will take place only if To is a subclass of Option[B] (To &amp;lt;: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32c93e044dc641c4624656751b99fe430ce94f1" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]] performed by method any2stringadd in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34b82acdad0ae20229a9fd9f55bf3fef6025530" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]] performed by method ArrowAssoc in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.This conversion will take place only if To is a subclass of Option[Nothing] (To &amp;lt;: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc9d16f212b5e61907bf211aa0f9afc4b193b1c" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]] performed by method Ensuring in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea7d83b9fac09e91d4a28a5ee7f6c9ce099444d" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;] to&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]] performed by method StringFormat in &lt;a href=&quot;predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c9f0f8e9bf6f10191b08e9642f9b723af9e820" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;] performed by method UnliftOps in &lt;a href=&quot;../../function1%24&quot; id=&quot;scala.Function1&quot; name=&quot;scala.Function1&quot;&gt;scala.Function1&lt;/a&gt;.This conversion will take place only if A is a subclass of Option[B] (A &amp;lt;: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750e4eb957e03b54b7955b34c502ad14b22c6f2e" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]] performed by method any2stringadd in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bc0ac48d1864bb9ae08c8bb57635bd9f88f47b" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]] performed by method ArrowAssoc in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.This conversion will take place only if A is a subclass of Option[Nothing] (A &amp;lt;: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c1ebea1095368dcbf0fbfc8234d6386c4319b9" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[&lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]] performed by method Ensuring in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d98ff4e2b486a5908814a442cc663d1408fbbf" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]] performed by method StringFormat in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64c3c81af945c0bfe17f982177cc50c217961fc" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]] performed by method any2stringadd in &lt;a href=&quot;../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958ce529f6aebd6c651fa0a18a5174baf5a34d65" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]] performed by method ArrowAssoc in &lt;a href=&quot;../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc36d4ac92317d7fa301cb1380c07cd764b0f831" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[&lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]] performed by method Ensuring in &lt;a href=&quot;../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5cca4addb2daf7b66380926b17b51d72f06210" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]] performed by method StringFormat in &lt;a href=&quot;../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556b837363ab7309860b72a8f7530cea828dd2f5" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]] performed by method any2stringadd in &lt;a href=&quot;../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4db793de88b9dbfefb7d94d25ca2d57916427b5" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]] performed by method ArrowAssoc in &lt;a href=&quot;../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c504ac36995e23fe802288eeed33a707caa14a" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]] performed by method Ensuring in &lt;a href=&quot;../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d02ac5bbcdbb32290385d099ea874ed9489fba6" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]] performed by method StringFormat in &lt;a href=&quot;../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe79e3a9e3f63d784099aa7164dcc9d5819aca1" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]] performed by method any2stringadd in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452e13d504e6b1af05395a590d6aa423934038aa" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]] performed by method ArrowAssoc in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5879659a7ce45257f78c3e0673cba293b09a82b7" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24ensuring&quot; id=&quot;scala.Predef.Ensuring&quot; name=&quot;scala.Predef.Ensuring&quot;&gt;Ensuring&lt;/a&gt;[&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]] performed by method Ensuring in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951e57daa932bd25ae8194e435990d4b1ef49c72" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../../predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]] performed by method StringFormat in &lt;a href=&quot;../../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588b8300a678a22993714d578850a5a173ba5894" translate="yes" xml:space="preserve">
          <source>This member is added by an implicit conversion from &lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;] to&lt;a href=&quot;../predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]] performed by method any2stringadd in &lt;a href=&quot;../predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;scala.Predef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
