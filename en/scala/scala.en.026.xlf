<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="dac5887edc890380fb543b1bb03f45ded08d23ee" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf37aa3edf9d9a5bcfd3551e0f042edc284ae8c" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205f176ab4962f8409304cbf95ec027a20866fcb" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f1066f22ce2915ffc21a8bf8a980193f83e3ac" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a891edf008f0d0bdfc924f5b4986c29e5b72e99" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e0b2271178abcb08385af4365f3f9a40ff1384" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9800e47c829b3369c4635cc3ae79ff591968bec2" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45666290e197a0626a198c418747fd75bd32c4f4" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9467057a018a0e3addce8135874764e9e6c9dc" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857e5669c6ba35824de2d339b227facf0170c945" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fcce5014747f758fcf3ca0376f9041630c7bd3" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd4966451ecd4e0daed7e0ae437c1be4a0a35ad" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88348f61d08dd84fdf983fd51ae820585960cb40" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498c47baec912252ca23fe45d41e13fea221f1b9" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0706283103cba1354782974019ff4352400bdd5" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb2d087f326186aed6390f71897cf4cd1fa006c" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5badd6c5decb37e0ddc8a6a206e674c96b2f64f" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5348aee868f3abb149e0393d8d42c7d4721a8747" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e324b27e881bec4057a78fd4405fa47f221c72ec" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccd2a01b86226c4e121d7fe2db336dafb65d716" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e563ee4b1498efc9928a3fb270f149b0c7b2e55d" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be487474aeffc57328600c7707a3d0bc62834fa0" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc825cc0bfe08d5c05b5b2938cb67034dfc031f" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32659ba87f9c457c4a90d0811bad213aecbc1980" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9180cf37cd8e1aa012d7df85a51cbd7276b567" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4babff8645b8a1a751e0da80f9c4548af896f62c" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1aee96c69995cac8945121f1e22f53b2b5526b3" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713c9f77a9608770f5ef3a5fb3d5aeefd68245d5" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9e446462f8b64d1d36a11688b65b4d6bafdd8c" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b5813d6223303b1dd6dc4f72609a6bc486d18a" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed4f89c9ba31ac62f6daabad021b97b1920eba5" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f8d5449e0855d752093337e3a6effe81572c58" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55eabd52ffe9026dd065a4deb111dc0a2ee03c9" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144f55924ff07b6e6c7b9179924dbafb390be5dc" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569f7aaad0d3ca9f04ca73ee4b742b2010e39911" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740b6d0fa266d76bc09a4703992dcafea84cec87" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec38917b7820418268306fc1c069d66beaa3f110" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37485a2720667b4ffbe5b85152a1e3f87a19967c" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a85c8cd5d71808e9d4e7dd80d6f4fd3f0217b1" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e2dbb99ca6ed20554a192866dcc86078066168" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728bc9e5f1b444ea01ef78088d2ee49fa4931936" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b978a93c329247faeb77500bdd311c0a2f51470b" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4d635fd9774c4f9eac97eab9decac50033aa46" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da51e20b39f2d24bdf1acabbeb56f081e1f1f78c" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b885996191c86f78a60d509cbafd71fe26b49a7" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed5e74be867dce962dc12235ff4c604e3f3fa85" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c060e856308699715b597888dc8735f92cdb207" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806cb00c5a3815112b267d7d1392eee89df8e8d1" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dff20cdc611a53c67cfd395f095a3a13064f768" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a6391f2362b59add8be21265e1adf316201ba1" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8626caa210351c96f0d5bdb40a30d100212a1c3b" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd8d0abb712ea5a35e2cda2f6718e61f4b6c5e2" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cad00c7cb58f5a1f7e978858de4ff73771bc4d" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnce.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74dd1dd8200581768e5bfd564c70d2afc41a59f" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5399921dd531fdb7c8f8b554e5ffba9e34a186f" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bd4a6accac1d533b0d7bd9af93d29bc2c46029" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67e9bfaa6bcda51e3e32a3954ff134d818142ba" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9965252fb927515f45444aca87974c5c569c3524" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec972748965859f2223001ffb70e35e9f0c8c821" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c63b6935a36f38f2606cb181e856c767fc5dca" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddf410a8feb1b455d1842697c7eb291ce7a73aa" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099f3c4a07d4ab29df9ad30c7d9b080c16cbb9fd" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f981444223a9e80421f58e659bf9a00eae37b54a" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ac24effc6fd9915db2689d7cfeec52fe0fbc06" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2340ba87ce3a7e4f5a93afd0bc69eeead903114" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac414edbd1d49986086db04150f421c1515696b" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3516baf6464fd439020fe28c9e24792d5bcbc43" translate="yes" xml:space="preserve">
          <source>abstract def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6c3e977b8f4c57eeccc0e2773126b82f47d00f" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670826277254cbb91c0eba02c9ee50c18a2c3d63" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93e35de1ee237d9c9bb75f61ca4dfb55d6c2362" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a99aad088dd001538699a56da3898c288b31f13" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3790e3aead43eacfd50dce94e5f5291741736c" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a472a8f0e186738c1ee65ab7d0e4f2c98a22a593" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc229ae30b7d1daa69694238c7a3ffba319c80c4" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec6cc82cd43dacd689466c2d804e7d7c7fec9e4" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e15fa251b1582af465f8b06022f7efe63b1ea55" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7290d22ce569a9e8a498e0ad5a5a0b76a268bda5" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c470b33c180eba35b5a97d8f3f035481a9dc67b" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a66125b7e19164acf23cbd4596838db63c3221" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b1fabf5bf95bb6c40470d9d92c260cc838df64" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73db261653e38517b2bd83ffe982e08690c73f15" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f751c209c1a948438811f9adf10afd0d1ef009" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19dbfc40349982656d0f8052ea2652f63da47c2" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5103bef19d70ea5acde1a21afe1af97e2fdc97a3" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8a805f736060bbcbcca62921e25852fc09f04c" translate="yes" xml:space="preserve">
          <source>abstract def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: A @scala.annotation.unchecked.uncheckedVariance&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeef06fd9b0a656f61adf5ac31e042d871c7178f" translate="yes" xml:space="preserve">
          <source>abstract def javaIterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[_]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd996e17535487441385ef486bced3e91ae8358" translate="yes" xml:space="preserve">
          <source>abstract def key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb1ce608be00ea984908961acf04f1efbd682bf" translate="yes" xml:space="preserve">
          <source>abstract def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0235a63c9e9230c3531c8c1e743afb0bdcf135dc" translate="yes" xml:space="preserve">
          <source>abstract def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815236b77145610f2c9ea6104d7ad203a7ec6761" translate="yes" xml:space="preserve">
          <source>abstract def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986f5ec378f0e7408492bdcfd52a4bc337b13f37" translate="yes" xml:space="preserve">
          <source>abstract def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dc45cebc6ae1a8be5ffaa5988cf1e06e375327" translate="yes" xml:space="preserve">
          <source>abstract def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640076cf008153418302e0eb7d6d6fa2df59afa5" translate="yes" xml:space="preserve">
          <source>abstract def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966708ccf9504ca7e48bfb360e6bcfe7de6aee42" translate="yes" xml:space="preserve">
          <source>abstract def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb3bff7ffdf83b1ea7bf894d26f2b41fea1cf84" translate="yes" xml:space="preserve">
          <source>abstract def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d14ec89b45ebcf932ad9fd08adf9e536e8d62f" translate="yes" xml:space="preserve">
          <source>abstract def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fc485845cd9d1eb17f884b9f41a833e9afd2c3" translate="yes" xml:space="preserve">
          <source>abstract def klone(): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cb9fd1c30d988a41edc5df9ad385c77cd7523b" translate="yes" xml:space="preserve">
          <source>abstract def lastKey: &lt;span name=&quot;scala.collection.SortedOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee3b9557269720f084f0d8edc85cf37c1097e9c" translate="yes" xml:space="preserve">
          <source>abstract def lazyLines(&lt;span name=&quot;capacity&quot;&gt;capacity: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0788dd18c2ce516ca0584801cd13304728fa8206" translate="yes" xml:space="preserve">
          <source>abstract def lazyLines(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e2e04f0dc2fe4c41d618d781e063ea5870fe56" translate="yes" xml:space="preserve">
          <source>abstract def lazyLines(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;capacity&quot;&gt;capacity: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993eb57b89f7466834a1423217ce241102d951e9" translate="yes" xml:space="preserve">
          <source>abstract def lazyLines: &lt;a href=&quot;../../index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bdc4be040e2286b26fe03e36c952d7eb2b9610" translate="yes" xml:space="preserve">
          <source>abstract def lazyLines_!(&lt;span name=&quot;capacity&quot;&gt;capacity: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ba88fa158837c1309e80d10a64dd88d5c08194" translate="yes" xml:space="preserve">
          <source>abstract def lazyLines_!(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e21340614a0c6394e6cbd6bffdcb538bfc8f14c" translate="yes" xml:space="preserve">
          <source>abstract def lazyLines_!(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;capacity&quot;&gt;capacity: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f0a56dc1dc9c8da19c11e5e8adc9e9fb0346bc" translate="yes" xml:space="preserve">
          <source>abstract def lazyLines_!: &lt;a href=&quot;../../index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf2ad43c1e3c006338374b51a88b0a11a62038f" translate="yes" xml:space="preserve">
          <source>abstract def length: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d4e38e6ddd21cbe57cddf335ee522124c22cf2" translate="yes" xml:space="preserve">
          <source>abstract def length: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a391a1783124c9014539375b734b953f9b6c0831" translate="yes" xml:space="preserve">
          <source>abstract def length: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cb4ea8c3e88dda9cb4f4d7adb142247373f53b" translate="yes" xml:space="preserve">
          <source>abstract def lineStream(&lt;span name=&quot;capacity&quot;&gt;capacity: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdfc73ffaedcb9ac69281d5525dd8285039724e1" translate="yes" xml:space="preserve">
          <source>abstract def lineStream(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0386ece95f9e1c49f191b2251e6a9701af3d5546" translate="yes" xml:space="preserve">
          <source>abstract def lineStream(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;capacity&quot;&gt;capacity: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbd9426c7b889b33e59ce805494b3c68f83abf4" translate="yes" xml:space="preserve">
          <source>abstract def lineStream: &lt;a href=&quot;../../index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16af825b469a65e8e416cbb536efd3d5506069ed" translate="yes" xml:space="preserve">
          <source>abstract def lineStream_!(&lt;span name=&quot;capacity&quot;&gt;capacity: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5752a73219ce711978b5bb5e30c54287e70c80b2" translate="yes" xml:space="preserve">
          <source>abstract def lineStream_!(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b87065c67a3cebef4068571c07b34cd29b54bf" translate="yes" xml:space="preserve">
          <source>abstract def lineStream_!(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;capacity&quot;&gt;capacity: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d401e86f60faf69af7519f3a9d2e5c9172b7c385" translate="yes" xml:space="preserve">
          <source>abstract def lineStream_!: &lt;a href=&quot;../../index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b97c2d7676715c34f09d1f2a2aad61b3843ef4" translate="yes" xml:space="preserve">
          <source>abstract def longValue: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93a6ad8b79f89a91b877bfcacfb9faaaccfcdee" translate="yes" xml:space="preserve">
          <source>abstract def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c707f457b146f01b26e69aa9f4b6e6604536999" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78552ed8fd8cf48cdcadac063467dbf65d593e0" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4377d0d6161c6aaede7f2f972fe51e4187e2720b" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2dfb9ea4305d9c9755b831e01fb02d80e72ea47" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[[_, _]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.CC._&quot;&gt;_&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ebea4c9a7f21f6640f98583769011880199cde" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[[_, _]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.CC._&quot;&gt;_&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9678e2070780405c9c51d32e1b97a135e9e65169" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85cad0b9b9ed3af9ae41435dba129fdb687df326" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526068c67ee65fc0ef04849fa5c41a08dcd100bc" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9873b488ff48049de34967d06f2a73ef758bec" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25d407129dd199a24deea0ceba14a6b09a259f6" translate="yes" xml:space="preserve">
          <source>abstract def mapFactory: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[[_, _]&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.CC._&quot;&gt;_&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6f179621b65629d961f4e8ec478c6fa74d74c4" translate="yes" xml:space="preserve">
          <source>abstract def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c273c2f71936c8f311dc78140e806e06aec1c78" translate="yes" xml:space="preserve">
          <source>abstract def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.WithFilter.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.WithFilter.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9c97cedde70e7d12b263aef436ab2f9f3c9186" translate="yes" xml:space="preserve">
          <source>abstract def map[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Try.map.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.map.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9fb0563b2edb96e34cb2983e0c223dc115f2d7" translate="yes" xml:space="preserve">
          <source>abstract def matcher: &lt;span name=&quot;java.util.regex.Matcher&quot;&gt;Matcher&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb3aba6beb449b393e8552c3abb7f55e6d7b92d" translate="yes" xml:space="preserve">
          <source>abstract def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd8f87e5a913a54f7a421e378445cd157153303" translate="yes" xml:space="preserve">
          <source>abstract def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c355d72a489bdb993047f76bcfbabf60b7269a4e" translate="yes" xml:space="preserve">
          <source>abstract def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef8087dfe6560eee4b4e93cc6b4281e09b98ba7" translate="yes" xml:space="preserve">
          <source>abstract def mkStream(&lt;span name=&quot;st&quot;&gt;st: &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.St&quot;&gt;St&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;par&quot;&gt;par: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0e92346bb5192050e10b1a1edd363022740c58" translate="yes" xml:space="preserve">
          <source>abstract def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffa5033717a65f5aa1a1118af739c4c8eb21519" translate="yes" xml:space="preserve">
          <source>abstract def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12bcc4a287089209e6e9bb701f1b64cbf9ad28cd" translate="yes" xml:space="preserve">
          <source>abstract def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f995880b5ca3b4ce86ea8e24dbcf2c4c718ec1" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder(&lt;span name=&quot;from&quot;&gt;from: &lt;span name=&quot;scala.collection.BuildFrom.From&quot;&gt;From&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452fb6d722453f02136c8d3dff96831c6e0a593f" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.Factory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Factory.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de1a4558bd9bae046ddaf7cc4532f6f6657597f" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a626c89d2fdea790cb6b40e812d214b5dbd7f8c2" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d96f26fc70f03d8c42ffc6b75b6ead7477bc1bd" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e7784746e8869bc0829e3196f45acc459f6f2e" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ccab0eed7890563c110726b8fa3861f65a2f1a" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aa99b1561e173fc1cce631409ff22128f25085" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a7c879990b667343cf60b24b6cdb589cd1fdaa" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9becdc5fed6f928423e6c62b27c4f4a3bea176f9" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791a0dca85904ef56eb032eb60b3a15c9aab9478" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65e67d265b040e22ac5663b28670693c657d7fa" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.newBuilder.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.SortedMapFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dfcbd0d31c36aa4a7ae4fed767ad7cc771e86c" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.MapFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactory.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc2c61531837d99553a0f183459dddb159574a6" translate="yes" xml:space="preserve">
          <source>abstract def newBuilder[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapViewFactory.newBuilder.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapViewFactory.newBuilder.Y&quot;&gt;Y&lt;/span&gt;), &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapViewFactory.newBuilder.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapViewFactory.newBuilder.Y&quot;&gt;Y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b66c19db2bab2616f66df48d0f352f53ce384e" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc1ee6d92eced10b9103d1765bbf1d4e6a1fb82" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500c5218161b7edb6decd08061f2e18752b13e30" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f110aef3614c7588f2d311851d2ad87864113ed7" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e92a4628ecfd297f615df1a65d5b61a1f6027a" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e1f556a4200eb9bb3bc7915942f422c880bdf2" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b55e0bbefb5db35aac6ba5729d1acb3b38af1ea" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9261c3cbf440d0432f2fdcd7951c7dd4e1632bac" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed0cf849871105d9ad2d8fbc21aa3e4d966cafa" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddbe117fa9d0db642bf70ebbdc7072b4a0bc98e" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ee0162ad208eb72fa5d4bab56b6ba5c442fabb" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9af3977d117fb2eb60d36c03625a9d6da319196" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574e0ee7d2270bf8d4583d4abb33794617736545" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26478047e38d7b22c61c7b6c1b952344ff7f246d" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd30cbbd650c7473317def4dee8e4429927d5ec7" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f390de3a861c06f3102e33e40958fd3ee0da35c1" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28239fc031138fd70e560931151e6663d24d846" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0200cdaf88f7c92bbde595a05725a83e8b375c85" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff5396de93c50851f8a59ad74cc8c5ffc76becc" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751befb9cdac2fce0df05e2d1de1df8706e9a1e6" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f44763a39279cbdc523e7dd448759be680a237" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85624ed0b83ad298d4ecaa7f6695fe92db8a931e" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034452e4f715cbf3f778c409924cd06bb804be61" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9eed0298dc260b6205a08c5c8744f084f58d1fa" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f684581bb4ed8b2d06b67317e98ae7635158583e" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62eb0566fdaf678661bc21f8ca86dd438996c4f" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3554b0f4cbe83456920d86404a89f9b80e078d" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd41d4f0cf9721cca4f0ef6a9927051e82d8489" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bf47f727232d53218bcdad6a862e8cc9a311bf" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0be278fc8f58811e232d7e8fc39906cd8d3cb8f" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0942f0916a9a83d0bf5d7f1ed95b25d027ad8e24" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac6b98fd252f50927be96b3f63497bae2d7d7ef" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1c8fc2b200dc7369eed1bd2085d1c272a0e783" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f3ccd42e6060dcc3d6633784c2a6fad5b24252" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a574493b80c7f9168edb063b7a7405cdffd55f15" translate="yes" xml:space="preserve">
          <source>abstract def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2e9ad550fe4dbc2b2a9b1337a6533dfa610cae" translate="yes" xml:space="preserve">
          <source>abstract def next(): &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5214ce7805a642143196cbdb3afc0a7d471e8d3c" translate="yes" xml:space="preserve">
          <source>abstract def next(): &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3310a1539a26f19e11fbb47a846a9ccd4dce87af" translate="yes" xml:space="preserve">
          <source>abstract def next(): &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8f4d7bdd32eed28a1416aeb1b50974de489105" translate="yes" xml:space="preserve">
          <source>abstract def nextStep(): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc02beb125389b073f78c7ee1947d193a990af72" translate="yes" xml:space="preserve">
          <source>abstract def nextStep(): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f57c791263ebdde91c994ceadf64b32268a1c62" translate="yes" xml:space="preserve">
          <source>abstract def nextStep(): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ca8f1a2a638f0c8e44fe595abb434ce329a11a" translate="yes" xml:space="preserve">
          <source>abstract def nextStep(): &lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c14b91cdd06f5a59a280636e071fff30bf8ed08" translate="yes" xml:space="preserve">
          <source>abstract def nextStep(): &lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad02ad4ce44fc5c5399016161b7769cd35cec22" translate="yes" xml:space="preserve">
          <source>abstract def nwords: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088be84bc5aa869c4ada6665ddc8e94b8ef6e93d" translate="yes" xml:space="preserve">
          <source>abstract def nwords: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b0daf5a40aa24303e6c3426fcc1f147054644f" translate="yes" xml:space="preserve">
          <source>abstract def ofArray(&lt;span name=&quot;array&quot;&gt;array: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8334e6460cbe8f016f55b4e443709e7189a60e60" translate="yes" xml:space="preserve">
          <source>abstract def onComplete[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.onComplete.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51cfcf799851d67bf0c7cca4ea5bd3e55f7f5b1" translate="yes" xml:space="preserve">
          <source>abstract def option: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd876bb01fd351bbcb78e2bca521f7b577ea82f9" translate="yes" xml:space="preserve">
          <source>abstract def option: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45dd45d1e90c252cbfd0ec63ba204217fd6c341f" translate="yes" xml:space="preserve">
          <source>abstract def optionOrdering: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45c66fdf567f704e20e2b88a1dcc3ad51dffbef" translate="yes" xml:space="preserve">
          <source>abstract def orElse[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;default&quot;&gt;default: =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.orElse.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.orElse.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c44beccac6fddb397033fed3139aff5cc52987" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791350007d11ffe91b31bdca9e49ea7bd6e9a6ed" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c241cbd253771512ce949de3aafad84993b58e" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93f0da39369e5e3b2ea1b4c7894ab475ef325ca" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f803774eeac1e1974d5339c5dcbdb8f7467f87" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c556e9ab4870a98090f3ffe9047ed24fa3be23" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87d90090a368ff87aeb4b742331d91414630e84" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658335286f05409f46003d7c2092d66f5db3025f" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b21d3ab261c1ec1e5f63274f46a1c21b81cee9" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9789f43ffee398a6a1fdca503a939c9580ad128c" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbca08f8fc26f628cfa11c8f0f9ee288f05ebc5" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003e551dc652ae98cf6c1431fa48589c852ef925" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91c0dafe7d33603b142ec19db710a277864ee3c" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b15ab371cc7d01eec5f343caf9154bda3653aa6" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc94d9400add86e4c0072e1969d7f795bee7130" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac688776b251179feaa9acf3d1334e9e556bb0bf" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5c21ef1479f4d4cce06079ae123cf69a38dd20" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af04f64ba6a7e7c4e83838c14c7c52fc81ceada2" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904e559e82cb59213b339a2d6aea052072ac800a" translate="yes" xml:space="preserve">
          <source>abstract def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bc369aefa5c3fdcf55ca9f09ad402bcb23e2c8" translate="yes" xml:space="preserve">
          <source>abstract def out(&lt;span name=&quot;s&quot;&gt;s: =&amp;gt; &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0046b03c29efac4a96e68b036910c46c9cf10675" translate="yes" xml:space="preserve">
          <source>abstract def parUnbox(&lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShape.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StepperShape.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77b6cf1256eef319ecc00af433b702d3086fbf5" translate="yes" xml:space="preserve">
          <source>abstract def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df51c11aabba2bec4293ece6829670dddf3bee00" translate="yes" xml:space="preserve">
          <source>abstract def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7dfd72f645b1b2f74b57e9974c6500cd8214ed" translate="yes" xml:space="preserve">
          <source>abstract def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed92fb47aadad017710aba1a631cb88a45102e4" translate="yes" xml:space="preserve">
          <source>abstract def patchInPlace(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;patch&quot;&gt;patch: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;replaced&quot;&gt;replaced: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e801c1e094fcb430202684d4ec7e50d5970ec0a" translate="yes" xml:space="preserve">
          <source>abstract def patchInPlace(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;patch&quot;&gt;patch: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;replaced&quot;&gt;replaced: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c041b76aa9c866bf7367c23ab0ee0dfdf95e26ac" translate="yes" xml:space="preserve">
          <source>abstract def plus(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f9a2ae355386d8a845d73a2fcca2e4cd53ced3" translate="yes" xml:space="preserve">
          <source>abstract def plus(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d601606500ae8d35d1a076437f3301540c249d" translate="yes" xml:space="preserve">
          <source>abstract def plus(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1dfbf45c9444ebc77d7a5c3c3092726f76d3ac" translate="yes" xml:space="preserve">
          <source>abstract def prepend(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e816970489c7ca04b7ff72ea2fb5da568a2ec3" translate="yes" xml:space="preserve">
          <source>abstract def prepend(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd020104dc3a46f599acd9c907a1c1eee8de402" translate="yes" xml:space="preserve">
          <source>abstract def prepend(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d5a6279fb8234044dea474efea7cbeea8b2476" translate="yes" xml:space="preserve">
          <source>abstract def productArity: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90608563a64616d4ece78697c93a54b131fe59dd" translate="yes" xml:space="preserve">
          <source>abstract def productArity: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192f99e63a208f48cb7ffb049703475c7c9274fa" translate="yes" xml:space="preserve">
          <source>abstract def productElement(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f206ee0574ac357e1300becc69c6701444dc15" translate="yes" xml:space="preserve">
          <source>abstract def productElement(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a48f2d84f891cf79230a4365328b7332d4b780" translate="yes" xml:space="preserve">
          <source>abstract def putIfAbsent(&lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;v&quot;&gt;v: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1f8c26bd5fe09f77d2a7625bd2a3caa7575298" translate="yes" xml:space="preserve">
          <source>abstract def quot(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c912a43851af3402b2bb762fa5db44ae4216a091" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec7d57b9c40b4cd2b14f9156b368cabb083e723" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1be654d51c6899a031a74d3c956c62c1cc22ad" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1c1e663d98c52ffb7a31c28e77f1c160fc29ad" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777eedfd24743e0d9d1ba06c782c5b4fa48b883d" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8db1f576f527ac89969887d2c6acc5d8fc3625" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7656e0f668e59df773de69e8ca49ae9d5a0efa2d" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b825b2327d430c77f2c957b2ab368da156c99f53" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c63809cb4f9712ca9f6b86ed9c63fe4941ad5b" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c5e3bdc1ff7c6477226666b116eee3b0a89722" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83285cdb901fa271d07101b2fce06eacb3b746d9" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6234b82fa90bb5c9cc2146f688b379c358376c9a" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c892188d2ae60532aca141e7de296154c47bfe5" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cc01e6b707d017ab2a3c111fd6a119d29288a9" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77229e9bb08f2c66eeb87bf427c42f1fa7990c2e" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4889a5f0f4f485332a49c494ec95b573e84dc0" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d3405bea82c57dc41813242232307c943b0a58" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1171897e19536fd4c89add804d553bd9a8693291" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e34079a3c70db1f8ee79149bae2723b42b940c" translate="yes" xml:space="preserve">
          <source>abstract def rangeImpl(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8242e9805d1e84f834199d284f1b93e74335619" translate="yes" xml:space="preserve">
          <source>abstract def rangeTo(&lt;span name=&quot;to&quot;&gt;to: &lt;span name=&quot;scala.collection.SortedOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afe469476dbc62103d68a1a7ef6e049417dc924" translate="yes" xml:space="preserve">
          <source>abstract def ready(&lt;span name=&quot;atMost&quot;&gt;atMost: &lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;permit&quot;&gt;permit: &lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d26d813070365c12c44bf16f4041aa43abc61b7" translate="yes" xml:space="preserve">
          <source>abstract def ready(&lt;span name=&quot;atMost&quot;&gt;atMost: &lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;permit&quot;&gt;permit: &lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde69b01eaec40963dd226c3c7b87ecbea61f1a6" translate="yes" xml:space="preserve">
          <source>abstract def recoverWith[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;, &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.recoverWith.U&quot;&gt;U&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.recoverWith.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9690dfb1b9bb193968919ece530785693bf686a" translate="yes" xml:space="preserve">
          <source>abstract def recover[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;, &lt;span name=&quot;scala.util.Try.recover.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.recover.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9ee3a84c444a6d8a9f0ad89e0893a9a9db889c" translate="yes" xml:space="preserve">
          <source>abstract def release(&lt;span name=&quot;resource&quot;&gt;resource: &lt;span name=&quot;scala.util.Using.Releasable.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415eb3ec5e746136539c862bf88592edec0cda19" translate="yes" xml:space="preserve">
          <source>abstract def rem(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0e4e6f1bc3bafe6c6d5a03e301cec0ebeb8747" translate="yes" xml:space="preserve">
          <source>abstract def remove(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e32484d72d25fad018179565ec0e56b740c03a" translate="yes" xml:space="preserve">
          <source>abstract def remove(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295f60e3921edf772e200813f123aa53b79accf2" translate="yes" xml:space="preserve">
          <source>abstract def remove(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85fee382715a498d1de0df613595844d82a310c" translate="yes" xml:space="preserve">
          <source>abstract def remove(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;count&quot;&gt;count: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a2e96ceab1798f41bed95640b4b37736b35626" translate="yes" xml:space="preserve">
          <source>abstract def remove(&lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;v&quot;&gt;v: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96eb64c9b96bb2f82d53b6ec9c2ba045acd968f7" translate="yes" xml:space="preserve">
          <source>abstract def removed(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cca3341ae0385998c55913fbab4402ed5b107d1" translate="yes" xml:space="preserve">
          <source>abstract def removed(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3feebfcf58a863f2320aaeabd3298dfc38c02b38" translate="yes" xml:space="preserve">
          <source>abstract def removed(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e036b8732a5a9ef32291764ade72c50b7c04a99" translate="yes" xml:space="preserve">
          <source>abstract def removed(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ff5ebfe236023342e69b95296519750ae01a97" translate="yes" xml:space="preserve">
          <source>abstract def removed(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5941067e4bd6386883972490642ca3b802c9a8" translate="yes" xml:space="preserve">
          <source>abstract def removed(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7644387bb4b65d8ad11917847b78e17d435c71" translate="yes" xml:space="preserve">
          <source>abstract def removed(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f4be3c2cfc686c3a8a4cda90fc7d658d2b6463" translate="yes" xml:space="preserve">
          <source>abstract def removed(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd0ca4300b48c24f573c69f1823f4ed9a0feb81" translate="yes" xml:space="preserve">
          <source>abstract def replace(&lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;oldvalue&quot;&gt;oldvalue: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;newvalue&quot;&gt;newvalue: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2940592337e5d183c33aa6b912f221b229882a3" translate="yes" xml:space="preserve">
          <source>abstract def replace(&lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;v&quot;&gt;v: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf4c5124b49fc6144c05a29ec3246d5a0df47fa" translate="yes" xml:space="preserve">
          <source>abstract def reportFailure(&lt;span name=&quot;cause&quot;&gt;cause: &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3128a64b4714699d3abefde31949665516ea81" translate="yes" xml:space="preserve">
          <source>abstract def repr: &lt;span name=&quot;scala.collection.generic.Subtractable.Repr&quot;&gt;Repr&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291c1997a71b9f1e98f59d9c2fb0cd48b8fa610a" translate="yes" xml:space="preserve">
          <source>abstract def resize(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921f23286d054fe9949ba22dd763a06e92070f70" translate="yes" xml:space="preserve">
          <source>abstract def result(): &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48246bcdddf6c95daf7f51a10ebdd63de3d06f23" translate="yes" xml:space="preserve">
          <source>abstract def result(): &lt;span name=&quot;scala.collection.mutable.Builder.To&quot;&gt;To&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740ce69d6355030cfecc6821dc1f88c73ba23005" translate="yes" xml:space="preserve">
          <source>abstract def result(): &lt;span name=&quot;scala.collection.mutable.ReusableBuilder.To&quot;&gt;To&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20e28169821c83dd39373eeddab827d9b25129e" translate="yes" xml:space="preserve">
          <source>abstract def result(): &lt;span name=&quot;scala.jdk.Accumulator.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2a94b06f386163a9ea823540c29ad8ce4ad7bb" translate="yes" xml:space="preserve">
          <source>abstract def result(&lt;span name=&quot;atMost&quot;&gt;atMost: &lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;permit&quot;&gt;permit: &lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.concurrent.Awaitable.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86c32b17636268d215bb3822b50b3b47a4df259" translate="yes" xml:space="preserve">
          <source>abstract def result(&lt;span name=&quot;atMost&quot;&gt;atMost: &lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;permit&quot;&gt;permit: &lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a428bb7087da65eeeef7e618b89b2d2eac0b04" translate="yes" xml:space="preserve">
          <source>abstract def run(): &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82dc4d7d21e55a50579bb72e25798239b6588434" translate="yes" xml:space="preserve">
          <source>abstract def run(&lt;span name=&quot;connectInput&quot;&gt;connectInput: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa6f3435fe5cdf6cb6bd88f2d46a481e7cfecbd" translate="yes" xml:space="preserve">
          <source>abstract def run(&lt;span name=&quot;io&quot;&gt;io: &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b098f397f8d4630471f3d902bb2bca15f28eff" translate="yes" xml:space="preserve">
          <source>abstract def run(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf84e6dbcd445e4d395b279c86860983142f72f" translate="yes" xml:space="preserve">
          <source>abstract def run(&lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;connectInput&quot;&gt;connectInput: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97afe769a393e2e67eb1c2772ce835f03b4f68c1" translate="yes" xml:space="preserve">
          <source>abstract def runtimeClass: &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[_]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49931949ab9a830fd8a2385961c35e019f5bccb8" translate="yes" xml:space="preserve">
          <source>abstract def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140c7ba0cf7b00e74d35176a627a3c172be9e132" translate="yes" xml:space="preserve">
          <source>abstract def self: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368e8747d050741b05306e59549b5ab9fd5cd5ba" translate="yes" xml:space="preserve">
          <source>abstract def self: &lt;span name=&quot;scala.Proxy.Typed.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb69b7ec9c5ce8796d0c6a236d5c84822d02e1b" translate="yes" xml:space="preserve">
          <source>abstract def seqUnbox(&lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShape.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StepperShape.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b73348167d4ba9a48d7a0e852880ebb087e179" translate="yes" xml:space="preserve">
          <source>abstract def set(&lt;span name=&quot;newValue&quot;&gt;newValue: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf69ea1ff55f51f4147369667cfb2392600139e" translate="yes" xml:space="preserve">
          <source>abstract def setValue[&lt;span name=&quot;T1&quot;&gt;T1 &amp;gt;: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.sys.Prop.setValue.T1&quot;&gt;T1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3951c4b3ea7c725625e63a8d50d131ab85c6a56e" translate="yes" xml:space="preserve">
          <source>abstract def setValue[&lt;span name=&quot;T1&quot;&gt;T1 &amp;gt;: &lt;span name=&quot;scala.sys.Prop.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.sys.Prop.setValue.T1&quot;&gt;T1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.sys.Prop.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6379865494ab5b82f2161e918fa49a6c01796b25" translate="yes" xml:space="preserve">
          <source>abstract def shape: &lt;a href=&quot;steppershape%24%24shape&quot; id=&quot;scala.collection.StepperShape.Shape&quot; name=&quot;scala.collection.StepperShape.Shape&quot;&gt;Shape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fe59dfca86db927ef7065a985cb861c4f2ab54" translate="yes" xml:space="preserve">
          <source>abstract def shortValue: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8ff47fbdac9f3b82b34029975e1105e416ed0b" translate="yes" xml:space="preserve">
          <source>abstract def shutdown(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb532802faa500972133c406094d43a8beabfc6b" translate="yes" xml:space="preserve">
          <source>abstract def shutdownNow(): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;java.lang.Runnable&quot;&gt;Runnable&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b916a558f6c462d3bd70543918ff13ed7198ce" translate="yes" xml:space="preserve">
          <source>abstract def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d495ac5ac28599e41c76b3512f49928c3dac0d7a" translate="yes" xml:space="preserve">
          <source>abstract def sortedIterableFactory: &lt;a href=&quot;../sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9d5c53b3a1c8abeafdbd9ecda5c04f46d74c1f" translate="yes" xml:space="preserve">
          <source>abstract def sortedIterableFactory: &lt;a href=&quot;../sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0457a02614f9de7f4c30fd6f0dc8f0ae22dbaf" translate="yes" xml:space="preserve">
          <source>abstract def sortedIterableFactory: &lt;a href=&quot;../sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edc75dc0375abb35afec5672337e781397b2b74" translate="yes" xml:space="preserve">
          <source>abstract def sortedIterableFactory: &lt;a href=&quot;sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b938596250b689ba80ce6968a15de31132a2ec4e" translate="yes" xml:space="preserve">
          <source>abstract def sortedIterableFactory: &lt;a href=&quot;sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2841ff372c82fc8452886e87d104bf3abf4719a6" translate="yes" xml:space="preserve">
          <source>abstract def sortedIterableFactory: &lt;a href=&quot;sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abad8aacd1bf4de63571fcf2fb34272a2e90d07" translate="yes" xml:space="preserve">
          <source>abstract def sortedIterableFactory: &lt;a href=&quot;sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d86756b0e0767c5823b62950ce7e493a11fdaeb" translate="yes" xml:space="preserve">
          <source>abstract def sortedMapFactory: &lt;a href=&quot;../sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbc0cb202fec5c89039d1c4876a20810094693b" translate="yes" xml:space="preserve">
          <source>abstract def sortedMapFactory: &lt;a href=&quot;../sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fba90db203a94931f3704b54c5a9a2103a8b88e" translate="yes" xml:space="preserve">
          <source>abstract def sortedMapFactory: &lt;a href=&quot;../sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5384620be9e896f5e7654f78cd1dd8f88f3064a9" translate="yes" xml:space="preserve">
          <source>abstract def sortedMapFactory: &lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5668eb069d3f5ff4a7e3cb16e8cc1f8b1eeb2b24" translate="yes" xml:space="preserve">
          <source>abstract def sortedMapFactory: &lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9f32e2f46f9843e5914fb79e162198a4dcaa4f" translate="yes" xml:space="preserve">
          <source>abstract def sortedMapFactory: &lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5d1b1e0a5fbc74b4d0f137eb4123fcf158da75" translate="yes" xml:space="preserve">
          <source>abstract def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783b02f58ba4057e0d6aa3a0bbe0c7be0fef35ff" translate="yes" xml:space="preserve">
          <source>abstract def spliterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.Spliterator&quot;&gt;Spliterator&lt;/span&gt;[_]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8b7e0999829fe4e48f038a8fb90823b4576c3e" translate="yes" xml:space="preserve">
          <source>abstract def start(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ffedab413f548b0443a4ad51ceacfeb63f9daa" translate="yes" xml:space="preserve">
          <source>abstract def start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350b3121ea54cf902b8a163a584c0f473621a3a2" translate="yes" xml:space="preserve">
          <source>abstract def start_+(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e5e477816355ca52ff0fb1fd1a52e460becbbf" translate="yes" xml:space="preserve">
          <source>abstract def submit(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.lang.Runnable&quot;&gt;Runnable&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.concurrent.Future&quot;&gt;java.util.concurrent.Future&lt;/span&gt;[_ &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d98b20388a72e4be41185baaf352e5c3e48e2c8" translate="yes" xml:space="preserve">
          <source>abstract def submit[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.lang.Runnable&quot;&gt;Runnable&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;span name=&quot;java.util.concurrent.ExecutorService.submit.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.concurrent.Future&quot;&gt;java.util.concurrent.Future&lt;/span&gt;[&lt;span name=&quot;java.util.concurrent.ExecutorService.submit.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1365adbd45fa5be8f8c8cdeccc825f79e70cfe5" translate="yes" xml:space="preserve">
          <source>abstract def submit[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.concurrent.Callable&quot;&gt;Callable&lt;/span&gt;[&lt;span name=&quot;java.util.concurrent.ExecutorService.submit.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.concurrent.Future&quot;&gt;java.util.concurrent.Future&lt;/span&gt;[&lt;span name=&quot;java.util.concurrent.ExecutorService.submit.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fcdc2bed31274ebb003c45f47ec944e98aa45f" translate="yes" xml:space="preserve">
          <source>abstract def substituteBoth[&lt;span name=&quot;F&quot;&gt;F[&lt;span name=&quot;_&quot;&gt;-_&lt;/span&gt;, &lt;span name=&quot;_&quot;&gt;+_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;ftf&quot;&gt;ftf: &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.substituteBoth.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.substituteBoth.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12abd26232f657020910b73f61ab596c151b6b35" translate="yes" xml:space="preserve">
          <source>abstract def substituteBoth[&lt;span name=&quot;F&quot;&gt;F[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;, &lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;ftf&quot;&gt;ftf: &lt;span name=&quot;scala.=:=.substituteBoth.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;, &lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.=:=.substituteBoth.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a781200f0fc616bfc868be43ab5ab362b163940f" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69fab78b424f0314028d55d714e9676b3fa6cb5" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea0558c539581f68f7346fbcff9a3e3c6dea89a" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff632230423c1f6aeefd436e9ba8fa27545d5162" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6455339cdabd25b75762ef4617565029b1699d0" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a0caac8c471d82d7dde5ce1014c1baf8991760" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f19ebf4a52b79203409f9fc8c69718d95e08cf" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2673a2e881cba3b180ae86151acf9adcf2d6fe1" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4742c65be2175f6c384c9116823ba5d5bb57f1" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.mutable.SetOps&quot; name=&quot;scala.collection.mutable.SetOps&quot;&gt;SetOps&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6509cbed06115d203f505ea81cf0ec127af61bd" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Shrinkable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;shrinkable&quot; id=&quot;scala.collection.mutable.Shrinkable&quot; name=&quot;scala.collection.mutable.Shrinkable&quot;&gt;Shrinkable&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f09c97225dfac7d5c2d0b64109770ae5fa49977" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2611cc09e67c89fb5846af05ec4d110409e00722" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.mutable.SortedMapOps&quot; name=&quot;scala.collection.mutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c49db164249278977170be1f5b84b8689358bb" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9c7a099e5ef9a6cf30518a8effd614bbe5b32c" translate="yes" xml:space="preserve">
          <source>abstract def subtractOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.mutable.SortedSetOps&quot; name=&quot;scala.collection.mutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d1e57160e0e7d37757a1532a140882d748b305" translate="yes" xml:space="preserve">
          <source>abstract def tailDefined: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8c11fbed074299dc7614dd1181bc7683d37702" translate="yes" xml:space="preserve">
          <source>abstract def take(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6fa5df8e91d8deda14c09ff5804382e80c3150" translate="yes" xml:space="preserve">
          <source>abstract def takeWhile(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3faae8d92fde299e5c31cc872ad8ae3a9827fa0" translate="yes" xml:space="preserve">
          <source>abstract def tapEach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.tapEach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a014ed82ae19db8b887ad3481a611853c02beb" translate="yes" xml:space="preserve">
          <source>abstract def times(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b377212c4465dfde92196e3a56b04ae6c1a329f" translate="yes" xml:space="preserve">
          <source>abstract def times(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1405ce50bfd3afc0cc32d819ea00bb213b46f9b5" translate="yes" xml:space="preserve">
          <source>abstract def times(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3254ae8f0a77354a24c7c1742373184238351f" translate="yes" xml:space="preserve">
          <source>abstract def toByte: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a25e73eaa36971e9c79443299f0b4563803665" translate="yes" xml:space="preserve">
          <source>abstract def toChar: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cee1d302b33f79d93dc9123f3ac1d9b3252349e" translate="yes" xml:space="preserve">
          <source>abstract def toCoarsest: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ca7e6ea7da3d45ce1b2f44cba8bcc9ce1638e2" translate="yes" xml:space="preserve">
          <source>abstract def toDays: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e01424dddf56c236f4916477b84bc6c9f817e7" translate="yes" xml:space="preserve">
          <source>abstract def toDouble(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1517db72381bcedd6d70975357b642d7c66c3b" translate="yes" xml:space="preserve">
          <source>abstract def toDouble(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9023ac0a3724fdcababa46b87570d3a73fda98" translate="yes" xml:space="preserve">
          <source>abstract def toDouble(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbd660e220aa0859608dd8147a939061c937588" translate="yes" xml:space="preserve">
          <source>abstract def toDouble: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b2d56b33a5802e74e40267acf67b0b06cc1bb9" translate="yes" xml:space="preserve">
          <source>abstract def toEither: &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;, &lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e1ba110501c6a96a3510f1c4fb1cb256a97ec2" translate="yes" xml:space="preserve">
          <source>abstract def toFloat(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14282933c9e871dd721cf056075970b997554e4" translate="yes" xml:space="preserve">
          <source>abstract def toFloat(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554d3036c96b3e13d2321ec70d630cd3cf5f2c41" translate="yes" xml:space="preserve">
          <source>abstract def toFloat(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cc44d75eec2f8ffe7fe82b2648271b466a7aec" translate="yes" xml:space="preserve">
          <source>abstract def toFloat: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf6f7f8b24146877b912c76df887003e940aa55" translate="yes" xml:space="preserve">
          <source>abstract def toHours: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0bc5fcfd649cf49c955bd88f00d95b91579608" translate="yes" xml:space="preserve">
          <source>abstract def toInt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1de51e48e312c7ca68316e420e994187cca8bec" translate="yes" xml:space="preserve">
          <source>abstract def toInt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ff42fbe386193d8bc27c8a8c5e467e8a957fe6" translate="yes" xml:space="preserve">
          <source>abstract def toInt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097fcc27e85af6e4a6af507e1045e47b5a70fb40" translate="yes" xml:space="preserve">
          <source>abstract def toInt: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b833e58a0aceb0a4ca739a9e84f901362bfcd92" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a611ad2fbd2df97f388604ef7461557d1c374b" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5dabcb118065d7988e0ffd69b454516933fcd55" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837485815608a13d3aa288054f62fe77a57fb98a" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5dd8c3e903524bd0827e4f8689a13fb66edbc56" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b229c1d9d66ce8d2ea982b6c6c7015df94fb49fd" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5ad1c0aa30973b5bfc7ca535ded467e2170027" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2f55bbff421326dbf0c2b7a7b50b2a9f2c273e" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008ea6e487dc043c490e0820343d825a9dca31db" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c527e2e9bc1bbdff1636a53d2539f7ed38d31bb4" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193f4a734f4534d95707e565bc16b288e7d2ad60" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3093064faa867d17c40a671ff57fa7ee4f7021" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a03e9867134292fa3a17265e710ad826545f85" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607287e3e003a6d10fcbfb712ae98e89b9a60c53" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4409a1228814fcede268b180dd46d8a221a52934" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6004e4f09ff6c1c85e18021bf495732e01d8bfd5" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f14464d2c5bbeb75bc2bf3b49741885132b33df" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2be0364ce9edeb61f81fba7501831140370d42" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ff0219bcdc83bfdfc4eb65e96a10c628f42fbd" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bc516e2c2028a096280d5addacacaa16b0b8f7" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e365344cc1559e1a2e4f1c7659162139b1b4d5b" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25363e0c2aab0bc7f4f911c8005dcfe127b90b0d" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e1b7ad328b18726181c0b471be5b1626360e3a" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43248700f1efafd54b2a1f9f8b6a29c3e2acc38" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c933bb1e41008909b1ae8da8c72bf7db718d40" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee825823f8f4a7df5595a6e202a100e783489ed" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e838ce10f8b1e51acadc199219564e191a7de6" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c73bf1795605f7c640ccc00335c8c648437fdc" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7846c5764a43fb51dc66de08834ddf37dfedcfdb" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c91c561494b503d45e21c54ae453fc8122033c8" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52ebe007f45acf120e227184584ead669df84a0" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215b8a82eedab411bfa8b8e4e1214ac664bb57c2" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d00b8ad29d2817b3f1332c7d8ca70b8f08335c" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3acc5f633a0f748616b5cffed138118a6389576" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035b95cf5ae68ea6c2eb0c78db9680222704c439" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08984e2520f29f9e767cf8839552c1f7e68f813b" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c5f5cd96cba350b1c5930f89e1332ce9748dc2" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea37418095d137001c799da739db7aeaf82cc12" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ddf4c4380beb7e6000674801e477507289212c" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d332aa9551e8b2a51481ee42b1b6db234e41a773" translate="yes" xml:space="preserve">
          <source>abstract def toIterable: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c95a1fbb69cdd1eebe95c10529e9751a1a9680" translate="yes" xml:space="preserve">
          <source>abstract def toLong(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b902bdfec553541d4d596af6cf19a73919e438b" translate="yes" xml:space="preserve">
          <source>abstract def toLong(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5681f0e54e23438cba8b244ab3c3118789941735" translate="yes" xml:space="preserve">
          <source>abstract def toLong(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22de648725174ed672878e15c960a5e1b46f3aa9" translate="yes" xml:space="preserve">
          <source>abstract def toLong: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7e9bf90a5628607dac0c576b9313d1bf02e36e" translate="yes" xml:space="preserve">
          <source>abstract def toMicros: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59b525fe348ad12ecb8dcb9851fa87bc1adb951" translate="yes" xml:space="preserve">
          <source>abstract def toMillis: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3f23e7aa164bd6635b392a30ee6d4d90cbe24a" translate="yes" xml:space="preserve">
          <source>abstract def toMinutes: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb6b8ed3df9141faa4001ea9135ebb8ee53b201" translate="yes" xml:space="preserve">
          <source>abstract def toNanos: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5f6027a8847f19701def14e9adbdc3dd05717c" translate="yes" xml:space="preserve">
          <source>abstract def toOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13aaead4c22429366de60dcbf56772da2d554259" translate="yes" xml:space="preserve">
          <source>abstract def toSeconds: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7bc3de7b961f2450bb03a030609b0dc890eb5a" translate="yes" xml:space="preserve">
          <source>abstract def toShort: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b180942f6d207fbcc99146d565aa5be802a013" translate="yes" xml:space="preserve">
          <source>abstract def toSink: &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa0e632a594b47e733e8241ba3bf45a8713e022" translate="yes" xml:space="preserve">
          <source>abstract def toSource: &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b625d38d042ae7ff60d491b1f019c92986ce49" translate="yes" xml:space="preserve">
          <source>abstract def toUnit(&lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa996f93cc1c6f90251029a4fd4104d192e7ec6c" translate="yes" xml:space="preserve">
          <source>abstract def toggle(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4833dc896b2e9796a03bc58cdb79acf6f5f2f61a" translate="yes" xml:space="preserve">
          <source>abstract def transformWith[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.transformWith.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.transformWith.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aa907c848ff62d23aebb95b415b5086f74d0a7" translate="yes" xml:space="preserve">
          <source>abstract def transform[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.transform.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.transform.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f812351689b51d59dc2695a80a0caba691db81a2" translate="yes" xml:space="preserve">
          <source>abstract def transform[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: (&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.transform.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.transform.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.transform.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3ebd45c4e1eed6e2fc07496fad057c59030bc6" translate="yes" xml:space="preserve">
          <source>abstract def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a95fc69a26bb5718fffb1549f67ec57c7f07d43" translate="yes" xml:space="preserve">
          <source>abstract def tryCompareTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.math.PartiallyOrdered.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;span name=&quot;scala.math.PartiallyOrdered.tryCompareTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;#AsPartiallyOrdered%5BB%5D=B=&amp;gt;scala.math.PartiallyOrdered%5BB%5D&quot; id=&quot;scala.math.PartiallyOrdered.AsPartiallyOrdered&quot; name=&quot;scala.math.PartiallyOrdered.AsPartiallyOrdered&quot;&gt;AsPartiallyOrdered&lt;/a&gt;[&lt;span name=&quot;scala.math.PartiallyOrdered.tryCompareTo.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c305317a801b295af72b2450caf7a993071644" translate="yes" xml:space="preserve">
          <source>abstract def tryComplete(&lt;span name=&quot;result&quot;&gt;result: &lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Promise.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb865dd2516dd4e2a341d92eaee4621067dee7a" translate="yes" xml:space="preserve">
          <source>abstract def trySplit(): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15d4de68434e1546456d76d12048acf4eccea8a" translate="yes" xml:space="preserve">
          <source>abstract def trySplit(): &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2875e0df99833ef0b635739078a1276b21080e" translate="yes" xml:space="preserve">
          <source>abstract def trySplit(): &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b202f2ffc369e1e71dcca0a91f049f6b9891cd95" translate="yes" xml:space="preserve">
          <source>abstract def trySplit(): &lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e509af04ba09258dcb8cc416bc63dd742fb7f994" translate="yes" xml:space="preserve">
          <source>abstract def trySplit(): &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149da34a0e134d7414b87b3a963d0ecb5fb2ab84" translate="yes" xml:space="preserve">
          <source>abstract def unary_!: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c076f81d46657664653996c8ed65f4292028c815" translate="yes" xml:space="preserve">
          <source>abstract def unary_+: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d37aff1b6bc7b58a564e08288fd25b4ce6a81c" translate="yes" xml:space="preserve">
          <source>abstract def unary_+: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fefd6ca7e636b368de22bd9d9c5f3d72b7b14a" translate="yes" xml:space="preserve">
          <source>abstract def unary_+: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004122cc2c37261ed9164cca7980c6ec5bc4da6d" translate="yes" xml:space="preserve">
          <source>abstract def unary_+: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d102415934d982745848872be48be8b11fe785e3" translate="yes" xml:space="preserve">
          <source>abstract def unary_-: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c544ffe837bc742bfa37d942bb6851fe914267" translate="yes" xml:space="preserve">
          <source>abstract def unary_-: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28a850dbe16f6b2da1d24fd0a4af6a13d60a087" translate="yes" xml:space="preserve">
          <source>abstract def unary_-: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2daa6f176a0236af19208e4a48ef688d18c42c31" translate="yes" xml:space="preserve">
          <source>abstract def unary_-: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0c4cc5708cf15bb59e05f5ce0b68aeea1faa37" translate="yes" xml:space="preserve">
          <source>abstract def unary_-: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a104be4b847ce2f59f5b74fd7283b8c709b9bb" translate="yes" xml:space="preserve">
          <source>abstract def unary_~: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e15e1cccf1b23e751a1a0d225bc9d81f2dc67a8" translate="yes" xml:space="preserve">
          <source>abstract def unary_~: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3736c7b2203a8919661d8dffcc782bbc39af83" translate="yes" xml:space="preserve">
          <source>abstract def underlying(): &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb4c63f72a331c047fd1cb9347cf43d0b770dbc" translate="yes" xml:space="preserve">
          <source>abstract def unit: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36aaaefef3c7a6433ef94d8c9961b65e64d907fb" translate="yes" xml:space="preserve">
          <source>abstract def unsafeArray: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[_]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d88c3d85bd04b1fa4fad3f89c1c28a4ed34ee8" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ffd5f481382011f52217249229636ade87b0e2" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69abf3c32d01645821bc431ba7bd165cfde1bd71" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcf9058bacf7d5a5d8ab29e5b0923773929d65b" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6467a9807d741c15260a6cbb76992f649c3b02" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16173505a4380b70dea5afd23740c67a941e620b" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2743f458338a33175d016601e512064e38d00a" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bcdba6d888f153ad850107bd10ed5c52b7a6b2" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf15803e100abc4ef49ca0fccde8ac699ae5a293" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae671f66f5bf1771ecdccb4a391c548e252aff1" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df0ba6f06960633f7b4b9de1eacd545153de80a" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3e365d6b93adeb1955e1999635f8c63606acef" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b6c5ccd92fbff61b6243fe119d555efa63c53d" translate="yes" xml:space="preserve">
          <source>abstract def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829eaf1a78665b444cfcb1ec7d08572d13ab8232" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f795f008ec7c3a8b43b8277ecee50c79661e6983" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628522b8967d962ce45b9e5276f0b02ee843ec52" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c32286c4a540b50548ebfe87be00026388d75c" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04db58f654a995c9d6490a8d27c2bfbdc561fe7f" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161cd1dd7a5e0fb954a0aeb36b1453f71de6bfc8" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932915e77febf62e3387eba0a633c1358777af50" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4b7abd3d60370bc4721fe03033f2a625a78f1b" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4bd571d0e2750817aa69105ac564013c99dba28" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b93af350b00b9d54cd332fe66aee7a06a227fa" translate="yes" xml:space="preserve">
          <source>abstract def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cefc2fefd9af07664b246ca58db4bbb2dac9d5" translate="yes" xml:space="preserve">
          <source>abstract def updateWord(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;w&quot;&gt;w: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0406ed164b63cc9590b712ba67eda317f52998fb" translate="yes" xml:space="preserve">
          <source>abstract def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d898e3d3e5b150925a0de564a514579257f7957c" translate="yes" xml:space="preserve">
          <source>abstract def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d62d155a9ca0dfbd14a96a14f05fa0dfc2b192" translate="yes" xml:space="preserve">
          <source>abstract def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eda6adefb3769bb70325ebbb0c4290bd52ef7fc" translate="yes" xml:space="preserve">
          <source>abstract def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb5b1e4f865f0c15956342f83c79c7569ad1c96" translate="yes" xml:space="preserve">
          <source>abstract def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38cbea455f5a09735df2e0d683702795dcdebc9" translate="yes" xml:space="preserve">
          <source>abstract def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d57353fed65291ce844617c7bc5b2cd1ae09f91" translate="yes" xml:space="preserve">
          <source>abstract def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9540a48cb9f51d73d92edf2647a9e0538530b9c8" translate="yes" xml:space="preserve">
          <source>abstract def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a10617042fde66ad6b4f32584363f4ca81b2ab" translate="yes" xml:space="preserve">
          <source>abstract def value: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d06268408975c056dcc114fbeb73a2e8cb51de" translate="yes" xml:space="preserve">
          <source>abstract def value: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13dfb934a0f724fc76987c94bc71bc186cc2848" translate="yes" xml:space="preserve">
          <source>abstract def value: &lt;span name=&quot;scala.sys.Prop.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86017be521e84ff6e5739802800fdf10095f8fcd" translate="yes" xml:space="preserve">
          <source>abstract def withFilter(&lt;span name=&quot;q&quot;&gt;q: (&lt;span name=&quot;scala.collection.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a2f21aba2861e0e6999b3748242990f548d31e" translate="yes" xml:space="preserve">
          <source>abstract def word(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5c7d9bd96c7f2d5bbdff0215c357c8d632d343" translate="yes" xml:space="preserve">
          <source>abstract def word(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae596d6207e3bb4a98eabaaa97ef1f811d779797" translate="yes" xml:space="preserve">
          <source>abstract def zero: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee64bc6e87111f92c1421d7e4454af37291d2e3d" translate="yes" xml:space="preserve">
          <source>abstract def zero: &lt;span name=&quot;scala.sys.Prop.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa159e16813234dce5e0e9149b516f14ac9bf3d" translate="yes" xml:space="preserve">
          <source>abstract def zipWithIndex: &lt;span name=&quot;scala.collection.IterableOnceOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234c90a3a7942b1090f067dc6961a1cc8fad8446" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334bbfe1dd0b752e443398621676e324c1a18319" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5289f0e307fa436ea5616c600f50564735de25" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e8ea50a8f28f733f19ab7efd6094a5cd6389e0" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b155acd73d07bac6ade73023edee15477a6d0be" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe9e36ded3342ecff2f203b3f706447039bb3ec" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7241dabd8f0c780dde6a01c6c62af9842e8e8a" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46141e50b5bc53c548ab29a403d41d000e037929" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f26b44d965ba0c90c8c79ea08919bba9e3df35a" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c075fad5e88b49eedb8f4211c126ca0b6d06d1b6" translate="yes" xml:space="preserve">
          <source>abstract def |(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531188a6311ceb44a89623b70be2adb7ee0191f4" translate="yes" xml:space="preserve">
          <source>abstract def ||(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84acd96fb36d95ab424e71b49a683aea0af9e45" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;boolean&quot;&gt;Boolean&lt;/a&gt; extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10fbf0696c0cfd0e82d30f01d3057454476f1ea" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;byte&quot;&gt;Byte&lt;/a&gt; extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5aa4595bc228a54d0d89441872192ac921dfd2" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt; extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd66e88b750973364073c293f4d48ae2fa01bf7b" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;double&quot;&gt;Double&lt;/a&gt; extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8536ffa1e595cdb28c7f567c66e048affd37edd" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt; extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6179be0348e7c376f86c68ad1efc2ca1f5e200fd" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt; extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490342ae8c8263a4f4c4e4b1f995eb56b63cd265" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;long&quot;&gt;Long&lt;/a&gt; extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3219ad868ff6bf870670882adaa7281a7bc2db6" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;nothing&quot;&gt;Nothing&lt;/a&gt; extends &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c46cdd03f0d57ad8e060854c0710967818b243" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt; extends &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89071a12ab2a0afe0adbc048cafa3684ab95b89" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;short&quot;&gt;Short&lt;/a&gt; extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d21feb989c81018ec170b521f0990dab5225b7" translate="yes" xml:space="preserve">
          <source>abstract final class &lt;a href=&quot;unit&quot;&gt;Unit&lt;/a&gt; extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839c1d08cdc4be09462ba06bbc924e484c243495" translate="yes" xml:space="preserve">
          <source>abstract final classBoolean extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09807fe5743be679f36bac8a3da7140800132946" translate="yes" xml:space="preserve">
          <source>abstract final classByte extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3002b879b3dbcd0d06b83836b93e26043225c4" translate="yes" xml:space="preserve">
          <source>abstract final classChar extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c4e3f25f00d70c3fd37ef496e3912ba1569556" translate="yes" xml:space="preserve">
          <source>abstract final classDouble extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447ccb1051251cce338680aff6d992d83aacfbde" translate="yes" xml:space="preserve">
          <source>abstract final classFloat extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="accaf8761cad88e8467da338f659442218556be8" translate="yes" xml:space="preserve">
          <source>abstract final classInt extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392d89b20eae023938e01e7c99305f856274dd02" translate="yes" xml:space="preserve">
          <source>abstract final classLong extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad235c11259874ba05320152c8187ebd728c3ec" translate="yes" xml:space="preserve">
          <source>abstract final classNothing extends &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ce324f10be0da611a503f83d57d9c66c2a4645" translate="yes" xml:space="preserve">
          <source>abstract final classNull extends &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d18ea856834f7fb741c09adb8ac7eec2171461" translate="yes" xml:space="preserve">
          <source>abstract final classShort extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219f9935bcfb99478d195b1c9a8fd262dfaf98eb" translate="yes" xml:space="preserve">
          <source>abstract final classUnit extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4460ceb6950f0d2e8e09a74e0445ba711a30d3a3" translate="yes" xml:space="preserve">
          <source>abstract type A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f028eb379dad0cd39e5aaddec7d4a540aa7512" translate="yes" xml:space="preserve">
          <source>abstract type C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1830606a6d4c56c979a9f1d4be9891b2a52e96" translate="yes" xml:space="preserve">
          <source>abstract type K</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfe1886a8c9aee70462bc13764a5efb3aaba772" translate="yes" xml:space="preserve">
          <source>abstract type R</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373875563ba5d8575f0cc9b4dd4939463d807e60" translate="yes" xml:space="preserve">
          <source>abstract type V</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bdb5c36075c7e94f16b39b1574d2dd5d7c9a0d" translate="yes" xml:space="preserve">
          <source>abstract val companion: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6cc82e846a3ab20d656266e58917cfea15be0c" translate="yes" xml:space="preserve">
          <source>abstract val groupNames: &lt;a href=&quot;../../index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b50b68eb150d732d374834af4e547428c56a66" translate="yes" xml:space="preserve">
          <source>abstract val iter: &lt;a href=&quot;../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76554126a59b5f99aadf63eea19ae04cd6c7025" translate="yes" xml:space="preserve">
          <source>abstract val name: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf25a7dbbf9448730d5d6a5e8a581e8d802d228" translate="yes" xml:space="preserve">
          <source>abstract val source: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5849d997fece8a36edc14d1b4066a9927acdc67d" translate="yes" xml:space="preserve">
          <source>abstract val underlying: &lt;span name=&quot;java.lang.ref.Reference&quot;&gt;java.lang.ref.Reference&lt;/span&gt;[_ &amp;lt;: &lt;span name=&quot;scala.ref.ReferenceWrapper.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34eb4c4ef005207e8b8f916b9f1fffacccd6945e" translate="yes" xml:space="preserve">
          <source>action</source>
          <target state="translated">action</target>
        </trans-unit>
        <trans-unit id="e4c103dc78557c68b069f3e861e3ed7c6c51dc4e" translate="yes" xml:space="preserve">
          <source>adds the following methods to the class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bb5992ec757c31480fc52162503ba4ffd1dfdb" translate="yes" xml:space="preserve">
          <source>all other exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816d63e63c53fbbcdc73b605731fb850111597ab" translate="yes" xml:space="preserve">
          <source>alternative</source>
          <target state="translated">alternative</target>
        </trans-unit>
        <trans-unit id="beb92e3bee15faafd589c41e5db83c0c6ca09b58" translate="yes" xml:space="preserve">
          <source>an (implicit ec: ExecutionContext) parameter to your method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e252a650e77b5aa97ab6fec9140d9ed35313dabc" translate="yes" xml:space="preserve">
          <source>an &lt;code&gt;Any&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01f067109771a12ed0c3a629b666ca11c228af0" translate="yes" xml:space="preserve">
          <source>an &lt;code&gt;Enumeration&lt;/code&gt; name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edeb07c704226bd39dd398743dfad089930a6c14" translate="yes" xml:space="preserve">
          <source>an Accumulator that produces elements using &lt;code&gt;f&lt;/code&gt; until &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bfc7e6bd1006ee77ad72e1968dcb7d5f473e5f" translate="yes" xml:space="preserve">
          <source>an Accumulator with &lt;code&gt;len&lt;/code&gt; values in the sequence &lt;code&gt;start, f(start), f(f(start)), ...&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95afdc57e51e27e4eb41de0d8d918a9b300666a3" translate="yes" xml:space="preserve">
          <source>an Accumulator with values &lt;code&gt;start, start + 1, ..., end - 1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3bd792ead1965d8f647ad0dafd96fc943459ec" translate="yes" xml:space="preserve">
          <source>an Accumulator with values &lt;code&gt;start, start + step, ...&lt;/code&gt; up to, but excluding &lt;code&gt;end&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bff4e0f248645e81bd0c6d2a49c295c4eb238e4" translate="yes" xml:space="preserve">
          <source>an Array of size n, where each element contains the result of computing &lt;code&gt;elem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347258c9ae52b54ad09f08635b54f5d0ef60e997" translate="yes" xml:space="preserve">
          <source>an IndexedSeq containing the threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee2d5893f6a45fc379b680c6e4ebb894aaa0a80" translate="yes" xml:space="preserve">
          <source>an Iterator that produces elements using &lt;code&gt;f&lt;/code&gt; until &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5b12d3d481e8cfd8125d6bd6fdc186f0b4a259" translate="yes" xml:space="preserve">
          <source>an Ordering to use if this Ordering returns zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03a846f2d6276ffde95efdf11c9f731864e78c1" translate="yes" xml:space="preserve">
          <source>an angle, in degrees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b34216e019b6eebcc1089443566606236eeaf5" translate="yes" xml:space="preserve">
          <source>an array consisting of the elements of this array sorted according to the comparison function &lt;code&gt;lt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced6d0daf60334bbee1586dcafb4bedc7b8efc19" translate="yes" xml:space="preserve">
          <source>an array consisting of the elements of this array sorted according to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942ceed7849d72aa0538fd841353869326511119" translate="yes" xml:space="preserve">
          <source>an array consisting of the elements of this array sorted according to the ordering where &lt;code&gt;x &amp;lt; y&lt;/code&gt; if &lt;code&gt;ord.lt(f(x), f(y))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef370b9f2f9c5807c5ceaeccb86a891cb8aa06ff" translate="yes" xml:space="preserve">
          <source>an array containing all elements from xs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb25333b2e963063d504d64849832a17751db25" translate="yes" xml:space="preserve">
          <source>an array containing the elements greater than or equal to index &lt;code&gt;from&lt;/code&gt; extending up to (but not including) index &lt;code&gt;until&lt;/code&gt; of this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746870eca793f51a8008350c320cc421c6a4fe2e" translate="yes" xml:space="preserve">
          <source>an empty &lt;code&gt;TreeMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebbab5f7a4a20bf068effb00f63a63ba207472f" translate="yes" xml:space="preserve">
          <source>an empty &lt;code&gt;TreeSet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bee68c94674f2ef75e9275de6ad043f740ec79" translate="yes" xml:space="preserve">
          <source>an empty iterable of type &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ab2eda46a17d5b34383c4b5d74a5963baa0e3e" translate="yes" xml:space="preserve">
          <source>an immutable map consisting only of those key value pairs of this map where the key satisfies the predicate &lt;code&gt;p&lt;/code&gt;. The resulting map wraps the original map without copying any elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd3a98faf16f6e5ef491ed9abeecf53d37d3aea" translate="yes" xml:space="preserve">
          <source>an implicit conversion that asserts that the value is also an &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f498cd3d39dbfec7a933fe78d4c3e50ead8c2276" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this Array is a pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0baffe44fa2d0b30fabf9a1fe5c5e922a47c9c6" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this Array is a triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdbd3be63f23d92e14063edddd4485c5d79aeec" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this Option is a pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02fd1e9e6dc5dd31e9282b3e0117dda8b72d823" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this Option is a triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef7271198abda6b5b2210154d229e083fbb42ce" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this collection is a &lt;code&gt;GenTraversable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ba8884e0d84d96cdf02ed90113aaa6f3d944ef" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this immutable sequence is a &lt;code&gt;GenTraversable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747b1dacf8c5f16c50fb7d7a8b210214e44c1995" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this immutable sequence is a pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81157c7ad935deeb6431da38a1f951eec3d59ffa" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this immutable sequence is a triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad9efb73eaa5865212deb04292eedd680d3537f" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this immutable sequence is an &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403a547077f1a8642ddd20fd1857c800f2847501" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this iterable collection is a &lt;code&gt;GenTraversable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fe3186104061f18bd05de8150fef0e5dd059da" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this iterable collection is a pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3de32c4f3341b3cd76efa05c34f3e2197cfb6b" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this iterable collection is a triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52eac0faa2328ba59f51f92dbdcdf26534eaea4" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this iterable collection is an &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c28852d242c480e5012a53407561a31165059b" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this lazy list is a &lt;code&gt;GenTraversable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f396bf6715787d9f46a26c193da926f3522c27c" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this lazy list is a pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a20641e098fa954bc6eeb58a320237dd22c20dc" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this lazy list is a triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e469fa47809f2b33785a75b1bea35a480cca42d" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this lazy list is an &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8cb289a38c12c7dc7de4f61745bbaa04825367" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this list is a pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a36c923aa1bfe745e96a99c164908e5100371fc" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this view is a &lt;code&gt;GenTraversable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e264eb3160cbdea1f96745581c80e20a458495" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this view is a pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be796b36150e54594314558783431a4296c42b2" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this view is a triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91b1251955527547ccfe567fa0d805dde0b83a3" translate="yes" xml:space="preserve">
          <source>an implicit conversion which asserts that the element type of this view is an &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920383e23a93e959a0224d48b9ee77f563530fcd" translate="yes" xml:space="preserve">
          <source>an implicit parameter defining a set of numeric operations which includes the &lt;code&gt;*&lt;/code&gt; operator to be used in forming the product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22cf39ce0563aa8c43bd49aa622d62ac38eeb30" translate="yes" xml:space="preserve">
          <source>an implicit parameter defining a set of numeric operations which includes the &lt;code&gt;+&lt;/code&gt; operator to be used in forming the sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b769d27ca3e714349230abeb5ed3b970d40860" translate="yes" xml:space="preserve">
          <source>an instance of &lt;code&gt;java.util.Locale&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860306b2346ba46d7d9d339c5413de5258483447" translate="yes" xml:space="preserve">
          <source>an iterable object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583834fa72ca45c034f6b9b6ad0a71fb93b313cc" translate="yes" xml:space="preserve">
          <source>an iterator over all elements sorted in descending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e0cf5ec8e180ba972e2e4c6d156bc7e2cf6819" translate="yes" xml:space="preserve">
          <source>an iterator over all keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873f62a7366311fada094c159371999a0f02ee24" translate="yes" xml:space="preserve">
          <source>an iterator over all the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68402e99e376c3edf8244e3281504ff49a232005" translate="yes" xml:space="preserve">
          <source>an iterator over all the inits of this array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c05ec9eb829090afa6294d112c48604ac7aa3d2" translate="yes" xml:space="preserve">
          <source>an iterator over all the inits of this immutable sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be9377c40c50857cdf07477c72579d8a89d370b" translate="yes" xml:space="preserve">
          <source>an iterator over all the inits of this iterable collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100b714cef6334bc060ea7497ee6426312edad47" translate="yes" xml:space="preserve">
          <source>an iterator over all the inits of this range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1479e0f63a6b06070c0494832f22221308be74f" translate="yes" xml:space="preserve">
          <source>an iterator over all the inits of this string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac060b026b04461cb19adfaa7aa3f2b2789cc16a" translate="yes" xml:space="preserve">
          <source>an iterator over all the inits of this view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c166e6fa27f265387b1d21eef98865f08a67efa" translate="yes" xml:space="preserve">
          <source>an iterator over all the tails of this array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16239ae354ba21eca057fb8ddcab52055f1d1577" translate="yes" xml:space="preserve">
          <source>an iterator over all the tails of this immutable sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e941629438d5c65a29090a91e64f20eb2e60c28" translate="yes" xml:space="preserve">
          <source>an iterator over all the tails of this iterable collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ea1e535d220a0ffe39f3c5ef176fbafa54597b" translate="yes" xml:space="preserve">
          <source>an iterator over all the tails of this range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8906ff1d11f22da90a398b9b0a845eb09e6ef23c" translate="yes" xml:space="preserve">
          <source>an iterator over all the tails of this sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da287b076fe535f1c0b3566fd733ba7f89b3fa0f" translate="yes" xml:space="preserve">
          <source>an iterator over all the tails of this string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85342d55ead34a850e45062648d9c3855252ab1" translate="yes" xml:space="preserve">
          <source>an iterator over all the tails of this view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1d5ea2133453682e9e7b20ebd86a483e304f33" translate="yes" xml:space="preserve">
          <source>an iterator over all values that are associated with some key in this map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63eda0cf0dd1d19c0b56fee9bfaaaf449624e6d" translate="yes" xml:space="preserve">
          <source>an iterator over pairs of integer keys and corresponding values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5659b86f63cf0a13c1f9157f4e9e82d8a97bdf" translate="yes" xml:space="preserve">
          <source>an iterator over pairs of long keys and corresponding values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de235ae4c11012a304fad2c38a1484236ec0305" translate="yes" xml:space="preserve">
          <source>an iterator which produces those values of this iterator which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67dbc17968ea94ae2684c7eaf639dd29dedd473" translate="yes" xml:space="preserve">
          <source>an iterator yielding the chars of this string in reversed order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0792181c281dec83bff5f9aab17a13cb70f60ab2" translate="yes" xml:space="preserve">
          <source>an iterator yielding the elements of this array in reversed order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273615428d3a3b8c5234c96753217c5b16a5a6a7" translate="yes" xml:space="preserve">
          <source>an iterator yielding the elements of this immutable sequence in reversed order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8c4abec205d1703b66abf877f1cc9600e00186" translate="yes" xml:space="preserve">
          <source>an iterator yielding the elements of this sequence in reversed order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edbf52ef06d1e720355ddd77ca430637b9a3b67" translate="yes" xml:space="preserve">
          <source>an iterator yielding the elements of this view in reversed order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bce23e358166aa14b1ca514ccfbe1218fd5bb4" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;ArrayOps.WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this array which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27670e7633ce6935229332d845b515a259858b46" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this Try which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ef20c0f4d6898ce8b73d9038c6d556958cd8a9" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this collection which also satisfy both &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;q&lt;/code&gt; predicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b8a08af57d8b7d3a20a94c242b9e7a1e8af9e8" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this immutable sequence which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2644c6cde004b61b987f4b05bee8e9381da47bb6" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this iterable collection which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c127518d97a03390499d85c0ff00d8f32132f74a" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this lazy list which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3481a43777ce521c18e2fe769fde9fbd266e6c27" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this map collection which also satisfy both &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;q&lt;/code&gt; predicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c18aa820f0d9165530498f33de55148e26096c3" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this map which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af690bb0c9fb01e1b24b45044ee7157493d4b510" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this set which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402e2a148293ba7a7725e2f4a1da27b59a02c782" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this sorted collection which also satisfy both &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;q&lt;/code&gt; predicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e4ae8af2d56c7b6deea0dc4723c38986a6b5fe" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this sorted map collection which also satisfy both &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;q&lt;/code&gt; predicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cd07f87fbce6d3122d7eede5dffe514facdc22" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those elements of this view which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395e3a4e86a0fc3ec3f27951bf61ea79880a6efe" translate="yes" xml:space="preserve">
          <source>an object of class &lt;code&gt;stringOps.WithFilter&lt;/code&gt;, which supports &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations. All these operations apply to those chars of this string which satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702a7fefab0192359f75cda38cc2fade2ef03480" translate="yes" xml:space="preserve">
          <source>an option value containing pf applied to the first value for which it is defined, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f9344613bb6508c7476bcf30ef26a0b20e5ee9" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the array that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e252f5b5aac07d3c4e29040693cd1cd7ca0e1148" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the collection that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443363e8415433af05dbb2f4afe179f3747d2e56" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the immutable sequence that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8100eefd61d8b104c1408ad5db73a80dc3145cb9" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the immutable set that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f72b490abe7559c7e2a322e1ecd09e5613982d" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the iterable collection that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da54ff5445b228696b82e2ccb4e9e66e5c7d1d29" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the lazy list that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30c66d08ce4040926d32ca74a1bc00d7ec94b0e" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the list that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd65ef466a8555ff614d6017e287d071067453b" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the sequence that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359a29b84330e0dd67a755af553cee3024643c6d" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the string that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579f9d0f4287d11a3d0e012f30d66fc3f144000f" translate="yes" xml:space="preserve">
          <source>an option value containing the first element in the view that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3e4b685a3dd3e223f4803d3288a065fe71c9df" translate="yes" xml:space="preserve">
          <source>an option value containing the first element of this collection with the largest value measured by function f with respect to the ordering &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdd00ee980345f64997e76f3d22843dbebf2d29" translate="yes" xml:space="preserve">
          <source>an option value containing the first element of this collection with the smallest value measured by function f with respect to the ordering &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44158e587f8592e15dbd1a1841370439c34cc8fe" translate="yes" xml:space="preserve">
          <source>an option value containing the first element of this immutable sequence with the largest value measured by function f with respect to the ordering &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564f6b299b53b978a7bbcc8fe4170911034be8c1" translate="yes" xml:space="preserve">
          <source>an option value containing the first element of this immutable sequence with the smallest value measured by function f with respect to the ordering &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e52db6e1028a15483f6c449987d4f26d7773582" translate="yes" xml:space="preserve">
          <source>an option value containing the first element of this iterable collection with the largest value measured by function f with respect to the ordering &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1813859642fce8c31d198f7826ce9e6f739e52f7" translate="yes" xml:space="preserve">
          <source>an option value containing the first element of this iterable collection with the smallest value measured by function f with respect to the ordering &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2a30c59bc80337d1fa24ecccd90f420d757b81" translate="yes" xml:space="preserve">
          <source>an option value containing the first element of this view with the largest value measured by function f with respect to the ordering &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44614f2d1380bd56b8600fcf86a08c0b829030e4" translate="yes" xml:space="preserve">
          <source>an option value containing the first element of this view with the smallest value measured by function f with respect to the ordering &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2713717cf52928ac7b141bdb1ddc5ec706b93ce8" translate="yes" xml:space="preserve">
          <source>an option value containing the largest element of this collection with respect to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b964a790c2dbd02ecd2d3816b0b572a140ab835b" translate="yes" xml:space="preserve">
          <source>an option value containing the largest element of this immutable sequence with respect to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f373d5536e8a769a0ecab8541a43be689bc289" translate="yes" xml:space="preserve">
          <source>an option value containing the largest element of this iterable collection with respect to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcc65dc83b7f0c0a84f35c17ef86a3f47e7c9bd" translate="yes" xml:space="preserve">
          <source>an option value containing the largest element of this view with respect to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db4424590e89497c352a749ad2e14d227bc37d1" translate="yes" xml:space="preserve">
          <source>an option value containing the last element in the immutable sequence that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0db41f07fd5378bed136a5212f5190a1da76df5" translate="yes" xml:space="preserve">
          <source>an option value containing the last element in the sequence that satisfies &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc64498c10fe74d821223ebd8aa8b46e8ed189bf" translate="yes" xml:space="preserve">
          <source>an option value containing the result of &lt;code&gt;reduceLeft(op)&lt;/code&gt; if this collection is nonempty, &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2cda327d58369df2b601a92011083a0f65df43" translate="yes" xml:space="preserve">
          <source>an option value containing the result of &lt;code&gt;reduceLeft(op)&lt;/code&gt; if this immutable sequence is nonempty, &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2dfcd1e033c0cf7844e2ec9ddf86627bdc99eb1" translate="yes" xml:space="preserve">
          <source>an option value containing the result of &lt;code&gt;reduceLeft(op)&lt;/code&gt; if this iterable collection is nonempty, &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604bda53cc4eae56865cdd509c34e5848b9189b9" translate="yes" xml:space="preserve">
          <source>an option value containing the result of &lt;code&gt;reduceLeft(op)&lt;/code&gt; if this view is nonempty, &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a41d5a6ff15d51d6369df50f562cd3628cd7b92" translate="yes" xml:space="preserve">
          <source>an option value containing the result of &lt;code&gt;reduceRight(op)&lt;/code&gt; if this collection is nonempty, &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24643c0dfdc2b1c9dc575b614b02adfc55034f85" translate="yes" xml:space="preserve">
          <source>an option value containing the result of &lt;code&gt;reduceRight(op)&lt;/code&gt; if this immutable sequence is nonempty, &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a362c88acd0e7668af221b326a9bb783153e37" translate="yes" xml:space="preserve">
          <source>an option value containing the result of &lt;code&gt;reduceRight(op)&lt;/code&gt; if this iterable collection is nonempty, &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f456b6dca2e9df62752dcc2ecf419ecd7791ae22" translate="yes" xml:space="preserve">
          <source>an option value containing the result of &lt;code&gt;reduceRight(op)&lt;/code&gt; if this view is nonempty, &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6654ac6cdf22c0fa89017f498c0718aa47665a4" translate="yes" xml:space="preserve">
          <source>an option value containing the smallest element of this collection with respect to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f956f408aaa853db48cd593231d655aea6e919" translate="yes" xml:space="preserve">
          <source>an option value containing the smallest element of this immutable sequence with respect to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1070ee5fd31b4bf17b12bb1c23a325dc93055e04" translate="yes" xml:space="preserve">
          <source>an option value containing the smallest element of this iterable collection with respect to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f604be8be0b2a7fcbe557c739fec33ba11b62936" translate="yes" xml:space="preserve">
          <source>an option value containing the smallest element of this view with respect to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49df375b58ae2c4fa888b5fc5405591d78d5b70b" translate="yes" xml:space="preserve">
          <source>an option value containing the value associated previously with &lt;code&gt;key&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; was not defined in the map before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f51575dcc51e3280effa0528ce8d8261c49068" translate="yes" xml:space="preserve">
          <source>an option value containing the value associated with &lt;code&gt;key&lt;/code&gt; in this map, or &lt;code&gt;None&lt;/code&gt; if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3aef88288137bd96df95bf7b6e43454d9051452" translate="yes" xml:space="preserve">
          <source>an option value containing the value associated with the key before the &lt;code&gt;put&lt;/code&gt; operation was executed, or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; was not defined in the map before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2aa73ca4419d33374c733007a36864cf0f3937" translate="yes" xml:space="preserve">
          <source>an ordinary function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ccbbdfc3654484b7b30b0d31d1cefe2e897bbc" translate="yes" xml:space="preserve">
          <source>and although this is sometimes necessary to do, in particular for testing purposes, blocking in general is discouraged when working with Futures and concurrency in order to avoid potential deadlocks and improve performance. Instead, use callbacks or combinators to remain in the future domain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308aec2e056f40d9a32dc63116ca607145229e09" translate="yes" xml:space="preserve">
          <source>angle, in radians</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e76f544229901c5a942849ee61ac86bda6e5609" translate="yes" xml:space="preserve">
          <source>annotation</source>
          <target state="translated">annotation</target>
        </trans-unit>
        <trans-unit id="688fd8182736521cf910459f3728a72f4d4489e7" translate="yes" xml:space="preserve">
          <source>annotation.Annotation()</source>
          <target state="translated">annotation.Annotation()</target>
        </trans-unit>
        <trans-unit id="0d936b0e7ddfbcec381c78084eec0a7c02d0733a" translate="yes" xml:space="preserve">
          <source>annotation.ClassfileAnnotation()</source>
          <target state="translated">annotation.ClassfileAnnotation()</target>
        </trans-unit>
        <trans-unit id="166d15af5b51da55563c63de5d3723664ea138d4" translate="yes" xml:space="preserve">
          <source>annotation.ConstantAnnotation()</source>
          <target state="translated">annotation.ConstantAnnotation()</target>
        </trans-unit>
        <trans-unit id="8b4995846c98b094d00ebbb52f862841d8093f96" translate="yes" xml:space="preserve">
          <source>annotation.StaticAnnotation()</source>
          <target state="translated">annotation.StaticAnnotation()</target>
        </trans-unit>
        <trans-unit id="7c71cdd6f91e8c19854fd8eea0ef87683a29cc5a" translate="yes" xml:space="preserve">
          <source>annotation.TypeConstraint()</source>
          <target state="translated">annotation.TypeConstraint()</target>
        </trans-unit>
        <trans-unit id="d65cfbc76e550c656edf9b69561a70c161c5481d" translate="yes" xml:space="preserve">
          <source>annotation.compileTimeOnly()</source>
          <target state="translated">annotation.compileTimeOnly()</target>
        </trans-unit>
        <trans-unit id="3635f80fad5b72cc716393d5e25445687029e08a" translate="yes" xml:space="preserve">
          <source>annotation.elidable()</source>
          <target state="translated">annotation.elidable()</target>
        </trans-unit>
        <trans-unit id="a0a851e30014dde8d668d75c5d6f85f40cd5ba51" translate="yes" xml:space="preserve">
          <source>annotation.implicitAmbiguous()</source>
          <target state="translated">annotation.implicitAmbiguous()</target>
        </trans-unit>
        <trans-unit id="3e24fe89c9af8c4df16afc7d7c76d8d6b7b2d864" translate="yes" xml:space="preserve">
          <source>annotation.implicitNotFound()</source>
          <target state="translated">annotation.implicitNotFound()</target>
        </trans-unit>
        <trans-unit id="7194eef3e9a551fccac018da046be6e6418021f1" translate="yes" xml:space="preserve">
          <source>annotation.showAsInfix()</source>
          <target state="translated">annotation.showAsInfix()</target>
        </trans-unit>
        <trans-unit id="9c5dc9423ac2a683a9a494ad380ff77359355b73" translate="yes" xml:space="preserve">
          <source>annotation.strictfp()</source>
          <target state="translated">annotation.strictfp()</target>
        </trans-unit>
        <trans-unit id="e5a94661972a17906953c81d1b4e3dee19b65f69" translate="yes" xml:space="preserve">
          <source>annotation.switch()</source>
          <target state="translated">annotation.switch()</target>
        </trans-unit>
        <trans-unit id="97cf2cdff2deaf7bbb1b34242623a6565e4b6ffa" translate="yes" xml:space="preserve">
          <source>annotation.tailrec()</source>
          <target state="translated">annotation.tailrec()</target>
        </trans-unit>
        <trans-unit id="51c9e8f82a38883748a329dc8bd61a6a274c1693" translate="yes" xml:space="preserve">
          <source>annotation.unspecialized()</source>
          <target state="translated">annotation.unspecialized()</target>
        </trans-unit>
        <trans-unit id="3193e82f8326e98eafc0e1ff4e5cc6d95571f09f" translate="yes" xml:space="preserve">
          <source>annotation.unused()</source>
          <target state="translated">annotation.unused()</target>
        </trans-unit>
        <trans-unit id="fdb14ff9df0dcf431b0023c450406634d6deb250" translate="yes" xml:space="preserve">
          <source>annotation.varargs()</source>
          <target state="translated">annotation.varargs()</target>
        </trans-unit>
        <trans-unit id="8815a29d688f86e7ac1843ecfcfc0fa856620e66" translate="yes" xml:space="preserve">
          <source>anti-symmetric: if &lt;code&gt;lteq(x, y) == &lt;b&gt;true&lt;/b&gt;&lt;/code&gt; and &lt;code&gt;lteq(y, x) == &lt;b&gt;true&lt;/b&gt;&lt;/code&gt; then &lt;code&gt;equiv(x, y) == &lt;b&gt;true&lt;/b&gt;&lt;/code&gt;, for any &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2fa62ca49e01710f4725093acff5e4f63f17b0" translate="yes" xml:space="preserve">
          <source>any2stringadd</source>
          <target state="translated">any2stringadd</target>
        </trans-unit>
        <trans-unit id="cb0dfb2b1a0b04689e34f6d5a61cf8588e8aa971" translate="yes" xml:space="preserve">
          <source>are &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;scala.Byte&lt;/a&gt;, &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;scala.Short&lt;/a&gt;, and &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;scala.Char&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45e7763456138fecca3be131074a4070fac6fa7" translate="yes" xml:space="preserve">
          <source>are &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;scala.Byte&lt;/a&gt;, &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;scala.Short&lt;/a&gt;, and &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;scala.Char&lt;/a&gt;.The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0afbfeb53f5142c2da24467dce6148322ae130" translate="yes" xml:space="preserve">
          <source>are &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;scala.Float&lt;/a&gt; and &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;scala.Double&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="bd3b407dc9c71f7c1760ffdc334c9ac29f375237" translate="yes" xml:space="preserve">
          <source>array with intermediate values. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab720ee98d9979365e6a8fec7ce7fe39869af028" translate="yes" xml:space="preserve">
          <source>asArray</source>
          <target state="translated">asArray</target>
        </trans-unit>
        <trans-unit id="9e99ac38b58f4fa10bff54bbd222e78f6186d5ea" translate="yes" xml:space="preserve">
          <source>asIterable</source>
          <target state="translated">asIterable</target>
        </trans-unit>
        <trans-unit id="2c4e6559a02d255275dfbc8e4f8c8cc83462fa9b" translate="yes" xml:space="preserve">
          <source>asJavaCollection</source>
          <target state="translated">asJavaCollection</target>
        </trans-unit>
        <trans-unit id="d23fedf4acd0228c388a5222bf11b3748984c81c" translate="yes" xml:space="preserve">
          <source>asJavaDictionary</source>
          <target state="translated">asJavaDictionary</target>
        </trans-unit>
        <trans-unit id="7f49d95158a4aff76752035f78a5154da477efff" translate="yes" xml:space="preserve">
          <source>asJavaEnumeration</source>
          <target state="translated">asJavaEnumeration</target>
        </trans-unit>
        <trans-unit id="2daa414315451b5282f9ad62270f18c53f75538b" translate="yes" xml:space="preserve">
          <source>asJavaIterable</source>
          <target state="translated">asJavaIterable</target>
        </trans-unit>
        <trans-unit id="c2dd27059cbe1102d35373deccf2bc608cd90e57" translate="yes" xml:space="preserve">
          <source>asJavaIterator</source>
          <target state="translated">asJavaIterator</target>
        </trans-unit>
        <trans-unit id="53dd38302050b9070d45159eb82fa52e323abc41" translate="yes" xml:space="preserve">
          <source>asPair</source>
          <target state="translated">asPair</target>
        </trans-unit>
        <trans-unit id="d9e491ab502d77d862f1a6248e0e98f991f4109b" translate="yes" xml:space="preserve">
          <source>asScalaBuffer</source>
          <target state="translated">asScalaBuffer</target>
        </trans-unit>
        <trans-unit id="81cd8f64185de77947f4e51799b60cffd7cc00f0" translate="yes" xml:space="preserve">
          <source>asScalaIterator</source>
          <target state="translated">asScalaIterator</target>
        </trans-unit>
        <trans-unit id="48d3f029eec0435b82a0d4f27caa6798b00f49d6" translate="yes" xml:space="preserve">
          <source>asScalaSet</source>
          <target state="translated">asScalaSet</target>
        </trans-unit>
        <trans-unit id="55b10387a2ec68cc3040c261d96c06bd60d07540" translate="yes" xml:space="preserve">
          <source>asTriple</source>
          <target state="translated">asTriple</target>
        </trans-unit>
        <trans-unit id="60544f107576aa75a3a16e2a4d455e8086f18203" translate="yes" xml:space="preserve">
          <source>assertion</source>
          <target state="translated">assertion</target>
        </trans-unit>
        <trans-unit id="577633048497efd19280b4bfe5038c411e9aa3e2" translate="yes" xml:space="preserve">
          <source>assumption</source>
          <target state="translated">assumption</target>
        </trans-unit>
        <trans-unit id="78623a0189af3d2dfe697d02c5d961ed4b676c70" translate="yes" xml:space="preserve">
          <source>atMost</source>
          <target state="translated">atMost</target>
        </trans-unit>
        <trans-unit id="d84ac9b5c7f275c461c0209d05d0f358357b5bec" translate="yes" xml:space="preserve">
          <source>awaitable</source>
          <target state="translated">awaitable</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="acbda5863a70cac4335f08d8b564e5542e278407" translate="yes" xml:space="preserve">
          <source>be automatically managed, and makes it impossible to forget to do so. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53f9f0047165aa85694cc8f16f6b6e88c72e4a8" translate="yes" xml:space="preserve">
          <source>beanGetter</source>
          <target state="translated">beanGetter</target>
        </trans-unit>
        <trans-unit id="4233bc430fb23f4142d71f433c509c3392a42892" translate="yes" xml:space="preserve">
          <source>beanGetter.scala</source>
          <target state="translated">beanGetter.scala</target>
        </trans-unit>
        <trans-unit id="b9a37aef9577a6a5d11e98d42b037940e7fc5d93" translate="yes" xml:space="preserve">
          <source>beanSetter</source>
          <target state="translated">beanSetter</target>
        </trans-unit>
        <trans-unit id="6b6b75cabf1baf02ace2740cecb84bd110b47053" translate="yes" xml:space="preserve">
          <source>beanSetter.scala</source>
          <target state="translated">beanSetter.scala</target>
        </trans-unit>
        <trans-unit id="3cf7c8d099c22f6dcdcb4e2babac6502b1fa8f00" translate="yes" xml:space="preserve">
          <source>beans</source>
          <target state="translated">beans</target>
        </trans-unit>
        <trans-unit id="210e9ca2da2f27c75749711656cd66c051d7b7da" translate="yes" xml:space="preserve">
          <source>beans.BeanProperty()</source>
          <target state="translated">beans.BeanProperty()</target>
        </trans-unit>
        <trans-unit id="8bb594a87657ab4d3e689cf18aad0d459c9633d8" translate="yes" xml:space="preserve">
          <source>beans.BooleanBeanProperty()</source>
          <target state="translated">beans.BooleanBeanProperty()</target>
        </trans-unit>
        <trans-unit id="30daf508e3328242e1c0c273cf91dc6ea1476f09" translate="yes" xml:space="preserve">
          <source>bitmap</source>
          <target state="translated">bitmap</target>
        </trans-unit>
        <trans-unit id="02083f4579e08a612425c0c1a17ee47add783b94" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="translated">body</target>
        </trans-unit>
        <trans-unit id="8dbdb440091d1b57a6fb34b6a9f92e6824ba3ffd" translate="yes" xml:space="preserve">
          <source>boundingColl</source>
          <target state="translated">boundingColl</target>
        </trans-unit>
        <trans-unit id="e53c2ea1fe4bd2b78bf4723c7c155a578e020a25" translate="yes" xml:space="preserve">
          <source>buffer</source>
          <target state="translated">buffer</target>
        </trans-unit>
        <trans-unit id="845060fd6f077015cd03cfb80c4a0a2ede274cba" translate="yes" xml:space="preserve">
          <source>buffer size (defaults to Source.DefaultBufSize)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01103ec0e01f9499e90e73b83d283acb6fec351" translate="yes" xml:space="preserve">
          <source>bufferAsJavaList</source>
          <target state="translated">bufferAsJavaList</target>
        </trans-unit>
        <trans-unit id="f75e94dcc92ecc309ef861e9a10fffb6b1a383af" translate="yes" xml:space="preserve">
          <source>bufferSize</source>
          <target state="translated">bufferSize</target>
        </trans-unit>
        <trans-unit id="f1e11822bb3caa30b1dbc38f36be291d93fa7c50" translate="yes" xml:space="preserve">
          <source>but &lt;code&gt;-Xelide-below OFF&lt;/code&gt; is how you would say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408158643ed564c72fa0921826f8294d71ccbf7c" translate="yes" xml:space="preserve">
          <source>by</source>
          <target state="translated">by</target>
        </trans-unit>
        <trans-unit id="8cf1783fa99f62ca581f6fe8f3cd66b0f9ab9fc3" translate="yes" xml:space="preserve">
          <source>byte</source>
          <target state="translated">byte</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="1f2629ce5426e113276905cbe94388f6becd1f86" translate="yes" xml:space="preserve">
          <source>can define &lt;code&gt;def&lt;/code&gt;s, but no &lt;code&gt;val&lt;/code&gt;s, &lt;code&gt;var&lt;/code&gt;s, or nested &lt;code&gt;traits&lt;/code&gt;s, &lt;code&gt;class&lt;/code&gt;es or &lt;code&gt;object&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201d8b0ccc40e380db63464a568241f8e3d67865" translate="yes" xml:space="preserve">
          <source>cannot be used in type tests or pattern matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb1f56d3fbe09e809244fc8e13671cd876e3860" translate="yes" xml:space="preserve">
          <source>capacity</source>
          <target state="translated">capacity</target>
        </trans-unit>
        <trans-unit id="3ef087a7f00c6d7643fc5d3e6702a06f9ea905bb" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;deadline&quot;&gt;Deadline&lt;/a&gt; extends &lt;a href=&quot;../../index#Ordered%5BT%5D=scala.math.Ordered%5BT%5D&quot; id=&quot;scala.Ordered&quot; name=&quot;scala.Ordered&quot;&gt;Ordered&lt;/a&gt;[&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;] with &lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16fc7d28532f0a882214e06a0fb3e8ab845ed92" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavabiconsumer&quot;&gt;AsJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6443eb9bc1a5140ea505667410c8f4df3e79cd" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavabifunction&quot;&gt;AsJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6679c85be7da21562b14fb71ea7afe6347d669f2" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavabinaryoperator&quot;&gt;AsJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14f0b7c9387c89ae24f19a0bc5372071c42836c" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavabipredicate&quot;&gt;AsJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d36d9140db75644bd156080b2e01a846d16667" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavabooleansupplier&quot;&gt;AsJavaBooleanSupplier&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb59849661323ad09da3a84af4434d2e1304154" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaconsumer&quot;&gt;AsJavaConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcd25d88c334fc2b25601f326321f44b1964ca3" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavadoublebinaryoperator&quot;&gt;AsJavaDoubleBinaryOperator&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292005ea1f843f9d2cd1e310edddc78884f86f91" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavadoubleconsumer&quot;&gt;AsJavaDoubleConsumer&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a8334d1e7e9d701ec44062dbbf504e7af0f323" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavadoublefunction&quot;&gt;AsJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efdaae9952dcbdd78de1fee85c2ee296fc28a8f" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavadoublepredicate&quot;&gt;AsJavaDoublePredicate&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008c46211f574c67d36b6c223c7541a913de47c5" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavadoublesupplier&quot;&gt;AsJavaDoubleSupplier&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d13b3fbbde08316cec9d7c3d0dd0bb1fe453f4" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavadoubletointfunction&quot;&gt;AsJavaDoubleToIntFunction&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc7efdf929c037e8b286fce061a49aa143d538c" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavadoubletolongfunction&quot;&gt;AsJavaDoubleToLongFunction&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc03fe80dcef2095b8ccdf7eb9d279f5cee23a3" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavadoubleunaryoperator&quot;&gt;AsJavaDoubleUnaryOperator&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f7c33f84cf891b93d56af65389b5d10094f3f7" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavafunction&quot;&gt;AsJavaFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26020b320484c5b0ea0309f882286ea3ab31721" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaintbinaryoperator&quot;&gt;AsJavaIntBinaryOperator&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41ce9cd0deab5b2bd516d3ff235a8955b2619e9" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaintconsumer&quot;&gt;AsJavaIntConsumer&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a418bef1e6bb252cf4b19cd1f6a1f45c94a7733" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaintfunction&quot;&gt;AsJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96839771ea9e097b1a1da043e334c0f96dfad57" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaintpredicate&quot;&gt;AsJavaIntPredicate&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b749745fb8955bc0c4e7a37c51d049ff15ea21a" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaintsupplier&quot;&gt;AsJavaIntSupplier&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cfdc021bdb4a267c2c59bfd7a93cc412ecd609" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavainttodoublefunction&quot;&gt;AsJavaIntToDoubleFunction&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86cf27a2cff16ada6e9db0cbf10c8f4a44b48ab" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavainttolongfunction&quot;&gt;AsJavaIntToLongFunction&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f499bffde1c867a6962a6bd5779199b9a189baee" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaintunaryoperator&quot;&gt;AsJavaIntUnaryOperator&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df25f0d5ea8c986163bf3d5c659b771da4ed489b" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavalongbinaryoperator&quot;&gt;AsJavaLongBinaryOperator&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c59f7fe4deb8b5f645e719ab2fcde011dba70d1" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavalongconsumer&quot;&gt;AsJavaLongConsumer&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e677ca5cef45d510b1ac24a8941ac7e705ee79e4" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavalongfunction&quot;&gt;AsJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b3aa069e7407667f320fd4450f83549dab3700" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavalongpredicate&quot;&gt;AsJavaLongPredicate&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7db071b9bd7beb806d9bdf744b7a6aa07dba1d" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavalongsupplier&quot;&gt;AsJavaLongSupplier&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625c871ede7e953f0776fc5330913e783bb33813" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavalongtodoublefunction&quot;&gt;AsJavaLongToDoubleFunction&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d4a1a9e796aa7f1d18dcd94aeb1504433e016a" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavalongtointfunction&quot;&gt;AsJavaLongToIntFunction&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854ca80a6d30704da639155c7e0a8be9b7820ed5" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavalongunaryoperator&quot;&gt;AsJavaLongUnaryOperator&lt;/a&gt;(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144aa4edc69de20189f18acc804010ced6d816a7" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaobjdoubleconsumer&quot;&gt;AsJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d339a52c238013c9837820820711efe6e8d6d577" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaobjintconsumer&quot;&gt;AsJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3557386b8392d0954401cf6a64c1a08819ac9159" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaobjlongconsumer&quot;&gt;AsJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfbe8ff29fd39fa22c781bbf3577c02f23e66d4" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavapredicate&quot;&gt;AsJavaPredicate&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebd47e9ec58928f4ec67f5b89a2665ad75d2ab8" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavasupplier&quot;&gt;AsJavaSupplier&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4030a93b09e58fa83a98bbca16deb02c26303267" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavatodoublebifunction&quot;&gt;AsJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b886c5bbd42266a54036663d5c5ac4211f74b2dd" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavatodoublefunction&quot;&gt;AsJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b866ca54754e19be85a9c12b3043c0bedaa4d0" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavatointbifunction&quot;&gt;AsJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d16a9355200f000d323954b68cd74852afcacd" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavatointfunction&quot;&gt;AsJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafafd7c1bab9911dea73ea83874d6a8e5b39501" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavatolongbifunction&quot;&gt;AsJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebe30ebcd3436da0572dee2c7cb391e965906c2" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavatolongfunction&quot;&gt;AsJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8616caa88da5e0e72d81a796e2e7e61d7be7cc6" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24asjavaunaryoperator&quot;&gt;AsJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb1a7fa344088cc6dc69c476fa63ce71a2652cf" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavabiconsumer&quot;&gt;FromJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967694604a7c7e7f82f4e8172fe7c7e553fdce48" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavabifunction&quot;&gt;FromJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312f1b06ee138a9d025ddedee329fd6ccb4ec45f" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavabinaryoperator&quot;&gt;FromJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79645aaccdfe21a5653dd9bb123b011e3f326f58" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavabipredicate&quot;&gt;FromJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09aaf05044a4223151485088a7e5a9074d479f8e" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavabooleansupplier&quot;&gt;FromJavaBooleanSupplier&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt;&lt;/span&gt;) extends () =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2c5c8908b8be781da3ceb35c2530c1414ad068" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaconsumer&quot;&gt;FromJavaConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff4e8484138b5460f83fecf10604b0a2b10993c" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavadoublebinaryoperator&quot;&gt;FromJavaDoubleBinaryOperator&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3886e3a41c0a5e100b91062b046d01d8797bfd64" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavadoubleconsumer&quot;&gt;FromJavaDoubleConsumer&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bdf5ff2f4c7fd30385a66111a65176f27e052b" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavadoublefunction&quot;&gt;FromJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76036b5127ed6374d969090787b76ca4c638deb2" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavadoublepredicate&quot;&gt;FromJavaDoublePredicate&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13107edf0cc83174c222ae0869d1809cc50f538" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavadoublesupplier&quot;&gt;FromJavaDoubleSupplier&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt;&lt;/span&gt;) extends () =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443b07f32fb623ab8f74dad30d992f109523297e" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavadoubletointfunction&quot;&gt;FromJavaDoubleToIntFunction&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befba891d2bb8418c924176ece041ad4743da8a9" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavadoubletolongfunction&quot;&gt;FromJavaDoubleToLongFunction&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25aadaa0899c0eb526cd11482de0aaac8227ca8" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavadoubleunaryoperator&quot;&gt;FromJavaDoubleUnaryOperator&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733174587564c6d8857e33ca913e6a9fc55903ab" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavafunction&quot;&gt;FromJavaFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b43c49bedc66e3323242e559307aea4489c6820" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaintbinaryoperator&quot;&gt;FromJavaIntBinaryOperator&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0572a1aa9ae6ea9b07b734991dcbec7f7a815433" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaintconsumer&quot;&gt;FromJavaIntConsumer&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5690289f6822c195f1096411e700d052341bf0d8" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaintfunction&quot;&gt;FromJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d298f9eb501eb49b041c59f568b7dd645b3248" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaintpredicate&quot;&gt;FromJavaIntPredicate&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca915bc8564ba1354b41fc329802d12ff853a1b" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaintsupplier&quot;&gt;FromJavaIntSupplier&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt;&lt;/span&gt;) extends () =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382bd40e3922f1a6a4d39f6d787b5a23dd9d52c6" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavainttodoublefunction&quot;&gt;FromJavaIntToDoubleFunction&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34abf10bb7f061d358712c7bfd225e3dab00399" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavainttolongfunction&quot;&gt;FromJavaIntToLongFunction&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bca1cc7bb5ef5219cc96c18d8d96d6cd866af24" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaintunaryoperator&quot;&gt;FromJavaIntUnaryOperator&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406cdb5b4bc66c6b424f15b35acc7f9d74161f90" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavalongbinaryoperator&quot;&gt;FromJavaLongBinaryOperator&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e074d1b6bf49722aeec28f1212f4f04f30182850" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavalongconsumer&quot;&gt;FromJavaLongConsumer&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a894dd5c3664667ae0fd26feebe2f82c53baae6d" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavalongfunction&quot;&gt;FromJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced5cfbdd587ea168623fa6f1b696475f50a701e" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavalongpredicate&quot;&gt;FromJavaLongPredicate&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc282711274906a9f91909df06edf00155a7aacf" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavalongsupplier&quot;&gt;FromJavaLongSupplier&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt;&lt;/span&gt;) extends () =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe079030c8db20c98b4c3fc0619eceefc04cc1a" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavalongtodoublefunction&quot;&gt;FromJavaLongToDoubleFunction&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70758ced2106a0ae828e8fb03d6b873247f18c10" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavalongtointfunction&quot;&gt;FromJavaLongToIntFunction&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8714b45364ba36ede165b6faacc58ef81c72faa6" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavalongunaryoperator&quot;&gt;FromJavaLongUnaryOperator&lt;/a&gt;(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9254449a79394c77fea1dfb4f683ff4b337774a" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaobjdoubleconsumer&quot;&gt;FromJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d82d9ad293670c1745e90396df29a2ffaa46fc" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaobjintconsumer&quot;&gt;FromJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6e08ed719cc8f2c3215fea7d21bd5318c6b00c" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaobjlongconsumer&quot;&gt;FromJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8687f16e72e01cf98feefbfa34f7e2d24119b764" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavapredicate&quot;&gt;FromJavaPredicate&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe79e750c9e3163228646d00f2ca8542ef271491" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavasupplier&quot;&gt;FromJavaSupplier&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends () =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8381cc17cb63cdd746ec01d050746bd2b378b6b5" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavatodoublebifunction&quot;&gt;FromJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33306e7d61f95175033105e516564b1a06fbc616" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavatodoublefunction&quot;&gt;FromJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec4c70a1522f080aeca2086a74f1925f65a996e" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavatointbifunction&quot;&gt;FromJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc787f6e3d066e22bb27ca0014bc2becf48544e" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavatointfunction&quot;&gt;FromJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c9c4945af2d9ed20d63a587c2d7f44fc5d77ce" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavatolongbifunction&quot;&gt;FromJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f6dc0e58249be6a3b39bb163f7163ab1116b55" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavatolongfunction&quot;&gt;FromJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bcd892df08bf865bb15d7213f41364f113da43" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;functionwrappers%24%24fromjavaunaryoperator&quot;&gt;FromJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090b26cfeb85bd78337b6cb4d01d6bd9659e6eee" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;scalareflectionexception&quot;&gt;ScalaReflectionException&lt;/a&gt;(&lt;span name=&quot;msg&quot;&gt;msg: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;) extends &lt;a href=&quot;#Exception=Exception&quot; id=&quot;scala.Exception&quot; name=&quot;scala.Exception&quot;&gt;Exception&lt;/a&gt; with &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dae6b564e6695964a01fcfb9e5d7cd362006ca" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;searching%24%24found&quot;&gt;Found&lt;/a&gt;(&lt;span name=&quot;foundIndex&quot;&gt;foundIndex: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9835e49aec4603a5fb964175bd00c6f5b3405321" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;searching%24%24insertionpoint&quot;&gt;InsertionPoint&lt;/a&gt;(&lt;span name=&quot;insertionPoint&quot;&gt;insertionPoint: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a62d3e663e26b72960c34de63d5794f32b70db0" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;stringcontext&quot;&gt;StringContext&lt;/a&gt;(&lt;span name=&quot;parts&quot;&gt;parts: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;*&lt;/span&gt;) extends &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb35f5c1165d9cfa67aa5d2a64d62a503eb1a76" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;tailcalls%24%24call&quot;&gt;Call&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;rest&quot;&gt;rest: () =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;) extends &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8def79570489aad8fe6cb426a039be9b5dbee5f8" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;tailcalls%24%24cont&quot;&gt;Cont&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;) extends &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;] with &lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464f22c9b30af909d004db2f8244256bdf2b1a5e" translate="yes" xml:space="preserve">
          <source>case class &lt;a href=&quot;tailcalls%24%24done&quot;&gt;Done&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;) extends &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69ae00354eb600da431bbe6f5dc7419ecc1df38" translate="yes" xml:space="preserve">
          <source>case classAsJavaBiConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48f6f59ed4009183c8361fe411a2ccea56aaed0" translate="yes" xml:space="preserve">
          <source>case classAsJavaBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05149e688b59e00b05530acd0a66db532d758ec" translate="yes" xml:space="preserve">
          <source>case classAsJavaBiPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f688c748ecb5ff10bc0a9d133bc1f9b7d8b79377" translate="yes" xml:space="preserve">
          <source>case classAsJavaBinaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85021ae63389d2dc6678aec661cf38ed7b9cffd8" translate="yes" xml:space="preserve">
          <source>case classAsJavaBooleanSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7797d62ee58e0849d2f7f0e3dcb42f0ebdd9278" translate="yes" xml:space="preserve">
          <source>case classAsJavaConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c215f6172146b1a60a09005005a967790a19b6" translate="yes" xml:space="preserve">
          <source>case classAsJavaDoubleBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b25b19bcf3a40c7c30036496b0382eba4d29d28" translate="yes" xml:space="preserve">
          <source>case classAsJavaDoubleConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51c3f922d7bc8d1ed23ea04f3d6d3dc5e69ac2c" translate="yes" xml:space="preserve">
          <source>case classAsJavaDoubleFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d04cc6cf0d0b1c0538808340bfd67a454fc096c" translate="yes" xml:space="preserve">
          <source>case classAsJavaDoublePredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be278adedc6580d1f564f49c2a15a085350fb3c3" translate="yes" xml:space="preserve">
          <source>case classAsJavaDoubleSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7800e7163007a91202c26f770d701c12f34a5853" translate="yes" xml:space="preserve">
          <source>case classAsJavaDoubleToIntFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4157cd035f46540458d607a802efc6100fb760" translate="yes" xml:space="preserve">
          <source>case classAsJavaDoubleToLongFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6317720219ae8c1fc0a640cad1757ee5def6c64d" translate="yes" xml:space="preserve">
          <source>case classAsJavaDoubleUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd6fe8dc81649c24d1b987d2149ef2b4bc0e80d" translate="yes" xml:space="preserve">
          <source>case classAsJavaFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1e5da09e69e922ae956c826bff4857189cd5b9" translate="yes" xml:space="preserve">
          <source>case classAsJavaIntBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f584a713883fb96df84e1ca1de344ed7bdb250" translate="yes" xml:space="preserve">
          <source>case classAsJavaIntConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95660d608811dcaa3bc19e4384b5e7f03882f0ae" translate="yes" xml:space="preserve">
          <source>case classAsJavaIntFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50f57a102f4ff6ce3ed7545b128803e09899d88" translate="yes" xml:space="preserve">
          <source>case classAsJavaIntPredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3425328268022c68281811d8713f2cbfdd7b47" translate="yes" xml:space="preserve">
          <source>case classAsJavaIntSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b455fb51996d3fec8a5f62e8095c7961d2cfa8ff" translate="yes" xml:space="preserve">
          <source>case classAsJavaIntToDoubleFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d757d2981676a94f58c9b187bd39ec50b51234" translate="yes" xml:space="preserve">
          <source>case classAsJavaIntToLongFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8761fe48abc7345d6e7577f179b1929a3b797d3e" translate="yes" xml:space="preserve">
          <source>case classAsJavaIntUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa2284e61c543db3c716a3ea65f44b5f7aa606a" translate="yes" xml:space="preserve">
          <source>case classAsJavaLongBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60127b1c4f45f7d4a7f1f4e1e633fd447d66b6cf" translate="yes" xml:space="preserve">
          <source>case classAsJavaLongConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493a6f54e5fb992b6c912785f75231e8dd9d8877" translate="yes" xml:space="preserve">
          <source>case classAsJavaLongFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f2ce05115e2db2fcca916f6381babc042b4d37" translate="yes" xml:space="preserve">
          <source>case classAsJavaLongPredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fa6dea1c2ac6137d0450d3693f9720d0f5371e" translate="yes" xml:space="preserve">
          <source>case classAsJavaLongSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348b98b8cecb363fc5b7d7a8de7b001409927488" translate="yes" xml:space="preserve">
          <source>case classAsJavaLongToDoubleFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ebead9db93578260865fd480f584bca2db1a7f" translate="yes" xml:space="preserve">
          <source>case classAsJavaLongToIntFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91310262be169a5e606a574aa0fc13a6902f125d" translate="yes" xml:space="preserve">
          <source>case classAsJavaLongUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f414f05c5805c9413a53af50f121938252fb2e" translate="yes" xml:space="preserve">
          <source>case classAsJavaObjDoubleConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2851a273f8e94ebe83346a31b6543b45e968b5c2" translate="yes" xml:space="preserve">
          <source>case classAsJavaObjIntConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a0ee718cf1b1cb8d970c9f832592f9c071700f" translate="yes" xml:space="preserve">
          <source>case classAsJavaObjLongConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097f7d49a0e72bac4aa8e74d4acf075c6a1ac140" translate="yes" xml:space="preserve">
          <source>case classAsJavaPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c1a446c6dda852d44a3ff27be2934a5a8a8768" translate="yes" xml:space="preserve">
          <source>case classAsJavaSupplier[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838d83d4a5104e58187d03d135d9a52229a59796" translate="yes" xml:space="preserve">
          <source>case classAsJavaToDoubleBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0e744cf8e0653f08042663ab40112efedfb0ca" translate="yes" xml:space="preserve">
          <source>case classAsJavaToDoubleFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d89c5872d9a4ac47b8f8d1f00dba5398f305f1" translate="yes" xml:space="preserve">
          <source>case classAsJavaToIntBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ff3001c6e8b535ec5fda23b7e933368c459a1d" translate="yes" xml:space="preserve">
          <source>case classAsJavaToIntFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fc95f5c4694fd5453197be4955d4073107bb6b" translate="yes" xml:space="preserve">
          <source>case classAsJavaToLongBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c07c1e0ef907214d0505a76a09461dd0ff0e042" translate="yes" xml:space="preserve">
          <source>case classAsJavaToLongFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba367f0f14a074033be0e0e4a6b9c37428da7ab" translate="yes" xml:space="preserve">
          <source>case classAsJavaUnaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;) extends &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;] with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdfaf8728f2443c7c7bdd523c44f42ef942bbaa" translate="yes" xml:space="preserve">
          <source>case classCall[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;rest&quot;&gt;rest: () =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;) extends &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cdeb5f51736dde8c96007875234dae46c156234" translate="yes" xml:space="preserve">
          <source>case classCont[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;) extends &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;] with &lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d64c6abd710745a9c9a34ad700019e5035c633" translate="yes" xml:space="preserve">
          <source>case classDeadline extends &lt;a href=&quot;../../index#Ordered%5BT%5D=scala.math.Ordered%5BT%5D&quot; id=&quot;scala.Ordered&quot; name=&quot;scala.Ordered&quot;&gt;Ordered&lt;/a&gt;[&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;] with &lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ccd54ee8aa3dd78d439d8c4eeca39360e92459" translate="yes" xml:space="preserve">
          <source>case classDone[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;) extends &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4ef785af65f222f90a48f0cc9b01aacbcc7a28" translate="yes" xml:space="preserve">
          <source>case classFound(&lt;span name=&quot;foundIndex&quot;&gt;foundIndex: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81eec6d3400f8c670aedb7b9384fe62e76cbe49" translate="yes" xml:space="preserve">
          <source>case classFromJavaBiConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19eec40621b65300a6df515702f82064a9bc7496" translate="yes" xml:space="preserve">
          <source>case classFromJavaBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcb7a3d7af5976d10bcec2c0643741235160387" translate="yes" xml:space="preserve">
          <source>case classFromJavaBiPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad3501f49203118fc1fc1ddaf90896ff1d04e9a" translate="yes" xml:space="preserve">
          <source>case classFromJavaBinaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255002ff19c841941d7209d8fe69dcea47ea6cc9" translate="yes" xml:space="preserve">
          <source>case classFromJavaBooleanSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt;&lt;/span&gt;) extends () =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c955ddf53b79a9ef561f376aed18c1a807e7fd2" translate="yes" xml:space="preserve">
          <source>case classFromJavaConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce30144c27990fc0a9789d92417929d316bed456" translate="yes" xml:space="preserve">
          <source>case classFromJavaDoubleBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8289070a704f78091960074b8b53298496c90847" translate="yes" xml:space="preserve">
          <source>case classFromJavaDoubleConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb7f48f23779cc5704625e30c1bb3706410e9cc" translate="yes" xml:space="preserve">
          <source>case classFromJavaDoubleFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bc41865eb4bb878594376727b170a94aaaf11b" translate="yes" xml:space="preserve">
          <source>case classFromJavaDoublePredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf5d3e6201c0b5bd1743e1e7b0df7be5f1f0664" translate="yes" xml:space="preserve">
          <source>case classFromJavaDoubleSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt;&lt;/span&gt;) extends () =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f6b108d8c6e00f71de9ff1800bf2f24b28d0ff" translate="yes" xml:space="preserve">
          <source>case classFromJavaDoubleToIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23d990ce43a09864968bba522ae3a2b2c65f3d5" translate="yes" xml:space="preserve">
          <source>case classFromJavaDoubleToLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb616db55b547241080bc5a20a462e18cebb33a" translate="yes" xml:space="preserve">
          <source>case classFromJavaDoubleUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03dc37538ba321b85620b423c0f4d08234439a6" translate="yes" xml:space="preserve">
          <source>case classFromJavaFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c67eb6263ff9ad4295d1947610014336b401751" translate="yes" xml:space="preserve">
          <source>case classFromJavaIntBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c432e5a7a66257b119445dbba2d9182faaba0e7b" translate="yes" xml:space="preserve">
          <source>case classFromJavaIntConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a57508cd442a845ace2bdd92d4e4485a91bb73c" translate="yes" xml:space="preserve">
          <source>case classFromJavaIntFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598ef1e9b4c461b06eed54c2847f09843009e646" translate="yes" xml:space="preserve">
          <source>case classFromJavaIntPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937619d2d7e719093eca1e8f48960bb18c560c63" translate="yes" xml:space="preserve">
          <source>case classFromJavaIntSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt;&lt;/span&gt;) extends () =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf9dc78ae450641448f178f8c331edae626b062" translate="yes" xml:space="preserve">
          <source>case classFromJavaIntToDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0a6132df1d2c6847b32a64bd4b76bae8a3715d" translate="yes" xml:space="preserve">
          <source>case classFromJavaIntToLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e20e42957858050ce1a0c617189ba7556786a5c" translate="yes" xml:space="preserve">
          <source>case classFromJavaIntUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a516f1d3e99b172944e81beee188d0fbec03a1" translate="yes" xml:space="preserve">
          <source>case classFromJavaLongBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bdd65185b950821e66271b0f4f8a596f758142" translate="yes" xml:space="preserve">
          <source>case classFromJavaLongConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa02c08ddbac7564c1423b3be34b0a8906457d5" translate="yes" xml:space="preserve">
          <source>case classFromJavaLongFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655e138d4d0d10362f852aa410c26a525fd314ef" translate="yes" xml:space="preserve">
          <source>case classFromJavaLongPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1654b5c06772502b3e806fe4d21f4d076b2705ed" translate="yes" xml:space="preserve">
          <source>case classFromJavaLongSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt;&lt;/span&gt;) extends () =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317a1c3618245b221e9f7e9b22810e8c70b289bd" translate="yes" xml:space="preserve">
          <source>case classFromJavaLongToDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a72b07ed72adbda52fb3ad0dec62e54dcaebfa5" translate="yes" xml:space="preserve">
          <source>case classFromJavaLongToIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24763041ab9b02ecf8c52375e2dfa1790ceb824" translate="yes" xml:space="preserve">
          <source>case classFromJavaLongUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;&lt;/span&gt;) extends (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b501603766bae2b043b93e730f688ec5181096ab" translate="yes" xml:space="preserve">
          <source>case classFromJavaObjDoubleConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6d1a69285a1ebb700b9fde1a7c7c1691113306" translate="yes" xml:space="preserve">
          <source>case classFromJavaObjIntConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e27f73ca69ac9ac5dc5abbf929515e877cd0305" translate="yes" xml:space="preserve">
          <source>case classFromJavaObjLongConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af01fe3c87a5fa1815bee5a62c2030d19af80b0f" translate="yes" xml:space="preserve">
          <source>case classFromJavaPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462f02cd87cc3e2929ac6b468ae8ea5b7ca396ba" translate="yes" xml:space="preserve">
          <source>case classFromJavaSupplier[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends () =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac774630f8c16df61ebf26f4a2a5205d2218d2f" translate="yes" xml:space="preserve">
          <source>case classFromJavaToDoubleBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cef10afbca8aa7dfa1899e73ad0ae24a039f30" translate="yes" xml:space="preserve">
          <source>case classFromJavaToDoubleFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00918b7232c5bd4f988f0614f8f33239fc713448" translate="yes" xml:space="preserve">
          <source>case classFromJavaToIntBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70325ce93ec3cde63f33b5411840626d357c4fd" translate="yes" xml:space="preserve">
          <source>case classFromJavaToIntFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6101a97907fefed93543e40c8fa3162f12d013f" translate="yes" xml:space="preserve">
          <source>case classFromJavaToLongBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335f560debe3751e662e389eb73f187f177ca9a8" translate="yes" xml:space="preserve">
          <source>case classFromJavaToLongFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05b3ece80fec4bd0a84f3f35ccb2ad12060ec86" translate="yes" xml:space="preserve">
          <source>case classFromJavaUnaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;) extends (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e464e30c33eaa65d753bc98bc8bcc0f4b258fa2a" translate="yes" xml:space="preserve">
          <source>case classInsertionPoint(&lt;span name=&quot;insertionPoint&quot;&gt;insertionPoint: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;) extends &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt; with &lt;a href=&quot;../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8b70187f9725bbf88fcc36e64b993eeb726e90" translate="yes" xml:space="preserve">
          <source>case classScalaReflectionException(&lt;span name=&quot;msg&quot;&gt;msg: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;) extends &lt;a href=&quot;index#Exception=Exception&quot; id=&quot;scala.Exception&quot; name=&quot;scala.Exception&quot;&gt;Exception&lt;/a&gt; with &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da17df06021793274ae987ed23b92a88afc357e" translate="yes" xml:space="preserve">
          <source>case classStringContext(&lt;span name=&quot;parts&quot;&gt;parts: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;*&lt;/span&gt;) extends &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt; with &lt;a href=&quot;index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccadf5de3d738fbe992636fbe8daf8e3fae6b80c" translate="yes" xml:space="preserve">
          <source>cause</source>
          <target state="translated">cause</target>
        </trans-unit>
        <trans-unit id="1f401e4ee19fff6b02013b62de18fcaf1d5cdb6f" translate="yes" xml:space="preserve">
          <source>certainty</source>
          <target state="translated">certainty</target>
        </trans-unit>
        <trans-unit id="482bd64c6c9f098c9ef8b77b8f870517bf33a1b9" translate="yes" xml:space="preserve">
          <source>ch</source>
          <target state="translated">ch</target>
        </trans-unit>
        <trans-unit id="230ea5f2a1c5fb9857231ba6979699b3efd72590" translate="yes" xml:space="preserve">
          <source>chaining</source>
          <target state="translated">chaining</target>
        </trans-unit>
        <trans-unit id="71fafc4e2fc1e47e234762a96b80512b6b5534c2" translate="yes" xml:space="preserve">
          <source>char</source>
          <target state="translated">char</target>
        </trans-unit>
        <trans-unit id="4e10217973d646102f51de3abb85fe8773397a74" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;../../collection/iterator%24groupediterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;] extends &lt;a href=&quot;../../collection/abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;a href=&quot;../../collection/immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919bc9a3aeffd2aad508fc862589e257977dc358" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;../../math/ordering%24orderingops&quot;&gt;OrderingOps&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702ddbae2a63caea634e09ffbe9c8272c201a691" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;../collection/iterator%24groupediterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;] extends &lt;a href=&quot;../collection/abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;a href=&quot;../collection/immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc91c515941c367a0baf62df37c1a40b214117aa" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;../collection/mapops%24keyset&quot;&gt;KeySet&lt;/a&gt; extends &lt;a href=&quot;../collection/abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;] with &lt;a href=&quot;../collection/mapops%24genkeyset&quot; id=&quot;scala.collection.MapOps.GenKeySet&quot; name=&quot;scala.collection.MapOps.GenKeySet&quot;&gt;GenKeySet&lt;/a&gt; with &lt;a href=&quot;../collection/generic/defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2abf7755e84cdff2c2a64e4d0898812a69d38b4" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;../enumeration%24val&quot;&gt;Val&lt;/a&gt; extends &lt;a href=&quot;../enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf9c3fa2816789499bae36389a62e27579f68d1" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;../enumeration%24valueset&quot;&gt;ValueSet&lt;/a&gt; extends &lt;a href=&quot;../collection/immutable/abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;a href=&quot;../enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;] with &lt;a href=&quot;../collection/immutable/sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;a href=&quot;../enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;] with &lt;a href=&quot;../collection/immutable/sortedsetops&quot; id=&quot;scala.collection.immutable.SortedSetOps&quot; name=&quot;scala.collection.immutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;a href=&quot;../enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;a href=&quot;../collection/immutable/sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;, &lt;a href=&quot;../enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;] with &lt;a href=&quot;../collection/strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[&lt;a href=&quot;../enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;a href=&quot;../collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;, &lt;a href=&quot;../enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;] with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e36ff6aafb16f9af6e5e29e340a156300e15f06" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;../iterator%24groupediterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;] extends &lt;a href=&quot;../abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59053366ed77ae6849eb14b6eab6afd515034524" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;../mapops%24keyset&quot;&gt;KeySet&lt;/a&gt; extends &lt;a href=&quot;../abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;] with &lt;a href=&quot;../mapops%24genkeyset&quot; id=&quot;scala.collection.MapOps.GenKeySet&quot; name=&quot;scala.collection.MapOps.GenKeySet&quot;&gt;GenKeySet&lt;/a&gt; with &lt;a href=&quot;../generic/defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bd7b097024bbce49854d8ef291c4a9b8e0524a" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;../sortedmapops%24keysortedset&quot;&gt;KeySortedSet&lt;/a&gt; extends &lt;a href=&quot;../sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;] with &lt;a href=&quot;../sortedmapops#GenKeySetextendsAnyRef&quot; id=&quot;scala.collection.MapOps.GenKeySet&quot; name=&quot;scala.collection.MapOps.GenKeySet&quot;&gt;GenKeySet&lt;/a&gt; with &lt;a href=&quot;../sortedmapops%24genkeysortedset&quot; id=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot;&gt;GenKeySortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35285166e17e995e27aa2328e93b65579287e8b" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;anyaccumulator%24%24serializationproxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d95f7528fd487792bb7485017a4d6e36156894" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;anyrefmap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;] with &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;, &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]] with &lt;a href=&quot;../strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]] with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad58fd5b1abd9bd245308dcc4f667e13e70014a" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;anystepper%24%24anystepperspliterator&quot;&gt;AnyStepperSpliterator&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;span name=&quot;java.util.Spliterator&quot;&gt;Spliterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e49bc6d5b5b68f3fcae7134d3a779c23ac0c54f" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.mutable.IndexedSeqOps&quot; name=&quot;scala.collection.mutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;, &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;../strictoptimizedseqops&quot; id=&quot;scala.collection.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;, &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;../iterablefactorydefaults&quot; id=&quot;scala.collection.IterableFactoryDefaults&quot; name=&quot;scala.collection.IterableFactoryDefaults&quot;&gt;IterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;] with &lt;a href=&quot;../generic/defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16fc263d466b5ace5eb3a9137935e8534af826e" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;arraybuilder%24%24ofboolean&quot;&gt;ofBoolean&lt;/a&gt; extends &lt;a href=&quot;arraybuilder&quot; id=&quot;scala.collection.mutable.ArrayBuilder&quot; name=&quot;scala.collection.mutable.ArrayBuilder&quot;&gt;ArrayBuilder&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27fcb0b4079f5a4f8747ad6ac98125513887990" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;arraydeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.mutable.IndexedSeqOps&quot; name=&quot;scala.collection.mutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;../strictoptimizedseqops&quot; id=&quot;scala.collection.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;../iterablefactorydefaults&quot; id=&quot;scala.collection.IterableFactoryDefaults&quot; name=&quot;scala.collection.IterableFactoryDefaults&quot;&gt;IterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;] with &lt;a href=&quot;arraydequeops&quot; id=&quot;scala.collection.mutable.ArrayDequeOps&quot; name=&quot;scala.collection.mutable.ArrayDequeOps&quot;&gt;ArrayDequeOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;cloneable&quot; id=&quot;scala.collection.mutable.Cloneable&quot; name=&quot;scala.collection.mutable.Cloneable&quot;&gt;Cloneable&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;../generic/defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc37a583ca853fdcb3a631d2529a912d13bef5fc" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;arrayops%24%24withfilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879f7f71587f699eb21acc08287b0bade72780ba" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;beanproperty&quot;&gt;BeanProperty&lt;/a&gt; extends &lt;a href=&quot;../annotation/annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt; with &lt;a href=&quot;../annotation/staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34571091ed34a4e9d174df7cde8e7fa86c2a3c46" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;bitset&quot;&gt;BitSet&lt;/a&gt; extends &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;] with &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;] with &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.mutable.SortedSetOps&quot; name=&quot;scala.collection.mutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;] with &lt;a href=&quot;../strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;] with &lt;a href=&quot;../strictoptimizedsortedsetops&quot; id=&quot;scala.collection.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;] with &lt;a href=&quot;../bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;collection.BitSet&lt;/a&gt; with &lt;a href=&quot;../bitsetops&quot; id=&quot;scala.collection.BitSetOps&quot; name=&quot;scala.collection.BitSetOps&quot;&gt;BitSetOps&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;] with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90ca89a13476b2588d5fa9b7213c2cbe70caae6" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;booleanbeanproperty&quot;&gt;BooleanBeanProperty&lt;/a&gt; extends &lt;a href=&quot;../annotation/annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt; with &lt;a href=&quot;../annotation/staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5171508563ee42bc530deb3745aa92eda6653126" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;breaks&quot;&gt;Breaks&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9dfd3a8aaef6e094042bd21bdecc82aef5039b" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;bufferedsource&quot;&gt;BufferedSource&lt;/a&gt; extends &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7891f76eff26bef7b6904cc736a2c914642955bf" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;bufferedsource%24bufferedlineiterator&quot;&gt;BufferedLineIterator&lt;/a&gt; extends &lt;a href=&quot;../collection/abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;] with &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ea4906e31aeadec357be96f0fe67664c5ca593" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;classtagiterablefactory%24%24anyiterabledelegate&quot;&gt;AnyIterableDelegate&lt;/a&gt;[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;] extends &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b8746289f53a4c94aba442a0d6777cf34e8f7a" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;classtagiterablefactory%24%24delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;] extends &lt;a href=&quot;evidenceiterablefactory%24%24delegate&quot; id=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot; name=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot;&gt;EvidenceIterableFactory.Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;, &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;] with &lt;a href=&quot;classtagiterablefactory&quot; id=&quot;scala.collection.ClassTagIterableFactory&quot; name=&quot;scala.collection.ClassTagIterableFactory&quot;&gt;ClassTagIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8afe9ff7efadfa61c5f9bd7b95a9d1c275ec98" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;classtagseqfactory%24%24anyseqdelegate&quot;&gt;AnySeqDelegate&lt;/a&gt;[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC.A&quot;&gt;A&lt;/span&gt;]]&lt;/span&gt;] extends &lt;a href=&quot;classtagiterablefactory%24%24anyiterabledelegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot;&gt;AnyIterableDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;] with &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43d12ba4bc08fbd654e69122a32e1c281e77e06" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;classtagseqfactory%24%24delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC.A&quot;&gt;A&lt;/span&gt;]]&lt;/span&gt;] extends &lt;a href=&quot;classtagiterablefactory%24%24delegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot;&gt;ClassTagIterableFactory.Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;] with &lt;a href=&quot;classtagseqfactory&quot; id=&quot;scala.collection.ClassTagSeqFactory&quot; name=&quot;scala.collection.ClassTagSeqFactory&quot;&gt;ClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96628c04dc3c442a22ee1824c79e09cacc24bb6" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;codec&quot;&gt;Codec&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6900f88014be671515df4a5848b9476620cf5b39" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;deprecated&quot;&gt;deprecated&lt;/a&gt; extends &lt;a href=&quot;annotation/annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt; with &lt;a href=&quot;annotation/staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7452e68ad8c91b4b7d6f52b6fdd344c552060c" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;deprecatedname&quot;&gt;deprecatedName&lt;/a&gt; extends &lt;a href=&quot;annotation/annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt; with &lt;a href=&quot;annotation/staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467338375184823cbcae588103dc2a2a1ee3050a" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;deprecatedoverriding&quot;&gt;deprecatedOverriding&lt;/a&gt; extends &lt;a href=&quot;annotation/annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt; with &lt;a href=&quot;annotation/staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba86532b114c08f01832d645b5bcdf3dc04f4d05" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;doubleaccumulator%24%24serializationproxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b9498b237dffa785dbf68b71858a2b546df7c2" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;doublestepper%24%24doublestepperspliterator&quot;&gt;DoubleStepperSpliterator&lt;/a&gt; extends &lt;span name=&quot;java.util.Spliterator.OfDouble&quot;&gt;OfDouble&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7a9aea45a87487fc006e494b39799680e9a6a2" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;dynamicvariable&quot;&gt;DynamicVariable&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d09bc910610562cf01b3894d69636f1b5762b94" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;enumeration%24val&quot;&gt;Val&lt;/a&gt; extends &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; with &lt;a href=&quot;index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba52a31b1a91ab8350068f3efa95d1be825e66d" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;enumeration%24valueset&quot;&gt;ValueSet&lt;/a&gt; extends &lt;a href=&quot;collection/immutable/abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;] with &lt;a href=&quot;collection/immutable/sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;] with &lt;a href=&quot;collection/immutable/sortedsetops&quot; id=&quot;scala.collection.immutable.SortedSetOps&quot; name=&quot;scala.collection.immutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;a href=&quot;collection/immutable/sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;, &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;] with &lt;a href=&quot;collection/strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;, &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;] with &lt;a href=&quot;index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb3b4fc7ee452f052f6d18f8f5033bf6429fa32" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;evidenceiterablefactory%24%24delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;Ev&quot;&gt;Ev[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;] extends &lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69279c82c28c4f1125995a766124c9f4565ca9d9" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;exception%24%24by&quot;&gt;By&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafa1483efe4217be66e529c2a6eea04433508bc" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;exception%24%24catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;+T&lt;/span&gt;] extends &lt;a href=&quot;exception%24%24described&quot; id=&quot;scala.util.control.Exception.Described&quot; name=&quot;scala.util.control.Exception.Described&quot;&gt;Described&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a973f3810df227eea8d08664f4ea5f0f5af13207" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;exception%24%24finally&quot;&gt;Finally&lt;/a&gt; extends &lt;a href=&quot;exception%24%24described&quot; id=&quot;scala.util.control.Exception.Described&quot; name=&quot;scala.util.control.Exception.Described&quot;&gt;Described&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a335f30c38ed0fbdc18adaaa6ba21038ac81530" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;fileprocesslogger&quot;&gt;FileProcessLogger&lt;/a&gt; extends &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt; with &lt;span name=&quot;java.io.Closeable&quot;&gt;Closeable&lt;/span&gt; with &lt;span name=&quot;java.io.Flushable&quot;&gt;Flushable&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7a1ffac6d44586ea2ad0149ac06f568d371115" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;fractional%24fractionalops&quot;&gt;FractionalOps&lt;/a&gt; extends &lt;a href=&quot;#NumericOpsextendsAnyRef&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d9ca015dddb861b7fbf3d199884b6a61814e48" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;fractional%24fractionalops&quot;&gt;FractionalOps&lt;/a&gt; extends &lt;a href=&quot;fractional#NumericOpsextendsAnyRef&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e032eae1c02669958bc0f0bdd16ecbd4de38779a" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;growablebuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[&lt;span name=&quot;Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;To&quot;&gt;To &amp;lt;: &lt;a href=&quot;growable&quot; id=&quot;scala.collection.mutable.Growable&quot; name=&quot;scala.collection.mutable.Growable&quot;&gt;Growable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;]&lt;/span&gt;] extends &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0c8bd8e00cb19cd313fb42f594df6d7cc1c0e1" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;hashmap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;] with &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;, &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]] with &lt;a href=&quot;../strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]] with &lt;a href=&quot;../strictoptimizedmapops&quot; id=&quot;scala.collection.StrictOptimizedMapOps&quot; name=&quot;scala.collection.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;, &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]] with &lt;a href=&quot;../mapfactorydefaults&quot; id=&quot;scala.collection.MapFactoryDefaults&quot; name=&quot;scala.collection.MapFactoryDefaults&quot;&gt;MapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;] with &lt;a href=&quot;../../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f917c3d03bcec5c1791d8ad4d09dd7a06981d9" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;+A&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24appended&quot; id=&quot;scala.collection.SeqView.Appended&quot; name=&quot;scala.collection.SeqView.Appended&quot;&gt;SeqView.Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0043e5d3185c96f87c57500438a8ca83233200" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24concat&quot; id=&quot;scala.collection.SeqView.Concat&quot; name=&quot;scala.collection.SeqView.Concat&quot;&gt;SeqView.Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66026b75d0fb9a785490d3c9403ea08d8a2b061" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24drop&quot; id=&quot;scala.collection.SeqView.Drop&quot; name=&quot;scala.collection.SeqView.Drop&quot;&gt;SeqView.Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0708022ad9077fb5c193157bd358c9ff4c4f94e0" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24dropright&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24dropright&quot; id=&quot;scala.collection.SeqView.DropRight&quot; name=&quot;scala.collection.SeqView.DropRight&quot;&gt;SeqView.DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220034ac78cd0d2341d9a4b39931e17de2c31226" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;+A&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24id&quot; id=&quot;scala.collection.SeqView.Id&quot; name=&quot;scala.collection.SeqView.Id&quot;&gt;SeqView.Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1496119b6b0e2ab5e639fd3b67e2f0e76de1d89e" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24map&quot; id=&quot;scala.collection.SeqView.Map&quot; name=&quot;scala.collection.SeqView.Map&quot;&gt;SeqView.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6718ad0aae92414104c8c4db73a16442bf6711bc" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;+A&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24prepended&quot; id=&quot;scala.collection.SeqView.Prepended&quot; name=&quot;scala.collection.SeqView.Prepended&quot;&gt;SeqView.Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa27b9bbc3ed2951e6375e51ab3e46ce905dbb7" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24reverse&quot;&gt;Reverse&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24reverse&quot; id=&quot;scala.collection.SeqView.Reverse&quot; name=&quot;scala.collection.SeqView.Reverse&quot;&gt;SeqView.Reverse&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b843a4f3a4c99972c2ca7a73e49e2fcf161c99e6" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24slice&quot;&gt;Slice&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a7cd0519e438daa899e821b0a2c0677a6c6b64" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24take&quot; id=&quot;scala.collection.SeqView.Take&quot; name=&quot;scala.collection.SeqView.Take&quot;&gt;SeqView.Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8ad53c9ce945b5ee41a6f64fd9b0573e469cc4" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;indexedseqview%24%24takeright&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;seqview%24%24takeright&quot; id=&quot;scala.collection.SeqView.TakeRight&quot; name=&quot;scala.collection.SeqView.TakeRight&quot;&gt;SeqView.TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a98976ea8845b810bf8d4fdc9fe21377a5f1fe" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;inline&quot;&gt;inline&lt;/a&gt; extends &lt;a href=&quot;annotation/annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt; with &lt;a href=&quot;annotation/staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634e903843013578406521530501e8f793e38fa9" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;intaccumulator%24%24serializationproxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68db3de30985a53923ab2ebcc05573d0efc2037c" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;integral%24integralops&quot;&gt;IntegralOps&lt;/a&gt; extends &lt;a href=&quot;#NumericOpsextendsAnyRef&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8817ab58410150b9f4a333059ffa76ba0a24cd7" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;integral%24integralops&quot;&gt;IntegralOps&lt;/a&gt; extends &lt;a href=&quot;integral#NumericOpsextendsAnyRef&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792d081e94d76a529fb1b6f78e8b9a3e8fcbb553" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;intstepper%24%24intstepperspliterator&quot;&gt;IntStepperSpliterator&lt;/a&gt; extends &lt;span name=&quot;java.util.Spliterator.OfInt&quot;&gt;OfInt&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5341cfb0c1c62116fb911f6ef9d0d0c70e6d0b44" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;iterablefactory%24%24delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;] extends &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b3ca85549b5948ca4f295a0a53dba25e999d03" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;iterableops%24%24withfilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;+A&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;+CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;] extends &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;collection.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;] with &lt;a href=&quot;../index#Serializable=java.io.Serializable&quot; id=&quot;scala.Serializable&quot; name=&quot;scala.Serializable&quot;&gt;Serializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef28eb481076fd0030ab73da06e7ce256f8e4a5" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;iterator%24groupediterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;] extends &lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bce239b2d964f7c7e114bdc12dd7ed0c7c4507" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;javaconverters%24%24asjava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6a5cacf6179c0b8981c401c3afa0976df12b0c" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;javaconverters%24%24asjavacollection&quot;&gt;AsJavaCollection&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb8e7db356ed9185fff0a83a3a96da3c3c1f8e1" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;javaconverters%24%24asjavadictionary&quot;&gt;AsJavaDictionary&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8990faf1f4e33e01ba4c7cbc2592c51dd97dbad" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;javaconverters%24%24asjavaenumeration&quot;&gt;AsJavaEnumeration&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd1fb81bc888712953e17bb7870890dd7021ba5" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;javaconverters%24%24asscala&quot;&gt;AsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c7c9151e0cf4e1d9613514e632f0a91e3464ec" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;linkedhashmap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;] with &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;] with &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;, &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]] with &lt;a href=&quot;../strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]] with &lt;a href=&quot;../strictoptimizedmapops&quot; id=&quot;scala.collection.StrictOptimizedMapOps&quot; name=&quot;scala.collection.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;, &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]] with &lt;a href=&quot;../mapfactorydefaults&quot; id=&quot;scala.collection.MapFactoryDefaults&quot; name=&quot;scala.collection.MapFactoryDefaults&quot;&gt;MapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;] with &lt;a href=&quot;../generic/defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8e7c472746ded6173dbd2082a8321fc425d801" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;linkedhashmap%24linkedkeyset&quot;&gt;LinkedKeySet&lt;/a&gt; extends &lt;a href=&quot;#KeySetextendsAbstractSet%5BK%5DwithMapOps.this.GenKeySetwithDefaultSerializable&quot; id=&quot;scala.collection.MapOps.KeySet&quot; name=&quot;scala.collection.MapOps.KeySet&quot;&gt;KeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c27f305136ee7a9d74a59d7eef76409875baac" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;linkedhashset&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;setops&quot; id=&quot;scala.collection.mutable.SetOps&quot; name=&quot;scala.collection.mutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;../strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;../iterablefactorydefaults&quot; id=&quot;scala.collection.IterableFactoryDefaults&quot; name=&quot;scala.collection.IterableFactoryDefaults&quot;&gt;IterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;] with &lt;a href=&quot;../generic/defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307e98c18ba0447880d4b2b5c042fdb4b531a530" translate="yes" xml:space="preserve">
          <source>class &lt;a href=&quot;listbuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;] with &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.mutable.SeqOps&quot; name=&quot;scala.collection.mutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;../strictoptimizedseqops&quot; id=&quot;scala.collection.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../immutable/list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;immutable.List&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]] with &lt;a href=&quot;../iterablefactorydefaults&quot; id=&quot;scala.collection.IterableFactoryDefaults&quot; name=&quot;scala.collection.IterableFactoryDefaults&quot;&gt;IterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;] with &lt;a href=&quot;../generic/defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
