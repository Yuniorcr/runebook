<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="c4277f36058104219524b961d96a878a47f3482d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24float%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Float.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Float.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24float%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Float.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Float.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31c2ba5f92e7016e97eec0f7308b5daed1fc7d5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24float%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Float.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Float.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24float%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Float.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Float.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bd59dd60b7afad0529eb318aa1ef38ca613db4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24float%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Float.StrictEquiv&quot; name=&quot;scala.math.Equiv.Float.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24float%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Float.StrictEquiv&quot; name=&quot;scala.math.Equiv.Float.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f8c641ab7980aae946bbc747d98e085a2dda60" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24float%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Float.StrictEquiv&quot; name=&quot;scala.math.Equiv.Float.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24float%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Float.StrictEquiv&quot; name=&quot;scala.math.Equiv.Float.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04178e2fd6448848044cbe78216259006a35b4ab" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218343e3b8ec81ace1a12822752ac4bda4f9f8c2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d225ce8976f936bf39950672a1516fc4981e8bcf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;evidenceiterablefactory%24%24delegate&quot; id=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot; name=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;evidenceiterablefactory%24%24delegate&quot; id=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot; name=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdabb15a36fa9e628f7ab75d320e8da44cb3b4ea" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;evidenceiterablefactory%24%24delegate&quot; id=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot; name=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;evidenceiterablefactory%24%24delegate&quot; id=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot; name=&quot;scala.collection.EvidenceIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c60eecfa9bcde6ae707aa93b45d73b550597d16" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;evidenceiterablefactorydefaults&quot; id=&quot;scala.collection.EvidenceIterableFactoryDefaults&quot; name=&quot;scala.collection.EvidenceIterableFactoryDefaults&quot;&gt;EvidenceIterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.Ev&quot;&gt;Ev&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;evidenceiterablefactorydefaults&quot; id=&quot;scala.collection.EvidenceIterableFactoryDefaults&quot; name=&quot;scala.collection.EvidenceIterableFactoryDefaults&quot;&gt;EvidenceIterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.Ev&quot;&gt;Ev&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b46fc72290762ac3808d9f025af85b0d68623d1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;evidenceiterablefactorydefaults&quot; id=&quot;scala.collection.EvidenceIterableFactoryDefaults&quot; name=&quot;scala.collection.EvidenceIterableFactoryDefaults&quot;&gt;EvidenceIterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.Ev&quot;&gt;Ev&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;evidenceiterablefactorydefaults&quot; id=&quot;scala.collection.EvidenceIterableFactoryDefaults&quot; name=&quot;scala.collection.EvidenceIterableFactoryDefaults&quot;&gt;EvidenceIterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.Ev&quot;&gt;Ev&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeed0e94ecbfb19fbf424ddf246b9cf866da136" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;exception%24%24by&quot; id=&quot;scala.util.control.Exception.By&quot; name=&quot;scala.util.control.Exception.By&quot;&gt;By&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.By.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.util.control.Exception.By.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24by&quot; id=&quot;scala.util.control.Exception.By&quot; name=&quot;scala.util.control.Exception.By&quot;&gt;By&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.By.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.util.control.Exception.By.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30d0bcd04025d792f7681e3ae842f440027f1e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;exception%24%24by&quot; id=&quot;scala.util.control.Exception.By&quot; name=&quot;scala.util.control.Exception.By&quot;&gt;By&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.By.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.util.control.Exception.By.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24by&quot; id=&quot;scala.util.control.Exception.By&quot; name=&quot;scala.util.control.Exception.By&quot;&gt;By&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.By.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.util.control.Exception.By.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3b462fa082e13501bf38454c1b0567dc8e1008" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b735facb80b7685cd6653cfff38d6e6830cc56dd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b82b7e8d182811d351e513711946d3db6aaae6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;exception%24%24described&quot; id=&quot;scala.util.control.Exception.Described&quot; name=&quot;scala.util.control.Exception.Described&quot;&gt;Described&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24described&quot; id=&quot;scala.util.control.Exception.Described&quot; name=&quot;scala.util.control.Exception.Described&quot;&gt;Described&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c218cc6ea607bad744ef12a8f0f284bc6c9218" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;exception%24%24described&quot; id=&quot;scala.util.control.Exception.Described&quot; name=&quot;scala.util.control.Exception.Described&quot;&gt;Described&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24described&quot; id=&quot;scala.util.control.Exception.Described&quot; name=&quot;scala.util.control.Exception.Described&quot;&gt;Described&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf2970ec6b79d9f9191bed65eca0f7eda852e3a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finally&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finally&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92a41e9a1ba54fdbc822fb510854d22d83baa38" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finally&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finally&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8972d8ef6e18dc3b0bc76b5966c1cea67a198d9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250c4a5965475fae65c3fa12c1f3c07ca31aedf8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef6d10813c8622b132751fac7b0953bdeb8439b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;executioncontextexecutor&quot; id=&quot;scala.concurrent.ExecutionContextExecutor&quot; name=&quot;scala.concurrent.ExecutionContextExecutor&quot;&gt;ExecutionContextExecutor&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;executioncontextexecutor&quot; id=&quot;scala.concurrent.ExecutionContextExecutor&quot; name=&quot;scala.concurrent.ExecutionContextExecutor&quot;&gt;ExecutionContextExecutor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b634f0de748bb02fd950d0fdf41b17230bb3bc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;executioncontextexecutor&quot; id=&quot;scala.concurrent.ExecutionContextExecutor&quot; name=&quot;scala.concurrent.ExecutionContextExecutor&quot;&gt;ExecutionContextExecutor&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;executioncontextexecutor&quot; id=&quot;scala.concurrent.ExecutionContextExecutor&quot; name=&quot;scala.concurrent.ExecutionContextExecutor&quot;&gt;ExecutionContextExecutor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fb78e1c7b25222c3069739779e72666ebbb2e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;executioncontextexecutorservice&quot; id=&quot;scala.concurrent.ExecutionContextExecutorService&quot; name=&quot;scala.concurrent.ExecutionContextExecutorService&quot;&gt;ExecutionContextExecutorService&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;executioncontextexecutorservice&quot; id=&quot;scala.concurrent.ExecutionContextExecutorService&quot; name=&quot;scala.concurrent.ExecutionContextExecutorService&quot;&gt;ExecutionContextExecutorService&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a1e6a462001e80994fb83850ba8211ea8e0b3c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;executioncontextexecutorservice&quot; id=&quot;scala.concurrent.ExecutionContextExecutorService&quot; name=&quot;scala.concurrent.ExecutionContextExecutorService&quot;&gt;ExecutionContextExecutorService&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;executioncontextexecutorservice&quot; id=&quot;scala.concurrent.ExecutionContextExecutorService&quot; name=&quot;scala.concurrent.ExecutionContextExecutorService&quot;&gt;ExecutionContextExecutorService&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9e7262bf34f5e8af16d6effd42737ccb872bd5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.Factory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Factory.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.Factory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Factory.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96632d8c3539a51129b232ae67fb96d4110b169" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.Factory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Factory.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.Factory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Factory.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9e4fa92703f4ef393d3db309aeebdaed50e9d0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;failure&quot; id=&quot;scala.util.Failure&quot; name=&quot;scala.util.Failure&quot;&gt;Failure&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;failure&quot; id=&quot;scala.util.Failure&quot; name=&quot;scala.util.Failure&quot;&gt;Failure&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100b3b1f3e21cc311b61f1bbc0480d00ad71555b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;failure&quot; id=&quot;scala.util.Failure&quot; name=&quot;scala.util.Failure&quot;&gt;Failure&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;failure&quot; id=&quot;scala.util.Failure&quot; name=&quot;scala.util.Failure&quot;&gt;Failure&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851f1aa22a4ade7fe2305d8b9bcab55ee5f6cf96" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;field&quot; id=&quot;scala.annotation.meta.field&quot; name=&quot;scala.annotation.meta.field&quot;&gt;field&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;field&quot; id=&quot;scala.annotation.meta.field&quot; name=&quot;scala.annotation.meta.field&quot;&gt;field&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f0a2307b2679dcefeb27ec4060ea8c981747fa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;field&quot; id=&quot;scala.annotation.meta.field&quot; name=&quot;scala.annotation.meta.field&quot;&gt;field&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;field&quot; id=&quot;scala.annotation.meta.field&quot; name=&quot;scala.annotation.meta.field&quot;&gt;field&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fd11976d1a18695154652f8fab513db34ae9fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;fileprocesslogger&quot; id=&quot;scala.sys.process.FileProcessLogger&quot; name=&quot;scala.sys.process.FileProcessLogger&quot;&gt;FileProcessLogger&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fileprocesslogger&quot; id=&quot;scala.sys.process.FileProcessLogger&quot; name=&quot;scala.sys.process.FileProcessLogger&quot;&gt;FileProcessLogger&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23faa08d732729c0ba98c8d0e8c5807c8fe1aac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;fileprocesslogger&quot; id=&quot;scala.sys.process.FileProcessLogger&quot; name=&quot;scala.sys.process.FileProcessLogger&quot;&gt;FileProcessLogger&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fileprocesslogger&quot; id=&quot;scala.sys.process.FileProcessLogger&quot; name=&quot;scala.sys.process.FileProcessLogger&quot;&gt;FileProcessLogger&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa6706f24606e65bc0e350d4af196e896a4e8d2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c404cc588b1ccc10c49523ad9350299aa1a0ecf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed9844fc598d1c1099fa8f1a28836f2106ebb69" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cac11d2a24fcf698ff328dfa79b874d5f45e19d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc43f22a8b69d11246b910a2464f134d3a08bd6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;fractional&quot; id=&quot;scala.math.Fractional&quot; name=&quot;scala.math.Fractional&quot;&gt;Fractional&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fractional&quot; id=&quot;scala.math.Fractional&quot; name=&quot;scala.math.Fractional&quot;&gt;Fractional&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f308cf07ba41d06424e10135478411c324f4f83a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;fractional&quot; id=&quot;scala.math.Fractional&quot; name=&quot;scala.math.Fractional&quot;&gt;Fractional&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fractional&quot; id=&quot;scala.math.Fractional&quot; name=&quot;scala.math.Fractional&quot;&gt;Fractional&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0380e22f65e8da5983c83708f3a4c52467b81254" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;fractional%24%24extraimplicits&quot; id=&quot;scala.math.Fractional.ExtraImplicits&quot; name=&quot;scala.math.Fractional.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fractional%24%24extraimplicits&quot; id=&quot;scala.math.Fractional.ExtraImplicits&quot; name=&quot;scala.math.Fractional.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8b2414c527e374a2fe8e376368233d921e4825" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;fractional%24%24extraimplicits&quot; id=&quot;scala.math.Fractional.ExtraImplicits&quot; name=&quot;scala.math.Fractional.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fractional%24%24extraimplicits&quot; id=&quot;scala.math.Fractional.ExtraImplicits&quot; name=&quot;scala.math.Fractional.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7707243622bb0361edf1272427f40775c0693b8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;fractional%24fractionalops&quot; id=&quot;scala.math.Fractional.FractionalOps&quot; name=&quot;scala.math.Fractional.FractionalOps&quot;&gt;FractionalOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fractional%24fractionalops&quot; id=&quot;scala.math.Fractional.FractionalOps&quot; name=&quot;scala.math.Fractional.FractionalOps&quot;&gt;FractionalOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472fad16b481f4f83722064ed510154dd075d723" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;fractional%24fractionalops&quot; id=&quot;scala.math.Fractional.FractionalOps&quot; name=&quot;scala.math.Fractional.FractionalOps&quot;&gt;FractionalOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fractional%24fractionalops&quot; id=&quot;scala.math.Fractional.FractionalOps&quot; name=&quot;scala.math.Fractional.FractionalOps&quot;&gt;FractionalOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d538f691798cc73fe2e53241cf8351d404e2d056" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d012ad5877d6faea0db24409531dbdcb1d53be00" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35737864ea967c70a316bf71675188c32750baf7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer&quot;&gt;AsJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer&quot;&gt;AsJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b679b09246fe292a60f18f27de5d1290e3efaad" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer&quot;&gt;AsJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer&quot;&gt;AsJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ae130fbdde2ba0f62c8ca1d0c3cf85feaafd31" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction&quot;&gt;AsJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction&quot;&gt;AsJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7c5b9fb58f267e4c7d52facc404220fc76009c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction&quot;&gt;AsJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction&quot;&gt;AsJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e8bc6c97b2f29ee85b87fee30e488be2206815" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator&quot;&gt;AsJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator&quot;&gt;AsJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729742e31038f81dbfd07161831c9f80a7d22cb4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator&quot;&gt;AsJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator&quot;&gt;AsJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d72d57e5ad3bc9ffef370bbe8d7ea00105d7859" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate&quot;&gt;AsJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate&quot;&gt;AsJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8602548d747f52c73a558fb38651d17dd8f1b427" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate&quot;&gt;AsJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate&quot;&gt;AsJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a291a963d8345068381e255c0d86024531da0f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBooleanSupplier&quot;&gt;AsJavaBooleanSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBooleanSupplier&quot;&gt;AsJavaBooleanSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806f6830fa3029fcc340039771c16f1eafdac5dc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavabooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBooleanSupplier&quot;&gt;AsJavaBooleanSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavabooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaBooleanSupplier&quot;&gt;AsJavaBooleanSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fa212f40cf32c8a147200201e41fa146d631aa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer&quot;&gt;AsJavaConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer&quot;&gt;AsJavaConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cecce2b36d983782bb0e549d72de322966127681" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer&quot;&gt;AsJavaConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer&quot;&gt;AsJavaConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb038f88957abb3696133fa77f5d9f6f0e16ade7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleBinaryOperator&quot;&gt;AsJavaDoubleBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleBinaryOperator&quot;&gt;AsJavaDoubleBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9f9be05626534f0ad2f87e5d8bf01cc379b914" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleBinaryOperator&quot;&gt;AsJavaDoubleBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleBinaryOperator&quot;&gt;AsJavaDoubleBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab0449383436ab2493219873e7b6eb227444023" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleConsumer&quot;&gt;AsJavaDoubleConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleConsumer&quot;&gt;AsJavaDoubleConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ca508da043cf665406c03052a3d5a4419e583a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleConsumer&quot;&gt;AsJavaDoubleConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleConsumer&quot;&gt;AsJavaDoubleConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858d2b7ada0dcb93bbd8c4a6682ee119fa49455c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction&quot;&gt;AsJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction&quot;&gt;AsJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4314d7d47022ea6fffbafe87393343e17b60544f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction&quot;&gt;AsJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction&quot;&gt;AsJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b96e308cc7a17cc3e65be326a1416ac5e52da1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoublePredicate&quot;&gt;AsJavaDoublePredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoublePredicate&quot;&gt;AsJavaDoublePredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f61375d31fb7259b9a090c147ce2616463180f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoublePredicate&quot;&gt;AsJavaDoublePredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoublePredicate&quot;&gt;AsJavaDoublePredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a9e69b67522651b9c4a3379755f816c5a067eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleSupplier&quot;&gt;AsJavaDoubleSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleSupplier&quot;&gt;AsJavaDoubleSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8df2f4715c3f3b9c5ccbd36e3c78dd739b6656" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleSupplier&quot;&gt;AsJavaDoubleSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleSupplier&quot;&gt;AsJavaDoubleSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519300a4e981a69bdda8c2b8b276608e52fa1f4d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToIntFunction&quot;&gt;AsJavaDoubleToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToIntFunction&quot;&gt;AsJavaDoubleToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f44ba306030971f307b06f4a0ef64ca5fe5fc60" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToIntFunction&quot;&gt;AsJavaDoubleToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToIntFunction&quot;&gt;AsJavaDoubleToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85217b53942552fc13785a93eb51a6c4fe473cbc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToLongFunction&quot;&gt;AsJavaDoubleToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToLongFunction&quot;&gt;AsJavaDoubleToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab803447b4daafd6f61f6aa197aa167c7e7ff6b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToLongFunction&quot;&gt;AsJavaDoubleToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleToLongFunction&quot;&gt;AsJavaDoubleToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae692ecc32a16c2c3dffd9b7c17d0eaa39e2e1e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleUnaryOperator&quot;&gt;AsJavaDoubleUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleUnaryOperator&quot;&gt;AsJavaDoubleUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e7c493e2e626b5cad5f65de0efeab0006169fc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavadoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleUnaryOperator&quot;&gt;AsJavaDoubleUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavadoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleUnaryOperator&quot;&gt;AsJavaDoubleUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0077f738716270ca6e0c859e1cf1dfe991305c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavafunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction&quot;&gt;AsJavaFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavafunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction&quot;&gt;AsJavaFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e081f24095c33a9506d0c085aa736f9271d6d90d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavafunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction&quot;&gt;AsJavaFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavafunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction&quot;&gt;AsJavaFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41951a2c3998d6e263f8ecedee215bec6cadf76c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntBinaryOperator&quot;&gt;AsJavaIntBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntBinaryOperator&quot;&gt;AsJavaIntBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2106a0e0114cb129b96325dd23153e973120dac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntBinaryOperator&quot;&gt;AsJavaIntBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntBinaryOperator&quot;&gt;AsJavaIntBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dae98299dce5001e5da7a19a9d77d62d7ae964b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntConsumer&quot;&gt;AsJavaIntConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntConsumer&quot;&gt;AsJavaIntConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a2e61cc59b142fe72f50592e11de2f94de60fa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntConsumer&quot;&gt;AsJavaIntConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntConsumer&quot;&gt;AsJavaIntConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515fcc6bc9a6693ab5b4a11f84374322722578b7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction&quot;&gt;AsJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction&quot;&gt;AsJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df97231d87e2cc8bc08e5b2bf6ea7e4f3cb3cd9e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction&quot;&gt;AsJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction&quot;&gt;AsJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa01425bb5309570797306285176a05ecee8605" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntPredicate&quot;&gt;AsJavaIntPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntPredicate&quot;&gt;AsJavaIntPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cd4acd502ffae9e4bbb978ca432143450383af" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntPredicate&quot;&gt;AsJavaIntPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntPredicate&quot;&gt;AsJavaIntPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478ae4d13c6c6c29167ff80cf2b578d31aad75ef" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntSupplier&quot;&gt;AsJavaIntSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntSupplier&quot;&gt;AsJavaIntSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8c40da87339f7ee4cbb04baf68daf9220b989c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntSupplier&quot;&gt;AsJavaIntSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntSupplier&quot;&gt;AsJavaIntSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbd324b37545ac829cab9a3c2996f91542f92b3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavainttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntToDoubleFunction&quot;&gt;AsJavaIntToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavainttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntToDoubleFunction&quot;&gt;AsJavaIntToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127a430ce3c49f80a592a6d7b362786ff42b859a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavainttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntToDoubleFunction&quot;&gt;AsJavaIntToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavainttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntToDoubleFunction&quot;&gt;AsJavaIntToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c2186d7d24cc4ea809e88cfcd01f8363edb85f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavainttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntToLongFunction&quot;&gt;AsJavaIntToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavainttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntToLongFunction&quot;&gt;AsJavaIntToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6e014ef8224ca2122b625c4ee0cfe89cd9f6b6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavainttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntToLongFunction&quot;&gt;AsJavaIntToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavainttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntToLongFunction&quot;&gt;AsJavaIntToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd98d5c3b929e794e16fde0d7d17a0677f7e3844" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntUnaryOperator&quot;&gt;AsJavaIntUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntUnaryOperator&quot;&gt;AsJavaIntUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21e4b63f828e468553b09dfe71ec599fdfa0050" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntUnaryOperator&quot;&gt;AsJavaIntUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaIntUnaryOperator&quot;&gt;AsJavaIntUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a815dd6073e856b7393f2c546ccfb4fb045170c1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongBinaryOperator&quot;&gt;AsJavaLongBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongBinaryOperator&quot;&gt;AsJavaLongBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a019ceb17df48cb313299be8b0b09d6ea8b316be" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongBinaryOperator&quot;&gt;AsJavaLongBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongBinaryOperator&quot;&gt;AsJavaLongBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4156c19af133eda9ff7e19fa02a86e785bdf8659" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongConsumer&quot;&gt;AsJavaLongConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongConsumer&quot;&gt;AsJavaLongConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4a5e1adac8e9d935f081a397ad4f4625292959" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongConsumer&quot;&gt;AsJavaLongConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongConsumer&quot;&gt;AsJavaLongConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3a85008e1566dcdb53b3b7d6f141321e82fb2b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction&quot;&gt;AsJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction&quot;&gt;AsJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6451ffb226691e103471c3186f5a4f2de64a8f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction&quot;&gt;AsJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction&quot;&gt;AsJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52d7ce8a101e879f3f4bb611f6c8a61930c4914" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongPredicate&quot;&gt;AsJavaLongPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongPredicate&quot;&gt;AsJavaLongPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2fc4aaee95bca1e4c442ac8ead4f709397460c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongPredicate&quot;&gt;AsJavaLongPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongPredicate&quot;&gt;AsJavaLongPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7aee8de6f54468367aa31aa3b8948f8c6109af" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongSupplier&quot;&gt;AsJavaLongSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongSupplier&quot;&gt;AsJavaLongSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b081f13fb8b2b050f79085e30301e6eaa9d8d296" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongSupplier&quot;&gt;AsJavaLongSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongSupplier&quot;&gt;AsJavaLongSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39634e05455c3a18fd6ea6124453ad0877a66d5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongToDoubleFunction&quot;&gt;AsJavaLongToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongToDoubleFunction&quot;&gt;AsJavaLongToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e67a077a97f113ded60ad3ac5bfb2baf727fc01" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongToDoubleFunction&quot;&gt;AsJavaLongToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongToDoubleFunction&quot;&gt;AsJavaLongToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54be6cedbf0aec26cd9a31b07e27378acb93ba8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongToIntFunction&quot;&gt;AsJavaLongToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongToIntFunction&quot;&gt;AsJavaLongToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6036ca94881b08a86fc5c5ae565709f53fc78853" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongToIntFunction&quot;&gt;AsJavaLongToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongToIntFunction&quot;&gt;AsJavaLongToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1753ef53ca98aab8f92b1708a255dcef8a22dbab" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongUnaryOperator&quot;&gt;AsJavaLongUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongUnaryOperator&quot;&gt;AsJavaLongUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1328f607eba473eac0727eabe8f05cc5445ede30" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavalongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongUnaryOperator&quot;&gt;AsJavaLongUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavalongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaLongUnaryOperator&quot;&gt;AsJavaLongUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25eced2248bd7a0a2916cc0fb9fbde6f3cbdf4b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer&quot;&gt;AsJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer&quot;&gt;AsJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8e12bdf5219ce5f47bf7753627969283816f14" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer&quot;&gt;AsJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer&quot;&gt;AsJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422ff084fcedf60fea24b9ff3488b7223e0ef5bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer&quot;&gt;AsJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer&quot;&gt;AsJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0ed60f274ba173717ea4735986d93c8b08232d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer&quot;&gt;AsJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer&quot;&gt;AsJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0798290639e1349075652b79e87e9bd4f553db12" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer&quot;&gt;AsJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer&quot;&gt;AsJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5d3422fd1d1732b21a68c5253486a5b423e52c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer&quot;&gt;AsJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer&quot;&gt;AsJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6698396e27423a341760ad38c608b53498eaa4bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavapredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate&quot;&gt;AsJavaPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavapredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate&quot;&gt;AsJavaPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd45d0e61cb84e248c0e5bf94616ba0e8650c700" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavapredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate&quot;&gt;AsJavaPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavapredicate&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate&quot;&gt;AsJavaPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5624b98e64e23f9ce2e9ec0e52a9d9e60ab38c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavasupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier&quot;&gt;AsJavaSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavasupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier&quot;&gt;AsJavaSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002ee9282daf972dddc858b2d4a592f630952e35" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavasupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier&quot;&gt;AsJavaSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavasupplier&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier&quot;&gt;AsJavaSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62762a22f51efa1357891faedbbe5a14ea556d52" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction&quot;&gt;AsJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction&quot;&gt;AsJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46e2f912209ed76b524872283c28e7c3990b1f9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction&quot;&gt;AsJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction&quot;&gt;AsJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3bce84f1090b9dc23d018c4ad6bb43785bfb33" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction&quot;&gt;AsJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction&quot;&gt;AsJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c0dac23b187d6f88f59a4a53d064acdb205b74" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction&quot;&gt;AsJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction&quot;&gt;AsJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e6442a92e13b61bd9aa6616207f2655a53dc02" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction&quot;&gt;AsJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction&quot;&gt;AsJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baba7ec509bf80d88750c52a61edafe02add6d6d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction&quot;&gt;AsJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction&quot;&gt;AsJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4bb74e93de02eb54bc7e0c683512a315574188" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction&quot;&gt;AsJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction&quot;&gt;AsJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c91d2ea348fd014bb6544ca28805f0ae3be43f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction&quot;&gt;AsJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction&quot;&gt;AsJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278e0dca89a49bc78660f5392b0ed4b4e4f444c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction&quot;&gt;AsJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction&quot;&gt;AsJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5002871849083e57803ca050a0f2becd2a256af1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction&quot;&gt;AsJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction&quot;&gt;AsJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2bfe0a3d8889179bf03faf0d31f094ac7191e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction&quot;&gt;AsJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction&quot;&gt;AsJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23412c91bcd4bf5ee82ee6022be66cd619f71246" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavatolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction&quot;&gt;AsJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavatolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction&quot;&gt;AsJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4437d9a37498c331488ac0eb651a429b5fdc11" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator&quot;&gt;AsJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator&quot;&gt;AsJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c48c98e9e35fa7e113d22c0aa35fb0526374be" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24asjavaunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator&quot;&gt;AsJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24asjavaunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator&quot;&gt;AsJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d930fed130cc5484372cfd47306bd2a4c88f265e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer&quot;&gt;FromJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer&quot;&gt;FromJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2fb0d14874ad9761251b0dd0e989afa30c961a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer&quot;&gt;FromJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer&quot;&gt;FromJavaBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab7f261243a0faba35b6ceec3561949bcd8e7e6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction&quot;&gt;FromJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction&quot;&gt;FromJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20971ab335c626216bda1cc4679955581c8c747c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction&quot;&gt;FromJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction&quot;&gt;FromJavaBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50826797eb288cc495d63d50758ffb7e83c6bdca" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator&quot;&gt;FromJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator&quot;&gt;FromJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87fd82e2505b9f9572b8644bcca810769eb0cb3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator&quot;&gt;FromJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator&quot;&gt;FromJavaBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0513aac68da0f214a738c691261061e185c788a9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate&quot;&gt;FromJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate&quot;&gt;FromJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a558f43295647696d86c1e7eda3563cd7d313e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate&quot;&gt;FromJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate&quot;&gt;FromJavaBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9a54d38104fbaa622b992b84e8eba6c34f6d3e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBooleanSupplier&quot;&gt;FromJavaBooleanSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBooleanSupplier&quot;&gt;FromJavaBooleanSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c4343ba3261eaebb1ed1fde2c330ac71917050" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavabooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBooleanSupplier&quot;&gt;FromJavaBooleanSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavabooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaBooleanSupplier&quot;&gt;FromJavaBooleanSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533d13ea0e19c5c3431a7fb11cc1594a18e0e305" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer&quot;&gt;FromJavaConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer&quot;&gt;FromJavaConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb855a756e55d990160e03c9b7a13d335968f75a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer&quot;&gt;FromJavaConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer&quot;&gt;FromJavaConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf8d200f0d500ff332befc2ad4224c678d66b4f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleBinaryOperator&quot;&gt;FromJavaDoubleBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleBinaryOperator&quot;&gt;FromJavaDoubleBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcbaf56461b134c38f059a9f518f70ad8c10ac3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleBinaryOperator&quot;&gt;FromJavaDoubleBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleBinaryOperator&quot;&gt;FromJavaDoubleBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fd02db674257d482b60e047526251ab4abb81c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleConsumer&quot;&gt;FromJavaDoubleConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleConsumer&quot;&gt;FromJavaDoubleConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5239395c40cadbb399b283afa6137faef143c31" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleConsumer&quot;&gt;FromJavaDoubleConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleConsumer&quot;&gt;FromJavaDoubleConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a15269b75eef5a7ae82996b1c195d83f2604a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction&quot;&gt;FromJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction&quot;&gt;FromJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d0c973c14ca00202b2a594592dc11e0fc7e3ef" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction&quot;&gt;FromJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction&quot;&gt;FromJavaDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e645b8ec3cba2251646e017a9e18a80c2e2541db" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoublePredicate&quot;&gt;FromJavaDoublePredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoublePredicate&quot;&gt;FromJavaDoublePredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0493dbce6f7dba581080f6dffeab03e54e8c3c95" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoublePredicate&quot;&gt;FromJavaDoublePredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoublePredicate&quot;&gt;FromJavaDoublePredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63c5f7a9bee5ea89f2bea3e4a041a2657e0363e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleSupplier&quot;&gt;FromJavaDoubleSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleSupplier&quot;&gt;FromJavaDoubleSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f9cf8ff0aa51f21106ca3cb379532a5b967591" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleSupplier&quot;&gt;FromJavaDoubleSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleSupplier&quot;&gt;FromJavaDoubleSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8234e9a35c48d867fbcca715b0841aca502b8e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToIntFunction&quot;&gt;FromJavaDoubleToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToIntFunction&quot;&gt;FromJavaDoubleToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11777602ea55e30f8baba8409d9bbc1a54e6e80b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToIntFunction&quot;&gt;FromJavaDoubleToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToIntFunction&quot;&gt;FromJavaDoubleToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b7af976d4b75a38a2a201b1b27474bc15d244a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToLongFunction&quot;&gt;FromJavaDoubleToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToLongFunction&quot;&gt;FromJavaDoubleToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4519095ee32dbb646049de4bae2567ad335753" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToLongFunction&quot;&gt;FromJavaDoubleToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleToLongFunction&quot;&gt;FromJavaDoubleToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f33fea43c2830d2af0b2fe9c4a0c1a6861a917" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleUnaryOperator&quot;&gt;FromJavaDoubleUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleUnaryOperator&quot;&gt;FromJavaDoubleUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61761fda9b4b4b7ae21389a63eb8cd15ae57f514" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavadoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleUnaryOperator&quot;&gt;FromJavaDoubleUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavadoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleUnaryOperator&quot;&gt;FromJavaDoubleUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56594d1455f25ea95e98e83e42c3f8a4277ae834" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavafunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction&quot;&gt;FromJavaFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavafunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction&quot;&gt;FromJavaFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999b9f993ee2e44bacf2a051b167af7a51e26b8f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavafunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction&quot;&gt;FromJavaFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavafunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction&quot;&gt;FromJavaFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0c50977f7916b48c660c1cf83148cf64f0f215" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntBinaryOperator&quot;&gt;FromJavaIntBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntBinaryOperator&quot;&gt;FromJavaIntBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a98fdc95f0f465f3f97c8c7cffa703546e1d5d1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntBinaryOperator&quot;&gt;FromJavaIntBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntBinaryOperator&quot;&gt;FromJavaIntBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d409fd587f9bf627ae969272cd7cbf05a3b0536" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntConsumer&quot;&gt;FromJavaIntConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntConsumer&quot;&gt;FromJavaIntConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb662fbb17212f755e1470fd589dd6825e34c18a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntConsumer&quot;&gt;FromJavaIntConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntConsumer&quot;&gt;FromJavaIntConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4a7aa050517e1c415d09e05d73bb3b6476819d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction&quot;&gt;FromJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction&quot;&gt;FromJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beec9dfc627689d8faf977b9a3eb5f382a1f482b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction&quot;&gt;FromJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction&quot;&gt;FromJavaIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56523d1d9b028d2179f4e972b29f5a03079c220a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntPredicate&quot;&gt;FromJavaIntPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntPredicate&quot;&gt;FromJavaIntPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c2dc972d700d8e517320bbaa019a0719d1f207" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntPredicate&quot;&gt;FromJavaIntPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntPredicate&quot;&gt;FromJavaIntPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c7b88153d3deb3d4b671df9011d509d83562d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntSupplier&quot;&gt;FromJavaIntSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntSupplier&quot;&gt;FromJavaIntSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72332026c6141d97cb6973ee2178baa1e076a3cd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntSupplier&quot;&gt;FromJavaIntSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntSupplier&quot;&gt;FromJavaIntSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49252d73816ac51560e4e0f8a6927c45573e18d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavainttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntToDoubleFunction&quot;&gt;FromJavaIntToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavainttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntToDoubleFunction&quot;&gt;FromJavaIntToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879bb85c44cb332874de03d9867ab01662f6ede1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavainttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntToDoubleFunction&quot;&gt;FromJavaIntToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavainttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntToDoubleFunction&quot;&gt;FromJavaIntToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacc6982b72accdc4c59bb50414f86457544f105" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavainttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntToLongFunction&quot;&gt;FromJavaIntToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavainttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntToLongFunction&quot;&gt;FromJavaIntToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46346a794104de73359a1f712aeb1fb3a883245" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavainttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntToLongFunction&quot;&gt;FromJavaIntToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavainttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntToLongFunction&quot;&gt;FromJavaIntToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116ffe0f9f675efda9f127848f1e84dd8ab7c0ba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntUnaryOperator&quot;&gt;FromJavaIntUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntUnaryOperator&quot;&gt;FromJavaIntUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b55863f19f8150c6b026d9bf3fbd90fb4a0e8f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntUnaryOperator&quot;&gt;FromJavaIntUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaIntUnaryOperator&quot;&gt;FromJavaIntUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dec227122a193c78af58cc3d58844f4312104d0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongBinaryOperator&quot;&gt;FromJavaLongBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongBinaryOperator&quot;&gt;FromJavaLongBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d70e87f076fa7f3ef8fbded5b8d7dc9990461a8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongBinaryOperator&quot;&gt;FromJavaLongBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongBinaryOperator&quot;&gt;FromJavaLongBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb50bfd808301f40b37e5d4b7173c30d5cd4319" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongConsumer&quot;&gt;FromJavaLongConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongConsumer&quot;&gt;FromJavaLongConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f594b67e8bd810e1aeaec00a070fb2856b345b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongConsumer&quot;&gt;FromJavaLongConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongConsumer&quot;&gt;FromJavaLongConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfeb2e5ee046829bcca870573ef259dc63283e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction&quot;&gt;FromJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction&quot;&gt;FromJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa72a8dc78fd5d45e25beaeb2b4c3cded9e635a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction&quot;&gt;FromJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction&quot;&gt;FromJavaLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f8cf079ebf5e78329a1ecff8dede25dc6e0ca2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongPredicate&quot;&gt;FromJavaLongPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongPredicate&quot;&gt;FromJavaLongPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ec6ff89505a4b2d895ce5904f5195c9fdb215c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongPredicate&quot;&gt;FromJavaLongPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongPredicate&quot;&gt;FromJavaLongPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068e0825adbb65440bbb065c2f3614cb5d504b32" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongSupplier&quot;&gt;FromJavaLongSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongSupplier&quot;&gt;FromJavaLongSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce359802242f3a16c8ab8376508ffaf05abdbd7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongSupplier&quot;&gt;FromJavaLongSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongSupplier&quot;&gt;FromJavaLongSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca82dcb06f625035d84f451a495dc7d13fea979" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongToDoubleFunction&quot;&gt;FromJavaLongToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongToDoubleFunction&quot;&gt;FromJavaLongToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14eb293bd8bad574924ee1f9d1fd6dd3c0d2a57b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongToDoubleFunction&quot;&gt;FromJavaLongToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongToDoubleFunction&quot;&gt;FromJavaLongToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29c3f61449985a4d5091f38a6f3a3b12b1ab871" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongToIntFunction&quot;&gt;FromJavaLongToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongToIntFunction&quot;&gt;FromJavaLongToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6cc1f4dbed959606d47ad40f4f61335669b197" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongToIntFunction&quot;&gt;FromJavaLongToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongToIntFunction&quot;&gt;FromJavaLongToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b3980b988a15d602f099014b02571a296b5f1d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongUnaryOperator&quot;&gt;FromJavaLongUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongUnaryOperator&quot;&gt;FromJavaLongUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ac0826b8241af179cbffdd14d668b5ea2cb275" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavalongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongUnaryOperator&quot;&gt;FromJavaLongUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavalongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaLongUnaryOperator&quot;&gt;FromJavaLongUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa74b3321dc570218fa35daafbb8f030271b88c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer&quot;&gt;FromJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer&quot;&gt;FromJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6243e6c3ecc123d6e8f97c15ee3aa3a12afeec" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer&quot;&gt;FromJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer&quot;&gt;FromJavaObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1a1fecadf235c9de945b92a1af6d1928026a1d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer&quot;&gt;FromJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer&quot;&gt;FromJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0787d5ab8acc96c383919747884960a354fcbe0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer&quot;&gt;FromJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer&quot;&gt;FromJavaObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14596d4e5fab431fcbd54a20840c4b7f03fa5fcc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer&quot;&gt;FromJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer&quot;&gt;FromJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec26de5c9d7862b86f5779b84b25a7a4f3473c2a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer&quot;&gt;FromJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer&quot;&gt;FromJavaObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e406366eff828c40ebae157909134b1c2c8f48" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavapredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate&quot;&gt;FromJavaPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavapredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate&quot;&gt;FromJavaPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97a6f711e168acbda424f7d1b24c84d016abe14" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavapredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate&quot;&gt;FromJavaPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavapredicate&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate&quot;&gt;FromJavaPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d6286381b66cb2c42f0b26673dbf597773f5d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavasupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier&quot;&gt;FromJavaSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavasupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier&quot;&gt;FromJavaSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bac19d5e5213f5da7d023e2ef07addc043a315" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavasupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier&quot;&gt;FromJavaSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavasupplier&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier&quot;&gt;FromJavaSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d53ac0ee2d045d0ede2caf0f814c40091b9f72" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction&quot;&gt;FromJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction&quot;&gt;FromJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a4b45630e1283150febdf9db69fdf2ad5d0668" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction&quot;&gt;FromJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction&quot;&gt;FromJavaToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a7972db2adc576d19e16248294475c42dabaa6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction&quot;&gt;FromJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction&quot;&gt;FromJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdea3871d7c3c4ae048433010edc4130c6d62f4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction&quot;&gt;FromJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction&quot;&gt;FromJavaToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060cf3276494c0812c50187312a462dca06a8bfd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction&quot;&gt;FromJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction&quot;&gt;FromJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99a9fe148ee5f5597485af4f4be4b0666dc3af2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction&quot;&gt;FromJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction&quot;&gt;FromJavaToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d854ba0737fa07c9807cdaa129cdd23bb18750c3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction&quot;&gt;FromJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction&quot;&gt;FromJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6099a8e2b756fac830419b4193a5fe4bada3b75" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction&quot;&gt;FromJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction&quot;&gt;FromJavaToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a51e6eb39c6d0be916d298ddb6c58dc4d1fb847" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction&quot;&gt;FromJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction&quot;&gt;FromJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31724d473966a9cba6e06c642a569b6ed395d8e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction&quot;&gt;FromJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction&quot;&gt;FromJavaToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f465b84143440c708d296096eb5cb7fdfde9ae5e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction&quot;&gt;FromJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction&quot;&gt;FromJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b06e1dfbea7e16679b690000942ecaf6bcd843" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavatolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction&quot;&gt;FromJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavatolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction&quot;&gt;FromJavaToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbf0bbdb9af3ad59590dde40fe7617097bd6f36" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator&quot;&gt;FromJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator&quot;&gt;FromJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc8cbc41512d271f5ec254b58b085365503243e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24fromjavaunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator&quot;&gt;FromJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24fromjavaunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator&quot;&gt;FromJavaUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a716fca97ca0c48e7ec619bc4ed795f5e099c6f9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbiconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot;&gt;RichBiConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbiconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot;&gt;RichBiConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e4085eb63c94413385259f795ab39037ce55c2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbiconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot;&gt;RichBiConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbiconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot;&gt;RichBiConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b4404357ee5629d109bcf47d9e646ae183c6b7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot;&gt;RichBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot;&gt;RichBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33920b4ec57e87ea902d6e72cd1e6de71de50be" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot;&gt;RichBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot;&gt;RichBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14472a65056b1c5238c28e0388f0c3b2a4439399" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot;&gt;RichBinaryOperatorAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot;&gt;RichBinaryOperatorAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9db3a9518d19c89a83e8d928d1117c851c5ce05" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot;&gt;RichBinaryOperatorAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot;&gt;RichBinaryOperatorAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f2b49dbc10c637cf05fa2f5904b00782712ee1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbipredicateasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot;&gt;RichBiPredicateAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbipredicateasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot;&gt;RichBiPredicateAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf58bdde6f6460e7aa515c3b82d06efdcb5789d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbipredicateasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot;&gt;RichBiPredicateAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbipredicateasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot;&gt;RichBiPredicateAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065567c01e8ceed5095433c57ec82825800a3124" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbooleansupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot;&gt;RichBooleanSupplierAsFunction0&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbooleansupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot;&gt;RichBooleanSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071c4223f607c740194901cc7dfea9e462034251" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richbooleansupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot;&gt;RichBooleanSupplierAsFunction0&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbooleansupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot;&gt;RichBooleanSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ac1d970975e0eec500b6a1bbb96393b6430a89" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot;&gt;RichConsumerAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot;&gt;RichConsumerAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72c21d8536d5ed087b0c1c69fbfba82ad352132" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot;&gt;RichConsumerAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot;&gt;RichConsumerAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1476e64349bf162af096ac8851e4f0c6d2c55442" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoublebinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot;&gt;RichDoubleBinaryOperatorAsFunction2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublebinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot;&gt;RichDoubleBinaryOperatorAsFunction2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd71a6dc3eede335230b91dd547ce206a4fde17" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoublebinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot;&gt;RichDoubleBinaryOperatorAsFunction2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublebinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot;&gt;RichDoubleBinaryOperatorAsFunction2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493650d1291a6cf9dfa4333c6c733c58844da6ff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoubleconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot;&gt;RichDoubleConsumerAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubleconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot;&gt;RichDoubleConsumerAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e576df5722a8e76b827ddf0941a0225bf2043d08" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoubleconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot;&gt;RichDoubleConsumerAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubleconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot;&gt;RichDoubleConsumerAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae8eda90720f0093fc4f1b8373e92d87941d6fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot;&gt;RichDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot;&gt;RichDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427b4fb43a1a1176918ec47870b614b3314b6ff4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot;&gt;RichDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot;&gt;RichDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dad61c8f621b1510b3e657ccf022300c11a4f0a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoublepredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot;&gt;RichDoublePredicateAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublepredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot;&gt;RichDoublePredicateAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d568eda2752bb20da2c29d7b09b4d3f738a4b8f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoublepredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot;&gt;RichDoublePredicateAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublepredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot;&gt;RichDoublePredicateAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5734eb5214ce31ab04526d0997811cbafbdf08f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoublesupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot;&gt;RichDoubleSupplierAsFunction0&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublesupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot;&gt;RichDoubleSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb5935755d2171057f835866c917407ef30e2e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoublesupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot;&gt;RichDoubleSupplierAsFunction0&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublesupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot;&gt;RichDoubleSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07e270651f71893866e9a2cb0f5d7dc8111c10f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoubletointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot;&gt;RichDoubleToIntFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubletointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot;&gt;RichDoubleToIntFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb00bdc2de6cad40a387a30f90ae2c087f0939ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoubletointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot;&gt;RichDoubleToIntFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubletointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot;&gt;RichDoubleToIntFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e5692cc9c2988d9c93c1b95749b62b0abf43d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoubletolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot;&gt;RichDoubleToLongFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubletolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot;&gt;RichDoubleToLongFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b10a2e06d243c38a088924a058d5948bc2100c2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoubletolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot;&gt;RichDoubleToLongFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubletolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot;&gt;RichDoubleToLongFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bac003ed0d1e28a4c0adbfb811aa1e4d36f7928" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoubleunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot;&gt;RichDoubleUnaryOperatorAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubleunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot;&gt;RichDoubleUnaryOperatorAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f15db71ac5e5dd06c2df001696935bf29cf734" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richdoubleunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot;&gt;RichDoubleUnaryOperatorAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubleunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot;&gt;RichDoubleUnaryOperatorAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea19d0df2cb8cd7820406a5186d4206334677056" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0asbooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot;&gt;RichFunction0AsBooleanSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0asbooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot;&gt;RichFunction0AsBooleanSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaefaca2f18d294ea44e26fcf7b2e1bb4d193ffd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0asbooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot;&gt;RichFunction0AsBooleanSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0asbooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot;&gt;RichFunction0AsBooleanSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d5368e5e9e2d4e2770c49e621aca773dec495b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0asdoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot;&gt;RichFunction0AsDoubleSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0asdoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot;&gt;RichFunction0AsDoubleSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e8b7ae28d1fe3ffade7fcfc4e73e0cd8f0bac3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0asdoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot;&gt;RichFunction0AsDoubleSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0asdoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot;&gt;RichFunction0AsDoubleSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de3291ae0b0f2610faf6316b0fc02ef797a77b8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0asintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot;&gt;RichFunction0AsIntSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0asintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot;&gt;RichFunction0AsIntSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f00a8d386e107f2d340208228496890e6088125" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0asintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot;&gt;RichFunction0AsIntSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0asintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot;&gt;RichFunction0AsIntSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d79ebbf29173943dd446ca2ba68cda7cb65d071" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0aslongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot;&gt;RichFunction0AsLongSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0aslongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot;&gt;RichFunction0AsLongSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6911287b46ff31adcb897cb141747cb972652e89" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0aslongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot;&gt;RichFunction0AsLongSupplier&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0aslongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot;&gt;RichFunction0AsLongSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db6410ef5e8399735e1e1065c6431650a112f4c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0assupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot;&gt;RichFunction0AsSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0assupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot;&gt;RichFunction0AsSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22353383ffe162aa6b1c8f30703aad140cc13781" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction0assupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot;&gt;RichFunction0AsSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0assupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot;&gt;RichFunction0AsSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a492095a2998e2649f76e2276998cf6f3ae44a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot;&gt;RichFunction1AsConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot;&gt;RichFunction1AsConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a797236d59ce48e5690b10e879a78e7af46b0dbd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot;&gt;RichFunction1AsConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot;&gt;RichFunction1AsConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151345c240f73010e9ac5fe6dcb3f8911b62bbe2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot;&gt;RichFunction1AsDoubleConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot;&gt;RichFunction1AsDoubleConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b329d6de7604169b84232d3061caa120f95def1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot;&gt;RichFunction1AsDoubleConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot;&gt;RichFunction1AsDoubleConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666fe77169657075c2e3d3c6ca57a668ed343af3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot;&gt;RichFunction1AsDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot;&gt;RichFunction1AsDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dac00856b35969d55353b0b050f9f6884f62919" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot;&gt;RichFunction1AsDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot;&gt;RichFunction1AsDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b9d8089e3ece6be00262815967f2ad8af55d7e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot;&gt;RichFunction1AsDoublePredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot;&gt;RichFunction1AsDoublePredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009189f88eb819d6e7b5683176f7e5bdf29986d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot;&gt;RichFunction1AsDoublePredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot;&gt;RichFunction1AsDoublePredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953f0ea15fd0c95dd581d0d4d5f053ec20bae208" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot;&gt;RichFunction1AsDoubleToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot;&gt;RichFunction1AsDoubleToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030bc4c4314bbeb3f0c9bc52108c617f5c4571d9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot;&gt;RichFunction1AsDoubleToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot;&gt;RichFunction1AsDoubleToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72262e0673fc57582e7bc3103ba3798ac48faa6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot;&gt;RichFunction1AsDoubleToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot;&gt;RichFunction1AsDoubleToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700f1b37b5809ee1b8bbb47374fe353cb496e2b6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot;&gt;RichFunction1AsDoubleToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot;&gt;RichFunction1AsDoubleToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613f4b48184f154fac2ff7277a86514ce6d4119b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot;&gt;RichFunction1AsDoubleUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot;&gt;RichFunction1AsDoubleUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4f5c87f2e20e3359c23ba53e9d1c76477b7c84" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot;&gt;RichFunction1AsDoubleUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot;&gt;RichFunction1AsDoubleUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91c9d8ce2cf9b7534ca428a7fde7a7cd2ec4154" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot;&gt;RichFunction1AsFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot;&gt;RichFunction1AsFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7536318c869508af16ca1a3b83c171c535f8934" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot;&gt;RichFunction1AsFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot;&gt;RichFunction1AsFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c811697f756ae675fd11f210d9f1f201f523522d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot;&gt;RichFunction1AsIntConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot;&gt;RichFunction1AsIntConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff83f47c087147ec4b6032af1df1542c8e2d3ab" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot;&gt;RichFunction1AsIntConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot;&gt;RichFunction1AsIntConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e099c92ac4f98940dc78757f5eaa90550775400b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot;&gt;RichFunction1AsIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot;&gt;RichFunction1AsIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb1ae64a0a55add5b4c4f2acffdc2c7c5bc9c4e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot;&gt;RichFunction1AsIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot;&gt;RichFunction1AsIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913833b565d3ba5165f5431ca47d6048be154985" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot;&gt;RichFunction1AsIntPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot;&gt;RichFunction1AsIntPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78103ac4a706dd95db0a65b3b617ec1dd45eb211" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot;&gt;RichFunction1AsIntPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot;&gt;RichFunction1AsIntPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744a9a73c697b4611967e67d3f0b103e527c13ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asinttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot;&gt;RichFunction1AsIntToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asinttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot;&gt;RichFunction1AsIntToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5aac38cdcbe574ba064987754490adf79f94d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asinttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot;&gt;RichFunction1AsIntToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asinttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot;&gt;RichFunction1AsIntToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d101e2b3b7dc76b9bbce2b4297840b3e4664ac9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asinttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot;&gt;RichFunction1AsIntToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asinttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot;&gt;RichFunction1AsIntToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3823d40b764a9649ce2d7082835797adf165b05" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asinttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot;&gt;RichFunction1AsIntToLongFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asinttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot;&gt;RichFunction1AsIntToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91000d1dd58a83e958bfe4ac22336d13534a9877" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot;&gt;RichFunction1AsIntUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot;&gt;RichFunction1AsIntUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e75262198d8f44a838985ab230fa315c599088" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot;&gt;RichFunction1AsIntUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot;&gt;RichFunction1AsIntUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9436c17447da2955b87fb0fb0e636d10c179eba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot;&gt;RichFunction1AsLongConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot;&gt;RichFunction1AsLongConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae31d6dd17bbfae66b9def1212af8aaddb64a4f9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot;&gt;RichFunction1AsLongConsumer&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot;&gt;RichFunction1AsLongConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0678b6023f81f33192301739ce99c23db07adde5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot;&gt;RichFunction1AsLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot;&gt;RichFunction1AsLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8f02ba92c2cdc8c1f4277c9dd45a1a48db242f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot;&gt;RichFunction1AsLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot;&gt;RichFunction1AsLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a080d1e377aaf51161c2a23a7da5674b74bce3a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot;&gt;RichFunction1AsLongPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot;&gt;RichFunction1AsLongPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cb4994db9d37e5ec94c768da05b5f0bf3ee3b0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot;&gt;RichFunction1AsLongPredicate&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot;&gt;RichFunction1AsLongPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78eec453733cb09eb5097f3f7dfdeda68c94f0f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot;&gt;RichFunction1AsLongToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot;&gt;RichFunction1AsLongToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863b7a59610e95aee836c176fe373e2d33bc9e9b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot;&gt;RichFunction1AsLongToDoubleFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot;&gt;RichFunction1AsLongToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a364ef35e18cf90fac8f5114d875625a1bdf71" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot;&gt;RichFunction1AsLongToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot;&gt;RichFunction1AsLongToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750406d26cd74d9ade7d9ab3ebf38e535cf9bc56" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot;&gt;RichFunction1AsLongToIntFunction&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot;&gt;RichFunction1AsLongToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234e24c5e97e9b8b9b915fa9dd443d305de73627" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot;&gt;RichFunction1AsLongUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot;&gt;RichFunction1AsLongUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea5ade99b3c226b139eafe1f866c7403a4f0bc3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aslongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot;&gt;RichFunction1AsLongUnaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot;&gt;RichFunction1AsLongUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a882270aec5104007e6adf778b97a748d60e28fc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aspredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot;&gt;RichFunction1AsPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aspredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot;&gt;RichFunction1AsPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1cdc5d86a54f279d1e54c352cae1ace4b24414" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1aspredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot;&gt;RichFunction1AsPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aspredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot;&gt;RichFunction1AsPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1520b8e57ebbd45c3833b223a47e3deb48658306" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1astodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot;&gt;RichFunction1AsToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1astodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot;&gt;RichFunction1AsToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd97e924a7d6c32171aae33e713b260a7661f217" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1astodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot;&gt;RichFunction1AsToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1astodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot;&gt;RichFunction1AsToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbb14488c096fd1da50387f05e82e3f93efd4f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1astointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot;&gt;RichFunction1AsToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1astointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot;&gt;RichFunction1AsToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939fbfacd7d567cfb445fe77eeb29ff443c8fb4a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1astointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot;&gt;RichFunction1AsToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1astointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot;&gt;RichFunction1AsToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5fd53701fe62950ed727eaa5ffbcd2edbbccb6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1astolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot;&gt;RichFunction1AsToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1astolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot;&gt;RichFunction1AsToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b086bdcd1725ad09271e283cae0a90ea9276855" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1astolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot;&gt;RichFunction1AsToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1astolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot;&gt;RichFunction1AsToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b429325c5f12bde262b91cc9f39f457d4f7959ba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot;&gt;RichFunction1AsUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot;&gt;RichFunction1AsUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9936b50d4aa3de2cb804e1c39be89bfcbcec5a5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction1asunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot;&gt;RichFunction1AsUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot;&gt;RichFunction1AsUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88337852d198499606106f57b464f2ff0dba808" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asbiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot;&gt;RichFunction2AsBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot;&gt;RichFunction2AsBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7087cefc8bf867df2fb3e7d50eef58f13c1efca6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asbiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot;&gt;RichFunction2AsBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot;&gt;RichFunction2AsBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5d4fd366848b72262d44a3957af0f13c8f8638" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot;&gt;RichFunction2AsBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot;&gt;RichFunction2AsBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcf22cef57a64bdc36f05eecc313965ade7b9f3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot;&gt;RichFunction2AsBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot;&gt;RichFunction2AsBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b33d3c0f00e08ba37c68ebe9c29e4ae9182f3fd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot;&gt;RichFunction2AsBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot;&gt;RichFunction2AsBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dacd9cfec693c3ea09fc39085a7786f4ac64829" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot;&gt;RichFunction2AsBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot;&gt;RichFunction2AsBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad52ec0e51b300b56c129fc81c24ec56fa2845a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asbipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot;&gt;RichFunction2AsBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot;&gt;RichFunction2AsBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b10729e062215e189fb71c01d32ecba335f105" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asbipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot;&gt;RichFunction2AsBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot;&gt;RichFunction2AsBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764a23b1e9d8ae624069fcc0666a7b960a2bd885" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asdoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot;&gt;RichFunction2AsDoubleBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asdoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot;&gt;RichFunction2AsDoubleBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88cbce90ba627dbc38d495fe611fe0bed8c0b98" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asdoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot;&gt;RichFunction2AsDoubleBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asdoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot;&gt;RichFunction2AsDoubleBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c58e168a5365033b83a70f28938ea22ef2026c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot;&gt;RichFunction2AsIntBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot;&gt;RichFunction2AsIntBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df643811b15635017251d8b59bb27c7491d1e14" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot;&gt;RichFunction2AsIntBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot;&gt;RichFunction2AsIntBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fb6cf3455da82d2b6f4605c045cc642d9bc0ec" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2aslongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot;&gt;RichFunction2AsLongBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2aslongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot;&gt;RichFunction2AsLongBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d668d9127fac0ee9f9b13911ff2065956a56da5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2aslongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot;&gt;RichFunction2AsLongBinaryOperator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2aslongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot;&gt;RichFunction2AsLongBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2f45be94a0132f3eebdf6575b29337d92bbc1c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot;&gt;RichFunction2AsObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot;&gt;RichFunction2AsObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1b45236e782cdaf3b79244b1e92e41ee7ccaee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot;&gt;RichFunction2AsObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot;&gt;RichFunction2AsObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6670c74b72face7c18ff5515d4815f3256a6c5e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot;&gt;RichFunction2AsObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot;&gt;RichFunction2AsObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ad59a365ebb9fbb46e6d558a36b9e25c1cfbe3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot;&gt;RichFunction2AsObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot;&gt;RichFunction2AsObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddadc2dc2ea3b30d90d2bc24ccb139b0f116800" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot;&gt;RichFunction2AsObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot;&gt;RichFunction2AsObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd3992a9b94c83e90246525932d94698968ab13" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2asobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot;&gt;RichFunction2AsObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot;&gt;RichFunction2AsObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fe09a3c1cabd4fd4a3d74ba17390e6c01d3f67" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2astodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot;&gt;RichFunction2AsToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2astodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot;&gt;RichFunction2AsToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9403e925d997b078a9266a157c1e05968d7c20c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2astodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot;&gt;RichFunction2AsToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2astodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot;&gt;RichFunction2AsToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddf72d444e089298a38b05230dbec4e0150205f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2astointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot;&gt;RichFunction2AsToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2astointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot;&gt;RichFunction2AsToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed05c743c323ce58a4b295ccf7a40173fa357689" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2astointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot;&gt;RichFunction2AsToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2astointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot;&gt;RichFunction2AsToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e18b17ee04aac38c11723d1857e47ba36c64423" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2astolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot;&gt;RichFunction2AsToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2astolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot;&gt;RichFunction2AsToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c32c4109aadd09e9dc9dfcbbad66dbfdc88dd7f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunction2astolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot;&gt;RichFunction2AsToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2astolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot;&gt;RichFunction2AsToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d51801ee526591feef63de68739703fe617299" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot;&gt;RichFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot;&gt;RichFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7457be82dc810089e42e67567756ec8dcff137f9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot;&gt;RichFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot;&gt;RichFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c23e663ae13cce72d496b1e9b911077837a472a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot;&gt;RichIntBinaryOperatorAsFunction2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot;&gt;RichIntBinaryOperatorAsFunction2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db68f2aa36ba414d3efe3828dc13d744057c6afa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot;&gt;RichIntBinaryOperatorAsFunction2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot;&gt;RichIntBinaryOperatorAsFunction2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e99a4d5d21312ba154338d7d8b8cef14441259" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot;&gt;RichIntConsumerAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot;&gt;RichIntConsumerAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0a6e3e73ac68cad71340149631b6177e04e2d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot;&gt;RichIntConsumerAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot;&gt;RichIntConsumerAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47ac69264b6ef9d322482f9d4a6a5a56d3570b0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot;&gt;RichIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot;&gt;RichIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685552909155903125613bda640d1cb71b309dd0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot;&gt;RichIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot;&gt;RichIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee0ca0ddadfd68bbf4343c5cee550d8e26ff5d1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot;&gt;RichIntPredicateAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot;&gt;RichIntPredicateAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397efdde9f40e62cbd7582af9886392ff438e40a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot;&gt;RichIntPredicateAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot;&gt;RichIntPredicateAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae36c71a2c8d9f44c8b8f7267abcce3f29e8c21" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot;&gt;RichIntSupplierAsFunction0&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot;&gt;RichIntSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0c245a1bbc695c7f95f80a69077a504dd4a39e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot;&gt;RichIntSupplierAsFunction0&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot;&gt;RichIntSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67004d3c173c04a6ccb0afa608fe68c5fd00161" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richinttodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot;&gt;RichIntToDoubleFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richinttodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot;&gt;RichIntToDoubleFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151ca348650cd16b5364046834e01755b6cb6900" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richinttodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot;&gt;RichIntToDoubleFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richinttodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot;&gt;RichIntToDoubleFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0050996ba9f5abf21bd5ef1eec69ad52a9e230e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richinttolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot;&gt;RichIntToLongFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richinttolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot;&gt;RichIntToLongFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036bccadbff9e12a48c1fe56a064f80e25e2ed65" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richinttolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot;&gt;RichIntToLongFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richinttolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot;&gt;RichIntToLongFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af071dc2ae24aa16222ce2aa4c1578d757205e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot;&gt;RichIntUnaryOperatorAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot;&gt;RichIntUnaryOperatorAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d659896748d0fcac11905f0507f8698fe8c48c0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richintunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot;&gt;RichIntUnaryOperatorAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot;&gt;RichIntUnaryOperatorAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2883a4577133e6d5b1f6cd00d5c4ea996de9b02" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot;&gt;RichLongBinaryOperatorAsFunction2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot;&gt;RichLongBinaryOperatorAsFunction2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661ccb73e328f0db97c7592012a44288a2417e26" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot;&gt;RichLongBinaryOperatorAsFunction2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot;&gt;RichLongBinaryOperatorAsFunction2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbaebbcc2b209b86eeb99ce776b5bdb6637d10d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot;&gt;RichLongConsumerAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot;&gt;RichLongConsumerAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7144855e6818ad804a5fb9e99f2065ae57273d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot;&gt;RichLongConsumerAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot;&gt;RichLongConsumerAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46773cb4b8e4753f612d13738924a4623994ec6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot;&gt;RichLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot;&gt;RichLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1321f5d09cb76cac88fd67f42f9a33735aedd494" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot;&gt;RichLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot;&gt;RichLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8646d6f1bdf942efc5460ec6daed3b450c72a65d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot;&gt;RichLongPredicateAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot;&gt;RichLongPredicateAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea0db293cb48d04f2365941a74b1c90e520c1f4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot;&gt;RichLongPredicateAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot;&gt;RichLongPredicateAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff626d583e4e969bcaa63a6b90d1c9411ef9a29" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot;&gt;RichLongSupplierAsFunction0&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot;&gt;RichLongSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2adc05f731f36d84702a74b2ca15957c4da7e27" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot;&gt;RichLongSupplierAsFunction0&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot;&gt;RichLongSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e0a19a752bf55df9bc01d1a162bbab40045a42" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot;&gt;RichLongToDoubleFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot;&gt;RichLongToDoubleFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062d0756b50971ef6e0c80f9085e07e1441e8cac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot;&gt;RichLongToDoubleFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot;&gt;RichLongToDoubleFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4965717a15c7bfd0d98802b64bf7c4d27ef8a8fd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot;&gt;RichLongToIntFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot;&gt;RichLongToIntFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b8df91af665f40ed7631c1fff3d55aec2073b0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot;&gt;RichLongToIntFunctionAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot;&gt;RichLongToIntFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12122e38d881048467c9a0aedb88feeac6aa3f5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot;&gt;RichLongUnaryOperatorAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot;&gt;RichLongUnaryOperatorAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36672353f6ca414887961b7ff2723d903df1e718" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richlongunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot;&gt;RichLongUnaryOperatorAsFunction1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot;&gt;RichLongUnaryOperatorAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f71e7d67e89ec0e722cb15ffb7850c876a6ab74" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richobjdoubleconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot;&gt;RichObjDoubleConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richobjdoubleconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot;&gt;RichObjDoubleConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327eaee24630582dce9eb3ab69341d8cbf3d0544" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richobjdoubleconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot;&gt;RichObjDoubleConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richobjdoubleconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot;&gt;RichObjDoubleConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cd45758471f33a92229f9794a4707800e9f8e3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richobjintconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot;&gt;RichObjIntConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richobjintconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot;&gt;RichObjIntConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de0cfca23aa5d26207f334061ad50e8e40e09fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richobjintconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot;&gt;RichObjIntConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richobjintconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot;&gt;RichObjIntConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597eacbb5afd14626eead3cf59c078e40606962f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richobjlongconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot;&gt;RichObjLongConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richobjlongconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot;&gt;RichObjLongConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475bdc8f258ccc774039f7e128a7ccc97da166fb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richobjlongconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot;&gt;RichObjLongConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richobjlongconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot;&gt;RichObjLongConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1082589b9e24f0bdc6ddc5d873c1ef6711495685" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot;&gt;RichPredicateAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot;&gt;RichPredicateAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d250038cb5f15940c1caf1bd86264e4e89802c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot;&gt;RichPredicateAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot;&gt;RichPredicateAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3bde092fad9a192b185ea170e587ac365dc589" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot;&gt;RichSupplierAsFunction0&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot;&gt;RichSupplierAsFunction0&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbddb560b8c1f7fe80fcee0600da29adf3b5f68" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot;&gt;RichSupplierAsFunction0&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot;&gt;RichSupplierAsFunction0&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1e0eb85b460c7bb2e0038f110088a53c370688" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtodoublebifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot;&gt;RichToDoubleBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtodoublebifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot;&gt;RichToDoubleBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9f33ed3085b1aaf281e08c1a0a805797ee3c50" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtodoublebifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot;&gt;RichToDoubleBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtodoublebifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot;&gt;RichToDoubleBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9679bfb0785b34bcc6dfc3c19a36ab9b107ee34b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot;&gt;RichToDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot;&gt;RichToDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4bb4a3daa78dd1a7b4c5d2bf77c8239e6d3e9a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot;&gt;RichToDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot;&gt;RichToDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494821e17286d090e8a3470e96cf674f742c9df0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtointbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot;&gt;RichToIntBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtointbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot;&gt;RichToIntBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf05ffc90da16d16d35ab813fcfddaf19751e9c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtointbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot;&gt;RichToIntBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtointbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot;&gt;RichToIntBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ed331d97ba534c1f319dabb420c3c03f17620a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot;&gt;RichToIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot;&gt;RichToIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab39e31af48320c6a2ae73d22c30073f11a28540" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot;&gt;RichToIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot;&gt;RichToIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e212dd7bd72a45b2486e01c73cf3567a6b60e0e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtolongbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot;&gt;RichToLongBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtolongbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot;&gt;RichToLongBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7dfca9fc9f62ca2f58985b00967036444b8a79" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtolongbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot;&gt;RichToLongBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtolongbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot;&gt;RichToLongBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f392ab7c6e00908064d70d32cf6e6233d4e4bb9b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot;&gt;RichToLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot;&gt;RichToLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce089f4baf91dac72233459282e55dfae270ac5d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richtolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot;&gt;RichToLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot;&gt;RichToLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513917708ee37fca3b334b70372825fa437b730e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot;&gt;RichUnaryOperatorAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot;&gt;RichUnaryOperatorAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ebecc13c055a7742cd94ffc0670d34064de5c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;functionwrappers%24%24richunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot;&gt;RichUnaryOperatorAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot;&gt;RichUnaryOperatorAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26885bdc3da6457742747ab0a63c26460a5eb2ae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190d6c8a17cb073fdb2d9c86e90b7b08d152ff4d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ed250f5aa96df5d354cbb1627dddb1a62b122e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;futureconverters%24%24completionstageops&quot; id=&quot;scala.jdk.FutureConverters.CompletionStageOps&quot; name=&quot;scala.jdk.FutureConverters.CompletionStageOps&quot;&gt;CompletionStageOps&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.CompletionStageOps.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;futureconverters%24%24completionstageops&quot; id=&quot;scala.jdk.FutureConverters.CompletionStageOps&quot; name=&quot;scala.jdk.FutureConverters.CompletionStageOps&quot;&gt;CompletionStageOps&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.CompletionStageOps.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41355570f5656eca17c279a242ab60d4ee153484" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;futureconverters%24%24completionstageops&quot; id=&quot;scala.jdk.FutureConverters.CompletionStageOps&quot; name=&quot;scala.jdk.FutureConverters.CompletionStageOps&quot;&gt;CompletionStageOps&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.CompletionStageOps.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;futureconverters%24%24completionstageops&quot; id=&quot;scala.jdk.FutureConverters.CompletionStageOps&quot; name=&quot;scala.jdk.FutureConverters.CompletionStageOps&quot;&gt;CompletionStageOps&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.CompletionStageOps.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5746f4c8316dc9922b3310fe701fa648623d9e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;futureconverters%24%24futureops&quot; id=&quot;scala.jdk.FutureConverters.FutureOps&quot; name=&quot;scala.jdk.FutureConverters.FutureOps&quot;&gt;FutureOps&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.FutureOps.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;futureconverters%24%24futureops&quot; id=&quot;scala.jdk.FutureConverters.FutureOps&quot; name=&quot;scala.jdk.FutureConverters.FutureOps&quot;&gt;FutureOps&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.FutureOps.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31458074d11a382fadca66442c6dc47972cdf8c0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;futureconverters%24%24futureops&quot; id=&quot;scala.jdk.FutureConverters.FutureOps&quot; name=&quot;scala.jdk.FutureConverters.FutureOps&quot;&gt;FutureOps&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.FutureOps.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;futureconverters%24%24futureops&quot; id=&quot;scala.jdk.FutureConverters.FutureOps&quot; name=&quot;scala.jdk.FutureConverters.FutureOps&quot;&gt;FutureOps&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.FutureOps.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1134b8e2f827541dde3db961a9930c9595ea1242" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;getter&quot; id=&quot;scala.annotation.meta.getter&quot; name=&quot;scala.annotation.meta.getter&quot;&gt;getter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;getter&quot; id=&quot;scala.annotation.meta.getter&quot; name=&quot;scala.annotation.meta.getter&quot;&gt;getter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f0390b0f2027ee8edab658f80575818f001b05" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;getter&quot; id=&quot;scala.annotation.meta.getter&quot; name=&quot;scala.annotation.meta.getter&quot;&gt;getter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;getter&quot; id=&quot;scala.annotation.meta.getter&quot; name=&quot;scala.annotation.meta.getter&quot;&gt;getter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ea48d23272a76c468325f43499bbda08a8b82a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;growable&quot; id=&quot;scala.collection.mutable.Growable&quot; name=&quot;scala.collection.mutable.Growable&quot;&gt;Growable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Growable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;growable&quot; id=&quot;scala.collection.mutable.Growable&quot; name=&quot;scala.collection.mutable.Growable&quot;&gt;Growable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Growable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf8a7dc7f0a4bf5c8e80f85a4a1ab3867264d23" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;growable&quot; id=&quot;scala.collection.mutable.Growable&quot; name=&quot;scala.collection.mutable.Growable&quot;&gt;Growable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Growable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;growable&quot; id=&quot;scala.collection.mutable.Growable&quot; name=&quot;scala.collection.mutable.Growable&quot;&gt;Growable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Growable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8cb954d227095e71a332c43321c56e09168f1b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae427537896482e89a9196cd1a8bd4f1f075a01" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d499704bcd47e08953d7b6c5b43ad613c02dcf9d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16607d2e9193d0061bd140b4cec95ecca2daabd1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959584b95a073a24255ad4f053765e4a9ee140e8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashing%24%24default&quot; id=&quot;scala.util.hashing.Hashing.Default&quot; name=&quot;scala.util.hashing.Hashing.Default&quot;&gt;Default&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.Default.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashing%24%24default&quot; id=&quot;scala.util.hashing.Hashing.Default&quot; name=&quot;scala.util.hashing.Hashing.Default&quot;&gt;Default&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.Default.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9f0548d4e9cce6c4cb74701116066664f06fbd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashing%24%24default&quot; id=&quot;scala.util.hashing.Hashing.Default&quot; name=&quot;scala.util.hashing.Hashing.Default&quot;&gt;Default&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.Default.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashing%24%24default&quot; id=&quot;scala.util.hashing.Hashing.Default&quot; name=&quot;scala.util.hashing.Hashing.Default&quot;&gt;Default&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.Default.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a0dd6bcc9ccad4dcd5dbe9beca6fc64cb3820d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef075e107153efee0992e6eadf8ee8ec334bf5d7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a5d75676d0f033f4d0b04e60d4626ff655c603" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aeb5d8fafab153bcb0c9151c152ef3ef71d5b3d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbd7fe5d3810427c48645a8e3b6e195351036cf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276b3eef469e04f0da46b9bec8bd16b11d1ed8e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5095e3aeebb1521791c1a38e0356d3146a2efe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da14a603b96ed6d4c49990a7312381c9d848fcd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbddfd2a10b0f931ebb6dac3f8c50aa05d5eb4e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;immutablebuilder&quot; id=&quot;scala.collection.mutable.ImmutableBuilder&quot; name=&quot;scala.collection.mutable.ImmutableBuilder&quot;&gt;ImmutableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;immutablebuilder&quot; id=&quot;scala.collection.mutable.ImmutableBuilder&quot; name=&quot;scala.collection.mutable.ImmutableBuilder&quot;&gt;ImmutableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630be87bda4f91d62589d88fa288acead45fa231" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;immutablebuilder&quot; id=&quot;scala.collection.mutable.ImmutableBuilder&quot; name=&quot;scala.collection.mutable.ImmutableBuilder&quot;&gt;ImmutableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;immutablebuilder&quot; id=&quot;scala.collection.mutable.ImmutableBuilder&quot; name=&quot;scala.collection.mutable.ImmutableBuilder&quot;&gt;ImmutableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275330c015246352e2f443e4b0d6bcf1c98e2379" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;implicitambiguous&quot; id=&quot;scala.annotation.implicitAmbiguous&quot; name=&quot;scala.annotation.implicitAmbiguous&quot;&gt;implicitAmbiguous&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;implicitambiguous&quot; id=&quot;scala.annotation.implicitAmbiguous&quot; name=&quot;scala.annotation.implicitAmbiguous&quot;&gt;implicitAmbiguous&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f7d0e808c6dc66e15310ee73d3f843168b41e6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;implicitambiguous&quot; id=&quot;scala.annotation.implicitAmbiguous&quot; name=&quot;scala.annotation.implicitAmbiguous&quot;&gt;implicitAmbiguous&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;implicitambiguous&quot; id=&quot;scala.annotation.implicitAmbiguous&quot; name=&quot;scala.annotation.implicitAmbiguous&quot;&gt;implicitAmbiguous&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9897bf6844cd18b19633bd5794ece4e32b1724" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;implicitnotfound&quot; id=&quot;scala.annotation.implicitNotFound&quot; name=&quot;scala.annotation.implicitNotFound&quot;&gt;implicitNotFound&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;implicitnotfound&quot; id=&quot;scala.annotation.implicitNotFound&quot; name=&quot;scala.annotation.implicitNotFound&quot;&gt;implicitNotFound&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15528bfb43a82f39aa738b99206d879b9b464f32" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;implicitnotfound&quot; id=&quot;scala.annotation.implicitNotFound&quot; name=&quot;scala.annotation.implicitNotFound&quot;&gt;implicitNotFound&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;implicitnotfound&quot; id=&quot;scala.annotation.implicitNotFound&quot; name=&quot;scala.annotation.implicitNotFound&quot;&gt;implicitNotFound&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57ae55f6c425ef4b50a6b31ce5dbdc0df82a615" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0782250def43a917e10b735f0521f4d259fa4881" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed01032c1058b21294f48f4db81e50d348f17c8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb3a640e47a9a7fb4149dc37f920dc26d7ceeda" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc91d99c2b1ec231172d3ca0cc43bc6edb8cb3fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0e8c7cca69eb2d686ee4c1216ef2af66334d5a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4368afca95c8c1d6db2eec0e00dd49f9c0f84b5a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098a4a601a6e56914403f5a0a287bdba27e928be" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5fea741d34ecfa4dfa6bc0f15eed6aa68b954a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.IndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.IndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a5624b2f489c4bf6235d935d7e560ec67d68e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.IndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.IndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d23fadfd74331c41ed42a12f3df040a2d8d0c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.immutable.IndexedSeqOps&quot; name=&quot;scala.collection.immutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.immutable.IndexedSeqOps&quot; name=&quot;scala.collection.immutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ba4f30f1833bdbf83c946936a20e532a6d6b73" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.immutable.IndexedSeqOps&quot; name=&quot;scala.collection.immutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.immutable.IndexedSeqOps&quot; name=&quot;scala.collection.immutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cce6051f98eacba60e9a11c5600208dea1aff1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.mutable.IndexedSeqOps&quot; name=&quot;scala.collection.mutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.mutable.IndexedSeqOps&quot; name=&quot;scala.collection.mutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602e9691706291de6c9a5c04efb2643fc71502b1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.mutable.IndexedSeqOps&quot; name=&quot;scala.collection.mutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.mutable.IndexedSeqOps&quot; name=&quot;scala.collection.mutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b53657b8af1c98ae2b49d651265643a6d89e55" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d34c6a3d62af1b5b8358b45cb4bf6b0a0e085a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a038d0a0eff57961f53dd19e705243a37c9081" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24appended&quot; id=&quot;scala.collection.IndexedSeqView.Appended&quot; name=&quot;scala.collection.IndexedSeqView.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24appended&quot; id=&quot;scala.collection.IndexedSeqView.Appended&quot; name=&quot;scala.collection.IndexedSeqView.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cb899cda151341338ef0e6bae233de4de95709" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24appended&quot; id=&quot;scala.collection.IndexedSeqView.Appended&quot; name=&quot;scala.collection.IndexedSeqView.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24appended&quot; id=&quot;scala.collection.IndexedSeqView.Appended&quot; name=&quot;scala.collection.IndexedSeqView.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da250fce0c71d5e3c4c2bfc425eebe9e6cd8bcfc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24concat&quot; id=&quot;scala.collection.IndexedSeqView.Concat&quot; name=&quot;scala.collection.IndexedSeqView.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24concat&quot; id=&quot;scala.collection.IndexedSeqView.Concat&quot; name=&quot;scala.collection.IndexedSeqView.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800f763b63553860650575311fe8b768b171176d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24concat&quot; id=&quot;scala.collection.IndexedSeqView.Concat&quot; name=&quot;scala.collection.IndexedSeqView.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24concat&quot; id=&quot;scala.collection.IndexedSeqView.Concat&quot; name=&quot;scala.collection.IndexedSeqView.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38ed151907ea0b044ed2683c50764ba05ceb82a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24drop&quot; id=&quot;scala.collection.IndexedSeqView.Drop&quot; name=&quot;scala.collection.IndexedSeqView.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24drop&quot; id=&quot;scala.collection.IndexedSeqView.Drop&quot; name=&quot;scala.collection.IndexedSeqView.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2372e19ff9bc916e9d98cc3d51578b7b92dc2f74" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24drop&quot; id=&quot;scala.collection.IndexedSeqView.Drop&quot; name=&quot;scala.collection.IndexedSeqView.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24drop&quot; id=&quot;scala.collection.IndexedSeqView.Drop&quot; name=&quot;scala.collection.IndexedSeqView.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d20fd449978897c7e2990b41b5eb3a3b2eae3cb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24dropright&quot; id=&quot;scala.collection.IndexedSeqView.DropRight&quot; name=&quot;scala.collection.IndexedSeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24dropright&quot; id=&quot;scala.collection.IndexedSeqView.DropRight&quot; name=&quot;scala.collection.IndexedSeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2317d0e2ea4840243957c824713446f4ef45e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24dropright&quot; id=&quot;scala.collection.IndexedSeqView.DropRight&quot; name=&quot;scala.collection.IndexedSeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24dropright&quot; id=&quot;scala.collection.IndexedSeqView.DropRight&quot; name=&quot;scala.collection.IndexedSeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525934c944483d8007764e10ee68d8ede63604c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24id&quot; id=&quot;scala.collection.IndexedSeqView.Id&quot; name=&quot;scala.collection.IndexedSeqView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24id&quot; id=&quot;scala.collection.IndexedSeqView.Id&quot; name=&quot;scala.collection.IndexedSeqView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90213473e33c322505683733d3c3c830c912025c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24id&quot; id=&quot;scala.collection.IndexedSeqView.Id&quot; name=&quot;scala.collection.IndexedSeqView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24id&quot; id=&quot;scala.collection.IndexedSeqView.Id&quot; name=&quot;scala.collection.IndexedSeqView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2af0d3b32145b316610ffec8a018d653d8e7eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24map&quot; id=&quot;scala.collection.IndexedSeqView.Map&quot; name=&quot;scala.collection.IndexedSeqView.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24map&quot; id=&quot;scala.collection.IndexedSeqView.Map&quot; name=&quot;scala.collection.IndexedSeqView.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f472dd150f1015469bf8a562178302fcee7c41" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24map&quot; id=&quot;scala.collection.IndexedSeqView.Map&quot; name=&quot;scala.collection.IndexedSeqView.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24map&quot; id=&quot;scala.collection.IndexedSeqView.Map&quot; name=&quot;scala.collection.IndexedSeqView.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ad08b48e8d68bb44b1a8f76d0758ea4fcef7ba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24prepended&quot; id=&quot;scala.collection.IndexedSeqView.Prepended&quot; name=&quot;scala.collection.IndexedSeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24prepended&quot; id=&quot;scala.collection.IndexedSeqView.Prepended&quot; name=&quot;scala.collection.IndexedSeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c53efe33194d021e1cf25fb4dc9bb11375ade32" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24prepended&quot; id=&quot;scala.collection.IndexedSeqView.Prepended&quot; name=&quot;scala.collection.IndexedSeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24prepended&quot; id=&quot;scala.collection.IndexedSeqView.Prepended&quot; name=&quot;scala.collection.IndexedSeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3350124bd8873288e34d69e678b7063827d8e163" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24reverse&quot; id=&quot;scala.collection.IndexedSeqView.Reverse&quot; name=&quot;scala.collection.IndexedSeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24reverse&quot; id=&quot;scala.collection.IndexedSeqView.Reverse&quot; name=&quot;scala.collection.IndexedSeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538a08a80a38b21ecaa27db3f2639cc2ed29ca5d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24reverse&quot; id=&quot;scala.collection.IndexedSeqView.Reverse&quot; name=&quot;scala.collection.IndexedSeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24reverse&quot; id=&quot;scala.collection.IndexedSeqView.Reverse&quot; name=&quot;scala.collection.IndexedSeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bcefe563920e5d0e2bef0e1ef2276983a5f88b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24slice&quot; id=&quot;scala.collection.IndexedSeqView.Slice&quot; name=&quot;scala.collection.IndexedSeqView.Slice&quot;&gt;Slice&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24slice&quot; id=&quot;scala.collection.IndexedSeqView.Slice&quot; name=&quot;scala.collection.IndexedSeqView.Slice&quot;&gt;Slice&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09ac79425ff6b1c85043c99c9fc9cb75fba0dfd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24slice&quot; id=&quot;scala.collection.IndexedSeqView.Slice&quot; name=&quot;scala.collection.IndexedSeqView.Slice&quot;&gt;Slice&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24slice&quot; id=&quot;scala.collection.IndexedSeqView.Slice&quot; name=&quot;scala.collection.IndexedSeqView.Slice&quot;&gt;Slice&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75cc17f9f5445fd4e58a97bc34c6be4d9d113288" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24take&quot; id=&quot;scala.collection.IndexedSeqView.Take&quot; name=&quot;scala.collection.IndexedSeqView.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24take&quot; id=&quot;scala.collection.IndexedSeqView.Take&quot; name=&quot;scala.collection.IndexedSeqView.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bb9e62abf500f2f74cda6234b66d6d2f34cfbd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24take&quot; id=&quot;scala.collection.IndexedSeqView.Take&quot; name=&quot;scala.collection.IndexedSeqView.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24take&quot; id=&quot;scala.collection.IndexedSeqView.Take&quot; name=&quot;scala.collection.IndexedSeqView.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47e60147a659a4b068526b8e58f3925367ee5eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24takeright&quot; id=&quot;scala.collection.IndexedSeqView.TakeRight&quot; name=&quot;scala.collection.IndexedSeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24takeright&quot; id=&quot;scala.collection.IndexedSeqView.TakeRight&quot; name=&quot;scala.collection.IndexedSeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5fc28fa68ee6c569553a33f2f8d247bdde1d83" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;indexedseqview%24%24takeright&quot; id=&quot;scala.collection.IndexedSeqView.TakeRight&quot; name=&quot;scala.collection.IndexedSeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview%24%24takeright&quot; id=&quot;scala.collection.IndexedSeqView.TakeRight&quot; name=&quot;scala.collection.IndexedSeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a1b4371f15054724d7fe3274b2b398f8c02e48" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;inline&quot; id=&quot;scala.inline&quot; name=&quot;scala.inline&quot;&gt;inline&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;inline&quot; id=&quot;scala.inline&quot; name=&quot;scala.inline&quot;&gt;inline&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8933530f128ee41b0532d49996548c8ed55c63d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;inline&quot; id=&quot;scala.inline&quot; name=&quot;scala.inline&quot;&gt;inline&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;inline&quot; id=&quot;scala.inline&quot; name=&quot;scala.inline&quot;&gt;inline&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72664f64a5b77233127dfe2745eeec72aea9602" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686399f1b134e8fd0cc7f91e85b109522c6b1488" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e513a97d83fadb584c4db42897447d2911afaf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79d455fe095adc7d7bc6abf7ac9ddd127a3142e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065cdcb9a7787041cb19efca74272f8bacd6c0a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.IntAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.IntAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.IntAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.IntAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.IntAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.IntAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c870fc62819a665bfc23adc599001536b60ed96e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.IntAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.IntAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.IntAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.IntAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.IntAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.IntAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5cde08703de6a35f9f0b121bbfd4af8b0fe221" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;integral&quot; id=&quot;scala.math.Integral&quot; name=&quot;scala.math.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;integral&quot; id=&quot;scala.math.Integral&quot; name=&quot;scala.math.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2134523a23770f7daab273b08224f4a221f8a54" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;integral&quot; id=&quot;scala.math.Integral&quot; name=&quot;scala.math.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;integral&quot; id=&quot;scala.math.Integral&quot; name=&quot;scala.math.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c096c7745b7d0832a14d98f235ccac431a8ce94" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;integral%24%24extraimplicits&quot; id=&quot;scala.math.Integral.ExtraImplicits&quot; name=&quot;scala.math.Integral.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;integral%24%24extraimplicits&quot; id=&quot;scala.math.Integral.ExtraImplicits&quot; name=&quot;scala.math.Integral.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3e797e422617c0b01f9554197da080d4cc3118" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;integral%24%24extraimplicits&quot; id=&quot;scala.math.Integral.ExtraImplicits&quot; name=&quot;scala.math.Integral.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;integral%24%24extraimplicits&quot; id=&quot;scala.math.Integral.ExtraImplicits&quot; name=&quot;scala.math.Integral.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ca9ab03e4093de69c45f5897d17a8927d1719e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;integral%24integralops&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;integral%24integralops&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a957b273686b7bc34cc5d19651d86073ed736290" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;integral%24integralops&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;integral%24integralops&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bfa17121f6878754943ef3dbc809924d2a61de" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0335c57f8ac7e379678506e5adc661acce16cc36" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de07626e15b50618342dff21bfb69ce13267041" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258bb547cd0b8fe82c440da105b25297a10b4ca5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6d4414b72658a632b112273064b658d1fac8a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intstepper%24%24intstepperspliterator&quot; id=&quot;scala.collection.IntStepper.IntStepperSpliterator&quot; name=&quot;scala.collection.IntStepper.IntStepperSpliterator&quot;&gt;IntStepperSpliterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intstepper%24%24intstepperspliterator&quot; id=&quot;scala.collection.IntStepper.IntStepperSpliterator&quot; name=&quot;scala.collection.IntStepper.IntStepperSpliterator&quot;&gt;IntStepperSpliterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b6df3f856d483478b6e2183a9e4537d4b8ccb6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;intstepper%24%24intstepperspliterator&quot; id=&quot;scala.collection.IntStepper.IntStepperSpliterator&quot; name=&quot;scala.collection.IntStepper.IntStepperSpliterator&quot;&gt;IntStepperSpliterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intstepper%24%24intstepperspliterator&quot; id=&quot;scala.collection.IntStepper.IntStepperSpliterator&quot; name=&quot;scala.collection.IntStepper.IntStepperSpliterator&quot;&gt;IntStepperSpliterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d16d012bfa76a9f48e60ae1fb37876daa26ff7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95240e274239dacb8fe9f58c080be5bdef8e55b6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6e76e1740c144e8d6eb8e9b6fac58518ac2314" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isiterablelowpriority&quot; id=&quot;scala.collection.generic.IsIterableLowPriority&quot; name=&quot;scala.collection.generic.IsIterableLowPriority&quot;&gt;IsIterableLowPriority&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterablelowpriority&quot; id=&quot;scala.collection.generic.IsIterableLowPriority&quot; name=&quot;scala.collection.generic.IsIterableLowPriority&quot;&gt;IsIterableLowPriority&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465370aab9c5a7cdcac04904d709775804146f61" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isiterablelowpriority&quot; id=&quot;scala.collection.generic.IsIterableLowPriority&quot; name=&quot;scala.collection.generic.IsIterableLowPriority&quot;&gt;IsIterableLowPriority&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterablelowpriority&quot; id=&quot;scala.collection.generic.IsIterableLowPriority&quot; name=&quot;scala.collection.generic.IsIterableLowPriority&quot;&gt;IsIterableLowPriority&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03c81112ba457955a8fe1bbc11082a73fb382ff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isiterableonce&quot; id=&quot;scala.collection.generic.IsIterableOnce&quot; name=&quot;scala.collection.generic.IsIterableOnce&quot;&gt;IsIterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnce.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterableonce&quot; id=&quot;scala.collection.generic.IsIterableOnce&quot; name=&quot;scala.collection.generic.IsIterableOnce&quot;&gt;IsIterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnce.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784528e97a46e5fb02236c87656fda0bffd312cc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isiterableonce&quot; id=&quot;scala.collection.generic.IsIterableOnce&quot; name=&quot;scala.collection.generic.IsIterableOnce&quot;&gt;IsIterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnce.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterableonce&quot; id=&quot;scala.collection.generic.IsIterableOnce&quot; name=&quot;scala.collection.generic.IsIterableOnce&quot;&gt;IsIterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnce.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9052b4fce3d1a62f5a83ed05a7fb3e499698f258" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isiterableoncelowpriority&quot; id=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot; name=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot;&gt;IsIterableOnceLowPriority&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterableoncelowpriority&quot; id=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot; name=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot;&gt;IsIterableOnceLowPriority&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0b95c54996827b92ecb33bf10eaa0936294390" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isiterableoncelowpriority&quot; id=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot; name=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot;&gt;IsIterableOnceLowPriority&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterableoncelowpriority&quot; id=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot; name=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot;&gt;IsIterableOnceLowPriority&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd87ede4e5412c6c98d02e9831e1f3a62f8fba5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cff9307143a127a967c5f41680a63b300864a76" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dbaf59e6fa065c6d07bf4214b1f80f372932d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eba54b982b6210b6c763330572488ffdf3e918b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61475ee0513b44919d911381bdc6d49f2dac4508" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4399f6c34f59393981315ab999ccde02a9fe0d06" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027f07038e1320fba427727d79b188695487a218" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354c5a11a5011182c9036755ad191b380d7fd17e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12633b90c649282c734e929e7151401a405ca4c0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd50657bbc7b2df6d0630b586fed0aadb6783510" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6215f3874297cf716bde975892e3c9a5697a3c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726184a19220d73d1bc2f891a84ac5370aeecc54" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8497125200ef204713a59aeb14d060501c047661" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterablefactory%24%24delegate&quot; id=&quot;scala.collection.IterableFactory.Delegate&quot; name=&quot;scala.collection.IterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterablefactory%24%24delegate&quot; id=&quot;scala.collection.IterableFactory.Delegate&quot; name=&quot;scala.collection.IterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee21632a853217bcbae089c5a8cb16d752a82e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterablefactory%24%24delegate&quot; id=&quot;scala.collection.IterableFactory.Delegate&quot; name=&quot;scala.collection.IterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterablefactory%24%24delegate&quot; id=&quot;scala.collection.IterableFactory.Delegate&quot; name=&quot;scala.collection.IterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2436d4abcc210cbf57e88c850937b160e59592e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterablefactorydefaults&quot; id=&quot;scala.collection.IterableFactoryDefaults&quot; name=&quot;scala.collection.IterableFactoryDefaults&quot;&gt;IterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterablefactorydefaults&quot; id=&quot;scala.collection.IterableFactoryDefaults&quot; name=&quot;scala.collection.IterableFactoryDefaults&quot;&gt;IterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e2d4fe7971216b8ba34571884b79e11fea461f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterablefactorydefaults&quot; id=&quot;scala.collection.IterableFactoryDefaults&quot; name=&quot;scala.collection.IterableFactoryDefaults&quot;&gt;IterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterablefactorydefaults&quot; id=&quot;scala.collection.IterableFactoryDefaults&quot; name=&quot;scala.collection.IterableFactoryDefaults&quot;&gt;IterableFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78a331e93745ea38fc50bff1476842f19af30e5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnce.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnce.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b484a89eb74487a9602c3a42f040a3750beb65" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnce.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnce.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe287fa282278dd52cff4813ac55f53f0d5c819a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableonceextensionmethods&quot; id=&quot;scala.collection.IterableOnceExtensionMethods&quot; name=&quot;scala.collection.IterableOnceExtensionMethods&quot;&gt;IterableOnceExtensionMethods&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceExtensionMethods.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableonceextensionmethods&quot; id=&quot;scala.collection.IterableOnceExtensionMethods&quot; name=&quot;scala.collection.IterableOnceExtensionMethods&quot;&gt;IterableOnceExtensionMethods&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceExtensionMethods.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1303f734fb83ae396884aca00a3712214a1507" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableonceextensionmethods&quot; id=&quot;scala.collection.IterableOnceExtensionMethods&quot; name=&quot;scala.collection.IterableOnceExtensionMethods&quot;&gt;IterableOnceExtensionMethods&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceExtensionMethods.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableonceextensionmethods&quot; id=&quot;scala.collection.IterableOnceExtensionMethods&quot; name=&quot;scala.collection.IterableOnceExtensionMethods&quot;&gt;IterableOnceExtensionMethods&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceExtensionMethods.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0254de091eb51761eeec12138aa69920c726658" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableonceops&quot; id=&quot;scala.collection.IterableOnceOps&quot; name=&quot;scala.collection.IterableOnceOps&quot;&gt;IterableOnceOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableonceops&quot; id=&quot;scala.collection.IterableOnceOps&quot; name=&quot;scala.collection.IterableOnceOps&quot;&gt;IterableOnceOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6bb6d28284a06ec08884d1322e02907c91df81" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableonceops&quot; id=&quot;scala.collection.IterableOnceOps&quot; name=&quot;scala.collection.IterableOnceOps&quot;&gt;IterableOnceOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableonceops&quot; id=&quot;scala.collection.IterableOnceOps&quot; name=&quot;scala.collection.IterableOnceOps&quot;&gt;IterableOnceOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1aa456b945f0de71eb1a3c7b415bc8ee9dbb81" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableops&quot; id=&quot;scala.collection.IterableOps&quot; name=&quot;scala.collection.IterableOps&quot;&gt;IterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableops&quot; id=&quot;scala.collection.IterableOps&quot; name=&quot;scala.collection.IterableOps&quot;&gt;IterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7578fe3bc7d5b93843e7a652a3039f69a6fae5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableops&quot; id=&quot;scala.collection.IterableOps&quot; name=&quot;scala.collection.IterableOps&quot;&gt;IterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableops&quot; id=&quot;scala.collection.IterableOps&quot; name=&quot;scala.collection.IterableOps&quot;&gt;IterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41871b651dc639058ca37095bcc5935665802244" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a96141ad852c44a1f8170cbea4647a19eec8dce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533548dfed9be235deb59851173013ab23381dbc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableops%24%24withfilter&quot; id=&quot;scala.collection.IterableOps.WithFilter&quot; name=&quot;scala.collection.IterableOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableops%24%24withfilter&quot; id=&quot;scala.collection.IterableOps.WithFilter&quot; name=&quot;scala.collection.IterableOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8ca087cbe8904658f7b7f95d99c521e0aad80b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterableops%24%24withfilter&quot; id=&quot;scala.collection.IterableOps.WithFilter&quot; name=&quot;scala.collection.IterableOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableops%24%24withfilter&quot; id=&quot;scala.collection.IterableOps.WithFilter&quot; name=&quot;scala.collection.IterableOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bcb481d91cfad35bb2eb401a6e6ba1018d3e10" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d54e74a745e862f626cf86d46b3a1d6de1c724" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e66535acf556d4214a8756efa0592fe6e3950dc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterator%24groupediterator&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator%24groupediterator&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780812f2ca018b4c9f6fabf2272f7b7ce4a0fa04" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;iterator%24groupediterator&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator%24groupediterator&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a505a23b8c75dd16cf510b4b5809774ae9b93326" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94abe1dc4583d208697aa85867d3d8b8f4b008f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c86e8e8690792b6b575f28a3e7f12a72a66e079" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asjavacollection&quot; id=&quot;scala.collection.JavaConverters.AsJavaCollection&quot; name=&quot;scala.collection.JavaConverters.AsJavaCollection&quot;&gt;AsJavaCollection&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaCollection.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjavacollection&quot; id=&quot;scala.collection.JavaConverters.AsJavaCollection&quot; name=&quot;scala.collection.JavaConverters.AsJavaCollection&quot;&gt;AsJavaCollection&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaCollection.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285124e1d5867b837decb0c9ef9983040385f36a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asjavacollection&quot; id=&quot;scala.collection.JavaConverters.AsJavaCollection&quot; name=&quot;scala.collection.JavaConverters.AsJavaCollection&quot;&gt;AsJavaCollection&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaCollection.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjavacollection&quot; id=&quot;scala.collection.JavaConverters.AsJavaCollection&quot; name=&quot;scala.collection.JavaConverters.AsJavaCollection&quot;&gt;AsJavaCollection&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaCollection.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b61f17f9a7b4b43ddb00bb88eae348088b44fd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asjavadictionary&quot; id=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot; name=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot;&gt;AsJavaDictionary&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjavadictionary&quot; id=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot; name=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot;&gt;AsJavaDictionary&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa739ea88e1bdbaaa6768fca1c46cce16d12dbb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asjavadictionary&quot; id=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot; name=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot;&gt;AsJavaDictionary&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjavadictionary&quot; id=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot; name=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot;&gt;AsJavaDictionary&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4119e8cfdda942870224cc413d4010a7b5459c00" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asjavaenumeration&quot; id=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot; name=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot;&gt;AsJavaEnumeration&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjavaenumeration&quot; id=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot; name=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot;&gt;AsJavaEnumeration&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c890ad6241229a8baae6e8bba556698e95780380" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asjavaenumeration&quot; id=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot; name=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot;&gt;AsJavaEnumeration&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjavaenumeration&quot; id=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot; name=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot;&gt;AsJavaEnumeration&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12694b726f5106efa021774ea45358aa06871dd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2f8012e003832513483aa90c21d773edb238e4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aef6c1c5b04a18f4db930cbc8f424de16817898" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature&quot; id=&quot;scala.annotation.meta.languageFeature&quot; name=&quot;scala.annotation.meta.languageFeature&quot;&gt;languageFeature&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature&quot; id=&quot;scala.annotation.meta.languageFeature&quot; name=&quot;scala.annotation.meta.languageFeature&quot;&gt;languageFeature&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29df5304b8653007d1b477b72d3cdebaa584b15" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature&quot; id=&quot;scala.annotation.meta.languageFeature&quot; name=&quot;scala.annotation.meta.languageFeature&quot;&gt;languageFeature&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature&quot; id=&quot;scala.annotation.meta.languageFeature&quot; name=&quot;scala.annotation.meta.languageFeature&quot;&gt;languageFeature&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999ae4d463333307156261eaf3f5cbd8777ca941" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24dynamics&quot; id=&quot;scala.languageFeature.dynamics&quot; name=&quot;scala.languageFeature.dynamics&quot;&gt;dynamics&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24dynamics&quot; id=&quot;scala.languageFeature.dynamics&quot; name=&quot;scala.languageFeature.dynamics&quot;&gt;dynamics&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9432abf5ebbeaad4b9fdc526002cedfa84f9fbe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24dynamics&quot; id=&quot;scala.languageFeature.dynamics&quot; name=&quot;scala.languageFeature.dynamics&quot;&gt;dynamics&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24dynamics&quot; id=&quot;scala.languageFeature.dynamics&quot; name=&quot;scala.languageFeature.dynamics&quot;&gt;dynamics&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97ee44153cc916162eb8fbfc3a77effecadbfc7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24existentials&quot; id=&quot;scala.languageFeature.existentials&quot; name=&quot;scala.languageFeature.existentials&quot;&gt;existentials&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24existentials&quot; id=&quot;scala.languageFeature.existentials&quot; name=&quot;scala.languageFeature.existentials&quot;&gt;existentials&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bcc944dbc136a96623a04f1dd430318ee59d16" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24existentials&quot; id=&quot;scala.languageFeature.existentials&quot; name=&quot;scala.languageFeature.existentials&quot;&gt;existentials&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24existentials&quot; id=&quot;scala.languageFeature.existentials&quot; name=&quot;scala.languageFeature.existentials&quot;&gt;existentials&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2de58d9c802f192ab20cf78c917778ab85fc964" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24experimental%24%24macros&quot; id=&quot;scala.languageFeature.experimental.macros&quot; name=&quot;scala.languageFeature.experimental.macros&quot;&gt;macros&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24experimental%24%24macros&quot; id=&quot;scala.languageFeature.experimental.macros&quot; name=&quot;scala.languageFeature.experimental.macros&quot;&gt;macros&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a361b7000e3d547fce0dd4db93b3da67066924fb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24experimental%24%24macros&quot; id=&quot;scala.languageFeature.experimental.macros&quot; name=&quot;scala.languageFeature.experimental.macros&quot;&gt;macros&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24experimental%24%24macros&quot; id=&quot;scala.languageFeature.experimental.macros&quot; name=&quot;scala.languageFeature.experimental.macros&quot;&gt;macros&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe0eb7f751b22a1ae34fa2ed3a874512be53a73" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24higherkinds&quot; id=&quot;scala.languageFeature.higherKinds&quot; name=&quot;scala.languageFeature.higherKinds&quot;&gt;higherKinds&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24higherkinds&quot; id=&quot;scala.languageFeature.higherKinds&quot; name=&quot;scala.languageFeature.higherKinds&quot;&gt;higherKinds&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd4abced43825345b989734f93e015d46275f93" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24higherkinds&quot; id=&quot;scala.languageFeature.higherKinds&quot; name=&quot;scala.languageFeature.higherKinds&quot;&gt;higherKinds&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24higherkinds&quot; id=&quot;scala.languageFeature.higherKinds&quot; name=&quot;scala.languageFeature.higherKinds&quot;&gt;higherKinds&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d251b0091cce260d8edc6695161e51185cb8af06" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24implicitconversions&quot; id=&quot;scala.languageFeature.implicitConversions&quot; name=&quot;scala.languageFeature.implicitConversions&quot;&gt;implicitConversions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24implicitconversions&quot; id=&quot;scala.languageFeature.implicitConversions&quot; name=&quot;scala.languageFeature.implicitConversions&quot;&gt;implicitConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d925188132e24e08201b1e1a7da37ba62f5c8c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24implicitconversions&quot; id=&quot;scala.languageFeature.implicitConversions&quot; name=&quot;scala.languageFeature.implicitConversions&quot;&gt;implicitConversions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24implicitconversions&quot; id=&quot;scala.languageFeature.implicitConversions&quot; name=&quot;scala.languageFeature.implicitConversions&quot;&gt;implicitConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b1a0cefc9f47f31f7f990443faea3c9293c6bb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24postfixops&quot; id=&quot;scala.languageFeature.postfixOps&quot; name=&quot;scala.languageFeature.postfixOps&quot;&gt;postfixOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24postfixops&quot; id=&quot;scala.languageFeature.postfixOps&quot; name=&quot;scala.languageFeature.postfixOps&quot;&gt;postfixOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf81621d513abb142072058cf76b90e8d6e82155" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24postfixops&quot; id=&quot;scala.languageFeature.postfixOps&quot; name=&quot;scala.languageFeature.postfixOps&quot;&gt;postfixOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24postfixops&quot; id=&quot;scala.languageFeature.postfixOps&quot; name=&quot;scala.languageFeature.postfixOps&quot;&gt;postfixOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26f01ef40bf1f6109e210058e56e93e1b3c5fa1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24reflectivecalls&quot; id=&quot;scala.languageFeature.reflectiveCalls&quot; name=&quot;scala.languageFeature.reflectiveCalls&quot;&gt;reflectiveCalls&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24reflectivecalls&quot; id=&quot;scala.languageFeature.reflectiveCalls&quot; name=&quot;scala.languageFeature.reflectiveCalls&quot;&gt;reflectiveCalls&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a8363ba924de0e83ee4c17fdd086531afd818b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;languagefeature%24%24reflectivecalls&quot; id=&quot;scala.languageFeature.reflectiveCalls&quot; name=&quot;scala.languageFeature.reflectiveCalls&quot;&gt;reflectiveCalls&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24reflectivecalls&quot; id=&quot;scala.languageFeature.reflectiveCalls&quot; name=&quot;scala.languageFeature.reflectiveCalls&quot;&gt;reflectiveCalls&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19af81c27df78d2981eeea4bcf503aec069e7d29" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0914a97e9c99b024edd3ae1462570e915d66d47f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ef530175d9d7865ab011f90849094ae22ba8dc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazylist%24%24deferrer&quot; id=&quot;scala.collection.immutable.LazyList.Deferrer&quot; name=&quot;scala.collection.immutable.LazyList.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.Deferrer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist%24%24deferrer&quot; id=&quot;scala.collection.immutable.LazyList.Deferrer&quot; name=&quot;scala.collection.immutable.LazyList.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.Deferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11e8ddcfe02cbda39e0d8978745758b1266c96f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazylist%24%24deferrer&quot; id=&quot;scala.collection.immutable.LazyList.Deferrer&quot; name=&quot;scala.collection.immutable.LazyList.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.Deferrer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist%24%24deferrer&quot; id=&quot;scala.collection.immutable.LazyList.Deferrer&quot; name=&quot;scala.collection.immutable.LazyList.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.Deferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69dcb76a08e5366438555dc2946d389c0b349956" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazylist%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot; name=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot; name=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb615176a9953319f6c0b0033bacb75c49f01483" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazylist%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot; name=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot; name=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1be1d12b119de0c087e0bb1457c8eda770dc6e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.C1&quot;&gt;C1&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.C1&quot;&gt;C1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f5d016e32e5d4a82972299d39985fd7941a713" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.C1&quot;&gt;C1&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.C1&quot;&gt;C1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3919cee86f96d9b6fdb7cf4783054d7661e2e89" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazyzip3&quot; id=&quot;scala.collection.LazyZip3&quot; name=&quot;scala.collection.LazyZip3&quot;&gt;LazyZip3&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.C1&quot;&gt;C1&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazyzip3&quot; id=&quot;scala.collection.LazyZip3&quot; name=&quot;scala.collection.LazyZip3&quot;&gt;LazyZip3&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.C1&quot;&gt;C1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd7cfbcded19f49e3cb1de36ca48c9af30f2c7f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazyzip3&quot; id=&quot;scala.collection.LazyZip3&quot; name=&quot;scala.collection.LazyZip3&quot;&gt;LazyZip3&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.C1&quot;&gt;C1&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazyzip3&quot; id=&quot;scala.collection.LazyZip3&quot; name=&quot;scala.collection.LazyZip3&quot;&gt;LazyZip3&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.C1&quot;&gt;C1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6abd5e94e12995200e9bfd5f970eff545c5e56" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazyzip4&quot; id=&quot;scala.collection.LazyZip4&quot; name=&quot;scala.collection.LazyZip4&quot;&gt;LazyZip4&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.C1&quot;&gt;C1&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazyzip4&quot; id=&quot;scala.collection.LazyZip4&quot; name=&quot;scala.collection.LazyZip4&quot;&gt;LazyZip4&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.C1&quot;&gt;C1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72186f1b77d66ca0beff31d3ef4454c3e9761e25" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lazyzip4&quot; id=&quot;scala.collection.LazyZip4&quot; name=&quot;scala.collection.LazyZip4&quot;&gt;LazyZip4&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.C1&quot;&gt;C1&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazyzip4&quot; id=&quot;scala.collection.LazyZip4&quot; name=&quot;scala.collection.LazyZip4&quot;&gt;LazyZip4&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.C1&quot;&gt;C1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471f78400cb78ee7a58dcad97cad54a02d94ffbe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;Left&lt;/a&gt;[&lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;Left&lt;/a&gt;[&lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293e4d37f3454a258583410f8394e2c4bd146cb8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;Left&lt;/a&gt;[&lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;Left&lt;/a&gt;[&lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c408006346302793153a55a923522222284b28a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa9ae26591d92eebcd5c016063443921ab37f36" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552b0e2fa8a97c5bbc2cddfd141174f195addb4d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f8b2a1cfa9b6d00fafe7491699e0490152c71f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b86f23e7ac324bed47a60f1b81cf583977e8eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.LinearSeqOps&quot; name=&quot;scala.collection.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.LinearSeqOps&quot; name=&quot;scala.collection.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d6d738f263293e4bc8156fcea7ef098b8227e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.LinearSeqOps&quot; name=&quot;scala.collection.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.LinearSeqOps&quot; name=&quot;scala.collection.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40db7620511d4e1da9545b20318a0491a636201" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.immutable.LinearSeqOps&quot; name=&quot;scala.collection.immutable.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.immutable.LinearSeqOps&quot; name=&quot;scala.collection.immutable.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e4b8ac4ffd6d43affd1f1c5960591fb4f1ae0d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.immutable.LinearSeqOps&quot; name=&quot;scala.collection.immutable.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.immutable.LinearSeqOps&quot; name=&quot;scala.collection.immutable.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab0479cbf0bca7144c694d9475a111349b9a5a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed95540d15b6de3ea9a585e8235bcb6f5a7035f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25454a29d5f7534614446a699dd92e401f34d1ee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linkedhashmap%24linkedkeyset&quot; id=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot; name=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot;&gt;LinkedKeySet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap%24linkedkeyset&quot; id=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot; name=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot;&gt;LinkedKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b08d82f8461dcb6fbab14331aa9a8022541d2e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linkedhashmap%24linkedkeyset&quot; id=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot; name=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot;&gt;LinkedKeySet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap%24linkedkeyset&quot; id=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot; name=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot;&gt;LinkedKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b019af37841df0c2d5296d4e478c1c704246e44e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4756d8c0f34cf4be726c4043de7f3c72482f9a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e29512356a8bd71416ed560a1bc90cd15464d7b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253a138502e91944a9fc26769aa68dbfe01ba32e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572379d94bc82dac8bc0e050e9f4d93b8a13f849" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df62cc65ce5fae58a8db5eb2641196dfc3d67cda" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1f2e940a9c2c3c2630b648f15a61c4eb638003" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a3c5e4d18e1297d9a5724d896e428ec100514d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd99cd3bf8dac83aa17a5130b95390f65ea4cb5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b17242577da0b56f971fa4f5146a90afa1a7c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda31e68cd96ea669d0fabc46f52a58af9f0e393" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c85569477fb7b3c31ee472051f4c3000577a95" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1265b46eb97a5861791f8a80c4d645dcdcaeb500" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listset%24node&quot; id=&quot;scala.collection.immutable.ListSet.Node&quot; name=&quot;scala.collection.immutable.ListSet.Node&quot;&gt;Node&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listset%24node&quot; id=&quot;scala.collection.immutable.ListSet.Node&quot; name=&quot;scala.collection.immutable.ListSet.Node&quot;&gt;Node&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5767acd34d21a9736e9f1603cf85d7941c038f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;listset%24node&quot; id=&quot;scala.collection.immutable.ListSet.Node&quot; name=&quot;scala.collection.immutable.ListSet.Node&quot;&gt;Node&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listset%24node&quot; id=&quot;scala.collection.immutable.ListSet.Node&quot; name=&quot;scala.collection.immutable.ListSet.Node&quot;&gt;Node&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2312633f0ce957717492a579d7a2ea7d5ab5b7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0b49aab9b5e9268549898914c65c28c4e17776" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8557bd0f122963b02c9b300f279e2a7f4624dccd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7426e679ec8fddb21bdcd9de940b7f104033445" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddc95c86a27429b83e0a92c8c5de2e86230c53b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.LongAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.LongAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.LongAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.LongAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.LongAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.LongAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674212b50bcd821db0861c7f28fcfc933c2d35c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.LongAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.LongAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.LongAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.LongAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.LongAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.LongAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dddb93b365744dc8d49e11580484e2077cae24" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31d087d68697512d3e4a507dcab340770565390" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2277e958640cf602e1bb78e39b242056b39920f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0530d37c3945a69aa94d3fec1c77816431dad164" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5182524be52f29ac553407cc8c299f06caaf98" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longmap%24%24longmapbuilder&quot; id=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot; name=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot;&gt;LongMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap%24%24longmapbuilder&quot; id=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot; name=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot;&gt;LongMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7ad81420b85df1124c47956608b09797ff3a18" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longmap%24%24longmapbuilder&quot; id=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot; name=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot;&gt;LongMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap%24%24longmapbuilder&quot; id=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot; name=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot;&gt;LongMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6b57b72d7d0a3a97843df61440efd050e04fd4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c57119c252cd4d09d63e9ee244cc9508d2f94ba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69966d97b45967c58791b52146c3dbb812b0a9d4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longstepper%24%24longstepperspliterator&quot; id=&quot;scala.collection.LongStepper.LongStepperSpliterator&quot; name=&quot;scala.collection.LongStepper.LongStepperSpliterator&quot;&gt;LongStepperSpliterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longstepper%24%24longstepperspliterator&quot; id=&quot;scala.collection.LongStepper.LongStepperSpliterator&quot; name=&quot;scala.collection.LongStepper.LongStepperSpliterator&quot;&gt;LongStepperSpliterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b513c7780e6b101a2fc93215cd16c715d596cc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;longstepper%24%24longstepperspliterator&quot; id=&quot;scala.collection.LongStepper.LongStepperSpliterator&quot; name=&quot;scala.collection.LongStepper.LongStepperSpliterator&quot;&gt;LongStepperSpliterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longstepper%24%24longstepperspliterator&quot; id=&quot;scala.collection.LongStepper.LongStepperSpliterator&quot; name=&quot;scala.collection.LongStepper.LongStepperSpliterator&quot;&gt;LongStepperSpliterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a11640bcb423464bfdc35ae987c24a12bd2fc0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lowprioritycodecimplicits&quot; id=&quot;scala.io.LowPriorityCodecImplicits&quot; name=&quot;scala.io.LowPriorityCodecImplicits&quot;&gt;LowPriorityCodecImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lowprioritycodecimplicits&quot; id=&quot;scala.io.LowPriorityCodecImplicits&quot; name=&quot;scala.io.LowPriorityCodecImplicits&quot;&gt;LowPriorityCodecImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfd29f894ce5edba812fa798bf303e620035ce7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lowprioritycodecimplicits&quot; id=&quot;scala.io.LowPriorityCodecImplicits&quot; name=&quot;scala.io.LowPriorityCodecImplicits&quot;&gt;LowPriorityCodecImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lowprioritycodecimplicits&quot; id=&quot;scala.io.LowPriorityCodecImplicits&quot; name=&quot;scala.io.LowPriorityCodecImplicits&quot;&gt;LowPriorityCodecImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7e1987db10687fea132698005253a829baf944" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lowpriorityequiv&quot; id=&quot;scala.math.LowPriorityEquiv&quot; name=&quot;scala.math.LowPriorityEquiv&quot;&gt;LowPriorityEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lowpriorityequiv&quot; id=&quot;scala.math.LowPriorityEquiv&quot; name=&quot;scala.math.LowPriorityEquiv&quot;&gt;LowPriorityEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa2286832a66cac3d9727535c9e68ef8411e9f6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lowpriorityequiv&quot; id=&quot;scala.math.LowPriorityEquiv&quot; name=&quot;scala.math.LowPriorityEquiv&quot;&gt;LowPriorityEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lowpriorityequiv&quot; id=&quot;scala.math.LowPriorityEquiv&quot; name=&quot;scala.math.LowPriorityEquiv&quot;&gt;LowPriorityEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545333fe8d8847f423c1d5706f8074ad1eef829d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lowpriorityorderingimplicits&quot; id=&quot;scala.math.LowPriorityOrderingImplicits&quot; name=&quot;scala.math.LowPriorityOrderingImplicits&quot;&gt;LowPriorityOrderingImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lowpriorityorderingimplicits&quot; id=&quot;scala.math.LowPriorityOrderingImplicits&quot; name=&quot;scala.math.LowPriorityOrderingImplicits&quot;&gt;LowPriorityOrderingImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe780c9c93b1b8074057597333ea3dea0fc35c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;lowpriorityorderingimplicits&quot; id=&quot;scala.math.LowPriorityOrderingImplicits&quot; name=&quot;scala.math.LowPriorityOrderingImplicits&quot;&gt;LowPriorityOrderingImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lowpriorityorderingimplicits&quot; id=&quot;scala.math.LowPriorityOrderingImplicits&quot; name=&quot;scala.math.LowPriorityOrderingImplicits&quot;&gt;LowPriorityOrderingImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f253913698768da9fd1d307c453e4135246bb78b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7220dfe88b458ffc4e159d30f9db3077fc5529" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34db87819e260d52720270ff5ee6479a3f7fc31c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caccafae793d6835ec7d634c11ae934f7ac285db" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c7f0abd2450d31053879d1a5d64af9d781f86f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05503edb1e8bb6c4488e343e95609cc5e7fdb6e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f956bac5f3a8c9cb8508610c145f6fe51ebbf0d5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9186b51d45976d61e1029c7378728f5241438c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a79639673144dd74678e2c6b8fe1c31d540e41" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfca82f2f76044bf26ca402a08438aaf03cec9de" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2fac99d6aa8d24e03458a6fe6b55be4eca069f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24map1&quot; id=&quot;scala.collection.immutable.Map.Map1&quot; name=&quot;scala.collection.immutable.Map.Map1&quot;&gt;Map1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map1&quot; id=&quot;scala.collection.immutable.Map.Map1&quot; name=&quot;scala.collection.immutable.Map.Map1&quot;&gt;Map1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ec6a0e4d382dfdae279b6b0032b78856ebb97b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24map1&quot; id=&quot;scala.collection.immutable.Map.Map1&quot; name=&quot;scala.collection.immutable.Map.Map1&quot;&gt;Map1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map1&quot; id=&quot;scala.collection.immutable.Map.Map1&quot; name=&quot;scala.collection.immutable.Map.Map1&quot;&gt;Map1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04da8b2e048ec5efd58adab905d8501324d369bb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24map2&quot; id=&quot;scala.collection.immutable.Map.Map2&quot; name=&quot;scala.collection.immutable.Map.Map2&quot;&gt;Map2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map2&quot; id=&quot;scala.collection.immutable.Map.Map2&quot; name=&quot;scala.collection.immutable.Map.Map2&quot;&gt;Map2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0486143fb5f475f13a0d7312368493ae13e9a6e5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24map2&quot; id=&quot;scala.collection.immutable.Map.Map2&quot; name=&quot;scala.collection.immutable.Map.Map2&quot;&gt;Map2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map2&quot; id=&quot;scala.collection.immutable.Map.Map2&quot; name=&quot;scala.collection.immutable.Map.Map2&quot;&gt;Map2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e699b2fddc2f4b176dfccbdbd36e8cf05195aed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24map3&quot; id=&quot;scala.collection.immutable.Map.Map3&quot; name=&quot;scala.collection.immutable.Map.Map3&quot;&gt;Map3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map3&quot; id=&quot;scala.collection.immutable.Map.Map3&quot; name=&quot;scala.collection.immutable.Map.Map3&quot;&gt;Map3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9876e5784fab24135b05e06d7301bf0fd090e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24map3&quot; id=&quot;scala.collection.immutable.Map.Map3&quot; name=&quot;scala.collection.immutable.Map.Map3&quot;&gt;Map3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map3&quot; id=&quot;scala.collection.immutable.Map.Map3&quot; name=&quot;scala.collection.immutable.Map.Map3&quot;&gt;Map3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c462990d717b83cd6b73eb88a226f3cfbeb65c12" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24map4&quot; id=&quot;scala.collection.immutable.Map.Map4&quot; name=&quot;scala.collection.immutable.Map.Map4&quot;&gt;Map4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map4&quot; id=&quot;scala.collection.immutable.Map.Map4&quot; name=&quot;scala.collection.immutable.Map.Map4&quot;&gt;Map4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178c08a1ed6f50fdd3cbf25bdcc39789c7246721" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24map4&quot; id=&quot;scala.collection.immutable.Map.Map4&quot; name=&quot;scala.collection.immutable.Map.Map4&quot;&gt;Map4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map4&quot; id=&quot;scala.collection.immutable.Map.Map4&quot; name=&quot;scala.collection.immutable.Map.Map4&quot;&gt;Map4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86da1fa610f4c89199a0862a3c0841a7de97895b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222b1eedec5b71bce498b41832b658988f83e87b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e5d035ae80a65f71c812084baa377850b08f91" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc543f7e2dd5b6a999682e065cfec1c44ca939cf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ede33f4818689f99531a2f5d13c4a17891c3b97" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf6205c8de49a4ab2a31be7fbea4e91e16cfe9d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abda98cfa84f523c67be9750a583a67c5c3993bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapfactory%24%24delegate&quot; id=&quot;scala.collection.MapFactory.Delegate&quot; name=&quot;scala.collection.MapFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapfactory%24%24delegate&quot; id=&quot;scala.collection.MapFactory.Delegate&quot; name=&quot;scala.collection.MapFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23899da271763fff098a604835374bfb774baeb4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapfactory%24%24delegate&quot; id=&quot;scala.collection.MapFactory.Delegate&quot; name=&quot;scala.collection.MapFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapfactory%24%24delegate&quot; id=&quot;scala.collection.MapFactory.Delegate&quot; name=&quot;scala.collection.MapFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e8fe5bc66d641a7788bd1fe967b251b7332435" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapfactorydefaults&quot; id=&quot;scala.collection.MapFactoryDefaults&quot; name=&quot;scala.collection.MapFactoryDefaults&quot;&gt;MapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapfactorydefaults&quot; id=&quot;scala.collection.MapFactoryDefaults&quot; name=&quot;scala.collection.MapFactoryDefaults&quot;&gt;MapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7571580e5f900574dd4173d0dddec32589c9b941" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapfactorydefaults&quot; id=&quot;scala.collection.MapFactoryDefaults&quot; name=&quot;scala.collection.MapFactoryDefaults&quot;&gt;MapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapfactorydefaults&quot; id=&quot;scala.collection.MapFactoryDefaults&quot; name=&quot;scala.collection.MapFactoryDefaults&quot;&gt;MapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b402830a8631f8b76063e07e6c1950ab485a21" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27889251059e059bf004df2e947243a13b59976" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8dd8b9a3bb1608db16fa8d855d6200e0d643347" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops&quot; id=&quot;scala.collection.immutable.MapOps&quot; name=&quot;scala.collection.immutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.immutable.MapOps&quot; name=&quot;scala.collection.immutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1a5da68e2179df3a2939da7eed2f14a2c79619" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops&quot; id=&quot;scala.collection.immutable.MapOps&quot; name=&quot;scala.collection.immutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.immutable.MapOps&quot; name=&quot;scala.collection.immutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20c5540a4f71bd0d966036adba6e80981ab60e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a819918caac151cf9c9cea2370437a6f2a9d2f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c5383d7e4c3acd7b105e60d69e0392dfbaabd2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433f7b8348a0997e1dd8162ef766074e7743ecd7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3224eb61ae692b0e5c59a37ed8c6f44a4b9eb153" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops%24genkeyset&quot; id=&quot;scala.collection.MapOps.GenKeySet&quot; name=&quot;scala.collection.MapOps.GenKeySet&quot;&gt;GenKeySet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24genkeyset&quot; id=&quot;scala.collection.MapOps.GenKeySet&quot; name=&quot;scala.collection.MapOps.GenKeySet&quot;&gt;GenKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a47d43ea56c1e89e1872b1c65d10259c703c1e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops%24genkeyset&quot; id=&quot;scala.collection.MapOps.GenKeySet&quot; name=&quot;scala.collection.MapOps.GenKeySet&quot;&gt;GenKeySet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24genkeyset&quot; id=&quot;scala.collection.MapOps.GenKeySet&quot; name=&quot;scala.collection.MapOps.GenKeySet&quot;&gt;GenKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bae0e8de274a6e4006b55a7e07cb4b2d5964fc9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops%24immutablekeyset&quot; id=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot; name=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot;&gt;ImmutableKeySet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24immutablekeyset&quot; id=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot; name=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot;&gt;ImmutableKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa57506b8a298042abcd716bd8e60751dfb8ce3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops%24immutablekeyset&quot; id=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot; name=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot;&gt;ImmutableKeySet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24immutablekeyset&quot; id=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot; name=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot;&gt;ImmutableKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5400feb8d3f614d3f13d13734848b8fd057e9a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops%24keyset&quot; id=&quot;scala.collection.MapOps.KeySet&quot; name=&quot;scala.collection.MapOps.KeySet&quot;&gt;KeySet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24keyset&quot; id=&quot;scala.collection.MapOps.KeySet&quot; name=&quot;scala.collection.MapOps.KeySet&quot;&gt;KeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bd1649c2dbd2602cfdc1c79bb758325d02ed09" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapops%24keyset&quot; id=&quot;scala.collection.MapOps.KeySet&quot; name=&quot;scala.collection.MapOps.KeySet&quot;&gt;KeySet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24keyset&quot; id=&quot;scala.collection.MapOps.KeySet&quot; name=&quot;scala.collection.MapOps.KeySet&quot;&gt;KeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51002ad85d2572471e94af9aec5f37cf11f7913" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1535e469949bca4206fb3e5d0399ec2ecbb6fc6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d60f5c6a1d1283d6fd277b33dfc4fea6071852" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24filter&quot; id=&quot;scala.collection.MapView.Filter&quot; name=&quot;scala.collection.MapView.Filter&quot;&gt;Filter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24filter&quot; id=&quot;scala.collection.MapView.Filter&quot; name=&quot;scala.collection.MapView.Filter&quot;&gt;Filter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021c91402a6a4f08924278496f863ce39426d9dc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24filter&quot; id=&quot;scala.collection.MapView.Filter&quot; name=&quot;scala.collection.MapView.Filter&quot;&gt;Filter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24filter&quot; id=&quot;scala.collection.MapView.Filter&quot; name=&quot;scala.collection.MapView.Filter&quot;&gt;Filter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a617903582c043a2ea2c3c4156fa67525229e6c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24filterkeys&quot; id=&quot;scala.collection.MapView.FilterKeys&quot; name=&quot;scala.collection.MapView.FilterKeys&quot;&gt;FilterKeys&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24filterkeys&quot; id=&quot;scala.collection.MapView.FilterKeys&quot; name=&quot;scala.collection.MapView.FilterKeys&quot;&gt;FilterKeys&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d99a5ac11dd3a8ad26feb930d609f9af77f65ba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24filterkeys&quot; id=&quot;scala.collection.MapView.FilterKeys&quot; name=&quot;scala.collection.MapView.FilterKeys&quot;&gt;FilterKeys&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24filterkeys&quot; id=&quot;scala.collection.MapView.FilterKeys&quot; name=&quot;scala.collection.MapView.FilterKeys&quot;&gt;FilterKeys&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce192ae52d1d4a5415794df75ddf025efe12b7a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24id&quot; id=&quot;scala.collection.MapView.Id&quot; name=&quot;scala.collection.MapView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24id&quot; id=&quot;scala.collection.MapView.Id&quot; name=&quot;scala.collection.MapView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64b7e56c5d274cd282f28665ec2fa7a35d56bf7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24id&quot; id=&quot;scala.collection.MapView.Id&quot; name=&quot;scala.collection.MapView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24id&quot; id=&quot;scala.collection.MapView.Id&quot; name=&quot;scala.collection.MapView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68968f561d3d17a4b828e6190b566e73f4974809" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24mapvalues&quot; id=&quot;scala.collection.MapView.MapValues&quot; name=&quot;scala.collection.MapView.MapValues&quot;&gt;MapValues&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24mapvalues&quot; id=&quot;scala.collection.MapView.MapValues&quot; name=&quot;scala.collection.MapView.MapValues&quot;&gt;MapValues&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e626dcb1bca14749074b082586d43def8f6f3bf2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24mapvalues&quot; id=&quot;scala.collection.MapView.MapValues&quot; name=&quot;scala.collection.MapView.MapValues&quot;&gt;MapValues&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24mapvalues&quot; id=&quot;scala.collection.MapView.MapValues&quot; name=&quot;scala.collection.MapView.MapValues&quot;&gt;MapValues&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a916740ff7c079916b6dc46b780c817fd2e5d712" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24tapeach&quot; id=&quot;scala.collection.MapView.TapEach&quot; name=&quot;scala.collection.MapView.TapEach&quot;&gt;TapEach&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24tapeach&quot; id=&quot;scala.collection.MapView.TapEach&quot; name=&quot;scala.collection.MapView.TapEach&quot;&gt;TapEach&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d9241f602fab3c463a228da522c2a410871a23" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapview%24%24tapeach&quot; id=&quot;scala.collection.MapView.TapEach&quot; name=&quot;scala.collection.MapView.TapEach&quot;&gt;TapEach&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview%24%24tapeach&quot; id=&quot;scala.collection.MapView.TapEach&quot; name=&quot;scala.collection.MapView.TapEach&quot;&gt;TapEach&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04941eda55cb2f42d9b148083c87e1274f9b738" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapviewfactory&quot; id=&quot;scala.collection.MapViewFactory&quot; name=&quot;scala.collection.MapViewFactory&quot;&gt;MapViewFactory&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapviewfactory&quot; id=&quot;scala.collection.MapViewFactory&quot; name=&quot;scala.collection.MapViewFactory&quot;&gt;MapViewFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bc8be4e17e13e24a4c08fc2ac44e7ce7ef8cbf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;mapviewfactory&quot; id=&quot;scala.collection.MapViewFactory&quot; name=&quot;scala.collection.MapViewFactory&quot;&gt;MapViewFactory&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapviewfactory&quot; id=&quot;scala.collection.MapViewFactory&quot; name=&quot;scala.collection.MapViewFactory&quot;&gt;MapViewFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c2be8a894362bae3b99c3715f59ebffd1173e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;matcherror&quot; id=&quot;scala.MatchError&quot; name=&quot;scala.MatchError&quot;&gt;MatchError&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;matcherror&quot; id=&quot;scala.MatchError&quot; name=&quot;scala.MatchError&quot;&gt;MatchError&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595552b64024c7310e90a30a5ea0bc84fcfdcd32" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;matcherror&quot; id=&quot;scala.MatchError&quot; name=&quot;scala.MatchError&quot;&gt;MatchError&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;matcherror&quot; id=&quot;scala.MatchError&quot; name=&quot;scala.MatchError&quot;&gt;MatchError&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e03baf1676695ce0015d059cf2f5f205e4eae1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d732aa1672e6d05946c6054ac5d20ea2fe728bd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fa9da77f5dc77fc99b54e10e7937d481edcbae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;murmurhash3%24%24arrayhashing&quot; id=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot; name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot;&gt;ArrayHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;murmurhash3%24%24arrayhashing&quot; id=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot; name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot;&gt;ArrayHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7193c96e55d028ff56cf777e4a449efa6b06f480" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;murmurhash3%24%24arrayhashing&quot; id=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot; name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot;&gt;ArrayHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;murmurhash3%24%24arrayhashing&quot; id=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot; name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot;&gt;ArrayHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801013bfd09a10b34754c3703c216305b20bdeb3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;native&quot; id=&quot;scala.native&quot; name=&quot;scala.native&quot;&gt;native&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;native&quot; id=&quot;scala.native&quot; name=&quot;scala.native&quot;&gt;native&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c85b60a85a923618fa9b8bd2abf48287f970c8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;native&quot; id=&quot;scala.native&quot; name=&quot;scala.native&quot;&gt;native&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;native&quot; id=&quot;scala.native&quot; name=&quot;scala.native&quot;&gt;native&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ece4dd4f025d0f488c922ee1b2ef1e105bd8ff8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;noinline&quot; id=&quot;scala.noinline&quot; name=&quot;scala.noinline&quot;&gt;noinline&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;noinline&quot; id=&quot;scala.noinline&quot; name=&quot;scala.noinline&quot;&gt;noinline&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff0cde8d29dcc86c3a2ae13c89d89d2fd4c6ad8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;noinline&quot; id=&quot;scala.noinline&quot; name=&quot;scala.noinline&quot;&gt;noinline&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;noinline&quot; id=&quot;scala.noinline&quot; name=&quot;scala.noinline&quot;&gt;noinline&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295fcc456932af24203f12768b739382f9c6ca42" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;nostacktrace&quot; id=&quot;scala.util.control.NoStackTrace&quot; name=&quot;scala.util.control.NoStackTrace&quot;&gt;NoStackTrace&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;nostacktrace&quot; id=&quot;scala.util.control.NoStackTrace&quot; name=&quot;scala.util.control.NoStackTrace&quot;&gt;NoStackTrace&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2ebfd3104c429c20aa0f1b42ea5548d05d783f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;nostacktrace&quot; id=&quot;scala.util.control.NoStackTrace&quot; name=&quot;scala.util.control.NoStackTrace&quot;&gt;NoStackTrace&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;nostacktrace&quot; id=&quot;scala.util.control.NoStackTrace&quot; name=&quot;scala.util.control.NoStackTrace&quot;&gt;NoStackTrace&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a031759eeecdfefe1f6e5c2b21ae38581e6546d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;notimplementederror&quot; id=&quot;scala.NotImplementedError&quot; name=&quot;scala.NotImplementedError&quot;&gt;NotImplementedError&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;notimplementederror&quot; id=&quot;scala.NotImplementedError&quot; name=&quot;scala.NotImplementedError&quot;&gt;NotImplementedError&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028e7b20153e64fc3d93070839b56e74a8b8ad46" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;notimplementederror&quot; id=&quot;scala.NotImplementedError&quot; name=&quot;scala.NotImplementedError&quot;&gt;NotImplementedError&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;notimplementederror&quot; id=&quot;scala.NotImplementedError&quot; name=&quot;scala.NotImplementedError&quot;&gt;NotImplementedError&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66e7132ca16e2d11bdbf04501af70f022df88ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric&quot; id=&quot;scala.math.Numeric&quot; name=&quot;scala.math.Numeric&quot;&gt;Numeric&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric&quot; id=&quot;scala.math.Numeric&quot; name=&quot;scala.math.Numeric&quot;&gt;Numeric&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39caa8abee1cc926438d36a31ed6370f42dcc08" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric&quot; id=&quot;scala.math.Numeric&quot; name=&quot;scala.math.Numeric&quot;&gt;Numeric&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric&quot; id=&quot;scala.math.Numeric&quot; name=&quot;scala.math.Numeric&quot;&gt;Numeric&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639f249b08a6759ca48c4449fd2de479f0fa1e99" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24bigdecimalasifintegral&quot; id=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot; name=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot;&gt;BigDecimalAsIfIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24bigdecimalasifintegral&quot; id=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot; name=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot;&gt;BigDecimalAsIfIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739bd7b8935816cb7cdd446b071be648d13d27c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24bigdecimalasifintegral&quot; id=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot; name=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot;&gt;BigDecimalAsIfIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24bigdecimalasifintegral&quot; id=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot; name=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot;&gt;BigDecimalAsIfIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fda311d78a03710717a00f396aec6278199f3c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24bigdecimalisconflicted&quot; id=&quot;scala.math.Numeric.BigDecimalIsConflicted&quot; name=&quot;scala.math.Numeric.BigDecimalIsConflicted&quot;&gt;BigDecimalIsConflicted&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24bigdecimalisconflicted&quot; id=&quot;scala.math.Numeric.BigDecimalIsConflicted&quot; name=&quot;scala.math.Numeric.BigDecimalIsConflicted&quot;&gt;BigDecimalIsConflicted&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def030f5ff2451adf4aba102fc74bf246da3513d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24bigdecimalisconflicted&quot; id=&quot;scala.math.Numeric.BigDecimalIsConflicted&quot; name=&quot;scala.math.Numeric.BigDecimalIsConflicted&quot;&gt;BigDecimalIsConflicted&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24bigdecimalisconflicted&quot; id=&quot;scala.math.Numeric.BigDecimalIsConflicted&quot; name=&quot;scala.math.Numeric.BigDecimalIsConflicted&quot;&gt;BigDecimalIsConflicted&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b950f9c0efebcbc2df1d0ae8213ce26985b2b1c2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24bigdecimalisfractional&quot; id=&quot;scala.math.Numeric.BigDecimalIsFractional&quot; name=&quot;scala.math.Numeric.BigDecimalIsFractional&quot;&gt;BigDecimalIsFractional&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24bigdecimalisfractional&quot; id=&quot;scala.math.Numeric.BigDecimalIsFractional&quot; name=&quot;scala.math.Numeric.BigDecimalIsFractional&quot;&gt;BigDecimalIsFractional&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0330499916755ba6c0b91f94e348ca0926a1308d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24bigdecimalisfractional&quot; id=&quot;scala.math.Numeric.BigDecimalIsFractional&quot; name=&quot;scala.math.Numeric.BigDecimalIsFractional&quot;&gt;BigDecimalIsFractional&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24bigdecimalisfractional&quot; id=&quot;scala.math.Numeric.BigDecimalIsFractional&quot; name=&quot;scala.math.Numeric.BigDecimalIsFractional&quot;&gt;BigDecimalIsFractional&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368271c27f987045383ac3859466874eb38f7c9d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24bigintisintegral&quot; id=&quot;scala.math.Numeric.BigIntIsIntegral&quot; name=&quot;scala.math.Numeric.BigIntIsIntegral&quot;&gt;BigIntIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24bigintisintegral&quot; id=&quot;scala.math.Numeric.BigIntIsIntegral&quot; name=&quot;scala.math.Numeric.BigIntIsIntegral&quot;&gt;BigIntIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e0e796a5c251eee0d13b314b3a566e0d0b739e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24bigintisintegral&quot; id=&quot;scala.math.Numeric.BigIntIsIntegral&quot; name=&quot;scala.math.Numeric.BigIntIsIntegral&quot;&gt;BigIntIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24bigintisintegral&quot; id=&quot;scala.math.Numeric.BigIntIsIntegral&quot; name=&quot;scala.math.Numeric.BigIntIsIntegral&quot;&gt;BigIntIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a3ec8880e0d54d54a30b7e694ae3656cde7d3d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24byteisintegral&quot; id=&quot;scala.math.Numeric.ByteIsIntegral&quot; name=&quot;scala.math.Numeric.ByteIsIntegral&quot;&gt;ByteIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24byteisintegral&quot; id=&quot;scala.math.Numeric.ByteIsIntegral&quot; name=&quot;scala.math.Numeric.ByteIsIntegral&quot;&gt;ByteIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db9b1dfb28cac84e529f6c76be03d0cb29566e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24byteisintegral&quot; id=&quot;scala.math.Numeric.ByteIsIntegral&quot; name=&quot;scala.math.Numeric.ByteIsIntegral&quot;&gt;ByteIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24byteisintegral&quot; id=&quot;scala.math.Numeric.ByteIsIntegral&quot; name=&quot;scala.math.Numeric.ByteIsIntegral&quot;&gt;ByteIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cee8f62331c02553f9387d3aea7fb89af8678da" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24charisintegral&quot; id=&quot;scala.math.Numeric.CharIsIntegral&quot; name=&quot;scala.math.Numeric.CharIsIntegral&quot;&gt;CharIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24charisintegral&quot; id=&quot;scala.math.Numeric.CharIsIntegral&quot; name=&quot;scala.math.Numeric.CharIsIntegral&quot;&gt;CharIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15f0bcaff979f7fd72d689faeea74fb360079a6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24charisintegral&quot; id=&quot;scala.math.Numeric.CharIsIntegral&quot; name=&quot;scala.math.Numeric.CharIsIntegral&quot;&gt;CharIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24charisintegral&quot; id=&quot;scala.math.Numeric.CharIsIntegral&quot; name=&quot;scala.math.Numeric.CharIsIntegral&quot;&gt;CharIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92da858ff54188a8d3b2760701a43ec70a568011" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24doubleisfractional&quot; id=&quot;scala.math.Numeric.DoubleIsFractional&quot; name=&quot;scala.math.Numeric.DoubleIsFractional&quot;&gt;DoubleIsFractional&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24doubleisfractional&quot; id=&quot;scala.math.Numeric.DoubleIsFractional&quot; name=&quot;scala.math.Numeric.DoubleIsFractional&quot;&gt;DoubleIsFractional&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d479c934bf93fa153a2cb266bf8fb0f4d1eba1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24doubleisfractional&quot; id=&quot;scala.math.Numeric.DoubleIsFractional&quot; name=&quot;scala.math.Numeric.DoubleIsFractional&quot;&gt;DoubleIsFractional&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24doubleisfractional&quot; id=&quot;scala.math.Numeric.DoubleIsFractional&quot; name=&quot;scala.math.Numeric.DoubleIsFractional&quot;&gt;DoubleIsFractional&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e95f4dca1abfe6e186005a29276804dd9d6a7f3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24extraimplicits&quot; id=&quot;scala.math.Numeric.ExtraImplicits&quot; name=&quot;scala.math.Numeric.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24extraimplicits&quot; id=&quot;scala.math.Numeric.ExtraImplicits&quot; name=&quot;scala.math.Numeric.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8847989625b65da3c75e7fc92e28ada6950347e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24extraimplicits&quot; id=&quot;scala.math.Numeric.ExtraImplicits&quot; name=&quot;scala.math.Numeric.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24extraimplicits&quot; id=&quot;scala.math.Numeric.ExtraImplicits&quot; name=&quot;scala.math.Numeric.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbbdaae97c4538637cb9980e7c88dabc5a68e18" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24floatisfractional&quot; id=&quot;scala.math.Numeric.FloatIsFractional&quot; name=&quot;scala.math.Numeric.FloatIsFractional&quot;&gt;FloatIsFractional&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24floatisfractional&quot; id=&quot;scala.math.Numeric.FloatIsFractional&quot; name=&quot;scala.math.Numeric.FloatIsFractional&quot;&gt;FloatIsFractional&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8246f29b4703d80fe845ad8494d8594f695fc93" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24floatisfractional&quot; id=&quot;scala.math.Numeric.FloatIsFractional&quot; name=&quot;scala.math.Numeric.FloatIsFractional&quot;&gt;FloatIsFractional&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24floatisfractional&quot; id=&quot;scala.math.Numeric.FloatIsFractional&quot; name=&quot;scala.math.Numeric.FloatIsFractional&quot;&gt;FloatIsFractional&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f424167bbf8a829dd9633fcc889b0e11a05d2a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24intisintegral&quot; id=&quot;scala.math.Numeric.IntIsIntegral&quot; name=&quot;scala.math.Numeric.IntIsIntegral&quot;&gt;IntIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24intisintegral&quot; id=&quot;scala.math.Numeric.IntIsIntegral&quot; name=&quot;scala.math.Numeric.IntIsIntegral&quot;&gt;IntIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8cb27e09eba05bfa08009154a35f2c3cb003c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24intisintegral&quot; id=&quot;scala.math.Numeric.IntIsIntegral&quot; name=&quot;scala.math.Numeric.IntIsIntegral&quot;&gt;IntIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24intisintegral&quot; id=&quot;scala.math.Numeric.IntIsIntegral&quot; name=&quot;scala.math.Numeric.IntIsIntegral&quot;&gt;IntIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0521c2f62b5074ee31e07269406a5aab40901957" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24longisintegral&quot; id=&quot;scala.math.Numeric.LongIsIntegral&quot; name=&quot;scala.math.Numeric.LongIsIntegral&quot;&gt;LongIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24longisintegral&quot; id=&quot;scala.math.Numeric.LongIsIntegral&quot; name=&quot;scala.math.Numeric.LongIsIntegral&quot;&gt;LongIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26a9b1f19a4ccc7c3d8b64e52c9acf90d2a4dad" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24longisintegral&quot; id=&quot;scala.math.Numeric.LongIsIntegral&quot; name=&quot;scala.math.Numeric.LongIsIntegral&quot;&gt;LongIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24longisintegral&quot; id=&quot;scala.math.Numeric.LongIsIntegral&quot; name=&quot;scala.math.Numeric.LongIsIntegral&quot;&gt;LongIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419b8b36961fd9a541f3760c82e15e19399388c4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24shortisintegral&quot; id=&quot;scala.math.Numeric.ShortIsIntegral&quot; name=&quot;scala.math.Numeric.ShortIsIntegral&quot;&gt;ShortIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24shortisintegral&quot; id=&quot;scala.math.Numeric.ShortIsIntegral&quot; name=&quot;scala.math.Numeric.ShortIsIntegral&quot;&gt;ShortIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3557a461036d259b2f8dceb184b8541a06c755" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24%24shortisintegral&quot; id=&quot;scala.math.Numeric.ShortIsIntegral&quot; name=&quot;scala.math.Numeric.ShortIsIntegral&quot;&gt;ShortIsIntegral&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24%24shortisintegral&quot; id=&quot;scala.math.Numeric.ShortIsIntegral&quot; name=&quot;scala.math.Numeric.ShortIsIntegral&quot;&gt;ShortIsIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324c6667ad566a0e55519acf39c944a541e3e069" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24numericops&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24numericops&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b8393f1a313222997fe0043c5216df7111f5ff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numeric%24numericops&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24numericops&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8415eec41acda998fec2842b1010f4b5ea52a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a443dc3a89f76845d06bf1dba1c3897efc887a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db452c515b53f1bb28385de240f90d4760ea90e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c492c23926892b30bbe97934026adee57d5ed170" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5936fb4b3b27fa09235577f32eb23a651e005bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c1f38fa6e62d3b4b6d2cc55dc035e799453a7b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712e12890f6a812d7eb709c214518166f01f6ef0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;oncompleterunnable&quot; id=&quot;scala.concurrent.OnCompleteRunnable&quot; name=&quot;scala.concurrent.OnCompleteRunnable&quot;&gt;OnCompleteRunnable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;oncompleterunnable&quot; id=&quot;scala.concurrent.OnCompleteRunnable&quot; name=&quot;scala.concurrent.OnCompleteRunnable&quot;&gt;OnCompleteRunnable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35876768cb0a65ed5e037278eeeb02ea5cd55dee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;oncompleterunnable&quot; id=&quot;scala.concurrent.OnCompleteRunnable&quot; name=&quot;scala.concurrent.OnCompleteRunnable&quot;&gt;OnCompleteRunnable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;oncompleterunnable&quot; id=&quot;scala.concurrent.OnCompleteRunnable&quot; name=&quot;scala.concurrent.OnCompleteRunnable&quot;&gt;OnCompleteRunnable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf63eb67a1cecae6572afc8a7846e4143d34c9f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521f8bef9d4b4f4945915d519233eab1670a6768" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61d1131a520d36db1257315990a30522d8e82bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6c180c6d18b55223654e1597c44df7ad73dec5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e6c9b26953fa0a52667b93ec56717b9b27e5ed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665d43f6da9bd9c83c02ec4c7fe36a8eccaf30f3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ebd231f76f29f10959dbd6ea0413cb7ad13d79" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoption&quot; id=&quot;scala.jdk.OptionConverters.RichOption&quot; name=&quot;scala.jdk.OptionConverters.RichOption&quot;&gt;RichOption&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionConverters.RichOption.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoption&quot; id=&quot;scala.jdk.OptionConverters.RichOption&quot; name=&quot;scala.jdk.OptionConverters.RichOption&quot;&gt;RichOption&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionConverters.RichOption.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3926e98af0267b0b50579d7130596d1435dd134b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoption&quot; id=&quot;scala.jdk.OptionConverters.RichOption&quot; name=&quot;scala.jdk.OptionConverters.RichOption&quot;&gt;RichOption&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionConverters.RichOption.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoption&quot; id=&quot;scala.jdk.OptionConverters.RichOption&quot; name=&quot;scala.jdk.OptionConverters.RichOption&quot;&gt;RichOption&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionConverters.RichOption.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ced273c35df233eb1587e9f313f4b8050d95be4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoptional&quot; id=&quot;scala.jdk.OptionConverters.RichOptional&quot; name=&quot;scala.jdk.OptionConverters.RichOptional&quot;&gt;RichOptional&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionConverters.RichOptional.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoptional&quot; id=&quot;scala.jdk.OptionConverters.RichOptional&quot; name=&quot;scala.jdk.OptionConverters.RichOptional&quot;&gt;RichOptional&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionConverters.RichOptional.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e7f5c021c32cde7f4e3f2a5f6e96bc7a7b8af2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoptional&quot; id=&quot;scala.jdk.OptionConverters.RichOptional&quot; name=&quot;scala.jdk.OptionConverters.RichOptional&quot;&gt;RichOptional&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionConverters.RichOptional.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoptional&quot; id=&quot;scala.jdk.OptionConverters.RichOptional&quot; name=&quot;scala.jdk.OptionConverters.RichOptional&quot;&gt;RichOptional&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionConverters.RichOptional.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc9b17d29591dd0595cd7e74ac782c3a1953bfb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoptionaldouble&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalDouble&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalDouble&quot;&gt;RichOptionalDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoptionaldouble&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalDouble&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalDouble&quot;&gt;RichOptionalDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387fc27dcb585de0a2e363d20d89da0757c5b898" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoptionaldouble&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalDouble&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalDouble&quot;&gt;RichOptionalDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoptionaldouble&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalDouble&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalDouble&quot;&gt;RichOptionalDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d35765fe0584b98651f109036f4140cbda151b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoptionalint&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalInt&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalInt&quot;&gt;RichOptionalInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoptionalint&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalInt&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalInt&quot;&gt;RichOptionalInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fb92c5bdd5d89008eaba424940bb0e93337eb8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoptionalint&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalInt&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalInt&quot;&gt;RichOptionalInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoptionalint&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalInt&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalInt&quot;&gt;RichOptionalInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040daf99e48fce3c95c31ae1c3ffc287d96cc8fb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoptionallong&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalLong&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalLong&quot;&gt;RichOptionalLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoptionallong&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalLong&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalLong&quot;&gt;RichOptionalLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd705d7be33c76027427134b78ef996985971be" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionconverters%24%24richoptionallong&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalLong&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalLong&quot;&gt;RichOptionalLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionconverters%24%24richoptionallong&quot; id=&quot;scala.jdk.OptionConverters.RichOptionalLong&quot; name=&quot;scala.jdk.OptionConverters.RichOptionalLong&quot;&gt;RichOptionalLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b449362f954065dbf20e52c3d75d0e32cab38e2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionShape.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.OptionShape.O&quot;&gt;O&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionShape.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.OptionShape.O&quot;&gt;O&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd5db7d5ae3878f0f1dead4eb219c19c8114f65" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionShape.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.OptionShape.O&quot;&gt;O&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.OptionShape.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.OptionShape.O&quot;&gt;O&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374e1f53951aab44e9639da55d5ff9c072185b05" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.OptManifest.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.OptManifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a72bc200c174a4f4e19417635e56bf50d2d19d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.OptManifest.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.OptManifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c02d391c4e611f0b253a9f450f90f45e814d75f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordered&quot; id=&quot;scala.math.Ordered&quot; name=&quot;scala.math.Ordered&quot;&gt;Ordered&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordered.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordered&quot; id=&quot;scala.math.Ordered&quot; name=&quot;scala.math.Ordered&quot;&gt;Ordered&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordered.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d82e0269cf1b686a091e0a5c631c140299c94b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordered&quot; id=&quot;scala.math.Ordered&quot; name=&quot;scala.math.Ordered&quot;&gt;Ordered&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordered.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordered&quot; id=&quot;scala.math.Ordered&quot; name=&quot;scala.math.Ordered&quot;&gt;Ordered&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordered.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449fb07bb32fc251b8aa206a09b8c8b076c36b18" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b43659bcfd900f023c3b9706bef68983d64f48c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac87b81d2ca3841043f39be641dd727f32dcdd3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24bigdecimalordering&quot; id=&quot;scala.math.Ordering.BigDecimalOrdering&quot; name=&quot;scala.math.Ordering.BigDecimalOrdering&quot;&gt;BigDecimalOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24bigdecimalordering&quot; id=&quot;scala.math.Ordering.BigDecimalOrdering&quot; name=&quot;scala.math.Ordering.BigDecimalOrdering&quot;&gt;BigDecimalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05de27a3fcde55858fe60ba21c3c52a752172052" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24bigdecimalordering&quot; id=&quot;scala.math.Ordering.BigDecimalOrdering&quot; name=&quot;scala.math.Ordering.BigDecimalOrdering&quot;&gt;BigDecimalOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24bigdecimalordering&quot; id=&quot;scala.math.Ordering.BigDecimalOrdering&quot; name=&quot;scala.math.Ordering.BigDecimalOrdering&quot;&gt;BigDecimalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cad704cbcd7fcad14f437d6e65dd113c6a8d0d0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24bigintordering&quot; id=&quot;scala.math.Ordering.BigIntOrdering&quot; name=&quot;scala.math.Ordering.BigIntOrdering&quot;&gt;BigIntOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24bigintordering&quot; id=&quot;scala.math.Ordering.BigIntOrdering&quot; name=&quot;scala.math.Ordering.BigIntOrdering&quot;&gt;BigIntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322d192ab83b1622eccdc3712fc39434cb792b20" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24bigintordering&quot; id=&quot;scala.math.Ordering.BigIntOrdering&quot; name=&quot;scala.math.Ordering.BigIntOrdering&quot;&gt;BigIntOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24bigintordering&quot; id=&quot;scala.math.Ordering.BigIntOrdering&quot; name=&quot;scala.math.Ordering.BigIntOrdering&quot;&gt;BigIntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e188cb3a24584169621c734f05be1096ab3b74" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24booleanordering&quot; id=&quot;scala.math.Ordering.BooleanOrdering&quot; name=&quot;scala.math.Ordering.BooleanOrdering&quot;&gt;BooleanOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24booleanordering&quot; id=&quot;scala.math.Ordering.BooleanOrdering&quot; name=&quot;scala.math.Ordering.BooleanOrdering&quot;&gt;BooleanOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857f376cc69668e8f02f7fd9d88497b13ec6db70" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24booleanordering&quot; id=&quot;scala.math.Ordering.BooleanOrdering&quot; name=&quot;scala.math.Ordering.BooleanOrdering&quot;&gt;BooleanOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24booleanordering&quot; id=&quot;scala.math.Ordering.BooleanOrdering&quot; name=&quot;scala.math.Ordering.BooleanOrdering&quot;&gt;BooleanOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e164afc5039d36022a1825c5580dbf5dcd9517" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24byteordering&quot; id=&quot;scala.math.Ordering.ByteOrdering&quot; name=&quot;scala.math.Ordering.ByteOrdering&quot;&gt;ByteOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24byteordering&quot; id=&quot;scala.math.Ordering.ByteOrdering&quot; name=&quot;scala.math.Ordering.ByteOrdering&quot;&gt;ByteOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481d940223371d7a18eb709b5bd91e900522787d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24byteordering&quot; id=&quot;scala.math.Ordering.ByteOrdering&quot; name=&quot;scala.math.Ordering.ByteOrdering&quot;&gt;ByteOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24byteordering&quot; id=&quot;scala.math.Ordering.ByteOrdering&quot; name=&quot;scala.math.Ordering.ByteOrdering&quot;&gt;ByteOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d6d91f5a478ff7ca586e5dcd690155d59f86df" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24cachedreverse&quot; id=&quot;scala.math.Ordering.CachedReverse&quot; name=&quot;scala.math.Ordering.CachedReverse&quot;&gt;CachedReverse&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24cachedreverse&quot; id=&quot;scala.math.Ordering.CachedReverse&quot; name=&quot;scala.math.Ordering.CachedReverse&quot;&gt;CachedReverse&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d8d9ad7be2b08792851b053d60695ca831ddb2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24cachedreverse&quot; id=&quot;scala.math.Ordering.CachedReverse&quot; name=&quot;scala.math.Ordering.CachedReverse&quot;&gt;CachedReverse&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24cachedreverse&quot; id=&quot;scala.math.Ordering.CachedReverse&quot; name=&quot;scala.math.Ordering.CachedReverse&quot;&gt;CachedReverse&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2312e3dfddaaf1c484fd9ea6c9b5c4a1cc7bf450" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24charordering&quot; id=&quot;scala.math.Ordering.CharOrdering&quot; name=&quot;scala.math.Ordering.CharOrdering&quot;&gt;CharOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24charordering&quot; id=&quot;scala.math.Ordering.CharOrdering&quot; name=&quot;scala.math.Ordering.CharOrdering&quot;&gt;CharOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1207b6ad6a2f55f44a70c7fb3cd8f27e454feba4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24charordering&quot; id=&quot;scala.math.Ordering.CharOrdering&quot; name=&quot;scala.math.Ordering.CharOrdering&quot;&gt;CharOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24charordering&quot; id=&quot;scala.math.Ordering.CharOrdering&quot; name=&quot;scala.math.Ordering.CharOrdering&quot;&gt;CharOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2d4f09673ce1a1861921a6a69f5a1761798a01" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24double%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Double.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Double.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24double%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Double.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Double.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc033e7ed81374c3a0391a935e3a6bc142dd4fb1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24double%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Double.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Double.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24double%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Double.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Double.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d38ba8e181f7d585f17a5b623efbc0732ecee3b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24double%24%24totalordering&quot; id=&quot;scala.math.Ordering.Double.TotalOrdering&quot; name=&quot;scala.math.Ordering.Double.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24double%24%24totalordering&quot; id=&quot;scala.math.Ordering.Double.TotalOrdering&quot; name=&quot;scala.math.Ordering.Double.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3eea0d792416d84005c89e0eaad7de0aac6145" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24double%24%24totalordering&quot; id=&quot;scala.math.Ordering.Double.TotalOrdering&quot; name=&quot;scala.math.Ordering.Double.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24double%24%24totalordering&quot; id=&quot;scala.math.Ordering.Double.TotalOrdering&quot; name=&quot;scala.math.Ordering.Double.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463562b97cccdb0f7326403ece3e05ad6c22be3d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24extraimplicits&quot; id=&quot;scala.math.Ordering.ExtraImplicits&quot; name=&quot;scala.math.Ordering.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24extraimplicits&quot; id=&quot;scala.math.Ordering.ExtraImplicits&quot; name=&quot;scala.math.Ordering.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cadd1eca7ce8716adbe81f12b6259f29a59cb1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24extraimplicits&quot; id=&quot;scala.math.Ordering.ExtraImplicits&quot; name=&quot;scala.math.Ordering.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24extraimplicits&quot; id=&quot;scala.math.Ordering.ExtraImplicits&quot; name=&quot;scala.math.Ordering.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beefde8eb2e5e9545de5c59565aa515e8191e03b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24float%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Float.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Float.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24float%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Float.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Float.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6d694aef6aafdec15c1166289bd3ed370e6401" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24float%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Float.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Float.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24float%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Float.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Float.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41152652c0c84f42c2dbc44f701c254abe874547" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24float%24%24totalordering&quot; id=&quot;scala.math.Ordering.Float.TotalOrdering&quot; name=&quot;scala.math.Ordering.Float.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24float%24%24totalordering&quot; id=&quot;scala.math.Ordering.Float.TotalOrdering&quot; name=&quot;scala.math.Ordering.Float.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e84f09a0ec774ee7d007d9a633b0d3aadcbc8a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24float%24%24totalordering&quot; id=&quot;scala.math.Ordering.Float.TotalOrdering&quot; name=&quot;scala.math.Ordering.Float.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24float%24%24totalordering&quot; id=&quot;scala.math.Ordering.Float.TotalOrdering&quot; name=&quot;scala.math.Ordering.Float.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b32af6fd17775444b0481e2e7f0b49571abd6e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24intordering&quot; id=&quot;scala.math.Ordering.IntOrdering&quot; name=&quot;scala.math.Ordering.IntOrdering&quot;&gt;IntOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24intordering&quot; id=&quot;scala.math.Ordering.IntOrdering&quot; name=&quot;scala.math.Ordering.IntOrdering&quot;&gt;IntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f684beddaec40bcbffc312616378873ccc1d6d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24intordering&quot; id=&quot;scala.math.Ordering.IntOrdering&quot; name=&quot;scala.math.Ordering.IntOrdering&quot;&gt;IntOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24intordering&quot; id=&quot;scala.math.Ordering.IntOrdering&quot; name=&quot;scala.math.Ordering.IntOrdering&quot;&gt;IntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31bc8abf5e272742503649f2d6236b921922ee08" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24longordering&quot; id=&quot;scala.math.Ordering.LongOrdering&quot; name=&quot;scala.math.Ordering.LongOrdering&quot;&gt;LongOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24longordering&quot; id=&quot;scala.math.Ordering.LongOrdering&quot; name=&quot;scala.math.Ordering.LongOrdering&quot;&gt;LongOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4c489d18763cb56b401ace5fbca2698eb0a41a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24longordering&quot; id=&quot;scala.math.Ordering.LongOrdering&quot; name=&quot;scala.math.Ordering.LongOrdering&quot;&gt;LongOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24longordering&quot; id=&quot;scala.math.Ordering.LongOrdering&quot; name=&quot;scala.math.Ordering.LongOrdering&quot;&gt;LongOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751fa3fe2d17ae7470443d54b458927c7715a32e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24optionordering&quot; id=&quot;scala.math.Ordering.OptionOrdering&quot; name=&quot;scala.math.Ordering.OptionOrdering&quot;&gt;OptionOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24optionordering&quot; id=&quot;scala.math.Ordering.OptionOrdering&quot; name=&quot;scala.math.Ordering.OptionOrdering&quot;&gt;OptionOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3affb73b8c219c5eafc4861c2682be5fd511f934" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24optionordering&quot; id=&quot;scala.math.Ordering.OptionOrdering&quot; name=&quot;scala.math.Ordering.OptionOrdering&quot;&gt;OptionOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24optionordering&quot; id=&quot;scala.math.Ordering.OptionOrdering&quot; name=&quot;scala.math.Ordering.OptionOrdering&quot;&gt;OptionOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb38e217130ddb5f06569b283d245b72e9dc94f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24shortordering&quot; id=&quot;scala.math.Ordering.ShortOrdering&quot; name=&quot;scala.math.Ordering.ShortOrdering&quot;&gt;ShortOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24shortordering&quot; id=&quot;scala.math.Ordering.ShortOrdering&quot; name=&quot;scala.math.Ordering.ShortOrdering&quot;&gt;ShortOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c7212bc8d7bfca87b1565a1eb05811ab0d2221" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24shortordering&quot; id=&quot;scala.math.Ordering.ShortOrdering&quot; name=&quot;scala.math.Ordering.ShortOrdering&quot;&gt;ShortOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24shortordering&quot; id=&quot;scala.math.Ordering.ShortOrdering&quot; name=&quot;scala.math.Ordering.ShortOrdering&quot;&gt;ShortOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c3d9e58e6cc6a8aadd6cde6bf6bbacc0805b59" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24stringordering&quot; id=&quot;scala.math.Ordering.StringOrdering&quot; name=&quot;scala.math.Ordering.StringOrdering&quot;&gt;StringOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24stringordering&quot; id=&quot;scala.math.Ordering.StringOrdering&quot; name=&quot;scala.math.Ordering.StringOrdering&quot;&gt;StringOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bc1ae1d16c8fcd487e11874a22d2523a26f5ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24stringordering&quot; id=&quot;scala.math.Ordering.StringOrdering&quot; name=&quot;scala.math.Ordering.StringOrdering&quot;&gt;StringOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24stringordering&quot; id=&quot;scala.math.Ordering.StringOrdering&quot; name=&quot;scala.math.Ordering.StringOrdering&quot;&gt;StringOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a02e45e8f6b188c6bbc960080ad6d3a6613dce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24symbolordering&quot; id=&quot;scala.math.Ordering.SymbolOrdering&quot; name=&quot;scala.math.Ordering.SymbolOrdering&quot;&gt;SymbolOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24symbolordering&quot; id=&quot;scala.math.Ordering.SymbolOrdering&quot; name=&quot;scala.math.Ordering.SymbolOrdering&quot;&gt;SymbolOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594e3f3f000880b0c485af467cf10daa39165e42" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24symbolordering&quot; id=&quot;scala.math.Ordering.SymbolOrdering&quot; name=&quot;scala.math.Ordering.SymbolOrdering&quot;&gt;SymbolOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24symbolordering&quot; id=&quot;scala.math.Ordering.SymbolOrdering&quot; name=&quot;scala.math.Ordering.SymbolOrdering&quot;&gt;SymbolOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcff7fc82c748639406ed3a68d0ecb639e0fa53" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24unitordering&quot; id=&quot;scala.math.Ordering.UnitOrdering&quot; name=&quot;scala.math.Ordering.UnitOrdering&quot;&gt;UnitOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24unitordering&quot; id=&quot;scala.math.Ordering.UnitOrdering&quot; name=&quot;scala.math.Ordering.UnitOrdering&quot;&gt;UnitOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1247f0bda20dd9dd27d381b5f235fa3522a2ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24%24unitordering&quot; id=&quot;scala.math.Ordering.UnitOrdering&quot; name=&quot;scala.math.Ordering.UnitOrdering&quot;&gt;UnitOrdering&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24%24unitordering&quot; id=&quot;scala.math.Ordering.UnitOrdering&quot; name=&quot;scala.math.Ordering.UnitOrdering&quot;&gt;UnitOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d103919d6124c10e4c3ac57de793e88cd6f1522" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24orderingops&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24orderingops&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3285a1d315af8298e84d95b0e9cfba53f62eed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ordering%24orderingops&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24orderingops&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c4603a20c7204fb40ea21e94d888afaf8101b3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24doublemult&quot; id=&quot;scala.concurrent.duration.DoubleMult&quot; name=&quot;scala.concurrent.duration.DoubleMult&quot;&gt;DoubleMult&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24doublemult&quot; id=&quot;scala.concurrent.duration.DoubleMult&quot; name=&quot;scala.concurrent.duration.DoubleMult&quot;&gt;DoubleMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1490a99e52f5b7fe014f6df53918c3b3f2fac608" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24doublemult&quot; id=&quot;scala.concurrent.duration.DoubleMult&quot; name=&quot;scala.concurrent.duration.DoubleMult&quot;&gt;DoubleMult&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24doublemult&quot; id=&quot;scala.concurrent.duration.DoubleMult&quot; name=&quot;scala.concurrent.duration.DoubleMult&quot;&gt;DoubleMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994bf420e1b8d453150fd73d36907f92dc6d3895" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24durationdouble&quot; id=&quot;scala.concurrent.duration.DurationDouble&quot; name=&quot;scala.concurrent.duration.DurationDouble&quot;&gt;DurationDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationdouble&quot; id=&quot;scala.concurrent.duration.DurationDouble&quot; name=&quot;scala.concurrent.duration.DurationDouble&quot;&gt;DurationDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442887a6d52afe54bc367f26aee3d471031f2966" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24durationdouble&quot; id=&quot;scala.concurrent.duration.DurationDouble&quot; name=&quot;scala.concurrent.duration.DurationDouble&quot;&gt;DurationDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationdouble&quot; id=&quot;scala.concurrent.duration.DurationDouble&quot; name=&quot;scala.concurrent.duration.DurationDouble&quot;&gt;DurationDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f18a62aaa296049bf93fd5e89717f1cc33442cd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24durationint&quot; id=&quot;scala.concurrent.duration.DurationInt&quot; name=&quot;scala.concurrent.duration.DurationInt&quot;&gt;DurationInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationint&quot; id=&quot;scala.concurrent.duration.DurationInt&quot; name=&quot;scala.concurrent.duration.DurationInt&quot;&gt;DurationInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fe79f34ff5da83a835df3f997d3032af634a9d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24durationint&quot; id=&quot;scala.concurrent.duration.DurationInt&quot; name=&quot;scala.concurrent.duration.DurationInt&quot;&gt;DurationInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationint&quot; id=&quot;scala.concurrent.duration.DurationInt&quot; name=&quot;scala.concurrent.duration.DurationInt&quot;&gt;DurationInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efc3ad6769888c8562c2440029e0dbd02f7e5fa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24durationlong&quot; id=&quot;scala.concurrent.duration.DurationLong&quot; name=&quot;scala.concurrent.duration.DurationLong&quot;&gt;DurationLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationlong&quot; id=&quot;scala.concurrent.duration.DurationLong&quot; name=&quot;scala.concurrent.duration.DurationLong&quot;&gt;DurationLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5127fa02b21cb68f9a4d55136b19d572754afdf1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24durationlong&quot; id=&quot;scala.concurrent.duration.DurationLong&quot; name=&quot;scala.concurrent.duration.DurationLong&quot;&gt;DurationLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationlong&quot; id=&quot;scala.concurrent.duration.DurationLong&quot; name=&quot;scala.concurrent.duration.DurationLong&quot;&gt;DurationLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2192a3ead7b5e6feb673d538e45d8563576f41c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24intmult&quot; id=&quot;scala.concurrent.duration.IntMult&quot; name=&quot;scala.concurrent.duration.IntMult&quot;&gt;IntMult&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24intmult&quot; id=&quot;scala.concurrent.duration.IntMult&quot; name=&quot;scala.concurrent.duration.IntMult&quot;&gt;IntMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe8c84989986ae7dffafe37348f54c7cdb7c8fb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24intmult&quot; id=&quot;scala.concurrent.duration.IntMult&quot; name=&quot;scala.concurrent.duration.IntMult&quot;&gt;IntMult&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24intmult&quot; id=&quot;scala.concurrent.duration.IntMult&quot; name=&quot;scala.concurrent.duration.IntMult&quot;&gt;IntMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbc4b6298f097156fa28317fceac728675e9556" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24longmult&quot; id=&quot;scala.concurrent.duration.LongMult&quot; name=&quot;scala.concurrent.duration.LongMult&quot;&gt;LongMult&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24longmult&quot; id=&quot;scala.concurrent.duration.LongMult&quot; name=&quot;scala.concurrent.duration.LongMult&quot;&gt;LongMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd93a949f3a475fca80e95cae2d4feee8930a957" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;package%24%24longmult&quot; id=&quot;scala.concurrent.duration.LongMult&quot; name=&quot;scala.concurrent.duration.LongMult&quot;&gt;LongMult&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24longmult&quot; id=&quot;scala.concurrent.duration.LongMult&quot; name=&quot;scala.concurrent.duration.LongMult&quot;&gt;LongMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4395307e1577588168fd9e484aff3e9104fe27" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;param&quot; id=&quot;scala.annotation.meta.param&quot; name=&quot;scala.annotation.meta.param&quot;&gt;param&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;param&quot; id=&quot;scala.annotation.meta.param&quot; name=&quot;scala.annotation.meta.param&quot;&gt;param&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b626f71c4c5c29c0e24c756c24fa5d024b3338a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;param&quot; id=&quot;scala.annotation.meta.param&quot; name=&quot;scala.annotation.meta.param&quot;&gt;param&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;param&quot; id=&quot;scala.annotation.meta.param&quot; name=&quot;scala.annotation.meta.param&quot;&gt;param&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5eb08bfc3528e3d9b24daee34f56c10f3391513" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7180b0f4b9ce5cdf14b7f8f978024d3684be371" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2b760b765f21f4ff09f4e6ec5fd485a25349ae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d408e20befde1bfe09252f034000472017aba4fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf6a0023877b918b1bcc098bac8f68bf5ae67ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;partiallyordered&quot; id=&quot;scala.math.PartiallyOrdered&quot; name=&quot;scala.math.PartiallyOrdered&quot;&gt;PartiallyOrdered&lt;/a&gt;[&lt;span name=&quot;scala.math.PartiallyOrdered.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partiallyordered&quot; id=&quot;scala.math.PartiallyOrdered&quot; name=&quot;scala.math.PartiallyOrdered&quot;&gt;PartiallyOrdered&lt;/a&gt;[&lt;span name=&quot;scala.math.PartiallyOrdered.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9e807a1fd6f28aaf4fad4efcaa931f6b990095" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;partiallyordered&quot; id=&quot;scala.math.PartiallyOrdered&quot; name=&quot;scala.math.PartiallyOrdered&quot;&gt;PartiallyOrdered&lt;/a&gt;[&lt;span name=&quot;scala.math.PartiallyOrdered.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partiallyordered&quot; id=&quot;scala.math.PartiallyOrdered&quot; name=&quot;scala.math.PartiallyOrdered&quot;&gt;PartiallyOrdered&lt;/a&gt;[&lt;span name=&quot;scala.math.PartiallyOrdered.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f37228b176e0913cb5b8edf22305fae69798fb2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;partialordering&quot; id=&quot;scala.math.PartialOrdering&quot; name=&quot;scala.math.PartialOrdering&quot;&gt;PartialOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialordering&quot; id=&quot;scala.math.PartialOrdering&quot; name=&quot;scala.math.PartialOrdering&quot;&gt;PartialOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292904a04408d16c93e493b2be190ca67b1b546f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;partialordering&quot; id=&quot;scala.math.PartialOrdering&quot; name=&quot;scala.math.PartialOrdering&quot;&gt;PartialOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialordering&quot; id=&quot;scala.math.PartialOrdering&quot; name=&quot;scala.math.PartialOrdering&quot;&gt;PartialOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7742deaa02ab36fd931eb009a5fcc4091a03507" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;phantomreference&quot; id=&quot;scala.ref.PhantomReference&quot; name=&quot;scala.ref.PhantomReference&quot;&gt;PhantomReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;phantomreference&quot; id=&quot;scala.ref.PhantomReference&quot; name=&quot;scala.ref.PhantomReference&quot;&gt;PhantomReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25704a3df4553fa19f240f968d6ade458860dfb7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;phantomreference&quot; id=&quot;scala.ref.PhantomReference&quot; name=&quot;scala.ref.PhantomReference&quot;&gt;PhantomReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;phantomreference&quot; id=&quot;scala.ref.PhantomReference&quot; name=&quot;scala.ref.PhantomReference&quot;&gt;PhantomReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a784d783b623525c6881872ed21682132fa1b38d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;span name=&quot;scala.Predef.any2stringadd.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;span name=&quot;scala.Predef.any2stringadd.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddfe8725e332f87c343dc70c81c41772c3dbd85" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;span name=&quot;scala.Predef.any2stringadd.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;span name=&quot;scala.Predef.any2stringadd.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9daac8f46435b47f7ef521657bf40bf105170240" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24arraycharsequence&quot; id=&quot;scala.Predef.ArrayCharSequence&quot; name=&quot;scala.Predef.ArrayCharSequence&quot;&gt;ArrayCharSequence&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24arraycharsequence&quot; id=&quot;scala.Predef.ArrayCharSequence&quot; name=&quot;scala.Predef.ArrayCharSequence&quot;&gt;ArrayCharSequence&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf5b93fd0967fb5857410683f6575d37a316f7c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24arraycharsequence&quot; id=&quot;scala.Predef.ArrayCharSequence&quot; name=&quot;scala.Predef.ArrayCharSequence&quot;&gt;ArrayCharSequence&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24arraycharsequence&quot; id=&quot;scala.Predef.ArrayCharSequence&quot; name=&quot;scala.Predef.ArrayCharSequence&quot;&gt;ArrayCharSequence&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4cfe385e0a64322adced1458165a11a987e77c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;span name=&quot;scala.Predef.ArrowAssoc.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;span name=&quot;scala.Predef.ArrowAssoc.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463af73e9e01b3d86d543cc41b8b98d89cc8013a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;span name=&quot;scala.Predef.ArrowAssoc.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;span name=&quot;scala.Predef.ArrowAssoc.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cdd9d8f3438d8e87a0dbfa4f1f44d9ddca8699" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24seqcharsequence&quot; id=&quot;scala.Predef.SeqCharSequence&quot; name=&quot;scala.Predef.SeqCharSequence&quot;&gt;SeqCharSequence&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24seqcharsequence&quot; id=&quot;scala.Predef.SeqCharSequence&quot; name=&quot;scala.Predef.SeqCharSequence&quot;&gt;SeqCharSequence&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c79629398251a332c5c7a784fa45447b587b65" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24seqcharsequence&quot; id=&quot;scala.Predef.SeqCharSequence&quot; name=&quot;scala.Predef.SeqCharSequence&quot;&gt;SeqCharSequence&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24seqcharsequence&quot; id=&quot;scala.Predef.SeqCharSequence&quot; name=&quot;scala.Predef.SeqCharSequence&quot;&gt;SeqCharSequence&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6a8b97e0d29b55ab15575a007f6eb60d86bfb5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;span name=&quot;scala.Predef.StringFormat.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;span name=&quot;scala.Predef.StringFormat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1ff1a3fb1da979b2f2beabee789392152ce8b4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;span name=&quot;scala.Predef.StringFormat.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;span name=&quot;scala.Predef.StringFormat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e524bad7453b790cb4039dbfe15fc5509819acb1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priority0functionextensions&quot; id=&quot;scala.jdk.Priority0FunctionExtensions&quot; name=&quot;scala.jdk.Priority0FunctionExtensions&quot;&gt;Priority0FunctionExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priority0functionextensions&quot; id=&quot;scala.jdk.Priority0FunctionExtensions&quot; name=&quot;scala.jdk.Priority0FunctionExtensions&quot;&gt;Priority0FunctionExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fb5edaac69450ac18d467a0df1248573bfd5c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priority0functionextensions&quot; id=&quot;scala.jdk.Priority0FunctionExtensions&quot; name=&quot;scala.jdk.Priority0FunctionExtensions&quot;&gt;Priority0FunctionExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priority0functionextensions&quot; id=&quot;scala.jdk.Priority0FunctionExtensions&quot; name=&quot;scala.jdk.Priority0FunctionExtensions&quot;&gt;Priority0FunctionExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102f84641aece394719dca9d131ac341b96569af" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priority1functionextensions&quot; id=&quot;scala.jdk.Priority1FunctionExtensions&quot; name=&quot;scala.jdk.Priority1FunctionExtensions&quot;&gt;Priority1FunctionExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priority1functionextensions&quot; id=&quot;scala.jdk.Priority1FunctionExtensions&quot; name=&quot;scala.jdk.Priority1FunctionExtensions&quot;&gt;Priority1FunctionExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c456ac75f6b4d7145e8ba97c4294ce3e26b13f41" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priority1functionextensions&quot; id=&quot;scala.jdk.Priority1FunctionExtensions&quot; name=&quot;scala.jdk.Priority1FunctionExtensions&quot;&gt;Priority1FunctionExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priority1functionextensions&quot; id=&quot;scala.jdk.Priority1FunctionExtensions&quot; name=&quot;scala.jdk.Priority1FunctionExtensions&quot;&gt;Priority1FunctionExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b44031643de73e57d245d0d8dc4463e017d2ae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priority2functionextensions&quot; id=&quot;scala.jdk.Priority2FunctionExtensions&quot; name=&quot;scala.jdk.Priority2FunctionExtensions&quot;&gt;Priority2FunctionExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priority2functionextensions&quot; id=&quot;scala.jdk.Priority2FunctionExtensions&quot; name=&quot;scala.jdk.Priority2FunctionExtensions&quot;&gt;Priority2FunctionExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161c37e4f3a1280f692e7a143c32e63000a63075" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priority2functionextensions&quot; id=&quot;scala.jdk.Priority2FunctionExtensions&quot; name=&quot;scala.jdk.Priority2FunctionExtensions&quot;&gt;Priority2FunctionExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priority2functionextensions&quot; id=&quot;scala.jdk.Priority2FunctionExtensions&quot; name=&quot;scala.jdk.Priority2FunctionExtensions&quot;&gt;Priority2FunctionExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cb3378420e0b7c295c222d8276e2b391105005" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priority3functionextensions&quot; id=&quot;scala.jdk.Priority3FunctionExtensions&quot; name=&quot;scala.jdk.Priority3FunctionExtensions&quot;&gt;Priority3FunctionExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priority3functionextensions&quot; id=&quot;scala.jdk.Priority3FunctionExtensions&quot; name=&quot;scala.jdk.Priority3FunctionExtensions&quot;&gt;Priority3FunctionExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8fb38edb2772d31a3e817b19074860109a4f9a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priority3functionextensions&quot; id=&quot;scala.jdk.Priority3FunctionExtensions&quot; name=&quot;scala.jdk.Priority3FunctionExtensions&quot;&gt;Priority3FunctionExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priority3functionextensions&quot; id=&quot;scala.jdk.Priority3FunctionExtensions&quot; name=&quot;scala.jdk.Priority3FunctionExtensions&quot;&gt;Priority3FunctionExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306aeba8d5912171bbaa378ae9d45a0b962210df" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa2ea2b052638c6ea7c38ce87e4f60a7140ea71" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907ed72b86504c1940baa7afbd8743caf415b06c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df58415c36a18b683e66f7ec03499564dc7d974c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983550d0ca423f7f28dcbfd14db67ae16167920b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a32af2fa9802a984d765ee505c172407ae2272" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964974ee914495460ed57c42f470a23524382e41" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;FileBuilder&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;FileBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0b0ffe1e8b226dc6291245c9bfaa0cb3e1eae2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;FileBuilder&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;FileBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07d30814e3066217702ba98bef72601f2067ce5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder%24%24sink&quot; id=&quot;scala.sys.process.ProcessBuilder.Sink&quot; name=&quot;scala.sys.process.ProcessBuilder.Sink&quot;&gt;Sink&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24sink&quot; id=&quot;scala.sys.process.ProcessBuilder.Sink&quot; name=&quot;scala.sys.process.ProcessBuilder.Sink&quot;&gt;Sink&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5124d05f40c3671ea59f7aee62b5168edf869e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder%24%24sink&quot; id=&quot;scala.sys.process.ProcessBuilder.Sink&quot; name=&quot;scala.sys.process.ProcessBuilder.Sink&quot;&gt;Sink&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24sink&quot; id=&quot;scala.sys.process.ProcessBuilder.Sink&quot; name=&quot;scala.sys.process.ProcessBuilder.Sink&quot;&gt;Sink&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6660b52e3d7cee4dd5ae6f4fb979032db61babc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e5636008261a3f5337dab40166dffcca83fac0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f45a146b26fd0fa79c01096106f9f7c3a363c4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;URLBuilder&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;URLBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802bb9e8c3a88df90f24ed29dbbe7cb4625c3485" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;URLBuilder&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;URLBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5005ed3672d29669f549ad7b35096169bb7fdc15" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processcreation&quot; id=&quot;scala.sys.process.ProcessCreation&quot; name=&quot;scala.sys.process.ProcessCreation&quot;&gt;ProcessCreation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processcreation&quot; id=&quot;scala.sys.process.ProcessCreation&quot; name=&quot;scala.sys.process.ProcessCreation&quot;&gt;ProcessCreation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bfa28030f43c286cec0845611b2b11e531ddbc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processcreation&quot; id=&quot;scala.sys.process.ProcessCreation&quot; name=&quot;scala.sys.process.ProcessCreation&quot;&gt;ProcessCreation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processcreation&quot; id=&quot;scala.sys.process.ProcessCreation&quot; name=&quot;scala.sys.process.ProcessCreation&quot;&gt;ProcessCreation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af509f1c342feba785ee81ef6311d15be4202fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processimplicits&quot; id=&quot;scala.sys.process.ProcessImplicits&quot; name=&quot;scala.sys.process.ProcessImplicits&quot;&gt;ProcessImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processimplicits&quot; id=&quot;scala.sys.process.ProcessImplicits&quot; name=&quot;scala.sys.process.ProcessImplicits&quot;&gt;ProcessImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7cbb34c5d17280d5c39fffc0b5e11d712eb907" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processimplicits&quot; id=&quot;scala.sys.process.ProcessImplicits&quot; name=&quot;scala.sys.process.ProcessImplicits&quot;&gt;ProcessImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processimplicits&quot; id=&quot;scala.sys.process.ProcessImplicits&quot; name=&quot;scala.sys.process.ProcessImplicits&quot;&gt;ProcessImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0936eaadd954c3ce8cd78de599e8d438215bbbf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e883cd0697293a91a52aa6f87a11b1950c7da8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799fa99d53c8321d5ac4c18a892e9c89c50b3baf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c097ef74d9b7555ee38f7ade96931a2999093135" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe66b7b9473fc94053122bcda2f1a5b2bcd6da3d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc53142f93a4bd6335c1964bfa0afe6c0cbb0e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1416b45388e701f727ef99fab7edd22f5adf4e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt;[&lt;span name=&quot;scala.Product1.T1&quot;&gt;T1&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt;[&lt;span name=&quot;scala.Product1.T1&quot;&gt;T1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b038515193a762dc79919c3277d779c68028cd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt;[&lt;span name=&quot;scala.Product1.T1&quot;&gt;T1&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt;[&lt;span name=&quot;scala.Product1.T1&quot;&gt;T1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6357973eeb393db55c3ec2d4c278a98cd8640ff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt;[&lt;span name=&quot;scala.Product10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T10&quot;&gt;T10&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt;[&lt;span name=&quot;scala.Product10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T10&quot;&gt;T10&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b51a13d0b5bf1fc102bb54a4826d4a43ed220bc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt;[&lt;span name=&quot;scala.Product10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T10&quot;&gt;T10&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt;[&lt;span name=&quot;scala.Product10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T10&quot;&gt;T10&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ccf88eb9c0cc39ac4e2ea65f10d5b129dcdf08" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt;[&lt;span name=&quot;scala.Product11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T11&quot;&gt;T11&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt;[&lt;span name=&quot;scala.Product11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T11&quot;&gt;T11&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb7589639c481976b5e1f22d385eacaa9abdb2f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt;[&lt;span name=&quot;scala.Product11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T11&quot;&gt;T11&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt;[&lt;span name=&quot;scala.Product11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T11&quot;&gt;T11&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59be6d0607c692d4e206d9b8f0e40f2ddba6b0f0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt;[&lt;span name=&quot;scala.Product12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T12&quot;&gt;T12&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt;[&lt;span name=&quot;scala.Product12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T12&quot;&gt;T12&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c1f302659e3d4724efd9ebf34cb4a384e997e6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt;[&lt;span name=&quot;scala.Product12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T12&quot;&gt;T12&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt;[&lt;span name=&quot;scala.Product12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T12&quot;&gt;T12&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5746437600f6bfa12aab1fd0700d6f515439b5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt;[&lt;span name=&quot;scala.Product13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T13&quot;&gt;T13&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt;[&lt;span name=&quot;scala.Product13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T13&quot;&gt;T13&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3dbc3d267492579ca9b0b518024e1e884e8793" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt;[&lt;span name=&quot;scala.Product13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T13&quot;&gt;T13&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt;[&lt;span name=&quot;scala.Product13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T13&quot;&gt;T13&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca5c5c4710dc4eadf5f4e8d013164655c4bd5ec" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt;[&lt;span name=&quot;scala.Product14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T14&quot;&gt;T14&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt;[&lt;span name=&quot;scala.Product14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T14&quot;&gt;T14&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b002f040efbf55dcb129079a83b650831963f98" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt;[&lt;span name=&quot;scala.Product14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T14&quot;&gt;T14&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt;[&lt;span name=&quot;scala.Product14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T14&quot;&gt;T14&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5d4d61833817fd6d1f6e8056b070a1fc3b4044" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt;[&lt;span name=&quot;scala.Product15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T15&quot;&gt;T15&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt;[&lt;span name=&quot;scala.Product15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T15&quot;&gt;T15&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ced49ff91b1b18687cdb57d9dda109884ff28da" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt;[&lt;span name=&quot;scala.Product15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T15&quot;&gt;T15&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt;[&lt;span name=&quot;scala.Product15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T15&quot;&gt;T15&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0c51d5a352ec3fa3dd6a2e9b422d513fe6107c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt;[&lt;span name=&quot;scala.Product16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T16&quot;&gt;T16&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt;[&lt;span name=&quot;scala.Product16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T16&quot;&gt;T16&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b621dd050292cdc077adc1078b1f84f6000f8468" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt;[&lt;span name=&quot;scala.Product16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T16&quot;&gt;T16&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt;[&lt;span name=&quot;scala.Product16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T16&quot;&gt;T16&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad58b7dd3c75bd0e2e7b3a1dbc61004c64f1406" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt;[&lt;span name=&quot;scala.Product17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T17&quot;&gt;T17&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt;[&lt;span name=&quot;scala.Product17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T17&quot;&gt;T17&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec7dc3a92d4c727bd532d7a37d87cedbe5243d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt;[&lt;span name=&quot;scala.Product17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T17&quot;&gt;T17&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt;[&lt;span name=&quot;scala.Product17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T17&quot;&gt;T17&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53366588e1f0a6f64fac19b191f3d838da9928c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt;[&lt;span name=&quot;scala.Product18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T18&quot;&gt;T18&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt;[&lt;span name=&quot;scala.Product18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T18&quot;&gt;T18&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc251ae8c9b3803ffde34c76c63a0ec21e6fbe1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt;[&lt;span name=&quot;scala.Product18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T18&quot;&gt;T18&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt;[&lt;span name=&quot;scala.Product18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T18&quot;&gt;T18&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d75cb7b538130939f03ab7d96bf369b1803d4c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt;[&lt;span name=&quot;scala.Product19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T19&quot;&gt;T19&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt;[&lt;span name=&quot;scala.Product19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T19&quot;&gt;T19&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b96d197abc1fa4fc030c1769ac334c5ea36e3d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt;[&lt;span name=&quot;scala.Product19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T19&quot;&gt;T19&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt;[&lt;span name=&quot;scala.Product19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T19&quot;&gt;T19&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1423779c4bef0776d3fac34b4b4a42b775a3f5ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt;[&lt;span name=&quot;scala.Product2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product2.T2&quot;&gt;T2&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt;[&lt;span name=&quot;scala.Product2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product2.T2&quot;&gt;T2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b4bd9a18b67f5daa7f97f451f05aa6c1a1be6b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt;[&lt;span name=&quot;scala.Product2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product2.T2&quot;&gt;T2&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt;[&lt;span name=&quot;scala.Product2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product2.T2&quot;&gt;T2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917498ebff853370b16249455fdb7ef5a9318c94" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt;[&lt;span name=&quot;scala.Product20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T20&quot;&gt;T20&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt;[&lt;span name=&quot;scala.Product20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T20&quot;&gt;T20&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf66e0c5f206b7a4d7e16f3b35fd353557d50a5b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt;[&lt;span name=&quot;scala.Product20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T20&quot;&gt;T20&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt;[&lt;span name=&quot;scala.Product20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T20&quot;&gt;T20&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d917b82748e531f3514a1c0fa3d9063d2a588ad7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt;[&lt;span name=&quot;scala.Product21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T21&quot;&gt;T21&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt;[&lt;span name=&quot;scala.Product21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T21&quot;&gt;T21&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49687f8e2f4c3efa0f363c09c669a2b905811153" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt;[&lt;span name=&quot;scala.Product21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T21&quot;&gt;T21&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt;[&lt;span name=&quot;scala.Product21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T21&quot;&gt;T21&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdb3f0614931be37303ef540441069bf980acd4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt;[&lt;span name=&quot;scala.Product22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T22&quot;&gt;T22&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt;[&lt;span name=&quot;scala.Product22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T22&quot;&gt;T22&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294850cb3e0f90faf851731eeb0973326f81e126" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt;[&lt;span name=&quot;scala.Product22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T22&quot;&gt;T22&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt;[&lt;span name=&quot;scala.Product22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T22&quot;&gt;T22&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f79fceea73f13fef0e36c17dc62d301bb0cac54" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt;[&lt;span name=&quot;scala.Product3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T3&quot;&gt;T3&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt;[&lt;span name=&quot;scala.Product3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T3&quot;&gt;T3&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e085a11e4d6b5cb001920bc351e07fd6a6a1a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt;[&lt;span name=&quot;scala.Product3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T3&quot;&gt;T3&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt;[&lt;span name=&quot;scala.Product3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T3&quot;&gt;T3&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9b8d0114fd96b2f44314f0f8cc058eb8be8bff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt;[&lt;span name=&quot;scala.Product4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T4&quot;&gt;T4&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt;[&lt;span name=&quot;scala.Product4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T4&quot;&gt;T4&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d2bd73fa8359021c788b1a0c5363c6de12341c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt;[&lt;span name=&quot;scala.Product4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T4&quot;&gt;T4&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt;[&lt;span name=&quot;scala.Product4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T4&quot;&gt;T4&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42e2a1fb0b2cefcc76e0473098a345354954b55" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt;[&lt;span name=&quot;scala.Product5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T5&quot;&gt;T5&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt;[&lt;span name=&quot;scala.Product5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T5&quot;&gt;T5&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d374cf1e165a89218a26f77b4935c90810731f1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt;[&lt;span name=&quot;scala.Product5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T5&quot;&gt;T5&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt;[&lt;span name=&quot;scala.Product5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T5&quot;&gt;T5&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa24cc8ac6a4b2655e29380791d128024bb7e76" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt;[&lt;span name=&quot;scala.Product6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T6&quot;&gt;T6&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt;[&lt;span name=&quot;scala.Product6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T6&quot;&gt;T6&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c451c0e5d2b9a1cab2e83628e4a9abeadd85520" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt;[&lt;span name=&quot;scala.Product6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T6&quot;&gt;T6&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt;[&lt;span name=&quot;scala.Product6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T6&quot;&gt;T6&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcfeca37be35d39d1e24b20ac234d34a0c62132" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt;[&lt;span name=&quot;scala.Product7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T7&quot;&gt;T7&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt;[&lt;span name=&quot;scala.Product7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T7&quot;&gt;T7&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c975bec9480339565ba13f7c9e4f17b0333a55f3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt;[&lt;span name=&quot;scala.Product7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T7&quot;&gt;T7&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt;[&lt;span name=&quot;scala.Product7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T7&quot;&gt;T7&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5588c7df162721edc1d3197bae73161356ca070e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt;[&lt;span name=&quot;scala.Product8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T8&quot;&gt;T8&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt;[&lt;span name=&quot;scala.Product8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T8&quot;&gt;T8&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5527a1d9233f41794580531a06b633ce2447ee9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt;[&lt;span name=&quot;scala.Product8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T8&quot;&gt;T8&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt;[&lt;span name=&quot;scala.Product8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T8&quot;&gt;T8&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88878093fbe7e7fbe0790f6e46c68f24a45111c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt;[&lt;span name=&quot;scala.Product9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T9&quot;&gt;T9&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt;[&lt;span name=&quot;scala.Product9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T9&quot;&gt;T9&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ae6e3898f275479604f02ab6cc8d39da0d3a5d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt;[&lt;span name=&quot;scala.Product9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T9&quot;&gt;T9&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt;[&lt;span name=&quot;scala.Product9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T9&quot;&gt;T9&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b249061cb55d87368da02a4546e16dccc5888fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Promise.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Promise.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3dd28a87c2106b828af2da196308accd1dcd9a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Promise.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Promise.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2237d92a0749309f09a32748142cc9f85f516be5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272a747a0b86da51e065735dd475590ff5d78680" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e6804c74d80d815de3101ca38cc63e6ce129eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;prop%24%24creator&quot; id=&quot;scala.sys.Prop.Creator&quot; name=&quot;scala.sys.Prop.Creator&quot;&gt;Creator&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.Creator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;prop%24%24creator&quot; id=&quot;scala.sys.Prop.Creator&quot; name=&quot;scala.sys.Prop.Creator&quot;&gt;Creator&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.Creator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b285b1fba8f0b6aef52b89b11a162bf71a20236" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;prop%24%24creator&quot; id=&quot;scala.sys.Prop.Creator&quot; name=&quot;scala.sys.Prop.Creator&quot;&gt;Creator&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.Creator.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;prop%24%24creator&quot; id=&quot;scala.sys.Prop.Creator&quot; name=&quot;scala.sys.Prop.Creator&quot;&gt;Creator&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.Creator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e94583d858ca148b2fd7bcf2d84acd664e298f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b75b9a0353a9d6db1da94667ff889dc1d09734" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb62169f41d6e17dc945557ef9f76f7f68cd868" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt;[&lt;span name=&quot;scala.Proxy.Typed.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt;[&lt;span name=&quot;scala.Proxy.Typed.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283c8fe9d851a95b073672782e7068de53236da8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt;[&lt;span name=&quot;scala.Proxy.Typed.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt;[&lt;span name=&quot;scala.Proxy.Typed.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089050e252a28552f0bd8f70539f9e9ce19ceeb3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26238d378186646f0a31e1ba5a900ea19ec0f063" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eee4875a0e9a754e01f6dc36686f4d29fb7555" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de8a8f3f69790740dfa89718b0ac785fed1665b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97aaa8f6f2f68636dc8968471d64979587a49e80" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;random&quot; id=&quot;scala.util.Random&quot; name=&quot;scala.util.Random&quot;&gt;Random&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;random&quot; id=&quot;scala.util.Random&quot; name=&quot;scala.util.Random&quot;&gt;Random&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f25b1c808afe9d2751c621602d5af34cd48ef7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;random&quot; id=&quot;scala.util.Random&quot; name=&quot;scala.util.Random&quot;&gt;Random&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;random&quot; id=&quot;scala.util.Random&quot; name=&quot;scala.util.Random&quot;&gt;Random&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85f563c6586f5e8e9265e3244c8a8ae2e71e7e5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424ef41250af15a91f20bc357f209eb348dea77a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79df101e0d81d7b0e21afc9deb6172247bc423fa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731fb6f437189d440f34f8cfd805c22f7f7951c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ea3d5de123a9eaf121ababfd186e81645c79c2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ac5f27f2e76ac885c206164749fa73e30d54d1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e7d86cf2c442ef71c24f0af7620e89a3ee18c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;range%24%24partial&quot; id=&quot;scala.collection.immutable.Range.Partial&quot; name=&quot;scala.collection.immutable.Range.Partial&quot;&gt;Partial&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.Partial.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Range.Partial.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24partial&quot; id=&quot;scala.collection.immutable.Range.Partial&quot; name=&quot;scala.collection.immutable.Range.Partial&quot;&gt;Partial&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.Partial.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Range.Partial.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3329d452ad8498186fdcab06553aa646700b1880" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;range%24%24partial&quot; id=&quot;scala.collection.immutable.Range.Partial&quot; name=&quot;scala.collection.immutable.Range.Partial&quot;&gt;Partial&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.Partial.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Range.Partial.U&quot;&gt;U&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24partial&quot; id=&quot;scala.collection.immutable.Range.Partial&quot; name=&quot;scala.collection.immutable.Range.Partial&quot;&gt;Partial&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.Partial.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Range.Partial.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03d8ab24118cdff9c487c5c4bdda11a4b35493c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;reference&quot; id=&quot;scala.ref.Reference&quot; name=&quot;scala.ref.Reference&quot;&gt;Reference&lt;/a&gt;[&lt;span name=&quot;scala.ref.Reference.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;reference&quot; id=&quot;scala.ref.Reference&quot; name=&quot;scala.ref.Reference&quot;&gt;Reference&lt;/a&gt;[&lt;span name=&quot;scala.ref.Reference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2022d99f90e950cffd68bd048e8bc276bc844aa9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;reference&quot; id=&quot;scala.ref.Reference&quot; name=&quot;scala.ref.Reference&quot;&gt;Reference&lt;/a&gt;[&lt;span name=&quot;scala.ref.Reference.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;reference&quot; id=&quot;scala.ref.Reference&quot; name=&quot;scala.ref.Reference&quot;&gt;Reference&lt;/a&gt;[&lt;span name=&quot;scala.ref.Reference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9cb33dbde4df73cf439e178572f6b4a179f7cc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;referencequeue&quot; id=&quot;scala.ref.ReferenceQueue&quot; name=&quot;scala.ref.ReferenceQueue&quot;&gt;ReferenceQueue&lt;/a&gt;[&lt;span name=&quot;scala.ref.ReferenceQueue.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;referencequeue&quot; id=&quot;scala.ref.ReferenceQueue&quot; name=&quot;scala.ref.ReferenceQueue&quot;&gt;ReferenceQueue&lt;/a&gt;[&lt;span name=&quot;scala.ref.ReferenceQueue.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4ba53c36e81dc003d88f28b60ec3797d87b235" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;referencequeue&quot; id=&quot;scala.ref.ReferenceQueue&quot; name=&quot;scala.ref.ReferenceQueue&quot;&gt;ReferenceQueue&lt;/a&gt;[&lt;span name=&quot;scala.ref.ReferenceQueue.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;referencequeue&quot; id=&quot;scala.ref.ReferenceQueue&quot; name=&quot;scala.ref.ReferenceQueue&quot;&gt;ReferenceQueue&lt;/a&gt;[&lt;span name=&quot;scala.ref.ReferenceQueue.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64efd9efc2958dd7a85a528673b662034aadc72" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;referencewrapper&quot; id=&quot;scala.ref.ReferenceWrapper&quot; name=&quot;scala.ref.ReferenceWrapper&quot;&gt;ReferenceWrapper&lt;/a&gt;[&lt;span name=&quot;scala.ref.ReferenceWrapper.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;referencewrapper&quot; id=&quot;scala.ref.ReferenceWrapper&quot; name=&quot;scala.ref.ReferenceWrapper&quot;&gt;ReferenceWrapper&lt;/a&gt;[&lt;span name=&quot;scala.ref.ReferenceWrapper.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b810067f28380d7d171e31e1769f2449d6393d7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;referencewrapper&quot; id=&quot;scala.ref.ReferenceWrapper&quot; name=&quot;scala.ref.ReferenceWrapper&quot;&gt;ReferenceWrapper&lt;/a&gt;[&lt;span name=&quot;scala.ref.ReferenceWrapper.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;referencewrapper&quot; id=&quot;scala.ref.ReferenceWrapper&quot; name=&quot;scala.ref.ReferenceWrapper&quot;&gt;ReferenceWrapper&lt;/a&gt;[&lt;span name=&quot;scala.ref.ReferenceWrapper.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb8052c0634e49a75b97657b53c0a897714ed6a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;regex&quot; id=&quot;scala.util.matching.Regex&quot; name=&quot;scala.util.matching.Regex&quot;&gt;Regex&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex&quot; id=&quot;scala.util.matching.Regex&quot; name=&quot;scala.util.matching.Regex&quot;&gt;Regex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b87b0e9ef6cb57922bb05738bc7099a8935f983" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;regex&quot; id=&quot;scala.util.matching.Regex&quot; name=&quot;scala.util.matching.Regex&quot;&gt;Regex&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex&quot; id=&quot;scala.util.matching.Regex&quot; name=&quot;scala.util.matching.Regex&quot;&gt;Regex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22363306e607dd1b676d1f0f55f137c8f18238c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e731737aed6b8d90c352fc46d77a5bc5c505d1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da997b1a1089dcb3c73017739f57acbf91f4cc09" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;regex%24%24matchdata&quot; id=&quot;scala.util.matching.Regex.MatchData&quot; name=&quot;scala.util.matching.Regex.MatchData&quot;&gt;MatchData&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24matchdata&quot; id=&quot;scala.util.matching.Regex.MatchData&quot; name=&quot;scala.util.matching.Regex.MatchData&quot;&gt;MatchData&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c961abdcfb8466d44679597a1067611b6bc661" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;regex%24%24matchdata&quot; id=&quot;scala.util.matching.Regex.MatchData&quot; name=&quot;scala.util.matching.Regex.MatchData&quot;&gt;MatchData&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24matchdata&quot; id=&quot;scala.util.matching.Regex.MatchData&quot; name=&quot;scala.util.matching.Regex.MatchData&quot;&gt;MatchData&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7320d47958b9df47bc68c44ed55f5afa74858d2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;regex%24%24matchiterator&quot; id=&quot;scala.util.matching.Regex.MatchIterator&quot; name=&quot;scala.util.matching.Regex.MatchIterator&quot;&gt;MatchIterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24matchiterator&quot; id=&quot;scala.util.matching.Regex.MatchIterator&quot; name=&quot;scala.util.matching.Regex.MatchIterator&quot;&gt;MatchIterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd4291e4862cee663d56cb701345dcc3052435c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;regex%24%24matchiterator&quot; id=&quot;scala.util.matching.Regex.MatchIterator&quot; name=&quot;scala.util.matching.Regex.MatchIterator&quot;&gt;MatchIterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24matchiterator&quot; id=&quot;scala.util.matching.Regex.MatchIterator&quot; name=&quot;scala.util.matching.Regex.MatchIterator&quot;&gt;MatchIterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ccc7d60fb382890e2313d7b7f1c74397f40224" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ReusableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ReusableBuilder.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ReusableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ReusableBuilder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d6de0a83142bfd2ba473a0f22d7398d748d8dc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ReusableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ReusableBuilder.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ReusableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ReusableBuilder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026bad61f9472d4305e8c7c4e0bf9817356d46f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;Right&lt;/a&gt;[&lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;Right&lt;/a&gt;[&lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2d0f4660777932b6ff8730c31e1b91d718dca7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;Right&lt;/a&gt;[&lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;Right&lt;/a&gt;[&lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd099775480a225710d2f8cba06da17db979c34a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a362588c994338a39710568e30de5c94d9f67f64" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e71b0e5cc3aa4bdb671e58e48d3529a5263f1b2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;scalanumericconversions&quot; id=&quot;scala.math.ScalaNumericConversions&quot; name=&quot;scala.math.ScalaNumericConversions&quot;&gt;ScalaNumericConversions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;scalanumericconversions&quot; id=&quot;scala.math.ScalaNumericConversions&quot; name=&quot;scala.math.ScalaNumericConversions&quot;&gt;ScalaNumericConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903dbdafedc5ffefbfb525eba231f1851b7e5971" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;scalanumericconversions&quot; id=&quot;scala.math.ScalaNumericConversions&quot; name=&quot;scala.math.ScalaNumericConversions&quot;&gt;ScalaNumericConversions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;scalanumericconversions&quot; id=&quot;scala.math.ScalaNumericConversions&quot; name=&quot;scala.math.ScalaNumericConversions&quot;&gt;ScalaNumericConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a4b4a0650bc3cbe26cd2ab113919159d4843c0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;scalareflectionexception&quot; id=&quot;scala.ScalaReflectionException&quot; name=&quot;scala.ScalaReflectionException&quot;&gt;ScalaReflectionException&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;scalareflectionexception&quot; id=&quot;scala.ScalaReflectionException&quot; name=&quot;scala.ScalaReflectionException&quot;&gt;ScalaReflectionException&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3efa1842be0d882c7c27b240a7a5db286a074d4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;scalareflectionexception&quot; id=&quot;scala.ScalaReflectionException&quot; name=&quot;scala.ScalaReflectionException&quot;&gt;ScalaReflectionException&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;scalareflectionexception&quot; id=&quot;scala.ScalaReflectionException&quot; name=&quot;scala.ScalaReflectionException&quot;&gt;ScalaReflectionException&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f5eddd643b05ea618878aef3099f0a85299844" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;searching%24%24found&quot; id=&quot;scala.collection.Searching.Found&quot; name=&quot;scala.collection.Searching.Found&quot;&gt;Found&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;searching%24%24found&quot; id=&quot;scala.collection.Searching.Found&quot; name=&quot;scala.collection.Searching.Found&quot;&gt;Found&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328892b81424e9f90b496dd7cf1a76b129fc4b79" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;searching%24%24found&quot; id=&quot;scala.collection.Searching.Found&quot; name=&quot;scala.collection.Searching.Found&quot;&gt;Found&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;searching%24%24found&quot; id=&quot;scala.collection.Searching.Found&quot; name=&quot;scala.collection.Searching.Found&quot;&gt;Found&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100ec7c97315318bec6627b8cf75ef4909a604c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;searching%24%24insertionpoint&quot; id=&quot;scala.collection.Searching.InsertionPoint&quot; name=&quot;scala.collection.Searching.InsertionPoint&quot;&gt;InsertionPoint&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;searching%24%24insertionpoint&quot; id=&quot;scala.collection.Searching.InsertionPoint&quot; name=&quot;scala.collection.Searching.InsertionPoint&quot;&gt;InsertionPoint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1842bf080d41b8a1a6d4c6afb83566d67ce0591c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;searching%24%24insertionpoint&quot; id=&quot;scala.collection.Searching.InsertionPoint&quot; name=&quot;scala.collection.Searching.InsertionPoint&quot;&gt;InsertionPoint&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;searching%24%24insertionpoint&quot; id=&quot;scala.collection.Searching.InsertionPoint&quot; name=&quot;scala.collection.Searching.InsertionPoint&quot;&gt;InsertionPoint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e260719a3c63b3853839aadb9965447acd53f99a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;searching%24%24searchimpl&quot; id=&quot;scala.collection.Searching.SearchImpl&quot; name=&quot;scala.collection.Searching.SearchImpl&quot;&gt;SearchImpl&lt;/a&gt;[&lt;span name=&quot;scala.collection.Searching.SearchImpl.Repr&quot;&gt;Repr&lt;/span&gt;, &lt;span name=&quot;scala.collection.Searching.SearchImpl.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchimpl&quot; id=&quot;scala.collection.Searching.SearchImpl&quot; name=&quot;scala.collection.Searching.SearchImpl&quot;&gt;SearchImpl&lt;/a&gt;[&lt;span name=&quot;scala.collection.Searching.SearchImpl.Repr&quot;&gt;Repr&lt;/span&gt;, &lt;span name=&quot;scala.collection.Searching.SearchImpl.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d5abc1efe293c30bd7c1db4fd7ce0361317dc9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;searching%24%24searchimpl&quot; id=&quot;scala.collection.Searching.SearchImpl&quot; name=&quot;scala.collection.Searching.SearchImpl&quot;&gt;SearchImpl&lt;/a&gt;[&lt;span name=&quot;scala.collection.Searching.SearchImpl.Repr&quot;&gt;Repr&lt;/span&gt;, &lt;span name=&quot;scala.collection.Searching.SearchImpl.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchimpl&quot; id=&quot;scala.collection.Searching.SearchImpl&quot; name=&quot;scala.collection.Searching.SearchImpl&quot;&gt;SearchImpl&lt;/a&gt;[&lt;span name=&quot;scala.collection.Searching.SearchImpl.Repr&quot;&gt;Repr&lt;/span&gt;, &lt;span name=&quot;scala.collection.Searching.SearchImpl.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb685f91072a3f5fb840a3b4d78b225db36b77f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975b10518e5f8d19c42095b80b62ed0d34eef23a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae7381c9ca510795ab3794037fa686d5b22d6ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a1665755ce3b38a49fd9134da60d8add82bc5e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71314e734cac52453d30d14fd20701a8a9d8b4ae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b32a8a9a6b556ede2239c502595ca54080596b3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf59f04e621009aeb575a059c0aa81bf016324ff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88d07805eeb3acee2f9efd3cb5d595f4b1df55d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a3a1ef5acce21fc8d5826960c75b04a656ac4f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e5c017a28325e0977c072ebd809b7933d500ef" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ba0a8a292a63d970376cb549d135bafc999f8f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqfactory%24%24delegate&quot; id=&quot;scala.collection.SeqFactory.Delegate&quot; name=&quot;scala.collection.SeqFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24delegate&quot; id=&quot;scala.collection.SeqFactory.Delegate&quot; name=&quot;scala.collection.SeqFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b28645918f7426bfc024076c4ec7f6cdd04d6ee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqfactory%24%24delegate&quot; id=&quot;scala.collection.SeqFactory.Delegate&quot; name=&quot;scala.collection.SeqFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24delegate&quot; id=&quot;scala.collection.SeqFactory.Delegate&quot; name=&quot;scala.collection.SeqFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3b9d51bad8d3302bcf168ab9834c9b754a093a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4be32493a946bee529197ef7b3d47ed256bada" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ab37b4fa3445a755db2bf6a2cc71107ec9b048" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8840bb8170138e64628b18b0500ca8248163d58e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bbaf0bc989bdde21c18a0eb850fa575ceb45c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3c1dcf1d7a95502c1fb46a5bac1eb0216bc76a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029afc4feab18cf34a64dfa18b2fa5c656d61b8b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ed1b49ceb2bcf8d97398bccd2300cd5cf63066" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf796da5acc8aebc66fd17a6ce19f4cc1345988" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2f6d7f9828bb9f959a1900080a18cd00905bf4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb7af01d393f380a943844ca73ef0e92a906a13" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqops&quot; id=&quot;scala.collection.immutable.SeqOps&quot; name=&quot;scala.collection.immutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.immutable.SeqOps&quot; name=&quot;scala.collection.immutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e379410d5834709535b5bd655fd44e7106c664d4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqops&quot; id=&quot;scala.collection.immutable.SeqOps&quot; name=&quot;scala.collection.immutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.immutable.SeqOps&quot; name=&quot;scala.collection.immutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754d55ed9c9ea2cc81483667811a66138c42261e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqops&quot; id=&quot;scala.collection.mutable.SeqOps&quot; name=&quot;scala.collection.mutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.mutable.SeqOps&quot; name=&quot;scala.collection.mutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb3d43c14edee58fbd871cbea8373e7e64742a9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqops&quot; id=&quot;scala.collection.mutable.SeqOps&quot; name=&quot;scala.collection.mutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.mutable.SeqOps&quot; name=&quot;scala.collection.mutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec5d4f6c722f52f0ac2f89806cf8fd9255d8aa6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d3d7695b15fe2f0b9a0a4aebe0963e53e5e08d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aab0ef9c82af4df4d501f1fe01cc81eb4a567a8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24appended&quot; id=&quot;scala.collection.SeqView.Appended&quot; name=&quot;scala.collection.SeqView.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24appended&quot; id=&quot;scala.collection.SeqView.Appended&quot; name=&quot;scala.collection.SeqView.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f106f8f4dbc3c84cec8544fbe61aab14bbd695bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24appended&quot; id=&quot;scala.collection.SeqView.Appended&quot; name=&quot;scala.collection.SeqView.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24appended&quot; id=&quot;scala.collection.SeqView.Appended&quot; name=&quot;scala.collection.SeqView.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0641df14003c93dd10ef5b9fe508ff0249b500e8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24concat&quot; id=&quot;scala.collection.SeqView.Concat&quot; name=&quot;scala.collection.SeqView.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24concat&quot; id=&quot;scala.collection.SeqView.Concat&quot; name=&quot;scala.collection.SeqView.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8bc0484d2b993ece9c97e81868754a34e6cf08" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24concat&quot; id=&quot;scala.collection.SeqView.Concat&quot; name=&quot;scala.collection.SeqView.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24concat&quot; id=&quot;scala.collection.SeqView.Concat&quot; name=&quot;scala.collection.SeqView.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6fdf3abdbc75a33f6dd06ae1c3ac63fde0a5f1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24drop&quot; id=&quot;scala.collection.SeqView.Drop&quot; name=&quot;scala.collection.SeqView.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24drop&quot; id=&quot;scala.collection.SeqView.Drop&quot; name=&quot;scala.collection.SeqView.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfb3b9b395dd631ecef9a7b7b3198481f6da33c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24drop&quot; id=&quot;scala.collection.SeqView.Drop&quot; name=&quot;scala.collection.SeqView.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24drop&quot; id=&quot;scala.collection.SeqView.Drop&quot; name=&quot;scala.collection.SeqView.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08167c873ac2f6220cedacecb79fc4acb95e8ba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24dropright&quot; id=&quot;scala.collection.SeqView.DropRight&quot; name=&quot;scala.collection.SeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24dropright&quot; id=&quot;scala.collection.SeqView.DropRight&quot; name=&quot;scala.collection.SeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa85fe223bc338792b8ee7d486d3d9e829be7719" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24dropright&quot; id=&quot;scala.collection.SeqView.DropRight&quot; name=&quot;scala.collection.SeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24dropright&quot; id=&quot;scala.collection.SeqView.DropRight&quot; name=&quot;scala.collection.SeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c18048a54e11efd99dea6944ee2262cd240df0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24id&quot; id=&quot;scala.collection.SeqView.Id&quot; name=&quot;scala.collection.SeqView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24id&quot; id=&quot;scala.collection.SeqView.Id&quot; name=&quot;scala.collection.SeqView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d29770d1db364dc3c5f77ae0fe3c7f9ef46c11" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24id&quot; id=&quot;scala.collection.SeqView.Id&quot; name=&quot;scala.collection.SeqView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24id&quot; id=&quot;scala.collection.SeqView.Id&quot; name=&quot;scala.collection.SeqView.Id&quot;&gt;Id&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95b87edeadc860f1f3e6f7b43bedd48975769bb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24map&quot; id=&quot;scala.collection.SeqView.Map&quot; name=&quot;scala.collection.SeqView.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24map&quot; id=&quot;scala.collection.SeqView.Map&quot; name=&quot;scala.collection.SeqView.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3bc8941b1edeb472a8d96e43046b28bdaf7b88" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24map&quot; id=&quot;scala.collection.SeqView.Map&quot; name=&quot;scala.collection.SeqView.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24map&quot; id=&quot;scala.collection.SeqView.Map&quot; name=&quot;scala.collection.SeqView.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f21ea7b22d4e0e2188b039df9f79fc0664cc09" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24prepended&quot; id=&quot;scala.collection.SeqView.Prepended&quot; name=&quot;scala.collection.SeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24prepended&quot; id=&quot;scala.collection.SeqView.Prepended&quot; name=&quot;scala.collection.SeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcde1a6ebb9fdb1e6b04294e1302a15ccaac6bda" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24prepended&quot; id=&quot;scala.collection.SeqView.Prepended&quot; name=&quot;scala.collection.SeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24prepended&quot; id=&quot;scala.collection.SeqView.Prepended&quot; name=&quot;scala.collection.SeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc35f20fe9c5a9b15f421525986715656e717990" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24reverse&quot; id=&quot;scala.collection.SeqView.Reverse&quot; name=&quot;scala.collection.SeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24reverse&quot; id=&quot;scala.collection.SeqView.Reverse&quot; name=&quot;scala.collection.SeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020368cba55bb84171fe95d8eb649d0ca3962405" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24reverse&quot; id=&quot;scala.collection.SeqView.Reverse&quot; name=&quot;scala.collection.SeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24reverse&quot; id=&quot;scala.collection.SeqView.Reverse&quot; name=&quot;scala.collection.SeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ff7921b7fb2c502c4846a5d1f10513a3b3caac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24sorted&quot; id=&quot;scala.collection.SeqView.Sorted&quot; name=&quot;scala.collection.SeqView.Sorted&quot;&gt;Sorted&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Sorted.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24sorted&quot; id=&quot;scala.collection.SeqView.Sorted&quot; name=&quot;scala.collection.SeqView.Sorted&quot;&gt;Sorted&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Sorted.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2deafaeed21c61e6f7128d882cb16799b4821558" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24sorted&quot; id=&quot;scala.collection.SeqView.Sorted&quot; name=&quot;scala.collection.SeqView.Sorted&quot;&gt;Sorted&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Sorted.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24sorted&quot; id=&quot;scala.collection.SeqView.Sorted&quot; name=&quot;scala.collection.SeqView.Sorted&quot;&gt;Sorted&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Sorted.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9860844d1c8b8fd0437814d7980a5f1d98b2d20d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24take&quot; id=&quot;scala.collection.SeqView.Take&quot; name=&quot;scala.collection.SeqView.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24take&quot; id=&quot;scala.collection.SeqView.Take&quot; name=&quot;scala.collection.SeqView.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9c8de475546050006f5091da1ac50ce2350b9f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24take&quot; id=&quot;scala.collection.SeqView.Take&quot; name=&quot;scala.collection.SeqView.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24take&quot; id=&quot;scala.collection.SeqView.Take&quot; name=&quot;scala.collection.SeqView.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168aecc89d6f1ad7306b193557177728a1d83669" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24takeright&quot; id=&quot;scala.collection.SeqView.TakeRight&quot; name=&quot;scala.collection.SeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24takeright&quot; id=&quot;scala.collection.SeqView.TakeRight&quot; name=&quot;scala.collection.SeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd4b034c895db27ecd0517e8ae19bb828643af9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;seqview%24%24takeright&quot; id=&quot;scala.collection.SeqView.TakeRight&quot; name=&quot;scala.collection.SeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqview%24%24takeright&quot; id=&quot;scala.collection.SeqView.TakeRight&quot; name=&quot;scala.collection.SeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1741834a998cff42d1aa23d0c6adc3105b8f8adb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;serialversionuid&quot; id=&quot;scala.SerialVersionUID&quot; name=&quot;scala.SerialVersionUID&quot;&gt;SerialVersionUID&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;serialversionuid&quot; id=&quot;scala.SerialVersionUID&quot; name=&quot;scala.SerialVersionUID&quot;&gt;SerialVersionUID&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a96e7721ff53cc168acb9bfe25f0af2ebf192a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;serialversionuid&quot; id=&quot;scala.SerialVersionUID&quot; name=&quot;scala.SerialVersionUID&quot;&gt;SerialVersionUID&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;serialversionuid&quot; id=&quot;scala.SerialVersionUID&quot; name=&quot;scala.SerialVersionUID&quot;&gt;SerialVersionUID&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e157bd7c9fbd7e4324294de03b87a7b144067992" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb256cd7b3ca338d2dd81cbc0eb48bfc15f8294" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420ceeebc4d75a0e0174762910e6b547e57e7809" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd35cabc26308db3ea09fc203cecd7efc054853f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d7bbae5bedbbe5a61da2271924a67f9cf5b10f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475ef0c2dbb51a75391e683c45a76ed30c693f8e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f642db7f69f825b85fff215e6cef1938468a0773" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set%24%24set1&quot; id=&quot;scala.collection.immutable.Set.Set1&quot; name=&quot;scala.collection.immutable.Set.Set1&quot;&gt;Set1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set1&quot; id=&quot;scala.collection.immutable.Set.Set1&quot; name=&quot;scala.collection.immutable.Set.Set1&quot;&gt;Set1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea3435a517b476b8b10d249a8faa5e1c57578dc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set%24%24set1&quot; id=&quot;scala.collection.immutable.Set.Set1&quot; name=&quot;scala.collection.immutable.Set.Set1&quot;&gt;Set1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set1&quot; id=&quot;scala.collection.immutable.Set.Set1&quot; name=&quot;scala.collection.immutable.Set.Set1&quot;&gt;Set1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd59dc8705002791e414333ff7d252f2c3ab017f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set%24%24set2&quot; id=&quot;scala.collection.immutable.Set.Set2&quot; name=&quot;scala.collection.immutable.Set.Set2&quot;&gt;Set2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set2&quot; id=&quot;scala.collection.immutable.Set.Set2&quot; name=&quot;scala.collection.immutable.Set.Set2&quot;&gt;Set2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0f2dbb15722f1161d797eca2ccfbfa569d0592" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set%24%24set2&quot; id=&quot;scala.collection.immutable.Set.Set2&quot; name=&quot;scala.collection.immutable.Set.Set2&quot;&gt;Set2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set2&quot; id=&quot;scala.collection.immutable.Set.Set2&quot; name=&quot;scala.collection.immutable.Set.Set2&quot;&gt;Set2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a3bcdf57a3fbb969d0f78172d8ebe67ecefd26" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set%24%24set3&quot; id=&quot;scala.collection.immutable.Set.Set3&quot; name=&quot;scala.collection.immutable.Set.Set3&quot;&gt;Set3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set3&quot; id=&quot;scala.collection.immutable.Set.Set3&quot; name=&quot;scala.collection.immutable.Set.Set3&quot;&gt;Set3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebf27b748adbebf34213718b8020ceb6595faf2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set%24%24set3&quot; id=&quot;scala.collection.immutable.Set.Set3&quot; name=&quot;scala.collection.immutable.Set.Set3&quot;&gt;Set3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set3&quot; id=&quot;scala.collection.immutable.Set.Set3&quot; name=&quot;scala.collection.immutable.Set.Set3&quot;&gt;Set3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
