<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="383a417e717ed0f2f0208b5b8a8a726483c55498" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a8a9f340217606724ab62d029e7a77d80c69c4" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ca9542083991e5d066c16e45a1fb6bcf2fa745" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abbe2544776965297c8d1cfda61331bdeeefe8f" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a251dd5c883b1e5e21e73454b8e141d1a64060" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d0f215ea5204da91c928fbc534743952b1ea13" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d0e2faad34963219c61b81be63831569a23379" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7642546a30938590040a9455a5ace2d547d6b40a" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b579a8f1b51b530f2dded60f822305baa86643" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6beb1a0e5c036ce8ee0ba31aaf4d0ae9d88c6f" translate="yes" xml:space="preserve">
          <source>def versionMsg: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c163a107fb42031dc419a52298ef3b7c4a38b656" translate="yes" xml:space="preserve">
          <source>def versionNumberString: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b07c8c9599f1d769349236ba8782f62d03952b2" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../collection/mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7ca75831ae08111bee5e029e136624def3b609" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../collection/seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8111ef6c8379ae57705d514e072313b77f1c5312" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../collection/seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae7904346bf1d62cf241cdef027be5f42c1366d" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../collection/seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07608bf5a1f000d8557ca83f6e975b508328c73" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../collection/seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3212e2c7a7c68a2aec120daafa6aa6406aead0f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../collection/seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b7202f3b2e480292b15cb91e8ff107e6f80290" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0905b0e77bbd32f19bc51ec77ffd2a83833f65" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ed86d1e7b499c6d1f6c9fb7b2d57a39bac4186" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903a22d53db4142cd9ecf11b6ec1ea3b641d5a28" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7927585b0f2c4b916e6aab2a4f20855eace4c2" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ab912397b8351f32fd014b4867d526288792c2" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb0c5119bd3195f3cd046687f7f31fbb6f95f80" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90492d3855ac0d7ce20442cfc9c9b1ffc4391b7f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364818a0e3f566675b6ae25f06ef923cc5c7a82c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49f7868f73e918dd099708dfc0aa43f24aa0a86" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b837f530339c3cfc430b5ab2378ca3b1727d3e9b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d85dcd90100141d37826b30ce24dae7bd7483ed" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f30629ac606eef3a5f4362d4162eb9d8619a914" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1030161b53ab4f297f5829e90ffb68edaa7747d4" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23976ca23ca12b6728e181d14e53d6be836206f9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafe2181a07dd755c7b291e7cf4ae9e38e0c90db" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01585f00969dd857c4cee455e390a61b3b803c99" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa2bc0763515744ecdc128007c18f8ee99b80bc" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ac1d12921f568c6f974df12978778fdc8f0372" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69b90898deb6aba6a3387be0473dfdf919989e3" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7601de00c3e3f184ecc123aacb8a1418b5a59e05" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67befe3854cdbe3cbd71f5eb72062c38cf7b7b9b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd06ed39634f995ea9ab48bc8109f5f998f3666" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd7ad14ada4fea3b49919c2ee831d2faf1f3615" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c353ba5b93b7afb9d8d0cf44c4800bbf6068192" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c912aedbc7e5e1e414b3ff7e0d1024f8430bcc29" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccea727492cf4e6de49ac028fafedac2f65dff9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f46e170ed9abd95a322be6526445425e86cbe9e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb8893fb3e6912484e67bf87ef7a5f3f99ddfbb" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6dd39e964db3d7036e4a693258c3c0d10f058ca" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d6d6b4756e664e92257c48be9b81341ac13217" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3236d83f3acb82f0d20999924afc24fe63f40dc3" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b0012b61072d15c8c8c7d16958e61263b16c4b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a764b73efe36e0731744fd7d736aae1e58a62d" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7630ec5deb003a5a0eb00b16cb03f9ad227386" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa01fadaed8e702d8c89f29f2119b13fb0c26afb" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb027ffca666733dc961f4a36ccfb049984f624" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff1b76740e00209bf4917c1b15fac50f1e432ed" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b2581760ca4073b6f0a1d368b0f68d23c515a1" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c91409fd9815ebeae134cfc2a8129a240a2d2f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e28c3f8318073633f9c4cb1f5800ea7897de848" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f52451e20057749bd1d3fdc115f26fb54dbdbb7" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4bc1a683cb8d5cf6f30c7f846fa143166d631a" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d119370d6131a8118b05436fa4d51e2a672a7655" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c54edf38b189f74273f60ef271ec9f7740c740" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2ec1dc94f21f511b070944c09f5b1dd821c478" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad608ce2aff12c637d24d8df2433868e9c0e62cf" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec03bce0ab295af1e7fe0ade1b5764b0d3bb4ec7" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4eca8ef4e20b830f0631e0a77fe4888f4817c88" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5d658e1e3dfe41d4e971b560e4f8594a61e50b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b5d40b67b298f61e59f190a2aab1babb066ddd" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48463c4da667834d7a8714d95e891d01b5db4bd" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23517a5534ae3e476a6daa45bbdde98e20a18be7" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49c14fa31f20affc645e6e28dd1735b92b8f37c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cc23ba0ca077809afc6d85114258ea83a3f3f2" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe179ab08470bd7e622af4044aabca35d3c7a81" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7db118beea6ad488b645b6a297961967e14c61" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea8a60360915b112af4c15e19a451ae117d0ac4" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cadf32d797f9b11017281df4cbc55de3730dc85" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de8816269a266b304c92c1753826132f1730fef" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cb28e77fc962391e81a688a8b7b2154b8cde62" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27b086e18b2a19c5f6be04f96509cd839221132" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7c2d2514ac5a3ed4786a3c10ad1c1598cd1bb6" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54318a7f774e3412e1841326559b6275ab87d452" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79500a679d7d71c45880387e3c4d1ddb0e1ac59" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5028140a7fe3547b5807ffbeceb6437794502220" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218b36cf4d8fe7de5ab7cc27633388647c03eae5" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35d633a4d2a26853b921a0ce18b87bbf61c4f62" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586646882a68c181ff31abde025c10ff47dd4c5c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abe8f96b6dc2fea3a8982b576df0f8978caf1b6" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b0441195a167945c15eef3a510bbd9a0ee90a3" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ad8d6239a00db85a84723324f53c438d08be5f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4367d4c8ae937b360da9a68e7ca90c25d5f69785" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1feadf5a6ef9f47f2a96ec4e2b9d93f1167b0c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9def9bc1d14940289ba9f9101cd652b0295c6ca9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2eb0a32743873044857512d984b0c9abeee9dd6" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffef1cd0be077166185768f28f52902507ddf15" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c36eeb5c0627327ab9120a22e022ca4a12fc60" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2b7e9485f463ca4ea7adf97b4a22d6d9d2092e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb3c21a04549586012748af02a8d201db8da4f8" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fff86d107e8226836d27894e244b66055497cb" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbaa5185df50ed38e551fc89f560bdbbdea26ed" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617c3b0045cbe8780d5063c8ab58a7d6593506f0" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188b48abbe6af2b8e7b3d94a42d977e2c680a00f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89351ff870af58a49a2587ec00785b12f5ee7905" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004050d21796021d35fc15b7f630f1818061b1f8" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e82edd629e666674e537e51361eba3d24eae881" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b896afc4dd4c38f6e6dba902ee4fffe40f184f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386c434a9be8b4402b1dcfd9617abdb3668602e2" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bb7d5daabd10df4f222f80f974506f773b2a00" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83bf39887d4804f20cb5b87b69c3de764e6f881" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8fc962844fbf47903fb1402abfba42c97c832e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f513f476419d152f28fb83d89cf151183ad3dd2b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3985a0d4c933ce4ab407fce1212dc04ea2823d31" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598f06d28ef2c47e09a4eb617868a324a5ac234d" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaafea22e1a836be4baa9185f0b362641b2d3223" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc06f384fc6a08e643b942a13a8056ce3a960ef" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00defc7e798d73f07c167c9a9f5099581162e89" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce335478ab10d7070daa38eb877fc939f55c342d" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e42a1525f7e30ac84aa2b63880c9c81d96d38d" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3a672c0b1764cb59d6b490af9ef038634b93d7" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4abbdf6246094b92486ebe4160611647c33109c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f78b7f31316ccca1c9c44d321a4b05a884829a" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a702782bdd6fc2c45bb4e0503baf018a13e0d5" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4da49a8462426f49aa98521a0736fc5ae72b66" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df026eb8c5326dc3b8a6ad8f6dc54feb340ea987" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857050a5d87a81dffd2bba5a93df8f090422b09c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2885e6402a4e83c6074f259265a38fd2a1392ed5" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab7e6f0ec71997c08cba963c78b3cf981bf03d6" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4024efaed09cf2c07712d6d1b492684dc7be6fea" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7062ea88c5e0eb72cdbe8ae4f656f05139945cf" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30340729380f0332740477d3305518d03796c34" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b571a6f014d3cee59d0510239f21326254202b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885832d30b85f1fa9fad60b5e714ce2b8672c4d2" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b34a9b81adf33606d43807fd38d526ff57d02ee" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9e803ee07c02d9373f260d6163fb50f51cd115" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4600486660ad23075f7f8c4fc4eb061e21ff42" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67538fb27d2de321de49bd41d1f12437c698160b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15d4c61267b179bfda4f08ddbbf40afcbc77b84" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;arraybufferview&quot; id=&quot;scala.collection.mutable.ArrayBufferView&quot; name=&quot;scala.collection.mutable.ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17cf3f927d39b7d8874b72c4202699f54ac40aee" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;collection/indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3deeff8c59065c05557179d3743ee2868ad86c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;collection/view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8979b709649869528af1afb4babada5e2f06bf" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;collection/view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6573f3e2916aa1b8790d54f10daad58227c96a9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;collection/view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd3052f6ba6e8a1094df8873ea2c1afd63160d3" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;index#StringView=scala.collection.StringView&quot; id=&quot;scala.collection.immutable.StringView&quot; name=&quot;scala.collection.immutable.StringView&quot;&gt;StringView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba1b88bc6028ce52d6e9efacc72ab4bc251f9e0" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24f5d2be1d04c70bd31f58ed1bd89ab39bef2dd" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7c3f180ab5d71e288cd23e3b998911ad323683" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7999fc65d605e4674d4d96ac6c37c832f45555" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36620c94a0b302b12970e059c317a9dcd20d9253" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f4b7ee50f598f8889ec52eeefcc9a0c8575b8c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186c3f105866ea2d42d3861df8492dd80ae1f740" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6fdb337fb1294cf399016664d71541c74454fe" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fd6396a07073b28f75f262754171fda2c163f9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2657da34a9875308199cb05a9d10f409cbdced" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc67372f55e8ee3cd602c29adac02cd04e7ad08" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139e8119fa85169c6e6ed35adbd329c6d92c1f1f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1daf826391a9dbcd258f578426badd007bd77584" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c247bdea445ba698bd3a98df67241aa84faa03" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a618de09fa75ca9f22a5d406ad26d514246ab2" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b4a25e0e205653d6bb330e4923823a9b6e9a66" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06426e3ad3cee5a098361134ff41eae2564417f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df671d33d85abd1209a2123385afaa98d365eeef" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a9ae314e07ffae0f80d394d05ad4f109cc9677" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06c45695132480b6fd39d9616a91c7668501ce0" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a84c11ad2c5392cd6e16f93bf0482ec21645d3" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac267c91a30603bf281ae03b85743871d0f28d3f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2394c665354b3d34593d371626e6034e42857d" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39049b59d5de2df2c6985742d78b22e30e75a5d8" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cebb123035f985a68e37ac6fbe3a720473fbc0" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56923b2fdea9426b2c8a5ee6603431cbf5287d3a" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c641ecddc4ff2b73b2d140a0c323a537890e0f2" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af40e75ed7f187457e0e7e2cef41300a089fa784" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39d185029de5ff0633c289f98df3db75a7214af" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d7522b821d65ac9d6f616401784ad8bd2855b9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69234dd14386586084af91c91c61e73e43921918" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715c1bfff612b78a00ced4a3eb88bc5f3c3e6a3d" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ac0f903dadeb73128786345375b4cc9f8237cd" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124ca6c155ef35c824d27f983fe45ee5df39f6b1" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2a27e63ce2122f9bbd3c022b97ca7533251743" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41230db1c31e58fc12e7cdef19af1a0eeb26d16c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5399081004dfccb547739e3563c4c2a6f575586" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e558c18b4aa93ca99fd2ab330f3d5d0343224a0b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692aad0be2a1bbc1569a3a37971010d99dfc786e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4af1621afecf3a3d3b769a006e10fcaa03a768e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3330144c48171429445c16223ed32386894675" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1968b9a0b1b24a733337c995718a808873f2890" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d43fd58d6beedcdcd2cb0bbdcf9a2d212dbc779" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7aee5ae5269d8b03404c6bb4ee42784e2df97e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2837abf41bb15949a035348559019c9d1bd63a" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c1f00160dfc187133e8271bf48d7e04602c3d4" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b68298b25245835ed7345b3f89db941a2e893e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29784b82bcce36b383cfae56166fb203fe9fe9b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d4aabe04f487ece64787a0e8986cc75c49646f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1915e5c99bf9e5db9ce84eb39d9fe1283a44b52" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce82f797c7828a09bf3a15255509dd173d70ba39" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e555f69db55ee5d96116f351236987fe99ae4654" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0309472a0eec011c677a66c1da57a5e416e4673" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c78f62789acd801b0233b598feaf2662fe6948e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a23a82aeb63980db592a2f2543eacf90010fae" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7dbe51925d0ccb26ced736c49c0132e3eec6c38" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2840e0d55c2701ea26ad073412d63516a178f897" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5aa34c7bb10989c538902e3d0edf45bb159a590" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fc5f3c63c81d19d15472127cbcbfb8728ba12b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935438352eff965b1389d40e08b29c2f2a791905" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3388d9c367e79bfb25c64c7df76b858c5cac9b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d711fac5d93acb0dd9e646703554018e43dd8e05" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6952caef4c2574b98d0ff4011ac75334567ac65" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf4ad0206ddfe53b04321959990a45a896f58d9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e680f353cd9b777da17b602ec6bb0ef73f5f7448" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575a7e5eac7b6314996aacdae3d07e682050a8b6" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae312eb5158dce819501575123a5a8161204750" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a021b6de2dc2cb5ff8523b720193d513b9870749" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25dbb55988608a3000954826caa3c383c849937e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5303979de9fa07995d2ab6ac3db202f723a2aa74" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b4fee3e9dc0092299d06dc1ae375cb2ae65cf8" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04c394777e64da54f1375bbb27cbe9bbe19b53a" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d135583946143b0d556a9f1eaaa52794cc6000c9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21614cd643a27fb674a74cb8ec8afc0d5a70c9d4" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8f1bd263d90b04b9b8e12d48b5dcfd8ca11d25" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4636e9a7a5a7cf083cd29bd1f3a4863df5323eb4" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0244b7cc4081e3d5854125a3c586cf517381914d" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ace74bd5e7de2170c0118c31860dbd5c0494981" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c6692d66e97b9c5e4f1fbbbcee7a89299820cd" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b266510743fb4c686b1f3afadcce03165b5fe7a" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d379d5dc5e211f149045628d75d0ee513573a93" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e669f15dd40364b6d277898fd35b97921cb8ca6" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce2ffc25737b0a3bdd11e03180e0275f6621e38" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933bd6fe56d629afe80f519747f5caa4bea82b08" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da0ece0a2a14e31ea4d8618189686dc5fb61fd9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2d60ea98a712c0a0861d7553aa4ea0f07232c7" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d61b6d5438ef0ccd360d5e54cc2c37a41f7c73e" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56eec96682406516745e548952633f026956f279" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b45fe461e4d8dc8fe1e801341eb144b1862b57" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6978cb245cadc1b145236849221134b653c41497" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f229190b6356dcd378af3692bf3491e713e5aa68" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ec705fa6949a68b7ccaad9b7d2066855a7be8d" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412b8618000d5d7b4efcc2c800ef32ecb38e39b9" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3679bca0956c33262c20cae909d426afe5ab3bab" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f562883306b54adc895fed50504df0bd550f54f" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacdee7fc8513c050e6dbcc43434cb1dba86b054" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16de922a3b9a439ce7cb5b910149150c6eb7954a" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7774350c73c014b88029f920b15f0af6fd9bd2d6" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25294b5573cc1c94b9d10bdbf489d76b54cbba0c" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4aa8f79611204d3e6c17ddabf937505add19e9b" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d24f3c47f210d8685943ba2a40702a50879b26" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fa8144cb51520705d89dc56a1c780347d0d556" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd176dff2d2073b457b6d773a1605add75edebb6" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830d9fad259696410da514ff2e8d97890891b4b3" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668cc5e852ed54d85f44bcb212ce088846d0bb1a" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdc621776d84a5cd03aeafe1c26195375fc6490" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae73c63f274dc0bf6d4bbd0e025829e233065f0" translate="yes" xml:space="preserve">
          <source>def view: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fa3139e43172167b0e3ebab81b71a7b6abd246" translate="yes" xml:space="preserve">
          <source>def when[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;a&quot;&gt;a: =&amp;gt; &lt;span name=&quot;scala.Option.when.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.when.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec560c79eb67c0950c192acfc1179ba3f21b420d" translate="yes" xml:space="preserve">
          <source>def wildcardType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;lowerBound&quot;&gt;lowerBound: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;upperBound&quot;&gt;upperBound: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.wildcardType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ab87fc4adfad6a07d69d63ecbad5c3ad84946e" translate="yes" xml:space="preserve">
          <source>def wildcardType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;lowerBound&quot;&gt;lowerBound: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;upperBound&quot;&gt;upperBound: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ManifestFactory.wildcardType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae02b7400d4bbdc7398458b3dbf978cc32aeb2e3" translate="yes" xml:space="preserve">
          <source>def withApply[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.Catch.withApply.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.withApply.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef6a46da3ee564d363007719c1624687a7c0167" translate="yes" xml:space="preserve">
          <source>def withClose(&lt;span name=&quot;f&quot;&gt;f: () =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6a066d18cf2d283bc59fb60bd6066970db1286" translate="yes" xml:space="preserve">
          <source>def withClose(&lt;span name=&quot;f&quot;&gt;f: () =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557966ec4cf94bbaa5b9dec4982a748757a4c8c3" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f2dcc759dff18f5836b0e3990dc31f6fb96530" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c4b5f319dcbf293fabef6c3f17648cf557e3dc" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92393e8094e81664ce2cdd3bd5012bd2d5c1868" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a12a984d5363e1d0eeb636e2835652a99df8542" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29562964f272c7b8f664cc9a3a572c24a0eb1255" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f787a81bae27e2874c1929c45af381e5cc5e7a5e" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94cac51565ea0c3c14032cdb2e50d90d80ba87a6" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd69b030167c6e78e944884fd4a48cb42772cbfe" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d929d49595f84086c55a896d7456100df69ac5" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96774411af4d20e0738f80eb2d0da0da3697afde" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719b910cf3b9e54140f4d9e9d96bfbb6199f5352" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01097879933f22698aaeb6c131d39576ba39a7b" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42f24cecd5da62ec5fc1459c9cb75ba9ee746a0" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a084c4bf703b5bb7ce275a314a6de4e7b613b09b" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f16ac820b3a8d139728c477013d543dd637b9ef" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e9d1bbdb04bef6080fe55f3504083754ddff91" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba34d268f6d323a376c710d5e9f820ba6e823ff" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9acbbbc69da8a9115c518d9fdfe8d7af6441ad4" translate="yes" xml:space="preserve">
          <source>def withDefault(&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e21da0054ce198cd36e29d62b3d6309bf354426" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a65130fd4d739513d4dd17263baef77778e3f5e" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0057fd87aa1300113f665442678446d7076be85" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ceb05b2a8b81c97f71eabcfec1f2765b60518fb" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adf8f76b28fc2e1914a8739ec72481cdd5ab92c" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8d7dcaf39fc59eb60b5b69a2f4bea9f2ef458a" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b039f0fc526fd14dae4292151f096a1e54ea19d8" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d50e66acbe7d89b40abf26838e47f71ba56c74" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada2b8a2a2e72196423a13a9579caa41ff1a88d4" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc72b71bbe53eb2ec8b034f202f5b53e5405d54" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09af0767d34a2f04ce8324a4763b5277f3b2ef56" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0babb8524431d676469054d5b6cf87407a7bf1" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e1e275a544607a55162840eb4e6b7aed1931c8" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc4a90a520f0d24e8f4328d175426726165505a" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4028104e40fe3940e571aef15c0209d2d54a99f4" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6360db876b3bbbab1e06789c8b0d20c7cb977a40" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa70bafe4e2a25bbbc6182304f1338a6417baf6" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc81f7cc5f349ca4f0abde9a501dd698c0431f03" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0789a74de04fb7ed19ca07174978f90dbb4ee1" translate="yes" xml:space="preserve">
          <source>def withDefaultValue(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c763f3d3e19c74854883314aa3d030274253e6" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d0a588cfb28fa7266adfe66d08401e4d29f3d8" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbabf6850537a80d385ac3b41d6dd036a19761f" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1537a9bc487dcc8c0b977638c0c4ba2dbe7a66eb" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24241c54294c1bb4a81f52bd7a5badc8fa7009e" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1655e6442cc5bcce9fc2d4a34b501fdc64cc26" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020956e1ac0988516cf01786bb754866dc0f8b8f" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27c70ffbd50e059fa2fe91bf94c18af78d4d232" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1b1c7d99f21f687a550208817f709e0bde372b" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff41b07cd04983cf82477ef909a0c5422536c97" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a758ad919b16c94654304726679fef4b2f5b48b9" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3accc5543ccf02ccf9c870180851745fca9f42f5" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8cb7b0d10aa3c8232d142ebd6bed599e1b6bda" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805caeea72011315e47ba8332c703d4599aec316" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece7b01e6f4bb1c581a12e123120062b69318841" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c5201d24bc9bd7d5e5338e709565720b97bef3" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f062a26f60c2be2a75761229c57adb425255ea55" translate="yes" xml:space="preserve">
          <source>def withDefaultValue[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;scala.collection.immutable.VectorMap.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.withDefaultValue.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede57c9340e6f60ba47c7e08766758873d7dc27a" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;K&quot;&gt;K &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.withDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.AnyRefMap.withDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.withDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.withDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5707c72ca987b23b3d0fa267d5ded551778f4709" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;default&quot;&gt;default: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.LongMap.withDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.withDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f811739130c1987e448c7d22c48ac4bbd1b356" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2976079c9d9ddf6882bfb7b684a38edc6a5bee6" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2591d7135fc0ca1473016cbc5c87c5b08340a878" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba597eccd104b52997a810e386e7fa68d2a20ae" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050d60f1aa41c5980a9d27ed2b4da70517f901ff" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b807458d0ac797d23ec4d7227d90d21242853871" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99fae5d514755744e972700c4b3f9d80f7c9c8c" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a314a1d1b6d1c2382d4c56c239cfcdef691f9b2c" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa217f04b8332a1b2580935a68d976945d64bf4" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2391cfd550bd7f917a3ae415e009a04e90c3a370" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4365f39fe49a6edb70c3f3507932229baf6d0ef" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a55f7322af3b9a36cec551d9c083c8a15dded7" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5c6e89f356958ccf0da3506ba69f795a66b1c4" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c9f890d6eddfe518339c4c0cf62da483fd1052" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb25e98bbbca5469c70b96cd0d8fe2f15080bdd" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bd18d31c14e04b2af2a844190cfb8235403a01" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770227c848f69dbf67a65291e71de08437445f18" translate="yes" xml:space="preserve">
          <source>def withDefault[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.VectorMap.withDefault.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.withDefault.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b20b0786f120ec325047f5578d7254f98ad892" translate="yes" xml:space="preserve">
          <source>def withDesc(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a220bb140307f1ee096a9779f40e57326d3106dd" translate="yes" xml:space="preserve">
          <source>def withDesc(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24described&quot; id=&quot;scala.util.control.Exception.Described&quot; name=&quot;scala.util.control.Exception.Described&quot;&gt;Described&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85998bd6a3f199e872d60533de0b15f754c8e6d1" translate="yes" xml:space="preserve">
          <source>def withDesc(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finally&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c533344c1f2c199bbd79d18df76f63d01925796" translate="yes" xml:space="preserve">
          <source>def withDescription(&lt;span name=&quot;text&quot;&gt;text: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6e83a463517ab26001534714f2ded6e928fb11" translate="yes" xml:space="preserve">
          <source>def withDescription(&lt;span name=&quot;text&quot;&gt;text: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbe525a67a353a6ee93b7c566c003afb0ee2042" translate="yes" xml:space="preserve">
          <source>def withErr[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;err&quot;&gt;err: &lt;span name=&quot;java.io.OutputStream&quot;&gt;OutputStream&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;thunk&quot;&gt;thunk: =&amp;gt; &lt;span name=&quot;scala.Console.withErr.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Console.withErr.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c38479b8531d7cf172652a7039df3471103538" translate="yes" xml:space="preserve">
          <source>def withErr[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;err&quot;&gt;err: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;thunk&quot;&gt;thunk: =&amp;gt; &lt;span name=&quot;scala.Console.withErr.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Console.withErr.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c9f9fc1cb8de280f8b2003741d322fa2cec6a9" translate="yes" xml:space="preserve">
          <source>def withError(&lt;span name=&quot;process&quot;&gt;process: (&lt;span name=&quot;scala.sys.process.processInternal.InputStream&quot;&gt;InputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f520a1d93d2d94e0406131e3a08e64d6cb93b37e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca314788868f69cf37b3847704f8fef57cfae07" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, [x]&lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f4e6d8c3be3397fbe51629ed776954dce382ad" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9658ec5f738af8fea1a692c20a0ac8dba8a7e68" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;, [X, Y]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.Y&quot;&gt;Y&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6863ad9ee52b72178f41257e7b3a1d1a6707af0" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8526b5dbda1589f6f40126988a3bd6cffcba78d3" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;), [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0933ee1a1aa849d544eefd1f1139cae7147deee4" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;), [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384eeb5a48bd1dbf10d7780622637c54d3358bb1" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;), [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ebc2194caff391bc5a03c7496615fe86ecdebd" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea324b626fea94642367d79f7a15e4a980633f92" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50cd0ad65398d076cdafce47bd155495fd75e3b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ba141ade89dbc7f6a34a81a8d87017e8c9d149" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;, [X, Y]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.Y&quot;&gt;Y&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5809a416d5ecaf09c4d0933fbfce90b959875508" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;, [X, Y]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.Y&quot;&gt;Y&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd5979da750fb8ded6a2e67612c58e630893b8e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;, [X, Y]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.Y&quot;&gt;Y&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f823a04e2e3f7028bb143d57e29fb57fddbed190" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;, [X, Y]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.Y&quot;&gt;Y&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4981febed83c70e4facc9636e9e8281681e2bf" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;, [X, Y]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.Y&quot;&gt;Y&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fa57c7493dca859e6778d5a5c41ab34d8357e8" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;, [X, Y]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.&amp;lt;refinement&amp;gt;.l.&amp;lt;local l&amp;gt;.Y&quot;&gt;Y&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac68f7ec1911cb2c55ec6a6782b24a8eccd1c00a" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;, [x, y]&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960430bb5927a28f2db501fc4d2fd88f9c745ace" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;SortedMapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;, &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210367c65be5c5d5559aefddef11e8751e82f09b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;SortedMapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a78f51980f45c8b3687a4394769e3dadedd783f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c108f4c5d057d1356ea52d0d599517b3dc461e1e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfc42308e8e77c9ec354a53128e789ffadd1995" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422dfee53a125dd593f8c60a3c8703d340ee5346" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;), [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10ca05061a58e0e22184a49efcffa8a2b87b63e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;), [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bba0329c9016e023eb9c83c48498d95222491d" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;), [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8967c11155c445aac9cac64e283fc80dce97f3" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d377b98a2719df4fa700e3d714d7368e887861ff" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2d7b71e5e34c9b041e0f294bf2b4c5ce54d0f0" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bd5e14da0a52dffbe676caa165ede1676a8fd8" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4913ffa841e55883c31a576555fc97c33e54a0fd" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4aa56216dac31f728b5f13e3b9d60a44836094c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c31cefc537740c57d69894058811a814695720" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc7cd1cf8431a4aa8eee179b82345a3b0f92eae" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13576d453ca033c71efaabd881d1065a12c6951" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6192a2a118b69977573b1e8e50d3866270ccd4e3" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5130df94cf95f8948cdbf14e7cfc179aa308c5b1" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51304dc5336706f081d86404a07a353ad886d2d" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a1efa0f32474aa43cabd25344b9f0463195fc5" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f926b269f0bea929ee2a3fcad189f1f214d910b8" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07fb69a024d544a8643b08e01d8739daffe30de" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f82c8ab837edb6ba0e06b603f012fa38cdf3b0f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;SortedMapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.y&quot;&gt;y&lt;/span&gt;], [x, y]&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8dcba1d4b7d5746427fb303ed855acbc05c622" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;SortedMapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.y&quot;&gt;y&lt;/span&gt;], [x, y]&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7068baac98e8789e79f01d95cc49d7ea3cb29930" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d685bff716b93efd47ab82f090cf2d1057404f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef4a769503b2672b9d216888766a74e8729911f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a74100ccc6bef6bed5e7be1f8e70a42e149b26" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;SortedMapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.y&quot;&gt;y&lt;/span&gt;], [x, y]&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0536bfd43284e4ff0e455f673dab93c45928f1" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979fe5846037277a20b362d45b18c2485e526593" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e42007c31bad7367c2a0908897130c7024cd09a" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78a3a17c36d3300e4dde806b456f06e78c916fa" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefb170ea5a4e62bb7d1db572bbaa766956280b6" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245e6f45e953ce1659ecc082a1c757c0e89f629c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08e0336c6d5e8e0762651415b18218579214347" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ddf49c16a18c7ec7d687e98d5e435e5f62979e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847a563940bb428eb18f2d993a0fa6487903ced5" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b8dd54d55f51305177e81ce4c56c9613e503a1" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765dcfa7ed163726a583ce4c3070183a52ab0738" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e115bf8eec334ce12cf65c53889928965e7039" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;], [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5ecc650f733cd2f71c921db6488ec0dc0bf577" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11eb4fd06d16dbce38cf03eb595b247c49ee81d" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c28f99eee64a98000ccad209c5db347e47e044" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;SortedMapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.y&quot;&gt;y&lt;/span&gt;], [x, y]&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edabfe6feb2e784f06eebcdc21880c2ff3d81ff8" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;SortedMapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.y&quot;&gt;y&lt;/span&gt;], [x, y]&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025c0bad0a25ec0e034854780bebd8571bc833f2" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eaaca211583a9371cbbce5e33336a27e1a9165" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;SortedMapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC.y&quot;&gt;y&lt;/span&gt;], [x, y]&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37da6e353e863dfdf5bd316a298055a5f44ef8f1" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;MapOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;, [x]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [x, y]&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.x&quot;&gt;x&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC.y&quot;&gt;y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b0707fd282f411b77ce9cb4bcc5b180903160d" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bc60192a213d146f5ab2ee80809e193481e8a4" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb63026464023a7a6b695cf28a1f9893a4ff817" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a10a809b4f128fa963a48e409816bbb371edc1" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7001386ccf54bc40fcf8b16a950e50f599bdc244" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3d783141f5b37a93a8111479e078fdf35023af" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8b536f707c4c76b37bef8c0ad1b0cfd51849ed" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, [_]&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7972a77b3e79b0b2d2625b7fbb219c4be0ca67c5" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, [_]&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405c886992397e49321a622b2716dd9c25a1a31c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c340f2ee94b1a64d79a8dfc0c430ca1a7e46ec89" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4deb0ab186f1e08190bf2144c27411966c2735f4" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c008f15bce550a4413b6d66d169abb5350254b0b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024f1c784551c424a5f1114a6d06abf38d252491" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, [x]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [X]&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC.X&quot;&gt;X&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d012f0a70b771a4a5e20c57a27787c6be73844c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, [x]&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [X]&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC.X&quot;&gt;X&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f53cd824921bcc28cf830b56487ca41067dfb12" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f714bd29870a2b9fc6ecffbdc13bb8fd7700e05" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443d8b46813bb16311b74a05a383a73349093a55" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, [_]&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562c95527f2038122199a31be9538eb308b8bf56" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45945c552505776e71e6cb1dba984f9a9316e6e0" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7c0a43bb5b6bfefe69b27e70b2c174877d6d1c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, [_]&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1296966ef592ae66fbf5b233d806e282a8aa79b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e82f59458178d19a3fa148150092c01618b92e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3a1d09b68e5d6fe90899ac3e8ef15c3cf70046" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9d60424165e28cf8b13cbd75989d0042969067" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a16ff3fbc1b7611a28a7b8205ec7f40301ad07" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1326bf05b4aee3f684caf3369c8b04cece79e29" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117fc68e11766beb0080ec0b96aefbd0b48827ee" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringops%24%24withfilter&quot; id=&quot;scala.collection.StringOps.WithFilter&quot; name=&quot;scala.collection.StringOps.WithFilter&quot;&gt;StringOps.WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23a702f1801b25408c50f867b61f876eff43c31" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a97adba183e52286daa7d2f41ede015239ee398" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, [_]&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b988acb314f9525ffd2ec355221c5c7ff951e98" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, [_]&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd0e8c8fe125abec603ce4e2aa7c0539d4fbaf6" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0db3ded87619997520599bd06bff7d3321ddd6" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5991303a63d121883e13fca0e3e2aa79be405ab" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, [_]&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6da65f5c9b044d2b1f4bad97fcfa10d6686d7c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f20903332a7930fc7629e628e9ca648afe96f43" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefdd9e5f744738619e9b3d0b93e6d56f2248c21" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, [x]&lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [X]&lt;a href=&quot;collection/immutable/sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC.X&quot;&gt;X&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1765ec6ca179eb76bdc15baf19e0420cb67388" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f89dd519ab4f1dab4ae73e995febcbea5a05952" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/arrayops%24%24withfilter&quot; id=&quot;scala.collection.ArrayOps.WithFilter&quot; name=&quot;scala.collection.ArrayOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcc173bcb2e52e56aa49ac360bc797f8ee3560f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, [_]&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888d5bfe20d9d65a070a2bc7d4a884d475feb64f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;collection.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b23cc2764ae5512cb0a7bbb626e1ad607901598" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;collection.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35984bfaa40bc47db747b024381c04a154179afd" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f327f0c4a194305dc7413067f62c0f316218d15" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379fe9145c478db6190e9ac29b054114555e6abc" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1471c506ed2eb21628e965bec4b3a949dafc7339" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfeb299c37aff2b6ceab2b02446c7d7a1f8ebfd5" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea47126e5387db4f4e6aec34ea28249254b18d4" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd8e2037741f5a1eeb8831f568ab17ef8fe34c4" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd058f1a8f5a0c31374bed235cf379be7b4b3c62" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayops%24%24withfilter&quot; id=&quot;scala.collection.ArrayOps.WithFilter&quot; name=&quot;scala.collection.ArrayOps.WithFilter&quot;&gt;ArrayOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2803c1e3bff0646fe5177bcf3da269d283648bab" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f977154bd9f116ffeb54dd624e5c79f32f5e288" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feec9a752f11ceebb004961a4d5a64b8290676f6" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3789b2cb693edb1b1060147df4504e0250c0820" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca6b592ca4f85b78d7dcd97884a0f17b14a5809" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafa7a134567e49d3e011e84cc09385ca4c0b3e2" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1331356b3cea788e57928014dee104f0d8fe5ab1" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f1d2689401cafce198b32e63630abc0a64e68b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcaa3f4f8eca1ffa643219adf090fd9ffbc2dfe" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ce5bbd4483537969db9b3e4d0678f5b4c59040" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1550c7609bba3a90df0bca9975e859fecb95717a" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c327f69a948fe1560b8f8eeb72d7f4599af412d8" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed45b518af5933fde586185aa4f157eb611c14bf" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4630ceda4d10086c499af85a5c3713cf1b1c60ae" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae24651c97db990c99051c806b09646a0d647acd" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72229180fa225cb4b844ab96f4a8a8b687dff8b3" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8fdad5baeca8a16667ec09086639e93ef21750" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2acabc663ea4e7cf985bdf03424f2882ff8d3c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd17f432fec8becb6e09b8ed095aa4f6f050ade0" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908064d10f70def2f0d430746daed55ce501f807" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d097c4198247dee1b19a9ccdaff8e66c7a58d537" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1541f079dc626cf08dae57f0bac470eeaff38ccd" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5aa56e1b800e6ee424a6492ef6d226d771f7136" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90ce942e7469f3f241b49bb20593ee5c5dbdcf8" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ec23cb5fc46322957259fff87312e93ef9d585" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457d948b4ae8d6ef7f57dc2b14bb77f06ae946d3" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b7f9e209758a5f225bb3f56515d0a9c9cb746a" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2078dab86d1b3ed7cbbf69c9cca19701163ed3c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dad41d392f51ad0586375ca99d3ed4ce07c963b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4837ebe4953124d231005ca8fcf96e3d4a7d46" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31b13b89e03e5f44ba5b4a4e289726c0fa55949" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6964c36207a2532b1d138f667a6be49be92dc13b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6168a7f217ee872957c65997274b997937f26455" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045c45c8fdf0cf2b1759b8429fe15342f1db847e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1724a2a34b640fdd46ac7b3efe0c7aaa221f9c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8efd1812191fbc2dd5ee349153a3e9384e253d7" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9612fd274380fb5489a99aee5014129a6a33e68" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f78d18b9ad5f922b82e2e1f5718cf26dcedeb67" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92abdb45c39a04217ed136aa77def06cc2b16e9e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d6ab50fa127c7cf85f2509a84f91e5c4019870" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c6b2863f79e7c1704a45ca07301801b61940a3" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1164ab43c1d3cc1093a8f6209a6ccc84ce5b5674" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed776b9bc0636600325c9f8b147f9e82d15cf34" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e477cb60e3e6edd3bb4f070c4b21cbf988ca24cc" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e76b301a7e45269af1826a6ec39db1cc526651a" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4974a970830348cec6680c14b6f93f04b978e29b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c011c1e18b54b0548a62334c91612c4f604d250" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf1da3638bedc0cc0b7e1c2a1b2d784b309d335" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c738726e3e7391f5faddd5f85f438ea4f7ce2f87" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9948d7487ef2a88c74b589c3f28d8f641b9be561" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bf0295e40ed383f544f84ac10ec3ceb2d75119" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85002e18c7d9c7aabae6f94165302aaacbeb3783" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f80c43932ea5e561790af09794b6dc112e47ac4" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1d752320c0dbaee7e8bce1e753bfa7bb790e43" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a15b3a46ab52f7aab5849a87cc3313608dc8c8" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d74a12d83d3f3581ce70c7c06aa1de819e20e8e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14de059aed661b197c675f809f6d0e84309a28a5" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36147e30bd38aafd06d08c304015a5addd4a4abd" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95772e0d4316b30ec3261018a7445fbd6ffc804d" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f0997fe87a5bc7d0d1ea005327f25b59e39a82" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043b7da356f74f5ecd89d1843f6aeb3da29461a1" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94e209ad6d3a4ec980c49c8c404d7b8aec5e740" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7255e71d1b5d1bed37ad12e4b797d74496c31a" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397d5ce28f1aa21e7445e283f212cfdf302431aa" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6922a87833a8d2873811d1314c30fff0eba70ea" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ba6d17e46fe2c09b08130a48ac2f585ff6eddc" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b360745338d46fd72dde06c43518131d447f6c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950a9358e0a67567b4c6cd7644944963a1b77131" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581c4d8584c2ea54e067d67939df6a6d2942aa74" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a160d796b5544c0914b10786aa405de385f442" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7be50beffd67311e026642f6cb08ee787af241" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba706007803326524f75bc60e6e980386a937fda" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534d02e7475d8f39b0df0f98bdcaa55014eee87d" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfed20ea34b8a1bb62310637547228c74bcf5e28" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce53f6ae82a30f1b246f1d7e418d3038029afae6" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ab5fb5d127d8850dedaaeb3b8e5cee9784c9d5" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79255d2bf06b11bf465845db54fb6f1f7ff4cc0d" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d8a96038a3a71f8ee0461bb54f862a410545a2" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf76b767f45bc19082e9cda5c5aa0f0804e0e48" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983d98175877123773f00b9e59c44c4d7ec5bfab" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074d3064ac11c65a35c8782653bb53c5e822e04b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d254b39e917e63765cbe8cf4ef3ba4cdd8be97" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469ca134befe9c6c2bc4c3f357c214d524ee10d3" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1f9e6ecb9c5d98ce1b6c44bf02d388798e9065" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba5ca0efb8b28e6fc8b5cf1fd7b9bfaf2a9bf06" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a48354ac675550ffd926ea7ff605c1ca5e82f1c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ba65f469862e6612106e5d65383fa45139bd93" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141050ad7aada5bc2654f2fe2154c4ee1c1b9b42" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0266623400018c373eec6f1a26a94bea336a03" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428f28096983aa7fb3e8ef2af9df40f7bc64b367" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, [_]&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6a5a3f28ce91c73540134726d96604d738342a" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, [_]&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca855075dc470a16a473307fcc425569df421e0" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, [_]&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771fc23da336f56af5e83c2a8d8d97b4def310df" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68027991782d7dfa3b81d8ff8197934dde7ca70" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dcfcddda997e2c7be3b52cddc16696138c5921" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a3d07fb090d6061888fc3bffed907828195464" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4acb45c8074ea7eb41d8a15b89d6ec2e612c2b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444b4ef4e5ddf6037adb6e37e31de570ee4c3790" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39b1f9c019deff2b26d2ee0783e7403f48c61b5" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4044accf734138f1ccd6a3f4d15c0d2cc5b37e48" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c3d4ac71f0e03d612e693c1957ef1bba86a5ff" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40dcd108306da8925d19e49c37534e2312c894f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, [x]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [X]&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC.X&quot;&gt;X&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32af9f8724d6bde6d95a3f762feb3a65af63ad4a" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, [x]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [X]&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC.X&quot;&gt;X&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d1d75dd78b1f28c7729a8221c3125019adf27f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b3c821a87d7ef00ba48beff39b49199e92046d" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6feb9c6a8e108c84cdfafb3e4be4388d46c0e9f9" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7520887f28d1c14c945cca2aeeb8b8d048405e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838d2a3af0af014b3c7f34bcb45452cc446bd1b3" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, [x]&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [X]&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC.X&quot;&gt;X&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1220669c79d0a9bdbec30146cf164073818ff9cd" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd6551d8725fcf342a4113d9f61dbafec9ba308" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0859c41999cd70a92921617c86aa595814f53e83" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff05224e5aa747aff0ab5f4b075b7fd055e5686" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5641018b37e83215eeb79b16f8f881e5609602" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d740a6f74da2cd9471953692b583e4841028c5b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be080e0d680582896e82b268d692f784a19472f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df97c16fb02598dacd55bc00fbfea3714603684" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8980135e94a44385f57818c91cb6d39a0735bc5e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce639243f0bf453f59ab71ce8f1e295f4db03405" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2a1a8e6eb458818c3f147248eb543457855bc2" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb8ed28d5307908933de077204eea2550430e22" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, [_]&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79490e4b6189c3998135f396b224c203c5a6a494" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249d0249148623ecdd1cff4427ab2f47ed8d17e2" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c2e28573386de88d03795facaef7c5853e0516" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29ff30ffd55b7e412b28893f535d1d7a6880f1f" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, [_]&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bff240ecac70620f1c1262b01dc7d434b77f68" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b69e9da9dd4e21bfec57bedbfd0b8944c7d07f5" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021030b7f7cd58d3e665ccc577f09d9e4d8cba56" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, [_]&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e5e67555d35626b17c494ada06b02178be9242" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fcae61103d6a4abc57623846dd1ffa01b81a3c" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fca7cd0b509cee1dcd8043af0c9981d76f3758e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e2fc027d4b54e3f8d076902445d8ecb2f12a33" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e48efa98aa9130ec865c5fca9e6cfaa2bde404" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe07d8273868daf50edb350a0fef23e7221f5f94" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529f5ad3e508c06c05d5e2cb2b735667fecd76bc" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd83dafa8d712fbc78fef207f4f00a318604c485" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8473cb416bf142f2112d18e2cb5ceb51d5deeee3" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, [x]&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [X]&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC.X&quot;&gt;X&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3806f9bba486375d2a4c95a067356e13dfc135e7" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492401cf43b7e4cb19a89b2ea6d0dfcc661184eb" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ef78a0ea7c2e9ac77341ae06befdfdf72682a5" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;SortedSetOps.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, [x]&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC.x&quot;&gt;x&lt;/span&gt;], [X]&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC.X&quot;&gt;X&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4243c6d911b53838fe72b47f6174eaf86e9e4bdf" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, [_]&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd8ad503d527a717a7ea47377a156a65e6bf56e" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908737306a0357ee1fdf6d972e5202044b1700ad" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, [_]&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC._&quot;&gt;_&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b17b9346112cc392ddf4193b3b0243d8ba6f1a2" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;q&quot;&gt;q: ((&lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24%24withfilter&quot; id=&quot;scala.collection.MapOps.WithFilter&quot; name=&quot;scala.collection.MapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf3391cb177c7360436c78238945d3fd3d6281b" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;q&quot;&gt;q: ((&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.MapCC&quot;&gt;MapCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abaa4f08c7584529995ef80d5b8c56c226ab9ec" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;q&quot;&gt;q: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringops%24%24withfilter&quot; id=&quot;scala.collection.StringOps.WithFilter&quot; name=&quot;scala.collection.StringOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0608ed964a9c566d33598bde3d803af6c3162281" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;q&quot;&gt;q: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cae3f5184a12782a456cd398a5c9fc0ca7ad99" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;q&quot;&gt;q: (&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayops%24%24withfilter&quot; id=&quot;scala.collection.ArrayOps.WithFilter&quot; name=&quot;scala.collection.ArrayOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1933f061b7b387b95e09370fe88d834afa0e5fcb" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;q&quot;&gt;q: (&lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterableops%24%24withfilter&quot; id=&quot;scala.collection.IterableOps.WithFilter&quot; name=&quot;scala.collection.IterableOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabedb38c971b73796307709155b63f3cd60b047" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;q&quot;&gt;q: (&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978160f2ce4db30fc6a075385cbd2dd879121f24" translate="yes" xml:space="preserve">
          <source>def withFilter(&lt;span name=&quot;q&quot;&gt;q: (&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;try%24withfilter&quot; id=&quot;scala.util.Try.WithFilter&quot; name=&quot;scala.util.Try.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f342905e483033ffae319e5cf6ac30a610482cea" translate="yes" xml:space="preserve">
          <source>def withIn[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;in&quot;&gt;in: &lt;span name=&quot;java.io.InputStream&quot;&gt;InputStream&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;thunk&quot;&gt;thunk: =&amp;gt; &lt;span name=&quot;scala.Console.withIn.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Console.withIn.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04de7c1d6284bcf165bdb740ad1eb862b88682ba" translate="yes" xml:space="preserve">
          <source>def withIn[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;reader&quot;&gt;reader: &lt;span name=&quot;java.io.Reader&quot;&gt;Reader&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;thunk&quot;&gt;thunk: =&amp;gt; &lt;span name=&quot;scala.Console.withIn.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Console.withIn.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d979d575f5e4bc383260a65d3ff30ef34183304" translate="yes" xml:space="preserve">
          <source>def withInput(&lt;span name=&quot;write&quot;&gt;write: (&lt;span name=&quot;scala.sys.process.processInternal.OutputStream&quot;&gt;OutputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bfbe1dd18b6e45c0509840c0809ed3fdf75ffe" translate="yes" xml:space="preserve">
          <source>def withLeft[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;]: &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Right.withLeft.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b29e7bd478887b00b4c33e16ea8ca0c3f4d63f" translate="yes" xml:space="preserve">
          <source>def withOut[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;out&quot;&gt;out: &lt;span name=&quot;java.io.OutputStream&quot;&gt;OutputStream&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;thunk&quot;&gt;thunk: =&amp;gt; &lt;span name=&quot;scala.Console.withOut.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Console.withOut.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4111cb4824ab86e81a7ab712908d4d9968832522" translate="yes" xml:space="preserve">
          <source>def withOut[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;out&quot;&gt;out: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;thunk&quot;&gt;thunk: =&amp;gt; &lt;span name=&quot;scala.Console.withOut.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Console.withOut.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e526c3e399b618a25abc3ff14bbebadd7e660b" translate="yes" xml:space="preserve">
          <source>def withOutput(&lt;span name=&quot;process&quot;&gt;process: (&lt;span name=&quot;scala.sys.process.processInternal.InputStream&quot;&gt;InputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad0eb0fdbfd724c97777f9fb1b383bd1be85c5b" translate="yes" xml:space="preserve">
          <source>def withPadding(&lt;span name=&quot;x&quot;&gt;x: =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator%24groupediterator&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31dd61e225aeae3068a483c46b8e79aba5770db" translate="yes" xml:space="preserve">
          <source>def withPartial(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator%24groupediterator&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a648ba4ac2d15e4df95de8b8784c61ccf658c03b" translate="yes" xml:space="preserve">
          <source>def withPositioning(&lt;span name=&quot;on&quot;&gt;on: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ffd920aff23858d306b5a57c0627fba6d9b8f1" translate="yes" xml:space="preserve">
          <source>def withPositioning(&lt;span name=&quot;on&quot;&gt;on: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80d88f480de39473582c0550ced4b4cf702cd8b" translate="yes" xml:space="preserve">
          <source>def withPositioning(&lt;span name=&quot;pos&quot;&gt;pos: &lt;a href=&quot;#PositionerextendsAnyRef&quot; id=&quot;scala.io.Source.Positioner&quot; name=&quot;scala.io.Source.Positioner&quot;&gt;Positioner&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3d5d8340ae7c24e81643a491f4686044719acf" translate="yes" xml:space="preserve">
          <source>def withPositioning(&lt;span name=&quot;pos&quot;&gt;pos: &lt;a href=&quot;source%24positioner&quot; id=&quot;scala.io.Source.Positioner&quot; name=&quot;scala.io.Source.Positioner&quot;&gt;Positioner&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8a1560980f76579e37758220b72ffc826e55f3" translate="yes" xml:space="preserve">
          <source>def withReset(&lt;span name=&quot;f&quot;&gt;f: () =&amp;gt; &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4cd38fa31de1f5cb43cdf67203ba6f7bbe2e6a" translate="yes" xml:space="preserve">
          <source>def withReset(&lt;span name=&quot;f&quot;&gt;f: () =&amp;gt; &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e91cf4f1c94326525beaa16c8218e34fce0c0e" translate="yes" xml:space="preserve">
          <source>def withRight[&lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;]: &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Left.withRight.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93619fe872a875ece0d235d3563668be0cc963d" translate="yes" xml:space="preserve">
          <source>def withTry[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.Catch.withTry.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.withTry.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28c20fa149adb8c34d7dc9da17af86acc9ae2bd" translate="yes" xml:space="preserve">
          <source>def withValue[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;newval&quot;&gt;newval: &lt;span name=&quot;scala.util.DynamicVariable.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;thunk&quot;&gt;thunk: =&amp;gt; &lt;span name=&quot;scala.util.DynamicVariable.withValue.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.util.DynamicVariable.withValue.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab88c92aacb3fbaf129cacbc082e426948321b8" translate="yes" xml:space="preserve">
          <source>def word(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcf02b936324924914221a99991cef40933d0cf" translate="yes" xml:space="preserve">
          <source>def wrap(&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cffb83c9f27edad40e651559c3e40cc117e0c93" translate="yes" xml:space="preserve">
          <source>def wrap: &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b0d645b3ff2da9ccf15e289495da4e98430404" translate="yes" xml:space="preserve">
          <source>def wrap: &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ec946589c2ac948f83f12f76f228bf590e4a70" translate="yes" xml:space="preserve">
          <source>def wrap: &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5977917e927f742ca17623df693f85833415e5c5" translate="yes" xml:space="preserve">
          <source>def wrapAccess[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;span name=&quot;scala.sys.SystemProperties.wrapAccess.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.sys.SystemProperties.wrapAccess.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bab66a731922d7f59bd3f082968198d3b48ee80" translate="yes" xml:space="preserve">
          <source>def write(&lt;span name=&quot;data&quot;&gt;data: &lt;span name=&quot;scala.concurrent.SyncChannel.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1593f921aae3e36bf9d7feeb543e76305f920a0a" translate="yes" xml:space="preserve">
          <source>def write(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.concurrent.Channel.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a6cf275cbf01bbf365d65aa446ec8fd85ee804" translate="yes" xml:space="preserve">
          <source>def writeReplace(): &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6b088e3e70e105bba4894265c54cdf481343b9" translate="yes" xml:space="preserve">
          <source>def writeReplace(): &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c8eb5c3622f5f099b2c42a0f28e3730ca45e77" translate="yes" xml:space="preserve">
          <source>def xor(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;collection.BitSet&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f9e5f75fecd5db9ce26b15fd249549f6529577" translate="yes" xml:space="preserve">
          <source>def xor(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;collection.BitSet&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41681e56a41bd1a5229440b768a6e29b2a76026" translate="yes" xml:space="preserve">
          <source>def xor(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57acdc1f51ff6d7cc4c6a7d0845221794e263740" translate="yes" xml:space="preserve">
          <source>def xor(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d93e99391df85f8a0bbf828c9f9e63683b908e" translate="yes" xml:space="preserve">
          <source>def zero: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562b777afc87cba8c1aa487c2097db7b7728ea72" translate="yes" xml:space="preserve">
          <source>def zero: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b21f587ebf99f0981c8f87072aee9a009091190" translate="yes" xml:space="preserve">
          <source>def zero: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8e8733d3cce68a4050d7a994a16708abed8506" translate="yes" xml:space="preserve">
          <source>def zero: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06926ace7d9c0ec5c38f571dc70a0317f4d1b5a4" translate="yes" xml:space="preserve">
          <source>def zero: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98914c3366b1fdebf521330eabb5761348ac99a2" translate="yes" xml:space="preserve">
          <source>def zero: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253ddda3ad28633ca2f721d142500b6cee040889" translate="yes" xml:space="preserve">
          <source>def zero: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ee4326020f7f71ea2aa1e542aa9a2e6545061d" translate="yes" xml:space="preserve">
          <source>def zero: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3d969daf0353994b65b39243130460dfd9eb0e" translate="yes" xml:space="preserve">
          <source>def zero: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c80a2baf25cce0a18ec1d1bbdadfa059388f1f" translate="yes" xml:space="preserve">
          <source>def zero: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a08f01f602ddc407500e7a8a61b6c26751f946" translate="yes" xml:space="preserve">
          <source>def zero: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22eab65763e79bd3b1930c356413cfc96ca57910" translate="yes" xml:space="preserve">
          <source>def zero: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e1fe59e423c00fd2cc43b0ea43d2c81dd6aa4d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1004b4ba33ae0e2c8040a566c25601b9df2f3c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d169e1659cf05d19dd0cdb7478fb0ca6195911e7" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0dfb27f4037a06a1fad0b6553060da64db63506" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b850007910b1523932a5bb86b4527df9932261a0" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5fb013b689b2a9bbf6f9d8d973a8160eee2803" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b22130b6e316febaeed556149def19fa6868b21" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f37659352b5ba546da236b6cb2d0e16fa1ef96c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cded17ab186ab87abfbfbbdc3c535aaeb0b707d3" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ae26cb2d84c27c87a6553a2b468061de1819c7" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999d43dff7cba6ba5628cf2188d83db5abd7d1f1" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba01c5c869f6f1f9544d9f6eed3fe3dc6a074da8" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaae7dda5cefc6357ce9febb6f6bd9e011345129" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31eb5301b9da825cc1d22a4c8b708f4edb544525" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f5bd968d9ac33855a89b29caf9b92860e1014e" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3c7d7d496545a285729f0f0a2f84d070053c37" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d7bcc60b069fde959145ea20a40c3390f964ed" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a84748096e4b064dabe7e1d3682f5265a8c60c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5abd2ab0f764971ec5b1301d72531817cdf833" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784ef389323befe81c5583efebe57556f413264c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b827adf2231234a3095ed552fae6847e5b1a9554" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cdee4f7f5653e90572ad8289617a397b233465" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9561feffa5d483bed9ffc00e958d23758a9bdf7d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc80038124f79fa672956472b30d59a70ccf7f6" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3ca4a7db7205717b0baca00d6d754d277acf56" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79cbffc933a60737c884a5eddc1caeed2a9ee13" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad93dee4d5cf4b289a3e4dbdf8a372bee6d7e5f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b2e099d2da28180370571abfa882e22ed42fbc" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa563d590f8d4587958beecd0264874b53e5e48" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6734fb5845d651c8def0d6b283cf90f9f687a5a" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6581ef78e0bdec98a945cd6637edb1b1e734477" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6a1edd104b7c06b2753cd69175994cbd6b9e81" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012302dc00775ef2af2d179b988b1795c5dd836b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de9051a20334f78143e4461f196d9486a54d920" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a9dfc66ce79278e5a9684fb61211329c2c8f74" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eaab9bc848ff2801d49a155b8c80adeb238f31b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d64451f58b5b15b039fed1d3de7bcd6c680092" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3803f500ce1da4921508081fbffd065cb83e45c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a25466eebbb7a6c1d1550a9988003ce8838dfa1" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7775be1bd463c87dfee8ac5151f05d1077868fec" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc462bdd6005721716468741582b10f3b247368" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df5f32d82c2532dc8050b7a5653246e1a8d650c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2ea17c84abb186be934b60c9bc4f39136d7604" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73f08ee917c407a226fa6207c6619549bff3007" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2ec12e86c4e6a5d4d4fa753f4f16c25b4ca679" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a258c306b77cf5190d6b2d4f857fbfeae5233ec3" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0d55bff9882cff80c06542de21eadef874a38c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f51756df5564f5beb80680dab2208e38cfb585" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a6c422ed06cdc8d0f8b766ae2258dc350f0587" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da078f410ed1ef1344c05749736e51faae98d6d6" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2fa0e3924910aca263d667936cf0422949e056" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3781151af6e26ec0edff01b585ab6d11440fcc" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d3ea813ac97049e72e5305a35ea887689ad5ab" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf49f71a44ecfd2033cba58c38028e1553b67aba" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6525326265a7ef2616b7b53363c5caa5451d2a9f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7900804605e0d46557781ccff063387a56667ca" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5c1b208f1cce5c9d413c05b628a3940ea385b1" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26699114443ae6d8d3d7d9f0af2227d9b602de1" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c1785f91b7102558154c6251c008d1d154f0b3" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d496f4fd810675c4b3b6824eef2177d0fe4105b1" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912ec8cd37d47c0edcbe9418706a5c68445dd499" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe50cbefaccb5fe3b30a02cfbc85f69a251d740" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0da11734bc592f1ec8cb678da4a32fcd50121af" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa98fcac6ce85712985a8702c7d0be1e63fc7a60" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4879e3e5d2c674fbb145c3722b1e73eaea29cc" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed0487059d1844e50e9c52b6d89b6f5d5b9a773" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e3ff3ea6235e32a1d75fabc4c512728f7cb3a7" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7e3bd2e59c875bcc82c58b8f577e2997f867fa" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b65475ae8b43b9398877d6cb701fab78f02e498" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987a88f9546259652800eb4d2ffd7ea74868ed11" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0efa3086eaabea3b3ea4e68605cbc2b176b3b7" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ce27b6bfac1296034058f6397a66b63bae5b76" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c416a9d2a4f893e0a11e0f361c739481414c9c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0f87ca4f313541de1e68249cd7565484fc0e63" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f41f688628648bf64b4a05de0185d8b442670b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d6f0cf6aa247cb4f06cb88563a380d16052651" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bb488801c36afa983c169e309bd25cbbe734b5" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcb30cef1feec1e84c5ed3245a65e63093d6b27" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365a1da306b92a652a01fdabda068aba839e0acc" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16660b404277f4a7c6c12cd0534bdace88330b39" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f85797586444e3ba8b387dbea16396ed61717d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b681697f7063d0a568a8683dce822aa079b900" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355eeeeb14f55f35487d807c8e5cbfd95018206c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56dc0db0fb1a5607e55dd8c937952ef4191e6cb9" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914f56bbb5806a300be700f711f262d72da935ca" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8ee295e9066997571853c52745e5791aebe8d2" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cfd4646bb82e612f96bf646fcf24d232a6e5fc" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66d6de7b22677a1e433e3e6431417a97b1403a8" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02af51a455eacb8797ed850ba081e332729e0c8f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e282d8c3f7111fa95860eaf57aa1861f8329e68d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bad1b92f4a3f545cb2de29934c60bf05333621" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361c283f9c94d3cea3c83027121dff3494f41e5b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9784c69539188e79db68f64bbc4271c7ee5348c8" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272031497eea02e8d0ad45861ae827f43c9a866c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f58a4962e43e461fbf4af909067807d46ba7c72" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3731ef3de4548dd8edcfb39eeda30c1d8727b9" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0592c49557a081008076f724bf80f105586ec05e" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50a21d56b64ac4c03845bcda1eec7bdce19a967" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c88da5f5a35d0c2786037f9b07d37e2152ca71" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa33d1d48eab99c59d42dcee50a56779e8629b41" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e78191188aad855a78899203cf15ed89c96528" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b19b8552b537ab29ad837f382800280d9764f6" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6e8c22901e415998ae65bb152968a17669e90a" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2eabbee5e73e0a2a92813d2d40003deed5d74b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc89aa2cf071b642e4c24dc64ad7cb59f7e61bd" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619766f1e35da06c6451911b86ca3e4625ec355c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0b7e37899c06e679c3f2c0f200045f310dd470" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.ArrayOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.ArrayOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[(&lt;span name=&quot;scala.collection.ArrayOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0585c18e267e4afb04c2392cebe0c14b703f2c37" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.ArrayOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.ArrayOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[(&lt;span name=&quot;scala.collection.ArrayOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646f31a4f8574f450e3c0502e326ea09d034c8cc" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3732deeeb0e7d1dcc0aa24f2fd05913a5157c40f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cf4f0cc9b6d435de7f262613e8b0a7941ee24b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b4d6a8ddf7067124ef7408b7c047e4ed028565" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3942e5bf37c9c3cc83e9a65eac8d86765cabecd0" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcd592fab05842a5d93aa841d0f0ffe4278ceef" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f488bdd4b466dbd63a69601575eda99c229b637d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781b5c0086b43005dec0b4f92eb95b5e0ae166c3" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef58243ce3648a616e061e3edd6f9990f82e84f4" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17aca496f9b5fcbdcb549310dac2e65cae6f45c2" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c87060a24b205969ec780c1e898afd9bec1751" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21451ade2e9ff84d15ff37ed2f531e4f5c33adc" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf71c24756ed2c771341e6715da9d333efa7cb8b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adc5a21c4978b8c86613c4ea1114ed49895c9e7" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010968ec6dc0cab1a1fe0f9021fbce1897759cd6" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d989710deee44835691de2ee50527c3822fb1d94" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0017808e4edaefda3bce0e6bbcdb298dffcd78" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6dac681d6c2649ef2b86abd6ffcb15ad206aa43" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a26ae60110c5014f4186aa00fc5d9ebabb20d46" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8dbe26a1cbf099b22d82cfcf2eae5289772f79" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5efac1a0676ee1215b07031bb35cc4e7c851428" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ed3cfc6d1515d0cf59d02e0a64d811b21e9cfd" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d63658f65fc27e01df1d962d0361bf45e4fa1b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af915153816f1cdb6e6f1528972359ec1a1d254c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa016575c0716e24caa25406988d730ccafcd78" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67812a1732fecbbb8461a08c19765c33e096a83" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7731bcbef33594d23ecc66c1883eb83aabf453" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89dd55b6ae9bbf624ca5d8e1f259164fbad3cbb" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca55426d801c16b88cd7398e5144d8e0dc2c159" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82382e8f8463dce33d3c4a63076f55d8d3d9e084" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3952de953e240eb45b98939f5a4b089e8251aeb6" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decfd3258f3c48870be607a6af14d8a3fe801ba2" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4193d13fc74c0cef728c1739f4160ee2d2854872" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656dfbd67b9833a9c9e0d1435ff13f332af88974" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684094bf9c73a38904a76949b955a6ffabd2f3db" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0552967833c9e92f358611425b67accda52068" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbd7c3cd1053b7f53f62be57530baa2b433fcd3" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645019c60bc15624c82b2454bd279074f49675a1" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fbfb103fed0f5f344056adbd81d6c115de04de" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff43007776bd51973f9e66f192ac1c18d2e4f5eb" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a474742afeda1376a26a1b0faf78df3772c124d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a979b089c1d4478d3f07eabfd2872a3ed5bf71d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deecfc9f40ed8b80e310fa2f661fda1da0bad2ab" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a964ea19b07d5992c02e350a8999a59ace7d48" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f37544b2cbb8d9c3425e8f3963fef1fd2fc096" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec02d4bf390b7598e15956c5c8250662d2e460c9" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ce9a1b70dc5858e878ef45518767394a126445" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebdaebe5f783aa36f3b22d54df76ee971e60aa4" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbc956024bb01069f0e136c9592a1f297629f2b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ddb1dd8322c7a938d8b402d440f91ab2d43513" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51052bb55027b7955476e9b61285e3e4e856ec26" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b8df8e4103fc6669f0d7d8529d3f6880e5c49d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343b61e5b83af1d0cff28bbc2652c975852b2124" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9781990dd5690de3ddbdb9d7dc5f0078e207a4" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e833ac1bb8caedb7befb0df0dc4e32f62c83ca6e" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eb70b5aac0be4fdc0b2fb1da544a57a74867c2" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c72a06461ecf65b3c064d3d6a01b483551ee57e" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e23329240bd076a4977f09556bd2392c9269b8a" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c443164843ff9058b156a987f4bab32d660ffd" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b3ec5c74c6a15350b2d052b78697547ece154f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0076171791bf2c8f025806fcb8458b527d8d148" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21547efe35a161fdbefe57fc58dc8db8d01155b9" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3394e30016a59b787fd4e5a2824bff1845b599" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b709dc642af7835ac22c7108c5e56e9a764e790" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8a21f5022b5d5bc7d04937aa445802332258c6" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbd0cb73557b87938ff42d4c132d5473f2f959b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76166156594d2fd8d6fc98333f7618c55b7521b4" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a028d4e5743ffb61789cefbd942f1cce4c8b77d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f741c57b24bacee1b5538d58b936a8d2f674bc" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea3d49b608edde3814706da99f7ccb4599b087d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa6f32262674372ff0aa51e3c938192dfaa1d4f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3afd7e72e73ffe73dc594958994b53fa7ae9492" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a697339f21ef579cc1729ec97009e2b947a829" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065bf4d42e1e66ee7b337c64269c547ec184b76e" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5bdfa99453e5141a87c58f45e84bc1bd1fbe77" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42743556f5cc654af90f6f752f42d32ce00335c2" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693741c0602fd0689a01761cdf3f8fc7c593635b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78c00b78548ee65432693fba950e01c063d64e1" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707c02515914e65c79845ad087a0fce0d9def18b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74ef3cfda81119a81dd0ff0c136d7c6014fd7aa" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831803440db9810fe8c41d07503f0153162b0bb0" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6c61553a1df97998c152981dff8e0608e63837" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71aed28a228cd4501f44f11d875522b8ca2be54" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900b542596373bfc005e9c71fc8f9fc6adc97059" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8093ce5f25b4ba7d210ab01aa0d5ba9b6ac7f885" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11c01f7fd02602ee496600c2df3317b3ec64625" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9866dd204a687a4a1bec14ed2fa764f8eacf00e3" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.immutable.LazyList.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.immutable.LazyList.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.LazyList.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LazyList.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe94e1b3b27345168f6e8edb1c73d0e27727fe6f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd5ca139689b27e9fe627371577ee9f06f08379" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c947f2cbf1eda7002a594787f6b25ee79ad77b" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa77cf35eee65826e0f70294ac7619f707f1990" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7c688f0ad3a611a87368d671d225bb77b25886" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee900214d0aa8af9ffcb8874c96858102a7e701" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32519191d03a1c2fc5e81a65ebdb38931199bf68" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb073a2587a0667b8632058c8051cdf994807666" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493e084ba68d9a99b4d9664cd5bc2f0b815315ad" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b080abe2d913b2208eb5ca10ea9a620cc000e700" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb7a2877d35ab8002f1676674da2713ab8d6792" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae98ba84bbc3162f37a190a299825360e4502650" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9392d369b279fc6168089aab3e112b4e7faf9202" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4343c273ca96bde9c05ee6648b329e2c14daea" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb706942a0a2e502efdeb29e959fcaa180a0f1e" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13017d44413fd6e2778cd1c8fc751d0d36dcd5c3" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0218cf62e98fcd89287d1434b7c99622bab2780" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4786dc2d2b8aafb389f9e5b5b6d433422e347e" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b81752be14b3506cb5e67af7ba46f0b91e0193" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf59b012504f50a0d2d17f234dbc6cb46f6269cd" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cd5804660d1a2727d6339252c208c61e5f687d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502950983eedeb3eb287535ac551dad850e86a01" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce4ebacbac15cc6ce72140ca9a0cf063fb8bb76" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93cd4c8f4fb776a71843f015a462d2070784ff7f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa262a0860ddc2a4c9ed64217765d4cf14e5fdb" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f860039fc09249b8a68fd7733e41852b53c375f2" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182d2385d0823cb46b141287f5d3119a6c6a0b96" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79abe674296d951b631ac4af94e771c8ffd4bcc" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterator.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2027c18a4d4aa76b2bcabf2ce4c8c072f8ce1e" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b75fb24ccbc7113653b835fec607bf51b9a400a" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afeeb7b8d7c26e3a0601f1fc272e17ca43ad709" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaa946db54d8c32f837f589631e530189fcc430" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15db14d9570d825d0554fefd20ee47850fc5023" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d035c50aa1130ec224a5f74c0cd6b6e1d814482f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb7098dd4e76d0948bb0b6c944189cd21129ecf" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8898dc97d949d05a8a7adf4c5b3242196a92e8" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b06e79eb6dbf615e36b27e749c4e6cc85eb82e" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1742ca2035dca12394a3b50a1ae88174d5c9985" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d422cf38307e19072915c894388ace5332a1e1" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091537f08435c079b9bc0381fb144bd275190341" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f04476fcfb9e0087a7de2b28586326f006ac77" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122297e59d2c1ab747ee5a5779550a68a049424f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a830f3107bf5353f5206bf754fb91d8a4ff9273" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670079cc4238333729f91013420561d3f1bdd763" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49f5b7b8a6b97a2d32f0309112ae583e81cde3a" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d48ffb83d7e0241c1f73d29e89212e6085356a" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d753bd139b3d074e5ccfc0a1e3ff780fa1279a" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70364195b77974d80580231364bcdd487ba2803d" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617989fd7e63e84f1f692c4f6a7e0815955ca7c2" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df72213bb9853d8f717727ae3d7fc5bbbafa047" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13d3025f22da0f06a56f0cf1f15321d5957b824" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62045806805c4d903d556fd4e3c8625b174ee070" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e323d1a6d2b0c638eb829dc61ab42e7d185ef6f" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfb81d49ce06644304c45563d290037fb979a31" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c9498f625d781048a38124d65de384c3a2b26a" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2484fdf3893fb27c8d35779718dde6ef0440dae8" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d3eeaeb505d16d3df689127766afe14b00ac2c" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bfb2907983d45d75f3f2d7681e7924d970bfd7" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02c8e84919d7a3ef35a31bf589ce9af914d0424" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbb506ea75637c48752e9ca07affd0088627123" translate="yes" xml:space="preserve">
          <source>def zipAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;thisElem&quot;&gt;thisElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;thatElem&quot;&gt;thatElem: &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableOps.zipAll.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.zipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2057efc761cb5aa34308a08e9513d106a9e74120" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[(&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad7a6c810f10a325474cd0f4baf5c1d57cdeb3c" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[(&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0115502cb5c7cb471094437f8ece4d084e86c434" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[(&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c23f43aaa7c87b8639a120344476d10d8c99742" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28567d9919c63d48fcb1b99370cc7d589490cc90" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6492a630fb1ebd09e8c09d1c903eca43aa3c69c" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[(&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f148d5a403a7683c095545910225255e15fbf6a6" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072b6e858a78842850bf35084badfeb72f4317de" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac16224fc8cc6ae54beae7ae72dc5395321af67d" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67732e73293731b1310a523b59c47547c1f8e282" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d199da41ceddb4fd0fbb9808bdba81a00547cfa" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506441c34de152cf84efe72cd07d23f75e57fca3" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[(&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91670dea30f8a1e99295b432cc076419fe545b3" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[(&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bfc212384e2426122a77b1677bf3272e214034" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[(&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ca381cbe1c517efeec923c19ae130768f21edf" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[(&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2214eac209c826965d1d6005a6915de1c683c86e" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[(&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d8e333f907111ebdfe73f6204b78e7d1f425e0" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b8764af3c51aab4986704a5ac15f9543d9d05e" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522dd1546c3882f0a26debf9f305dd864859f61d" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623e0dbf74e0354f07daf0bcc45ccc20e27780bb" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33719d92a12802ff1fb4515d01183016f6e5ff5" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e28af881bb989abb8df4ed8a6543b13b74cd0ac" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f936d4a6a676b87440d6b61758ee81bcd58c7bda" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c846ae233922daf043d04a014a09215b144337" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f3f555de3cab49c1b2e257035a49b13597ff01" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae70f3f83756c71b79675bca7c6439ee8a7c9de7" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac7efc1420270f026691148acc641fcfe4478cb" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba1dc6eb57f59460e0a8d42bb9cb7b88629e532" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b42a6b82bc8fdc4863a5bb32464691b461df2fb" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8108f389145de430f685f501595d38de19f15a" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6208d68e3a2afcd54d923d5170c2477ddb9d820d" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd31f7da58cb83a72968c384c6279c2a3a1a3bcd" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fe5415afb0bbccadac6878cbfbeb420f596206" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc72584e91fe06da277dd6f4a80f7164d5335adb" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e32ded9a11b24335879da1f74baaee3f97deb3" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9406df0ba989c05349f4c1a705da7e577f8ddad" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e635afbc64b72618f5cd0db445715720ef8cdf8" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fedb3c4da478b71f6969765c0a355edcdd2652" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603a673c55cee8d0f242416ba4ae8d0c2d69ac7a" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0de46dd5d97710cf2a26425dbfe772f7a27664" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a80c7e631196e2bb157a3ef9f1687c99253768" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c12e773cf6ea43c353352e6e93868aaa9e082c" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd7907a07217940f18e6b9a3195c50390357c28" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714b4d05df7365acc33b8a1d23464368da588c81" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[(&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e929ea4e026fbb690113b6d51cacc69379c393" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1e765be628c5bca81aaec6ee7d621e165cf984" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8fe788e7e939cdcee413eed6ad7b3aa7c7cf0b" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4c7eb3fe2c68d9c2b1f03404180ffa63fd1004" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c32f88f16cef7bc5617e5604b859fa7b6fdc63e" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a487bc8fb2d75781fafda6bb6e2edf3049c777cf" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2d93d64182d45523b6fd90ee9d3e1d0c5315db" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb984beb212d5d01205842ba9c77263907d99718" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29d2ea2380b82f84e9e387ba05c331fc74ede3a" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155fe5a93766460937d046355e96beaea9738baa" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6535ef70570bb9496ca22c314e05c870ceec62e3" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716c2e761c00917967dbdbe2696f20bc346bdebe" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b0471885e3c78e59a37bed3badc6fa4cb2bc79" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ef994d70b093f6aa17d3496c66e5644eced798" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fa003a84646e1995646b492087db18a0940fb7" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47cde9915790f900fd3393cf480aa71da0ffb37d" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c4fbee55952cf732903907496c24a844622441" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1eeb50da2d75e7aca894b73c1f2356ad184c933" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e62d896b894e7dc137c1af0357574c2a360473d" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065fdab547b943936a3cb7b8adccd476bbc7ba29" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c614a03d434ce3979d2d9999d28928a125773ba" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e64df9d6bb3f651c34b4dc7f471677259c2d281" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de33d1c9c6df2666de82e254ec22b0aa78a8e76" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1b8aa97166e3f28a1d93cc21d7d944a798b04d" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3613cb351e153904232cffeebb2f83f0813122" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cfe50a8f8e011ce31a422ca8369164225df220" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34cffc97b636f0087ed3fcdd27ace4533bfa202" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03defa2be4830f0838f1b39e8125e3395731b76b" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499bfb3e34260f787cf57633d3dc154211237ac1" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ed045f015ced0a6049e463e833c80537b9fb66" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0e5d94b273edc8dee021724c7076b692d9298e" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4890eefbfacc76d1f704a4ad7fcb94a5d19fca4" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0103fd99b4309459f2013bd9635169ac431487de" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850913096b54a810fe32661d1791673b4562bb2f" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8473393f68bc207e96ffb315fc9fac86716b961" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9d4f763cab8cc150bf2cbc9516ca0c7048780b" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a687103c149031bb3e5f77ed315c8c75ab7392c" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d97dd30b2230b4fe9e5c941efd3d330ceb2d63f" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea04c19a11685312a346e4e92dbb231c2ef0eede" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e55558f700983703ab0e4b1d09f4bb849011134" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a14c73fa62dcc2879d4b4b7fc022e42425c3fb" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d97148194fa031eb3f64a07b0ff0d47c4fe43b" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac38c7618d3785115bc23846cb9467c1c47aed3" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0246dc90c61834f8f68805d336ff0d8572fa626b" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f39f2cf0457f8fc36774fab71d2cb2b9a176149" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afbcb8068779030893a1b60ca2c43dae7c23d58" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd7a382dda44da205a7a510f5968c7b893ad503" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582daeccc0d049735bddd83c8d3deaffb198fff9" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2eaa51d829ca2ea126dda543effc2607e94d5a" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b6468cb37a8f65b0d199c209f0207ff4dab0bd" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b18e36197509e5d9d322c951009134bd0081b20" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c251dd7a30dd2e5f51b0056463f8b243cd74c75" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4778973d0189d9a2029d82ac76e855672f68be" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec137e93ff6e2c80fe4e98c47c53e3f194a0a019" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3fbf33d252554f00053ecda4eab0c7be17ad7f" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8676cb519444598ded6af2b95058fec4effc2922" translate="yes" xml:space="preserve">
          <source>def zipWithIndex: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
