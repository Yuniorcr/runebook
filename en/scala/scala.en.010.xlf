<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="e302efe9ef34202cce674921e096621ab69484ae" translate="yes" xml:space="preserve">
          <source>Function4.apply()</source>
          <target state="translated">Function4.apply()</target>
        </trans-unit>
        <trans-unit id="c2e3c8becfbcda2871b5268ed670b5a464291ae7" translate="yes" xml:space="preserve">
          <source>Function4.curried()</source>
          <target state="translated">Function4.curried()</target>
        </trans-unit>
        <trans-unit id="71d6349fecc5176f8a1cbddd15466071f7d153a5" translate="yes" xml:space="preserve">
          <source>Function4.scala</source>
          <target state="translated">Function4.scala</target>
        </trans-unit>
        <trans-unit id="d300883f356d322c2b5cac69dbf871d1a6ec1dcb" translate="yes" xml:space="preserve">
          <source>Function4.toString()</source>
          <target state="translated">Function4.toString()</target>
        </trans-unit>
        <trans-unit id="f75f55ad77f57eb07f7383e089f0eb1f8aa49350" translate="yes" xml:space="preserve">
          <source>Function4.tupled()</source>
          <target state="translated">Function4.tupled()</target>
        </trans-unit>
        <trans-unit id="0fa1c00cd123d28eceab058143bd41a907d3fb05" translate="yes" xml:space="preserve">
          <source>Function5</source>
          <target state="translated">Function5</target>
        </trans-unit>
        <trans-unit id="c24cab06435e6d6c3e3e99a844cd1c71f54fb887" translate="yes" xml:space="preserve">
          <source>Function5.apply()</source>
          <target state="translated">Function5.apply()</target>
        </trans-unit>
        <trans-unit id="f5999db7f2ab249e8cc30e9c762409f017ca422b" translate="yes" xml:space="preserve">
          <source>Function5.curried()</source>
          <target state="translated">Function5.curried()</target>
        </trans-unit>
        <trans-unit id="6dd7b52c6e0dc9796f57af2bd2ddf952ba8c8643" translate="yes" xml:space="preserve">
          <source>Function5.scala</source>
          <target state="translated">Function5.scala</target>
        </trans-unit>
        <trans-unit id="cb89bcb8b28952978ec3d96e35a0f45429c21039" translate="yes" xml:space="preserve">
          <source>Function5.toString()</source>
          <target state="translated">Function5.toString()</target>
        </trans-unit>
        <trans-unit id="2b5c83000380826532d6d867c4f83fb6c15cd0b7" translate="yes" xml:space="preserve">
          <source>Function5.tupled()</source>
          <target state="translated">Function5.tupled()</target>
        </trans-unit>
        <trans-unit id="0757c7413e6223f3be9e46395cce0d2385b381f7" translate="yes" xml:space="preserve">
          <source>Function6</source>
          <target state="translated">Function6</target>
        </trans-unit>
        <trans-unit id="ce31422f237ec4b9f55eb321eb59e084e8b906cb" translate="yes" xml:space="preserve">
          <source>Function6.apply()</source>
          <target state="translated">Function6.apply()</target>
        </trans-unit>
        <trans-unit id="f99f542d7755fec87d55356ac21ad2e613777d43" translate="yes" xml:space="preserve">
          <source>Function6.curried()</source>
          <target state="translated">Function6.curried()</target>
        </trans-unit>
        <trans-unit id="60515401375312cba50c62d99e1c62184d8cf59d" translate="yes" xml:space="preserve">
          <source>Function6.scala</source>
          <target state="translated">Function6.scala</target>
        </trans-unit>
        <trans-unit id="5439312d857c2e9b33c4dd0c3a6b4e01c8298b9a" translate="yes" xml:space="preserve">
          <source>Function6.toString()</source>
          <target state="translated">Function6.toString()</target>
        </trans-unit>
        <trans-unit id="faddf0415b459e36b40898812f74002a995fe68f" translate="yes" xml:space="preserve">
          <source>Function6.tupled()</source>
          <target state="translated">Function6.tupled()</target>
        </trans-unit>
        <trans-unit id="edb84d15f0ff15fcf1aee5fafae5d6eef17ea5df" translate="yes" xml:space="preserve">
          <source>Function7</source>
          <target state="translated">Function7</target>
        </trans-unit>
        <trans-unit id="ee180caec6cdab4ce8eb396071ae2b3246385c0f" translate="yes" xml:space="preserve">
          <source>Function7.apply()</source>
          <target state="translated">Function7.apply()</target>
        </trans-unit>
        <trans-unit id="e3c6f5caa029750a40b1dd3cffa8af717f490de6" translate="yes" xml:space="preserve">
          <source>Function7.curried()</source>
          <target state="translated">Function7.curried()</target>
        </trans-unit>
        <trans-unit id="25fdd7ba76ae9d9eb80c2e683887318fa24bc21b" translate="yes" xml:space="preserve">
          <source>Function7.scala</source>
          <target state="translated">Function7.scala</target>
        </trans-unit>
        <trans-unit id="c5aedece92e737960cec5ec916f2a54955e10bae" translate="yes" xml:space="preserve">
          <source>Function7.toString()</source>
          <target state="translated">Function7.toString()</target>
        </trans-unit>
        <trans-unit id="84e364ff593bffa3a48f9d9c1f5582af092cd40e" translate="yes" xml:space="preserve">
          <source>Function7.tupled()</source>
          <target state="translated">Function7.tupled()</target>
        </trans-unit>
        <trans-unit id="a9716069888e5aaf1ccfff88fd18409bcbb299d5" translate="yes" xml:space="preserve">
          <source>Function8</source>
          <target state="translated">Function8</target>
        </trans-unit>
        <trans-unit id="bddee435d68468257f0c664bca47fdb9e34247c5" translate="yes" xml:space="preserve">
          <source>Function8.apply()</source>
          <target state="translated">Function8.apply()</target>
        </trans-unit>
        <trans-unit id="8d2531f766a53d3bbe7d88d9e10cd30b9c487dfd" translate="yes" xml:space="preserve">
          <source>Function8.curried()</source>
          <target state="translated">Function8.curried()</target>
        </trans-unit>
        <trans-unit id="1470a63b2a2eb21b5d68a5b0b1c91f0e67c01ca8" translate="yes" xml:space="preserve">
          <source>Function8.scala</source>
          <target state="translated">Function8.scala</target>
        </trans-unit>
        <trans-unit id="d8bfa36df8cfea33993ec8e6ab1af4051c47b2dc" translate="yes" xml:space="preserve">
          <source>Function8.toString()</source>
          <target state="translated">Function8.toString()</target>
        </trans-unit>
        <trans-unit id="0a4c7a4aa8674fe9a640fb65c8ce6c1fd150789f" translate="yes" xml:space="preserve">
          <source>Function8.tupled()</source>
          <target state="translated">Function8.tupled()</target>
        </trans-unit>
        <trans-unit id="fe3edaaa8a20c4591a4b6d33ae55d31221cc4b57" translate="yes" xml:space="preserve">
          <source>Function9</source>
          <target state="translated">Function9</target>
        </trans-unit>
        <trans-unit id="0613d695ac534c91aac1eec6915f7375a5594d07" translate="yes" xml:space="preserve">
          <source>Function9.apply()</source>
          <target state="translated">Function9.apply()</target>
        </trans-unit>
        <trans-unit id="661850e0fd8f5f09f8f68a4e26ca4732729ff6d1" translate="yes" xml:space="preserve">
          <source>Function9.curried()</source>
          <target state="translated">Function9.curried()</target>
        </trans-unit>
        <trans-unit id="9ec27d766388c477cb52b7ffa21995a54ce43683" translate="yes" xml:space="preserve">
          <source>Function9.scala</source>
          <target state="translated">Function9.scala</target>
        </trans-unit>
        <trans-unit id="164447651953dcb28f51cff451e54cd7e20b078a" translate="yes" xml:space="preserve">
          <source>Function9.toString()</source>
          <target state="translated">Function9.toString()</target>
        </trans-unit>
        <trans-unit id="22d5925079ade6b94c0e746aa905cd90d4051cb5" translate="yes" xml:space="preserve">
          <source>Function9.tupled()</source>
          <target state="translated">Function9.tupled()</target>
        </trans-unit>
        <trans-unit id="0b68df56cb2f0e444e854bcdc6f33bc47ea198f2" translate="yes" xml:space="preserve">
          <source>FunctionConverters</source>
          <target state="translated">FunctionConverters</target>
        </trans-unit>
        <trans-unit id="01e4ab3c41e159dd511e4c0c2b0d544db4e5d9a6" translate="yes" xml:space="preserve">
          <source>FunctionConverters$</source>
          <target state="translated">FunctionConverters$</target>
        </trans-unit>
        <trans-unit id="e4f14cdb303ceb26c56b4ee899a9e5830cd75081" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaBiConsumer()</source>
          <target state="translated">FunctionConverters$.asJavaBiConsumer()</target>
        </trans-unit>
        <trans-unit id="4e7a4bbbdf9042f922de9f08a42fc70677e5ea27" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaBiFunction()</source>
          <target state="translated">FunctionConverters$.asJavaBiFunction()</target>
        </trans-unit>
        <trans-unit id="25e51e8d3fee2619016c63a1b0fefbf6c33fad29" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaBiPredicate()</source>
          <target state="translated">FunctionConverters$.asJavaBiPredicate()</target>
        </trans-unit>
        <trans-unit id="42bc9096f0b4b55fb431285e80aac6d9dd34bd8f" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaBinaryOperator()</source>
          <target state="translated">FunctionConverters$.asJavaBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="973b732647d8d903d2dcf4666e4a0175d4922187" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaBooleanSupplier()</source>
          <target state="translated">FunctionConverters$.asJavaBooleanSupplier()</target>
        </trans-unit>
        <trans-unit id="8261d37c80b2f4d413660a62d7def3e1d255afdc" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaConsumer()</source>
          <target state="translated">FunctionConverters$.asJavaConsumer()</target>
        </trans-unit>
        <trans-unit id="1b65e9e2cd58e197f6aa2e348912d2fcb5134f22" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaDoubleBinaryOperator()</source>
          <target state="translated">FunctionConverters$.asJavaDoubleBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="ec13dcfe2506ef02b338aae844d259dac88f28a7" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaDoubleConsumer()</source>
          <target state="translated">FunctionConverters$.asJavaDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="f2ce4ecec92cf9a528620cd0bdb95ee2f2194df1" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaDoubleFunction()</source>
          <target state="translated">FunctionConverters$.asJavaDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="883858b50ddff512ee976c37eaf4d35d5ec3542b" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaDoublePredicate()</source>
          <target state="translated">FunctionConverters$.asJavaDoublePredicate()</target>
        </trans-unit>
        <trans-unit id="44bce051ed4b01510643612b4cffb63a7cbdf12d" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaDoubleSupplier()</source>
          <target state="translated">FunctionConverters$.asJavaDoubleSupplier()</target>
        </trans-unit>
        <trans-unit id="6606a7e7bab6fc076dc3b62b3f90e2384abdeada" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaDoubleToIntFunction()</source>
          <target state="translated">FunctionConverters$.asJavaDoubleToIntFunction()</target>
        </trans-unit>
        <trans-unit id="e7cbd3650c0c9582d95d1e60d496f9666b4c7e63" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaDoubleToLongFunction()</source>
          <target state="translated">FunctionConverters$.asJavaDoubleToLongFunction()</target>
        </trans-unit>
        <trans-unit id="675358abf344ed8df7852f0051e4742e7685d01e" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaDoubleUnaryOperator()</source>
          <target state="translated">FunctionConverters$.asJavaDoubleUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="e7db2477dcea615d58ac83a667b615999d417ca9" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaFunction()</source>
          <target state="translated">FunctionConverters$.asJavaFunction()</target>
        </trans-unit>
        <trans-unit id="625e040318da1f44702637c5f4a50a4646091f7c" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaIntBinaryOperator()</source>
          <target state="translated">FunctionConverters$.asJavaIntBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="dcd06f5344a6dac8d1e958a8e85a09d2618e191d" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaIntConsumer()</source>
          <target state="translated">FunctionConverters$.asJavaIntConsumer()</target>
        </trans-unit>
        <trans-unit id="4047a70cea93c62646981e72862237544f8f3bec" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaIntFunction()</source>
          <target state="translated">FunctionConverters$.asJavaIntFunction()</target>
        </trans-unit>
        <trans-unit id="78f2c3c0a745ff05d1ec8215d3604c871ad5025d" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaIntPredicate()</source>
          <target state="translated">FunctionConverters$.asJavaIntPredicate()</target>
        </trans-unit>
        <trans-unit id="2993f89c2c9818264b1a60d6a525632b6ef0bcc5" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaIntSupplier()</source>
          <target state="translated">FunctionConverters$.asJavaIntSupplier()</target>
        </trans-unit>
        <trans-unit id="572f1204dd737fe2f2cfe59627df4a15672d1db1" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaIntToDoubleFunction()</source>
          <target state="translated">FunctionConverters$.asJavaIntToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="ed1f918a808a87d29cc73a201c30103fb9a7adf8" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaIntToLongFunction()</source>
          <target state="translated">FunctionConverters$.asJavaIntToLongFunction()</target>
        </trans-unit>
        <trans-unit id="03fea00a1d3f92219a69115ca20fd14511d6594e" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaIntUnaryOperator()</source>
          <target state="translated">FunctionConverters$.asJavaIntUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="7be3bcdb244287a16bdae19e1e98008d9026eccd" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaLongBinaryOperator()</source>
          <target state="translated">FunctionConverters$.asJavaLongBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="d219607948e9c12e906bdb1b2c0d51a658459047" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaLongConsumer()</source>
          <target state="translated">FunctionConverters$.asJavaLongConsumer()</target>
        </trans-unit>
        <trans-unit id="27ebabc9ce933254d837c4e6f04a7a873a53a804" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaLongFunction()</source>
          <target state="translated">FunctionConverters$.asJavaLongFunction()</target>
        </trans-unit>
        <trans-unit id="0339d50a02096871d1b3f4a8a15ef87603010bab" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaLongPredicate()</source>
          <target state="translated">FunctionConverters$.asJavaLongPredicate()</target>
        </trans-unit>
        <trans-unit id="08331ab53eabfb973eaf289f7e71dedffe356d01" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaLongSupplier()</source>
          <target state="translated">FunctionConverters$.asJavaLongSupplier()</target>
        </trans-unit>
        <trans-unit id="f72e514aaf5d6d0f456c825880744606f27c1e6c" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaLongToDoubleFunction()</source>
          <target state="translated">FunctionConverters$.asJavaLongToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="3cadae4ad8d8fe2273f4af1b26e6d8e6ba591111" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaLongToIntFunction()</source>
          <target state="translated">FunctionConverters$.asJavaLongToIntFunction()</target>
        </trans-unit>
        <trans-unit id="115fed65fac68b6a16d146dad6636eff9f9ba206" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaLongUnaryOperator()</source>
          <target state="translated">FunctionConverters$.asJavaLongUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="6aab0e167b064870ae40a9f535aa59eb7f77a4f6" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaObjDoubleConsumer()</source>
          <target state="translated">FunctionConverters$.asJavaObjDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="84004408f734f35ae22a46b68f360726e5e8e463" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaObjIntConsumer()</source>
          <target state="translated">FunctionConverters$.asJavaObjIntConsumer()</target>
        </trans-unit>
        <trans-unit id="4f5f91b19d5946d29ccda11e9ea5f18a9e02f800" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaObjLongConsumer()</source>
          <target state="translated">FunctionConverters$.asJavaObjLongConsumer()</target>
        </trans-unit>
        <trans-unit id="1da8d5ebe45a699ea2fe5d891ece059b54c3805c" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaPredicate()</source>
          <target state="translated">FunctionConverters$.asJavaPredicate()</target>
        </trans-unit>
        <trans-unit id="1ff922504e1d1431a821e4035e7c8ee29d9049da" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaSupplier()</source>
          <target state="translated">FunctionConverters$.asJavaSupplier()</target>
        </trans-unit>
        <trans-unit id="e9c9787ecab8ac053cf09767e68e7a4dd851d28b" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaToDoubleBiFunction()</source>
          <target state="translated">FunctionConverters$.asJavaToDoubleBiFunction()</target>
        </trans-unit>
        <trans-unit id="ed5f5d9a11a6f6c8084552cc10f5f2d010a94d8f" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaToDoubleFunction()</source>
          <target state="translated">FunctionConverters$.asJavaToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="04e9f204dee02e4c52f3f498246b10bb644ae4d6" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaToIntBiFunction()</source>
          <target state="translated">FunctionConverters$.asJavaToIntBiFunction()</target>
        </trans-unit>
        <trans-unit id="f5cd198fbb05f994daa6245ec73cfeecfbe6a2b7" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaToIntFunction()</source>
          <target state="translated">FunctionConverters$.asJavaToIntFunction()</target>
        </trans-unit>
        <trans-unit id="c1485b90b9dbc54cbff699ae3ff14c202e9a000d" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaToLongBiFunction()</source>
          <target state="translated">FunctionConverters$.asJavaToLongBiFunction()</target>
        </trans-unit>
        <trans-unit id="11a7a67808aa380e81db3afc350c552211b0bb90" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaToLongFunction()</source>
          <target state="translated">FunctionConverters$.asJavaToLongFunction()</target>
        </trans-unit>
        <trans-unit id="c55b96765197ad85162a59bf94dc47abaac545d2" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asJavaUnaryOperator()</source>
          <target state="translated">FunctionConverters$.asJavaUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="3e960fe3364d526512fe87a616990977712ff100" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromBiConsumer()</source>
          <target state="translated">FunctionConverters$.asScalaFromBiConsumer()</target>
        </trans-unit>
        <trans-unit id="cbf0cd1d03c2a8deb048a22a22df04bd075304d1" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromBiFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromBiFunction()</target>
        </trans-unit>
        <trans-unit id="9ebe3b743d7271a89ebbed9e81a2fd508e60d402" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromBiPredicate()</source>
          <target state="translated">FunctionConverters$.asScalaFromBiPredicate()</target>
        </trans-unit>
        <trans-unit id="dbd54dd8cf436d456cc46c0aad313694a01ae52d" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromBinaryOperator()</source>
          <target state="translated">FunctionConverters$.asScalaFromBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="1cc4b6ea0fa3e8fe9dec575ee19f531843a9c0e6" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromBooleanSupplier()</source>
          <target state="translated">FunctionConverters$.asScalaFromBooleanSupplier()</target>
        </trans-unit>
        <trans-unit id="9a32085f8345a2f6fff709c118f38b04798897ed" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromConsumer()</source>
          <target state="translated">FunctionConverters$.asScalaFromConsumer()</target>
        </trans-unit>
        <trans-unit id="3187458b7c324603fdee76a40877cb11c4b5a3ba" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromDoubleBinaryOperator()</source>
          <target state="translated">FunctionConverters$.asScalaFromDoubleBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="323a0d021fe4ffc9353f3cd4dbd1014b5a79686f" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromDoubleConsumer()</source>
          <target state="translated">FunctionConverters$.asScalaFromDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="f0279fc590b7ced2f22603bb7e49a7d88c3e6eb4" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromDoubleFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="8644f6cbbaa63ef8a20bb3046844a7449c805b33" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromDoublePredicate()</source>
          <target state="translated">FunctionConverters$.asScalaFromDoublePredicate()</target>
        </trans-unit>
        <trans-unit id="d1cefc6782fdf718c839cd7d1344495cc18275ea" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromDoubleSupplier()</source>
          <target state="translated">FunctionConverters$.asScalaFromDoubleSupplier()</target>
        </trans-unit>
        <trans-unit id="e85bd5cf43d859f6fa2be6b2d34d68aa08737f3b" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromDoubleToIntFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromDoubleToIntFunction()</target>
        </trans-unit>
        <trans-unit id="7098feff2e4a8b118c90b7fad05234deb636b5a6" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromDoubleToLongFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromDoubleToLongFunction()</target>
        </trans-unit>
        <trans-unit id="0e24910d87596d883a051720a3b1bbaa48a07a3a" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromDoubleUnaryOperator()</source>
          <target state="translated">FunctionConverters$.asScalaFromDoubleUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="75657a46623b92dca0604b062110bef441a0a3ec" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromFunction()</target>
        </trans-unit>
        <trans-unit id="cb0d938186ac6fb9028b36ce3ac027ba7e4c32d2" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromIntBinaryOperator()</source>
          <target state="translated">FunctionConverters$.asScalaFromIntBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="e31a8bac9e9e0675c9aaa1afb35b21c3be87c74b" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromIntConsumer()</source>
          <target state="translated">FunctionConverters$.asScalaFromIntConsumer()</target>
        </trans-unit>
        <trans-unit id="14e0d8009ebfc3eb2cc9fafbe855b1d7f3f0e555" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromIntFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromIntFunction()</target>
        </trans-unit>
        <trans-unit id="2fd5ca4acab00f0dfbe4445076e7d16d5afe979c" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromIntPredicate()</source>
          <target state="translated">FunctionConverters$.asScalaFromIntPredicate()</target>
        </trans-unit>
        <trans-unit id="85912201deb887d036e34714c7dbd10a1ecc7aaf" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromIntSupplier()</source>
          <target state="translated">FunctionConverters$.asScalaFromIntSupplier()</target>
        </trans-unit>
        <trans-unit id="bac231c8a8113a4d22db46ee043b301de737609d" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromIntToDoubleFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromIntToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="4b7a7400d4f61d4964819c89577086193a03bbf5" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromIntToLongFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromIntToLongFunction()</target>
        </trans-unit>
        <trans-unit id="e43d6890935351bcc43932cb936fea7332c37f85" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromIntUnaryOperator()</source>
          <target state="translated">FunctionConverters$.asScalaFromIntUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="ceb721dce507c68dbabca0b464b2ece013e41d38" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromLongBinaryOperator()</source>
          <target state="translated">FunctionConverters$.asScalaFromLongBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="77f5b15d87e2787fbe4294b382780c69951f5be8" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromLongConsumer()</source>
          <target state="translated">FunctionConverters$.asScalaFromLongConsumer()</target>
        </trans-unit>
        <trans-unit id="4b92b1d724a65be6b20cefd2410834afd04943ac" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromLongFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromLongFunction()</target>
        </trans-unit>
        <trans-unit id="e8054d7a068177d165e5d81bea09c193151398da" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromLongPredicate()</source>
          <target state="translated">FunctionConverters$.asScalaFromLongPredicate()</target>
        </trans-unit>
        <trans-unit id="7cf13fe1e698205ef96edb0053c24ab8a07d503a" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromLongSupplier()</source>
          <target state="translated">FunctionConverters$.asScalaFromLongSupplier()</target>
        </trans-unit>
        <trans-unit id="331be26c3dc8fb8b44942748170aa7ebc1840640" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromLongToDoubleFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromLongToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="1cc7934f1ce49242e590ed62ed57bf753495f754" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromLongToIntFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromLongToIntFunction()</target>
        </trans-unit>
        <trans-unit id="d59f8743fe0c94847e001fa64cc2a02a9ff942ec" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromLongUnaryOperator()</source>
          <target state="translated">FunctionConverters$.asScalaFromLongUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="72f5055f42edebdb2bd96d3d2680ff5e0ada6a77" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromObjDoubleConsumer()</source>
          <target state="translated">FunctionConverters$.asScalaFromObjDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="ea1c5c2be68f686951ee1ce2d5629d761ac2d267" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromObjIntConsumer()</source>
          <target state="translated">FunctionConverters$.asScalaFromObjIntConsumer()</target>
        </trans-unit>
        <trans-unit id="d5e60d59e4219943095c6c747fa667de35b444ea" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromObjLongConsumer()</source>
          <target state="translated">FunctionConverters$.asScalaFromObjLongConsumer()</target>
        </trans-unit>
        <trans-unit id="8c4a7d6a06badd8827e7cc7cb81621e0096a23f4" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromPredicate()</source>
          <target state="translated">FunctionConverters$.asScalaFromPredicate()</target>
        </trans-unit>
        <trans-unit id="c0957d50fed441d751f3b19c2398d5b731ef98f4" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromSupplier()</source>
          <target state="translated">FunctionConverters$.asScalaFromSupplier()</target>
        </trans-unit>
        <trans-unit id="13be663e8600033f4f04ed38c0d3c5203665263e" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromToDoubleBiFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromToDoubleBiFunction()</target>
        </trans-unit>
        <trans-unit id="5c2b71f8a4ff5992332bef94c1d9059157077a7c" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromToDoubleFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="2364461aabc5cc800ee13a1031714c5e96871418" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromToIntBiFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromToIntBiFunction()</target>
        </trans-unit>
        <trans-unit id="6e298325cf80e85c3f072a468bf015ed856d23b0" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromToIntFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromToIntFunction()</target>
        </trans-unit>
        <trans-unit id="d2bf8f8bb6210a9d6b7c1c186498735deea09400" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromToLongBiFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromToLongBiFunction()</target>
        </trans-unit>
        <trans-unit id="20c4a82255684df198c7934d06c45334141eec43" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromToLongFunction()</source>
          <target state="translated">FunctionConverters$.asScalaFromToLongFunction()</target>
        </trans-unit>
        <trans-unit id="d7d4346a10377643e4be45677a844a03152174b4" translate="yes" xml:space="preserve">
          <source>FunctionConverters$.asScalaFromUnaryOperator()</source>
          <target state="translated">FunctionConverters$.asScalaFromUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="84aa0c1eb2c8d6026b381e5000f293f39986a9ab" translate="yes" xml:space="preserve">
          <source>FunctionConverters.scala</source>
          <target state="translated">FunctionConverters.scala</target>
        </trans-unit>
        <trans-unit id="bdd54c1690f80472610825f766328e4f0225820b" translate="yes" xml:space="preserve">
          <source>FunctionExtensions.scala</source>
          <target state="translated">FunctionExtensions.scala</target>
        </trans-unit>
        <trans-unit id="624e167808307f60022a79988a9c13efb4b1272b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$</source>
          <target state="translated">FunctionWrappers$</target>
        </trans-unit>
        <trans-unit id="90f64d6904d2db7322c22b481bfbcc80ffb7475a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiConsumer</source>
          <target state="translated">FunctionWrappers$.AsJavaBiConsumer</target>
        </trans-unit>
        <trans-unit id="0f47ad991dc436245520dbf418100de764def8ef" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiConsumer()</target>
        </trans-unit>
        <trans-unit id="def2803ca2797ee1e62109f139f57c070d4ea00a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiConsumer.AsJavaBiConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiConsumer.AsJavaBiConsumer()</target>
        </trans-unit>
        <trans-unit id="c26842f1c278eeb1ffbf78c28d7a1289aff3905f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiConsumer.accept()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="142c8baa9d3f851c30b5daa2e46c26b3d92a7320" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiConsumer.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiConsumer.sf()</target>
        </trans-unit>
        <trans-unit id="a26f4c795586441c3217a8268d8c45fca71dd18d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaBiFunction</target>
        </trans-unit>
        <trans-unit id="d4dd1fac2a44a7579d5663a8a38a62545606400c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiFunction()</target>
        </trans-unit>
        <trans-unit id="c20a9ded079962579fa186c8663383290735d189" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiFunction.AsJavaBiFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiFunction.AsJavaBiFunction()</target>
        </trans-unit>
        <trans-unit id="92fd6ac7c2ca65efca51e24927eef8415083e72d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiFunction.apply()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiFunction.apply()</target>
        </trans-unit>
        <trans-unit id="9356f0a712576b0f77c87e08c98b073aff5f68ee" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiFunction.sf()</target>
        </trans-unit>
        <trans-unit id="cd3a0efd78d47dedf0f9aa66d2c21adef3740623" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiPredicate</source>
          <target state="translated">FunctionWrappers$.AsJavaBiPredicate</target>
        </trans-unit>
        <trans-unit id="21ab7dc492ca51812e4e557c224496d757f64017" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiPredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiPredicate()</target>
        </trans-unit>
        <trans-unit id="81fa971d497fddd399ac30503a9c6ae9ceb2faf4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiPredicate.AsJavaBiPredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiPredicate.AsJavaBiPredicate()</target>
        </trans-unit>
        <trans-unit id="59adbbe95e18aa1667cc2c34409a1b6f7f71af69" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiPredicate.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiPredicate.sf()</target>
        </trans-unit>
        <trans-unit id="3db5db48b027b25ed53f5617358c3cc1363af2d2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBiPredicate.test()</source>
          <target state="translated">FunctionWrappers$.AsJavaBiPredicate.test()</target>
        </trans-unit>
        <trans-unit id="6db65c2892be7db050d9586b1d05095a2243dd7b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBinaryOperator</source>
          <target state="translated">FunctionWrappers$.AsJavaBinaryOperator</target>
        </trans-unit>
        <trans-unit id="4594b0326aa661b23bac8f3d7d8b45370de9627d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="d49a808f0fc93f64c44fad338f4237c687c56f01" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBinaryOperator.AsJavaBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaBinaryOperator.AsJavaBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="b8fb56bdaa78cab230b9022a60f3ffaf6d5efff2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBinaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.AsJavaBinaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="77af668e4f1abf2efbadd4a37191d14a60453600" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBinaryOperator.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaBinaryOperator.sf()</target>
        </trans-unit>
        <trans-unit id="26a27aa50d4614724aadf5bcd80b02f187b6a04c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBooleanSupplier</source>
          <target state="translated">FunctionWrappers$.AsJavaBooleanSupplier</target>
        </trans-unit>
        <trans-unit id="2c9fa3bd8f31632e736eb6dfbeaa7e9a9a40bb8b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBooleanSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaBooleanSupplier()</target>
        </trans-unit>
        <trans-unit id="c225445053aaeed7206023f3313a506c79a577c5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBooleanSupplier.AsJavaBooleanSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaBooleanSupplier.AsJavaBooleanSupplier()</target>
        </trans-unit>
        <trans-unit id="70262391676b40e8d8c26fdadeee53ee81e1544a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBooleanSupplier.getAsBoolean()</source>
          <target state="translated">FunctionWrappers$.AsJavaBooleanSupplier.getAsBoolean()</target>
        </trans-unit>
        <trans-unit id="44e1e6c4cfede3a567167ed5105215901a27dade" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaBooleanSupplier.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaBooleanSupplier.sf()</target>
        </trans-unit>
        <trans-unit id="4f6428e02d417c2ba62a355aef12e3e5fc735654" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaConsumer</source>
          <target state="translated">FunctionWrappers$.AsJavaConsumer</target>
        </trans-unit>
        <trans-unit id="3527a16e45ef4541372050cb0692d20845ccb096" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaConsumer()</target>
        </trans-unit>
        <trans-unit id="8fee94a93add92fbbadd9b075d3f8aade6264deb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaConsumer.AsJavaConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaConsumer.AsJavaConsumer()</target>
        </trans-unit>
        <trans-unit id="a4382ace938edff2fb018cd07d1c02610c7d67e9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaConsumer.accept()</source>
          <target state="translated">FunctionWrappers$.AsJavaConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="4a74175b2c4c488a3bcea0bf98aa1f47eaba0e8e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaConsumer.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaConsumer.sf()</target>
        </trans-unit>
        <trans-unit id="25ac9587fa89f9e5cb201defc7c9a604ba21e818" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleBinaryOperator</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleBinaryOperator</target>
        </trans-unit>
        <trans-unit id="91b0ca07aa0f38f7ce391f751a82223c3ecbc062" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="3cca7fe4d22a2f947e5ce4db60125957a28047fc" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleBinaryOperator.AsJavaDoubleBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleBinaryOperator.AsJavaDoubleBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="d656a1574568ca6f420299607bc6180bffcd6b25" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleBinaryOperator.applyAsDouble()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleBinaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="443a14712a1dc15a5e28c2c2fcb9e11b4ff4156d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleBinaryOperator.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleBinaryOperator.sf()</target>
        </trans-unit>
        <trans-unit id="7a1723005ff3f09c073106a2f2c1454958f27e92" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleConsumer</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleConsumer</target>
        </trans-unit>
        <trans-unit id="0469f21fb9db38b0b4ff1185aa8f468a244db724" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="c2fa8b9e2b2a29797d2e63e60a3ec9db7da19fbb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleConsumer.AsJavaDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleConsumer.AsJavaDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="c56a25f8196b7144c5067d05cb64df05eb10796d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleConsumer.accept()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="00701c0dc3fae332433a687cd31dc6779684fc6e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleConsumer.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleConsumer.sf()</target>
        </trans-unit>
        <trans-unit id="50880816b0476e86968edc85b028b947c99b2279" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleFunction</target>
        </trans-unit>
        <trans-unit id="ef1c99d092e8188e75aab55011385f261e803d8e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="3b5239f43b232abf1ee3719f2161b892b2081a08" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleFunction.AsJavaDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleFunction.AsJavaDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="46e7950cda5831fb2ba71affca0ef16c9046a79e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleFunction.apply()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleFunction.apply()</target>
        </trans-unit>
        <trans-unit id="a2e1e7be35aac5c84cc473fa5924ab06df78a6f7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleFunction.sf()</target>
        </trans-unit>
        <trans-unit id="ec0f1410683c46c3fa3d2e779bbc81f51de1d39f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoublePredicate</source>
          <target state="translated">FunctionWrappers$.AsJavaDoublePredicate</target>
        </trans-unit>
        <trans-unit id="758dd3f7c031bf7a973232b60c8907a81939b84f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoublePredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoublePredicate()</target>
        </trans-unit>
        <trans-unit id="e3f55fbe0c7b18ccf97a9b474bc6356ef4287383" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoublePredicate.AsJavaDoublePredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoublePredicate.AsJavaDoublePredicate()</target>
        </trans-unit>
        <trans-unit id="7f8ee9df54b42fa7b6afc7a0e9d015e41484c812" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoublePredicate.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoublePredicate.sf()</target>
        </trans-unit>
        <trans-unit id="2e89903a28e87627770ff309489b631b0c018a7b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoublePredicate.test()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoublePredicate.test()</target>
        </trans-unit>
        <trans-unit id="0de272a47f0f1a6598f2350d958e8d837f2cf77a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleSupplier</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleSupplier</target>
        </trans-unit>
        <trans-unit id="bec08a3e6a3da81ee6a77c2df33839b4c0bebbd5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleSupplier()</target>
        </trans-unit>
        <trans-unit id="7302708fedb5b9b5a042b710be2dfe0123aeaf4e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleSupplier.AsJavaDoubleSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleSupplier.AsJavaDoubleSupplier()</target>
        </trans-unit>
        <trans-unit id="81d661b55b1e0a0b2b8d6d528ed976f50f1acfc4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleSupplier.getAsDouble()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleSupplier.getAsDouble()</target>
        </trans-unit>
        <trans-unit id="e7de0179d7a8d3deef47eaafc1aa6ecb457406ec" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleSupplier.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleSupplier.sf()</target>
        </trans-unit>
        <trans-unit id="4d7e6e136be8a6203a3bbb57ff1332fbece14047" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToIntFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToIntFunction</target>
        </trans-unit>
        <trans-unit id="757bc38b0d822df06f5edbcd2f666e81e6911db9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToIntFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToIntFunction()</target>
        </trans-unit>
        <trans-unit id="b5e8952fe5d95fbbe0845d1c5178b8e5f6d40ffd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToIntFunction.AsJavaDoubleToIntFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToIntFunction.AsJavaDoubleToIntFunction()</target>
        </trans-unit>
        <trans-unit id="6d60b5cbdeb9014391827653130a08643780fffd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToIntFunction.applyAsInt()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="c9dbbb3e1e96ed258ef54ff00b90c02b8563e79c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToIntFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToIntFunction.sf()</target>
        </trans-unit>
        <trans-unit id="3cf8e46198cd8c108b7a18ce088f94c115ab279e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToLongFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToLongFunction</target>
        </trans-unit>
        <trans-unit id="a137f3fd2a7a8c57670d6cefec8be2e3781e38ad" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToLongFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToLongFunction()</target>
        </trans-unit>
        <trans-unit id="9d4bca3f1cea620b5a81dd913927f0a57a95804f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToLongFunction.AsJavaDoubleToLongFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToLongFunction.AsJavaDoubleToLongFunction()</target>
        </trans-unit>
        <trans-unit id="30bf29a2767bccd240e4c5ed0a8b7e0e7cc48db7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToLongFunction.applyAsLong()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="0685abbb349f41ce039e316338696cba7cb4d87a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleToLongFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleToLongFunction.sf()</target>
        </trans-unit>
        <trans-unit id="3a46d1efcf7837c6b910e471a9b67cca4b0eaf13" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleUnaryOperator</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleUnaryOperator</target>
        </trans-unit>
        <trans-unit id="4c516fa0e859a2ea916e0928d717af8e4708879d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="a449b1ab3ad5b95ade1fae84ddf8e0c3c9fba24b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleUnaryOperator.AsJavaDoubleUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleUnaryOperator.AsJavaDoubleUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="613bfdfa9b6ae5de5d5b977a4d845d5bd5cfd15d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleUnaryOperator.applyAsDouble()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleUnaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="f1bc3bb524a3d84ceb17c8015819b1f3d6bd58b3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaDoubleUnaryOperator.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaDoubleUnaryOperator.sf()</target>
        </trans-unit>
        <trans-unit id="e74bcc2f92677ae36d79269134b5bb98c988d10f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaFunction</target>
        </trans-unit>
        <trans-unit id="a3d8a1234eb7de291d67242d32adccc359687b9a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaFunction()</target>
        </trans-unit>
        <trans-unit id="8efd3e5428eaf4c1b8ed1740e00ef5c3970cc0c9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaFunction.AsJavaFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaFunction.AsJavaFunction()</target>
        </trans-unit>
        <trans-unit id="26846bfab0c6cd4bcadb4eb1862d547a49f238b4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaFunction.apply()</source>
          <target state="translated">FunctionWrappers$.AsJavaFunction.apply()</target>
        </trans-unit>
        <trans-unit id="33a170576d1d665277fb390312d19d860f4b16f7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaFunction.sf()</target>
        </trans-unit>
        <trans-unit id="6b742da778f256c2e679f842d6e52f957675e9a8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntBinaryOperator</source>
          <target state="translated">FunctionWrappers$.AsJavaIntBinaryOperator</target>
        </trans-unit>
        <trans-unit id="84943b390e141c5337e9f2a53f0590960324e5e5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="92c35157ca11cb94d4e005d7b0a840c97f0add8c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntBinaryOperator.AsJavaIntBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntBinaryOperator.AsJavaIntBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="56e2dd758f314aeef30e27fd4db8ff4a8b2e41dd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntBinaryOperator.applyAsInt()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntBinaryOperator.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="66b6277bd4b98f6790c6549204ad7d3723f7e5df" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntBinaryOperator.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntBinaryOperator.sf()</target>
        </trans-unit>
        <trans-unit id="b3a4ee4258da4a10e245e94298b7c561356e7d56" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntConsumer</source>
          <target state="translated">FunctionWrappers$.AsJavaIntConsumer</target>
        </trans-unit>
        <trans-unit id="9c550febeb26297eecc6f6827afdf597ebd47774" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntConsumer()</target>
        </trans-unit>
        <trans-unit id="4d1aef7107199b50ff6a173a33162affe4f3acc0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntConsumer.AsJavaIntConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntConsumer.AsJavaIntConsumer()</target>
        </trans-unit>
        <trans-unit id="eb9262530b0ec481c6b25bea75554a72ff90f21b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntConsumer.accept()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="3c3d300831c9bf916b6a3159c43bbcfe3e479a45" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntConsumer.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntConsumer.sf()</target>
        </trans-unit>
        <trans-unit id="ee3ed136c2457ac934b429018e8aa633b0ba89f7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaIntFunction</target>
        </trans-unit>
        <trans-unit id="2f3422f417fa57c93bbf8cc0315eed5a405cb666" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntFunction()</target>
        </trans-unit>
        <trans-unit id="c40f7abda78720fffd9f7c19d374e7788b5f0116" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntFunction.AsJavaIntFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntFunction.AsJavaIntFunction()</target>
        </trans-unit>
        <trans-unit id="a756bbc97f3dc0fe021d9983ab08a16be1c9f5cd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntFunction.apply()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntFunction.apply()</target>
        </trans-unit>
        <trans-unit id="9f6580aa2e6ac9a5adcbd53ea2a35c18ec47cf77" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntFunction.sf()</target>
        </trans-unit>
        <trans-unit id="dcf2e4256f5b10c9653df0777cd466b936627c2f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntPredicate</source>
          <target state="translated">FunctionWrappers$.AsJavaIntPredicate</target>
        </trans-unit>
        <trans-unit id="c8abae79a83d4988e60d412f7cd199d56b9b9fdc" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntPredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntPredicate()</target>
        </trans-unit>
        <trans-unit id="ad5021ec0c626b5d92a7b3635a8a58bdc70e5fb5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntPredicate.AsJavaIntPredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntPredicate.AsJavaIntPredicate()</target>
        </trans-unit>
        <trans-unit id="ba3341ca2eead5b7aba11b967f9eeacdd1dfe087" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntPredicate.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntPredicate.sf()</target>
        </trans-unit>
        <trans-unit id="8e8524383820d8aaf525c8344b88c3b021a80ce2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntPredicate.test()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntPredicate.test()</target>
        </trans-unit>
        <trans-unit id="03cec87098171c836f3c8e52e071ef80636d0a29" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntSupplier</source>
          <target state="translated">FunctionWrappers$.AsJavaIntSupplier</target>
        </trans-unit>
        <trans-unit id="68f4710c7b9d0979d3ffba9be1f0e67a1cfeb35d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntSupplier()</target>
        </trans-unit>
        <trans-unit id="743af462ab66b7cc83c90a25f8d6010b26392d09" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntSupplier.AsJavaIntSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntSupplier.AsJavaIntSupplier()</target>
        </trans-unit>
        <trans-unit id="47151f5c86f9a5eee1030a7968097b00ca98cb3b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntSupplier.getAsInt()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntSupplier.getAsInt()</target>
        </trans-unit>
        <trans-unit id="0dcb008b8cebd25395a82988817c0d9b1f4e6904" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntSupplier.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntSupplier.sf()</target>
        </trans-unit>
        <trans-unit id="6a4c8afce262bdaa45413d4ce4c49b68f9c04f5d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToDoubleFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="b2cdda896d9fe32ab46f003ebba8062b779840b3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="d5227881e796f2af80ceaee94234aa0426435615" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToDoubleFunction.AsJavaIntToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToDoubleFunction.AsJavaIntToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="b7120aea2169ab6c853a1a5d12d3a72bd83be5d8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToDoubleFunction.applyAsDouble()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToDoubleFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="4dc8300621f3d58de413203760575b5b1a5f541b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToDoubleFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToDoubleFunction.sf()</target>
        </trans-unit>
        <trans-unit id="b7c4eb543d4b7d8fe6dc179c9e89ffdf2769acc4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToLongFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToLongFunction</target>
        </trans-unit>
        <trans-unit id="72e7d7dcace96646da848fa6a553e93d7b3eb884" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToLongFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToLongFunction()</target>
        </trans-unit>
        <trans-unit id="0be703b581735f99182cda44ef715994c2fe6a26" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToLongFunction.AsJavaIntToLongFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToLongFunction.AsJavaIntToLongFunction()</target>
        </trans-unit>
        <trans-unit id="e4fbb701234ad27d212fb726e207296e7d2052f7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToLongFunction.applyAsLong()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="96c3bff25c8b577245b227cbf7b29fc753ae9c24" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntToLongFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntToLongFunction.sf()</target>
        </trans-unit>
        <trans-unit id="f432b7505e1dbdd26e4b5e99efc12f3f2676645c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntUnaryOperator</source>
          <target state="translated">FunctionWrappers$.AsJavaIntUnaryOperator</target>
        </trans-unit>
        <trans-unit id="22094055e5ede34695470bc70b1e31d348946212" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="8cbc91cd6f55ed08d6e0f42b363e689ec6e4788d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntUnaryOperator.AsJavaIntUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntUnaryOperator.AsJavaIntUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="b789ca65c7713d8529a1e6216c745cddfc068b0b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntUnaryOperator.applyAsInt()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntUnaryOperator.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="3d8e0da66dabcf3220127d399ccd782400170620" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaIntUnaryOperator.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaIntUnaryOperator.sf()</target>
        </trans-unit>
        <trans-unit id="ac0b7a3abfcdf56193a9cdad574091321997d6bd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongBinaryOperator</source>
          <target state="translated">FunctionWrappers$.AsJavaLongBinaryOperator</target>
        </trans-unit>
        <trans-unit id="1248019f34a5b4b03816e3a3a2f06744892c6199" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="44ac4aada3ed26c5e4197c0a73aa8b26bb5698f2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongBinaryOperator.AsJavaLongBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongBinaryOperator.AsJavaLongBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="69590af0fb68847d471710dffef1894106b6689f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongBinaryOperator.applyAsLong()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongBinaryOperator.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="a4a02e590fd63205c45e3cbb0cb1744c3a5f497d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongBinaryOperator.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongBinaryOperator.sf()</target>
        </trans-unit>
        <trans-unit id="554da71d2a8cc2ba3e4656d62497146ad48f080d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongConsumer</source>
          <target state="translated">FunctionWrappers$.AsJavaLongConsumer</target>
        </trans-unit>
        <trans-unit id="a48dea366d2a8ea0b419b5ca240c0566cb3db4fe" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongConsumer()</target>
        </trans-unit>
        <trans-unit id="06bf07972ef923b21fe161b43b90ce6eb87c09ab" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongConsumer.AsJavaLongConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongConsumer.AsJavaLongConsumer()</target>
        </trans-unit>
        <trans-unit id="7e101479019fd8b042cd9fc050adfae419d852b4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongConsumer.accept()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="4f77b646689ffec4669c19df314eaca6881bc6ff" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongConsumer.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongConsumer.sf()</target>
        </trans-unit>
        <trans-unit id="0497c21eb966a8763f997458a466cafb17f64db5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaLongFunction</target>
        </trans-unit>
        <trans-unit id="651976fcca468aa30899d901f567c01c2789a057" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongFunction()</target>
        </trans-unit>
        <trans-unit id="940ed7876803f836e3d9aa5daf5f486aeb05c676" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongFunction.AsJavaLongFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongFunction.AsJavaLongFunction()</target>
        </trans-unit>
        <trans-unit id="e2fe6be4b2ab42806575f8a8b9fd050c2b85071e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongFunction.apply()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongFunction.apply()</target>
        </trans-unit>
        <trans-unit id="9c3521f2f644254c22a97f6bd10dc61f15cb0908" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongFunction.sf()</target>
        </trans-unit>
        <trans-unit id="e354c6f4da35fabd9fc270f04146cf963f4a33b3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongPredicate</source>
          <target state="translated">FunctionWrappers$.AsJavaLongPredicate</target>
        </trans-unit>
        <trans-unit id="98250834efd60934d7e826227dfdaae939f04607" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongPredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongPredicate()</target>
        </trans-unit>
        <trans-unit id="217fb976f56a206ed688835622efdc01315ab24f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongPredicate.AsJavaLongPredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongPredicate.AsJavaLongPredicate()</target>
        </trans-unit>
        <trans-unit id="d1a9950e022a41405237eefa9ac4abd5744fe964" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongPredicate.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongPredicate.sf()</target>
        </trans-unit>
        <trans-unit id="e147bb0b477fcee22da63d6e040b45833c0abca1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongPredicate.test()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongPredicate.test()</target>
        </trans-unit>
        <trans-unit id="34e365b604ec2f0b2b8a9e0c0e6a86c4623f8fcb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongSupplier</source>
          <target state="translated">FunctionWrappers$.AsJavaLongSupplier</target>
        </trans-unit>
        <trans-unit id="652349c25fbb70052365bc8df84d3298a79fc126" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongSupplier()</target>
        </trans-unit>
        <trans-unit id="0e74e28541337b68999aeadf47a733e1fa1702d5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongSupplier.AsJavaLongSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongSupplier.AsJavaLongSupplier()</target>
        </trans-unit>
        <trans-unit id="93639a394813729c4550cb784e37ed6512b36bf9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongSupplier.getAsLong()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongSupplier.getAsLong()</target>
        </trans-unit>
        <trans-unit id="010d037001139127179d7223fae3da92bf901ced" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongSupplier.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongSupplier.sf()</target>
        </trans-unit>
        <trans-unit id="d44a89e7cfa49bc0c254a4135f032190541daa0b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToDoubleFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="23f942c1c4bd84b624dc1ee7d3cf645248744bcf" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="11718f756df6e543d889032cf593a7a547813202" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToDoubleFunction.AsJavaLongToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToDoubleFunction.AsJavaLongToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="3a26e5d80154c09c4343b2dfa66256eb9730ced2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToDoubleFunction.applyAsDouble()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToDoubleFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="d60142d1b0255da4c22a93a0321ce9595b00d4a9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToDoubleFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToDoubleFunction.sf()</target>
        </trans-unit>
        <trans-unit id="3212f50c4493803e7c535d73749f3c186686bf64" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToIntFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToIntFunction</target>
        </trans-unit>
        <trans-unit id="8c7ad7d9007dd9da4b99a0e6224e3c794fd4d25a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToIntFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToIntFunction()</target>
        </trans-unit>
        <trans-unit id="50a653c012698e2c25ff5e783dace4eb77d51b44" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToIntFunction.AsJavaLongToIntFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToIntFunction.AsJavaLongToIntFunction()</target>
        </trans-unit>
        <trans-unit id="50d728a3bd39fb7371afeee8258c9a568b8f0c11" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToIntFunction.applyAsInt()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="c032354472725084fc657744b8cf5c39f5457f4e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongToIntFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongToIntFunction.sf()</target>
        </trans-unit>
        <trans-unit id="cd62b6821b5a205a98ab347686810ddfdc6490e2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongUnaryOperator</source>
          <target state="translated">FunctionWrappers$.AsJavaLongUnaryOperator</target>
        </trans-unit>
        <trans-unit id="00c5b3adfacb4647d74c0d08e4e949f8132c893c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="7692da9bdff9b6bf0ce929e00e4912887b1ff545" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongUnaryOperator.AsJavaLongUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongUnaryOperator.AsJavaLongUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="2e7a324628150283d68caf35b387cbbbba61b35f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongUnaryOperator.applyAsLong()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongUnaryOperator.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="490daa9cd586cfd637f819b87722b4372a673ce0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaLongUnaryOperator.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaLongUnaryOperator.sf()</target>
        </trans-unit>
        <trans-unit id="42d68e3e857426e2cb7497660087ba1092b83eed" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjDoubleConsumer</source>
          <target state="translated">FunctionWrappers$.AsJavaObjDoubleConsumer</target>
        </trans-unit>
        <trans-unit id="7b03866240f0a80701eee3b3838915bb32c1970c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="f0cd836e78de4e3370baf1a5b415cb4f9a41711c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjDoubleConsumer.AsJavaObjDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjDoubleConsumer.AsJavaObjDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="e01097aa859d0a2c76da7f901f0e8ef0e7074e32" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjDoubleConsumer.accept()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjDoubleConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="99f887cb003a6b0097334636a64192a6ce9b170d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjDoubleConsumer.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjDoubleConsumer.sf()</target>
        </trans-unit>
        <trans-unit id="68184793e7446836b4d1c10ee34a949c71818fce" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjIntConsumer</source>
          <target state="translated">FunctionWrappers$.AsJavaObjIntConsumer</target>
        </trans-unit>
        <trans-unit id="fdbdba3573efe48d381a98b4397042601180b299" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjIntConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjIntConsumer()</target>
        </trans-unit>
        <trans-unit id="13ee3dbdda93870a9ca9dbd89b5fd6210fd45ac8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjIntConsumer.AsJavaObjIntConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjIntConsumer.AsJavaObjIntConsumer()</target>
        </trans-unit>
        <trans-unit id="76254de3ed4779c01113b94de849410210f186a6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjIntConsumer.accept()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjIntConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="3742d0717791c056a5e518265ad86a4babda1771" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjIntConsumer.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjIntConsumer.sf()</target>
        </trans-unit>
        <trans-unit id="6a204a58f755202fe7d17806bc8be71505225b93" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjLongConsumer</source>
          <target state="translated">FunctionWrappers$.AsJavaObjLongConsumer</target>
        </trans-unit>
        <trans-unit id="fdcab0bba8bf75c64d955f246293251f3af8aee8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjLongConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjLongConsumer()</target>
        </trans-unit>
        <trans-unit id="959dea82d51a235df9cb43a4f7cced08e90dee7b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjLongConsumer.AsJavaObjLongConsumer()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjLongConsumer.AsJavaObjLongConsumer()</target>
        </trans-unit>
        <trans-unit id="c57e6b5d26a1afa8c98e37ed184bee34df9abc54" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjLongConsumer.accept()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjLongConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="ca59b0dca27ed066842c2381f3137dd174823a94" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaObjLongConsumer.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaObjLongConsumer.sf()</target>
        </trans-unit>
        <trans-unit id="1df13504155b7be7b532e0e21cc002fccc046f39" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaPredicate</source>
          <target state="translated">FunctionWrappers$.AsJavaPredicate</target>
        </trans-unit>
        <trans-unit id="2a73aee76daf3800e64f3011faad819c817fd661" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaPredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaPredicate()</target>
        </trans-unit>
        <trans-unit id="db299f43fa567cd408526141fe66bab0a9453604" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaPredicate.AsJavaPredicate()</source>
          <target state="translated">FunctionWrappers$.AsJavaPredicate.AsJavaPredicate()</target>
        </trans-unit>
        <trans-unit id="f329d30719be3e5e1c2ac077b28ae0aacd079f47" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaPredicate.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaPredicate.sf()</target>
        </trans-unit>
        <trans-unit id="c306b8bada0ba7019390b511639d5300681a52cb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaPredicate.test()</source>
          <target state="translated">FunctionWrappers$.AsJavaPredicate.test()</target>
        </trans-unit>
        <trans-unit id="0a45f5b4ba7edbc114fc01238179a5e307180b26" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaSupplier</source>
          <target state="translated">FunctionWrappers$.AsJavaSupplier</target>
        </trans-unit>
        <trans-unit id="6d7eaa2a66167bf611b155c1ef1e17f8ffc2070e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaSupplier()</target>
        </trans-unit>
        <trans-unit id="9ed31fa9eae2c6869428fa5e65897616b6ca6aa0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaSupplier.AsJavaSupplier()</source>
          <target state="translated">FunctionWrappers$.AsJavaSupplier.AsJavaSupplier()</target>
        </trans-unit>
        <trans-unit id="524fcfedd1414be021403b73da49c4ec6fa8f751" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaSupplier.get()</source>
          <target state="translated">FunctionWrappers$.AsJavaSupplier.get()</target>
        </trans-unit>
        <trans-unit id="056a1c16a608de3d26782f81452a242080119868" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaSupplier.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaSupplier.sf()</target>
        </trans-unit>
        <trans-unit id="21a7577f8b7db916ef8dc021a7454b3fda4b8f8a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleBiFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleBiFunction</target>
        </trans-unit>
        <trans-unit id="c32f77bfc1f4f82a795ebef71d52af65a0a9545a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleBiFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleBiFunction()</target>
        </trans-unit>
        <trans-unit id="f09e3d5e6edf84d56ebc45156e6e10b074fd9619" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleBiFunction.AsJavaToDoubleBiFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleBiFunction.AsJavaToDoubleBiFunction()</target>
        </trans-unit>
        <trans-unit id="56873ad1c9ee137b69156c60cfea5c53839348e4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleBiFunction.applyAsDouble()</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleBiFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="e6380e258ad9b90ad98b7b828d62975b4bd90d50" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleBiFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleBiFunction.sf()</target>
        </trans-unit>
        <trans-unit id="4e347e508af07cda8e17e68ddb161452c5c3b1d4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="28a7e1cd9b9aebdb906faad4b3e9427e8ce56fe0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="753d294154ec7195f2d5be3eb720b64abd1cd1f7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleFunction.AsJavaToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleFunction.AsJavaToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="4dfab7d3f931a24de4ba428117f6ce9d8169bb14" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleFunction.applyAsDouble()</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="fd950e3d9833dac2f5b956a01f85244948e58273" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToDoubleFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaToDoubleFunction.sf()</target>
        </trans-unit>
        <trans-unit id="49a3690b48a60d5f4b8dd747a6b0072abaf57444" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntBiFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntBiFunction</target>
        </trans-unit>
        <trans-unit id="e1fc5a797f35013a1db8564473f9355c06a065a3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntBiFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntBiFunction()</target>
        </trans-unit>
        <trans-unit id="0af45354612591512966632c613adc7232b3cf2e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntBiFunction.AsJavaToIntBiFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntBiFunction.AsJavaToIntBiFunction()</target>
        </trans-unit>
        <trans-unit id="7c4eb901fabad7549380ed22a575d590feb5bf12" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntBiFunction.applyAsInt()</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntBiFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="b2dc4fc2d4b596cc6b591badae04a4fc6c1923a5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntBiFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntBiFunction.sf()</target>
        </trans-unit>
        <trans-unit id="a016c64b0296937ab68e04ee1f433f2a7c01463c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntFunction</target>
        </trans-unit>
        <trans-unit id="5fd0a5482dcb84f49de2528c41851210832d2e7c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntFunction()</target>
        </trans-unit>
        <trans-unit id="8a08b64e2a6e597f44f5b33653f9481dc9f2c54e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntFunction.AsJavaToIntFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntFunction.AsJavaToIntFunction()</target>
        </trans-unit>
        <trans-unit id="f3823cd51538f474162c07a62a1fc73e106dc121" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntFunction.applyAsInt()</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="88b5b96fe761f3059e7723c4eff5db789257ab92" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToIntFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaToIntFunction.sf()</target>
        </trans-unit>
        <trans-unit id="c8b5304e3e9f6e509c81c287cd0635d1b9130ad1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongBiFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongBiFunction</target>
        </trans-unit>
        <trans-unit id="92e6ffadcd9b9e2e14f2a51b11100fc5105111b3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongBiFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongBiFunction()</target>
        </trans-unit>
        <trans-unit id="3f7bc78343efa78794fafe408d1b614d3ea7c404" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongBiFunction.AsJavaToLongBiFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongBiFunction.AsJavaToLongBiFunction()</target>
        </trans-unit>
        <trans-unit id="10bc891ee283a0c084809320db33ce1a3a9afc60" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongBiFunction.applyAsLong()</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongBiFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="4f2d5c0587c3edf21253cff6bee77d410d7fc0f0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongBiFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongBiFunction.sf()</target>
        </trans-unit>
        <trans-unit id="808b7bffa3950221ee0be6e34a2a2e409047dbd5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongFunction</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongFunction</target>
        </trans-unit>
        <trans-unit id="792ec477bc21350d9a63dfe9660dfa6977a01515" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongFunction()</target>
        </trans-unit>
        <trans-unit id="cbc82da382b8d7a185cb76742e1aebdc6389457b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongFunction.AsJavaToLongFunction()</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongFunction.AsJavaToLongFunction()</target>
        </trans-unit>
        <trans-unit id="df50bbf0da3760cd17b8609ba80b7dda9f7929b1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongFunction.applyAsLong()</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="98addcbeaea73858cd313b31d7a7014da35f0440" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaToLongFunction.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaToLongFunction.sf()</target>
        </trans-unit>
        <trans-unit id="f215034d2b9f71cb78d6aeb5781cb5c62a65ebe2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaUnaryOperator</source>
          <target state="translated">FunctionWrappers$.AsJavaUnaryOperator</target>
        </trans-unit>
        <trans-unit id="4df38bbd1650b018715c815a0f3c9039bb509725" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="60a036d54fa51676c4652996d2fe8ff1b6813e06" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaUnaryOperator.AsJavaUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.AsJavaUnaryOperator.AsJavaUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="8059440236babc03fda5da1b3b1f6f10de2b511e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaUnaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.AsJavaUnaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="a66ba1268003af3c22fd198fb84c6e33b9da5bd6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.AsJavaUnaryOperator.sf()</source>
          <target state="translated">FunctionWrappers$.AsJavaUnaryOperator.sf()</target>
        </trans-unit>
        <trans-unit id="2350289fcc4ae99ce14142a1f8b51e9258dc7ef4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiConsumer</source>
          <target state="translated">FunctionWrappers$.FromJavaBiConsumer</target>
        </trans-unit>
        <trans-unit id="014628377ad4e9bf9915e3bde5f17866e7043e3a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiConsumer()</target>
        </trans-unit>
        <trans-unit id="bdd1294f5824bbe3bd13727f0c01bb1692a06048" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiConsumer.FromJavaBiConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiConsumer.FromJavaBiConsumer()</target>
        </trans-unit>
        <trans-unit id="17146c5bfc07b86d953af25892be90ec136cfa9a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiConsumer.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiConsumer.apply()</target>
        </trans-unit>
        <trans-unit id="dc037a8d03ce8dbbef895dd1281af056d2021dd8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiConsumer.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiConsumer.jf()</target>
        </trans-unit>
        <trans-unit id="b5dead63e45cd83884a599b4c1f5de3904354fa2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaBiFunction</target>
        </trans-unit>
        <trans-unit id="182e88b693845fb9c11d03159533f85725177119" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiFunction()</target>
        </trans-unit>
        <trans-unit id="807533902618cb6d3ed91317be340cc54045adb0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiFunction.FromJavaBiFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiFunction.FromJavaBiFunction()</target>
        </trans-unit>
        <trans-unit id="5fffeeb22294dfc6a48dea6e13946b02fcfd4124" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiFunction.apply()</target>
        </trans-unit>
        <trans-unit id="5c2dbb76814c8635c81b769086ce724c0f838c7e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiFunction.jf()</target>
        </trans-unit>
        <trans-unit id="61784b43824d32d2f833bc37112dcf51d76c0f4f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiPredicate</source>
          <target state="translated">FunctionWrappers$.FromJavaBiPredicate</target>
        </trans-unit>
        <trans-unit id="80b99fdc0a720e6df56e24972618e130e0d11724" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiPredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiPredicate()</target>
        </trans-unit>
        <trans-unit id="3538d04d7f2c24807402a30719cd089622fa0b57" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiPredicate.FromJavaBiPredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiPredicate.FromJavaBiPredicate()</target>
        </trans-unit>
        <trans-unit id="f7369d3d3c2ce85878167059ecec536110019a01" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiPredicate.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiPredicate.apply()</target>
        </trans-unit>
        <trans-unit id="5e8b7b908dc97ef3ab482f11553d946fdc01a4d9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBiPredicate.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaBiPredicate.jf()</target>
        </trans-unit>
        <trans-unit id="7f59d23b4d526a1b6b5753c5b772e19fbdf1d550" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBinaryOperator</source>
          <target state="translated">FunctionWrappers$.FromJavaBinaryOperator</target>
        </trans-unit>
        <trans-unit id="bbc82b6b9c2a4989c86bfd7320cc38530ac55503" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="e36b7861d4c16fcdb879864541ba524743306feb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBinaryOperator.FromJavaBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaBinaryOperator.FromJavaBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="985b187f843515e9ea6a0fa6359b0a59717f9c56" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBinaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaBinaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="aac96d35467dc125d00fade4ec69cd0086bfc6af" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBinaryOperator.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaBinaryOperator.jf()</target>
        </trans-unit>
        <trans-unit id="ad7c53db4b4570d97bfd7aa34268a73b9b2c94ca" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBooleanSupplier</source>
          <target state="translated">FunctionWrappers$.FromJavaBooleanSupplier</target>
        </trans-unit>
        <trans-unit id="e895a89c58a59b5bff53fc98fd2c1f78678bd611" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBooleanSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaBooleanSupplier()</target>
        </trans-unit>
        <trans-unit id="df34e731debb9b2ee85a1c9473c15527607d72ce" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBooleanSupplier.FromJavaBooleanSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaBooleanSupplier.FromJavaBooleanSupplier()</target>
        </trans-unit>
        <trans-unit id="153218cd3d7a110ec96078032f7baa4e387ae844" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBooleanSupplier.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaBooleanSupplier.apply()</target>
        </trans-unit>
        <trans-unit id="15c803197f0fc87ff6ebfd0e07c151dde6f6f19f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaBooleanSupplier.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaBooleanSupplier.jf()</target>
        </trans-unit>
        <trans-unit id="bf35f06b7a76ce35f572e11c3b36f5e9c7fca8d4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaConsumer</source>
          <target state="translated">FunctionWrappers$.FromJavaConsumer</target>
        </trans-unit>
        <trans-unit id="2ee769cb29a236b3ae97e5af897e5b4da76e0190" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaConsumer()</target>
        </trans-unit>
        <trans-unit id="6c00889b708ec414f32d0db0ea5ca7408ce1ac6f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaConsumer.FromJavaConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaConsumer.FromJavaConsumer()</target>
        </trans-unit>
        <trans-unit id="5d98f6f2dbaff6b163055054ebcdc2d80dbc4a65" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaConsumer.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaConsumer.apply()</target>
        </trans-unit>
        <trans-unit id="fbe78c1de26d07d4009b0959cd1468d7208c26c9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaConsumer.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaConsumer.jf()</target>
        </trans-unit>
        <trans-unit id="0875ac701bd4212e5510db15bb173d7567c11e7c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleBinaryOperator</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleBinaryOperator</target>
        </trans-unit>
        <trans-unit id="5ab66517e2728eb39d0c2c81b1e44439f9082348" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="d6759e3de24c9fedf54921eaedff48cbdb75d839" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleBinaryOperator.FromJavaDoubleBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleBinaryOperator.FromJavaDoubleBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="fe03c75cc2286d8043c2f3657b6ea96038bf9525" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleBinaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleBinaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="e3a9ba53703d286fdad75d536f9dee13e5f96d3b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleBinaryOperator.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleBinaryOperator.jf()</target>
        </trans-unit>
        <trans-unit id="29ddd2c25042d89bb8a8f85f08cc9e6ccbf750ad" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleConsumer</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleConsumer</target>
        </trans-unit>
        <trans-unit id="feb1d0e33113b609da3f23cb8a8f8df7ba5b0dc9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="0fb128b8c002274878d228b508bcdf7a8d2b6bcb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleConsumer.FromJavaDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleConsumer.FromJavaDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="ada7ef8021225be5b9a3d9b22648bd1beea87478" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleConsumer.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleConsumer.apply()</target>
        </trans-unit>
        <trans-unit id="8c6b98ad9df89704255b46ff0fbeaa532f602471" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleConsumer.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleConsumer.jf()</target>
        </trans-unit>
        <trans-unit id="f369128736d7d07f685f727a2d9de84ffb570b75" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleFunction</target>
        </trans-unit>
        <trans-unit id="d4efca027dcc1dab3a4f6808aef593c94146dfa5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="ddfd2add98664224832c9b9e51234f16715ae5c0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleFunction.FromJavaDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleFunction.FromJavaDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="2c8f4e47d269299f65395320f33e2a1a61e512de" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleFunction.apply()</target>
        </trans-unit>
        <trans-unit id="db8c7a75f5b858bfe8955bd89c9ce0fa143172a1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleFunction.jf()</target>
        </trans-unit>
        <trans-unit id="dc6683d422971b076f11316c7715df40b052d89a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoublePredicate</source>
          <target state="translated">FunctionWrappers$.FromJavaDoublePredicate</target>
        </trans-unit>
        <trans-unit id="231ea06249b82a3b4541eae9f4aaaa2655b6117a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoublePredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoublePredicate()</target>
        </trans-unit>
        <trans-unit id="9321bcaa10910b9b2686b17d1bd97c958287bfc6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoublePredicate.FromJavaDoublePredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoublePredicate.FromJavaDoublePredicate()</target>
        </trans-unit>
        <trans-unit id="a90e1bde9c94bdde92d5318cdafcc3cb63dc8af4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoublePredicate.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoublePredicate.apply()</target>
        </trans-unit>
        <trans-unit id="381b3ecd88ea7d6860024a7126b78aa7c77ca144" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoublePredicate.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoublePredicate.jf()</target>
        </trans-unit>
        <trans-unit id="f06bb7c47b9a1d607af19cedecbe96143f5221d8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleSupplier</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleSupplier</target>
        </trans-unit>
        <trans-unit id="208355cdac0c734ffdaa876037c21614ee4dfad4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleSupplier()</target>
        </trans-unit>
        <trans-unit id="a8a9ed70748eee127d29ab41aa7d11f2c67b8c0f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleSupplier.FromJavaDoubleSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleSupplier.FromJavaDoubleSupplier()</target>
        </trans-unit>
        <trans-unit id="b07ef69c19e97285b332a75d31f402d94d23d794" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleSupplier.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleSupplier.apply()</target>
        </trans-unit>
        <trans-unit id="dd16cc66e4faa6212e4cbac5cba3fb726c9c398e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleSupplier.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleSupplier.jf()</target>
        </trans-unit>
        <trans-unit id="7e1cee4f19a0952f8d0eed6faa04a9cccfc5e7c2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToIntFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToIntFunction</target>
        </trans-unit>
        <trans-unit id="e42c15a5cd2506923c07d8c6d06db80f09748574" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToIntFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToIntFunction()</target>
        </trans-unit>
        <trans-unit id="e8af55fceec00d0736f22e5d35eb63e5c9c5fb17" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToIntFunction.FromJavaDoubleToIntFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToIntFunction.FromJavaDoubleToIntFunction()</target>
        </trans-unit>
        <trans-unit id="0e70f1937f69529947d145ee1ccb597edb9cde63" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToIntFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToIntFunction.apply()</target>
        </trans-unit>
        <trans-unit id="f8353d5b04a895af7ac0ca94017dc26fdd90d3b6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToIntFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToIntFunction.jf()</target>
        </trans-unit>
        <trans-unit id="7976a6d124581341f0a65606bb5c918fe72915a6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToLongFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToLongFunction</target>
        </trans-unit>
        <trans-unit id="464db2a6dfd09c3b0978d8cb68642d74532e8f96" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToLongFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToLongFunction()</target>
        </trans-unit>
        <trans-unit id="776d4ab3bfacdb9492e032e7bd2db7218ea0cc0e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToLongFunction.FromJavaDoubleToLongFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToLongFunction.FromJavaDoubleToLongFunction()</target>
        </trans-unit>
        <trans-unit id="fffb90b02b3d49835ee4d8b8a9344a98fd69a3b7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToLongFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToLongFunction.apply()</target>
        </trans-unit>
        <trans-unit id="fd26376b6f8e693936638de8391ef6a25f185afb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleToLongFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleToLongFunction.jf()</target>
        </trans-unit>
        <trans-unit id="7216cbe1909be9728b22504bf24da693c8ccda36" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleUnaryOperator</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleUnaryOperator</target>
        </trans-unit>
        <trans-unit id="9cfe5c8c1a1e86e7b20b62c68f8477d2b1e0ec69" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="e433713807f09f147787d5f6c7fa5623f38198c3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleUnaryOperator.FromJavaDoubleUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleUnaryOperator.FromJavaDoubleUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="fe492c5d59290645fb6f9f63f0d4f778e8cb61e2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleUnaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleUnaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="df59cc19275cfffe84fd69939b0c93c3d5fc052e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaDoubleUnaryOperator.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaDoubleUnaryOperator.jf()</target>
        </trans-unit>
        <trans-unit id="9f35cabc79876579f78810f4966a78eddba527ca" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaFunction</target>
        </trans-unit>
        <trans-unit id="d124b7fc74ad20bffcd53623534363db194345f1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaFunction()</target>
        </trans-unit>
        <trans-unit id="0f5d805e109faf3a085a9ab1eda73b2c9c63468c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaFunction.FromJavaFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaFunction.FromJavaFunction()</target>
        </trans-unit>
        <trans-unit id="1f85af53726846f4c041784e5018a2e4fec36dea" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaFunction.apply()</target>
        </trans-unit>
        <trans-unit id="91ad5645f31c43052a0db46346727f267972b569" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaFunction.jf()</target>
        </trans-unit>
        <trans-unit id="e697d9be05914aef5363b3b62488e5cbb5ac4ce7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntBinaryOperator</source>
          <target state="translated">FunctionWrappers$.FromJavaIntBinaryOperator</target>
        </trans-unit>
        <trans-unit id="fa7ee1dd0949a5ed86d76821ae5327b3890cd905" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="3d3bdf3ad92368b7518d0695e87fe417bc11ab02" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntBinaryOperator.FromJavaIntBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntBinaryOperator.FromJavaIntBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="5f64318461921f31d65371491d5f8169e41ba8fb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntBinaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntBinaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="88fea69ec1933b73322dc77acf2fd449d2e8b412" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntBinaryOperator.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntBinaryOperator.jf()</target>
        </trans-unit>
        <trans-unit id="b24e3327d1fca9b6b45182d65b01d47f5244b273" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntConsumer</source>
          <target state="translated">FunctionWrappers$.FromJavaIntConsumer</target>
        </trans-unit>
        <trans-unit id="1620e5f048a7d665f5ffcd3811d3753eb448a209" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntConsumer()</target>
        </trans-unit>
        <trans-unit id="a5931f777c7b5ac5f549952948ed79e9e7bb0075" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntConsumer.FromJavaIntConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntConsumer.FromJavaIntConsumer()</target>
        </trans-unit>
        <trans-unit id="613f46609d34843ae1780b2ff172bc60e956c99c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntConsumer.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntConsumer.apply()</target>
        </trans-unit>
        <trans-unit id="f46a629507e54d8bde05ddac5a5650598e214995" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntConsumer.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntConsumer.jf()</target>
        </trans-unit>
        <trans-unit id="722fcdca1237b2ca848ae3a61c2f916e9cb5be70" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaIntFunction</target>
        </trans-unit>
        <trans-unit id="7aa1722153564bfaf2c239e660abb43029942fca" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntFunction()</target>
        </trans-unit>
        <trans-unit id="d1ca21e484d8e0e312bc0e7e1546160b84049779" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntFunction.FromJavaIntFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntFunction.FromJavaIntFunction()</target>
        </trans-unit>
        <trans-unit id="1f1c5df6dbc6edf11e7e2da12d439dc254dee619" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntFunction.apply()</target>
        </trans-unit>
        <trans-unit id="199945cea3dffbcb000d1045384c9c1387f3344f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntFunction.jf()</target>
        </trans-unit>
        <trans-unit id="c41d641d1e2dca05bf1908efbf3d19b4acef9631" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntPredicate</source>
          <target state="translated">FunctionWrappers$.FromJavaIntPredicate</target>
        </trans-unit>
        <trans-unit id="c742f4af1c8fc5a0038840bda2e4fa31b4151dbc" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntPredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntPredicate()</target>
        </trans-unit>
        <trans-unit id="22fa5873282f88b136e460c0ef9a99a9ae361405" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntPredicate.FromJavaIntPredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntPredicate.FromJavaIntPredicate()</target>
        </trans-unit>
        <trans-unit id="95175d800fe3d4543999fd72b08b2ed8089dc4cd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntPredicate.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntPredicate.apply()</target>
        </trans-unit>
        <trans-unit id="404df65a4b9fbcb12370e50fa4526f131647ab4a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntPredicate.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntPredicate.jf()</target>
        </trans-unit>
        <trans-unit id="43f5c2cb178c46befeaf5faae9aba316c4937693" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntSupplier</source>
          <target state="translated">FunctionWrappers$.FromJavaIntSupplier</target>
        </trans-unit>
        <trans-unit id="fb517c3c2dfc98326c17dcb4a55dd4b4b0a05e2a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntSupplier()</target>
        </trans-unit>
        <trans-unit id="edf184781a08443244c368cd566afcd54dfbb4bd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntSupplier.FromJavaIntSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntSupplier.FromJavaIntSupplier()</target>
        </trans-unit>
        <trans-unit id="babf5db1f88cb0ba9db58149915b683ca3c3fc9e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntSupplier.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntSupplier.apply()</target>
        </trans-unit>
        <trans-unit id="234e4c8c41ee1d0d1b753b86eef8c13a249f264d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntSupplier.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntSupplier.jf()</target>
        </trans-unit>
        <trans-unit id="6a80ed94ff724145ce454fb1def87845a6021183" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToDoubleFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="6ad59310ab35be9d4166eee36833c374ffbcc7bf" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="ef8ec1b15f2deb3f25720bb557e6739c93d2c013" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToDoubleFunction.FromJavaIntToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToDoubleFunction.FromJavaIntToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="533b32b9b0929e42341011ac1125c219fecfc829" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToDoubleFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToDoubleFunction.apply()</target>
        </trans-unit>
        <trans-unit id="f8baee383dc1d9926e2017fd782f4c0f67532ea5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToDoubleFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToDoubleFunction.jf()</target>
        </trans-unit>
        <trans-unit id="c7fe526184772472f4b5b85103720dd631971cfd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToLongFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToLongFunction</target>
        </trans-unit>
        <trans-unit id="def11c410a3c44450b9debe07049630d47966a26" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToLongFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToLongFunction()</target>
        </trans-unit>
        <trans-unit id="75886e4d7705ffc11ff869c862441ed30c18e87c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToLongFunction.FromJavaIntToLongFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToLongFunction.FromJavaIntToLongFunction()</target>
        </trans-unit>
        <trans-unit id="2a5df9a957e6dd52fbe5ca6ce46d155b7260eda1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToLongFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToLongFunction.apply()</target>
        </trans-unit>
        <trans-unit id="3cc4e9c4779cc7bb2bd651b86d58824d97912edd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntToLongFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntToLongFunction.jf()</target>
        </trans-unit>
        <trans-unit id="de8106f4907535b13861147c9079b27f61902569" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntUnaryOperator</source>
          <target state="translated">FunctionWrappers$.FromJavaIntUnaryOperator</target>
        </trans-unit>
        <trans-unit id="8eb1eb7d9bccfa13732256c556fea774c51aecb6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="70a9baf7266bab62f783b25814eab2500bb253bd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntUnaryOperator.FromJavaIntUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntUnaryOperator.FromJavaIntUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="df3496b2326a3e0e8e48e45b93887c83c1d7f78c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntUnaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntUnaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="6200ec18965ad3c6a56482f41c1f5a7f2caf9985" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaIntUnaryOperator.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaIntUnaryOperator.jf()</target>
        </trans-unit>
        <trans-unit id="164c85d199c5a661bb34a0588e92140941936c2e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongBinaryOperator</source>
          <target state="translated">FunctionWrappers$.FromJavaLongBinaryOperator</target>
        </trans-unit>
        <trans-unit id="2f316c2fbc5d0df07ed491fe5a189bc30eacb222" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="51e6235e0942420c53d067059fdb8fdfd28c83e1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongBinaryOperator.FromJavaLongBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongBinaryOperator.FromJavaLongBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="50240880fe52334bdb7806932c3b6b2a3fcc40c3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongBinaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongBinaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="7d61be9d0668d3c73fa9a79027ed476293c85fb5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongBinaryOperator.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongBinaryOperator.jf()</target>
        </trans-unit>
        <trans-unit id="b1636a8dc0d300ef3713c6c161a1e9fa9d8a2dde" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongConsumer</source>
          <target state="translated">FunctionWrappers$.FromJavaLongConsumer</target>
        </trans-unit>
        <trans-unit id="6122328b377a695f79a8a2017857a8bd25de3464" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongConsumer()</target>
        </trans-unit>
        <trans-unit id="82b047f2b8bd444bb6bb01a80982a4f45be6c3c6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongConsumer.FromJavaLongConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongConsumer.FromJavaLongConsumer()</target>
        </trans-unit>
        <trans-unit id="fa7129f03520675613d4855938120a848b9305be" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongConsumer.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongConsumer.apply()</target>
        </trans-unit>
        <trans-unit id="e31160132620a2658bd31c8421285d9002791f36" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongConsumer.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongConsumer.jf()</target>
        </trans-unit>
        <trans-unit id="d8ebe095228712db03f7abbb3f6cbcf0544a2b4b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaLongFunction</target>
        </trans-unit>
        <trans-unit id="fcbec3b03741172b8523ad9d25868cf801214583" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongFunction()</target>
        </trans-unit>
        <trans-unit id="5d46658ca1cc62ebd8b0d43c5b48571588b3752c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongFunction.FromJavaLongFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongFunction.FromJavaLongFunction()</target>
        </trans-unit>
        <trans-unit id="9014e9e7462df376da62d0df2a7662473c56899b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongFunction.apply()</target>
        </trans-unit>
        <trans-unit id="262ed407c4bd59b611eeca03e46c13e1646518d9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongFunction.jf()</target>
        </trans-unit>
        <trans-unit id="52afafec5587dbc78724c9b4e90913674203b139" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongPredicate</source>
          <target state="translated">FunctionWrappers$.FromJavaLongPredicate</target>
        </trans-unit>
        <trans-unit id="e215d2ea4b2f75d7ee8e891e0c3abf609507fece" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongPredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongPredicate()</target>
        </trans-unit>
        <trans-unit id="85373dc0201930e1e10b71947b646d425d03cb9b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongPredicate.FromJavaLongPredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongPredicate.FromJavaLongPredicate()</target>
        </trans-unit>
        <trans-unit id="5a77db406f84315ab634927e3c3e991ef627d0a5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongPredicate.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongPredicate.apply()</target>
        </trans-unit>
        <trans-unit id="1fd80f9046cdd866fe02fc8945beb57fa51bb6c7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongPredicate.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongPredicate.jf()</target>
        </trans-unit>
        <trans-unit id="18c1cf60cc4cb284fc0bd3e5fe61da62681bceab" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongSupplier</source>
          <target state="translated">FunctionWrappers$.FromJavaLongSupplier</target>
        </trans-unit>
        <trans-unit id="c7b690eb113e518e22d1839b95da27436292b44c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongSupplier()</target>
        </trans-unit>
        <trans-unit id="24cc42f04cb868a360ee9034592228e22d861750" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongSupplier.FromJavaLongSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongSupplier.FromJavaLongSupplier()</target>
        </trans-unit>
        <trans-unit id="ac8a70ae8a48c73148676bcf226c68ad12104d4d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongSupplier.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongSupplier.apply()</target>
        </trans-unit>
        <trans-unit id="277084d0ed5198722eebe3eb9f92024c2e05c308" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongSupplier.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongSupplier.jf()</target>
        </trans-unit>
        <trans-unit id="7654cf134f8bc05ba9b795112a058ceec7a8447f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToDoubleFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="e3d1e60a53ffda0f2d2b1121e11e38a57c66cd61" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="7576f42f902497bd970254155f0eb1f4a4fb6344" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToDoubleFunction.FromJavaLongToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToDoubleFunction.FromJavaLongToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="77d6a9ecd6be9a3ab588d0eb833bcbccf930e94b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToDoubleFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToDoubleFunction.apply()</target>
        </trans-unit>
        <trans-unit id="42cb56b1ec8de945fa2cc5b14990de81b75006d8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToDoubleFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToDoubleFunction.jf()</target>
        </trans-unit>
        <trans-unit id="ee0cc1e72bf8f589b744307c112471efc3d787d5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToIntFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToIntFunction</target>
        </trans-unit>
        <trans-unit id="622252f55f8c165053154c07f7867f67e065b47a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToIntFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToIntFunction()</target>
        </trans-unit>
        <trans-unit id="a2ca57618e5b0b9009a0c6b00e3690f6ca25c4d3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToIntFunction.FromJavaLongToIntFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToIntFunction.FromJavaLongToIntFunction()</target>
        </trans-unit>
        <trans-unit id="8909b8c86b74d573a485dfa2f4356562f44f16a5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToIntFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToIntFunction.apply()</target>
        </trans-unit>
        <trans-unit id="bd89f165df3769f4a18a0a48ab47f125e28891b1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongToIntFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongToIntFunction.jf()</target>
        </trans-unit>
        <trans-unit id="3c923c48296487a412d47864ed09219117228526" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongUnaryOperator</source>
          <target state="translated">FunctionWrappers$.FromJavaLongUnaryOperator</target>
        </trans-unit>
        <trans-unit id="f831939bca7255d9795de3c9d1e60f1bb3cc753b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="9a0028007a8fefe45d59d0393636bbe9e2cb2711" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongUnaryOperator.FromJavaLongUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongUnaryOperator.FromJavaLongUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="3a940e8d2b576c2920e549c84569b01ca6d7fd0c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongUnaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongUnaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="af0ec0c140a00d635e08adb0b08ca7c58f42d6b1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaLongUnaryOperator.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaLongUnaryOperator.jf()</target>
        </trans-unit>
        <trans-unit id="a545dc717581628e3eb23b8ba1a0948c31772f3e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjDoubleConsumer</source>
          <target state="translated">FunctionWrappers$.FromJavaObjDoubleConsumer</target>
        </trans-unit>
        <trans-unit id="79d4ab9841ff25f8e14c3879c3dd8d26a89fca64" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="f5031bec8288b205b06e4952ed72bd265b2d1fe0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjDoubleConsumer.FromJavaObjDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjDoubleConsumer.FromJavaObjDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="2f79daf59127b4a0788b65c8451b72bffd813e25" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjDoubleConsumer.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjDoubleConsumer.apply()</target>
        </trans-unit>
        <trans-unit id="0d362071b9336978c7e6e99805c8e9ba4e38a0ee" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjDoubleConsumer.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjDoubleConsumer.jf()</target>
        </trans-unit>
        <trans-unit id="d519da595e5363783d4e39cf6d2b2926a3aa1022" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjIntConsumer</source>
          <target state="translated">FunctionWrappers$.FromJavaObjIntConsumer</target>
        </trans-unit>
        <trans-unit id="7533790f28114d22df4c248f261d648d7bdc4044" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjIntConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjIntConsumer()</target>
        </trans-unit>
        <trans-unit id="b7df3e8ee329c6f2113df2cba8ad06964e1321b2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjIntConsumer.FromJavaObjIntConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjIntConsumer.FromJavaObjIntConsumer()</target>
        </trans-unit>
        <trans-unit id="a6ed3c36eeb12c977954c44681b9ab7a75217b7a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjIntConsumer.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjIntConsumer.apply()</target>
        </trans-unit>
        <trans-unit id="104ce6dab09d149c3ceb861af0ac12e07a74ace6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjIntConsumer.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjIntConsumer.jf()</target>
        </trans-unit>
        <trans-unit id="d90c06a63cd9e10fbb0e3ecd6d7b751ca6a3becd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjLongConsumer</source>
          <target state="translated">FunctionWrappers$.FromJavaObjLongConsumer</target>
        </trans-unit>
        <trans-unit id="e2020cde7f610ae78814feb566c2d70a35cb6bb1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjLongConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjLongConsumer()</target>
        </trans-unit>
        <trans-unit id="3c9249e54ea3cebffe3c596ab357b170bb5ce5a7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjLongConsumer.FromJavaObjLongConsumer()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjLongConsumer.FromJavaObjLongConsumer()</target>
        </trans-unit>
        <trans-unit id="637bac6372fd285aae94ae3ee6e57d8320ed95d5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjLongConsumer.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjLongConsumer.apply()</target>
        </trans-unit>
        <trans-unit id="8e62d94de4ce31c9a2737ab7b18bef70e79109e3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaObjLongConsumer.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaObjLongConsumer.jf()</target>
        </trans-unit>
        <trans-unit id="8c8e047b064717757d24e60d682d1fbf7efa1691" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaPredicate</source>
          <target state="translated">FunctionWrappers$.FromJavaPredicate</target>
        </trans-unit>
        <trans-unit id="8639a2b29ff4518194b8c7741592ab4825977cb1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaPredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaPredicate()</target>
        </trans-unit>
        <trans-unit id="89ce6a56cb37d3e0f66981e32b137152fe0e9a98" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaPredicate.FromJavaPredicate()</source>
          <target state="translated">FunctionWrappers$.FromJavaPredicate.FromJavaPredicate()</target>
        </trans-unit>
        <trans-unit id="d491ec61eb6ed49d315814c028016f6adf04c605" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaPredicate.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaPredicate.apply()</target>
        </trans-unit>
        <trans-unit id="85eaf7ae600b0e4b95d544d08241bf89eeb7b896" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaPredicate.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaPredicate.jf()</target>
        </trans-unit>
        <trans-unit id="8114106911cfc7fd1ebf153f8e85df60b6653110" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaSupplier</source>
          <target state="translated">FunctionWrappers$.FromJavaSupplier</target>
        </trans-unit>
        <trans-unit id="068f144a85c93495baa5135a21ecdec6c53cb371" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaSupplier()</target>
        </trans-unit>
        <trans-unit id="ddb7c07e0820d207a70b2db103e986f51d8f7e05" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaSupplier.FromJavaSupplier()</source>
          <target state="translated">FunctionWrappers$.FromJavaSupplier.FromJavaSupplier()</target>
        </trans-unit>
        <trans-unit id="98f3f8d8c50720ee7e5c7288483a3cddb4f4fee1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaSupplier.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaSupplier.apply()</target>
        </trans-unit>
        <trans-unit id="2a26d8902568a3767a82a4e3b498579537a0286f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaSupplier.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaSupplier.jf()</target>
        </trans-unit>
        <trans-unit id="7934670b3901f1f0229bcff7d9f292152f00810f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleBiFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleBiFunction</target>
        </trans-unit>
        <trans-unit id="f3759b6d97b606292aa8277e16729b055a0e5753" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleBiFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleBiFunction()</target>
        </trans-unit>
        <trans-unit id="4778c29646c428ab4466f9a25f7f0d508f66d74a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleBiFunction.FromJavaToDoubleBiFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleBiFunction.FromJavaToDoubleBiFunction()</target>
        </trans-unit>
        <trans-unit id="66a4fe3c4075d9465d69c3f8bb80ce32a85df834" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleBiFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleBiFunction.apply()</target>
        </trans-unit>
        <trans-unit id="0729b486b9df562c407e2d09349291921b21759a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleBiFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleBiFunction.jf()</target>
        </trans-unit>
        <trans-unit id="ba0528f1c8fbd9cfa68ce3df53c969ce2187942d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="68fc65ab4922457d000fd1ce8f04d14abbdcbef8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="d676526896ace7a2415e17161a461753c423e5de" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleFunction.FromJavaToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleFunction.FromJavaToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="8b80c1f18fcd1900ddfe4bf67be11673746dce52" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleFunction.apply()</target>
        </trans-unit>
        <trans-unit id="6ef9f0d4dfb2ad07cbfe716fd6e1208a35197e1b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToDoubleFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaToDoubleFunction.jf()</target>
        </trans-unit>
        <trans-unit id="f8113b6afaaca381e5bab2f2897779d660ca57af" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntBiFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntBiFunction</target>
        </trans-unit>
        <trans-unit id="d49a5c471e91d9bbece02a17f79244d25bb88fe3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntBiFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntBiFunction()</target>
        </trans-unit>
        <trans-unit id="f9fcb28b2fbc0ee54f82f627aca4cb257561f7f8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntBiFunction.FromJavaToIntBiFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntBiFunction.FromJavaToIntBiFunction()</target>
        </trans-unit>
        <trans-unit id="d3c24cd702310d0526610e3acfe2c5216e2bdbf6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntBiFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntBiFunction.apply()</target>
        </trans-unit>
        <trans-unit id="a561eb6aae0a4cd3ecdaa479f439296189c6ac0c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntBiFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntBiFunction.jf()</target>
        </trans-unit>
        <trans-unit id="275ffabeb428770281b5eafeb7ad9e198ce6ebe0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntFunction</target>
        </trans-unit>
        <trans-unit id="e30d180f197efd318cea275cae6b012d2a98a6b7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntFunction()</target>
        </trans-unit>
        <trans-unit id="ed376df7897793898d615e4e15613263028db41d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntFunction.FromJavaToIntFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntFunction.FromJavaToIntFunction()</target>
        </trans-unit>
        <trans-unit id="b975049f53169bff83ad59c7a521cf8e950717c4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntFunction.apply()</target>
        </trans-unit>
        <trans-unit id="5b036c423f991d8325a551aa63f95d4b41869ad1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToIntFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaToIntFunction.jf()</target>
        </trans-unit>
        <trans-unit id="ec550ada957159dc601f57db617527c28e030849" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongBiFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongBiFunction</target>
        </trans-unit>
        <trans-unit id="2a020eefc84cac0473aee45271fc1e6a21c8fb29" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongBiFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongBiFunction()</target>
        </trans-unit>
        <trans-unit id="22ae327d60aff4dea98f8c92436bde8ff1e11719" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongBiFunction.FromJavaToLongBiFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongBiFunction.FromJavaToLongBiFunction()</target>
        </trans-unit>
        <trans-unit id="6aa172178d52b2208aa8effa6371d994288b05df" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongBiFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongBiFunction.apply()</target>
        </trans-unit>
        <trans-unit id="7089b2b8d6a1902e6a4faa055a41dde09bf043a2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongBiFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongBiFunction.jf()</target>
        </trans-unit>
        <trans-unit id="53bea98a613be438d749fcfab9f0557d5d7d5f44" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongFunction</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongFunction</target>
        </trans-unit>
        <trans-unit id="d1dce56921511b9ce4255f6e0f2d31ba3308b26c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongFunction()</target>
        </trans-unit>
        <trans-unit id="629c1397fbeeba22407e180bb3bf0dcb134070da" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongFunction.FromJavaToLongFunction()</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongFunction.FromJavaToLongFunction()</target>
        </trans-unit>
        <trans-unit id="51afc67df90d4a27510275f015a0bfd5594b192d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongFunction.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongFunction.apply()</target>
        </trans-unit>
        <trans-unit id="723f6f109150e5b94a395c7fa54710eb6aa04adf" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaToLongFunction.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaToLongFunction.jf()</target>
        </trans-unit>
        <trans-unit id="5f1b6669e26a83059a76c8ff569e101c08c84883" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaUnaryOperator</source>
          <target state="translated">FunctionWrappers$.FromJavaUnaryOperator</target>
        </trans-unit>
        <trans-unit id="9b1c4979c8e64f11bca4c9849c22fd3f86537a22" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="cae4bdb95a890bc19c2bb9cc827b5757706835ec" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaUnaryOperator.FromJavaUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.FromJavaUnaryOperator.FromJavaUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="e60cbbef7b4ba513a151a74a2c9de0203c3f5d2d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaUnaryOperator.apply()</source>
          <target state="translated">FunctionWrappers$.FromJavaUnaryOperator.apply()</target>
        </trans-unit>
        <trans-unit id="f64973cd7bc97d07853b4f61afeb4d8ab42570d0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.FromJavaUnaryOperator.jf()</source>
          <target state="translated">FunctionWrappers$.FromJavaUnaryOperator.jf()</target>
        </trans-unit>
        <trans-unit id="51b55e4fa7931c293987e117d3d4b96d4b77fdb2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiConsumerAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichBiConsumerAsFunction2</target>
        </trans-unit>
        <trans-unit id="b4a402acf18930871270240f605f4cd27a5c7262" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiConsumerAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichBiConsumerAsFunction2()</target>
        </trans-unit>
        <trans-unit id="a1555a107cba7c21f737e642d860c7fbe828ca59" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiConsumerAsFunction2.RichBiConsumerAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichBiConsumerAsFunction2.RichBiConsumerAsFunction2()</target>
        </trans-unit>
        <trans-unit id="53173dd67bf346a505b4073ad40940974805c90e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiConsumerAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichBiConsumerAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="e57154c122534d9b4ab5a33dbfb389ac0049dd4a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiFunctionAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichBiFunctionAsFunction2</target>
        </trans-unit>
        <trans-unit id="7a4ace0136ffcd490b246d7005f669aa62b1d5de" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiFunctionAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichBiFunctionAsFunction2()</target>
        </trans-unit>
        <trans-unit id="d070b14769f96264126733e037db311337bf8127" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiFunctionAsFunction2.RichBiFunctionAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichBiFunctionAsFunction2.RichBiFunctionAsFunction2()</target>
        </trans-unit>
        <trans-unit id="eb862113edf90c7c13f613ff5629ac5aeb8aa419" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiFunctionAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichBiFunctionAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="ddbbf7b9138e61fd323d30e029ff902774116a9d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiPredicateAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichBiPredicateAsFunction2</target>
        </trans-unit>
        <trans-unit id="841bd4695cfb3cb33254616dd9d1772a7a60502f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiPredicateAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichBiPredicateAsFunction2()</target>
        </trans-unit>
        <trans-unit id="86eeb35f052b43873e27d82672de18c0ad9a1da3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiPredicateAsFunction2.RichBiPredicateAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichBiPredicateAsFunction2.RichBiPredicateAsFunction2()</target>
        </trans-unit>
        <trans-unit id="80f5dccdf33d99454c719c199994f4cfb4ac5d27" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBiPredicateAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichBiPredicateAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="6e0adbf86d9b696cec58a85ad9ca5411bcd36a09" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBinaryOperatorAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichBinaryOperatorAsFunction2</target>
        </trans-unit>
        <trans-unit id="09b2f082d56c1f4162bcbbff3ea57934137b8915" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBinaryOperatorAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichBinaryOperatorAsFunction2()</target>
        </trans-unit>
        <trans-unit id="834fc1c0a2c973703396958e25ba8b10d9da368c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBinaryOperatorAsFunction2.RichBinaryOperatorAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichBinaryOperatorAsFunction2.RichBinaryOperatorAsFunction2()</target>
        </trans-unit>
        <trans-unit id="c08609a710e3c47f135c0d42f475366870ff5065" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBinaryOperatorAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichBinaryOperatorAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="afe65702ba9c1c7e9a93eebf22bf7333e978c35f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBooleanSupplierAsFunction0</source>
          <target state="translated">FunctionWrappers$.RichBooleanSupplierAsFunction0</target>
        </trans-unit>
        <trans-unit id="7855933d4c6b1343d23427837c31492fe0d78abf" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBooleanSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichBooleanSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="d63a81d76b5bc26e4f4d69f906e1d9869adb7c90" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBooleanSupplierAsFunction0.RichBooleanSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichBooleanSupplierAsFunction0.RichBooleanSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="2d85e232768e6619d26d05c2e747c11ba908d20b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichBooleanSupplierAsFunction0.asScala()</source>
          <target state="translated">FunctionWrappers$.RichBooleanSupplierAsFunction0.asScala()</target>
        </trans-unit>
        <trans-unit id="a3d34aa26ef0f4657d0b88c56ca3e9b63f060b3d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichConsumerAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichConsumerAsFunction1</target>
        </trans-unit>
        <trans-unit id="57f7369ff57abf27ed404a666a6754d5824a6d46" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichConsumerAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichConsumerAsFunction1()</target>
        </trans-unit>
        <trans-unit id="a1ac842fb69bfe8bd33fe4c7b01ad4a775f85d26" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichConsumerAsFunction1.RichConsumerAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichConsumerAsFunction1.RichConsumerAsFunction1()</target>
        </trans-unit>
        <trans-unit id="869caaf0070b26e87306ace0af8ebce7a7165271" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichConsumerAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichConsumerAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="98c0df052ef6fd7d103cfd0f891ac77048ea57f5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleBinaryOperatorAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichDoubleBinaryOperatorAsFunction2</target>
        </trans-unit>
        <trans-unit id="4cb51f677a7fe0c7a5d7d7f7be7849be240daf90" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleBinaryOperatorAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichDoubleBinaryOperatorAsFunction2()</target>
        </trans-unit>
        <trans-unit id="26189076a08c969548e0e68173eb873cd09a1519" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleBinaryOperatorAsFunction2.RichDoubleBinaryOperatorAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichDoubleBinaryOperatorAsFunction2.RichDoubleBinaryOperatorAsFunction2()</target>
        </trans-unit>
        <trans-unit id="c98590722336ed2f99f74fb57de68956c9cd1909" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleBinaryOperatorAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichDoubleBinaryOperatorAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="4aea5fad59265fba1e62a188d9cd1256661e8ef2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleConsumerAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichDoubleConsumerAsFunction1</target>
        </trans-unit>
        <trans-unit id="c8248fb5f5a36cbb6233a9f548a90713be4b901b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleConsumerAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleConsumerAsFunction1()</target>
        </trans-unit>
        <trans-unit id="89698703ab466c2f7f6fe0b082789e66cea2c479" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleConsumerAsFunction1.RichDoubleConsumerAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleConsumerAsFunction1.RichDoubleConsumerAsFunction1()</target>
        </trans-unit>
        <trans-unit id="dee4c780322fdbdb25488e218d62c135f591d27e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleConsumerAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichDoubleConsumerAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="7cf7fd97bae0ce35c25d0478e75a765a71375032" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichDoubleFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="1622f9c961309b6b22c412feabb3d7907c124a73" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="4996c8ca082be499f874141beba52a9f6c511aec" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleFunctionAsFunction1.RichDoubleFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleFunctionAsFunction1.RichDoubleFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="6d9675ec1d18ba7840b2c63a57e2df626e902554" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichDoubleFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="2272fcb8e7e597190e293e639bb4d915fbf78867" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoublePredicateAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichDoublePredicateAsFunction1</target>
        </trans-unit>
        <trans-unit id="a60c44652d4a3d69e3288c75e2794bd55310e03e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoublePredicateAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoublePredicateAsFunction1()</target>
        </trans-unit>
        <trans-unit id="9a285f7daae54150641fbd1b80af1531cf618727" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoublePredicateAsFunction1.RichDoublePredicateAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoublePredicateAsFunction1.RichDoublePredicateAsFunction1()</target>
        </trans-unit>
        <trans-unit id="ac1b60d460c35364aef00009c0442d29d12555b1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoublePredicateAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichDoublePredicateAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="08f8d6b50e5584fe0fca328145631d356ab4f89c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleSupplierAsFunction0</source>
          <target state="translated">FunctionWrappers$.RichDoubleSupplierAsFunction0</target>
        </trans-unit>
        <trans-unit id="470ec063afe3bb023aeef7949d3f17c884e6c67b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichDoubleSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="f5abc9bf43e2ac12b33f6fbed9a33121bd9e13e3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleSupplierAsFunction0.RichDoubleSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichDoubleSupplierAsFunction0.RichDoubleSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="ff6e2f766a2911179c2f409dc066ed90fc1dc141" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleSupplierAsFunction0.asScala()</source>
          <target state="translated">FunctionWrappers$.RichDoubleSupplierAsFunction0.asScala()</target>
        </trans-unit>
        <trans-unit id="6a156a621ee19345f730332617a59c1cbce9ef0a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleToIntFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichDoubleToIntFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="285a25ed8c76e849f97523c3ff229ea38481e199" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleToIntFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleToIntFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="3b4ba652e99eb42370b711963bf498e3fcca6041" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleToIntFunctionAsFunction1.RichDoubleToIntFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleToIntFunctionAsFunction1.RichDoubleToIntFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="f322647d7a1bdb90e36643e3f1bb095d0741780b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleToIntFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichDoubleToIntFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="b1bb63debbc08f009ce10a2f85c05ce5d032875a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleToLongFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichDoubleToLongFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="4b74c97e91016655efdabaaf037915a4b55b4085" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleToLongFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleToLongFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="b3c26f1f51f735e92d0d1f6f08588908d18d18da" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleToLongFunctionAsFunction1.RichDoubleToLongFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleToLongFunctionAsFunction1.RichDoubleToLongFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="16dfc62f100a33ec8127e447dd28c1cce285926a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleToLongFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichDoubleToLongFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="527a414f4dbd27bf71c354c434a0d91c17ba760a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleUnaryOperatorAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichDoubleUnaryOperatorAsFunction1</target>
        </trans-unit>
        <trans-unit id="c96a40a76d87b1a334af42f3a7007d1206821107" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleUnaryOperatorAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleUnaryOperatorAsFunction1()</target>
        </trans-unit>
        <trans-unit id="f460d387f90aaba761290cdd15a90248540da4e7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleUnaryOperatorAsFunction1.RichDoubleUnaryOperatorAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichDoubleUnaryOperatorAsFunction1.RichDoubleUnaryOperatorAsFunction1()</target>
        </trans-unit>
        <trans-unit id="8d2dfe3f9e4a8c192ea908fb387545dcd0bf93d4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichDoubleUnaryOperatorAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichDoubleUnaryOperatorAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="0a71e35184678a13a423b43815a61f5c0eff2af2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsBooleanSupplier</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsBooleanSupplier</target>
        </trans-unit>
        <trans-unit id="39ec3375910f94ca8966c7ff2e9002a61db951eb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsBooleanSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsBooleanSupplier()</target>
        </trans-unit>
        <trans-unit id="0352bbc11a19fa0a54b6f36fb6fd6b7e848f78b1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsBooleanSupplier.RichFunction0AsBooleanSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsBooleanSupplier.RichFunction0AsBooleanSupplier()</target>
        </trans-unit>
        <trans-unit id="16981852a4673da82e1b509aa0c4c07acab08e16" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsBooleanSupplier.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsBooleanSupplier.asJava()</target>
        </trans-unit>
        <trans-unit id="0c9e03ae4c834dcb247bf3c314e5b3b537f7068c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsDoubleSupplier</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsDoubleSupplier</target>
        </trans-unit>
        <trans-unit id="e4da65a6ac9b902e18cfbdef333f97ed1f9e8543" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsDoubleSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsDoubleSupplier()</target>
        </trans-unit>
        <trans-unit id="9e0282f6e5eb5b82e3a9f155ce967286ae1bdac1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsDoubleSupplier.RichFunction0AsDoubleSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsDoubleSupplier.RichFunction0AsDoubleSupplier()</target>
        </trans-unit>
        <trans-unit id="6a68ca8a308ca5f49a1dcd94b012019c3e2b8b2e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsDoubleSupplier.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsDoubleSupplier.asJava()</target>
        </trans-unit>
        <trans-unit id="a94dd238ecd161ebde07c4963cf84b8d07db0a1b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsIntSupplier</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsIntSupplier</target>
        </trans-unit>
        <trans-unit id="fba79c2f1609bd54f523147210f70115e6084aea" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsIntSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsIntSupplier()</target>
        </trans-unit>
        <trans-unit id="fb8ba66cc4f7d7cc94b639987fe857f32e1db93c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsIntSupplier.RichFunction0AsIntSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsIntSupplier.RichFunction0AsIntSupplier()</target>
        </trans-unit>
        <trans-unit id="e2c552c5a59f4f3fd971f138988c79a4786105c9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsIntSupplier.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsIntSupplier.asJava()</target>
        </trans-unit>
        <trans-unit id="d575cd2888ed81e8b263c9f99e5a49b213d4fef5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsLongSupplier</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsLongSupplier</target>
        </trans-unit>
        <trans-unit id="91fe150e3340c587a772719325fb8b84bdcce555" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsLongSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsLongSupplier()</target>
        </trans-unit>
        <trans-unit id="07cd172896e5e5a09fa1d162966b5bae2430df27" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsLongSupplier.RichFunction0AsLongSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsLongSupplier.RichFunction0AsLongSupplier()</target>
        </trans-unit>
        <trans-unit id="f78dd1e03a686124f950c7dcd1f69266d8821deb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsLongSupplier.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsLongSupplier.asJava()</target>
        </trans-unit>
        <trans-unit id="d5062cf911e32739ffe1b4155a2989434d46533c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsSupplier</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsSupplier</target>
        </trans-unit>
        <trans-unit id="b44a9a0c721b19a066b8f8901a6697f310fc2e89" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsSupplier()</target>
        </trans-unit>
        <trans-unit id="18fbe934135528a0f7b130c0108bfdf342071a99" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsSupplier.RichFunction0AsSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsSupplier.RichFunction0AsSupplier()</target>
        </trans-unit>
        <trans-unit id="0ae926fc5e0c7aae4cdb795be9995fc08ca4d5da" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsSupplier.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsSupplier.asJava()</target>
        </trans-unit>
        <trans-unit id="dcf9a31e0749ca27c5e009086e20e651c079f300" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction0AsSupplier.asJavaSupplier()</source>
          <target state="translated">FunctionWrappers$.RichFunction0AsSupplier.asJavaSupplier()</target>
        </trans-unit>
        <trans-unit id="620ea18fc895c68584f52f08d50c268d794a625d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsConsumer</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsConsumer</target>
        </trans-unit>
        <trans-unit id="91217e3e189e137fbd7f97e0436740a79411a4ff" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsConsumer()</target>
        </trans-unit>
        <trans-unit id="c72823d5a9bf1781c4ea809384be8f4e14acc441" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsConsumer.RichFunction1AsConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsConsumer.RichFunction1AsConsumer()</target>
        </trans-unit>
        <trans-unit id="1f490746636fde261ab829b393e31e2230927b95" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsConsumer.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsConsumer.asJava()</target>
        </trans-unit>
        <trans-unit id="559eb931f830378e338ddce30e5d30c17af61916" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsConsumer.asJavaConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsConsumer.asJavaConsumer()</target>
        </trans-unit>
        <trans-unit id="27b0476ee418201c1a83495cabc44784761c23b4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleConsumer</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleConsumer</target>
        </trans-unit>
        <trans-unit id="ad1bb9ea91765754a5ba886efd3c4d3fb327130a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="11f9b0204580231d42302913de3b01926fcac022" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleConsumer.RichFunction1AsDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleConsumer.RichFunction1AsDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="cd2050edb2277985e388cea17200c98cb7a12dea" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleConsumer.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleConsumer.asJava()</target>
        </trans-unit>
        <trans-unit id="8afc6054b404f9589e52e09d623d5d322b9b3c36" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleFunction</target>
        </trans-unit>
        <trans-unit id="1f4bb600dfff6cf81e9dd50357521b10ebe914aa" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="7dc466e3ebeab2a120cca5542c8cb8d9f8fd41a2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleFunction.RichFunction1AsDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleFunction.RichFunction1AsDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="d98d16c1ff0e2cb4e4546dde035f0a716464600e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="a2120ecb26c992ffe5d3d67f598af4756f95c636" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleFunction.asJavaDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleFunction.asJavaDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="cbb56a95aa35a5f48c2a7eed22338ffbcab864b6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoublePredicate</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoublePredicate</target>
        </trans-unit>
        <trans-unit id="0724bfd7416fae85a0c75c02de4e92cba33d7a1c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoublePredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoublePredicate()</target>
        </trans-unit>
        <trans-unit id="33a0734b93fdfaf42d85b045ec2abd8f9e8ecf8a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoublePredicate.RichFunction1AsDoublePredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoublePredicate.RichFunction1AsDoublePredicate()</target>
        </trans-unit>
        <trans-unit id="c75662678df87100e1667273ba18c39b8e28da63" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoublePredicate.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoublePredicate.asJava()</target>
        </trans-unit>
        <trans-unit id="58118bdcd91039fa8a9f4f50883bd8fd914c675c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleToIntFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleToIntFunction</target>
        </trans-unit>
        <trans-unit id="b94fa95b23a72a68f91af91d4cb74ccef4285d8e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleToIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleToIntFunction()</target>
        </trans-unit>
        <trans-unit id="508b462a62a1ea21bdd278fd5c496c8facb9abd4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleToIntFunction.RichFunction1AsDoubleToIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleToIntFunction.RichFunction1AsDoubleToIntFunction()</target>
        </trans-unit>
        <trans-unit id="f65351a51c04585173d98b945b3bd7118828fd11" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleToIntFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleToIntFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="d9a1100e7149fcfb299dc8b26536a6238a19ac6a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleToLongFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleToLongFunction</target>
        </trans-unit>
        <trans-unit id="a3762f646d2c7ac6e3ba5342305544ce51e59e30" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleToLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleToLongFunction()</target>
        </trans-unit>
        <trans-unit id="b3e716dd1f7242355e452a5aad4aeb767e9e5ac4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleToLongFunction.RichFunction1AsDoubleToLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleToLongFunction.RichFunction1AsDoubleToLongFunction()</target>
        </trans-unit>
        <trans-unit id="962664a00547c00d0c1f3a990c427391f8e1dc35" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleToLongFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleToLongFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="fb519287cb97f4b83ad22ff129ba8dc1cfefaf7a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleUnaryOperator</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleUnaryOperator</target>
        </trans-unit>
        <trans-unit id="1a9851e2eb9ce9804a810d4c188ef5115ffb0b76" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="bae54dba2673b464a81f89caf4ac34a72a18417a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleUnaryOperator.RichFunction1AsDoubleUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleUnaryOperator.RichFunction1AsDoubleUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="1b6026493350551d434e5720df426c1781064589" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsDoubleUnaryOperator.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsDoubleUnaryOperator.asJava()</target>
        </trans-unit>
        <trans-unit id="69d057770658e210a3cee9bd3e9d108d43119ee6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsFunction</target>
        </trans-unit>
        <trans-unit id="d8d78580c372b723aff57e2e904e1f0db08e6d62" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsFunction()</target>
        </trans-unit>
        <trans-unit id="23593e193045727237bfd774af45b623b6237e05" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsFunction.RichFunction1AsFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsFunction.RichFunction1AsFunction()</target>
        </trans-unit>
        <trans-unit id="1a658bd59c4342bfef49e87e5007eb89223abc6d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="01f1c1adfc21f0718b8ebb3a52d2fd507326219e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsFunction.asJavaFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsFunction.asJavaFunction()</target>
        </trans-unit>
        <trans-unit id="75b375cb96697a334d2d5aac2a257e7c9c0058c5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntConsumer</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntConsumer</target>
        </trans-unit>
        <trans-unit id="8c15b1defb5192cbeb7200f11ae24e2902c7ccff" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntConsumer()</target>
        </trans-unit>
        <trans-unit id="b069f9c06e346b226fe5f2b3bd7f21e2c85544ee" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntConsumer.RichFunction1AsIntConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntConsumer.RichFunction1AsIntConsumer()</target>
        </trans-unit>
        <trans-unit id="ea6861c4b37a8c0f695532b5e7906bac2552786f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntConsumer.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntConsumer.asJava()</target>
        </trans-unit>
        <trans-unit id="36d5b33f2d077a9cf06301914f499fa68f9e4602" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntFunction</target>
        </trans-unit>
        <trans-unit id="07c90fb45d50ba7c90c5ffc3d9c1394b130c5aba" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntFunction()</target>
        </trans-unit>
        <trans-unit id="d7f7df1e44e403f435451ece898d0699fbffaf47" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntFunction.RichFunction1AsIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntFunction.RichFunction1AsIntFunction()</target>
        </trans-unit>
        <trans-unit id="9f45b570fafbba2ac61ecab43c1e23379fed70ab" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="3763e5b820defc03063344475dcf762dc0eed3d5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntFunction.asJavaIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntFunction.asJavaIntFunction()</target>
        </trans-unit>
        <trans-unit id="0a72cfadf3e68f3ee6e67a11def45e92271011af" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntPredicate</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntPredicate</target>
        </trans-unit>
        <trans-unit id="d64e910482f473da7f02cca952fd1a9d6d55b407" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntPredicate()</target>
        </trans-unit>
        <trans-unit id="011a76596dd77d4061f1d306ebd1d4729b54366e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntPredicate.RichFunction1AsIntPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntPredicate.RichFunction1AsIntPredicate()</target>
        </trans-unit>
        <trans-unit id="008edcbbc23b0e24979a7af6e67b34041e1b9a84" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntPredicate.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntPredicate.asJava()</target>
        </trans-unit>
        <trans-unit id="3b8c7d53cdc148a180f2c7fdc5266e309b125279" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntToDoubleFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="748c25ab6d3486b25133802a320290d617aee541" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="d2b8dba2927abfceb5e61273cd5b50a0caba0cf6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntToDoubleFunction.RichFunction1AsIntToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntToDoubleFunction.RichFunction1AsIntToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="70e00368cb9d90a0e552f0f8c4cea7596a9f4a71" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntToDoubleFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntToDoubleFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="a1c5ff056da1cff6616aa53f3ea2dbfdf5931048" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntToLongFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntToLongFunction</target>
        </trans-unit>
        <trans-unit id="b58828e74a74060b9755801d1e2314b3316f8b57" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntToLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntToLongFunction()</target>
        </trans-unit>
        <trans-unit id="a2a60134b9bae012b990f79d7e9e0be545cd4b18" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntToLongFunction.RichFunction1AsIntToLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntToLongFunction.RichFunction1AsIntToLongFunction()</target>
        </trans-unit>
        <trans-unit id="2dfafeab0b6ad4198e13005a0bf9188045545121" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntToLongFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntToLongFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="07f3b0e12c6113b289502b43217616113480cca6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntUnaryOperator</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntUnaryOperator</target>
        </trans-unit>
        <trans-unit id="1c72a034893fe7bf032d3561422f7a6edce9e7fe" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="352bfe3c7a95cfcba4701ad43e5736741ab3e006" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntUnaryOperator.RichFunction1AsIntUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntUnaryOperator.RichFunction1AsIntUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="673ce2a2a7b562faec4860336d6b5d6cc6ec5335" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsIntUnaryOperator.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsIntUnaryOperator.asJava()</target>
        </trans-unit>
        <trans-unit id="35c4503d95c4e3221b2c93e3a65d828209170dfb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongConsumer</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongConsumer</target>
        </trans-unit>
        <trans-unit id="5e6105de35697b46857a39c48fb05a01b43d1ddf" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongConsumer()</target>
        </trans-unit>
        <trans-unit id="7a40d71df82b6a2d40867f54f8bf26dc5af83559" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongConsumer.RichFunction1AsLongConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongConsumer.RichFunction1AsLongConsumer()</target>
        </trans-unit>
        <trans-unit id="d3049f99a177370de3edbc5b10025e5a2abb6340" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongConsumer.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongConsumer.asJava()</target>
        </trans-unit>
        <trans-unit id="b7b3f363fe0fe80c95ebc30df3a4aa33a693e450" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongFunction</target>
        </trans-unit>
        <trans-unit id="733cee64dca5b6b1113deab8dd94bd150fd099a1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongFunction()</target>
        </trans-unit>
        <trans-unit id="35311caeb3813727d91ef8cb3470da869fb1f33e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongFunction.RichFunction1AsLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongFunction.RichFunction1AsLongFunction()</target>
        </trans-unit>
        <trans-unit id="b0adb7454c7290d3811f88eaa77f42c835695575" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="61552256402072e0c7328ef9547f44e1decd5afa" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongFunction.asJavaLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongFunction.asJavaLongFunction()</target>
        </trans-unit>
        <trans-unit id="f1fbf0d19788ff2fb80ebb37f65c85f696555ab0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongPredicate</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongPredicate</target>
        </trans-unit>
        <trans-unit id="d03823e751fd5257dfdf91987dcca5c5b4dfe11b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongPredicate()</target>
        </trans-unit>
        <trans-unit id="cd373ba10c8e18ab9e7626df19852f30dfa066ed" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongPredicate.RichFunction1AsLongPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongPredicate.RichFunction1AsLongPredicate()</target>
        </trans-unit>
        <trans-unit id="a4fb729df9c88350f2d9a4d3eeeed31aa2c7c8f6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongPredicate.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongPredicate.asJava()</target>
        </trans-unit>
        <trans-unit id="01270764cc7f9c39eaf8925db872a7aab9e53ceb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongToDoubleFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="4f594357a67a8981619da1ea0750513da87d06ee" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="4378da889423e6412b8e25bec67120d2ed48682f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongToDoubleFunction.RichFunction1AsLongToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongToDoubleFunction.RichFunction1AsLongToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="8b0fefca62e23435d5cade4f845be07c46cae654" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongToDoubleFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongToDoubleFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="5289f1600c0685fb52a95d8b2986371c68b7fffe" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongToIntFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongToIntFunction</target>
        </trans-unit>
        <trans-unit id="3e0b9176609ff627f13134509b82aa49c6b2025a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongToIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongToIntFunction()</target>
        </trans-unit>
        <trans-unit id="f22ce2c8901880e1387ded967e24f22a5496639e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongToIntFunction.RichFunction1AsLongToIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongToIntFunction.RichFunction1AsLongToIntFunction()</target>
        </trans-unit>
        <trans-unit id="0926df7a02773f83a31cb2bb14026df4d6d305e3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongToIntFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongToIntFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="a68a1fffb7ce86d9bffa616f8bad362b2838bfa9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongUnaryOperator</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongUnaryOperator</target>
        </trans-unit>
        <trans-unit id="0de4607c1d8e3ffbdb99a2f63013d791e5aeb813" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="1451a752f3c376b31e275a223cb4723d417fce54" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongUnaryOperator.RichFunction1AsLongUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongUnaryOperator.RichFunction1AsLongUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="12f6646e45dc1018fbeed59bc03e61fcc1538229" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsLongUnaryOperator.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsLongUnaryOperator.asJava()</target>
        </trans-unit>
        <trans-unit id="e324e007044d1a132c8137122543444b58b3f8b8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsPredicate</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsPredicate</target>
        </trans-unit>
        <trans-unit id="a858894506bc54840d7c8f0043cdb1abbd2935cc" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsPredicate()</target>
        </trans-unit>
        <trans-unit id="e6e95cfcfba4d290311fe3faf004f845b453bc5d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsPredicate.RichFunction1AsPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsPredicate.RichFunction1AsPredicate()</target>
        </trans-unit>
        <trans-unit id="626c3dab6d08d01659f496e92124ed26ff01f133" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsPredicate.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsPredicate.asJava()</target>
        </trans-unit>
        <trans-unit id="afed496f6f6ad0cd22ecda32d22c6a160de68d1c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsPredicate.asJavaPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsPredicate.asJavaPredicate()</target>
        </trans-unit>
        <trans-unit id="97a41dc461a2d11b122dc85353d46b50e25bb3a4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToDoubleFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="c48ffda875c10a5abe1bdb10fba33079b30b524f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="7970e8a607d55498e3edd53d56fe6fe56b477f4f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToDoubleFunction.RichFunction1AsToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToDoubleFunction.RichFunction1AsToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="b2c97e67bf2a9d81978a164918db8f6edfebdbd7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToDoubleFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToDoubleFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="5be86b7e2e606df30fe171586b75c7747e67bece" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToDoubleFunction.asJavaToDoubleFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToDoubleFunction.asJavaToDoubleFunction()</target>
        </trans-unit>
        <trans-unit id="5cb27bbfb58292211fb639fe22330d2e6e735db4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToIntFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToIntFunction</target>
        </trans-unit>
        <trans-unit id="01d9b0099d7e8d8e6afe4da04ac3120dab48eff6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToIntFunction()</target>
        </trans-unit>
        <trans-unit id="7a2b53701086b0e01e6ad18be8613807494fe564" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToIntFunction.RichFunction1AsToIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToIntFunction.RichFunction1AsToIntFunction()</target>
        </trans-unit>
        <trans-unit id="ab8b835cef25a810ebc9e1905a5257bff17e0d18" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToIntFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToIntFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="623bcc3a04ef7ed1d84fd988b2daaa5420453120" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToIntFunction.asJavaToIntFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToIntFunction.asJavaToIntFunction()</target>
        </trans-unit>
        <trans-unit id="58b87ddcae97f3e55a15262d9b4c6354f92d3ab1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToLongFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToLongFunction</target>
        </trans-unit>
        <trans-unit id="99657a32d7e5c4652c257cb1a0488ed81a44bf4f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToLongFunction()</target>
        </trans-unit>
        <trans-unit id="181020123fc6e9adda0eeff439c11876eec93066" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToLongFunction.RichFunction1AsToLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToLongFunction.RichFunction1AsToLongFunction()</target>
        </trans-unit>
        <trans-unit id="adaf4bb7bee07b39e6456544ed29250beaa3705f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToLongFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToLongFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="a9b00fd4a12ae458cf89fa031c0dc14b666121bb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsToLongFunction.asJavaToLongFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsToLongFunction.asJavaToLongFunction()</target>
        </trans-unit>
        <trans-unit id="06444ad00fece0038568885ecec957448914e215" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsUnaryOperator</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsUnaryOperator</target>
        </trans-unit>
        <trans-unit id="fab5791771164a360625446d1dfb4bf5a266bb55" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="c2e29e24b3ed55b53615945494db49a5d33f08b9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsUnaryOperator.RichFunction1AsUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsUnaryOperator.RichFunction1AsUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="cb4fbc26dc93c2104d491870a291b717268f4c72" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsUnaryOperator.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsUnaryOperator.asJava()</target>
        </trans-unit>
        <trans-unit id="0a31c619ecb759b85d14993b2a9be7144c7b8e5d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction1AsUnaryOperator.asJavaUnaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction1AsUnaryOperator.asJavaUnaryOperator()</target>
        </trans-unit>
        <trans-unit id="7f8f9289c0808218590886be6c96617fcfe0a98a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiConsumer</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiConsumer</target>
        </trans-unit>
        <trans-unit id="4cae1d8b71870b58e7eb7229a0b321cca8d57f1d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiConsumer()</target>
        </trans-unit>
        <trans-unit id="408b7865410bf3bf53ce609a0359b8fbccadbe67" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiConsumer.RichFunction2AsBiConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiConsumer.RichFunction2AsBiConsumer()</target>
        </trans-unit>
        <trans-unit id="004fb2e01c118a2f26ccd967008da9c7409ee2a1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiConsumer.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiConsumer.asJava()</target>
        </trans-unit>
        <trans-unit id="484cf0d5f612072beb19be2711f365df716296e6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiConsumer.asJavaBiConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiConsumer.asJavaBiConsumer()</target>
        </trans-unit>
        <trans-unit id="ef57321a8d49cad8ddb64e7bcd8b9a6c9ef5c02b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiFunction</target>
        </trans-unit>
        <trans-unit id="80532eadb0ea35cec7c88bbe1576f21799c35c69" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiFunction()</target>
        </trans-unit>
        <trans-unit id="08ebece07df81ebfbd573da621534662f913b3dd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiFunction.RichFunction2AsBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiFunction.RichFunction2AsBiFunction()</target>
        </trans-unit>
        <trans-unit id="f28aeefa21ad9c199adb08c35e85f45fee02608e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="bebd34cacdb60fa81481ea5213e92d87fe849088" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiFunction.asJavaBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiFunction.asJavaBiFunction()</target>
        </trans-unit>
        <trans-unit id="11ac658e5039d96655d1aeb12a15f77854a3350f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiPredicate</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiPredicate</target>
        </trans-unit>
        <trans-unit id="4a258be299435e5a9f9bcf5ebfe525ae33d52ea6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiPredicate()</target>
        </trans-unit>
        <trans-unit id="3e83985c516021302fab2cca2ccf8c2eaa8a7380" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiPredicate.RichFunction2AsBiPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiPredicate.RichFunction2AsBiPredicate()</target>
        </trans-unit>
        <trans-unit id="16f457ae6283f1736bb0d59cce3a43a7686338bd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiPredicate.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiPredicate.asJava()</target>
        </trans-unit>
        <trans-unit id="469a1ac46e46d8d31cf969041a4d42bb1fd990a4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBiPredicate.asJavaBiPredicate()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBiPredicate.asJavaBiPredicate()</target>
        </trans-unit>
        <trans-unit id="7ac1364246d53d88178d25279d0954c8248be257" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBinaryOperator</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBinaryOperator</target>
        </trans-unit>
        <trans-unit id="026ec8bfbfe03a33e12895506b2cf449666af80b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="4842e45a87303498fe9ea407725127bd225375f2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBinaryOperator.RichFunction2AsBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBinaryOperator.RichFunction2AsBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="e69c3a10081453114a3c4b6fc0fdcdb803fabe52" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBinaryOperator.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBinaryOperator.asJava()</target>
        </trans-unit>
        <trans-unit id="00e545966b4d1fe41b262e19d25ebf793008c087" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsBinaryOperator.asJavaBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsBinaryOperator.asJavaBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="2f904225741bbfa709aa4e5554bd86ffa500c10f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsDoubleBinaryOperator</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsDoubleBinaryOperator</target>
        </trans-unit>
        <trans-unit id="b39e59e3ec7ef15447ade977da61f55826749003" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsDoubleBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsDoubleBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="7dbe26aeca389773e32443b5beab279fd29fd68d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsDoubleBinaryOperator.RichFunction2AsDoubleBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsDoubleBinaryOperator.RichFunction2AsDoubleBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="8e0696ef54be0407d0a673f3fc9876e52ff46efd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsDoubleBinaryOperator.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsDoubleBinaryOperator.asJava()</target>
        </trans-unit>
        <trans-unit id="b134d329792d739bbac71211fb3c02cfe546f0e2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsIntBinaryOperator</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsIntBinaryOperator</target>
        </trans-unit>
        <trans-unit id="54040f6526db27ce30631afd3e6705cd55b328b5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsIntBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsIntBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="5ffdab6dfea5b5a0985903b74e708984eed5b6d0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsIntBinaryOperator.RichFunction2AsIntBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsIntBinaryOperator.RichFunction2AsIntBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="d8573ccc6e5ebbc8e551466a2072d805ca5a9c9f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsIntBinaryOperator.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsIntBinaryOperator.asJava()</target>
        </trans-unit>
        <trans-unit id="3087956574e27a162928d7d6dde38131f3267882" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsLongBinaryOperator</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsLongBinaryOperator</target>
        </trans-unit>
        <trans-unit id="5fe884cf88979352c58c7e120d21d411a09d04fb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsLongBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsLongBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="c8212da8c8f068590fd8cf7755b7a43baba7d8e8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsLongBinaryOperator.RichFunction2AsLongBinaryOperator()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsLongBinaryOperator.RichFunction2AsLongBinaryOperator()</target>
        </trans-unit>
        <trans-unit id="c124c9dc7cdb06cc352f5bfeb52f7cd0658e221d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsLongBinaryOperator.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsLongBinaryOperator.asJava()</target>
        </trans-unit>
        <trans-unit id="257d148eb22c40e9612b88be3d3760dca9bba6ec" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjDoubleConsumer</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjDoubleConsumer</target>
        </trans-unit>
        <trans-unit id="3c1e38901e344cff667dd81c370c8e8f10ed31cf" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="d078f684d383afd948cc44be37e0d78c4c109ce3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjDoubleConsumer.RichFunction2AsObjDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjDoubleConsumer.RichFunction2AsObjDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="0932206bff2bb24303f4dee080e0711854c3f056" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjDoubleConsumer.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjDoubleConsumer.asJava()</target>
        </trans-unit>
        <trans-unit id="a725e954508e9b087c87b3ed4c1f6d4783b03a10" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjDoubleConsumer.asJavaObjDoubleConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjDoubleConsumer.asJavaObjDoubleConsumer()</target>
        </trans-unit>
        <trans-unit id="207b662058af4530c99bcc8cbb1f321ab7218a85" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjIntConsumer</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjIntConsumer</target>
        </trans-unit>
        <trans-unit id="a58f8b1c9163692aaa1e0464c6e3ad15f656d216" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjIntConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjIntConsumer()</target>
        </trans-unit>
        <trans-unit id="7d4b382d31cc020c14adde953603b3459f65d286" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjIntConsumer.RichFunction2AsObjIntConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjIntConsumer.RichFunction2AsObjIntConsumer()</target>
        </trans-unit>
        <trans-unit id="2e7558086b27a3634ea5804caaf358da2fc5c4c3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjIntConsumer.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjIntConsumer.asJava()</target>
        </trans-unit>
        <trans-unit id="8658a593fc03a7b5a58cb661447bb7a03cef24af" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjIntConsumer.asJavaObjIntConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjIntConsumer.asJavaObjIntConsumer()</target>
        </trans-unit>
        <trans-unit id="07e5bcda91eb3ef9b8cf2d784f4c76f8b98af20e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjLongConsumer</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjLongConsumer</target>
        </trans-unit>
        <trans-unit id="b46242c9d1e455cfb037df278d401e784fa1bd20" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjLongConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjLongConsumer()</target>
        </trans-unit>
        <trans-unit id="a1be4f2d10b25b607fe058330440680f40773aa9" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjLongConsumer.RichFunction2AsObjLongConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjLongConsumer.RichFunction2AsObjLongConsumer()</target>
        </trans-unit>
        <trans-unit id="a142bc9ee4679c049c11219636afbe9b99b22777" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjLongConsumer.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjLongConsumer.asJava()</target>
        </trans-unit>
        <trans-unit id="0c30e491feb388359c57554ab8bd5d33afaf698f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsObjLongConsumer.asJavaObjLongConsumer()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsObjLongConsumer.asJavaObjLongConsumer()</target>
        </trans-unit>
        <trans-unit id="21afc288dced3b7e3f76e7280aff377275435fff" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToDoubleBiFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToDoubleBiFunction</target>
        </trans-unit>
        <trans-unit id="26b9bdfa3506df45ce56f252228f807d9a2bb7b6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToDoubleBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToDoubleBiFunction()</target>
        </trans-unit>
        <trans-unit id="868d816b120cf8374edf5f408bcb4cf4a008fabf" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToDoubleBiFunction.RichFunction2AsToDoubleBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToDoubleBiFunction.RichFunction2AsToDoubleBiFunction()</target>
        </trans-unit>
        <trans-unit id="707ece0d759ef242c5a09583d2c32200043b9cee" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToDoubleBiFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToDoubleBiFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="e954ad84be024ae3fe5977589fb0b449a57fe76f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToDoubleBiFunction.asJavaToDoubleBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToDoubleBiFunction.asJavaToDoubleBiFunction()</target>
        </trans-unit>
        <trans-unit id="9d694b63485a5b4c79ced849d4a516dbe3922e2a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToIntBiFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToIntBiFunction</target>
        </trans-unit>
        <trans-unit id="bc6dfec3dd0bc594b1378ef3b91e5c6cff1f21d2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToIntBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToIntBiFunction()</target>
        </trans-unit>
        <trans-unit id="4fc8b63a39f8823877fd2a7502c8593589e1c31a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToIntBiFunction.RichFunction2AsToIntBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToIntBiFunction.RichFunction2AsToIntBiFunction()</target>
        </trans-unit>
        <trans-unit id="ccdd3f2dcbe7c2ae5d4c88c15bc0403c2be5fe78" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToIntBiFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToIntBiFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="4ece603059bba71715018403b9d98d5173c6cc56" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToIntBiFunction.asJavaToIntBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToIntBiFunction.asJavaToIntBiFunction()</target>
        </trans-unit>
        <trans-unit id="421da1a9b67954db46bdbc732187f02de21ff16c" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToLongBiFunction</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToLongBiFunction</target>
        </trans-unit>
        <trans-unit id="50521188231ca34563521680df71d82c87f26c44" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToLongBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToLongBiFunction()</target>
        </trans-unit>
        <trans-unit id="19376bcc14239e18d3d70b5a0dacba837133437d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToLongBiFunction.RichFunction2AsToLongBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToLongBiFunction.RichFunction2AsToLongBiFunction()</target>
        </trans-unit>
        <trans-unit id="70911c05bf4e5af29c77cdeae16255be64b548ae" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToLongBiFunction.asJava()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToLongBiFunction.asJava()</target>
        </trans-unit>
        <trans-unit id="792721f22cb4672c7a9da03110d3f3244485d280" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunction2AsToLongBiFunction.asJavaToLongBiFunction()</source>
          <target state="translated">FunctionWrappers$.RichFunction2AsToLongBiFunction.asJavaToLongBiFunction()</target>
        </trans-unit>
        <trans-unit id="451758b6346c17a7bf2c2f54dedd68ba29c93dbc" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="e25469e038ef732050bb9bdc5d11ae7486b4c243" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="0cafd0669b21e025da1396b0ecc2f58695fbd8c2" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunctionAsFunction1.RichFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichFunctionAsFunction1.RichFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="f9cba55e5d74fc413cf5c5d1283aaf8d07f7dc15" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="91a6c566bc7e1de577f0f94b23c25d626a48933e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntBinaryOperatorAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichIntBinaryOperatorAsFunction2</target>
        </trans-unit>
        <trans-unit id="4f3b72ac35f24fafb2d47034bdc78e7a53769c63" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntBinaryOperatorAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichIntBinaryOperatorAsFunction2()</target>
        </trans-unit>
        <trans-unit id="50f7eaa51efc063811bb3a694c8bf6ec22733176" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntBinaryOperatorAsFunction2.RichIntBinaryOperatorAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichIntBinaryOperatorAsFunction2.RichIntBinaryOperatorAsFunction2()</target>
        </trans-unit>
        <trans-unit id="5dd3e3ba6b7e4b190b75092a200d0dc8a41e6d3d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntBinaryOperatorAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichIntBinaryOperatorAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="ea750fbc4acc0f8535dd9825a2fdf23a37d97a45" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntConsumerAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichIntConsumerAsFunction1</target>
        </trans-unit>
        <trans-unit id="d48787596553fa36bcec8081b53b71dd0149bc96" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntConsumerAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntConsumerAsFunction1()</target>
        </trans-unit>
        <trans-unit id="75ef76d9c6f080c46185d80fffafb094b648ba77" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntConsumerAsFunction1.RichIntConsumerAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntConsumerAsFunction1.RichIntConsumerAsFunction1()</target>
        </trans-unit>
        <trans-unit id="0da2a7ac1b6a24e331385f2ff878adace3e5c5e1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntConsumerAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichIntConsumerAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="e4fdf341599ec147e35a2f230c50b541d8dd3433" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichIntFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="9e020d47694e8c880e63e5d0fca9f765ba427461" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="db089ebf4e267557d66b4d0323a537b8d2732db7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntFunctionAsFunction1.RichIntFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntFunctionAsFunction1.RichIntFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="b60a38c9718f3c37997157e447ba7f4b138f8b30" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichIntFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="43c5ccc297b6cf3983a7ba0cdfdd66625e26ca1d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntPredicateAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichIntPredicateAsFunction1</target>
        </trans-unit>
        <trans-unit id="b2425b4cebfb1359c8a5f6a51641ab2785d0e9f6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntPredicateAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntPredicateAsFunction1()</target>
        </trans-unit>
        <trans-unit id="0dae367f784b2f01a85a07fa7e6744a63cf2fc3d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntPredicateAsFunction1.RichIntPredicateAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntPredicateAsFunction1.RichIntPredicateAsFunction1()</target>
        </trans-unit>
        <trans-unit id="34ecdc6b1fcf540c6f922c00bd71262897c80beb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntPredicateAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichIntPredicateAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="a0c10b742f672ec944cac0bf792418f990adf785" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntSupplierAsFunction0</source>
          <target state="translated">FunctionWrappers$.RichIntSupplierAsFunction0</target>
        </trans-unit>
        <trans-unit id="b037c519aad0f373b68ca3c6bf8466196aae8866" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichIntSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="d4cd4cc3a0a15e00388fdb7b237f9099e1221e47" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntSupplierAsFunction0.RichIntSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichIntSupplierAsFunction0.RichIntSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="99a9edc81510b5d71a95809b5b889839f0644b54" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntSupplierAsFunction0.asScala()</source>
          <target state="translated">FunctionWrappers$.RichIntSupplierAsFunction0.asScala()</target>
        </trans-unit>
        <trans-unit id="4c70a4e52e35ca00adc495ffc670ba96e7c1c68e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntToDoubleFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichIntToDoubleFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="3a393537701a3a3f0d96bbea0d37c43b5442a9f1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntToDoubleFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntToDoubleFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="a0a2393bc8b6225da78da09b43ed0cea78ac3475" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntToDoubleFunctionAsFunction1.RichIntToDoubleFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntToDoubleFunctionAsFunction1.RichIntToDoubleFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="5039c1c59bb0efe69d116ae426738e4ffd62e6b8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntToDoubleFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichIntToDoubleFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="f9b4cd3dccd94c9e97cd957d6558bc8157e8f790" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntToLongFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichIntToLongFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="5f81daa0fce464f959ff8e4980e8bc819bce680f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntToLongFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntToLongFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="eb594ac1029b6d22f98f45cc52312b984a50b5fb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntToLongFunctionAsFunction1.RichIntToLongFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntToLongFunctionAsFunction1.RichIntToLongFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="c39d053e4781dcefeae89dfe936e4d72492fb130" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntToLongFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichIntToLongFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="d7e217ac360a1615ef6c61a24ef7376120139109" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntUnaryOperatorAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichIntUnaryOperatorAsFunction1</target>
        </trans-unit>
        <trans-unit id="6b9a457d6a7deac41a39e4c9d962608ea4ed85df" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntUnaryOperatorAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntUnaryOperatorAsFunction1()</target>
        </trans-unit>
        <trans-unit id="22b869fff14ba21220fd05ba092b41c09183e367" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntUnaryOperatorAsFunction1.RichIntUnaryOperatorAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichIntUnaryOperatorAsFunction1.RichIntUnaryOperatorAsFunction1()</target>
        </trans-unit>
        <trans-unit id="ca7e00e9f203774fd70ed5a0520678d37d14eac3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichIntUnaryOperatorAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichIntUnaryOperatorAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="dad8feba39811b8afddfa4aa62d1d724f2e232b5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongBinaryOperatorAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichLongBinaryOperatorAsFunction2</target>
        </trans-unit>
        <trans-unit id="aaf7c43168a55bbb9075d096edb7914702d5ce1b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongBinaryOperatorAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichLongBinaryOperatorAsFunction2()</target>
        </trans-unit>
        <trans-unit id="d8a83b2d4963f85e715378dbc726251fbb1fb52b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongBinaryOperatorAsFunction2.RichLongBinaryOperatorAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichLongBinaryOperatorAsFunction2.RichLongBinaryOperatorAsFunction2()</target>
        </trans-unit>
        <trans-unit id="c927415d2cf059b30cca074a3d6967430d3f0232" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongBinaryOperatorAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichLongBinaryOperatorAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="a82e3e360634e34f452ab4c9a0f69039ee78a98e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongConsumerAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichLongConsumerAsFunction1</target>
        </trans-unit>
        <trans-unit id="3ec2b530a9d1408faa4529b043a1284501c94a7a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongConsumerAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongConsumerAsFunction1()</target>
        </trans-unit>
        <trans-unit id="d7db871ae61495aa45f8b98870fab7c85e9e9de6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongConsumerAsFunction1.RichLongConsumerAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongConsumerAsFunction1.RichLongConsumerAsFunction1()</target>
        </trans-unit>
        <trans-unit id="b45cb4d6bf5a7a5bea2a5e11c5767fa3b4507856" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongConsumerAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichLongConsumerAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="c43008363b22356b86d93c21330ceca8f742003f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichLongFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="2a42a0f2d295ee71feecedad0eaa1ed33ad931d7" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="2500c42453de9b58afde3285265cadba58297f25" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongFunctionAsFunction1.RichLongFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongFunctionAsFunction1.RichLongFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="d6bc6319dbb55d3e27bb0d041c8bc3043e7fc8ad" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichLongFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="985079b4c3becb2bdb00d85b13d908b4cad23da0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongPredicateAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichLongPredicateAsFunction1</target>
        </trans-unit>
        <trans-unit id="8f37d70af1c4b34c66d2786f12755fd0e1fc41ef" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongPredicateAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongPredicateAsFunction1()</target>
        </trans-unit>
        <trans-unit id="938edf232505137d37990144f520d66adcfb4f18" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongPredicateAsFunction1.RichLongPredicateAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongPredicateAsFunction1.RichLongPredicateAsFunction1()</target>
        </trans-unit>
        <trans-unit id="19c470f53e31b3cfb6d5efc7b67124749e3e31dd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongPredicateAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichLongPredicateAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="baf2b82a2333e0d00d2cf8e2e2f1475711da1394" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongSupplierAsFunction0</source>
          <target state="translated">FunctionWrappers$.RichLongSupplierAsFunction0</target>
        </trans-unit>
        <trans-unit id="cb4233e84b31eb434d01407e616fc417f55b2f42" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichLongSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="a4e58654239a34adebc3cb68fd1c9b2db63e9496" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongSupplierAsFunction0.RichLongSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichLongSupplierAsFunction0.RichLongSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="7de9c91cbab4d227af80fb013467cb53e69752aa" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongSupplierAsFunction0.asScala()</source>
          <target state="translated">FunctionWrappers$.RichLongSupplierAsFunction0.asScala()</target>
        </trans-unit>
        <trans-unit id="c1580f230af17ae44128e46b0ee99e387ffa4449" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongToDoubleFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichLongToDoubleFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="507aeef4f4cd5dc26abd9ef9ba55dfc0d6c44b2d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongToDoubleFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongToDoubleFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="4b611b26c6034a064822f845dc2d78d42e4ec7b0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongToDoubleFunctionAsFunction1.RichLongToDoubleFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongToDoubleFunctionAsFunction1.RichLongToDoubleFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="9ec92a8e8b97db12a850ca942e462c91a1aa5ada" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongToDoubleFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichLongToDoubleFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="687fc401798ddd13bb4fa85b438386b2e7369a50" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongToIntFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichLongToIntFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="b533a4234a888d29d1f6164cc33e7fbdb5651878" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongToIntFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongToIntFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="98fcd6b7f58b84b0a6c330faf48ce376990f8259" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongToIntFunctionAsFunction1.RichLongToIntFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongToIntFunctionAsFunction1.RichLongToIntFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="f96c0e57f15c7298d9ffccd74af527374b040e64" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongToIntFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichLongToIntFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="363a0a300175fd9984df13aabeb04dc1358535e6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongUnaryOperatorAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichLongUnaryOperatorAsFunction1</target>
        </trans-unit>
        <trans-unit id="4b7d2fa8044f851af3d96a8bbbdfee8e813cd7c5" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongUnaryOperatorAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongUnaryOperatorAsFunction1()</target>
        </trans-unit>
        <trans-unit id="a9f15305ae7a905576436219d092a9d609dba519" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongUnaryOperatorAsFunction1.RichLongUnaryOperatorAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichLongUnaryOperatorAsFunction1.RichLongUnaryOperatorAsFunction1()</target>
        </trans-unit>
        <trans-unit id="68ff502653d76be0920663d4af9bf0b75441a0eb" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichLongUnaryOperatorAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichLongUnaryOperatorAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="4896007c7eb86ccdb0677f8821b87d9f5bbd91fe" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjDoubleConsumerAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichObjDoubleConsumerAsFunction2</target>
        </trans-unit>
        <trans-unit id="74f327daea608c6f881fe2e408eedfc03d218e4e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjDoubleConsumerAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichObjDoubleConsumerAsFunction2()</target>
        </trans-unit>
        <trans-unit id="b60843eb9187fac384e38811420636af97fd3b4f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjDoubleConsumerAsFunction2.RichObjDoubleConsumerAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichObjDoubleConsumerAsFunction2.RichObjDoubleConsumerAsFunction2()</target>
        </trans-unit>
        <trans-unit id="67a51a4e3c47cecce7c0e770ab7f94ccb1c87171" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjDoubleConsumerAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichObjDoubleConsumerAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="9632ee444b419df3ed44a92b11303af8bea63924" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjIntConsumerAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichObjIntConsumerAsFunction2</target>
        </trans-unit>
        <trans-unit id="a914ea5c6c8284a570eff88ea8e5750d8422d884" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjIntConsumerAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichObjIntConsumerAsFunction2()</target>
        </trans-unit>
        <trans-unit id="22640010637f767e5dd79b560974061498527fad" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjIntConsumerAsFunction2.RichObjIntConsumerAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichObjIntConsumerAsFunction2.RichObjIntConsumerAsFunction2()</target>
        </trans-unit>
        <trans-unit id="7e3e93ba78a4c5b062ef59529fafae172a0ab784" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjIntConsumerAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichObjIntConsumerAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="a97ecee433576b2c3d3c6e9264e15a17d82ad109" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjLongConsumerAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichObjLongConsumerAsFunction2</target>
        </trans-unit>
        <trans-unit id="9aeb0556e54f6bde8448c775165ecd25ca094d64" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjLongConsumerAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichObjLongConsumerAsFunction2()</target>
        </trans-unit>
        <trans-unit id="fa168113fc00350531c49424c7e86c8ba1450cb3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjLongConsumerAsFunction2.RichObjLongConsumerAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichObjLongConsumerAsFunction2.RichObjLongConsumerAsFunction2()</target>
        </trans-unit>
        <trans-unit id="c1cf736cedd159424e4721e1036863497dc3ad83" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichObjLongConsumerAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichObjLongConsumerAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="6da8d88089702772ad92eb1e454a0d7b4e17c941" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichPredicateAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichPredicateAsFunction1</target>
        </trans-unit>
        <trans-unit id="7ca8f498f2bf89bed721bbb7fe0f9c0cea470ea1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichPredicateAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichPredicateAsFunction1()</target>
        </trans-unit>
        <trans-unit id="6e13a1e2e718cb381908f65d1ba8b6c74ee1fcf4" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichPredicateAsFunction1.RichPredicateAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichPredicateAsFunction1.RichPredicateAsFunction1()</target>
        </trans-unit>
        <trans-unit id="c77ddc23fb4d1b9c964579f2ee55436cc1b07b09" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichPredicateAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichPredicateAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="a69a5349218f95c3cfa1495dd0a1b4a6bb8de7c6" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichSupplierAsFunction0</source>
          <target state="translated">FunctionWrappers$.RichSupplierAsFunction0</target>
        </trans-unit>
        <trans-unit id="21e0fd4667e5d891e6fb3bc2406ebe2410181284" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="d8553c4a7f56d264bbedaa419baf584f8c40a968" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichSupplierAsFunction0.RichSupplierAsFunction0()</source>
          <target state="translated">FunctionWrappers$.RichSupplierAsFunction0.RichSupplierAsFunction0()</target>
        </trans-unit>
        <trans-unit id="f9c45eabdeae9ba50d5499c3389f1cd723719b69" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichSupplierAsFunction0.asScala()</source>
          <target state="translated">FunctionWrappers$.RichSupplierAsFunction0.asScala()</target>
        </trans-unit>
        <trans-unit id="18310b5ed08888f2455f9ed5a180f99b522aa3e1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToDoubleBiFunctionAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichToDoubleBiFunctionAsFunction2</target>
        </trans-unit>
        <trans-unit id="387e669254b5a2e03e2ecff269dd94a515123788" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToDoubleBiFunctionAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichToDoubleBiFunctionAsFunction2()</target>
        </trans-unit>
        <trans-unit id="959579922af6e593f5ae3cb4546da118407cf9c3" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToDoubleBiFunctionAsFunction2.RichToDoubleBiFunctionAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichToDoubleBiFunctionAsFunction2.RichToDoubleBiFunctionAsFunction2()</target>
        </trans-unit>
        <trans-unit id="e6b13b1bcb9f352b137141af67608d14143e1082" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToDoubleBiFunctionAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichToDoubleBiFunctionAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="c1bc7dda82c8565225ec2fee6a9dd9e0d71966cd" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToDoubleFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichToDoubleFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="7ca4db666e872f15b6b3ecb6a8ed33d7dee0aa6e" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToDoubleFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichToDoubleFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="76d4b3aee172ae2343b62d5b5fc8662d04f1bbd1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToDoubleFunctionAsFunction1.RichToDoubleFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichToDoubleFunctionAsFunction1.RichToDoubleFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="a204de54aa6ad1afde2b5313a8fe2be96fe15a9b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToDoubleFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichToDoubleFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="c1e8da7f3fafb8e87673cd156efb9204e0e3083a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToIntBiFunctionAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichToIntBiFunctionAsFunction2</target>
        </trans-unit>
        <trans-unit id="ee37ad7e56377e20ec38104394396fd2709cf9db" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToIntBiFunctionAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichToIntBiFunctionAsFunction2()</target>
        </trans-unit>
        <trans-unit id="6dbdcaef314b64f4a94ffb4b1aae4fe0a5cfcb07" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToIntBiFunctionAsFunction2.RichToIntBiFunctionAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichToIntBiFunctionAsFunction2.RichToIntBiFunctionAsFunction2()</target>
        </trans-unit>
        <trans-unit id="acc816eff40f86e227151aad90fa4099051b7e0f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToIntBiFunctionAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichToIntBiFunctionAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="8983cf8b67ad153d68adf43de49132e1dc54a225" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToIntFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichToIntFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="44db23d17ce7c6484de1d6035358d2d6b3de93bf" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToIntFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichToIntFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="f75180dd67a27ddb2cde2f555fcf04831e13d78d" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToIntFunctionAsFunction1.RichToIntFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichToIntFunctionAsFunction1.RichToIntFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="9a2d43aa56bbff458758fcb63e4a2e4da6d5acbc" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToIntFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichToIntFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="db9e8d1352e976fce8217a29c2f257918c4af6c0" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToLongBiFunctionAsFunction2</source>
          <target state="translated">FunctionWrappers$.RichToLongBiFunctionAsFunction2</target>
        </trans-unit>
        <trans-unit id="082ecf3e85e4be48400452c65b1a7632c1255d2b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToLongBiFunctionAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichToLongBiFunctionAsFunction2()</target>
        </trans-unit>
        <trans-unit id="ec61ec7d13677a834bc572f12572dbfce3b09003" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToLongBiFunctionAsFunction2.RichToLongBiFunctionAsFunction2()</source>
          <target state="translated">FunctionWrappers$.RichToLongBiFunctionAsFunction2.RichToLongBiFunctionAsFunction2()</target>
        </trans-unit>
        <trans-unit id="6f195ce8e26804687aa22abcb9f69bc39e371f36" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToLongBiFunctionAsFunction2.asScala()</source>
          <target state="translated">FunctionWrappers$.RichToLongBiFunctionAsFunction2.asScala()</target>
        </trans-unit>
        <trans-unit id="83285854dbf2056f99ca1b281602d9b0b7375681" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToLongFunctionAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichToLongFunctionAsFunction1</target>
        </trans-unit>
        <trans-unit id="afcc8fc3a02c93abef40669e49ef1a4748224c7f" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToLongFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichToLongFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="9c8b8ebca5aa8d9b6413e5dc814be5158e15d10b" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToLongFunctionAsFunction1.RichToLongFunctionAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichToLongFunctionAsFunction1.RichToLongFunctionAsFunction1()</target>
        </trans-unit>
        <trans-unit id="213e323c42c5fa50f13dada9e88d3f885698f87a" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichToLongFunctionAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichToLongFunctionAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="171e10776ced9a6d69a022bf5bd232b77fe4a6da" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichUnaryOperatorAsFunction1</source>
          <target state="translated">FunctionWrappers$.RichUnaryOperatorAsFunction1</target>
        </trans-unit>
        <trans-unit id="dc3c8ef159a03d03ef011465c0b09f5ddd187af8" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichUnaryOperatorAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichUnaryOperatorAsFunction1()</target>
        </trans-unit>
        <trans-unit id="9df9a5f9d559aafb9b0b1891569e27136641d107" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichUnaryOperatorAsFunction1.RichUnaryOperatorAsFunction1()</source>
          <target state="translated">FunctionWrappers$.RichUnaryOperatorAsFunction1.RichUnaryOperatorAsFunction1()</target>
        </trans-unit>
        <trans-unit id="0beeae55939c97e1862de18862c8381f639103d1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers$.RichUnaryOperatorAsFunction1.asScala()</source>
          <target state="translated">FunctionWrappers$.RichUnaryOperatorAsFunction1.asScala()</target>
        </trans-unit>
        <trans-unit id="4270390ca463166a888a956c5d8f7e46bcd7c0b1" translate="yes" xml:space="preserve">
          <source>FunctionWrappers.scala</source>
          <target state="translated">FunctionWrappers.scala</target>
        </trans-unit>
        <trans-unit id="7fb57c3b73c78851d60a89f75a41d3a0a8dc5a5f" translate="yes" xml:space="preserve">
          <source>Further refines the filter for this &lt;code&gt;filtered&lt;/code&gt; collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7232391e4432da2f502316d3e6b62fa929a404a" translate="yes" xml:space="preserve">
          <source>Further refines the filter for this &lt;code&gt;filtered&lt;/code&gt; map collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d98de943f58104670deaeb7729d4db4c8f9f29f" translate="yes" xml:space="preserve">
          <source>Further refines the filter for this &lt;code&gt;filtered&lt;/code&gt; sorted collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c46803eca82b7e35aa6b51a0abf7af7bd18e705" translate="yes" xml:space="preserve">
          <source>Further refines the filter for this &lt;code&gt;filtered&lt;/code&gt; sorted map collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">Future</target>
        </trans-unit>
        <trans-unit id="8d64b6d86fad29415a9ce7238cd85b60f5f67039" translate="yes" xml:space="preserve">
          <source>Future companion object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26d34c7f753af7dac2ae3cda7db8bb43916a02d" translate="yes" xml:space="preserve">
          <source>Future versions of this trait will no longer extend &lt;code&gt;DelayedInit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09fd80e708081e05a062acfbfa28fedc85b4c57" translate="yes" xml:space="preserve">
          <source>Future$</source>
          <target state="translated">Future$</target>
        </trans-unit>
        <trans-unit id="7adf1ed668cd95f35cf89fb2fff4c868ab176cd4" translate="yes" xml:space="preserve">
          <source>Future$.apply()</source>
          <target state="translated">Future$.apply()</target>
        </trans-unit>
        <trans-unit id="50006f76b264e220b97a2dbfe96fe29f5f951a52" translate="yes" xml:space="preserve">
          <source>Future$.delegate()</source>
          <target state="translated">Future$.delegate()</target>
        </trans-unit>
        <trans-unit id="56ef8edaa1f61638ae6bba5d20cc456ab1b53a5d" translate="yes" xml:space="preserve">
          <source>Future$.failed()</source>
          <target state="translated">Future$.failed()</target>
        </trans-unit>
        <trans-unit id="00b075771d222460f2ad086e5cb433fffa71668f" translate="yes" xml:space="preserve">
          <source>Future$.find()</source>
          <target state="translated">Future$.find()</target>
        </trans-unit>
        <trans-unit id="f0b0e66199d0dd2866bc49333b5a6c599f846eca" translate="yes" xml:space="preserve">
          <source>Future$.firstCompletedOf()</source>
          <target state="translated">Future$.firstCompletedOf()</target>
        </trans-unit>
        <trans-unit id="ae2eca5dda0e060411aaf9fd628a96f69ba06b2b" translate="yes" xml:space="preserve">
          <source>Future$.foldLeft()</source>
          <target state="translated">Future$.foldLeft()</target>
        </trans-unit>
        <trans-unit id="57ecf42c0b032a43ec7b2d7ecb3791de75c861e9" translate="yes" xml:space="preserve">
          <source>Future$.fromTry()</source>
          <target state="translated">Future$.fromTry()</target>
        </trans-unit>
        <trans-unit id="bfef14b6000acc414b2930a6efcca72d70942d36" translate="yes" xml:space="preserve">
          <source>Future$.never$</source>
          <target state="translated">Future$.never$</target>
        </trans-unit>
        <trans-unit id="12c1372eac0e8257a5abc4fa41ed488cf70eb41a" translate="yes" xml:space="preserve">
          <source>Future$.never$.andThen()</source>
          <target state="translated">Future$.never$.andThen()</target>
        </trans-unit>
        <trans-unit id="d1807b5b30761c2fd85e57d5d4a0cd6355e5d86c" translate="yes" xml:space="preserve">
          <source>Future$.never$.collect()</source>
          <target state="translated">Future$.never$.collect()</target>
        </trans-unit>
        <trans-unit id="21bc7bf3883b3799d5084141f086cc864b385e64" translate="yes" xml:space="preserve">
          <source>Future$.never$.failed()</source>
          <target state="translated">Future$.never$.failed()</target>
        </trans-unit>
        <trans-unit id="e044cd64defefa126a34199789adeb2c0edd09da" translate="yes" xml:space="preserve">
          <source>Future$.never$.fallbackTo()</source>
          <target state="translated">Future$.never$.fallbackTo()</target>
        </trans-unit>
        <trans-unit id="437ccb320e9dff6e7d07725c6715660111487fcd" translate="yes" xml:space="preserve">
          <source>Future$.never$.filter()</source>
          <target state="translated">Future$.never$.filter()</target>
        </trans-unit>
        <trans-unit id="536b3d9b31a614d9906fdf729aedbb001f092cb4" translate="yes" xml:space="preserve">
          <source>Future$.never$.flatMap()</source>
          <target state="translated">Future$.never$.flatMap()</target>
        </trans-unit>
        <trans-unit id="2aa8411e0e8472a4d79d9d84d3ee4ccbe1b28a67" translate="yes" xml:space="preserve">
          <source>Future$.never$.flatten()</source>
          <target state="translated">Future$.never$.flatten()</target>
        </trans-unit>
        <trans-unit id="c6c469b19f43b51a47cb5ab83d6926883bb26aef" translate="yes" xml:space="preserve">
          <source>Future$.never$.foreach()</source>
          <target state="translated">Future$.never$.foreach()</target>
        </trans-unit>
        <trans-unit id="d2602c35284bc720ec50816f64ac8f3549836a0e" translate="yes" xml:space="preserve">
          <source>Future$.never$.isCompleted()</source>
          <target state="translated">Future$.never$.isCompleted()</target>
        </trans-unit>
        <trans-unit id="522d9c90a61ef4ca421896c88c841ecb6ea831ee" translate="yes" xml:space="preserve">
          <source>Future$.never$.map()</source>
          <target state="translated">Future$.never$.map()</target>
        </trans-unit>
        <trans-unit id="20edef7c487d185cc43565f055017a8e91e871ce" translate="yes" xml:space="preserve">
          <source>Future$.never$.mapTo()</source>
          <target state="translated">Future$.never$.mapTo()</target>
        </trans-unit>
        <trans-unit id="501f6ae594252fb7404f307e299b616a203ac1b7" translate="yes" xml:space="preserve">
          <source>Future$.never$.onComplete()</source>
          <target state="translated">Future$.never$.onComplete()</target>
        </trans-unit>
        <trans-unit id="ae99fffb83df382e89cbdda071c1c083b38eeb00" translate="yes" xml:space="preserve">
          <source>Future$.never$.ready()</source>
          <target state="translated">Future$.never$.ready()</target>
        </trans-unit>
        <trans-unit id="15b537ed3b63da4c1ef1b352d2829ddc594ce10b" translate="yes" xml:space="preserve">
          <source>Future$.never$.recover()</source>
          <target state="translated">Future$.never$.recover()</target>
        </trans-unit>
        <trans-unit id="3c1d109430df1bb9be1575ec6eec9c4a151c2773" translate="yes" xml:space="preserve">
          <source>Future$.never$.recoverWith()</source>
          <target state="translated">Future$.never$.recoverWith()</target>
        </trans-unit>
        <trans-unit id="8043f2cd18c5fe975bc5f0b7865097d12454f468" translate="yes" xml:space="preserve">
          <source>Future$.never$.result()</source>
          <target state="translated">Future$.never$.result()</target>
        </trans-unit>
        <trans-unit id="011bd38841edc038792ebc64c2cf0e2e43e35dcf" translate="yes" xml:space="preserve">
          <source>Future$.never$.toString()</source>
          <target state="translated">Future$.never$.toString()</target>
        </trans-unit>
        <trans-unit id="ce3a13fa4b488cb1777df682ff3d219d188312a3" translate="yes" xml:space="preserve">
          <source>Future$.never$.transform()</source>
          <target state="translated">Future$.never$.transform()</target>
        </trans-unit>
        <trans-unit id="88c3a503b8878e260b47ef8e0ed174750a360676" translate="yes" xml:space="preserve">
          <source>Future$.never$.transformWith()</source>
          <target state="translated">Future$.never$.transformWith()</target>
        </trans-unit>
        <trans-unit id="6b85bc22924c069d3e358b9f77486316fb829479" translate="yes" xml:space="preserve">
          <source>Future$.never$.value()</source>
          <target state="translated">Future$.never$.value()</target>
        </trans-unit>
        <trans-unit id="518cfd2ffe9a82e82d71becb1f8733540cf4442b" translate="yes" xml:space="preserve">
          <source>Future$.never$.zip()</source>
          <target state="translated">Future$.never$.zip()</target>
        </trans-unit>
        <trans-unit id="cdb7cf66502194514e1364920573968af95eea97" translate="yes" xml:space="preserve">
          <source>Future$.never$.zipWith()</source>
          <target state="translated">Future$.never$.zipWith()</target>
        </trans-unit>
        <trans-unit id="8cf75f6ac3fe578dde0f0155c161609f32e503f0" translate="yes" xml:space="preserve">
          <source>Future$.never()</source>
          <target state="translated">Future$.never()</target>
        </trans-unit>
        <trans-unit id="9a8fb97f4f1bc5c3dea4d2870df153053200f2be" translate="yes" xml:space="preserve">
          <source>Future$.reduceLeft()</source>
          <target state="translated">Future$.reduceLeft()</target>
        </trans-unit>
        <trans-unit id="f081cee52c19972865b2575a80fda00e352cbc1d" translate="yes" xml:space="preserve">
          <source>Future$.sequence()</source>
          <target state="translated">Future$.sequence()</target>
        </trans-unit>
        <trans-unit id="42a9cffcaf2f7b85db7495f64fe03a3e28de99dd" translate="yes" xml:space="preserve">
          <source>Future$.successful()</source>
          <target state="translated">Future$.successful()</target>
        </trans-unit>
        <trans-unit id="5d27eb66d2bb2f55fc1b14a77c4cc81417df804b" translate="yes" xml:space="preserve">
          <source>Future$.traverse()</source>
          <target state="translated">Future$.traverse()</target>
        </trans-unit>
        <trans-unit id="09c468cc90926595650d18b6f39b5e2cc34e1b40" translate="yes" xml:space="preserve">
          <source>Future$.unit()</source>
          <target state="translated">Future$.unit()</target>
        </trans-unit>
        <trans-unit id="c434769a72cde89a346491cc9140c8429f9b65ca" translate="yes" xml:space="preserve">
          <source>Future.andThen()</source>
          <target state="translated">Future.andThen()</target>
        </trans-unit>
        <trans-unit id="14be813be123aa7c8be6693c8c8f80552bbf41be" translate="yes" xml:space="preserve">
          <source>Future.collect()</source>
          <target state="translated">Future.collect()</target>
        </trans-unit>
        <trans-unit id="eac07e48e501d91d4147e161e061274a58e4b099" translate="yes" xml:space="preserve">
          <source>Future.failed()</source>
          <target state="translated">Future.failed()</target>
        </trans-unit>
        <trans-unit id="b3c283bf6eb2ddaa2645c7dfe974e4006fe9f1ea" translate="yes" xml:space="preserve">
          <source>Future.fallbackTo()</source>
          <target state="translated">Future.fallbackTo()</target>
        </trans-unit>
        <trans-unit id="e164e18648bac35d741d2e0389a2c4fa5ffa1abf" translate="yes" xml:space="preserve">
          <source>Future.filter()</source>
          <target state="translated">Future.filter()</target>
        </trans-unit>
        <trans-unit id="bfb7c1678ba19ec44615c8782efe43e8af665f45" translate="yes" xml:space="preserve">
          <source>Future.flatMap()</source>
          <target state="translated">Future.flatMap()</target>
        </trans-unit>
        <trans-unit id="47ad98c933e8b5d3f82add2f2f51581b4a63c238" translate="yes" xml:space="preserve">
          <source>Future.flatten()</source>
          <target state="translated">Future.flatten()</target>
        </trans-unit>
        <trans-unit id="4dcfed851a4fec852a6941b7c9c5436595d7858e" translate="yes" xml:space="preserve">
          <source>Future.foreach()</source>
          <target state="translated">Future.foreach()</target>
        </trans-unit>
        <trans-unit id="a371c9df159f6bfa88734dc235bdc5b115ed4a59" translate="yes" xml:space="preserve">
          <source>Future.isCompleted()</source>
          <target state="translated">Future.isCompleted()</target>
        </trans-unit>
        <trans-unit id="2d806bb870c2dd6b3fd73f6cddafcc42226fb9dc" translate="yes" xml:space="preserve">
          <source>Future.map()</source>
          <target state="translated">Future.map()</target>
        </trans-unit>
        <trans-unit id="064d1ae979a85aae2f19c306d86144199afb4cd9" translate="yes" xml:space="preserve">
          <source>Future.mapTo()</source>
          <target state="translated">Future.mapTo()</target>
        </trans-unit>
        <trans-unit id="558bc51cc83c4339a257872779a741c4ed519596" translate="yes" xml:space="preserve">
          <source>Future.onComplete()</source>
          <target state="translated">Future.onComplete()</target>
        </trans-unit>
        <trans-unit id="b1a53122ead78c8cd90dd4327f4bae341303b409" translate="yes" xml:space="preserve">
          <source>Future.recover()</source>
          <target state="translated">Future.recover()</target>
        </trans-unit>
        <trans-unit id="50db14d25998239ee72db3a820116680cd51d3ac" translate="yes" xml:space="preserve">
          <source>Future.recoverWith()</source>
          <target state="translated">Future.recoverWith()</target>
        </trans-unit>
        <trans-unit id="a106da2d271ab88feb3eec0f8b92391bcc1faa9a" translate="yes" xml:space="preserve">
          <source>Future.scala</source>
          <target state="translated">Future.scala</target>
        </trans-unit>
        <trans-unit id="cd4ab73e3452ccfefa4a26296431efb8b2a23281" translate="yes" xml:space="preserve">
          <source>Future.transform()</source>
          <target state="translated">Future.transform()</target>
        </trans-unit>
        <trans-unit id="355377b9ff3431c4d9f3a2043a1c5f283e4e7847" translate="yes" xml:space="preserve">
          <source>Future.transformWith()</source>
          <target state="translated">Future.transformWith()</target>
        </trans-unit>
        <trans-unit id="42fe636dc68bc278ac4f92cab871540f948a6af2" translate="yes" xml:space="preserve">
          <source>Future.value()</source>
          <target state="translated">Future.value()</target>
        </trans-unit>
        <trans-unit id="b1ba613136f31d667fcc3546d6aec29602d874c1" translate="yes" xml:space="preserve">
          <source>Future.withFilter()</source>
          <target state="translated">Future.withFilter()</target>
        </trans-unit>
        <trans-unit id="78fa59515b7d7fe063295938a4f8df07f1c5c357" translate="yes" xml:space="preserve">
          <source>Future.zip()</source>
          <target state="translated">Future.zip()</target>
        </trans-unit>
        <trans-unit id="08ebe95f7528e06999ef0c4c736b93dde3d2e39a" translate="yes" xml:space="preserve">
          <source>Future.zipWith()</source>
          <target state="translated">Future.zipWith()</target>
        </trans-unit>
        <trans-unit id="aaaabc2ddcb367d27518861f0891147339a2dae3" translate="yes" xml:space="preserve">
          <source>FutureConverters$</source>
          <target state="translated">FutureConverters$</target>
        </trans-unit>
        <trans-unit id="cfa59c2bc47d41dc4c01fc375f39f99db9f0231b" translate="yes" xml:space="preserve">
          <source>FutureConverters$.CompletionStageOps</source>
          <target state="translated">FutureConverters$.CompletionStageOps</target>
        </trans-unit>
        <trans-unit id="141317fbfcc5ce1f9b5021fab0b4f7b9fbe2055d" translate="yes" xml:space="preserve">
          <source>FutureConverters$.CompletionStageOps()</source>
          <target state="translated">FutureConverters$.CompletionStageOps()</target>
        </trans-unit>
        <trans-unit id="d2568072cc0aafc0588c9d7d33cc61d586afc071" translate="yes" xml:space="preserve">
          <source>FutureConverters$.CompletionStageOps.CompletionStageOps()</source>
          <target state="translated">FutureConverters$.CompletionStageOps.CompletionStageOps()</target>
        </trans-unit>
        <trans-unit id="08dbb19c7fa31047adb3ce7d6abebbf04460d2ad" translate="yes" xml:space="preserve">
          <source>FutureConverters$.CompletionStageOps.asScala()</source>
          <target state="translated">FutureConverters$.CompletionStageOps.asScala()</target>
        </trans-unit>
        <trans-unit id="b7954337581136f45d84d4bc6379eed47cf6943d" translate="yes" xml:space="preserve">
          <source>FutureConverters$.FutureOps</source>
          <target state="translated">FutureConverters$.FutureOps</target>
        </trans-unit>
        <trans-unit id="3cc1baab855926897d76c6e167c98146dd9a3a63" translate="yes" xml:space="preserve">
          <source>FutureConverters$.FutureOps()</source>
          <target state="translated">FutureConverters$.FutureOps()</target>
        </trans-unit>
        <trans-unit id="386907b1f3721ddf40bcbc5837efcb50cc4d7853" translate="yes" xml:space="preserve">
          <source>FutureConverters$.FutureOps.FutureOps()</source>
          <target state="translated">FutureConverters$.FutureOps.FutureOps()</target>
        </trans-unit>
        <trans-unit id="11a229cc73fbeaeb0eaf8497f69f3046c970c191" translate="yes" xml:space="preserve">
          <source>FutureConverters$.FutureOps.asJava()</source>
          <target state="translated">FutureConverters$.FutureOps.asJava()</target>
        </trans-unit>
        <trans-unit id="46afb6b14d3ceea34b205024e605286b3125190e" translate="yes" xml:space="preserve">
          <source>FutureConverters$.asJava()</source>
          <target state="translated">FutureConverters$.asJava()</target>
        </trans-unit>
        <trans-unit id="1dcb209cd2ff01261a95f60c7546235c872effa9" translate="yes" xml:space="preserve">
          <source>FutureConverters$.asScala()</source>
          <target state="translated">FutureConverters$.asScala()</target>
        </trans-unit>
        <trans-unit id="2bfd917dbae3de34cc05b1e2f6251f7f48db81ef" translate="yes" xml:space="preserve">
          <source>FutureConverters.scala</source>
          <target state="translated">FutureConverters.scala</target>
        </trans-unit>
        <trans-unit id="0038bba1747fcad3d58228056689dd505c3380f1" translate="yes" xml:space="preserve">
          <source>Futures and Promises</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
