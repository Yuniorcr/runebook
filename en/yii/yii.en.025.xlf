<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="689fd8bacd2925bec04ef5aace8c1e1f79aa42db" translate="yes" xml:space="preserve">
          <source>You can also specify a custom pattern to format the number. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a4e452e1f645ef84a3a7d8bea943d43ed9e0a9" translate="yes" xml:space="preserve">
          <source>You can also specify a custom pattern to format the time value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48578b7694795f2795d657f14422fdb191570d8f" translate="yes" xml:space="preserve">
          <source>You can also specify file content via \yii\mongodb\file\newFileContent attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a946a2d68e2ebd1277bf82520d898c3d97800ed9" translate="yes" xml:space="preserve">
          <source>You can also specify operator explicitly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d1b7a1ae5cfd9a9417bbf70ed596831db2ccb1" translate="yes" xml:space="preserve">
          <source>You can also upload multiple files at once, with some adjustments to the code listed in the previous subsections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e2ef0ace032178ca75f26efa7bbadd593def20" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;yii-db-command#noCache()-detail&quot;&gt;yii\db\Command::noCache()&lt;/a&gt; to disable query caching for a single command. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fa1c6bedee5f001616207fd46bc2c4db1c6308" translate="yes" xml:space="preserve">
          <source>You can also use sub-queries with hash format like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5f522ec648a6fe74868a87fcc4d0b8ec3c3958" translate="yes" xml:space="preserve">
          <source>You can also use the new query building methods when defining relations about &lt;code&gt;Comment&lt;/code&gt; or performing relational query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1bf39b6a5e391cd1068412229c4070e48651bf" translate="yes" xml:space="preserve">
          <source>You can also use this widget in an &lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm&lt;/a&gt; using the &lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget()&lt;/a&gt; method, for example like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26595b510e16e3cc600755a6b6ca64e3778991e0" translate="yes" xml:space="preserve">
          <source>You can also use this widget in an &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt; using the &lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget()&lt;/a&gt; method, for example like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7025d97894e50fb9a8ce5cdd7224f18e6dc02263" translate="yes" xml:space="preserve">
          <source>You can also use this widget in an \yii\jui\yii\widgets\ActiveForm using the \yii\jui\yii\widgets\ActiveField::widget() method, for example like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e83f59a8228d3efd18a3c317f72226f99b16111" translate="yes" xml:space="preserve">
          <source>You can append additional constraints when using abstract types. In the above example, &lt;code&gt; NOT NULL&lt;/code&gt; is appended to &lt;code&gt;Schema::TYPE_STRING&lt;/code&gt; to specify that the column cannot be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa0a41fd18333d6136b1b9a14b0a07790a18e75" translate="yes" xml:space="preserve">
          <source>You can attach a behavior to a &lt;a href=&quot;yii-base-component&quot;&gt;component&lt;/a&gt; either statically or dynamically. The former is more common in practice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2e6d1aad0c2e7f0f97aceefbb3eaa2cecc0e9c" translate="yes" xml:space="preserve">
          <source>You can attach a handler to an event by calling the &lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii\base\Component::on()&lt;/a&gt; method. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bfce168ff025f63c5c6c8102d03bae91f9260b" translate="yes" xml:space="preserve">
          <source>You can calculate the aggregation fields as well using defined relations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8daa1945db57b6f2831fb8dc280cef8a185c0839" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii::getAlias()&lt;/a&gt; to resolve a root alias into the file path or URL it represents. The same method can also resolve a derived alias into the corresponding file path or URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0e08406431f4c6acf511ac3d57a841deba4799" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-data-sort#link()-detail&quot;&gt;yii\data\Sort::link()&lt;/a&gt; to generate a hyperlink upon which end users can click to request sorting the data by the specified attribute. You may also call &lt;a href=&quot;yii-data-sort#createUrl()-detail&quot;&gt;yii\data\Sort::createUrl()&lt;/a&gt; to create a sortable URL. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79415c016cbacc594c12bf7d7594e8afdc01d641" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-activerecord#deleteAll()-detail&quot;&gt;yii\db\ActiveRecord::deleteAll()&lt;/a&gt; to delete multiple or all rows of data. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128f17d03304aa3f27f9d5de64b2c0a982b6f587" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#addGroupBy()-detail&quot;&gt;addGroupBy()&lt;/a&gt; to add additional columns to the &lt;code&gt;GROUP BY&lt;/code&gt; fragment. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f7a52ddd3543d83c0cee67008794f6809196bb" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#addSelect()-detail&quot;&gt;addSelect()&lt;/a&gt; to select additional columns. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8c117bd9498aa128c75ee96a0f34cc701908a7" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#andHaving()-detail&quot;&gt;andHaving()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#orHaving()-detail&quot;&gt;orHaving()&lt;/a&gt; to append additional conditions to the &lt;code&gt;HAVING&lt;/code&gt; fragment. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5215a1a408079b2fbe507a63659daca8f59f3ba" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#union()-detail&quot;&gt;union()&lt;/a&gt; multiple times to append more &lt;code&gt;UNION&lt;/code&gt; fragments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd29c906dfe6a09453f31d34d2154a34c9033cc" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-querytrait#addOrderBy()-detail&quot;&gt;addOrderBy()&lt;/a&gt; to add additional columns to the &lt;code&gt;ORDER BY&lt;/code&gt; fragment. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bd3b2fcbf6cf9b7a9ca8ea472b86934af498db" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-web-session#open()-detail&quot;&gt;open()&lt;/a&gt; and &lt;a href=&quot;yii-web-session#close()-detail&quot;&gt;close()&lt;/a&gt; multiple times without causing errors; internally the methods will first check if the session is already open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cb9c1ca2162dbe68887e3d210d3a55c525fb57" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;getInstance()&lt;/a&gt; to retrieve the instance of an uploaded file, and then use &lt;a href=&quot;yii-web-uploadedfile#saveAs()-detail&quot;&gt;saveAs()&lt;/a&gt; to save it on the server. You may also query other information about the file, including &lt;a href=&quot;yii-web-uploadedfile#%24name-detail&quot;&gt;$name&lt;/a&gt;, &lt;a href=&quot;yii-web-uploadedfile#%24tempName-detail&quot;&gt;$tempName&lt;/a&gt;, &lt;a href=&quot;yii-web-uploadedfile#%24type-detail&quot;&gt;$type&lt;/a&gt;, &lt;a href=&quot;yii-web-uploadedfile#%24size-detail&quot;&gt;$size&lt;/a&gt; and &lt;a href=&quot;yii-web-uploadedfile#%24error-detail&quot;&gt;$error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d396f2e1d93c94a35d240e2fe82a22dabfacd93d" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;with()&lt;/code&gt; multiple times. Each call will add relations to the existing ones. For example, the following two statements are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6637b3bb6366762dae549304b3931dd3f0444c83" translate="yes" xml:space="preserve">
          <source>You can check the validation result by &lt;a href=&quot;yii-base-model#hasErrors()-detail&quot;&gt;hasErrors()&lt;/a&gt;, like you do with a normal model. You may also access the dynamic attributes defined through the model instance, e.g., &lt;code&gt;$model-&amp;gt;name&lt;/code&gt; and &lt;code&gt;$model-&amp;gt;email&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc715b3e12074944633b5b9c489a9a76260a346e" translate="yes" xml:space="preserve">
          <source>You can configure &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;yii\web\UrlManager::$rules&lt;/a&gt; as an array with keys being the &lt;a href=&quot;yii-web-urlrule#%24pattern-detail&quot;&gt;patterns&lt;/a&gt; and values the corresponding &lt;a href=&quot;yii-web-urlrule#%24route-detail&quot;&gt;routes&lt;/a&gt;. Each pattern-route pair constructs a URL rule. For example, the following &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;rules&lt;/a&gt; configuration declares two URL rules. The first rule matches a URL &lt;code&gt;posts&lt;/code&gt; and maps it into the route &lt;code&gt;post/index&lt;/code&gt;. The second rule matches a URL matching the regular expression &lt;code&gt;post/(\d+)&lt;/code&gt; and maps it into the route &lt;code&gt;post/view&lt;/code&gt; and defines a query parameter named &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8798757fe341123b629d74381c88fd3a8dc4b6" translate="yes" xml:space="preserve">
          <source>You can configure &lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;$formSelector&lt;/a&gt; to specify which form submission may trigger pjax. If not set, all forms with &lt;code&gt;data-pjax&lt;/code&gt; attribute within the enclosed content of Pjax will trigger pjax requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223f8994ac2c774bbd368d65995853e353e7dcc3" translate="yes" xml:space="preserve">
          <source>You can configure application languages in the &quot;application configuration&quot; like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4730f3df0111223e740948366c12d20360b8e5db" translate="yes" xml:space="preserve">
          <source>You can configure multiple asset bundles similarly through &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt;. The array keys should be the class names (without the leading backslash) of the asset bundles, and the array values should be the corresponding &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration arrays&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bd9421b6ea3945e9564161985f7350c1fbda28" translate="yes" xml:space="preserve">
          <source>You can configure multiple flavors using the &lt;a href=&quot;yii-helpers-basemarkdown#%24flavors-detail&quot;&gt;$flavors&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935eb0e94f61a7614938e155e7775fe1ee8a0ed9" translate="yes" xml:space="preserve">
          <source>You can configure the &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;controller map&lt;/a&gt; to overcome the constraints of the controller IDs and class names described above. This is mainly useful when you are using third-party controllers and you do not have control over their class names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ea54d63a88e4cc902334a9e69530bb7d9dfc4d" translate="yes" xml:space="preserve">
          <source>You can configure the &lt;a href=&quot;yii-web-errorhandler#%24errorView-detail&quot;&gt;errorView&lt;/a&gt; and &lt;a href=&quot;yii-web-errorhandler#%24exceptionView-detail&quot;&gt;exceptionView&lt;/a&gt; properties of the error handler to use your own views to customize the error display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddb7d132ff7d3d24f0c0484d3a911f72081d496" translate="yes" xml:space="preserve">
          <source>You can create actions in two ways: inline actions and standalone actions. An inline action is defined as a method in the controller class, while a standalone action is a class extending &lt;a href=&quot;yii-base-action&quot;&gt;yii\base\Action&lt;/a&gt; or its child classes. Inline actions take less effort to create and are often preferred if you have no intention to reuse these actions. Standalone actions, on the other hand, are mainly created to be used in different controllers or be redistributed as &lt;a href=&quot;guide-structure-extensions&quot;&gt;extensions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3749eebd410c75f5ee9936eefa2d3bfb1292b37" translate="yes" xml:space="preserve">
          <source>You can create model classes by extending &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; or its child classes. The base class &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; supports many useful features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1856ab667a17768f37e4593a79849823eb3e6fd1" translate="yes" xml:space="preserve">
          <source>You can create the &lt;code&gt;site/error&lt;/code&gt; action as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2ae815bce6fd26e0ce241da8bc8ea64e6048bd" translate="yes" xml:space="preserve">
          <source>You can customize the error message of a rule by specifying the &lt;code&gt;message&lt;/code&gt; property when declaring the rule, like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71181a5c128a98188695a4880907d39182477435" translate="yes" xml:space="preserve">
          <source>You can customize the pre-processor commands and the supported extended syntax by configuring &lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;yii\web\AssetManager::$converter&lt;/a&gt; like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2afa663d338b56ea78528b19566306a1a9d8542" translate="yes" xml:space="preserve">
          <source>You can customize the widget appearance by using &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; syntax along with using method &lt;a href=&quot;yii-authclient-widgets-authchoice#clientLink()-detail&quot;&gt;clientLink()&lt;/a&gt; or &lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl()&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f3df88feb4587383abc941ea119e285a94c400" translate="yes" xml:space="preserve">
          <source>You can define an alias for a file path or URL by calling &lt;a href=&quot;yii-baseyii#setAlias()-detail&quot;&gt;Yii::setAlias()&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1162416a41713002cf2d15f67671c8e8ac01005c" translate="yes" xml:space="preserve">
          <source>You can define an alias using another alias (either root or derived):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7cd803556699b6df350a80c63dda1a95ed38c77" translate="yes" xml:space="preserve">
          <source>You can detect the identity of the current user using the expression &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt;. It returns an instance of the &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;identity class&lt;/a&gt; representing the currently logged-in user, or &lt;code&gt;null&lt;/code&gt; if the current user is not authenticated (meaning a guest). The following code shows how to retrieve other authentication-related information from &lt;a href=&quot;yii-web-user&quot;&gt;yii\web\User&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa755367836ad9735708c9a775bc6240b216490" translate="yes" xml:space="preserve">
          <source>You can differentiate the two states of an Active Record instance by checking its &lt;a href=&quot;yii-db-baseactiverecord#%24isNewRecord-detail&quot;&gt;isNewRecord&lt;/a&gt; property value. This property is also used by &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt; internally as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166dd3e176b7fc8d853d3022f55bc65930802728" translate="yes" xml:space="preserve">
          <source>You can disable one or multiple asset bundles by associating &lt;code&gt;false&lt;/code&gt; with the names of the asset bundles that you want to disable. When you register a disabled asset bundle with a view, none of its dependent bundles will be registered, and the view also will not include any of the assets in the bundle in the page it renders. For example, to disable &lt;a href=&quot;yii-web-jqueryasset&quot;&gt;yii\web\JqueryAsset&lt;/a&gt;, you can use the following configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09483c4a2201c6538e9a5c4289caf7692399e721" translate="yes" xml:space="preserve">
          <source>You can eagerly load deeply nested relations, such as &lt;code&gt;a.b.c.d&lt;/code&gt;. All parent relations will be eagerly loaded. That is, when you call &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt; using &lt;code&gt;a.b.c.d&lt;/code&gt;, you will eagerly load &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;a.b&lt;/code&gt;, &lt;code&gt;a.b.c&lt;/code&gt; and &lt;code&gt;a.b.c.d&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4c2316e9d256b16dfa95cc443f856100262185" translate="yes" xml:space="preserve">
          <source>You can eagerly load one or multiple relations. You can even eagerly load &lt;em&gt;nested relations&lt;/em&gt;. A nested relation is a relation that is declared within a related Active Record class. For example, &lt;code&gt;Customer&lt;/code&gt; is related with &lt;code&gt;Order&lt;/code&gt; through the &lt;code&gt;orders&lt;/code&gt; relation, and &lt;code&gt;Order&lt;/code&gt; is related with &lt;code&gt;Item&lt;/code&gt; through the &lt;code&gt;items&lt;/code&gt; relation. When querying for &lt;code&gt;Customer&lt;/code&gt;, you can eagerly load &lt;code&gt;items&lt;/code&gt; using the nested relation notation &lt;code&gt;orders.items&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969edff440702198f6a774126ea676ffa551501e" translate="yes" xml:space="preserve">
          <source>You can embed images into the message content using &lt;code&gt;embed()&lt;/code&gt; method. This method returns the attachment id, which should be then used at &lt;code&gt;img&lt;/code&gt; tag. This method is easy to use when composing message content via view file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c119654193a7a7160f6567e04f6057eb96b0ec5" translate="yes" xml:space="preserve">
          <source>You can embed parameter names in the route of a URL rule. This allows a URL rule to be used for matching multiple routes. For example, the following rules embed &lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt; parameters in the routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc594d4aa264d879450c0921cc90f54c2f2ef02" translate="yes" xml:space="preserve">
          <source>You can enable or disable a log target by configuring its &lt;a href=&quot;yii-log-target#%24enabled-detail&quot;&gt;enabled&lt;/a&gt; property. You may do so via the log target configuration or by the following PHP statement in your code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ac181ff1ef586a8f0408b783458d91262a86bf" translate="yes" xml:space="preserve">
          <source>You can flush the cache from the console by calling &lt;code&gt;yii cache/flush&lt;/code&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9dca3aa8f6c73236465b3cfabad8f80c3c8cf9" translate="yes" xml:space="preserve">
          <source>You can get details about the syntax in &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;Quoting Table and Column Names&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612c04288985a12bb124525c58bbdb546654082c" translate="yes" xml:space="preserve">
          <source>You can get the HTTP header information through the &lt;a href=&quot;yii-web-headercollection&quot;&gt;header collection&lt;/a&gt; returned by the &lt;a href=&quot;yii-web-request#%24headers-detail&quot;&gt;yii\web\Request::$headers&lt;/a&gt; property. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705dfb64fd254ad5c2e9e133a865ae502dacd074" translate="yes" xml:space="preserve">
          <source>You can get the HTTP method used by the current request via the expression &lt;code&gt;Yii::$app-&amp;gt;request-&amp;gt;method&lt;/code&gt;. A whole set of boolean properties is also provided for you to check if the current method is of certain type. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0baba47332d24b7b32a58a8fa9006d1d06b25e" translate="yes" xml:space="preserve">
          <source>You can get the cookies in the current request using the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e084d2a7b3351971fce182e93edcfd3ec146a1be" translate="yes" xml:space="preserve">
          <source>You can get the host name and IP address of the client machine through &lt;a href=&quot;yii-web-request#%24userHost-detail&quot;&gt;userHost&lt;/a&gt; and &lt;a href=&quot;yii-web-request#%24userIP-detail&quot;&gt;userIP&lt;/a&gt;, respectively. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5fa5ef6704c8f1fa717825c2727185203a484f" translate="yes" xml:space="preserve">
          <source>You can get the label of an attribute by calling &lt;a href=&quot;yii-base-model#getAttributeLabel()-detail&quot;&gt;yii\base\Model::getAttributeLabel()&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f3e39cff11910c98c98ea5c6178db6cbec78dd" translate="yes" xml:space="preserve">
          <source>You can ignore &lt;code&gt;$attribute&lt;/code&gt; parameter because validation is not related to just one attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bff127cbf6da7874f941f7c6e36b2ad79802a28" translate="yes" xml:space="preserve">
          <source>You can install Yii in two ways, using the &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; package manager or by downloading an archive file. The former is the preferred way, as it allows you to install new &lt;a href=&quot;guide-structure-extensions&quot;&gt;extensions&lt;/a&gt; or update Yii by simply running a single command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4fa10e9c3141b84f913ce29edb33bd3711be44" translate="yes" xml:space="preserve">
          <source>You can list the asset files in extended syntax in the &lt;a href=&quot;yii-web-assetbundle#%24css-detail&quot;&gt;css&lt;/a&gt; and &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;js&lt;/a&gt; properties of an asset bundle. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9a92152e1718a168ac9a54ef32aa5a46b6f571" translate="yes" xml:space="preserve">
          <source>You can modify its configuration by adding an array to your application config under &lt;code&gt;components&lt;/code&gt; as it is shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c451175a7f4fb755f3904b25a8fce5c6aafdf447" translate="yes" xml:space="preserve">
          <source>You can modify its configuration by adding an array to your application config under &lt;code&gt;components&lt;/code&gt; as shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b448792c4446f4ec3600b758c7e9a4a053e67611" translate="yes" xml:space="preserve">
          <source>You can output static pages by putting their code in the view, and then using the code like the following in a controller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa181280949d0369ea69caf8bd4894c94a04428" translate="yes" xml:space="preserve">
          <source>You can override &lt;code&gt;fields()&lt;/code&gt; to add, remove, rename or redefine fields. The return value of &lt;code&gt;fields()&lt;/code&gt; should be an array. The array keys are the field names, and the array values are the corresponding field definitions which can be either property/attribute names or anonymous functions returning the corresponding field values. In the special case when a field name is the same as its defining attribute name, you can omit the array key. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29c90ae682b6df9619aeeae91c5ad13522bc97a" translate="yes" xml:space="preserve">
          <source>You can pass the return value of this to one of the formatting methods: &lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat()&lt;/a&gt;, &lt;a href=&quot;yii-helpers-baseconsole#ansiFormatCode()-detail&quot;&gt;ansiFormatCode()&lt;/a&gt;, &lt;a href=&quot;yii-helpers-baseconsole#beginAnsiFormat()-detail&quot;&gt;beginAnsiFormat()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574564a9c8fc20fce6bc5014bd620496f50ef00d" translate="yes" xml:space="preserve">
          <source>You can redirect the user browser to a URL by calling the &lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii\web\Response::redirect()&lt;/a&gt; method. The method sets the appropriate &lt;code&gt;Location&lt;/code&gt; header with the given URL and returns the response object itself. In an action method, you can call its shortcut version &lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;yii\web\Controller::redirect()&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade68b828302db37c0966e5f482674a73ebd73da" translate="yes" xml:space="preserve">
          <source>You can register any component with an application, and the component can later be accessed globally using the expression &lt;code&gt;\Yii::$app-&amp;gt;componentID&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd0a0caf81523e2686af2caf844048740622799" translate="yes" xml:space="preserve">
          <source>You can register multiple log targets in an application by configuring them through the &lt;code&gt;log&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; in the application configuration, like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83103224419fe0e7532edf920f2e34da302fbfd9" translate="yes" xml:space="preserve">
          <source>You can render a view within another view by calling one of the following methods provided by the &lt;a href=&quot;yii-base-view&quot;&gt;view component&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db88cc8fb3740a617a7d702a6ace70bf6fbf9f87" translate="yes" xml:space="preserve">
          <source>You can render views in &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt;, &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt;, or any other places by calling view rendering methods. These methods share a similar signature shown as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a70216f82eb14c7d15081479dbf4e3cc3a58d4" translate="yes" xml:space="preserve">
          <source>You can see all available templates by running command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c46211060baa4c6795ea439a7e0d6385c8304d" translate="yes" xml:space="preserve">
          <source>You can send HTTP headers by manipulating the &lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;header collection&lt;/a&gt; in the &lt;code&gt;response&lt;/code&gt; component. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907be410ee5e5c3f501a2edfbbdc0ece7986aadc" translate="yes" xml:space="preserve">
          <source>You can send cookies to end users using the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5613abe58044176423b69ddd25505b71d1bb084" translate="yes" xml:space="preserve">
          <source>You can set and access flash data through the &lt;code&gt;session&lt;/code&gt; application component. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568000f70e8230e39031c2095395d586c438df39" translate="yes" xml:space="preserve">
          <source>You can specify additional formatting rules in the placeholders of a message so that the parameter values can be formatted properly before they replace the placeholders. In the following example, the price parameter value will be treated as a number and formatted as a currency value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f49a773735223f2f5fd62f1b0acf8ded1ca033" translate="yes" xml:space="preserve">
          <source>You can specify an optional parameter style as &lt;code&gt;integer&lt;/code&gt;, &lt;code&gt;currency&lt;/code&gt;, or &lt;code&gt;percent&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d459e45f9efd2c50ed8d2a85f0e4bd614ba3dab" translate="yes" xml:space="preserve">
          <source>You can specify an optional parameter style as &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, or &lt;code&gt;full&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c238a0e767dd0f50881f9ac0dc834514728d99" translate="yes" xml:space="preserve">
          <source>You can specify date and time formats using the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime&quot;&gt;ICU syntax&lt;/a&gt;. You can also use the &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;PHP date() syntax&lt;/a&gt; with a prefix &lt;code&gt;php:&lt;/code&gt; to differentiate it from ICU syntax. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034fbdbfbf010be99c37159ac2fbf07fa373f8fe" translate="yes" xml:space="preserve">
          <source>You can specify default message source that will be used as a fallback for category that doesn't match any configured category. You can do that by configuring a wildcard category &lt;code&gt;*&lt;/code&gt;. In order to do that, add the following to the application config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56eedfddec216b087b4759f2ead366f526f1e9ed" translate="yes" xml:space="preserve">
          <source>You can specify different options of this command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7d14b154b1ffa1efd87b2fd9bda0524eee9c69" translate="yes" xml:space="preserve">
          <source>You can specify different view files for HTML and plain text message contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3fb9033a61b88bbf47b0fb764b9699a692405e" translate="yes" xml:space="preserve">
          <source>You can specify how many fixtures per file you need by the second parameter. In the code below we generate all fixtures and in each file there will be 3 rows (fixtures).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97644b9bee3bf5b95e963f10299f847a12468ed1" translate="yes" xml:space="preserve">
          <source>You can specify more field parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab305fd50436081692652cd4c627e5e94e11863" translate="yes" xml:space="preserve">
          <source>You can specify multiple columns as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfbde70adc4db07b292fa6a89e0c4f0bbbf34dc" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;a href=&quot;yii-web-assetbundle#%24cssOptions-detail&quot;&gt;cssOptions&lt;/a&gt; and &lt;a href=&quot;yii-web-assetbundle#%24jsOptions-detail&quot;&gt;jsOptions&lt;/a&gt; properties to customize the way that CSS and JavaScript files are included in a page. The values of these properties will be passed to the &lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;yii\web\View::registerCssFile()&lt;/a&gt; and &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;yii\web\View::registerJsFile()&lt;/a&gt; methods, respectively, when they are called by the &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt; to include CSS and JavaScript files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb99eb13f8c1d390931dce9e7d825051052f4c4c" translate="yes" xml:space="preserve">
          <source>You can specify the table(s) being selected from in either a string or an array. The table names may contain schema prefixes and/or table aliases, like you do when writing raw SQL statements. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af64abfbe84057f57c7d6e30e53adc04a4eb8d80" translate="yes" xml:space="preserve">
          <source>You can still override the value set via DI container, though:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbdac5b2ea7b4a3b1ae9a01d8a7584828abebd3" translate="yes" xml:space="preserve">
          <source>You can then access the DB connection via the expression &lt;code&gt;Yii::$app-&amp;gt;db&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0b78888e8bb4b5991a22aeef06fb3a6f58831f" translate="yes" xml:space="preserve">
          <source>You can then access the above cache component using the expression &lt;code&gt;Yii::$app-&amp;gt;cache&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1efa82519e8b37cf2d8604650edb5245ea1245" translate="yes" xml:space="preserve">
          <source>You can trigger the event of those classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a5659ca5cacfbf44da52abc323f711dc8b6b7c" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;guide-caching-fragment&quot;&gt;fragment caching&lt;/a&gt; as well as &lt;a href=&quot;guide-caching-fragment#dynamic-content&quot;&gt;dynamic content&lt;/a&gt; together with page caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc9d9cb4f7653ef01e897f26bc11310e1544363" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;guide-db-migrations&quot;&gt;migrations&lt;/a&gt; to initialize and modify hierarchy via APIs offered by &lt;code&gt;authManager&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb643736d8634f20ebb2fdbe26f84e4f81b335f" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-db-connection#cache()-detail&quot;&gt;yii\db\Connection::cache()&lt;/a&gt; if you have multiple SQL queries that need to take advantage of query caching. The usage is as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee1f92a1abff2c101abd64c6e5c2df3d8d5429b" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-db-query#andWhere()-detail&quot;&gt;andWhere()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#orWhere()-detail&quot;&gt;orWhere()&lt;/a&gt; to append additional conditions to an existing one. You can call them multiple times to append multiple conditions separately. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fc83e4faa0b3cf1fcc41838e38f35e38074bac" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;get()&lt;/a&gt; to either create or get object instance. The method takes a dependency name, which can be a class name, an interface name or an alias name. The dependency name may be registered via &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; or &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton()&lt;/a&gt;. You may optionally provide a list of class constructor parameters and a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; to configure the newly created object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddc9fe5579bbbaf840d07acafefc52062943b61" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;yii\di\Container::set()&lt;/a&gt; to register dependencies. The registration requires a dependency name as well as a dependency definition. A dependency name can be a class name, an interface name, or an alias name; and a dependency definition can be a class name, a configuration array, or a PHP callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c335e922984928bb6317cb78d3e16ec378d9b3fe" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;ArrayHelper::merge()&lt;/a&gt; to merge two or more arrays into one recursively. If each array has an element with the same string key value, the latter will overwrite the former (different from &lt;a href=&quot;http://php.net/manual/en/function.array-merge-recursive.php&quot;&gt;array_merge_recursive()&lt;/a&gt;). Recursive merging will be conducted if both arrays have an element of array type and are having the same key. For integer-keyed elements, the elements from the latter array will be appended to the former array. You can use &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii\helpers\UnsetArrayValue&lt;/a&gt; object to unset value from previous array or &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;yii\helpers\ReplaceArrayValue&lt;/a&gt; to force replace former value instead of recursive merging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5040433ed42e6ff91e29b8e4a2c63c6b60ce3045" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;'*'&lt;/code&gt; to stand for all actions. When an action is explicitly specified, it takes precedence over the specification given by &lt;code&gt;'*'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232fddab8bf295ad14b387744faff3648c4194da" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Download::substr()&lt;/code&gt; to read a specific part of the file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337c676558c8efbc8d2db1df43f25958cb106ca9" translate="yes" xml:space="preserve">
          <source>You can use any of these attributes instead (or use what you think is the most relevant):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6770228d3f2564f530d6c6a610d4431aad3bbf74" translate="yes" xml:space="preserve">
          <source>You can use either &lt;em&gt;named placeholders&lt;/em&gt; or &lt;em&gt;positional placeholders&lt;/em&gt;, but not both, in a single message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e45c905dc03e0fd0b6c2fa49de54f32a9ca090" translate="yes" xml:space="preserve">
          <source>You can use either a URL or an alias of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19137c51d7ea74c2bf3559951824316ac7ae99c0" translate="yes" xml:space="preserve">
          <source>You can use either a directory or an alias of the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cdcfc9b4d46da8d968f5a3759b81db140cbe839" translate="yes" xml:space="preserve">
          <source>You can use either the short form or the full form to specify a placeholder with formatting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e05716147c6b82340a30ff35f5ff8c63f9657e" translate="yes" xml:space="preserve">
          <source>You can use it in a child model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397ad4620359a3523cd1eee0636496228b053147" translate="yes" xml:space="preserve">
          <source>You can use it in an action by returning the &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14286a77f45556d0f29442115424cb392fd5846" translate="yes" xml:space="preserve">
          <source>You can use more than one GridView on a single page but some additional configuration is needed so that they do not interfere with each other. When using multiple instances of GridView you have to configure different parameter names for the generated sort and pagination links so that each GridView has its own individual sorting and pagination. You do so by setting the &lt;a href=&quot;yii-data-sort#%24sortParam-detail&quot;&gt;sortParam&lt;/a&gt; and &lt;a href=&quot;yii-data-pagination#%24pageParam-detail&quot;&gt;pageParam&lt;/a&gt; of the dataProvider's &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;sort&lt;/a&gt; and &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;pagination&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f105cacf05832701008e93edb4937dc295468f" translate="yes" xml:space="preserve">
          <source>You can use most of the relational query features that have been described in this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdf62b64d822b1fe81bc6cf2a0e0501d8684964" translate="yes" xml:space="preserve">
          <source>You can use one of the following workarounds to solve this problem:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1956a8441e380e05737bdee1eb22295e503752de" translate="yes" xml:space="preserve">
          <source>You can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#limit()-detail&quot;&gt;limit()&lt;/a&gt; and &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ccad1d25e86d7cb9f5795a28112b826e84b69d" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;select&lt;/code&gt; parameter type to choose a phrase based on the parameter value. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2672726990a35ca839c3bcc4af91649a876d3b3" translate="yes" xml:space="preserve">
          <source>You can use the following shortcut methods to specify &lt;code&gt;INNER JOIN&lt;/code&gt;, &lt;code&gt;LEFT JOIN&lt;/code&gt; and &lt;code&gt;RIGHT JOIN&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2ce57ef897d3627e7e715d96a3982e8a369977" translate="yes" xml:space="preserve">
          <source>You can use this command to generate models, controllers, etc. For example, to generate an ActiveRecord model based on a DB table, you can run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5e666d1cb6797be150dc85c9b7e6812f3ae2f5" translate="yes" xml:space="preserve">
          <source>You can use this function in the controller to get the dataProvider for the GridView:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4b42317cfc8594a32a564726111b1dd44b4dda" translate="yes" xml:space="preserve">
          <source>You can use this method in an action by returning the &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab14b0773b565e5d1b9590638c4242163112cfba" translate="yes" xml:space="preserve">
          <source>You can use this validator to validate against a single column or multiple columns (i.e., the combination of multiple attribute values should exist).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6bc0a9c10cd414e914335ff9198b7ec5ebfbff" translate="yes" xml:space="preserve">
          <source>You can use this widget in an \yii\bootstrap\yii\bootstrap\ActiveForm using the \yii\bootstrap\yii\widgets\ActiveField::widget() method, for example like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd418d3da34d4f67e7389c5d19a9c8a70323e2e" translate="yes" xml:space="preserve">
          <source>You can use your browser to access the installed Yii application with the following URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf17c27a315fc3190d39f0d620f0929300d26d4" translate="yes" xml:space="preserve">
          <source>You can work with several different databases at the same server using this class. However, while it is unlikely your application will actually need it, the Connection class provides ability to use &lt;a href=&quot;yii-mongodb-connection#%24defaultDatabaseName-detail&quot;&gt;$defaultDatabaseName&lt;/a&gt; as well as a shortcut method &lt;a href=&quot;yii-mongodb-connection#getCollection()-detail&quot;&gt;getCollection()&lt;/a&gt; to retrieve a particular collection instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4438d2becc4b7dbaf360018f67e531dc7905b6" translate="yes" xml:space="preserve">
          <source>You do not always need to configure this property if none of your code is using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57654e756cbfcf7bc9f7ef568aee3b8795492ee1" translate="yes" xml:space="preserve">
          <source>You execute a console controller action using the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebefdfb4e46cab361490385a9de043d9f618e743" translate="yes" xml:space="preserve">
          <source>You have two ways to divide these asset bundles. One is to use a single group to include all asset bundles, the other is to put A in Group X, D in Group Y, and (B, C) in Group S. Which one is better? It depends. The first way has the advantage that both pages share the same combined CSS and JavaScript files, which makes HTTP caching more effective. On the other hand, because the single group contains all bundles, the size of the combined CSS and JavaScript files will be bigger and thus increase the initial file transmission time. For simplicity in this example, we will use the first way, i.e., use a single group to contain all bundles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951b4ea0cde1e15fa22899208ecba6ee28a2cd42" translate="yes" xml:space="preserve">
          <source>You mainly use &lt;a href=&quot;yii-web-user&quot;&gt;yii\web\User&lt;/a&gt; in terms of the &lt;code&gt;user&lt;/code&gt; application component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55f71375967a787256a697c6146216da96decb1" translate="yes" xml:space="preserve">
          <source>You may access your APIs with the &lt;code&gt;curl&lt;/code&gt; command like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c033157d67304f04a821cf667092aaed43e37e34" translate="yes" xml:space="preserve">
          <source>You may add a class to the class map, stored in &lt;code&gt;Yii::$classMap&lt;/code&gt;, using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6f54ab417d156a29e9549046b5d673666cc211" translate="yes" xml:space="preserve">
          <source>You may also access the instance of a module using the following approaches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a836823955bf8ff0f255f46017b3de9c077a331" translate="yes" xml:space="preserve">
          <source>You may also assign an alias to a fixture. In the above example, the &lt;code&gt;UserProfileFixture&lt;/code&gt; is aliased as &lt;code&gt;profiles&lt;/code&gt;. In the test methods, you may then access a fixture object using its alias. For example, &lt;code&gt;$this-&amp;gt;profiles&lt;/code&gt; will return the &lt;code&gt;UserProfileFixture&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b96e73b37e493c3def6a47c8a9157371df54cf" translate="yes" xml:space="preserve">
          <source>You may also attach behaviors through &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt; like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9243ad8149d0a3e517d8c7bd5555d2d9ab144e20" translate="yes" xml:space="preserve">
          <source>You may also attach event handlers through &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt;. For more details, please refer to the &lt;a href=&quot;guide-concept-configurations#configuration-format&quot;&gt;Configurations&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4b965a27e1942163a01c4686c098cc5e814794" translate="yes" xml:space="preserve">
          <source>You may also call &lt;a href=&quot;yii-db-command#batchInsert()-detail&quot;&gt;batchInsert()&lt;/a&gt; to insert multiple rows in one shot, which is much more efficient than inserting one row at a time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2c5ca170e3378f236b3881918eb76029e62a70" translate="yes" xml:space="preserve">
          <source>You may also configure &lt;code&gt;patterns&lt;/code&gt; or &lt;code&gt;extraPatterns&lt;/code&gt; to redefine existing patterns or add new patterns supported by this rule. For example, to support a new action &lt;code&gt;search&lt;/code&gt; by the endpoint &lt;code&gt;GET /users/search&lt;/code&gt;, configure the &lt;code&gt;extraPatterns&lt;/code&gt; option as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b485762eab68baececfabe39304b54de2a62103d" translate="yes" xml:space="preserve">
          <source>You may also detach &lt;em&gt;all&lt;/em&gt; behaviors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1839c755c4cb177f1b7052533cd5eac9f9e2765" translate="yes" xml:space="preserve">
          <source>You may also directly set &lt;code&gt;Yii::$app-&amp;gt;db-&amp;gt;enableSlaves&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; to direct all queries to the master connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccccb09cb8d7419f64cb332d1b1b5d255706c73c" translate="yes" xml:space="preserve">
          <source>You may also frequently use the following minor yet useful features when you are developing Web pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0c725a34bffc57dee6cfeb88da7d2af58495a2" translate="yes" xml:space="preserve">
          <source>You may also get all behaviors attached to a component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a79375be66cb489c7e2067f48de3a1bb285d8b0" translate="yes" xml:space="preserve">
          <source>You may also pass multiple controller IDs as an array. If this is the case, this composite rule will generate applicable URL rules for EVERY specified controller. For example, &lt;code&gt;['user', 'post']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeaf206cd4b00350a1bcdb1634ed099882526766" translate="yes" xml:space="preserve">
          <source>You may also send several messages at once:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b76c26a5e0674ebae8a7f810b91a5194db34f88" translate="yes" xml:space="preserve">
          <source>You may also set this property to a string representing the attribute name to be displayed in this column. This can be used when the attribute to be displayed is different from the &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt; that is used for sorting and filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffe5aa9e139803630a655f97552821b2ed2b14f" translate="yes" xml:space="preserve">
          <source>You may also skip the configuration of the &lt;a href=&quot;yii-swiftmailer-mailer#%24transport-detail&quot;&gt;$transport&lt;/a&gt; property. In that case, the default PHP &lt;code&gt;mail()&lt;/code&gt; function will be used to send emails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395a332f0c3f8bdef16dede19dbdb6695b97ce8c" translate="yes" xml:space="preserve">
          <source>You may also specify a closure that returns an array. This can be used to evaluate the array values only if they are needed, for example when a model needs to be loaded like in the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3561057999968b219efb55c7edc25007885a83d2" translate="yes" xml:space="preserve">
          <source>You may also specify a sub-query that is used to get the values for the &lt;code&gt;IN&lt;/code&gt;-condition: &lt;code&gt;['in', 'user_id', (new Query())-&amp;gt;select('id')-&amp;gt;from('users')-&amp;gt;where(['active' =&amp;gt; 1])]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abac669fd6d6a519082185c334a0462e51cd4c34" translate="yes" xml:space="preserve">
          <source>You may also use './yii message/config' command to dynamically generate configuration file with specified options via cli. For example, you can set &lt;code&gt;languages&lt;/code&gt; and &lt;code&gt;messagePath&lt;/code&gt; parameters like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dcc8f7a8818ca60bf8c27a2eb9117fcdcfabe8" translate="yes" xml:space="preserve">
          <source>You may also use a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; to specify the location of the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad1adf34b61215004f12b795816456c7fc365d6" translate="yes" xml:space="preserve">
          <source>You may also use aliases while specifying map value, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad9d7a929efc7a88f4b27b5f09cf3ad264bfbdd" translate="yes" xml:space="preserve">
          <source>You may also use the array style when adding or removing classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4159d627e124ff1678bf7c2f2c97b6c320710a9" translate="yes" xml:space="preserve">
          <source>You may also use the more general &lt;a href=&quot;guide-tutorial-core-validators#filter&quot;&gt;filter&lt;/a&gt; validator to perform more complex data filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefcd16648bb1f71b04ac638547951446c2009b4" translate="yes" xml:space="preserve">
          <source>You may as well compose expressions with special operators like 'MAYBE', 'PROXIMITY' etc. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a90ecdd682fa6a316fc5047f447789e0453a948" translate="yes" xml:space="preserve">
          <source>You may associate a name with a behavior by specifying the array key corresponding to the behavior configuration. In this case, the behavior is called a &lt;em&gt;named behavior&lt;/em&gt;. In the above example, there are two named behaviors: &lt;code&gt;myBehavior2&lt;/code&gt; and &lt;code&gt;myBehavior4&lt;/code&gt;. If a behavior is not associated with a name, it is called an &lt;em&gt;anonymous behavior&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a2275b6fbfbeebb887a1e1a0fa6ce890760735" translate="yes" xml:space="preserve">
          <source>You may attach multiple behaviors at once using the &lt;a href=&quot;yii-base-component#attachBehaviors()-detail&quot;&gt;yii\base\Component::attachBehaviors()&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a4cfce8775d89ac6f6e6d98381df04aabc3232" translate="yes" xml:space="preserve">
          <source>You may attach one or more handlers to a single event. When an event is triggered, the attached handlers will be called in the order that they were attached to the event. If a handler needs to stop the invocation of the handlers that follow it, it may set the &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;yii\base\Event::$handled&lt;/a&gt; property of the &lt;code&gt;$event&lt;/code&gt; parameter to be &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009a2116edaae70ab18b61cc0bc1eae87428677d" translate="yes" xml:space="preserve">
          <source>You may call &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;yii\base\Model::validate()&lt;/a&gt; to validate the received data. The method will use the validation rules declared in &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;yii\base\Model::rules()&lt;/a&gt; to validate every relevant attribute. If no error is found, it will return &lt;code&gt;true&lt;/code&gt;. Otherwise, it will keep the errors in the &lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;yii\base\Model::$errors&lt;/a&gt; property and return &lt;code&gt;false&lt;/code&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1146c1a8570a4f2a1e978e49ae831e48606895" translate="yes" xml:space="preserve">
          <source>You may call &lt;a href=&quot;yii-base-view#renderDynamic()-detail&quot;&gt;yii\base\View::renderDynamic()&lt;/a&gt; within a cached fragment to insert dynamic content at the desired place, like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a43cced48f677a05fba2623cf4cdef40f1b286" translate="yes" xml:space="preserve">
          <source>You may call that method either by passing an instance of &lt;code&gt;\my\heavy\Dependency&lt;/code&gt; yourself or using &lt;a href=&quot;yii-di-container#invoke()-detail&quot;&gt;yii\di\Container::invoke()&lt;/a&gt; like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f89a021c21c8b68ebb6af968bcfdf7ecc403c22" translate="yes" xml:space="preserve">
          <source>You may call this method to load default values after creating a new instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0390a2ab9d10058e393976acebb4c195ea9447a2" translate="yes" xml:space="preserve">
          <source>You may call various methods to change the user authentication status:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb190b72329eb7df9658a69982207ed09bc3287" translate="yes" xml:space="preserve">
          <source>You may change the default controller with the following &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;application configuration&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b86a68c9fc45856eccceca97ef7720e60802c5" translate="yes" xml:space="preserve">
          <source>You may change the name of the table used to store the data by setting &lt;a href=&quot;yii-log-dbtarget#%24logTable-detail&quot;&gt;$logTable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a50ca8eac8c39ce3aebeb6697ea7a7e3cdd9710" translate="yes" xml:space="preserve">
          <source>You may change the names of the tables used to store the authorization and rule data by setting &lt;a href=&quot;yii-rbac-dbmanager#%24itemTable-detail&quot;&gt;$itemTable&lt;/a&gt;, &lt;a href=&quot;yii-rbac-dbmanager#%24itemChildTable-detail&quot;&gt;$itemChildTable&lt;/a&gt;, &lt;a href=&quot;yii-rbac-dbmanager#%24assignmentTable-detail&quot;&gt;$assignmentTable&lt;/a&gt; and &lt;a href=&quot;yii-rbac-dbmanager#%24ruleTable-detail&quot;&gt;$ruleTable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937b286b6cc89c7e8dd8b14fc13d591b0ffbeb2a" translate="yes" xml:space="preserve">
          <source>You may configure &lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;fileMap&lt;/a&gt; to map a category to a PHP file with a different naming approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefc200c88eb574324fa83dfa71b747eeeea7600" translate="yes" xml:space="preserve">
          <source>You may configure &lt;a href=&quot;yii-rest-urlrule#%24only-detail&quot;&gt;$only&lt;/a&gt; and/or &lt;a href=&quot;yii-rest-urlrule#%24except-detail&quot;&gt;$except&lt;/a&gt; to disable some of the above rules. You may configure &lt;a href=&quot;yii-rest-urlrule#%24patterns-detail&quot;&gt;$patterns&lt;/a&gt; to completely redefine your own list of rules. You may configure &lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;$controller&lt;/a&gt; with multiple controller IDs to generate rules for all these controllers. For example, the following code will disable the &lt;code&gt;delete&lt;/code&gt; rule and generate rules for both &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; controllers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284ef6848425498bf9aa6aa0adb8db1e60870cf1" translate="yes" xml:space="preserve">
          <source>You may configure &lt;a href=&quot;yii-widgets-pjax#%24linkSelector-detail&quot;&gt;$linkSelector&lt;/a&gt; to specify which links should trigger pjax, and configure &lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;$formSelector&lt;/a&gt; to specify which form submission may trigger pjax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d212c0718ed147f2346bd144931ea2875a4fc528" translate="yes" xml:space="preserve">
          <source>You may configure &lt;code&gt;logVars&lt;/code&gt; to be an empty array to totally disable the inclusion of context information. Or if you want to implement your own way of providing context information, you may override the &lt;a href=&quot;yii-log-target#getContextMessage()-detail&quot;&gt;yii\log\Target::getContextMessage()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb249f61f9206fc9272ff1589caa97aaf5527b10" translate="yes" xml:space="preserve">
          <source>You may configure it as a directory or a path &lt;a href=&quot;guide-concept-aliases&quot;&gt;alias&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c695d2d97c57d42b5d2f7638240f080160de440" translate="yes" xml:space="preserve">
          <source>You may configure it as a directory or a path &lt;a href=&quot;guide-concept-aliases&quot;&gt;alias&lt;/a&gt;. Note that the runtime path must be writable by the process running the application. And the path should be protected from being accessed by end users, because the temporary files under it may contain sensitive information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e993fe4cba059f8ca99f2598dde5617a953014" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; property using a directory path or a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;. In both forms, the corresponding directory must exist, or an exception will be thrown. The path will be normalized by calling the &lt;code&gt;realpath()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf2165a2fc73556feb55ef039be53d5fb06f34a" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;controller map&lt;/a&gt; in the &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;application configuration&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26923611b538647aa01543a173ba5039a95252b4" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-filters-httpcache#%24etagSeed-detail&quot;&gt;yii\filters\HttpCache::$etagSeed&lt;/a&gt; property to enable sending the &lt;code&gt;ETag&lt;/code&gt; header. The property should be a PHP callable returning a seed for generating the ETag hash. The signature of the PHP callable should be as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9dbaab49d4123eb4e9c72788605e55579d6019f" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-filters-httpcache#%24lastModified-detail&quot;&gt;yii\filters\HttpCache::$lastModified&lt;/a&gt; property to enable sending the &lt;code&gt;Last-Modified&lt;/code&gt; header. The property should be a PHP callable returning a UNIX timestamp about the page modification time. The signature of the PHP callable should be as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec8d153154a41cdcebeaa35fd5c6baf4c4b82ea" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;code&gt;only&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; options to explicitly list which actions to support or which actions should be disabled, respectively. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c7960e8108a9c0cab3f9957dec3234bd4d81c1" translate="yes" xml:space="preserve">
          <source>You may configure the email to be sent by setting the &lt;a href=&quot;yii-log-emailtarget#%24message-detail&quot;&gt;$message&lt;/a&gt; property, through which you can set the target email addresses, subject, etc.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83545638c0436eec8296f9841b04f5c260f6c7b" translate="yes" xml:space="preserve">
          <source>You may configure the rate limiter as follows in your REST controller classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d050d5574a365c7db05a4a7ea9d767a9705dcc50" translate="yes" xml:space="preserve">
          <source>You may configure the serializer by setting the &lt;a href=&quot;yii-rest-controller#%24serializer-detail&quot;&gt;yii\rest\Controller::$serializer&lt;/a&gt; property with a configuration array. For example, sometimes you may want to help simplify the client development work by including pagination information directly in the response body. To do so, configure the &lt;a href=&quot;yii-rest-serializer#%24collectionEnvelope-detail&quot;&gt;yii\rest\Serializer::$collectionEnvelope&lt;/a&gt; property as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9d44aa3acfd0b103788521b3b5c0dc3dca5310" translate="yes" xml:space="preserve">
          <source>You may configure the targets in application configuration, like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3631a9b486cfc84e9bd0f3dc2f4d3f51448cd1fa" translate="yes" xml:space="preserve">
          <source>You may configure this property as a directory or a path &lt;a href=&quot;guide-concept-aliases&quot;&gt;alias&lt;/a&gt;. When you modify this property, make sure you also adjust the Composer configuration accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8eb1ac3a114f4441c6c226ba95c90e6da12929c" translate="yes" xml:space="preserve">
          <source>You may configure this property to be &lt;code&gt;false&lt;/code&gt; if you want to disable layout by default, although this is very rare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cb45b2ef2a88f18188a5a7ef7e49f27bbefbb7" translate="yes" xml:space="preserve">
          <source>You may consider creating an extension when you feel the need to share with other people your great code. An extension can contain any code you like, such as a helper class, a widget, a module, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d06154e3dcd0736828176a105faddd8d707848e" translate="yes" xml:space="preserve">
          <source>You may control automatic typecasting for particular case using fields &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterValidate-detail&quot;&gt;$typecastAfterValidate&lt;/a&gt;, &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastBeforeSave-detail&quot;&gt;$typecastBeforeSave&lt;/a&gt; and &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterFind-detail&quot;&gt;$typecastAfterFind&lt;/a&gt;. By default typecasting will be performed only after model validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d314eaa7477503dfdc899a6a9e4518bd38ffdb" translate="yes" xml:space="preserve">
          <source>You may customize the error response format by responding to the &lt;code&gt;beforeSend&lt;/code&gt; event of the &lt;code&gt;response&lt;/code&gt; component in the application configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b301010542ffdabdb6c7c4a9398d8d4bfaeb65b8" translate="yes" xml:space="preserve">
          <source>You may customize the formatting process or support additional formats by configuring &lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;$formatters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d158f70e6e31f6085708dfd5eb806fce3de244" translate="yes" xml:space="preserve">
          <source>You may customize the formatting rules by configuring the &lt;code&gt;formatter&lt;/code&gt; component in the &lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;application configuration&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b024c1ceb6e4abf972599c49408810b8b83db6d5" translate="yes" xml:space="preserve">
          <source>You may customize the namespace of controller classes by configuring the &lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii\base\Module::$controllerNamespace&lt;/a&gt; property. In case some of the controllers are outside of this namespace, you may make them accessible by configuring the &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;yii\base\Module::$controllerMap&lt;/a&gt; property, similar to &lt;a href=&quot;guide-structure-applications#controller-map&quot;&gt;what you do in an application&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5832103e6af7bb70811b8f2771082bd4d28019d9" translate="yes" xml:space="preserve">
          <source>You may customize these default view directories by overriding the &lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;yii\base\ViewContextInterface::getViewPath()&lt;/a&gt; method of controllers or widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5febc33a98c6d253f7c625f0ffe0bf7cdbc5e0f3" translate="yes" xml:space="preserve">
          <source>You may customize this behavior by configuring the &lt;a href=&quot;yii-filters-accesscontrol#%24denyCallback-detail&quot;&gt;yii\filters\AccessControl::$denyCallback&lt;/a&gt; property like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e8355ca1724af8d0dda94eb0614eafbc0ce276" translate="yes" xml:space="preserve">
          <source>You may customize this format by configuring the &lt;a href=&quot;yii-log-target#%24prefix-detail&quot;&gt;yii\log\Target::$prefix&lt;/a&gt; property which takes a PHP callable returning a customized message prefix. For example, the following code configures a log target to prefix each log message with the current user ID (IP address and Session ID are removed for privacy reasons).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbad2e0bc5440370fab949789ceea9de7b3379d" translate="yes" xml:space="preserve">
          <source>You may define &lt;code&gt;YII_ENV&lt;/code&gt; as one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e1ded28ca02844f8eae73b130fa67c75cd02a3" translate="yes" xml:space="preserve">
          <source>You may directly use Model to store model data, or extend it with customization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c92fd6c77dc71eef7395c438b2e8f6a1734d8a6" translate="yes" xml:space="preserve">
          <source>You may disable pjax for a specific link inside the container by adding &lt;code&gt;data-pjax=&quot;0&quot;&lt;/code&gt; attribute to this link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245d0233f8a8ec2c4b666b3d0647f596767a5729" translate="yes" xml:space="preserve">
          <source>You may disable some of these actions by overriding &lt;a href=&quot;yii-rest-activecontroller#actions()-detail&quot;&gt;actions()&lt;/a&gt; and unsetting the corresponding actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edb07bfb183943e091594b86245866acb55bd4e" translate="yes" xml:space="preserve">
          <source>You may disable these headers by configuring &lt;a href=&quot;yii-filters-ratelimiter#%24enableRateLimitHeaders-detail&quot;&gt;yii\filters\RateLimiter::$enableRateLimitHeaders&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt;, as shown in the above code example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3e6b28fea9f880b73876d9aa7c22a0a7856682" translate="yes" xml:space="preserve">
          <source>You may encounter a case where your JavaScript needs to print a message reacting to some event. In an application that works with multiple languages this string has to be translated to the current application language. One way to achieve this is to use the &lt;a href=&quot;guide-tutorial-i18n#message-translation&quot;&gt;message translation feature&lt;/a&gt; provided by Yii and passing the result to the JavaScript code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ce208d34bc2fabcdb1f97e235afa5dd1f7ca56" translate="yes" xml:space="preserve">
          <source>You may even conditionally define attribute labels. For example, based on the &lt;a href=&quot;#scenarios&quot;&gt;scenario&lt;/a&gt; the model is being used in, you may return different labels for the same attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebb471ff2f44ef9183b03f3659f58fe6de1dce0" translate="yes" xml:space="preserve">
          <source>You may explicitly specify it by setting the &lt;a href=&quot;yii-web-request#setHostInfo()-detail&quot;&gt;hostInfo&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab756a33fe8464cebdcb5312cc4424cc09f1050" translate="yes" xml:space="preserve">
          <source>You may give an alias to a row so that later in your test, you may refer to the row via the alias. In the above example, the two rows are aliased as &lt;code&gt;user1&lt;/code&gt; and &lt;code&gt;user2&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a84dcd610d410e2f88e80dcadb4c87d89c0c60c" translate="yes" xml:space="preserve">
          <source>You may have noticed that the controller ID &lt;code&gt;user&lt;/code&gt; appears in plural form as &lt;code&gt;users&lt;/code&gt; in the endpoint URLs. This is because &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt; automatically pluralizes controller IDs when creating child URL rules. You may disable this behavior by setting &lt;a href=&quot;yii-rest-urlrule#%24pluralize-detail&quot;&gt;yii\rest\UrlRule::$pluralize&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe12e04658544ac490699a0de9b026072b80011" translate="yes" xml:space="preserve">
          <source>You may just focus on the first step, because the second step can be achieved by generic data formatters, such as &lt;a href=&quot;yii-web-jsonresponseformatter&quot;&gt;yii\web\JsonResponseFormatter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1022d50e5bb4a18b81e33e7c72f221538a244b" translate="yes" xml:space="preserve">
          <source>You may list one or multiple root namespaces and their corresponding file paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018473a68e1001c0442e6244fb958d968739118d" translate="yes" xml:space="preserve">
          <source>You may modify or remove some of the GET parameters, or add additional query parameters through the &lt;code&gt;$params&lt;/code&gt; parameter. In particular, if you specify a parameter to be null, then this parameter will be removed from the existing GET parameters; all other parameters specified in &lt;code&gt;$params&lt;/code&gt; will be merged with the existing GET parameters. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1c6cba18b24dd9658f6188dee1d4083a5a6097" translate="yes" xml:space="preserve">
          <source>You may optionally format the string with ANSI codes by passing additional parameters using the constants defined in &lt;a href=&quot;yii-helpers-console&quot;&gt;yii\helpers\Console&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d6c0706ce8cb5a69a6aa4257609a9bcf9f6b32" translate="yes" xml:space="preserve">
          <source>You may override &lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;yii\base\Model::attributes()&lt;/a&gt; to define attributes in a different way. The method should return the names of the attributes in a model. For example, &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; does so by returning the column names of the associated database table as its attribute names. Note that you may also need to override the magic methods such as &lt;code&gt;__get()&lt;/code&gt;, &lt;code&gt;__set()&lt;/code&gt; so that the attributes can be accessed like normal object properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b50f0b41641b8cac465898b5ef5b57aab19de91" translate="yes" xml:space="preserve">
          <source>You may override &lt;a href=&quot;yii-elasticsearch-activerecord#index()-detail&quot;&gt;index()&lt;/a&gt; and &lt;a href=&quot;yii-elasticsearch-activerecord#type()-detail&quot;&gt;type()&lt;/a&gt; to define the index and type this record represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5074a25af7796ec08fc0a2ee360262410131989" translate="yes" xml:space="preserve">
          <source>You may override it to customize checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a07798a16e5c8d1cead8310de32b5e011af1bde" translate="yes" xml:space="preserve">
          <source>You may override it to customize slug generation. The default implementation calls &lt;a href=&quot;yii-helpers-baseinflector#slug()-detail&quot;&gt;yii\helpers\Inflector::slug()&lt;/a&gt; on the input strings concatenated by dashes (&lt;code&gt;-&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e55721fbaf639066ecb75def5f4663a495e02a" translate="yes" xml:space="preserve">
          <source>You may override the configuration of both categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1434d6af3846d2d29b3f19f249040a90a8e2d7" translate="yes" xml:space="preserve">
          <source>You may override this method if the instance being created depends on the row data to be populated into the record. For example, by creating a record based on the value of a column, you may implement the so-called single-table inheritance mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf560aa7c3d93683d2d994664e3db561754fc44" translate="yes" xml:space="preserve">
          <source>You may override this method to cancel caching by returning &lt;code&gt;false&lt;/code&gt; or store an additional data in a cache entry by returning an array instead of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10de7e931b28dd0b3a6cfe1a0f0bcc930e7c086" translate="yes" xml:space="preserve">
          <source>You may override this method to create a number formatter based on patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f88e58b6f4ddebaf09922b2e54701927b34d894" translate="yes" xml:space="preserve">
          <source>You may override this method to customize the generation of page buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ba27b05d3360f41e6461e74cda4236dfdd9091" translate="yes" xml:space="preserve">
          <source>You may override this method to customize the message storage in the MongoDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070249dd05b0204d5a9beaf9cbd6a5fbccc9f34f" translate="yes" xml:space="preserve">
          <source>You may override this method to customize the message storage in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570f2d1d4aacf159e43d8eec86494a8cfd002969" translate="yes" xml:space="preserve">
          <source>You may override this method to define the primary key name when you have defined &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;path mapping&lt;/a&gt; for the &lt;code&gt;_id&lt;/code&gt; field so that it is part of the &lt;code&gt;_source&lt;/code&gt; and thus part of the &lt;a href=&quot;yii-elasticsearch-activerecord#attributes()-detail&quot;&gt;attributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634b37f6bfbda1faaf1fbfe5c84cef5992fdbc2c" translate="yes" xml:space="preserve">
          <source>You may override this method to do last-minute preparation before the response is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270a842f8ab090ddc17ac8fc758d7c80944af6e4" translate="yes" xml:space="preserve">
          <source>You may override this method to do last-minute preparation for the message. If you override this method, please make sure you call the parent implementation first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f026db875734c4f989897be8c1c65d07f61829d" translate="yes" xml:space="preserve">
          <source>You may override this method to do post-processing work for the action run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddd5c92bdfb1cda5a1e049b6e6363b1ced65e8e" translate="yes" xml:space="preserve">
          <source>You may override this method to do preparation work for the action run. If the method returns false, it will cancel the action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09b9bcec5b6900123dcd8de55553428caf40880" translate="yes" xml:space="preserve">
          <source>You may override this method to do some postprocessing for the action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2c24e77fc6453c9b112c3976e6974f936ca999" translate="yes" xml:space="preserve">
          <source>You may override this method to do some postprocessing or logging based on mail send status. If you override this method, please make sure you call the parent implementation first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b9cf0d6f7986ff4d2e313c04a1eaa3efe46398" translate="yes" xml:space="preserve">
          <source>You may override this method to return a customized query. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29ea611831ce3d507881ef90dcb079ff2cc4a98" translate="yes" xml:space="preserve">
          <source>You may override this method to return a list of expandable fields based on some context information (e.g. the current application user).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83caac1e77797c93e1a78d2e520c65ee2e13498" translate="yes" xml:space="preserve">
          <source>You may override this method to return customized help. The default implementation returns help information retrieved from the PHPDoc comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f8206a7ec0e990ce449ecad50e3cd50688df80" translate="yes" xml:space="preserve">
          <source>You may override this method to return customized summary. The default implementation returns first line from the PHPDoc comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b593e34d6e7c0628ff11e01d17a9b0b81a996c25" translate="yes" xml:space="preserve">
          <source>You may override this method to return the JavaScript validation code if the validator can support client-side validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a184f534c9a0164974296f4e89d2c9192772b5a" translate="yes" xml:space="preserve">
          <source>You may pass additional parameters using the constants defined in &lt;a href=&quot;yii-helpers-console&quot;&gt;yii\helpers\Console&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49588c006493b64f70a7d86bef66ca228d8f4ac7" translate="yes" xml:space="preserve">
          <source>You may pass additional view parameters to &lt;code&gt;compose()&lt;/code&gt; method, which will be available inside the view files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1209efb57536f70ae3eb9edd80c275332d275de1" translate="yes" xml:space="preserve">
          <source>You may provide constructor parameters (&lt;code&gt;$params&lt;/code&gt;) and object configurations (&lt;code&gt;$config&lt;/code&gt;) that will be used during the creation of the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f399703c1aefc792b59d2d8e23a96c804fcac557" translate="yes" xml:space="preserve">
          <source>You may respond to these events to implement features such as login audit, online user statistics. For example, in the handler for &lt;a href=&quot;yii-web-user#EVENT_AFTER_LOGIN-detail&quot;&gt;EVENT_AFTER_LOGIN&lt;/a&gt;, you may record the login time and IP address in the &lt;code&gt;user&lt;/code&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d6c08da371e6eb3a6500cc4ff84694ba601f0d" translate="yes" xml:space="preserve">
          <source>You may set options using keys, which are specific to particular transport, like &lt;code&gt;[CURLOPT_VERBOSE =&amp;gt; true]&lt;/code&gt; in case there is a necessity for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d8ddbdc82d84a1a96dabcbf690c803ecde1af4" translate="yes" xml:space="preserve">
          <source>You may specify additional options about fragment caching by passing the option array as the second parameter to the &lt;a href=&quot;yii-base-view#beginCache()-detail&quot;&gt;beginCache()&lt;/a&gt; method. Behind the scene, this option array will be used to configure a &lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii\widgets\FragmentCache&lt;/a&gt; widget which implements the actual fragment caching functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaab053fa861172364943e338d24b8780718f1c" translate="yes" xml:space="preserve">
          <source>You may specify multiple CSS classes using the array style as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f325f940cbe268faddfb775f36c137fdac5901cf" translate="yes" xml:space="preserve">
          <source>You may specify several target bundles in order to compress different groups of assets. In this case you should use 'depends' key to specify, which bundles should be covered with particular target bundle. You may leave 'depends' to be empty for single bundle, which will compress all remaining bundles in this case. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4644ea99ae5a3cf2830561bf488a43c9da30e38" translate="yes" xml:space="preserve">
          <source>You may specify the attributes to be updated as name list or name-value pairs. If the latter, the corresponding attribute values will be modified accordingly. The method will then save the specified attributes into database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9431d6a1f359943e7b69db4d68f2cf6620827055" translate="yes" xml:space="preserve">
          <source>You may specify the relation name as the array key and provide an anonymous functions that can be used to modify the relation queries on-the-fly as the array value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2cdb040a8d6d46bf7522e1f7b741f16a1f212e" translate="yes" xml:space="preserve">
          <source>You may specify the route as a string, e.g., &lt;code&gt;site/index&lt;/code&gt;. You may also use an array if you want to specify additional query parameters for the URL being created. The array format must be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29698c4ff5651a913299b85eaa6489f041110cd4" translate="yes" xml:space="preserve">
          <source>You may specify various container HTML options by passing arrays to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb72cbafd49b860c1288740ce2c51d6c943d0058" translate="yes" xml:space="preserve">
          <source>You may switch between the two URL formats by toggling the &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;enablePrettyUrl&lt;/a&gt; property of the &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; without changing any other application code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d3e8174ca0cec7334f320d9a546492fd7d8153" translate="yes" xml:space="preserve">
          <source>You may then get the following response for request &lt;code&gt;http://localhost/users&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9167c9a38f2bb34bfd6f2a32c4f4b8ea7daa15" translate="yes" xml:space="preserve">
          <source>You may trigger a &lt;em&gt;class-level&lt;/em&gt; event by calling the static method &lt;a href=&quot;yii-base-event#trigger()-detail&quot;&gt;yii\base\Event::trigger()&lt;/a&gt;. A class-level event is not associated with a particular object. As a result, it will cause the invocation of class-level event handlers only. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c753a7b0281e6c44ebb0a9804c23e7d2e79e2f" translate="yes" xml:space="preserve">
          <source>You may tune the CORS headers by overriding default parameters on a per action basis. For example adding the &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; for the &lt;code&gt;login&lt;/code&gt; action could be done like this :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d103b87fc8896d67c1c157b85a2f6b439e1d40" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-authclient-baseoauth#createApiRequest()-detail&quot;&gt;createApiRequest()&lt;/a&gt; method instead, gaining more control over request execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10eb6e1a35dc9b84ed21a2548b6d10529950947a" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-captcha-captchavalidator&quot;&gt;yii\captcha\CaptchaValidator&lt;/a&gt; to validate the user input matches the current CAPTCHA verification code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8b7c4613fd2cbe425941e8a7c4a14cc3e24919" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-di-instance#get()-detail&quot;&gt;get()&lt;/a&gt; to obtain the actual object referenced by &lt;a href=&quot;yii-di-instance#%24id-detail&quot;&gt;$id&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81c7b3b06719fce40d869194c924e9acf0d7984" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-di-servicelocator#has()-detail&quot;&gt;yii\di\ServiceLocator::has()&lt;/a&gt; to check if a component ID has already been registered. If you call &lt;a href=&quot;yii-di-servicelocator#get()-detail&quot;&gt;yii\di\ServiceLocator::get()&lt;/a&gt; with an invalid ID, an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc59f533cdb398cf9626350e62bc8f8ebfac6b60" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;$fileMap&lt;/a&gt; to customize the association between category names and the file names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387bc85ba5e82526186968fdcaf51d6d7f357083" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt; to simplify the routing to your API endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cafa7a3cf722fe4845365f3c1313a77c926e2d7" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-sphinx-matchexpression#match()-detail&quot;&gt;match()&lt;/a&gt;, &lt;a href=&quot;yii-sphinx-matchexpression#andMatch()-detail&quot;&gt;andMatch()&lt;/a&gt; and &lt;a href=&quot;yii-sphinx-matchexpression#orMatch()-detail&quot;&gt;orMatch()&lt;/a&gt; to combine several conditions. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a2d770a40d3ba779a1265fe007f61624fab27c" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-web-user#%24isGuest-detail&quot;&gt;$isGuest&lt;/a&gt; to determine whether the current user is a guest or not. If the user is a guest, the &lt;a href=&quot;yii-web-user#%24identity-detail&quot;&gt;$identity&lt;/a&gt; property would return &lt;code&gt;null&lt;/code&gt;. Otherwise, it would be an instance of &lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii\web\IdentityInterface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c456bd3c6c9d2f0b95deb3028a93e3dd5591355" translate="yes" xml:space="preserve">
          <source>You may use CORS filter by attaching it as a behavior to a controller or module, like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453ecf90c65c6d377c9e13fa408ad7f0868d0dec" translate="yes" xml:space="preserve">
          <source>You may use ContentNegotiator as a bootstrapping component as well as an action filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277efd291bd0e5995f2508a389a47968e560cb7c" translate="yes" xml:space="preserve">
          <source>You may use HttpBasicAuth by attaching it as a behavior to a controller or module, like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ba80bf293355adc8aa50ee1dbd8cea08b9b805" translate="yes" xml:space="preserve">
          <source>You may use HttpBearerAuth by attaching it as a behavior to a controller or module, like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888df728afc94c5ca1871651105544a2c666abc3" translate="yes" xml:space="preserve">
          <source>You may use RateLimiter by attaching it as a behavior to a controller or module, like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e0eb2a91ded0e97f0d1db132c6ce127b133082" translate="yes" xml:space="preserve">
          <source>You may use a different layout by configuring either &lt;a href=&quot;yii-base-application#%24layout-detail&quot;&gt;yii\base\Application::$layout&lt;/a&gt; or &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii\base\Controller::$layout&lt;/a&gt;. The former governs the layout used by all controllers, while the latter overrides the former for individual controllers. For example, the following code makes the &lt;code&gt;post&lt;/code&gt; controller to use &lt;code&gt;@app/views/layouts/post.php&lt;/code&gt; as the layout when rendering its views. Other controllers, assuming their &lt;code&gt;layout&lt;/code&gt; property is untouched, will still use the default &lt;code&gt;@app/views/layouts/main.php&lt;/code&gt; as the layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd40f79e1c1ff1359298066a33e303d658f57df0" translate="yes" xml:space="preserve">
          <source>You may use a string or an arbitrary value as a cache key. When a key is not a string, it will be automatically serialized into a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6787a5d1a7fab102ca6d334c44c5819d59e111" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;array&lt;/code&gt; type hint to indicate that an argument should be treated as an array. The array will be generated by splitting the input string on commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd4cd216cc58ec316d824211db2482c718f6a67" translate="yes" xml:space="preserve">
          <source>You may use the Composer autoloader alone without the Yii autoloader. However, by doing so, the performance of your class autoloading may be degraded, and you must follow the rules set by Composer in order for your classes to be autoloadable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b12e801fa2620210df7c349c121dd600d64e60b" translate="yes" xml:space="preserve">
          <source>You may use the following placeholders in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ac98a995c809d8198e583c09ea640c2d53aaaa" translate="yes" xml:space="preserve">
          <source>You may use this method to display all the flash messages in a view file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d86b217aaa0c045fa361ff534d654af343a7216" translate="yes" xml:space="preserve">
          <source>You may use this method to validate a value out of the context of a data model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612f67a6c867726e3208be64859c9e9a52be67b3" translate="yes" xml:space="preserve">
          <source>You may usually consider the last recommendation above when you are developing large complex systems. In these systems, models could be very fat because they are used in many places and may thus contain many sets of rules and business logic. This often ends up in a nightmare in maintaining the model code because a single touch of the code could affect several different places. To make the model code more maintainable, you may take the following strategy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ed884bde88f00c3bb27f17d23d57489d9e724b" translate="yes" xml:space="preserve">
          <source>You may view this method as an enhanced version of the &lt;code&gt;new&lt;/code&gt; operator. The method supports creating an object based on a class name, a configuration array or an anonymous function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae0d67d0931a97047a1e1de68af6d81d8f28917" translate="yes" xml:space="preserve">
          <source>You may want to add suffixes to the URLs for various purposes. For example, you may add &lt;code&gt;.html&lt;/code&gt; to the URLs so that they look like URLs for static HTML pages; you may also add &lt;code&gt;.json&lt;/code&gt; to the URLs to indicate the expected content type of the response. You can achieve this goal by configuring the &lt;a href=&quot;yii-web-urlmanager#%24suffix-detail&quot;&gt;yii\web\UrlManager::$suffix&lt;/a&gt; property like the following in the application configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950012003281cf7b507ed653ebb68b0cb02e2973" translate="yes" xml:space="preserve">
          <source>You may want to use two columns in the user table to record the allowance and timestamp information. With those defined, then &lt;code&gt;loadAllowance()&lt;/code&gt; and &lt;code&gt;saveAllowance()&lt;/code&gt; can be implemented to read and save the values of the two columns corresponding to the current authenticated user. To improve performance, you may also consider storing these pieces of information in a cache or NoSQL storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67f6d32cd9a0fa8ddc2097d91419c4e4a2cd353" translate="yes" xml:space="preserve">
          <source>You might notice &lt;code&gt;Instance::of('tempFileStorage')&lt;/code&gt; notation. It means, that the &lt;a href=&quot;yii-di-container&quot;&gt;Container&lt;/a&gt; will implicitly provide a dependency registered with the name of &lt;code&gt;tempFileStorage&lt;/code&gt; and pass it as the first argument of &lt;code&gt;app\storage\DocumentsWriter&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4f45a144926f78932609e67066eaa8eb1b71ec" translate="yes" xml:space="preserve">
          <source>You must set this property if the directory containing the source asset files is not Web accessible. By setting this property, &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii\web\AssetManager&lt;/a&gt; will publish the source asset files to a Web-accessible directory automatically when the asset bundle is registered on a page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d809cf52d2d850b60599645fdcf06fe2316dccb" translate="yes" xml:space="preserve">
          <source>You need to use &lt;a href=&quot;yii-sphinx-query#search()-detail&quot;&gt;search()&lt;/a&gt; method in order to fetch facet results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60be138619e00f23fc3d5ad581f437bc0205ec04" translate="yes" xml:space="preserve">
          <source>You normally do not need to set this property as the default selectors should work well for most cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3ec279d371a78e621fc1bf393f720ffc6af9bd" translate="yes" xml:space="preserve">
          <source>You now have to define the &lt;code&gt;CommentQuery&lt;/code&gt; class, which can be customized in many creative ways to improve your query building experience. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecab457e3ec81ac428d52253c51adb97922150b" translate="yes" xml:space="preserve">
          <source>You often need to set the &lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;target language&lt;/a&gt; dynamically based on different factors, such as the language preference of end users. Instead of configuring it in the application configuration, you can use the following statement to change the target language:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7060f9a3765a6c98c9490a982496ed53e7cc155e" translate="yes" xml:space="preserve">
          <source>You should configure your PHP installation so that it meets the minimum requirements of Yii. Most importantly, you should have PHP 5.4 or above. Ideally latest PHP 7. You should also install the &lt;a href=&quot;http://www.php.net/manual/en/pdo.installation.php&quot;&gt;PDO PHP Extension&lt;/a&gt; and a corresponding database driver (such as &lt;code&gt;pdo_mysql&lt;/code&gt; for MySQL databases), if your application needs a database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b261c1d50077bc0e60225597ed17d0f3d574199" translate="yes" xml:space="preserve">
          <source>You should configure your application as follows (you can use any alias, not only &quot;fixture&quot;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882d3821fb6550df1d6c0744dd5e12f592333e93" translate="yes" xml:space="preserve">
          <source>You should give each release of your extension a version number (e.g. &lt;code&gt;1.0.1&lt;/code&gt;). We recommend you follow the &lt;a href=&quot;http://semver.org&quot;&gt;semantic versioning&lt;/a&gt; practice when determining what version numbers should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6c41d0606fbb47c998a6155cae28fcec730aad" translate="yes" xml:space="preserve">
          <source>You should modify this file and specify which bundles you plan to combine in the &lt;code&gt;bundles&lt;/code&gt; option. In the &lt;code&gt;targets&lt;/code&gt; option you should specify how the bundles should be divided into groups. You can specify one or multiple groups, as aforementioned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa282c30d6166ba165fb654ab69bbcf6bd83c92" translate="yes" xml:space="preserve">
          <source>You should never enable Gii or the Debug toolbar in production. It could be used to get information about database structure, code and to simply rewrite code with what's generated by Gii.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201f94f904112e1b0db8a2eb52fe6a3a80c0c9aa" translate="yes" xml:space="preserve">
          <source>You should normally override &lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load()&lt;/a&gt; to specify how to set up a fixture; and override &lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload()&lt;/a&gt; for clearing up a fixture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9badfe9fecb9559c4639e94d04d75a1343610e20" translate="yes" xml:space="preserve">
          <source>You should normally use InitDbFixture to prepare a skeleton test database. Other DB fixtures will then add specific tables and data to this database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29fd8cc9393f290b8e14bfa1c8dec6bbbe2e100" translate="yes" xml:space="preserve">
          <source>You should now create a view file located at &lt;code&gt;views/site/error.php&lt;/code&gt;. In this view file, you can access the following variables if the error action is defined as &lt;a href=&quot;yii-web-erroraction&quot;&gt;yii\web\ErrorAction&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fb953d8d974975f8bdc8aed6e79e503dd28c87" translate="yes" xml:space="preserve">
          <source>You should see the above &quot;Congratulations!&quot; page in your browser. If not, please check if your PHP installation satisfies Yii's requirements. You can check if the minimum requirements are met using one of the following approaches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b5112c41184f0c5160fb5f6bc6f46c942c9d61" translate="yes" xml:space="preserve">
          <source>You should specify exact attribute types via &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$attributeTypes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d5763caddc2a1ee67afa397ff52f1e0f31fa38" translate="yes" xml:space="preserve">
          <source>You should usually override &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess()&lt;/a&gt; to check whether the current user has the privilege to perform the specified action against the specified model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ee84d6d03a1c341246f395ee4bfabb45cc334f" translate="yes" xml:space="preserve">
          <source>You specify the pagination and sorting behaviors of a data provider by configuring its &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;pagination&lt;/a&gt; and &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;sort&lt;/a&gt; properties which correspond to the configurations for &lt;a href=&quot;yii-data-pagination&quot;&gt;yii\data\Pagination&lt;/a&gt; and &lt;a href=&quot;yii-data-sort&quot;&gt;yii\data\Sort&lt;/a&gt;, respectively. You may also configure them to be &lt;code&gt;false&lt;/code&gt; to disable pagination and/or sorting features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734ed8c8b5b84217e4d7ac48268c912824204cf1" translate="yes" xml:space="preserve">
          <source>You specify the transport constructor arguments using 'constructArgs' key in the config. You can also specify the list of plugins, which should be registered to the transport using 'plugins' key. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceee26291f383ec8f1a67bfb37cc946f87f23044" translate="yes" xml:space="preserve">
          <source>You then list this class in the &lt;code&gt;composer.json&lt;/code&gt; file of your extension like follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2e3dd7ea9aaff592ed3d85eb403189a1ea8824" translate="yes" xml:space="preserve">
          <source>You usually do not instantiate BatchQueryResult directly. Instead, you obtain it by calling &lt;a href=&quot;yii-db-query#batch()-detail&quot;&gt;yii\db\Query::batch()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#each()-detail&quot;&gt;yii\db\Query::each()&lt;/a&gt;. Because BatchQueryResult implements the &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; interface, you can iterate it to obtain a batch of data in each iteration. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92ba8dda4b98b6d0754a08676f83f814dd518f9" translate="yes" xml:space="preserve">
          <source>You usually do not instantiate BatchQueryResult directly. Instead, you obtain it by calling &lt;a href=&quot;yii-elasticsearch-query#batch()-detail&quot;&gt;yii\elasticsearch\Query::batch()&lt;/a&gt; or &lt;a href=&quot;yii-elasticsearch-query#each()-detail&quot;&gt;yii\elasticsearch\Query::each()&lt;/a&gt;. Because BatchQueryResult implements the &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; interface, you can iterate it to obtain a batch of data in each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482f8de8ed66d4f1095aa201b9e8a6f9b94255bd" translate="yes" xml:space="preserve">
          <source>You usually do not instantiate BatchQueryResult directly. Instead, you obtain it by calling &lt;a href=&quot;yii-mongodb-query#batch()-detail&quot;&gt;yii\mongodb\Query::batch()&lt;/a&gt; or &lt;a href=&quot;yii-mongodb-query#each()-detail&quot;&gt;yii\mongodb\Query::each()&lt;/a&gt;. Because BatchQueryResult implements the &lt;code&gt;Iterator&lt;/code&gt; interface, you can iterate it to obtain a batch of data in each iteration. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf29e35022fa9f6812ffe0c908262507818e0ff" translate="yes" xml:space="preserve">
          <source>You want data to be outputted as HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dd0473aefa07bf9925835f9c8a31b2c0647ccc" translate="yes" xml:space="preserve">
          <source>You want data to be outputted as plain text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a386bfed8205ffa9efbba31acd608c8cef7989e" translate="yes" xml:space="preserve">
          <source>You want your extension to run flawlessly without bringing problems to other people. To reach this goal, you should test your extension before releasing it to public.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b670969ada90014ed6700fedd368184d566ea083" translate="yes" xml:space="preserve">
          <source>You will see a data grid showing the countries from the database table. You may sort the grid, or filter it by entering filter conditions in the column headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd1f2c519c5c0fd3008e3d2daaff67d226138ad" translate="yes" xml:space="preserve">
          <source>You will then find your files (if you've chosen file based translations) in your &lt;code&gt;messagePath&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cef9aa6654c76786b476d9fd08377bbd2b9dbc4" translate="yes" xml:space="preserve">
          <source>You would normally call &lt;code&gt;$query-&amp;gt;search()&lt;/code&gt; instead of creating a command as this method adds the &lt;code&gt;indexBy()&lt;/code&gt; feature and also removes some inconsistencies from the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214f658eafcae47e47e1d69db61cded352ffad56" translate="yes" xml:space="preserve">
          <source>You've got a project to work on and it has no tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce405dec9725435a249741ae84755d1fa80b89f7" translate="yes" xml:space="preserve">
          <source>Your class namespaces should start with &lt;code&gt;vendorName\extensionName&lt;/code&gt;, where &lt;code&gt;extensionName&lt;/code&gt; is similar to the project name in the package name except that it should not contain the &lt;code&gt;yii2-&lt;/code&gt; prefix. For example, for the &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; extension, we use &lt;code&gt;yii\imagine&lt;/code&gt; as the namespace for its classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d20048a4833e533c87e7b5ec88bffdd930dbb8" translate="yes" xml:space="preserve">
          <source>Your commands will then be available from the command line using the following route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c549ddf9c76d91a544d89560303aba1e880a364" translate="yes" xml:space="preserve">
          <source>Your extension depends on Yii (of course). So you should list it (&lt;code&gt;yiisoft/yii2&lt;/code&gt;) in the &lt;code&gt;require&lt;/code&gt; entry in &lt;code&gt;composer.json&lt;/code&gt;. If your extension also depends on other extensions or third-party libraries, you should list them as well. Make sure you also list appropriate version constraints (e.g. &lt;code&gt;1.*&lt;/code&gt;, &lt;code&gt;@stable&lt;/code&gt;) for each dependent package. Use stable dependencies when your extension is released in a stable version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e4e7c3847b6589a61eb21e4fe05008f4d3f99f" translate="yes" xml:space="preserve">
          <source>Your extension may be used by applications supporting different languages! Therefore, if your extension displays content to end users, you should try to &lt;a href=&quot;guide-tutorial-i18n&quot;&gt;internationalize and localize&lt;/a&gt; it. In particular,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abad81845b4c3b144643cd7faaf29ad4e589850" translate="yes" xml:space="preserve">
          <source>Your extension may need to access databases. Do not assume that the applications that use your extension will always use &lt;code&gt;Yii::$db&lt;/code&gt; as the DB connection. Instead, you should declare a &lt;code&gt;db&lt;/code&gt; property for the classes that require DB access. The property will allow users of your extension to customize which DB connection they would like your extension to use. As an example, you may refer to the &lt;a href=&quot;yii-caching-dbcache&quot;&gt;yii\caching\DbCache&lt;/a&gt; class and see how it declares and uses the &lt;code&gt;db&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90194819d87a8e4edd32f38a5a45b466a64501e" translate="yes" xml:space="preserve">
          <source>Your module may also declare commands, that will be available through the &lt;a href=&quot;guide-tutorial-console&quot;&gt;Console&lt;/a&gt; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7257e194a80cb2cd58ea8732179497eca569dd" translate="yes" xml:space="preserve">
          <source>Your resource classes may support HATEOAS by implementing the &lt;a href=&quot;yii-web-linkable&quot;&gt;yii\web\Linkable&lt;/a&gt; interface. The interface contains a single method &lt;a href=&quot;yii-web-linkable#getLinks()-detail&quot;&gt;getLinks()&lt;/a&gt; which should return a list of &lt;a href=&quot;yii-web-link&quot;&gt;links&lt;/a&gt;. Typically, you should return at least the &lt;code&gt;self&lt;/code&gt; link representing the URL to the resource object itself. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9658c4e8cc329ead3d12bcf99fc150f01fe31dcb" translate="yes" xml:space="preserve">
          <source>ZSH completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c6c90643e3b1807979e6999edde193244028b2" translate="yes" xml:space="preserve">
          <source>ZendDataCache provides Zend data caching in terms of an application component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a03e66821ae9cbc62744cc4467eff2f8650297" translate="yes" xml:space="preserve">
          <source>Zero-based column index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd814e32fd56ebd047e4f8d972f25d9d1384154" translate="yes" xml:space="preserve">
          <source>Zero-based offset from where the records are to be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff85ff4b844384ebb17c3d3a1ee582a6e4d5e06" translate="yes" xml:space="preserve">
          <source>Zero-based offset from where the records are to be returned. May be an instance of &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt;. If not set or less than 0, it means starting from the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfee675a504bb4d63e08844965191948a09ed016" translate="yes" xml:space="preserve">
          <source>[optional]</source>
          <target state="translated">[optional]</target>
        </trans-unit>
        <trans-unit id="f01c72c514fd7694294ef85d47819051c42b9da5" translate="yes" xml:space="preserve">
          <source>\AccessControl</source>
          <target state="translated">\AccessControl</target>
        </trans-unit>
        <trans-unit id="034a219f2fa8437720d100e78e5cc337e479baae" translate="yes" xml:space="preserve">
          <source>\AccessControl $denyCallback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5b22309b1c0f8d1014372095db9462a04b3db2" translate="yes" xml:space="preserve">
          <source>\AccessControl $ruleConfig</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256f0c7c4956279d0cbfbef825aa4d2c95eb308c" translate="yes" xml:space="preserve">
          <source>\AccessControl $rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8347bf2c86ad7b21221e854724ab636b0e0bfee" translate="yes" xml:space="preserve">
          <source>\AccessControl $user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2e1ae4f231245b4e37b081f718b7306d0ad0cd" translate="yes" xml:space="preserve">
          <source>\AccessControl beforeAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a8bea3617764be0141b6055a4f1a3054ffa02f" translate="yes" xml:space="preserve">
          <source>\AccessControl denyAccess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9bc970cbeac7f2d32d85b4932ef1f5443f7375" translate="yes" xml:space="preserve">
          <source>\AccessControl init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32538ea214d27cfc3b69052deb1419ef9351b7aa" translate="yes" xml:space="preserve">
          <source>\AccessRule</source>
          <target state="translated">\AccessRule</target>
        </trans-unit>
        <trans-unit id="9dc7ba0a1757de520231577606a22029ecb8829b" translate="yes" xml:space="preserve">
          <source>\AccessRule $actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4939c192b862a3d76420655f437f1fbf0e0b99" translate="yes" xml:space="preserve">
          <source>\AccessRule $allow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1796f91577c1f057f7b46d872335115be13c2266" translate="yes" xml:space="preserve">
          <source>\AccessRule $controllers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52edc3fe891cf9e3b85d62822251fd5d8c0b680" translate="yes" xml:space="preserve">
          <source>\AccessRule $denyCallback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3a66238b9cc7b7238f5d54f9265522c0a70ae1" translate="yes" xml:space="preserve">
          <source>\AccessRule $ips</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0c9c4ae255b0cb08a34aa41180a6802e006764" translate="yes" xml:space="preserve">
          <source>\AccessRule $matchCallback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5577ef910d0cc782c6342e59ea08078c44845c" translate="yes" xml:space="preserve">
          <source>\AccessRule $roleParams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e645c48a13a70a5254c289bae6415bf4b7b725" translate="yes" xml:space="preserve">
          <source>\AccessRule $roles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de69c8a26d25ba184f44d1e78209e370838433b0" translate="yes" xml:space="preserve">
          <source>\AccessRule $verbs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dc83f40f118197740a166e196e3561728268ab" translate="yes" xml:space="preserve">
          <source>\AccessRule allows()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b635336f38f7553812df3570de908cc37b55ae" translate="yes" xml:space="preserve">
          <source>\AccessRule matchAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cce58db18376c8695af68321760726ac4d66ff5" translate="yes" xml:space="preserve">
          <source>\AccessRule matchController()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82025ed0b424c830a14ec7f25bc2c23713f35ab" translate="yes" xml:space="preserve">
          <source>\AccessRule matchCustom()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd98c4d96fa3852106adec16a47da5cce0eb99af" translate="yes" xml:space="preserve">
          <source>\AccessRule matchIP()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418b039ee4657bd9d34f875df95ecde8d0e05a6b" translate="yes" xml:space="preserve">
          <source>\AccessRule matchRole()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ece4f3e78e3509001d02341feba5a6eff07af8b" translate="yes" xml:space="preserve">
          <source>\AccessRule matchVerb()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd4e22a55295c8e6c46a9bc19e6a064b3264616" translate="yes" xml:space="preserve">
          <source>\Accordion</source>
          <target state="translated">\Accordion</target>
        </trans-unit>
        <trans-unit id="5682cbdd500914a3f4ac6f37270b5be6257115f4" translate="yes" xml:space="preserve">
          <source>\Accordion $headerOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3076a65990acda6dcddf9101ad7e48c2a31ca5" translate="yes" xml:space="preserve">
          <source>\Accordion $itemOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf71755c16344384c6bd752d98615a086d52cdc" translate="yes" xml:space="preserve">
          <source>\Accordion $items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddb0200fef45315f3bd82d9c06140b735e3a938" translate="yes" xml:space="preserve">
          <source>\Accordion $options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb6b35c4c9c1f7f73f97e0b30cd56d0f5d0ad97" translate="yes" xml:space="preserve">
          <source>\Accordion renderItems()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01afcc1f5b16c08b0b717ab99514ba9d3a1ae66d" translate="yes" xml:space="preserve">
          <source>\Accordion run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808516dcd15c68f964c8a874f90479db25f7aecf" translate="yes" xml:space="preserve">
          <source>\Action</source>
          <target state="translated">\Action</target>
        </trans-unit>
        <trans-unit id="5bec3707a61b0fd5e99f7fa7a3a94ea88545d58f" translate="yes" xml:space="preserve">
          <source>\Action $checkAccess</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9b48cda4322e1a7cc2eb43a45d54bf3144985d" translate="yes" xml:space="preserve">
          <source>\Action $controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd1052b31d5489a3bb60960e8ae0b7aa231d52b" translate="yes" xml:space="preserve">
          <source>\Action $findModel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a67e5154d2890dcc0bc97f7aeea0978d1dab39" translate="yes" xml:space="preserve">
          <source>\Action $id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1399c9f4f1100bf67a0f591d9d61003b87e7d60" translate="yes" xml:space="preserve">
          <source>\Action $modelClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78085ec4e9850e376ac26e469b6a60372d1b24ec" translate="yes" xml:space="preserve">
          <source>\Action $uniqueId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faea5a548f6b01b3e5da60bdb36b7cee8812dbe" translate="yes" xml:space="preserve">
          <source>\Action __construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a33cee182bedcb001f6cd2e9c2efd181529ee0" translate="yes" xml:space="preserve">
          <source>\Action afterRun()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd591aec3ac10bfe00c8f396d6bfdf64fd38958" translate="yes" xml:space="preserve">
          <source>\Action beforeRun()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a332d060b2b7b9f82e52cefc3752bd5450e14c2" translate="yes" xml:space="preserve">
          <source>\Action findModel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49764229b7d648f2db840179693965c0924bebb" translate="yes" xml:space="preserve">
          <source>\Action getUniqueId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3091d55ba43a5a444c8c7b46aacc015fdfcc5bcd" translate="yes" xml:space="preserve">
          <source>\Action init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969c1b1d0ff9827bd84c26c9ed7a58722fb78d1e" translate="yes" xml:space="preserve">
          <source>\Action runWithParams()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde50aff7a3ad3b68d19a34cee9b06efbacf5683" translate="yes" xml:space="preserve">
          <source>\ActionColumn</source>
          <target state="translated">\ActionColumn</target>
        </trans-unit>
        <trans-unit id="a590117ed8842b5d21ce73eaac23f2051f13b07b" translate="yes" xml:space="preserve">
          <source>\ActionColumn $buttonOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f0be0b13b67ccd5e2b6a3b6377b23596436747" translate="yes" xml:space="preserve">
          <source>\ActionColumn $buttons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fa9b6174f7147e8c27e4070e503c93b45d147f" translate="yes" xml:space="preserve">
          <source>\ActionColumn $controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfe5b74749fdc01b4b8a653a0795e96d62f0c9e" translate="yes" xml:space="preserve">
          <source>\ActionColumn $headerOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2b0a0166ae54253a20d2329fdecb4342261e12" translate="yes" xml:space="preserve">
          <source>\ActionColumn $template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b2a85d2d7d006c1dbbebec2fd7bce9ed4ab418" translate="yes" xml:space="preserve">
          <source>\ActionColumn $urlCreator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e836c32b8071f33f99216afbe2fafda2637c04fc" translate="yes" xml:space="preserve">
          <source>\ActionColumn $visibleButtons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b7b34b8d0d6617e1fb4c979060673c738c3522" translate="yes" xml:space="preserve">
          <source>\ActionColumn createUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b8fa94af707ac616e15d8b9169a33410a6966f" translate="yes" xml:space="preserve">
          <source>\ActionColumn init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e02ca29e6bd749965e8001f948d3ae9343840cd" translate="yes" xml:space="preserve">
          <source>\ActionColumn initDefaultButton()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cbce1fe130bdf359091fc5a534196d0e759b5c" translate="yes" xml:space="preserve">
          <source>\ActionColumn initDefaultButtons()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0d9811be157e4f828c46023a3d1d9a5777553e" translate="yes" xml:space="preserve">
          <source>\ActionColumn renderDataCellContent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeab3b338e9fa0a0e35d01d075ee24a49d3bd97f" translate="yes" xml:space="preserve">
          <source>\ActionEvent</source>
          <target state="translated">\ActionEvent</target>
        </trans-unit>
        <trans-unit id="5180a9ad976398841ff725a17c06671d06b081de" translate="yes" xml:space="preserve">
          <source>\ActionEvent $action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd340c5a1e658649b26373e650232e5e0fed2f42" translate="yes" xml:space="preserve">
          <source>\ActionEvent $isValid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fee8c2b776d8dc6c9359ed5bc7d6ecf86db176" translate="yes" xml:space="preserve">
          <source>\ActionEvent $result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef611a6f41f798759fa6f950fac6ecf38c5fbdc7" translate="yes" xml:space="preserve">
          <source>\ActionEvent __construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9d63ea7f8896638c9d067869f45ea8a7497d66" translate="yes" xml:space="preserve">
          <source>\ActionFilter</source>
          <target state="translated">\ActionFilter</target>
        </trans-unit>
        <trans-unit id="2978e01e3481b009447593aa04aa8e91377c8fad" translate="yes" xml:space="preserve">
          <source>\ActionFilter $except</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8629ad9d0ad7de16b4f5a60f92b2f32d8bbc179" translate="yes" xml:space="preserve">
          <source>\ActionFilter $only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78678f8384feb832f58f552f899aa499ca9f1ba0" translate="yes" xml:space="preserve">
          <source>\ActionFilter afterAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e7e91c47550b9c00442c105c239b223d46da71" translate="yes" xml:space="preserve">
          <source>\ActionFilter afterFilter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a793d068172a44ff796fe41020499b834aa6ba00" translate="yes" xml:space="preserve">
          <source>\ActionFilter attach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e28ad35439c878903848592638b9f499de9270d" translate="yes" xml:space="preserve">
          <source>\ActionFilter beforeAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ba3de804997ade911bb03dd0d36c0a4cd68584" translate="yes" xml:space="preserve">
          <source>\ActionFilter beforeFilter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38954875116fb8c5d2c3fc4016df6551c3a7384" translate="yes" xml:space="preserve">
          <source>\ActionFilter detach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78454eb9923da80ecce0848ab849b64d8476679a" translate="yes" xml:space="preserve">
          <source>\ActionFilter getActionId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd466264ea070e1ee75e67e0448b18f19e824c94" translate="yes" xml:space="preserve">
          <source>\ActionFilter isActive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a977e05099cfa5a32c1210383fa89247bea6b34c" translate="yes" xml:space="preserve">
          <source>\ActiveController</source>
          <target state="translated">\ActiveController</target>
        </trans-unit>
        <trans-unit id="3539f7d89126136bfd79409fa9d19b9ab9f838b2" translate="yes" xml:space="preserve">
          <source>\ActiveController $createScenario</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf97305aa8b8b99437bb1694df0907be2184053" translate="yes" xml:space="preserve">
          <source>\ActiveController $modelClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853a990e3e3dc01ca5136062af28a3646b164ee1" translate="yes" xml:space="preserve">
          <source>\ActiveController $updateScenario</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abdb627eb302f1f435439202a10b26df6b2ceb3b" translate="yes" xml:space="preserve">
          <source>\ActiveController actions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f527b9ead0b9ba0b1ed39bc6b5a4fccf9778e64a" translate="yes" xml:space="preserve">
          <source>\ActiveController checkAccess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dddc15f34e1c758a9434d2b2688c0d0767fe26" translate="yes" xml:space="preserve">
          <source>\ActiveController init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b323de4c191f7391275a8fedf31f6132b6af5b" translate="yes" xml:space="preserve">
          <source>\ActiveController verbs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54afeb3eea34c3a06e6c54db3c7ef2e0d006e0d" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider</source>
          <target state="translated">\ActiveDataProvider</target>
        </trans-unit>
        <trans-unit id="4c7624edc51458b3dd38ed51f816babf80caf65c" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $aggregations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0207220028cc245ab8dc0a6bcc31fc5ca727c0" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $db</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbeaa69b6c34ca80d0dedd792b14ca1404104cc" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $facets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efb5b51c8ef1c746dfe09789515882c5bde8992" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ec0ea321516e096ae4b1569aca797165eafde4" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $meta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873fe9b3084fecc7afc01d0b17e1640ed361a198" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8badb2c5555c1a6cc152c4c79fa94233e0df1b" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $queryResults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb79e8d6f201a3d888ec804e74deb88eabccef0" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getAggregation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d779979b94e3868d711dfd53cac361780af2d1" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getAggregations()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f307fb0850d48f770ce70962155d8a8d1aff5be" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getFacet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d421c26a6a60c4f14938ce03e5ae6e02d834e2d" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getFacets()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a531132f160c7c992bd3278518bb4867cae09849" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getMeta()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52527397241fd32d5407c9004861e88728c5d3cd" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getQueryResults()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50def96da41893ac32571e785d7bfcbc9596a88" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e704544585172deb728d0309e8d473b639307012" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider prepareKeys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ff51bd71d16518b54a9c44d5c09541b5053600" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider prepareModels()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd06f3e614ea650b035aac84e53983dc1564d11" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider prepareTotalCount()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9537041047eee9215979308e0171d61774d364b" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setFacets()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b98e2a336beedc6fc1075de46865f8b914bceca" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setMeta()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1af5f4620676c8bd02a3cc9c6a24d577345d28" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setQueryResults()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b99a76be60dd9df526c4fbf25c127e57e9e89a6" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setSort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634d796de504dc00f5c1bb1a499b89967bd366d2" translate="yes" xml:space="preserve">
          <source>\ActiveField</source>
          <target state="translated">\ActiveField</target>
        </trans-unit>
        <trans-unit id="9f51e72ec89f015d36456a4e514173e2fbe455d1" translate="yes" xml:space="preserve">
          <source>\ActiveField $addAriaAttributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a58a522738346c17fc7587f6ad224f6d33832fb" translate="yes" xml:space="preserve">
          <source>\ActiveField $attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1806b0584aae9b2fe75d17449e2c79bffe13c5f1" translate="yes" xml:space="preserve">
          <source>\ActiveField $checkboxTemplate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b2d5b07e2fdfcf6984853d34667039f8f05aff" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableAjaxValidation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a89ed874a9c6fae6651183630a88b2ea9ae4b4a" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableClientValidation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6deb3be78ccd7ff96332a052eb4841d634654b" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3b143321c21cd7b2d980c26fb1cb506a1d21f1" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableLabel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d84290525a431e861cf7ec1ed7737dceb045aff" translate="yes" xml:space="preserve">
          <source>\ActiveField $errorOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1605204c9d7b6c433f2b26c081886773b60703a" translate="yes" xml:space="preserve">
          <source>\ActiveField $form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92635672ed40b3badcd8f95f0c37e9093e09aff7" translate="yes" xml:space="preserve">
          <source>\ActiveField $hintOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ddd302e48ea1e6aac102b0e2c03b6032e2f49d" translate="yes" xml:space="preserve">
          <source>\ActiveField $horizontalCheckboxTemplate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c8c7194b895e1c8e41d87f6aa8514726363478" translate="yes" xml:space="preserve">
          <source>\ActiveField $horizontalCssClasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae864a00daf0f477319cd55305e7affef8cd010" translate="yes" xml:space="preserve">
          <source>\ActiveField $horizontalRadioTemplate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9d0a8517d176931163451f200c35218fd7fa5c" translate="yes" xml:space="preserve">
          <source>\ActiveField $inline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ab8b4731d5e2731c10af59e73279d4090ae3a7" translate="yes" xml:space="preserve">
          <source>\ActiveField $inlineCheckboxListTemplate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32172a8310840ab477664d5e837046c523d1924" translate="yes" xml:space="preserve">
          <source>\ActiveField $inlineRadioListTemplate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1bbc50ae357c142dbd9fe7dc9dc21adede7e66" translate="yes" xml:space="preserve">
          <source>\ActiveField $inputOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5363c9b12ddc10d4477849509a6ff06facbd164" translate="yes" xml:space="preserve">
          <source>\ActiveField $inputTemplate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d08e72af22486986523f14cee2d7cd8fd49de6f" translate="yes" xml:space="preserve">
          <source>\ActiveField $labelOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f95fec143e51f9c67093f06ff670d20b1fe510" translate="yes" xml:space="preserve">
          <source>\ActiveField $model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4899e092a9c4cedec8ca867db219629bc4d3b380" translate="yes" xml:space="preserve">
          <source>\ActiveField $options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750e3ef71a3cfa67963fcf435ce80ce6100e827d" translate="yes" xml:space="preserve">
          <source>\ActiveField $parts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42b84e6f087d50e6d27ddba0ce2e7defb94f9d6" translate="yes" xml:space="preserve">
          <source>\ActiveField $radioTemplate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd1fec50b75b28a3ad984fccc98ef044629aac0" translate="yes" xml:space="preserve">
          <source>\ActiveField $selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7256dde7a2a08eeef3c0dd896ee7eb5023d46002" translate="yes" xml:space="preserve">
          <source>\ActiveField $template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affcaedb85194a498d6c4fbc743837ad111aafee" translate="yes" xml:space="preserve">
          <source>\ActiveField $validateOnBlur</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a596660232766fe9572d4bdbd0b76f851aca83" translate="yes" xml:space="preserve">
          <source>\ActiveField $validateOnChange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a602ea82f620d726ad1c0f71b3632dd217d0155" translate="yes" xml:space="preserve">
          <source>\ActiveField $validateOnType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0a0fb08af4bf94ed7a75f2086d1efa0431c83f" translate="yes" xml:space="preserve">
          <source>\ActiveField $validationDelay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f8d80bfb52744ee31e0da1acaff38a069ec085" translate="yes" xml:space="preserve">
          <source>\ActiveField $wrapperOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84464c1647a559c4d8798a8578315d2052763ae1" translate="yes" xml:space="preserve">
          <source>\ActiveField __construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a078f9aafbbebb632ed8902b370e0ad79a34495" translate="yes" xml:space="preserve">
          <source>\ActiveField __toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdd8fc59167225b6f84a5fdc07519a186fa9c8a" translate="yes" xml:space="preserve">
          <source>\ActiveField addAriaAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba4665b6d6782140d5a7ed3f133948b905e2216" translate="yes" xml:space="preserve">
          <source>\ActiveField adjustLabelFor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5b3ad4ef57206b650e50016235cf429b54c2dc" translate="yes" xml:space="preserve">
          <source>\ActiveField begin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db56721199e79ec883862cb375a0206b873386c8" translate="yes" xml:space="preserve">
          <source>\ActiveField checkbox()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bb7430c7d14dc98995d40d98b662b1c287e4f6" translate="yes" xml:space="preserve">
          <source>\ActiveField checkboxList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30abe349fd706efd5b629f4ac91a6daa170f0d29" translate="yes" xml:space="preserve">
          <source>\ActiveField createLayoutConfig()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f460a0c8f6a32bee4016c276140042eb10e9f90f" translate="yes" xml:space="preserve">
          <source>\ActiveField dropDownList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165ca151c908f4b0f5966fcc29e0690a38c58ce9" translate="yes" xml:space="preserve">
          <source>\ActiveField end()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519e8ca13876699120a45f4abdeaf3b5020d026c" translate="yes" xml:space="preserve">
          <source>\ActiveField error()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a7166b42be1c2eca68c4aa87db0a5ace1cf9fc" translate="yes" xml:space="preserve">
          <source>\ActiveField fileInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a926121849f7b8c0e3f7d8c89fe8b06b6fa06617" translate="yes" xml:space="preserve">
          <source>\ActiveField getClientOptions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860c62f7007d98b2cbddd40810cd8188712f6940" translate="yes" xml:space="preserve">
          <source>\ActiveField getInputId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf2a644c1f01257ec9038040ec5047a2d286d90" translate="yes" xml:space="preserve">
          <source>\ActiveField hiddenInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319aa9b180717e59739caf834867bd82ad917ca0" translate="yes" xml:space="preserve">
          <source>\ActiveField hint()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b2635e2aef84de608329e5fa45f6818d940aea" translate="yes" xml:space="preserve">
          <source>\ActiveField inline()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e2ed27128e53a2741296e17f122410576aacab" translate="yes" xml:space="preserve">
          <source>\ActiveField input()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a136e1e9d5cafad6c4bcd87eb709b4eebd35460" translate="yes" xml:space="preserve">
          <source>\ActiveField isAjaxValidationEnabled()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe00217265bc51b8968e62a92724809f065b6792" translate="yes" xml:space="preserve">
          <source>\ActiveField isClientValidationEnabled()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b572f6bf8205503f67f1b213a03330a4fae422" translate="yes" xml:space="preserve">
          <source>\ActiveField label()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5612e1a71fa46e2455d8e2ca8a487bed5fde05" translate="yes" xml:space="preserve">
          <source>\ActiveField listBox()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7025da7ee260ab4cae37cbbaad7cec5d8ef69ecf" translate="yes" xml:space="preserve">
          <source>\ActiveField passwordInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ffca8b90d164fa5b4eeacc32c5e3538ea7936e" translate="yes" xml:space="preserve">
          <source>\ActiveField radio()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd980241976d009df044cf34a52e9a546412e647" translate="yes" xml:space="preserve">
          <source>\ActiveField radioList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90a8681323e2f928da3e75dd19673318df03e7b" translate="yes" xml:space="preserve">
          <source>\ActiveField render()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0d0ffff43939b268b08946f84e17eea2e3da04" translate="yes" xml:space="preserve">
          <source>\ActiveField renderLabelParts()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a81d208fbf1c92777af8369a21955058c6e42bc" translate="yes" xml:space="preserve">
          <source>\ActiveField staticControl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077dc7ac806913d5671e5aa82c085a1787ffd434" translate="yes" xml:space="preserve">
          <source>\ActiveField textInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939a3b8c720c5b6d083b3ca8dcd5ffedc533571e" translate="yes" xml:space="preserve">
          <source>\ActiveField textarea()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88e3a9a25db7bcb0a2249ef3c7e589353695ba5" translate="yes" xml:space="preserve">
          <source>\ActiveField widget()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7d7ead486a9809d9adff65aada4fb78fb350e3" translate="yes" xml:space="preserve">
          <source>\ActiveFixture</source>
          <target state="translated">\ActiveFixture</target>
        </trans-unit>
        <trans-unit id="f5e6eb895bec35e1b30eb47b4740edbee5aa2a11" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $collectionName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16982e063f83376e30f3f7b8b8aa2758a9c0c17" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $dataFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c80bd88c8798e344549577978c44227db4c5b5" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $db</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d667f77b151aa11dd2a88e1eebd083ee50968b77" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9992c58b76e9ddba24056238cdf7db4eb1dc5348" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $indexName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1347876a2e64e4c31faf40ee03a2cb0d03438990" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $indexSchema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e022066752d513d8efe4d2ebdbecfa240fc3fa7" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $tableName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719718396f5b73d19863ab469015c95d02c89eb0" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $tableSchema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555adeabf1aae9f8405d6e50d5bee676affc332c" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8ffb621bbf713ac02ef585f3ef9b459afa3d3b" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getCollection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c2a1bcce6586a0c92c1a72af46b096d0ea6e72" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getCollectionName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cfac11f4f9d3bbf1513163779e2a91b62d9bdb" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834894822be43168840e5f1f9db5ec4dfa52b06b" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getIndexSchema()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864e808f4b4b594479e88613cdb347e3a0f395a6" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getTableSchema()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1202d5a9bb2aabf5fd21fc4853eff81e5ea8822" translate="yes" xml:space="preserve">
          <source>\ActiveFixture init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9d02277b26b7fc69df33998f3d02a650c1db2d" translate="yes" xml:space="preserve">
          <source>\ActiveFixture load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64ba901f8f17c3531d1702c9a79e16265865006" translate="yes" xml:space="preserve">
          <source>\ActiveFixture resetCollection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e47ba81221122fa774a78e464b9a7104b3321f" translate="yes" xml:space="preserve">
          <source>\ActiveFixture resetIndex()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9841cecae14b3fb3799f7bc5b35ed901851ab0f6" translate="yes" xml:space="preserve">
          <source>\ActiveFixture resetTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75ab608c91299e0e90f514e3c9a782620b556ac" translate="yes" xml:space="preserve">
          <source>\ActiveFixture unload()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2d099a386a24935bfd240065f1e2c43e62c285" translate="yes" xml:space="preserve">
          <source>\ActiveForm</source>
          <target state="translated">\ActiveForm</target>
        </trans-unit>
        <trans-unit id="a535a890f0a33ef454d25981d5498693ef230ef4" translate="yes" xml:space="preserve">
          <source>\ActiveForm $action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227880784b690bae996fdfb28d6200816e3198af" translate="yes" xml:space="preserve">
          <source>\ActiveForm $ajaxDataType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c28703464bdd0f2a610bf0f260d59c74d2b08aa" translate="yes" xml:space="preserve">
          <source>\ActiveForm $ajaxParam</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d0fdaaafbf0ae7e37eab8c251d859d97acf891" translate="yes" xml:space="preserve">
          <source>\ActiveForm $attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246ee251e6576db1e42f3617cc1a93ef558b621f" translate="yes" xml:space="preserve">
          <source>\ActiveForm $enableAjaxValidation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc93277d0bffd35a494f78a3e3756a23f3c463a" translate="yes" xml:space="preserve">
          <source>\ActiveForm $enableClientScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea435678991a2ece47f4c6d8075b4533d1d7756f" translate="yes" xml:space="preserve">
          <source>\ActiveForm $enableClientValidation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7932250e7a03cbcdd87a1db2a8fe507215acb728" translate="yes" xml:space="preserve">
          <source>\ActiveForm $encodeErrorSummary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03901d667aabd2d4c0c1d639f736e29bc0a79fa7" translate="yes" xml:space="preserve">
          <source>\ActiveForm $errorCssClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba11718df9b3f0ab034ef9f60d9f42f94c9bb08" translate="yes" xml:space="preserve">
          <source>\ActiveForm $errorSummaryCssClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d84d3405b91d47860b354b6ad43d23680860a8" translate="yes" xml:space="preserve">
          <source>\ActiveForm $fieldClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1ecdcec73e845aacd42f39d1e3ac69c0f6118a" translate="yes" xml:space="preserve">
          <source>\ActiveForm $fieldConfig</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdfb985c18cbcf24a152428d13d9f9d053b3d1f" translate="yes" xml:space="preserve">
          <source>\ActiveForm $layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bc6e2d0ddd5ace056d1da51a94cb052dd7d545" translate="yes" xml:space="preserve">
          <source>\ActiveForm $method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4439f8b8ca27042150c9e29ba5100f7f52fd4522" translate="yes" xml:space="preserve">
          <source>\ActiveForm $options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c2e85e678f2db8e8b1d972dcb623d07f6e8856" translate="yes" xml:space="preserve">
          <source>\ActiveForm $requiredCssClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce65beeb12acd99a9982f895629b30aa8e2f2e9e" translate="yes" xml:space="preserve">
          <source>\ActiveForm $scrollToError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3b6adac1cdc13595916d6b7de3f64f2e61b2b5" translate="yes" xml:space="preserve">
          <source>\ActiveForm $scrollToErrorOffset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e0384db8a5c1356fbaef131480a3a8deb3ff75" translate="yes" xml:space="preserve">
          <source>\ActiveForm $successCssClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aeb2ff99ca64439f033cb45eaf126a003b3cdc4" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnBlur</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b1883dbe3ee6c3663e068bc7e8a17624595fbf" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnChange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5bd8235ca4638d308fc18789e64c52875458ee" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnSubmit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36baa0afa475514ce78997bf474204257d614858" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa52a7bb67391d3c8fd7c18a6db045e81cf151c6" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validatingCssClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7aab4a025afc829be4a6ce08556b6039cfb409b" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validationDelay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b13f3ae09a47eab557c8aaad0f408b6e799b90" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validationUrl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db220672b71349b1b050761ef7ae773dc742889" translate="yes" xml:space="preserve">
          <source>\ActiveForm beginField()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14bb6b911e1ee05006a3de48343474b89b31d69" translate="yes" xml:space="preserve">
          <source>\ActiveForm endField()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc16619a839cfd04ea7602817fab4d4997d3b6b5" translate="yes" xml:space="preserve">
          <source>\ActiveForm errorSummary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50e263307a2e299474bcd27a7f149b5b8cac542" translate="yes" xml:space="preserve">
          <source>\ActiveForm field()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4a03cc2f3a284b9e8a72324ba4be7bebc116e3" translate="yes" xml:space="preserve">
          <source>\ActiveForm getClientOptions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c2d7bcc62a0a21c052c1bb997c08e33ce4930c" translate="yes" xml:space="preserve">
          <source>\ActiveForm init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd9cbe251a11cfa169e5e0f9114c4bf5afc6f4b" translate="yes" xml:space="preserve">
          <source>\ActiveForm registerClientScript()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4040dff110fd372180bef9be93d001a1032d462" translate="yes" xml:space="preserve">
          <source>\ActiveForm run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dc7ef054343aad3f6ceb452182d4c5216b22a7" translate="yes" xml:space="preserve">
          <source>\ActiveForm validate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0668caabfdeb2523767baed905babbec9980b4a5" translate="yes" xml:space="preserve">
          <source>\ActiveForm validateMultiple()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80aa1cf747eb2ee33d39162f9b6ceae49716436f" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset</source>
          <target state="translated">\ActiveFormAsset</target>
        </trans-unit>
        <trans-unit id="bf1e235d855c27a2041a2cad7bf6d3b3b46f99fe" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset $depends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405688b03f7ce126fa14286ee191a7fda831659e" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset $js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae1f680a173d1043f882e5a1630b411137bfb43" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset $sourcePath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edc721a0d9ab38a4b9e5b2fc9d4600c652d4f2f" translate="yes" xml:space="preserve">
          <source>\ActiveQuery</source>
          <target state="translated">\ActiveQuery</target>
        </trans-unit>
        <trans-unit id="3d7872fb7f760a7daddc661198a20c2174a7ae88" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9875dfeb90b40f0177b887d5efae8ba8163b417" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $joinWith</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a099767455bd7e795a919cdc8bc86fb07aa00b" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f30e61b2f76fbe53c2c2130a0dd59cb4a879d3b" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $sql</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4281847c656ba21979df37a2075cefabe3ff38" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $tablesUsedInFrom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afde5b334c088b6effd287feaa49443b8cb58a9" translate="yes" xml:space="preserve">
          <source>\ActiveQuery EVENT_INIT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d531b705ef2d323aa4f00a446a84d2d86eed27" translate="yes" xml:space="preserve">
          <source>\ActiveQuery __construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb3c7e6f5de2e47b22bd6bf694cf445c1b64125" translate="yes" xml:space="preserve">
          <source>\ActiveQuery alias()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46ae3063887d3429991d9138cde847e563fd6a1" translate="yes" xml:space="preserve">
          <source>\ActiveQuery all()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d9d87b3bf838b15459e4537395c12ebde9e8ef" translate="yes" xml:space="preserve">
          <source>\ActiveQuery andOnCondition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ab281783fe56683553d6d26d3492eb479c1bc3" translate="yes" xml:space="preserve">
          <source>\ActiveQuery average()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f9af8f6054ff2a4c845c1fb6fa50f285df1b76" translate="yes" xml:space="preserve">
          <source>\ActiveQuery callSnippets()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893138f42fac1ee895a7098cacea0389b65ecaee" translate="yes" xml:space="preserve">
          <source>\ActiveQuery column()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8a366c5c92c892e2da424a4242ca9622ac8b63" translate="yes" xml:space="preserve">
          <source>\ActiveQuery count()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fac57b6203842e835d6f871616fd62b1ecb423" translate="yes" xml:space="preserve">
          <source>\ActiveQuery createCommand()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ed11985764f119bccad025d15d8e9369d1c1c5" translate="yes" xml:space="preserve">
          <source>\ActiveQuery defaultConnection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d4379a6724cc122c7951bd92aa04bf6171f418" translate="yes" xml:space="preserve">
          <source>\ActiveQuery executeScript()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e310f6fc0fbfd286d1f19a954584e25ef231940c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82983da03c444c733ffefc504449920a1bd7de2" translate="yes" xml:space="preserve">
          <source>\ActiveQuery fetchSnippetSourceFromModels()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3d91f7e47344342962fcf564ecea88fcd42345" translate="yes" xml:space="preserve">
          <source>\ActiveQuery getCollection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a289aaf78bf49d966566f9b4daec8dd4585ed6a" translate="yes" xml:space="preserve">
          <source>\ActiveQuery getPrimaryTableName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f941a35c476b55122358d582b8c4cc9e15294b2" translate="yes" xml:space="preserve">
          <source>\ActiveQuery getTablesUsedInFrom()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4130b98f5515804ed8460d4effe3e4a4bbd420f8" translate="yes" xml:space="preserve">
          <source>\ActiveQuery init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec30478ddeddafd52a9562ae2d0fa900a0d9b0e" translate="yes" xml:space="preserve">
          <source>\ActiveQuery innerJoinWith()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68707267635a36b22f4fb59f02fbed311f6c040" translate="yes" xml:space="preserve">
          <source>\ActiveQuery joinWith()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a722b29b51140d3300b11c52bc03ae212d998fc8" translate="yes" xml:space="preserve">
          <source>\ActiveQuery max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e05f51a5f862567495d62f1a6cf706d2025780" translate="yes" xml:space="preserve">
          <source>\ActiveQuery min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ef67fbd4919c84f6ad90390ebe7b4c38980f80" translate="yes" xml:space="preserve">
          <source>\ActiveQuery modify()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780ec1f1a40d9ad935640e1dfbc423088527b673" translate="yes" xml:space="preserve">
          <source>\ActiveQuery onCondition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66db28e8cc41f16c7ec8a6cb8cc0c2731517bd0" translate="yes" xml:space="preserve">
          <source>\ActiveQuery one()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ceeaeaa57478741bd2d78828f86102226ef9415" translate="yes" xml:space="preserve">
          <source>\ActiveQuery orOnCondition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30a4bde9be774422bd6b799b3a2dd1ce7573fc3" translate="yes" xml:space="preserve">
          <source>\ActiveQuery populate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bd80cf641f12d1c97b5c7fd7410960a343a09e" translate="yes" xml:space="preserve">
          <source>\ActiveQuery prepare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c776eed2cb1a7ff47bd41b57affea713c166c1" translate="yes" xml:space="preserve">
          <source>\ActiveQuery queryScalar()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7517d42eb7594cdf888195c9fad7004735098c6c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery scalar()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5298cc33207c5d7acadc7d8dc07fcfbcfa174c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery search()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cbb9d6c105386033b39044c3f830aa63bd4c0e" translate="yes" xml:space="preserve">
          <source>\ActiveQuery snippetByModel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf17d003d0b4684e30fc1736ec3cc3acd94dc6d" translate="yes" xml:space="preserve">
          <source>\ActiveQuery sum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840fb042ff76437b90c84ad03f6b614ac82ead8c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery viaTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b6f2d5e5b4a5e6287956719919de477ab11920" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface</source>
          <target state="translated">\ActiveQueryInterface</target>
        </trans-unit>
        <trans-unit id="2ca84ce630f6e06a9c54c38e48a205d45e1df957" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface asArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7e33162d769f484e1ded379d03c6591d6f504c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface findFor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29eb2a551c034f479d82fc86dc46e0a426887cd0" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface indexBy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b2fa38bc1220d53bb735095e61d83efdda3e3c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface one()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303a2ce02ba893101410f8be475c212d0122cb52" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface via()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd333836328838758cf82dbfcfcf3d013501ee1" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface with()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43285759272501e87c729b2f3c623fdf837cde3" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait</source>
          <target state="translated">\ActiveQueryTrait</target>
        </trans-unit>
        <trans-unit id="7def933b25ffeef161a159285d736253cc04085c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait $asArray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef39dd1e7d6f73aa8a4a1bb1933deb1e59900d5" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait $modelClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7971f6eca2584fd7636a3a269908beafd2541f82" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait $with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551a232665eb7624999eefd6d644d5354080ed1c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait asArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2e38e5dd042580fd0932c46fc714bd14d37993" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait createModels()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5512cd88eb1b244c58eeca2810b87ed028e3dda" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait findWith()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51f8f6f6ddf7f7a8105643bf12b2631e4cc1ec6" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait with()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e709bee0215a9eef98c1d65622903136dadbed1c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord</source>
          <target state="translated">\ActiveRecord</target>
        </trans-unit>
        <trans-unit id="78543b48ca4c163f752f3638903958b3e0729a31" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $explanation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfaf3691730ad1219e3a9386512817527ada815" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $highlight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5490b1758d8823cd98b108a904c1ebdab0f8a6a4" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $oldPrimaryKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e2e2fe986e6de448bdaaad998e951e842820c1" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $primaryKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5032bdb9a7975bf1bdee19e3aa367c164635fbe0" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $score</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a13357ce0d681453a050ce15cb7876d19ff350" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $snippet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd987ebe4a3d6d1432382069ac69a4768f785497" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $snippetSource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9941a28a9a1cc6f395def36e5baaedf7ada37d" translate="yes" xml:space="preserve">
          <source>\ActiveRecord arrayAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038b386f153c28bdbcaf249e5081852c0179d2bd" translate="yes" xml:space="preserve">
          <source>\ActiveRecord attributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5782b013b81e7e48902e817c65bb936e3c2473" translate="yes" xml:space="preserve">
          <source>\ActiveRecord buildKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d158573b19b717c69d92bd2757c061627ff026" translate="yes" xml:space="preserve">
          <source>\ActiveRecord callKeywords()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e202a3867b7a1815a57d6ddc5ab436e9e0d2a12" translate="yes" xml:space="preserve">
          <source>\ActiveRecord callSnippets()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59afd16fd17e9ff11e891f47b9d26f7c4558eed" translate="yes" xml:space="preserve">
          <source>\ActiveRecord collectionName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252f56be99e6756b5ba27e36176ca7c3ca20254c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord delete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c5bd851b6595a7a2972c2556a6f2fc0d7ee670" translate="yes" xml:space="preserve">
          <source>\ActiveRecord deleteAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6967a0c9660fbd33cf9f428f69f26cf943078b" translate="yes" xml:space="preserve">
          <source>\ActiveRecord deleteInternal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35de0f309a1ffe031296ff3fb119b1a0e8edcf61" translate="yes" xml:space="preserve">
          <source>\ActiveRecord equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d91e2447b6ae242f97ffc4ff51a09cc6bf5dc88" translate="yes" xml:space="preserve">
          <source>\ActiveRecord fetchSnippet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd62b6edcbbfa2e881b341082dbb1d52c85b4ed7" translate="yes" xml:space="preserve">
          <source>\ActiveRecord find()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebefc730e9aa4abfe371b7cea753de40607afa41" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a496fb839b7b38e41323fa638b24b92dd30750" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findByCondition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab71a0cf07a4af4104fdb7f6ea00fef6e6f1774f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findBySql()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d7fd5853767ca5a3c912b3f1c40371b09727aa" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findOne()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebf15f0569b1ee8bd38cc310f4c84842c88521f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e862dc8537887b4ea4ce1f16d7aa851a3331d7bd" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getCollection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efe5ac5c80248e844497612b315300a8931d74c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getDb()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48519eb50c48f9365f88eab38165ce76f91727ef" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getExplanation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b2169c004e871a48138ad8bbd7a5abfee73ae9" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getHighlight()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e465834c5c26feb2d872cdbce01cc8105d306bf8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getIndexSchema()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885432607f507d5dc3623c3c357166686aefcbec" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getOldPrimaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265287d218160f2fe8faf493bb3cb1615db58fb6" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getPrimaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b033e5cf3fc35a02204d3a35168a14e7a5414c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getScore()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3945670fa9961037a2c507a61295afeb8c075a8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getSnippet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7997f1b28863aff8e7062dec606b2fde24f889" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getSnippetSource()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a22108dc8f2159d88a56aaee75295b15fe17a5" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getTableSchema()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f781cc215052c0113e49c1c608f949123a16041" translate="yes" xml:space="preserve">
          <source>\ActiveRecord index()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce65d0fd997a1b13a31d0467f060182c56d72a8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord indexName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd908a103e30b8c68e4096ce267b7b0ee298e1e4" translate="yes" xml:space="preserve">
          <source>\ActiveRecord insert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bd1eb8728fd6cc9ac03467643f83ce45f06f55" translate="yes" xml:space="preserve">
          <source>\ActiveRecord insertInternal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238d68b57498b5fb7812d61c69e2fb3c95350abe" translate="yes" xml:space="preserve">
          <source>\ActiveRecord instantiate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a4d756840628b6013dc94a65fa90625f76e064" translate="yes" xml:space="preserve">
          <source>\ActiveRecord isTransactional()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8ab42d36ca7d68659b08522006deb3599a8f5e" translate="yes" xml:space="preserve">
          <source>\ActiveRecord keyPrefix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31448a6aa3c2b29c37d3c12983a236767a4ef28" translate="yes" xml:space="preserve">
          <source>\ActiveRecord loadDefaultValues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fbcdaa4a311630e55b3f2307a4d56de8b2a9f5" translate="yes" xml:space="preserve">
          <source>\ActiveRecord mget()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41437fc47d4e7e760da677c51ec82cc51ddf8c0d" translate="yes" xml:space="preserve">
          <source>\ActiveRecord optimisticLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3db41849b69f4dd503b07f2e20db9375f52ca3" translate="yes" xml:space="preserve">
          <source>\ActiveRecord populateRecord()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ab79fdaa6fa3ce5cb545059c38c61392216fd8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord primaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ba5ceaae177a15c15940a7428e3ba5a0e7ab5f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord primaryKeysByCondition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7170030fa3de7cdfceef3f5a7452410207c368" translate="yes" xml:space="preserve">
          <source>\ActiveRecord setPrimaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbff2898c943687cd09074ae95777a8afeb85970" translate="yes" xml:space="preserve">
          <source>\ActiveRecord setSnippet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29ada4a39677cd5380f4a2ce5556edebae8b539" translate="yes" xml:space="preserve">
          <source>\ActiveRecord tableName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79adc895520603efc96ad1a96af49ba1573c21b" translate="yes" xml:space="preserve">
          <source>\ActiveRecord toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0baa51e984c8e0aeacfda1d3623430ab9050ffe" translate="yes" xml:space="preserve">
          <source>\ActiveRecord transactions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614a9d1251d0db8d2d3abf7e80459b80ab32157d" translate="yes" xml:space="preserve">
          <source>\ActiveRecord type()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cae26838ba94849e9f77b120f3b55521083e55" translate="yes" xml:space="preserve">
          <source>\ActiveRecord unlinkAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc7a640ee57a7dca78b532036f1f6a0d942700e" translate="yes" xml:space="preserve">
          <source>\ActiveRecord update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c978be1b0b119e1c6e3bf2f5c83182dc9614eda2" translate="yes" xml:space="preserve">
          <source>\ActiveRecord updateAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f1c020d37cde417592e3cd4f35a944c6df677f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord updateAllCounters()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69079575176621231312e60d5bbd7bada99f3e33" translate="yes" xml:space="preserve">
          <source>\ActiveRecord updateInternal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca51b3097c11e2c62e9ee15fbd4d46c08b4bbcb" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface</source>
          <target state="translated">\ActiveRecordInterface</target>
        </trans-unit>
        <trans-unit id="ff352bd367202eabc65abf5620b076d09b255de7" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface attributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720df21a18e16e6c135e5e2f31ecf819195c8d35" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface delete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df605179ed323cfa9d3cc01b842d31aeb6f1969" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface deleteAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13456027b814107ec320084700de03598d42abc" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79916814fa47a72ec94926c8825d15cb69105431" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface find()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e2990cf8d11958131629b3759dddbcf037d5c1" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface findAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66478aedd442ffba0ae3ba320a265324f4355be2" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface findOne()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4e981982998488362ca3a9fc756d33e790e662" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2990d48d0b30ab75e3608dce5b7cefdc9007ec93" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getDb()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d972e68e87df05b64ecaf11e51035be16fd073" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getIsNewRecord()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90436a83ca11709cf0906b5b80d4624721333e7" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getOldPrimaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9827e98996fce645ffd273220a5092a9f5005e6b" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getPrimaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4036739cdcc2c3891e6996dab20f8eed2d972f96" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getRelation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89042ac9e830a74013eb6f8ea0085486b79fb35" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface hasAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd6fb33cc0e9cc44ff5b773335c047df3a4200e" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface insert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5148cc266970a4139bbd821065dc731d3b57f2" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface isPrimaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a781526cbad7ef6bc2543fb157dafe81c29f9ec2" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface link()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768d5f148ec133222610a95a24d8f9e175f1e1cc" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface populateRelation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd26eac2fc67f9face90d7c38fdaee67ad322acb" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface primaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf4110be164abecce92ae0045686307190de145" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f8ab987c92f0d2b2c29b504e140ea73a61f6d8" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface setAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045665fa5d86c6cfee924321bf7f555fb981742d" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface unlink()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2beb3fd187a2328a99304bc1c9ac05e39669e6ca" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dec7e60f266a2e62c5313ff8f3e92cf08deb010" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface updateAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfb127896a41a488d46d22d9193635cb4acb3bb" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait</source>
          <target state="translated">\ActiveRelationTrait</target>
        </trans-unit>
        <trans-unit id="73a4fc3b602ddd52b549a2de5b348de48b4e50f7" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $inverseOf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feca4c9f24ae9f4f8ce0295692c591167c392985" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ee72f8e2d11df64aacd74a8e721a5409ab02e0" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $multiple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3862c79e0e7aed43d72972cc1f5ae657e41f5ae" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $primaryModel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc846139b31d26804ad036514250df882dfbbfdb" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $via</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb4c44009ae9e37a40eddc0346bf623988cc49b" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait __clone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f71600a4b96342dce3fdcdcab9fab53cdcd0a0" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait findFor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9a053f4a0beda19daaff9e97a843623538f131" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait inverseOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68c7406c7bfd157770f24d7cdf6b512ef7f5b6c" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait populateRelation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196e07a651b255f92981398697ecedddfd3e5b0b" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait via()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4257f8e52daf9f039382d7a727f2b6c7dde12ea" translate="yes" xml:space="preserve">
          <source>\AfterSaveEvent</source>
          <target state="translated">\AfterSaveEvent</target>
        </trans-unit>
        <trans-unit id="606223a16970d6b5d706a4eccc01c6fe1814bbb9" translate="yes" xml:space="preserve">
          <source>\AfterSaveEvent $changedAttributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8783f4623a6f06122d3f74d245bc1047608e74a" translate="yes" xml:space="preserve">
          <source>\Alert</source>
          <target state="translated">\Alert</target>
        </trans-unit>
        <trans-unit id="521230d1ac463b695161858c4581e94fabf27903" translate="yes" xml:space="preserve">
          <source>\Alert $body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a904c262289e38284fe37e50f847bfde6817b4" translate="yes" xml:space="preserve">
          <source>\Alert $closeButton</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2080a67aeb28690978008cd7d06fafc5147cf25" translate="yes" xml:space="preserve">
          <source>\Alert init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ffe72f52090da5dd1d0538851e89a9e2fa089e" translate="yes" xml:space="preserve">
          <source>\Alert initOptions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23123818dd8d9773a25fa1b81a3efc269e8e6b81" translate="yes" xml:space="preserve">
          <source>\Alert renderBodyBegin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389ee8fa9e08a67146ef771c8597196857ff8c54" translate="yes" xml:space="preserve">
          <source>\Alert renderBodyEnd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b21987d97f8f0d693477d2f3ab8e8b3d4ee762" translate="yes" xml:space="preserve">
          <source>\Alert renderCloseButton()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1026b9f8229b19e2b233ebd30a8ad40a15432b5d" translate="yes" xml:space="preserve">
          <source>\Alert run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfd2cccc254dfc3cd21b44161003884f8104891" translate="yes" xml:space="preserve">
          <source>\ApcCache</source>
          <target state="translated">\ApcCache</target>
        </trans-unit>
        <trans-unit id="d87e438d5804f65e5b5fb86b950f22323ad7a2f6" translate="yes" xml:space="preserve">
          <source>\ApcCache $useApcu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e16a127829b03621bb9ca26a6a3e96084fa6e6" translate="yes" xml:space="preserve">
          <source>\ApcCache addValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103a4667aae10adfd0d0d5b198c07e64c2ce7938" translate="yes" xml:space="preserve">
          <source>\ApcCache addValues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c7a4611ca218e52b9122d3d5b1b73f08e2266b" translate="yes" xml:space="preserve">
          <source>\ApcCache deleteValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed33671a76489b9ef626eb815273d127ac98433" translate="yes" xml:space="preserve">
          <source>\ApcCache exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b2bebd5697a1f9f95ffc431b362092ebbdd1c2" translate="yes" xml:space="preserve">
          <source>\ApcCache flushValues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2debc1bf4c4dfe8affd001ee70553af8824f368" translate="yes" xml:space="preserve">
          <source>\ApcCache getValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04c6f9516c962940b7c0095ffa39546adaf3d62" translate="yes" xml:space="preserve">
          <source>\ApcCache getValues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d381acd2b82fa97b5834203f63e1cb25ece2a9d" translate="yes" xml:space="preserve">
          <source>\ApcCache init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778c27488c979b731946102a56f3d3006610c7f0" translate="yes" xml:space="preserve">
          <source>\ApcCache setValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1a929dee8648fb292cc4647281dcf3cd50b893" translate="yes" xml:space="preserve">
          <source>\ApcCache setValues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a127e45ef9eb88e64fb98dccd88ce3804d1353" translate="yes" xml:space="preserve">
          <source>\Application</source>
          <target state="translated">\Application</target>
        </trans-unit>
        <trans-unit id="82dba748df6ac12603c3bdc697c9e85fe490d027" translate="yes" xml:space="preserve">
          <source>\Application $assetManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d408a460757e02742195ac182f91cc2fc26e71" translate="yes" xml:space="preserve">
          <source>\Application $authManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8fecfc8ac2506fa8fe320e8df15ec050eeb0d6" translate="yes" xml:space="preserve">
          <source>\Application $bootstrap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a616f803a69ab4e1f3f99c96ead7c4fcdac4781" translate="yes" xml:space="preserve">
          <source>\Application $cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23620f3f4d48b1f59a527403abd5db44797f4bf1" translate="yes" xml:space="preserve">
          <source>\Application $catchAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1c58198f28d8a5874cb305a6efa1252c03aad8" translate="yes" xml:space="preserve">
          <source>\Application $charset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5718a5f03cdf920eabae39838d7fcecb994e2247" translate="yes" xml:space="preserve">
          <source>\Application $container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520b156f5c6441216493d761a4592d3bdef4fd2c" translate="yes" xml:space="preserve">
          <source>\Application $controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7764d5250180f542d912ebcfb141da29badaf7f5" translate="yes" xml:space="preserve">
          <source>\Application $controllerNamespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8390b6218fd133d3d338e53402bf301b3adcfb1" translate="yes" xml:space="preserve">
          <source>\Application $db</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100f4e7b7fc7c40f7f690d974a3a8108658fef53" translate="yes" xml:space="preserve">
          <source>\Application $defaultRoute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6be04caafb55d9cd0cb6851b56a30c72cfa7af1" translate="yes" xml:space="preserve">
          <source>\Application $enableCoreCommands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4804f4601ed84f9d570c2778a0f3514f38e86c8a" translate="yes" xml:space="preserve">
          <source>\Application $errorHandler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b573c17f33b1269da9299ff28f4bc44ec0f3fe8" translate="yes" xml:space="preserve">
          <source>\Application $extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec2f4cf83edac8c1b889ab377de71f643be3a78" translate="yes" xml:space="preserve">
          <source>\Application $formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60c5559d6d26cf329fe7336b33313c53941423a" translate="yes" xml:space="preserve">
          <source>\Application $homeUrl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4f3728cdba7b71f9325819002b5f468dd1d5a7" translate="yes" xml:space="preserve">
          <source>\Application $i18n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050f964dc65b182ee51d55f645bb761fc350771e" translate="yes" xml:space="preserve">
          <source>\Application $language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c0b4ffd05b4401c8dadd5519b2c3036c850277" translate="yes" xml:space="preserve">
          <source>\Application $layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c553922eab323181a8979329b9afb6d05246cb" translate="yes" xml:space="preserve">
          <source>\Application $loadedModules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc6d89106f1d7a6688e4db830b8686f9c995163" translate="yes" xml:space="preserve">
          <source>\Application $log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22519a2cf6d111a96a0bb770f1e7dbc6bbbc13b7" translate="yes" xml:space="preserve">
          <source>\Application $mailer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84870e4eaf1135b9eb14dc5dbe05e251079a84f8" translate="yes" xml:space="preserve">
          <source>\Application $name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc43ce67ef3b77120c579f00f2e51fdca0ee88df" translate="yes" xml:space="preserve">
          <source>\Application $request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f608709ecd563b16820de1c20292e9d5582463ec" translate="yes" xml:space="preserve">
          <source>\Application $requestedAction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9e2cc8a18f8e2f9b0d6df30da23b22184ecf52" translate="yes" xml:space="preserve">
          <source>\Application $requestedParams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9998659392688af42b16f2f9ecc976783561363" translate="yes" xml:space="preserve">
          <source>\Application $requestedRoute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba06cd7ac33cee50e34c74329875d6d54ee66f20" translate="yes" xml:space="preserve">
          <source>\Application $response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e2d0774b9664aa92dc1608f287059131217ba6" translate="yes" xml:space="preserve">
          <source>\Application $runtimePath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805b5b691583a5fa6b408a7948d50385bdf2c2e4" translate="yes" xml:space="preserve">
          <source>\Application $security</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269047447f74a697cc9bcbc969d86a5ec2d87a05" translate="yes" xml:space="preserve">
          <source>\Application $session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a0cc01a86ec350c2a6cd9e3024a67dc614d0f4" translate="yes" xml:space="preserve">
          <source>\Application $sourceLanguage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac192e00ee9e7680f2b0ad5ecdeb73df847d6645" translate="yes" xml:space="preserve">
          <source>\Application $state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb1c7bcc8b1ce01a3bb519591d070b922f57b72" translate="yes" xml:space="preserve">
          <source>\Application $timeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56d43de61e9c1a8a1b79934b226234830430424" translate="yes" xml:space="preserve">
          <source>\Application $uniqueId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c161bd7e23400d4b6c3b533d960850e303e6cd9" translate="yes" xml:space="preserve">
          <source>\Application $urlManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e2ecc797c6ec402ab446e6f3357a98102c318b" translate="yes" xml:space="preserve">
          <source>\Application $user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab96e5fabe0d6da1579e3ae4e5f0c459e0f8124" translate="yes" xml:space="preserve">
          <source>\Application $vendorPath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c080ed574fff38bd5252aee867b79c5cb43a9b1" translate="yes" xml:space="preserve">
          <source>\Application $view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9081251f3383d478a5a1078cdf6362d76fa5b2ac" translate="yes" xml:space="preserve">
          <source>\Application EVENT_AFTER_REQUEST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a9d7c0fbce9d9ee9c63db02d3444686857df3b" translate="yes" xml:space="preserve">
          <source>\Application EVENT_BEFORE_REQUEST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e575773828d49c4f5d1ac94f605b07cf4a2ec8" translate="yes" xml:space="preserve">
          <source>\Application __construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc0f781d34e45f395bccb0427245ffbfae7347c" translate="yes" xml:space="preserve">
          <source>\Application bootstrap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7304939a8556be63351c7f39a61b7e5c27e51c61" translate="yes" xml:space="preserve">
          <source>\Application coreCommands()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53fdb6f32a3f97096447bcb1da10edc677d6af2" translate="yes" xml:space="preserve">
          <source>\Application coreComponents()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8400b2c849c777c496b571f31037d6a9b71ff1df" translate="yes" xml:space="preserve">
          <source>\Application end()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab82f71e680c94d7ad318266af6ddb4016ebec75" translate="yes" xml:space="preserve">
          <source>\Application getAssetManager()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3971226cf3ee985a2a51ccdff43cf26bacc28db0" translate="yes" xml:space="preserve">
          <source>\Application getAuthManager()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5575af4b10113839187fc99ddaeacdccfc5153" translate="yes" xml:space="preserve">
          <source>\Application getCache()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63afcd3108ba9e9f0b8dcc72b32f309a12bab6f" translate="yes" xml:space="preserve">
          <source>\Application getDb()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7778dffe5da2626bc2aa8d43ba46a6fae042cd40" translate="yes" xml:space="preserve">
          <source>\Application getErrorHandler()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf53aee13ce9a5a913d3e6ad7dd653437777bc9c" translate="yes" xml:space="preserve">
          <source>\Application getFormatter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f4221ee19580e764de4b27100fd07eb0d16fa8" translate="yes" xml:space="preserve">
          <source>\Application getHomeUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8414e570f411395d189b3edfde07016e800d16e8" translate="yes" xml:space="preserve">
          <source>\Application getI18n()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02684c75f82896a37c0ff57afec79c14e2a025c" translate="yes" xml:space="preserve">
          <source>\Application getLog()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289c64b5653fe368a65d97e2b26cf49636636abc" translate="yes" xml:space="preserve">
          <source>\Application getMailer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3602cc40e2a6cc5217a5d37f3cad2517fe2e0095" translate="yes" xml:space="preserve">
          <source>\Application getRequest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2332f2b71326acc30ae47b0c61cb48f9600cae3" translate="yes" xml:space="preserve">
          <source>\Application getResponse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d5242798255e4e2874657288aa4818da755655" translate="yes" xml:space="preserve">
          <source>\Application getRuntimePath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef1c57f7f3683dc42c0695f4f87a0d8982e2cbd" translate="yes" xml:space="preserve">
          <source>\Application getSecurity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278958733edea6512d41a3272cc3cf8eef5291d6" translate="yes" xml:space="preserve">
          <source>\Application getSession()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d498d01b29e09b954c92aeca34bc592624c7ae40" translate="yes" xml:space="preserve">
          <source>\Application getTimeZone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28876be1137aa29d1b0cab3043dfa5ab4933482e" translate="yes" xml:space="preserve">
          <source>\Application getUniqueId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09a82d2de02fda2870cacbd5c40c5aaf1b92f2c" translate="yes" xml:space="preserve">
          <source>\Application getUrlManager()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5ba77d7a060e978a8f4b33f1d29c8fd286a09e" translate="yes" xml:space="preserve">
          <source>\Application getUser()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4deb298bc4f79b0e6ba5cb5e2bf5949135e06b54" translate="yes" xml:space="preserve">
          <source>\Application getVendorPath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f13161b33dda9d6063539908d03f01cbf6a0b13" translate="yes" xml:space="preserve">
          <source>\Application getView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b12245a760cec9e69f16ea2f03cbf5a69e7718b" translate="yes" xml:space="preserve">
          <source>\Application handleRequest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef473f8f1ffbee4926fb87922e7bfad746e32ba5" translate="yes" xml:space="preserve">
          <source>\Application init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a73954afae5381af89cbbf6d263f97dec480a9b" translate="yes" xml:space="preserve">
          <source>\Application loadConfig()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0613f4cf4b9ec7318835f6cb9db1078e52f627a" translate="yes" xml:space="preserve">
          <source>\Application preInit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef519ba125bc8dfa962d7e59bae5ca96d00f263" translate="yes" xml:space="preserve">
          <source>\Application registerErrorHandler()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481543a788e52ebf359c7bbe670c9d7be48b1f63" translate="yes" xml:space="preserve">
          <source>\Application run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2dd38f054bbf67bcbf6911e7cf0e9bcd4ac06c" translate="yes" xml:space="preserve">
          <source>\Application runAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7463aeef9f292116f6c0ba10d8e355cc6cdeaa7f" translate="yes" xml:space="preserve">
          <source>\Application setBasePath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c93de1a383979425b9c281073f424891b1f49f8" translate="yes" xml:space="preserve">
          <source>\Application setContainer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc98e46e13f0acc16d98c847a4568f25852bc199" translate="yes" xml:space="preserve">
          <source>\Application setHomeUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1567a9c34576414c1e29ad62c6e8d5502546b033" translate="yes" xml:space="preserve">
          <source>\Application setRuntimePath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98496eb51560ba15893a302a42ce08aeb6ad78cb" translate="yes" xml:space="preserve">
          <source>\Application setTimeZone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498abe46872b7acbb6325fea634e91a5bfa7fb28" translate="yes" xml:space="preserve">
          <source>\Application setVendorPath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c125b4a49a4f964287e8d54d384286e07191582e" translate="yes" xml:space="preserve">
          <source>\ArrayAccessTrait</source>
          <target state="translated">\ArrayAccessTrait</target>
        </trans-unit>
        <trans-unit id="9857d0eb786d2ba3fe92fef377f906a7151ab483" translate="yes" xml:space="preserve">
          <source>\ArrayAccessTrait count()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030eb492f34024cce154856d0fc715526bc46513" translate="yes" xml:space="preserve">
          <source>\ArrayAccessTrait getIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e25fc4797654f800a4cf67bd77f77a8202f206a" translate="yes" xml:space="preserve">
          <source>\ArrayAccessTrait offsetExists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71cdb2cef8840e4f633431c2731304bbcc3b430" translate="yes" xml:space="preserve">
          <source>\ArrayAccessTrait offsetGet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed5ed64dfe3d3d19853f8d17ef397f13148d1f8" translate="yes" xml:space="preserve">
          <source>\ArrayAccessTrait offsetSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868c607396a96f417496c6b1470981ba45fc99a6" translate="yes" xml:space="preserve">
          <source>\ArrayAccessTrait offsetUnset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cdaaa786d63142b9c3d7e4a9316e025ddadd73" translate="yes" xml:space="preserve">
          <source>\ArrayCache</source>
          <target state="translated">\ArrayCache</target>
        </trans-unit>
        <trans-unit id="cee122d8cd5dd6c3c434760ef1c5b90f87e0790b" translate="yes" xml:space="preserve">
          <source>\ArrayCache addValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f241c4700e8511c9e4211fed8d1b41228012fa16" translate="yes" xml:space="preserve">
          <source>\ArrayCache deleteValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d35e836f7e6e40ccd3cddf99f723d989de01133" translate="yes" xml:space="preserve">
          <source>\ArrayCache exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba78906d5000cb9860c608acd5e35b83c3b00705" translate="yes" xml:space="preserve">
          <source>\ArrayCache flushValues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc432bf45797c1995fa6fbe6732808707cd60f0d" translate="yes" xml:space="preserve">
          <source>\ArrayCache getValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac31e41eb5a00f21f5eb8c8d54fabf5c0308954a" translate="yes" xml:space="preserve">
          <source>\ArrayCache setValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42acce5dcdae2dfe74433f74ac23141cfadc69ec" translate="yes" xml:space="preserve">
          <source>\ArrayDataProvider</source>
          <target state="translated">\ArrayDataProvider</target>
        </trans-unit>
        <trans-unit id="0e49040f4fd9426d85e72c6b36a6f534bdf0af37" translate="yes" xml:space="preserve">
          <source>\ArrayDataProvider $allModels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1240937ba3c5ad0528df8908c04185efbd0eb955" translate="yes" xml:space="preserve">
          <source>\ArrayDataProvider $key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153cb679e3a4eb8cc859a07972dec14ca4bed371" translate="yes" xml:space="preserve">
          <source>\ArrayDataProvider $modelClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b82597eb687f1b884e78fc7a4ed6c93aeffb551" translate="yes" xml:space="preserve">
          <source>\ArrayDataProvider prepareKeys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8872873c36ece0b87cd35613826af64e7eea2489" translate="yes" xml:space="preserve">
          <source>\ArrayDataProvider prepareModels()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f64170a2ee78e2ca7c942573a06de0cdb8fa796" translate="yes" xml:space="preserve">
          <source>\ArrayDataProvider prepareTotalCount()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fc15398888abe88c082677f53b766bbf40a288" translate="yes" xml:space="preserve">
          <source>\ArrayDataProvider sortModels()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6bf86f0e4e161073124c59296ca1c339e9c0c9" translate="yes" xml:space="preserve">
          <source>\ArrayFixture</source>
          <target state="translated">\ArrayFixture</target>
        </trans-unit>
        <trans-unit id="1d5c2bd5519bc2a370b76a2b22796de3c158360b" translate="yes" xml:space="preserve">
          <source>\ArrayFixture $data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca80b2ec9e146d9a15c8638b145fdbbed9470d0" translate="yes" xml:space="preserve">
          <source>\ArrayFixture $dataFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbb613bde2ce95ad59553dea5389ca99ab933f1" translate="yes" xml:space="preserve">
          <source>\ArrayFixture getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f42ebdc454ca5068eeff87fc519aa9501e1b6b" translate="yes" xml:space="preserve">
          <source>\ArrayFixture load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8edb1c687e87086481088b6dd047a4a4629ed0" translate="yes" xml:space="preserve">
          <source>\ArrayFixture unload()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3e906fb23250094717d086eac2b226eeabb6f6" translate="yes" xml:space="preserve">
          <source>\ArrayHelper</source>
          <target state="translated">\ArrayHelper</target>
        </trans-unit>
        <trans-unit id="430c4c560dbd018ea86816407bb54c4155192366" translate="yes" xml:space="preserve">
          <source>\Arrayable</source>
          <target state="translated">\Arrayable</target>
        </trans-unit>
        <trans-unit id="df9b09b2afe715c96838f610c0b4fcff2dbe5aaa" translate="yes" xml:space="preserve">
          <source>\Arrayable extraFields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af71024744005fe6fa9f3afc5d5d2799cbccba5" translate="yes" xml:space="preserve">
          <source>\Arrayable fields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83eb3af71510bb0043990159f6e3a3ea8a606f9b" translate="yes" xml:space="preserve">
          <source>\Arrayable toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368ecc5fbbf077f1a9c875f5dfad45771dff9bfc" translate="yes" xml:space="preserve">
          <source>\ArrayableTrait</source>
          <target state="translated">\ArrayableTrait</target>
        </trans-unit>
        <trans-unit id="53fc3a4272d4261f00c117688dc2c549cdb93d26" translate="yes" xml:space="preserve">
          <source>\ArrayableTrait extraFields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0247bbe53f9c4875ffc255a6c8bb1af0752e774" translate="yes" xml:space="preserve">
          <source>\ArrayableTrait fields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09256ec3de019f782daaeccffb5c9e9840245877" translate="yes" xml:space="preserve">
          <source>\ArrayableTrait resolveFields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53384e5701af29413c0a85bd40c6b820b08218c" translate="yes" xml:space="preserve">
          <source>\ArrayableTrait toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e196b3107a3b458344c0491198fcbb53aca48393" translate="yes" xml:space="preserve">
          <source>\AssetBundle</source>
          <target state="translated">\AssetBundle</target>
        </trans-unit>
        <trans-unit id="8235d8a84b1550d03dcbc647caaf4e84d5b9f9e5" translate="yes" xml:space="preserve">
          <source>\AssetBundle $basePath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0f4923a9b39bcde00b7e37c49cde2a0b6bc1e8" translate="yes" xml:space="preserve">
          <source>\AssetBundle $baseUrl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e9b6ac219caa39dab7a046b00e88202b9cba8c" translate="yes" xml:space="preserve">
          <source>\AssetBundle $css</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9309381d0a6a893e5d0d37214c3b796f0af8c8" translate="yes" xml:space="preserve">
          <source>\AssetBundle $cssOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c931d2c445b60b1154595d60a38eb926e226eb" translate="yes" xml:space="preserve">
          <source>\AssetBundle $depends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9426ee0308602f4f0cf79e5e705ac65f7a7cc64c" translate="yes" xml:space="preserve">
          <source>\AssetBundle $js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6283ffa8ce28fe21afc85e7c08be9d396883259b" translate="yes" xml:space="preserve">
          <source>\AssetBundle $jsOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb046153777cb255c90e0dfc34f2339f92e99f9c" translate="yes" xml:space="preserve">
          <source>\AssetBundle $publishOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c2d8b5cdd0895902aeced7bd48575d71b2bd33" translate="yes" xml:space="preserve">
          <source>\AssetBundle $sourcePath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666d777b44a64888cadbca80b7524c0579f754eb" translate="yes" xml:space="preserve">
          <source>\AssetBundle init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e6cbd8f0fad4de5152a06c632c212abc7d9fea" translate="yes" xml:space="preserve">
          <source>\AssetBundle publish()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e136818a45a35a9fc7ba2ff85e81c3dff26bb0b" translate="yes" xml:space="preserve">
          <source>\AssetBundle register()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee07f13f724f9b58ac1308b9a1a35e60b29e6b93" translate="yes" xml:space="preserve">
          <source>\AssetBundle registerAssetFiles()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b401aac4e8c4b55bf87377340f311f16c40bd944" translate="yes" xml:space="preserve">
          <source>\AssetConverter</source>
          <target state="translated">\AssetConverter</target>
        </trans-unit>
        <trans-unit id="031eea793df58ce637f31ac9bb0952046192dfe5" translate="yes" xml:space="preserve">
          <source>\AssetConverter $commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaac53edb539b96206f1c3b3948df07d232f07ae" translate="yes" xml:space="preserve">
          <source>\AssetConverter $forceConvert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3346c03f7dfbf72f40bd196d2ff6e936f31fdbb" translate="yes" xml:space="preserve">
          <source>\AssetConverter convert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c7d64b523eba35cbfd8f90bc186f26af0bfbb7" translate="yes" xml:space="preserve">
          <source>\AssetConverter runCommand()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187797505b3a96f420a6dd0247e01bf64cc97f71" translate="yes" xml:space="preserve">
          <source>\AssetConverterInterface</source>
          <target state="translated">\AssetConverterInterface</target>
        </trans-unit>
        <trans-unit id="370e58b9ff0cad5107fc0130e6d71e983f5aab19" translate="yes" xml:space="preserve">
          <source>\AssetConverterInterface convert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295f8326772f5f58a48c761081b50719ec7de56e" translate="yes" xml:space="preserve">
          <source>\AssetManager</source>
          <target state="translated">\AssetManager</target>
        </trans-unit>
        <trans-unit id="5e21d54752758f09d7fbce9b08c0076d2e101e38" translate="yes" xml:space="preserve">
          <source>\AssetManager $afterCopy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83eb477a7517dcda96f00585e2f6de0268661607" translate="yes" xml:space="preserve">
          <source>\AssetManager $appendTimestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be31df48ef88eee83de2d06a829c105569be655" translate="yes" xml:space="preserve">
          <source>\AssetManager $assetMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09dffc7c14b4cabb14804f289979308876d01907" translate="yes" xml:space="preserve">
          <source>\AssetManager $basePath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb475fe4a3849e3c55dd123dbd5bd3eb0f8d787" translate="yes" xml:space="preserve">
          <source>\AssetManager $baseUrl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4fbd52fc8d888fa189b7be90b6490681f946e8" translate="yes" xml:space="preserve">
          <source>\AssetManager $beforeCopy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a718947f027019f96a205bc933d6657fb7467cb" translate="yes" xml:space="preserve">
          <source>\AssetManager $bundles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0deb24584ba72ebc27d00c6cf0f2cf7cb9b6f4" translate="yes" xml:space="preserve">
          <source>\AssetManager $converter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f2024e42fa42346bf13401fd390d2b43327bb8" translate="yes" xml:space="preserve">
          <source>\AssetManager $dirMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad8706c439b3ba8e845e0679333c92f10db537b" translate="yes" xml:space="preserve">
          <source>\AssetManager $fileMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f5be890f3274c5d8b2cecb80d70ed604aa950d" translate="yes" xml:space="preserve">
          <source>\AssetManager $forceCopy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81a3578680d5bab79d8ece1ecf1b7687f73f7cb" translate="yes" xml:space="preserve">
          <source>\AssetManager $hashCallback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ff536a0dedd3e673d9302888c9ea3bd58edbb6" translate="yes" xml:space="preserve">
          <source>\AssetManager $linkAssets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b891458a811587febd582bef5a4054923624ad7" translate="yes" xml:space="preserve">
          <source>\AssetManager getAssetPath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351a448fd997a3b75d69bba32a16ed6ea7638e61" translate="yes" xml:space="preserve">
          <source>\AssetManager getAssetUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3379a8b16c73073cb85ed0467c82587e5721e4" translate="yes" xml:space="preserve">
          <source>\AssetManager getBundle()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d758f291f3d3f179f4df4ec039b80635b145de" translate="yes" xml:space="preserve">
          <source>\AssetManager getConverter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64df5bf13e926e5a190cf7150c9ae23548ce5872" translate="yes" xml:space="preserve">
          <source>\AssetManager getPublishedPath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b00c9392b828d75872a76bd0dbd328b9e9e6ad" translate="yes" xml:space="preserve">
          <source>\AssetManager getPublishedUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27bb3eccaa75002357dac7e1fee2a1540d67521" translate="yes" xml:space="preserve">
          <source>\AssetManager hash()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16785787f807f54b5b83647f3c61735f9aee7392" translate="yes" xml:space="preserve">
          <source>\AssetManager init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6c71c69a8011397e6100f21ad103eba283b43b" translate="yes" xml:space="preserve">
          <source>\AssetManager loadBundle()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0f45e91faea3ad22a03775b05b7894c41c1d7f" translate="yes" xml:space="preserve">
          <source>\AssetManager loadDummyBundle()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeeb74179f5a4669752c1191cbaa92d5c42fe403" translate="yes" xml:space="preserve">
          <source>\AssetManager publish()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83971ebb2dca2b9e4051f55597359d7d5d29a778" translate="yes" xml:space="preserve">
          <source>\AssetManager publishDirectory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628f4c38c530657d9594d3fe61b8ec0f1d3aad0d" translate="yes" xml:space="preserve">
          <source>\AssetManager publishFile()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a97c2828eeaed27e1186c866e5abb71004dd940" translate="yes" xml:space="preserve">
          <source>\AssetManager resolveAsset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a0e312f4e85cde405a5e3367f514a22eec37a5" translate="yes" xml:space="preserve">
          <source>\AssetManager setConverter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31a4fb5da73b8a911db0fd7015ee02002663d58" translate="yes" xml:space="preserve">
          <source>\Assignment</source>
          <target state="translated">\Assignment</target>
        </trans-unit>
        <trans-unit id="f39a343ebb909d73d9a9caec1056196554887a73" translate="yes" xml:space="preserve">
          <source>\Assignment $createdAt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f744fce262faf4c05480fb8820db035399f89a16" translate="yes" xml:space="preserve">
          <source>\Assignment $roleName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44c0bef41cc2dfde843e0ca26087e8317535644" translate="yes" xml:space="preserve">
          <source>\Assignment $userId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64139aa5632dc8e9efd6c94da5ba3cd200d8f368" translate="yes" xml:space="preserve">
          <source>\AttributeBehavior</source>
          <target state="translated">\AttributeBehavior</target>
        </trans-unit>
        <trans-unit id="ebb3a638f68b7609deaef2a4085de4c7a8b2fd68" translate="yes" xml:space="preserve">
          <source>\AttributeBehavior $attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fdf4912056504db18d52585ef8050231461a31" translate="yes" xml:space="preserve">
          <source>\AttributeBehavior $preserveNonEmptyValues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b903ccbc18006aa11043620df37da8866d787a9c" translate="yes" xml:space="preserve">
          <source>\AttributeBehavior $skipUpdateOnClean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1d9bab1e57900a828d4eaa0696b6b1ad4ad756" translate="yes" xml:space="preserve">
          <source>\AttributeBehavior $value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e47527b407f2fa89c04efd3356f3533fef7da7" translate="yes" xml:space="preserve">
          <source>\AttributeBehavior evaluateAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4598b7955f3e1c7ab7c06d0244ccbe056a83738a" translate="yes" xml:space="preserve">
          <source>\AttributeBehavior events()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0225d5467f4b5c123a68dea714efcd6c9703a7" translate="yes" xml:space="preserve">
          <source>\AttributeBehavior getValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c3dcb6fb2821285191d013c3c2ff70a4fb87eb" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior</source>
          <target state="translated">\AttributeTypecastBehavior</target>
        </trans-unit>
        <trans-unit id="d32e72492e76f8917fc14b9c49514b73d99de6f5" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior $attributeTypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32e9a64e9c50c7f2cdaab28025b1f638b74f0f9" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior $owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609d71f377588b5ce7009882bd14795ec73e852c" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior $skipOnNull</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea58f2b9f2539904339487ce597f8f32ec2ecbf5" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior $typecastAfterFind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6184737808d7b26af84a2d755ef31820366ca40a" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior $typecastAfterValidate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3458a3d8a1e29ddab81134ba947e210b1d7f595d" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior $typecastBeforeSave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e619fde64ada0349780f4d5247306e033b1412" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior afterFind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe90cc3f47ab555f3719c4238a09bbcaf09b6662" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior afterValidate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3119db2e2b73d6d594e11715c040db6377cb65" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior attach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eddcea87da48f3c7f3574dfdb36faf465249f1e" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior beforeSave()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635d811fc7b1a7b12e7f7f2134b260674b1c0e6f" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior clearAutoDetectedAttributeTypes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae2e7bd68be6c7edf8863106a8a4740cea17b6d" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior detectAttributeTypes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79016e98f81523b53a33978b99cd517223ab43a" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior events()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b25c03ce5a9a0849d99f4973a5c61758e20e964" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior typecastAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbf7f971428c7abb374956a6eb85d2f522755ed" translate="yes" xml:space="preserve">
          <source>\AttributeTypecastBehavior typecastValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c31d78b6250af99ec4197a753bed826a2086df" translate="yes" xml:space="preserve">
          <source>\AuthAction</source>
          <target state="translated">\AuthAction</target>
        </trans-unit>
        <trans-unit id="199f7c57fd05f694a423b5461d1d15bbbc6e637f" translate="yes" xml:space="preserve">
          <source>\AuthAction $cancelUrl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e564583b6c83a731238ea694f312d22a2041695" translate="yes" xml:space="preserve">
          <source>\AuthAction $clientCollection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8587cf0a2bbd7570695363fb693d20e726c013" translate="yes" xml:space="preserve">
          <source>\AuthAction $clientIdGetParamName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47623ee7c33ec086aa2f4598b157d9939044b510" translate="yes" xml:space="preserve">
          <source>\AuthAction $redirectView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189d7aa81f29c1d353cac26e09ca04e32227b26f" translate="yes" xml:space="preserve">
          <source>\AuthAction $successCallback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aab55afb113461b64a051ce05aad784eeedeb46" translate="yes" xml:space="preserve">
          <source>\AuthAction $successUrl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17178207fbb83daf3684aa2ec0e37ddd909ceaf4" translate="yes" xml:space="preserve">
          <source>\AuthAction auth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb61f61cd5e0a3113793306da6b4388ced78a5f" translate="yes" xml:space="preserve">
          <source>\AuthAction authOAuth1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e6cc91713798a0b5dd1ec4a5bce55b475c117f" translate="yes" xml:space="preserve">
          <source>\AuthAction authOAuth2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5ee0cca7b64ec7e8ebcb9a0f9e819a805403b2" translate="yes" xml:space="preserve">
          <source>\AuthAction authOpenId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d44283cb9b984ba2e3dc64198bcbcde1b4e96e8" translate="yes" xml:space="preserve">
          <source>\AuthAction authSuccess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3dd2ccf2cb907c541ad8971a1c73a3d2f59d8c4" translate="yes" xml:space="preserve">
          <source>\AuthAction defaultCancelUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024ac80089405d2ed40d18899e0aa4edad369c5c" translate="yes" xml:space="preserve">
          <source>\AuthAction defaultSuccessUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990c3f82a03096bef457a7f9efe6fb21f9e9c265" translate="yes" xml:space="preserve">
          <source>\AuthAction getCancelUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7537b216dbedeed35b7721dbd06a7d90ba05eb" translate="yes" xml:space="preserve">
          <source>\AuthAction getSuccessUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd245b7e07b10c8c064ca3d55a1cc31ba7c0049e" translate="yes" xml:space="preserve">
          <source>\AuthAction redirect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3daef9f20fc041c40d1c9c9995da951bead3853" translate="yes" xml:space="preserve">
          <source>\AuthAction redirectCancel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5045fb25e777f471dd6c3bd5f9b40f64ca5a29c3" translate="yes" xml:space="preserve">
          <source>\AuthAction redirectSuccess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfceeb0efc4c30cf4db0a1761222bce2411aa0c" translate="yes" xml:space="preserve">
          <source>\AuthAction run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3035eee214320d76b37d94a030c3139316cd61" translate="yes" xml:space="preserve">
          <source>\AuthAction setCancelUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b943e308376af083e2a9d8e249d81142490ad2e" translate="yes" xml:space="preserve">
          <source>\AuthAction setSuccessUrl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bc1c4e64867c3227035e5bbc0b1ec48a7e5f19" translate="yes" xml:space="preserve">
          <source>\AutoComplete</source>
          <target state="translated">\AutoComplete</target>
        </trans-unit>
        <trans-unit id="8d9d496eb7685f7ebfa7baec2b6d207d22013b66" translate="yes" xml:space="preserve">
          <source>\AutoComplete renderWidget()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235a03503a6e19c6f3b5f8f791d86aaf6723b66a" translate="yes" xml:space="preserve">
          <source>\AutoComplete run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a63fc3815815912344518f89e9f6bcdef531e69" translate="yes" xml:space="preserve">
          <source>\BadRequestHttpException</source>
          <target state="translated">\BadRequestHttpException</target>
        </trans-unit>
        <trans-unit id="69aacab382a1db74737289d2f6a1448c0205aae9" translate="yes" xml:space="preserve">
          <source>\BadRequestHttpException __construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8172b513066acd5846717da3b8bf768d4744b0" translate="yes" xml:space="preserve">
          <source>\BaseActiveFixture</source>
          <target state="translated">\BaseActiveFixture</target>
        </trans-unit>
        <trans-unit id="27088af7e1c73ccadab763aaa006a2e5edda0bd2" translate="yes" xml:space="preserve">
          <source>\BaseActiveFixture $data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0fb593e6cd4b4eadd1d6fe34cbb441b75f5201" translate="yes" xml:space="preserve">
          <source>\BaseActiveFixture $dataFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37abd7bf0a5ab88b9818d7cdf2b4906a059a0b38" translate="yes" xml:space="preserve">
          <source>\BaseActiveFixture $modelClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e1fc19d040f2121e2df70278205667bf26f09b" translate="yes" xml:space="preserve">
          <source>\BaseActiveFixture getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d65a3342f963a27b6b32d9dfd55a700b7875bb2" translate="yes" xml:space="preserve">
          <source>\BaseActiveFixture getModel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5035484b69b18256f3613d24daf7eaa3362b463" translate="yes" xml:space="preserve">
          <source>\BaseActiveFixture load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9242d10610b0c57819e13af9e98d539c0ae877c6" translate="yes" xml:space="preserve">
          <source>\BaseActiveFixture unload()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9add3527c2fc0ad2f746036dbf1e89da5d2dd0ea" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord</source>
          <target state="translated">\BaseActiveRecord</target>
        </trans-unit>
        <trans-unit id="66a3554f8213905f0109b190db4b4e4efff39284" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord $dirtyAttributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97df420368d2e1fed25689ed6b3c104a7f41e0e1" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord $isNewRecord</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40efd84a57fdeb7b043e0bcfca53782fdc17a52e" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord $oldAttributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13571d205a9d407566a95fdcb4a517dc6b393fff" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord $oldPrimaryKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578482455582875e138ca4b45e5a41124e4956ef" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord $primaryKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc65c24f96d3cd10274b68ae0451eb9ffad8094d" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord $relatedRecords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdf3e33e77fd77f4a67c8f3042f05f6d4590dc5" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord EVENT_AFTER_DELETE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0329a6b3f68c9e50d7bd6ca4f461f2845a5c21bb" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord EVENT_AFTER_FIND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c616cfbd07c8e44e2b295cd4fd9e3bd960b3e13" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord EVENT_AFTER_INSERT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3257d4afbe0b72828d406bf6dc6afe2c245cddf6" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord EVENT_AFTER_REFRESH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca0d61e11842ed756568cad14ddfb750d3ad2a5" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord EVENT_AFTER_UPDATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39069b5cab675929ec488681d3a8ca3ee5d30f3" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord EVENT_BEFORE_DELETE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd14abe273abd8622ecfc5d451a2bb509ec0ddf" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord EVENT_BEFORE_INSERT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5cea91400840631ee549325305caa01e02e905" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord EVENT_BEFORE_UPDATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead30542e322ff6dd68eff8f0ab060de053f43dd" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord EVENT_INIT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90045f75eaa7490ca43f406aecd1fac9095acdf" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord __get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcecc09098f67be0d5899d94d14707d6cbac7ef5" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord __isset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450315cc3cfecea23cb94d6babe7880e412884ad" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord __set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7810600474a4c900653eab48e14e520bfd686693" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord __unset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc4e5763a6f8cca0c968eaab49cdf2a7e48ebfe" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord afterDelete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc2e9983a1906db4eb098dda8111b9fafaec186" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord afterFind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b86661e8e0567f81a4896b32883d8230396178c" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord afterRefresh()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5fec6d359342c7e8b5084d394b88cdca9815b1" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord afterSave()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589e8cbb734738e8f0f3ee39d8a5c7fa984efda3" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord beforeDelete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527283ac3a5c0b37a55e9e2f1b7bec242a83d533" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord beforeSave()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0492a5592ff31ddabab67f55e2ca2d796a3b6e" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord canGetProperty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ef471acdeae6e198658f3a2786ed664163fe51" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord canSetProperty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053ebb2b635e9569dafe9ffc1147f72c1ad1245f" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord createRelationQuery()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a22e37ca39e2b4700dd253a3f8bd9338ead7c0a" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord delete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cd300e6f1293a5759846ed6daae6c7d92a9d9b" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord deleteAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8454ef59562d07dcb002ad6dfe276f74e4c96808" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445efd5dcbc2d516befa9b25efc72c082f1aeaec" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord extraFields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22759283c2dd7830b41cf08bc3e72cf6afad4b83" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord fields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d179ac39cb9bb9725ad04392053bac624a9279" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord findAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a526a75a61eebd1f75843faf2368eb905d0481" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord findByCondition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a468d48ef092fc1d8550a2d2a57ee7619aa70ce0" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord findOne()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab233b8410a70843c0c138b96d788c5c3b219ac" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a799031b862a26b3d35176caab2853b4ec05b075" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getAttributeHint()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41d9c19d14527faf4e072fcb96b1bb3270f9519" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getAttributeLabel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c00274c8387f5be644917b493f7bbf95594eef" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getDirtyAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7661654d1209444933aad495b454733117afc3" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getIsNewRecord()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afe37753ec2c33fb5d1752678a55eba9fc6f1f9" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getOldAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8971424a01beaa288e56715202ab46bb43b7e7c8" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getOldAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724016ecc9c46391cf0fc54562af77995b96f2e4" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getOldPrimaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ecb8376c2cf9700c09157826f9922b934acd78" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getPrimaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87fc4e3e4a891d36057d2888170f3fbf4cb87bc" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getRelatedRecords()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5084f667221208136a5b91a4ce04303a55a097" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord getRelation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e70689993cd8999ae60c7c0b9c695c86996fe6" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord hasAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb13a62faa459fc94feb3c8fb1eb4b13176ef8a1" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord hasMany()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d7c7ad067f0ac651e39a702a4cb2785585d8f1" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord hasOne()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a842c409bf9641d3e31f83d6be7efe0476edf536" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac747e1ccb907fc25588a377f7c56241ea661d3" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord instantiate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7214c5ac93193d5f46f2907c94ce53902fc109bf" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord isAttributeChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8be693ae766351930c73fa33846d0162b3752c4" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord isPrimaryKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf739d7eba60799c4b2b909b5624c4ac8a12578" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord isRelationPopulated()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a580956886bbec81327793362282cff9eed5fbc" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord link()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb97f2d7f5ee93cc63c8cda8397c849b7904a893" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord markAttributeDirty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6e391d9f98f69e20bf458736001f5a105e6c99" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord offsetExists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82e1c2e8a8e68e488586f67eaf7b87abb860965" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord offsetUnset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc8462c81e20fd67cd710c98bafe04bfd2b76e8" translate="yes" xml:space="preserve">
          <source>\BaseActiveRecord optimisticLock()</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
