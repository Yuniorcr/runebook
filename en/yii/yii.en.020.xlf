<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="7dea21dff42ad3859a288b7abcf3f10b96917135" translate="yes" xml:space="preserve">
          <source>The currently active slave connection. &lt;code&gt;null&lt;/code&gt; is returned if there is no slave available and &lt;code&gt;$fallbackToMaster&lt;/code&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764d5f5dae464dce1f27e1c3912db0dca1fbfd55" translate="yes" xml:space="preserve">
          <source>The currently active transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e4190096b6e054d8e8ffcf722d6ef95dbf8b17" translate="yes" xml:space="preserve">
          <source>The currently active transaction. Null if no active transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86442f7760b55bda11e4dc4f293c7a7ce19e237" translate="yes" xml:space="preserve">
          <source>The currently requested absolute URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76de882abd6bd260440f354b280ee1ebd3242d5f" translate="yes" xml:space="preserve">
          <source>The currently requested instance of this module class, or &lt;code&gt;null&lt;/code&gt; if the module class is not requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56cdd82223cf42710ca7a3fdbb3a3825cd68a37" translate="yes" xml:space="preserve">
          <source>The currently requested instance of this module class. If it is &lt;code&gt;null&lt;/code&gt;, the instance of the calling class will be removed, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e75670a8895e59d5d9fbccaf7eac629f5ca6c4" translate="yes" xml:space="preserve">
          <source>The currently requested relative URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e55c93d9998ea580a5d597d50b5a430f4ed1e5" translate="yes" xml:space="preserve">
          <source>The currently requested relative URL. Note that the URI returned may be URL-encoded depending on the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11f0b561ab120b88788800ded9ee08b181690db" translate="yes" xml:space="preserve">
          <source>The data (name-value pairs) to be validated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec88767a6f3c537a3dd4f9e7928a129c5f70d1f" translate="yes" xml:space="preserve">
          <source>The data array to load model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8dff995dcee04b73c582b059ee3e163a72ad622" translate="yes" xml:space="preserve">
          <source>The data array to load, typically &lt;code&gt;$_POST&lt;/code&gt; or &lt;code&gt;$_GET&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f212774a568d067e7193bad1dda168318182e2f" translate="yes" xml:space="preserve">
          <source>The data array. This is usually &lt;code&gt;$_POST&lt;/code&gt; or &lt;code&gt;$_GET&lt;/code&gt;, but can also be any valid array supplied by end user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750ac7d1df2093d523096a5cb2c7717ec1938fbe" translate="yes" xml:space="preserve">
          <source>The data cell value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc65deeb73b47fa3cd0942f5685a0073aa61b14e" translate="yes" xml:space="preserve">
          <source>The data fetched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59139a17894ad020fa72a21ea3b6018dc097d158" translate="yes" xml:space="preserve">
          <source>The data from the auth item collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b94f3e3d622b64734868f62e069f16d91de8239" translate="yes" xml:space="preserve">
          <source>The data from the auth item table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95378001a5e314bda2e636078e63fa87c257354" translate="yes" xml:space="preserve">
          <source>The data item used to generate the checkboxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87462eaf686f2be01cccb530cd5ba2bf9b8f7175" translate="yes" xml:space="preserve">
          <source>The data item used to generate the checkboxes. The array keys are the checkbox values, and the array values are the corresponding labels. Note that the labels will NOT be HTML-encoded, while the values will.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8259b0555bb5aa5bdff072f29146d129332dff6d" translate="yes" xml:space="preserve">
          <source>The data item used to generate the checkboxes. The array keys are the checkbox values, while the array values are the corresponding labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab32b1f099ba8fa5876709c58e5ba751ea59afb" translate="yes" xml:space="preserve">
          <source>The data item used to generate the checkboxes. The array values are the labels, while the array keys are the corresponding checkbox or radio values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b452b6152318764d647987855e0d2e4a6048d75" translate="yes" xml:space="preserve">
          <source>The data item used to generate the checkboxes. The array values are the labels, while the array keys are the corresponding checkbox values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc9737278f7d4a5b7bd438b7c87d2be97e6d0d8" translate="yes" xml:space="preserve">
          <source>The data item used to generate the input fields. The array keys are the input values, and the array values are the corresponding labels. Note that the labels will NOT be HTML-encoded, while the values will.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fb0ebfcd8d77a7bfa7ea504ccb8cd74c1d9cdd" translate="yes" xml:space="preserve">
          <source>The data item used to generate the radio buttons. The array keys are the radio button values, while the array values are the corresponding labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6369450c0ebb3cc67437ce838ceb51dfa94c59e" translate="yes" xml:space="preserve">
          <source>The data item used to generate the radio buttons. The array keys are the radio values, and the array values are the corresponding labels. Note that the labels will NOT be HTML-encoded, while the values will.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf9197fe5cb1e6b33ae1e1ad25899c0432da766" translate="yes" xml:space="preserve">
          <source>The data item used to generate the radio buttons. The array values are the labels, while the array keys are the corresponding radio values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8537ebecd2134f2cfc1bee95abc1638f0549a62" translate="yes" xml:space="preserve">
          <source>The data model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90944a677089045e0cf3fccf5fbd4d14f6d081c" translate="yes" xml:space="preserve">
          <source>The data model being rendered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ca60d3025813b53b8a644faebca8439f3e4c75" translate="yes" xml:space="preserve">
          <source>The data model being validated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268285350e06080a9ba818331befa7ac8eb09f5c" translate="yes" xml:space="preserve">
          <source>The data model that this field is associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6aa0db49fcad7ade2d4238a9b02fd4ba7960c69" translate="yes" xml:space="preserve">
          <source>The data model that this widget is associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034126f61259a88e1d49cd0b30b0f4d52a3c9f53" translate="yes" xml:space="preserve">
          <source>The data model to be rendered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ed1ec6484967c4d473381b4cb29e125e716d6f" translate="yes" xml:space="preserve">
          <source>The data model to be validated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab309afd4d93530afe29d05d320de5a4d1a08ba" translate="yes" xml:space="preserve">
          <source>The data model to be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76750213f1df7145c68eb709db043e4b61b8ad3" translate="yes" xml:space="preserve">
          <source>The data model whose details are to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983df2886fa293190d9e15af1fd04c1c5b70d2b4" translate="yes" xml:space="preserve">
          <source>The data model whose details are to be displayed. This can be a &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; instance, an associative array, an object that implements &lt;a href=&quot;yii-base-arrayable&quot;&gt;yii\base\Arrayable&lt;/a&gt; interface or simply an object with defined public accessible non-static properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20739df49be6f7500165cd9b072c0a651021d695" translate="yes" xml:space="preserve">
          <source>The data model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be95fa63d5f0a2a2aa76f71b66b42e4573a7b6fb" translate="yes" xml:space="preserve">
          <source>The data needed to determine if dependency has been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d11142956f1fcecab03e4f1eace1df3e60f5fa9" translate="yes" xml:space="preserve">
          <source>The data prefixed with the keyed hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe579aac37efb401658afe3dba05dcdd8b09197d" translate="yes" xml:space="preserve">
          <source>The data provider for the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b2829958f32f439a6d87ee42d0e7f059c61af1" translate="yes" xml:space="preserve">
          <source>The data provider for the view. This property is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4ed3d25b8c3bd2aee3b7ca25c27c18520cc7bc" translate="yes" xml:space="preserve">
          <source>The data rows to be inserted into the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79821a7657ccad0c24b4786664935a7f6d2a6307" translate="yes" xml:space="preserve">
          <source>The data rows to be inserted into the database index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6352d701d630a02159b603f94a78c2477068c1b" translate="yes" xml:space="preserve">
          <source>The data rows to be inserted into the database table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1175947af6090952656424f271f4149a2190c31" translate="yes" xml:space="preserve">
          <source>The data rows to be inserted into the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a58bbb8107e316e1ae23d7535a27a82054dd61" translate="yes" xml:space="preserve">
          <source>The data rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e17b6309defdfb075506ff044212f1649a619a5" translate="yes" xml:space="preserve">
          <source>The data rows. Each array element represents one row of data (column name =&amp;gt; column value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df28ff8db821725a408ec2ed4fd72711a4fdcb91" translate="yes" xml:space="preserve">
          <source>The data that is not paginated or sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064295641f7d13ee6d71e1ed35ebc6a27a902d42" translate="yes" xml:space="preserve">
          <source>The data that is not paginated or sorted. When pagination is enabled, this property usually contains more elements than &lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$models&lt;/a&gt;. The array elements must use zero-based integer keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78177b8a59200ad352c0d5a5a0a76c50b1ba8f53" translate="yes" xml:space="preserve">
          <source>The data that is passed to &lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii\base\Component::on()&lt;/a&gt; when attaching an event handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a779c991d4758697bb46d96cd26daf8af396ae39" translate="yes" xml:space="preserve">
          <source>The data that is passed to &lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii\base\Component::on()&lt;/a&gt; when attaching an event handler. Note that this varies according to which event handler is currently executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a612a46af423d5c1d6bc61761dcdda2da172c0f7" translate="yes" xml:space="preserve">
          <source>The data that should be formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5a234629ff1f2387029576073f5805025ee13c" translate="yes" xml:space="preserve">
          <source>The data to be encoded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9180bde3329bb5444b5df5e9e41ba9f04cd7f1e" translate="yes" xml:space="preserve">
          <source>The data to be encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd197b32fd0eab6be04cf4d42eeebd059e810d31" translate="yes" xml:space="preserve">
          <source>The data to be passed to the event handler when the event is triggered. When the event handler is invoked, this data can be accessed via &lt;a href=&quot;yii-base-event#%24data-detail&quot;&gt;yii\base\Event::$data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c33ddd94506567a97c1595259bd21f4ed794c18" translate="yes" xml:space="preserve">
          <source>The data to be processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46edfefcd5f585a0fdc3e02161ca6da22541c52a" translate="yes" xml:space="preserve">
          <source>The data to be protected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2446233d0774375fa59a25e4bba75f41b18f0099" translate="yes" xml:space="preserve">
          <source>The data to be put into the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26646afd839ba7360f4c4f12d8f2f5bbaf424dc" translate="yes" xml:space="preserve">
          <source>The data to be serialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e7709f973e0ecf0724a6fcdd16d8ff326bf568" translate="yes" xml:space="preserve">
          <source>The data to be serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605c593f788379a39804e3cab6e4e06c3398b393" translate="yes" xml:space="preserve">
          <source>The data to be validated. The data must be previously generated by &lt;a href=&quot;yii-base-security#hashData()-detail&quot;&gt;hashData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe89d0d00129516b1d536e077d7733eda036933" translate="yes" xml:space="preserve">
          <source>The data to encrypt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08048efd86676059c3dda0b28f44054eac7c3fd" translate="yes" xml:space="preserve">
          <source>The data value to be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4153af05152f61902b4974219dcf9ab68ff1f5" translate="yes" xml:space="preserve">
          <source>The data whose PDO type is to be determined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5bfafd1ea68d91c93f0dfab0f0ec88c423991c" translate="yes" xml:space="preserve">
          <source>The database connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4292eeea66135f07f5c1330d35dd0025de732d81" translate="yes" xml:space="preserve">
          <source>The database connection is specified by &lt;a href=&quot;yii-i18n-dbmessagesource#%24db-detail&quot;&gt;$db&lt;/a&gt;. Database schema could be initialized by applying migration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb35e063d2c0f981e6fabc642d7baff8bd3116d" translate="yes" xml:space="preserve">
          <source>The database connection is specified by &lt;a href=&quot;yii-log-dbtarget#%24db-detail&quot;&gt;$db&lt;/a&gt;. Database schema could be initialized by applying migration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c67964eb557feca8d28837fc7518947284412c" translate="yes" xml:space="preserve">
          <source>The database connection is specified by &lt;a href=&quot;yii-rbac-dbmanager#%24db-detail&quot;&gt;$db&lt;/a&gt;. The database schema could be initialized by applying migration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2be3fcccf49e98c6856dca89867c923e2ddc66a" translate="yes" xml:space="preserve">
          <source>The database connection that this transaction is associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacddaada02885a2df15ad4258dbba935612f80f" translate="yes" xml:space="preserve">
          <source>The database connection to be used for schema building.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6161d3f9553f53ec3d9a11e5fc588cfb7d562d73" translate="yes" xml:space="preserve">
          <source>The database connection used by this AR class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59fa3040aa20d7ade1e19982f6944feae6f19ff" translate="yes" xml:space="preserve">
          <source>The database connection used to execute the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167265a5c6730cb42bd87267f371bc9282af5d4d" translate="yes" xml:space="preserve">
          <source>The database connection used to execute the query. If this parameter is not given, the &lt;code&gt;db&lt;/code&gt; application component will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bc2a8e3ea0ff74ff015288182aacaaeeb055fb" translate="yes" xml:space="preserve">
          <source>The database connection used to execute the query. If this parameter is not given, the &lt;code&gt;elasticsearch&lt;/code&gt; application component will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e00665e3003428d84b17e17132d96cb9f06bf7" translate="yes" xml:space="preserve">
          <source>The database connection used to generate the SQL statement. If this parameter is not given (or null), the &lt;code&gt;db&lt;/code&gt; application component will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c652925fae7d63c1597ee233ab6a18a5a172ed" translate="yes" xml:space="preserve">
          <source>The database connection used to generate the SQL statement. If this parameter is not given, the &lt;code&gt;db&lt;/code&gt; application component will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d896ab0d77560d20ef06568f5349d769d430c4" translate="yes" xml:space="preserve">
          <source>The database connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e7436fac0bd5c437f8154117c483e1de2d100f" translate="yes" xml:space="preserve">
          <source>The database connection. If not set, the &quot;db&quot; application component will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cf11befab6cd7f5be3cd6ade3599c91c40e67e" translate="yes" xml:space="preserve">
          <source>The database connection. If not set, the &lt;code&gt;elasticsearch&lt;/code&gt; application component will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ae87268d589928533892a9c46584912f83e138" translate="yes" xml:space="preserve">
          <source>The database must contain the following two tables: source_message and message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdd2cba0f8221561295315bd4dd3e8df0981e9c" translate="yes" xml:space="preserve">
          <source>The date format that the value being validated should follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3565342c141c0b7b31cd5df48069d6055b0fad3e" translate="yes" xml:space="preserve">
          <source>The date format that the value being validated should follow. This can be a date time pattern as described in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62dc6f12b83aadf69a8a180ca0f493223499e02" translate="yes" xml:space="preserve">
          <source>The datetime value to be normalized. The following types of value are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711269178dc406021dfbf3da2dd146d67886cf0f" translate="yes" xml:space="preserve">
          <source>The declaration is returned in terms of a relational &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt; instance through which the related record can be queried and retrieved back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1377d51153f23f0a2165761914e031fc915d392" translate="yes" xml:space="preserve">
          <source>The declarations of transactional operations. The array keys are scenarios names, and the array values are the corresponding transaction operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfef2e8777426d1bc5a7e68899248b0a02b2aed3" translate="yes" xml:space="preserve">
          <source>The decoded content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4f9387fe42af6979f4f7d6bba4b3eb30608e0a" translate="yes" xml:space="preserve">
          <source>The decoded data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba11d5fb6dbd3d33184007453e1164380dd12d5" translate="yes" xml:space="preserve">
          <source>The decoded message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2645c15dcbb399d6a65fc71901a44edbe3ada85" translate="yes" xml:space="preserve">
          <source>The decrypted data or false on authentication failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d45ffacdf8402af31a88b0ad60967732c282c2" translate="yes" xml:space="preserve">
          <source>The decryption password or key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef043a3c5f7c772f11126e77e7d08ae3ba50dabe" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;yii-web-session&quot;&gt;yii\web\Session&lt;/a&gt; class stores session data as files on the server. Yii also provides the following session classes implementing different session storage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf0062e51ab7623797a51036b3cc2309828115b" translate="yes" xml:space="preserve">
          <source>The default CSS class for the error summary container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43407ba8bdfbcb935634e0751ad201130dcf9e3" translate="yes" xml:space="preserve">
          <source>The default GET parameters (name =&amp;gt; value) that this rule provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13421650a38f180f90b129440b515b54658b70c" translate="yes" xml:space="preserve">
          <source>The default GET parameters (name =&amp;gt; value) that this rule provides. When this rule is used to parse the incoming request, the values declared in this property will be injected into $_GET.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181e28d361f095a14ef2b6f9f708c5084e7a19a3" translate="yes" xml:space="preserve">
          <source>The default URI scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32238beb755c7add620177d22521c469befd3328" translate="yes" xml:space="preserve">
          <source>The default URI scheme. If the input doesn't contain the scheme part, the default scheme will be prepended to it (thus changing the input). Defaults to null, meaning a URL must contain the scheme part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4c6105f07053e0b8cf88ec9e06b6d35c4215aa" translate="yes" xml:space="preserve">
          <source>The default URL format uses a &lt;a href=&quot;yii-web-urlmanager#%24routeParam-detail&quot;&gt;query parameter&lt;/a&gt; named &lt;code&gt;r&lt;/code&gt; to represent the route and normal query parameters to represent the query parameters associated with the route. For example, the URL &lt;code&gt;/index.php?r=post/view&amp;amp;id=100&lt;/code&gt; represents the route &lt;code&gt;post/view&lt;/code&gt; and the &lt;code&gt;id&lt;/code&gt; query parameter &lt;code&gt;100&lt;/code&gt;. The default URL format does not require any configuration of the &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; and works in any Web server setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624bfc091d234c29acf7bd811ee1bc0875d2d743" translate="yes" xml:space="preserve">
          <source>The default class name of the new message instances created by &lt;a href=&quot;yii-mail-basemailer#createMessage()-detail&quot;&gt;createMessage()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba237bc8d03432515aa6663b7200c0461f8e5b45" translate="yes" xml:space="preserve">
          <source>The default command action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26073cb972f0e69cb47c190406ba58d971710c1" translate="yes" xml:space="preserve">
          <source>The default comparison function is based on string values, which means the values are compared byte by byte. When comparing numbers, make sure to set the &lt;a href=&quot;yii-validators-comparevalidator#%24type-detail&quot;&gt;$type&lt;/a&gt; to &lt;a href=&quot;yii-validators-comparevalidator#TYPE_NUMBER-detail&quot;&gt;TYPE_NUMBER&lt;/a&gt; to enable numeric comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa02a6218c48f82c9a1c732a3edfbbf7d14d799a" translate="yes" xml:space="preserve">
          <source>The default configuration for creating each URL rule contained by this rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86e6b4f6c885e9fb884446441011dcd4709aec6" translate="yes" xml:space="preserve">
          <source>The default configuration of URL rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63fa8895a8573a1e212ce415daf1c9775f4d235" translate="yes" xml:space="preserve">
          <source>The default configuration of URL rules. Individual rule configurations specified via &lt;a href=&quot;yii-web-groupurlrule#%24rules-detail&quot;&gt;$rules&lt;/a&gt; will take precedence when the same property of the rule is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b648d75bcd451e6a1bf01a3bb04c5c42d5e0cd" translate="yes" xml:space="preserve">
          <source>The default configuration of URL rules. Individual rule configurations specified via &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;$rules&lt;/a&gt; will take precedence when the same property of the rule is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c0cc7349314648ede538da099cd4a78f9c78c2" translate="yes" xml:space="preserve">
          <source>The default configuration of access rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ff1d53375741d944a8600d89bb2de3c62e7895" translate="yes" xml:space="preserve">
          <source>The default configuration of access rules. Individual rule configurations specified via &lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;$rules&lt;/a&gt; will take precedence when the same property of the rule is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce578c9a170af336347042aab5f47d9bf6d72eb0" translate="yes" xml:space="preserve">
          <source>The default configuration used by &lt;a href=&quot;yii-widgets-activeform#field()-detail&quot;&gt;field()&lt;/a&gt; when creating a new field object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cf229f27968a1b628d5dedca1b49f7d400884d" translate="yes" xml:space="preserve">
          <source>The default configuration used by &lt;a href=&quot;yii-widgets-activeform#field()-detail&quot;&gt;field()&lt;/a&gt; when creating a new field object. This can be either a configuration array or an anonymous function returning a configuration array. If the latter, the signature should be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f40559cfc227c7334d7d09e8c8159b114b42114" translate="yes" xml:space="preserve">
          <source>The default data column class if the class name is not explicitly specified when configuring a data column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bd845deb344bdb22d5aa5f750fe7a7eab8865c" translate="yes" xml:space="preserve">
          <source>The default data column class if the class name is not explicitly specified when configuring a data column. Defaults to 'yii\grid\DataColumn'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b344afb9bf1d6ce3e36a3b507193e23ac3e6fdf" translate="yes" xml:space="preserve">
          <source>The default date and time formats used for the &lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;date&lt;/a&gt;, &lt;a href=&quot;yii-i18n-formatter#asTime()-detail&quot;&gt;time&lt;/a&gt;, and &lt;a href=&quot;yii-i18n-formatter#asDatetime()-detail&quot;&gt;datetime&lt;/a&gt; methods can be customized globally by configuring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300465d1ae431f46de69dd2cb0a9ae371b1f736e" translate="yes" xml:space="preserve">
          <source>The default fetch mode for this command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ec421fec8a28188a21ee68cd4104e09251efd2" translate="yes" xml:space="preserve">
          <source>The default field class name when calling &lt;a href=&quot;yii-bootstrap-activeform#field()-detail&quot;&gt;field()&lt;/a&gt; to create a new field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae364407b3f05b2d5daaca30f0f1454581be167" translate="yes" xml:space="preserve">
          <source>The default field class name when calling &lt;a href=&quot;yii-widgets-activeform#field()-detail&quot;&gt;field()&lt;/a&gt; to create a new field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3210db3ecbfc6339a7a6919c8689a7b2e76f9b4" translate="yes" xml:space="preserve">
          <source>The default filter to apply to the database queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cd6df93a261b06ec61e7cffd37d6ace6fd118e" translate="yes" xml:space="preserve">
          <source>The default filter to apply to the database queries. In the format of [ property =&amp;gt; value ], for example: [ 'type' =&amp;gt; 'SELECT' ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f442994f99f20ec8ec8d9782d9c61fb10c6b3df6" translate="yes" xml:space="preserve">
          <source>The default format string to be used to format a &lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;date&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77a474a1e098da0fc11c568da8fc7711299ed72" translate="yes" xml:space="preserve">
          <source>The default format string to be used to format a &lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;date&lt;/a&gt;. This can be &quot;short&quot;, &quot;medium&quot;, &quot;long&quot;, or &quot;full&quot;, which represents a preset format of different lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ef3d3ac92b1f06a0c87b8aeb8ec078683abd53" translate="yes" xml:space="preserve">
          <source>The default format string to be used to format a &lt;a href=&quot;yii-i18n-formatter#asDatetime()-detail&quot;&gt;date and time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea0e1674ddb4547c4a787b57cfedd40ec45805b" translate="yes" xml:space="preserve">
          <source>The default format string to be used to format a &lt;a href=&quot;yii-i18n-formatter#asDatetime()-detail&quot;&gt;date and time&lt;/a&gt;. This can be &quot;short&quot;, &quot;medium&quot;, &quot;long&quot;, or &quot;full&quot;, which represents a preset format of different lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ea83374a2d7a8ba63c28d6c49c8d7062e10246" translate="yes" xml:space="preserve">
          <source>The default format string to be used to format a &lt;a href=&quot;yii-i18n-formatter#asTime()-detail&quot;&gt;time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8288630ff6f01ff3a971147cb499330bbf302b56" translate="yes" xml:space="preserve">
          <source>The default format string to be used to format a &lt;a href=&quot;yii-i18n-formatter#asTime()-detail&quot;&gt;time&lt;/a&gt;. This can be &quot;short&quot;, &quot;medium&quot;, &quot;long&quot;, or &quot;full&quot;, which represents a preset format of different lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec205c19d288e112a44b6d0b358c8599e79f1f5" translate="yes" xml:space="preserve">
          <source>The default header template to render the link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb875332ec7c0e7973939a00e038b94e59dd56a" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;a href=&quot;yii-caching-cache#addValue()-detail&quot;&gt;addValue()&lt;/a&gt; multiple times add values one by one. If the underlying cache storage supports multi-add, this method should be overridden to exploit that feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0c4386c707c8486d944363e6b920421ad5923b" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;a href=&quot;yii-caching-cache#getValue()-detail&quot;&gt;getValue()&lt;/a&gt; multiple times to retrieve the cached values one by one. If the underlying cache storage supports multiget, this method should be overridden to exploit that feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5de7f5831cfbb491cbb74eeccab9638c0bcb03" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;a href=&quot;yii-caching-cache#setValue()-detail&quot;&gt;setValue()&lt;/a&gt; multiple times store values one by one. If the underlying cache storage supports multi-set, this method should be overridden to exploit that feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6bd9b41ae53544e8b0a08b722d7da013ddd6b5" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;a href=&quot;yii-caching-wincache#addValue()-detail&quot;&gt;addValue()&lt;/a&gt; multiple times add values one by one. If the underlying cache storage supports multiadd, this method should be overridden to exploit that feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c2afe2400fd0514081d7201550ae192e0e587d" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;a href=&quot;yii-redis-cache#getValue()-detail&quot;&gt;getValue()&lt;/a&gt; multiple times to retrieve the cached values one by one. If the underlying cache storage supports multiget, this method should be overridden to exploit that feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f622947ea768e4571957aaad5ffc1ceb34acdb14" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;a href=&quot;yii-redis-cache#setValue()-detail&quot;&gt;setValue()&lt;/a&gt; multiple times store values one by one. If the underlying cache storage supports multi-set, this method should be overridden to exploit that feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b889d91398ed13de6897e74c7c242109ad4d32d5" translate="yes" xml:space="preserve">
          <source>The default implementation does two things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d757689fd1278e51a283f7b3b3d85563ab5179" translate="yes" xml:space="preserve">
          <source>The default implementation handles resources as &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; objects and collections as objects implementing &lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;yii\data\DataProviderInterface&lt;/a&gt;. You may override &lt;a href=&quot;yii-rest-serializer#serialize()-detail&quot;&gt;serialize()&lt;/a&gt; to handle more types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4003c63b13e1f0b2767ffa25e69c9307fe4d484" translate="yes" xml:space="preserve">
          <source>The default implementation is a call to php function &lt;code&gt;method_exists()&lt;/code&gt;. You may override this method when you implemented the php magic method &lt;code&gt;__call()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964700ec1e8f577bf60e2556a918b81d8c5f6afd" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;scenarios()&lt;/code&gt; will return all scenarios found in the validation rule declaration method &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;yii\base\Model::rules()&lt;/a&gt;. When overriding &lt;code&gt;scenarios()&lt;/code&gt;, if you want to introduce new scenarios in addition to the default ones, you may write code like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7830470379c8c9787d6542e2a8b1b12f9edf616f" translate="yes" xml:space="preserve">
          <source>The default implementation of HttpBasicAuth uses the &lt;a href=&quot;yii-web-user#loginByAccessToken()-detail&quot;&gt;loginByAccessToken()&lt;/a&gt; method of the &lt;code&gt;user&lt;/code&gt; application component and only passes the user name. This implementation is used for authenticating API clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c615e60bc6ae6bef23f2e0d71a17405086a76f" translate="yes" xml:space="preserve">
          <source>The default implementation of this interface is provided by &lt;a href=&quot;yii-db-querytrait&quot;&gt;yii\db\QueryTrait&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a0bf386fbe43f022de8323a4d282c445555940" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns &lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;attributes()&lt;/a&gt; indexed by the same attribute names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae357e3dc668fdd1bc17fb214bed9d0f5195e551" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns &lt;a href=&quot;yii-db-activerecordinterface#attributes()-detail&quot;&gt;attributes()&lt;/a&gt; indexed by the same attribute names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6505f024b831dac61cce229a5017defcce432b77" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns the public object member variables indexed by themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc8933b94aa142ce4ed2517384a20401d72cab3" translate="yes" xml:space="preserve">
          <source>The default implementation of this method will return all scenarios found in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; declaration. A special scenario named &lt;a href=&quot;yii-base-model#SCENARIO_DEFAULT-detail&quot;&gt;SCENARIO_DEFAULT&lt;/a&gt; will contain all attributes found in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt;. Each scenario will be associated with the attributes that are being validated by the validation rules that apply to the scenario.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bb1b2c6296c9f5b3e2819fc3fe7a83373712b2" translate="yes" xml:space="preserve">
          <source>The default implementation raises a &lt;code&gt;beforeValidate&lt;/code&gt; event. You may override this method to do preliminary checks before validation. Make sure the parent implementation is invoked so that the event can be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd658ae2d747cd5906df8630d2de315f556fc75" translate="yes" xml:space="preserve">
          <source>The default implementation raises an &lt;code&gt;afterValidate&lt;/code&gt; event. You may override this method to do postprocessing after validation. Make sure the parent implementation is invoked so that the event can be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1649a2cd827123217d2aba19bf5c6c89e40eb57c" translate="yes" xml:space="preserve">
          <source>The default implementation raises the &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_DELETE-detail&quot;&gt;EVENT_AFTER_DELETE&lt;/a&gt; event. You may override this method to do postprocessing after the record is deleted. Make sure you call the parent implementation so that the event is raised properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc86bae362751a8bedfc85e5bb847be9ed89f5f" translate="yes" xml:space="preserve">
          <source>The default implementation raises the &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_DELETE-detail&quot;&gt;EVENT_BEFORE_DELETE&lt;/a&gt; event. When overriding this method, make sure you call the parent implementation like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc6389eed489feaf79a33bc534f62716c468019" translate="yes" xml:space="preserve">
          <source>The default implementation returns an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e436c36b89f3f73c53e81d96a2230aa228b96c" translate="yes" xml:space="preserve">
          <source>The default implementation returns the 'views' subdirectory under the directory containing the widget class file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f50098f5f962c68ab4aad22c3edd88c83e24f8" translate="yes" xml:space="preserve">
          <source>The default implementation returns the directory named as controller &lt;a href=&quot;yii-base-controller#%24id-detail&quot;&gt;$id&lt;/a&gt; under the &lt;a href=&quot;yii-base-controller#%24module-detail&quot;&gt;$module&lt;/a&gt;'s &lt;a href=&quot;yii-base-controller#%24viewPath-detail&quot;&gt;$viewPath&lt;/a&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075e2d7a22400965f2ee0fd97339b186c3bd3a51" translate="yes" xml:space="preserve">
          <source>The default implementation returns the names of the columns whose values have been populated into this record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c48aea3b57451bbb2b33845ab4b83c9f829243d" translate="yes" xml:space="preserve">
          <source>The default implementation returns the names of the relations that have been populated into this record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cdf6b2067fe2993e75aa66d5226e71ba700877" translate="yes" xml:space="preserve">
          <source>The default implementation simply calls &lt;a href=&quot;yii-mail-basemailer#send()-detail&quot;&gt;send()&lt;/a&gt; multiple times. Child classes may override this method to implement more efficient way of sending multiple messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5b11375aad0aef35529128fc5193ad0ad07595" translate="yes" xml:space="preserve">
          <source>The default implementation simply renders &lt;a href=&quot;yii-grid-column#%24footer-detail&quot;&gt;$footer&lt;/a&gt;. This method may be overridden to customize the rendering of the footer cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7263232d6ebb0b96295e3eee9b38ee00d98cc6ad" translate="yes" xml:space="preserve">
          <source>The default implementation simply renders &lt;a href=&quot;yii-grid-column#%24header-detail&quot;&gt;$header&lt;/a&gt;. This method may be overridden to customize the rendering of the header cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93820eb4d355d328eb5075f5bcf22622fc4ff961" translate="yes" xml:space="preserve">
          <source>The default implementation simply renders a space. This method may be overridden to customize the rendering of the filter cell (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc7a2a931dc14441142e27f6ce9f4b8e791e7d2" translate="yes" xml:space="preserve">
          <source>The default implementation simply stores the data returned by &lt;a href=&quot;yii-test-arrayfixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; in &lt;a href=&quot;yii-test-arrayfixture#%24data-detail&quot;&gt;$data&lt;/a&gt;. You should usually override this method by putting the data into the underlying database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66ce9e8e99c0a8a0e8a095d4adb6b656d4edab0" translate="yes" xml:space="preserve">
          <source>The default implementation simply stores the data returned by &lt;a href=&quot;yii-test-baseactivefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; in &lt;a href=&quot;yii-test-baseactivefixture#%24data-detail&quot;&gt;$data&lt;/a&gt;. You should usually override this method by putting the data into the underlying database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea95ad489a23856efa2228ab160a2fd61ab19f0a" translate="yes" xml:space="preserve">
          <source>The default implementation throws an exception indicating the migration cannot be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506bdff4a64c3775a464928dc5953a07a90fdd54" translate="yes" xml:space="preserve">
          <source>The default implementation throws an exception indicating the migration cannot be removed. Child classes may override this method if the corresponding migrations can be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b409b6c4ea43a39ecb9c3da286486576f4ef8d8" translate="yes" xml:space="preserve">
          <source>The default implementation will check cookie and $_GET using the session name. If you send session ID via other ways, you may need to override this method or call &lt;a href=&quot;yii-web-session#setHasSessionId()-detail&quot;&gt;setHasSessionId()&lt;/a&gt; to explicitly set whether the session ID is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20ccc0b3da40c56608c975ea66541284d2edf00" translate="yes" xml:space="preserve">
          <source>The default implementation will convert &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;$data&lt;/a&gt; into &lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;$content&lt;/a&gt; and set headers accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6a9019b9d2d685f335d8991fa8ae334e602993" translate="yes" xml:space="preserve">
          <source>The default implementation will create a serializer based on the configuration given by &lt;a href=&quot;yii-rest-controller#%24serializer-detail&quot;&gt;$serializer&lt;/a&gt;. It then uses the serializer to serialize the given data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13d8bc3d9aef79a112c86b3b2c5cbec735cace4" translate="yes" xml:space="preserve">
          <source>The default implementation will display 404 page right away, terminating the program execution. You may override this method, creating your own deny access handler. While doing so, make sure you avoid usage of the current requested host name, creation of absolute URL links, caching page parts and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4671af30953908f11a304e2738ca5db092cfbd8c" translate="yes" xml:space="preserve">
          <source>The default implementation will dump user information, system variables, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9397808d8dc830a38deb419a53be8dfd0e18b39b" translate="yes" xml:space="preserve">
          <source>The default implementation will first clean up the index by calling &lt;a href=&quot;yii-elasticsearch-activefixture#resetIndex()-detail&quot;&gt;resetIndex()&lt;/a&gt;. It will then populate the index with the data returned by &lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d7c218c328e87a7dc69ed8fe9f927ed156629c" translate="yes" xml:space="preserve">
          <source>The default implementation will first clean up the table by calling &lt;a href=&quot;yii-sphinx-activefixture#resetIndex()-detail&quot;&gt;resetIndex()&lt;/a&gt;. It will then populate the index with the data returned by &lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e2742029f3a3faa69a4107af8931664d0ad5be" translate="yes" xml:space="preserve">
          <source>The default implementation will first reset the MongoDB collection and then populate it with the data returned by &lt;a href=&quot;yii-mongodb-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67171894864fb368524d006e977dfb01aad40460" translate="yes" xml:space="preserve">
          <source>The default implementation will log a warning message if YII_DEBUG is on. It does nothing otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd90c9bb7c97e1f9f09d0c8a77f09f3aefc812f" translate="yes" xml:space="preserve">
          <source>The default implementation will redirect the user to the login page if he is a guest; if the user is already logged, a 403 HTTP exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5a60a26f2dc91e94d440ef3374ab5174947363" translate="yes" xml:space="preserve">
          <source>The default implementation will return ['_id'].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0cde427984241ea22dc849e1605985683634d8a" translate="yes" xml:space="preserve">
          <source>The default implementation will return all column names of the table associated with this AR class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8d50c5dcba2e35c6014bf36d5072cbad279a13" translate="yes" xml:space="preserve">
          <source>The default implementation will return false for SQLite database and true for all other databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cf23c9131fcb53ab0b0b3d88d3575ebd1ac5c1" translate="yes" xml:space="preserve">
          <source>The default implementation will return the &quot;form.php&quot; file under the directory that contains the generator class file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1917fd6fd4d985ffadefff06a9b3e68f64810f8" translate="yes" xml:space="preserve">
          <source>The default implementation will return the &quot;templates&quot; subdirectory of the directory containing the generator class file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ba3bc390501341bb394522d9878aceb6da68f0" translate="yes" xml:space="preserve">
          <source>The default implementation will return the help information extracted from the doc-comment of the parameters corresponding to the action method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f5994e2dd0ca667b33247be9a88e13fc63055a" translate="yes" xml:space="preserve">
          <source>The default implementation will return the help information extracted from the doc-comment of the properties corresponding to the action options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed15be3719bda4fae988403725e9b174cb4c7b5" translate="yes" xml:space="preserve">
          <source>The default implementation will return the primary key as declared in the Sphinx index, which is associated with this AR class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa276f0da851d81938f0e4c0672e69c7c4bf542" translate="yes" xml:space="preserve">
          <source>The default implementation will return the primary key(s) as declared in the DB table that is associated with this AR class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4644bcdcd84d77f57bf60df0a1552c1ff932bf47" translate="yes" xml:space="preserve">
          <source>The default implementation will set the &lt;a href=&quot;yii-base-behavior#%24owner-detail&quot;&gt;$owner&lt;/a&gt; property and attach event handlers as declared in &lt;a href=&quot;yii-base-behavior#events()-detail&quot;&gt;events()&lt;/a&gt;. Make sure you call the parent implementation if you override this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f347aa2777e183df46df976ccd55e98f2a1c84" translate="yes" xml:space="preserve">
          <source>The default implementation will set the &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24owner-detail&quot;&gt;$owner&lt;/a&gt; property and attach event handlers as declared in &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#events()-detail&quot;&gt;events()&lt;/a&gt;. Make sure you call the parent implementation if you override this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c0c7e8116aa79abe8338b7377963f3ff6c03ac" translate="yes" xml:space="preserve">
          <source>The default implementation will simply return &lt;code&gt;$_SERVER['SCRIPT_FILENAME']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c602b3d8deafeb9ec01eb0c35afb7dc7d167fd" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger an &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_FIND-detail&quot;&gt;EVENT_AFTER_FIND&lt;/a&gt; event. When overriding this method, make sure you call the parent implementation to ensure the event is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684b5b8087c2b9feeaffe482c9b05f18be561c03" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger an &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; event when &lt;code&gt;$insert&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, or an &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; event if &lt;code&gt;$insert&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. The event class used is &lt;a href=&quot;yii-db-aftersaveevent&quot;&gt;yii\db\AfterSaveEvent&lt;/a&gt;. When overriding this method, make sure you call the parent implementation so that the event is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5490f30ce059cafbef09fcc6b30d50fcfb9ca118" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger an &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_REFRESH-detail&quot;&gt;EVENT_AFTER_REFRESH&lt;/a&gt; event. When overriding this method, make sure you call the parent implementation to ensure the event is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166741f2131260e7426bd70abe1dc30f128255ef" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger an &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt; event when &lt;code&gt;$insert&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, or an &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt; event if &lt;code&gt;$insert&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. When overriding this method, make sure you call the parent implementation like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185cdd4e27db065e7550f28026bfb765fcf9ff3c" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger the &lt;a href=&quot;yii-base-view#EVENT_AFTER_RENDER-detail&quot;&gt;EVENT_AFTER_RENDER&lt;/a&gt; event. If you override this method, make sure you call the parent implementation first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba079926447d7ba9d3be9980c06c5d64776c8f6" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger the &lt;a href=&quot;yii-base-view#EVENT_BEFORE_RENDER-detail&quot;&gt;EVENT_BEFORE_RENDER&lt;/a&gt; event. If you override this method, make sure you call the parent implementation first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dbb82f8a6e14516c517d4d72a2fc95342be2ba" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger the &lt;a href=&quot;yii-web-user#EVENT_AFTER_LOGIN-detail&quot;&gt;EVENT_AFTER_LOGIN&lt;/a&gt; event. If you override this method, make sure you call the parent implementation so that the event is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638d732b7c1166a434258c76472be236c26dcb0e" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger the &lt;a href=&quot;yii-web-user#EVENT_AFTER_LOGOUT-detail&quot;&gt;EVENT_AFTER_LOGOUT&lt;/a&gt; event. If you override this method, make sure you call the parent implementation so that the event is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345c5b4d2710b4bc0b8914ec249db07de7feeeae" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger the &lt;a href=&quot;yii-web-user#EVENT_BEFORE_LOGIN-detail&quot;&gt;EVENT_BEFORE_LOGIN&lt;/a&gt; event. If you override this method, make sure you call the parent implementation so that the event is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e74b93ddd3df844fe0df83564fb08dfb359d02" translate="yes" xml:space="preserve">
          <source>The default implementation will trigger the &lt;a href=&quot;yii-web-user#EVENT_BEFORE_LOGOUT-detail&quot;&gt;EVENT_BEFORE_LOGOUT&lt;/a&gt; event. If you override this method, make sure you call the parent implementation so that the event is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a13235fd00ed323bf64beb03057dedcef7fcb3" translate="yes" xml:space="preserve">
          <source>The default implementation will try to return the fixture data by including the external file specified by &lt;a href=&quot;yii-elasticsearch-activefixture#%24dataFile-detail&quot;&gt;$dataFile&lt;/a&gt;. The file should return an array of data rows (column name =&amp;gt; column value), each corresponding to a row in the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ecc8b2dbcef47aba0ae1bdb271b7c435b8db7f" translate="yes" xml:space="preserve">
          <source>The default implementation will try to return the fixture data by including the external file specified by &lt;a href=&quot;yii-sphinx-activefixture#%24dataFile-detail&quot;&gt;$dataFile&lt;/a&gt;. The file should return an array of data rows (column name =&amp;gt; column value), each corresponding to a row in the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8781ddfd2662ea93c15dc715d4542e6baee772f" translate="yes" xml:space="preserve">
          <source>The default implementation will try to return the fixture data by including the external file specified by &lt;a href=&quot;yii-test-activefixture#%24dataFile-detail&quot;&gt;$dataFile&lt;/a&gt;. The file should return an array of data rows (column name =&amp;gt; column value), each corresponding to a row in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508b68ca86844be05f2d3d7ce0f1c61234a1dbc5" translate="yes" xml:space="preserve">
          <source>The default implementation will try to return the fixture data by including the external file specified by &lt;a href=&quot;yii-test-arrayfixture#%24dataFile-detail&quot;&gt;$dataFile&lt;/a&gt;. The file should return the data array that will be stored in &lt;a href=&quot;yii-test-arrayfixture#%24data-detail&quot;&gt;$data&lt;/a&gt; after inserting into the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13773e56b9d5a2ca39ad93267a960bdc68da239" translate="yes" xml:space="preserve">
          <source>The default implementation will try to return the fixture data by including the external file specified by &lt;a href=&quot;yii-test-baseactivefixture#%24dataFile-detail&quot;&gt;$dataFile&lt;/a&gt;. The file should return an array of data rows (column name =&amp;gt; column value), each corresponding to a row in the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7603bf1cb7171c41bea04294e6871be8cbd20375" translate="yes" xml:space="preserve">
          <source>The default implementation will try to return the fixture data by including the external file specified by &lt;a href=&quot;yii-test-baseactivefixture#%24dataFile-detail&quot;&gt;$dataFile&lt;/a&gt;. The file should return the data array that will be stored in &lt;a href=&quot;yii-test-baseactivefixture#%24data-detail&quot;&gt;$data&lt;/a&gt; after inserting into the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bf3ee8e04be14a7589faa9227e1051566a4719" translate="yes" xml:space="preserve">
          <source>The default implementation will unset the &lt;a href=&quot;yii-base-behavior#%24owner-detail&quot;&gt;$owner&lt;/a&gt; property and detach event handlers declared in &lt;a href=&quot;yii-base-behavior#events()-detail&quot;&gt;events()&lt;/a&gt;. Make sure you call the parent implementation if you override this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e08ffdc473622bc4495dadb82e5ebd73ee2866f" translate="yes" xml:space="preserve">
          <source>The default number of seconds that query results can remain valid in cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0624b4a6def3e6be5321a3a8de868b4ee747e1e" translate="yes" xml:space="preserve">
          <source>The default number of seconds that query results can remain valid in cache. Defaults to 3600, meaning 3600 seconds, or one hour. Use 0 to indicate that the cached data will never expire. The value of this property will be used when &lt;a href=&quot;yii-db-connection#cache()-detail&quot;&gt;cache()&lt;/a&gt; is called without a cache duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ba8790c07d4e5ba1c9340bd7cd77231d61edd7" translate="yes" xml:space="preserve">
          <source>The default number of seconds that query results can remain valid in cache. Use 0 to indicate that the cached data will never expire. And use a negative number to indicate query cache should not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe83791c5659d7622f437b50476b93f1f13c57af" translate="yes" xml:space="preserve">
          <source>The default options for the error tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5b9e0a615cccfa24b5648c9c71c08fffd70b94" translate="yes" xml:space="preserve">
          <source>The default options for the error tags. The parameter passed to &lt;a href=&quot;yii-widgets-activefield#error()-detail&quot;&gt;error()&lt;/a&gt; will be merged with this property when rendering the error tag. The following special options are recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b4f46f186fc519a00fadc0a993a9a0e6dbddfa" translate="yes" xml:space="preserve">
          <source>The default options for the hint tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abec40fe9cae0a7addd6f08bcff5eed3bae4c8e" translate="yes" xml:space="preserve">
          <source>The default options for the hint tags. The parameter passed to &lt;a href=&quot;yii-widgets-activefield#hint()-detail&quot;&gt;hint()&lt;/a&gt; will be merged with this property when rendering the hint tag. The following special options are recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32981b34f843fc16cd88b34ab399650c701edcd" translate="yes" xml:space="preserve">
          <source>The default options for the input tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b171babc3eb492ac6a04b04a04bc7f4086eb7e" translate="yes" xml:space="preserve">
          <source>The default options for the input tags. The parameter passed to individual input methods (e.g. &lt;a href=&quot;yii-widgets-activefield#textInput()-detail&quot;&gt;textInput()&lt;/a&gt;) will be merged with this property when rendering the input tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16a5fcc605e222c0b686fe9b2e7e14ef1c7b386" translate="yes" xml:space="preserve">
          <source>The default options for the label tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f009d4a1d8e9baff5f14ab010df7545f403fae" translate="yes" xml:space="preserve">
          <source>The default options for the label tags. The parameter passed to &lt;a href=&quot;yii-widgets-activefield#label()-detail&quot;&gt;label()&lt;/a&gt; will be merged with this property when rendering the label tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b2501661288c7a1330141834bc940cff8a38bb" translate="yes" xml:space="preserve">
          <source>The default ordering of the database queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c13ba749b6aa66b145d1fc66b556fea03f25a30" translate="yes" xml:space="preserve">
          <source>The default ordering of the database queries. In the format of [ property =&amp;gt; sort direction ], for example: [ 'duration' =&amp;gt; SORT_DESC ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304bc6bd3be2085adbb654342cec29923de6a99c" translate="yes" xml:space="preserve">
          <source>The default page size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06341dc354defabb4b827ce50e5c7c5de5ec2d28" translate="yes" xml:space="preserve">
          <source>The default page size. This property will be returned by &lt;a href=&quot;yii-data-pagination#%24pageSize-detail&quot;&gt;$pageSize&lt;/a&gt; when page size cannot be determined by &lt;a href=&quot;yii-data-pagination#%24pageSizeParam-detail&quot;&gt;$pageSizeParam&lt;/a&gt; from &lt;a href=&quot;yii-data-pagination#%24params-detail&quot;&gt;$params&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a971a98a30d22df6489f32bafd1cfa0067dbe5" translate="yes" xml:space="preserve">
          <source>The default parameter value if the GET parameter does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b396a5e0ab0ff8ae69f817673177eb03ebc4901" translate="yes" xml:space="preserve">
          <source>The default parameter value if the parameter does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db64599a30879ab654475b8dab06075dd9c401f9" translate="yes" xml:space="preserve">
          <source>The default return URL in case it was not set previously. If this is null and the return URL was not set previously, &lt;a href=&quot;yii-web-application#%24homeUrl-detail&quot;&gt;yii\web\Application::$homeUrl&lt;/a&gt; will be redirected to. Please refer to &lt;a href=&quot;yii-web-user#setReturnUrl()-detail&quot;&gt;setReturnUrl()&lt;/a&gt; on accepted format of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9536e75d530b4f984709833e739c1580e86ca460" translate="yes" xml:space="preserve">
          <source>The default return URL in case it was not set previously. If this is null and the return URL was not set previously, &lt;a href=&quot;yii-web-application#%24homeUrl-detail&quot;&gt;yii\web\Application::$homeUrl&lt;/a&gt; will be redirected to. Please refer to &lt;a href=&quot;yii-web-user#setReturnUrl()-detail&quot;&gt;yii\web\User::setReturnUrl()&lt;/a&gt; on accepted format of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cf5d07d5e06e4c780f653f0a6d44a54534ded7" translate="yes" xml:space="preserve">
          <source>The default route of this application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb83cd044c76e7aa753fb86d1ca901c4f7925f5" translate="yes" xml:space="preserve">
          <source>The default route of this application. Defaults to 'help', meaning the &lt;code&gt;help&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c94855e1b3e02b4bae209862d49a404ebbdf43" translate="yes" xml:space="preserve">
          <source>The default route of this application. Defaults to 'site'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5e5a22d21d853032e50916897cbc13d1dc795d" translate="yes" xml:space="preserve">
          <source>The default route of this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368064c8fa82086e9d8f2892b04fd6b327905d08" translate="yes" xml:space="preserve">
          <source>The default route of this module. Defaults to &lt;code&gt;default&lt;/code&gt;. The route may consist of child module ID, controller ID, and/or action ID. For example, &lt;code&gt;help&lt;/code&gt;, &lt;code&gt;post/create&lt;/code&gt;, &lt;code&gt;admin/post/create&lt;/code&gt;. If action ID is not given, it will take the default value as specified in &lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;yii\base\Controller::$defaultAction&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0db15a924578feb5f78cd50a97150af2083c91b" translate="yes" xml:space="preserve">
          <source>The default schema name used for the current session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41780d19dcd40d2f731a84461222fba936c2cebb" translate="yes" xml:space="preserve">
          <source>The default schema used for the current session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20c5d7ccd803227d3bc59075ce7bce43e298001" translate="yes" xml:space="preserve">
          <source>The default value expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea1d54835b7004d60da1996ec1b6503066459dc" translate="yes" xml:space="preserve">
          <source>The default value for the &lt;a href=&quot;yii-base-application#%24sourceLanguage-detail&quot;&gt;source language&lt;/a&gt; is &lt;code&gt;en-US&lt;/code&gt;, meaning US English. It is &lt;strong&gt;recommended&lt;/strong&gt; that you keep this default value unchanged. Usually it is much easier to find people who can translate from &quot;English to other languages&quot; than from &quot;non-English to non-English&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c5b24c17108fed775d75a6e41c628d3d25ea20" translate="yes" xml:space="preserve">
          <source>The default value of the option or argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a8326409c23a7d3bcebd683aa0ec1a38c01b41" translate="yes" xml:space="preserve">
          <source>The default value or an anonymous function that returns the default value which will be assigned to the attributes being validated if they are empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6e484452e499db8f39bd2d1fe89c7471b14d8b" translate="yes" xml:space="preserve">
          <source>The default value or an anonymous function that returns the default value which will be assigned to the attributes being validated if they are empty. The signature of the anonymous function should be as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72496e51bc3e7048fac00cfd4bf4bd1e296600e2" translate="yes" xml:space="preserve">
          <source>The default value to be returned if the specified array key does not exist. Not used when getting value from an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dd008f89ba602c7773528de4ebde70730fbc8e" translate="yes" xml:space="preserve">
          <source>The default value to be returned if the specified key does not exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6539eb4a2fb804b7c41cc237a2b7f74394a3ff" translate="yes" xml:space="preserve">
          <source>The default value to be returned when the session variable does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175f9e59ae6d8d45a5ecbc8d3bf95ccec9b46335" translate="yes" xml:space="preserve">
          <source>The default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c757204c5e41f7c8f2e9b95f5ad55d204df25caf" translate="yes" xml:space="preserve">
          <source>The default view file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0639f4a0494ac6235877df2165d849a51c4f0d" translate="yes" xml:space="preserve">
          <source>The default view file extension. This will be appended to view file names if they don't have file extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36eb531b254c2c8e7a7755df7451e41b3ad03914" translate="yes" xml:space="preserve">
          <source>The definition associated with &lt;code&gt;$class&lt;/code&gt;. It can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc836a1c17de37b269e68f2188f8bafac8b33e6" translate="yes" xml:space="preserve">
          <source>The definition associated with &lt;code&gt;$class&lt;/code&gt;. See &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a40b2748e9c7101a90b56b1da45f55350b8c32d" translate="yes" xml:space="preserve">
          <source>The delete operation. This is mainly used when overriding &lt;a href=&quot;yii-db-activerecord#transactions()-detail&quot;&gt;transactions()&lt;/a&gt; to specify which operations are transactional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1abb089416ca0b705976a319bb03b07aecbe0d1" translate="yes" xml:space="preserve">
          <source>The delete operation. This is mainly used when overriding &lt;a href=&quot;yii-sphinx-activerecord#transactions()-detail&quot;&gt;transactions()&lt;/a&gt; to specify which operations are transactional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfe8e74b72455dcf24f057e3e9509bd8846885b" translate="yes" xml:space="preserve">
          <source>The dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebd9c08033e874469e537f3fd15767e29814991" translate="yes" xml:space="preserve">
          <source>The dependencies of the specified class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a15f3b3d6f1ec8d10aeb6baf02242cd28589b9" translate="yes" xml:space="preserve">
          <source>The dependency also ensures, that the fixtures are loaded and unloaded in a well defined order. In the above example &lt;code&gt;UserFixture&lt;/code&gt; will always be loaded before &lt;code&gt;UserProfileFixture&lt;/code&gt; to ensure all foreign key references exist and will be unloaded after &lt;code&gt;UserProfileFixture&lt;/code&gt; has been unloaded for the same reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcd6bd4d4380d9272791b856c7af63710753df6" translate="yes" xml:space="preserve">
          <source>The dependency data that is saved in cache and later is compared with the latest dependency data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c6d921b4a17674d0976ea89888c2014116415f" translate="yes" xml:space="preserve">
          <source>The dependency injection (DI) container used by &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;createObject()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3905de12845cc2691d060aa70881c70a17afd96" translate="yes" xml:space="preserve">
          <source>The dependency injection (DI) container used by &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;createObject()&lt;/a&gt;. You may use &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;yii\di\Container::set()&lt;/a&gt; to set up the needed dependencies of classes and their initial property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44320b4a16eb0fc760588c0933d68d51f09bcd18" translate="yes" xml:space="preserve">
          <source>The dependency that the cached content depends on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e1dcad9da063ae15725f803fb8e6ea89888540" translate="yes" xml:space="preserve">
          <source>The dependency that the cached content depends on. This can be either a &lt;a href=&quot;yii-caching-dependency&quot;&gt;yii\caching\Dependency&lt;/a&gt; object or a configuration array for creating the dependency object. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14076f9378324bc06bd231f0be1ecf8fa07881f8" translate="yes" xml:space="preserve">
          <source>The dependency to be associated with the cached query result for this command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424b17b4a0ef1a50b9fb443e9bbe2e357469cd36" translate="yes" xml:space="preserve">
          <source>The derived key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e0936a1cb379524a7e95dc306f3e843d8aec3a" translate="yes" xml:space="preserve">
          <source>The desired portion length. If not specified or &lt;code&gt;null&lt;/code&gt;, there will be no limit on length i.e. the output will be until the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd884b3db90ecdb429fe37f3ce43394a3b782748" translate="yes" xml:space="preserve">
          <source>The desired value that the attribute must have.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dc2329504d2ea2c6afe1a830739b7ba396f2ff" translate="yes" xml:space="preserve">
          <source>The desired value that the attribute must have. If this is null, the validator will validate that the specified attribute is not empty. If this is set as a value that is not null, the validator will validate that the attribute has a value that is the same as this property value. Defaults to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207cda7d7615dc0a9f9168637a647c718a6e800b" translate="yes" xml:space="preserve">
          <source>The destination directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa59586f2ccbca88c3c4348d6f5a44d04456e4e" translate="yes" xml:space="preserve">
          <source>The detached behavior. Null if the behavior does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a80193328f6c724ed2e0474f384bf5f9670639f" translate="yes" xml:space="preserve">
          <source>The detailed description of the generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c1bd6a05b548460dcf7d9b418b73ab32c4e9e9" translate="yes" xml:space="preserve">
          <source>The detailed help information for the specified action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b53ddb64c3daa149d958a949e28990bbf0219e1" translate="yes" xml:space="preserve">
          <source>The directory can be specified in Yii's standard convention using @, // and / prefixes or no prefix for view relative directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9f0dd7e434169720d82343a33a2ce5624f37f4" translate="yes" xml:space="preserve">
          <source>The directory containing the migration classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ed83fbe680b49bd8b2d0104d0216b6d1dc6c17" translate="yes" xml:space="preserve">
          <source>The directory containing the migration classes. This can be either a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; or a directory path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbc969dbb0337d96a364740030ad3220ce0a772" translate="yes" xml:space="preserve">
          <source>The directory containing the view files for this controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bacaa5e25c327c6ed7ae4875a8385d709f716b" translate="yes" xml:space="preserve">
          <source>The directory containing the view files for this widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cca5fc2635f57bd9bf451c13b2345275089a6c" translate="yes" xml:space="preserve">
          <source>The directory or path alias pointing to where Smarty cache will be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c120d951a60a9268a2240caac68a6814500e4b49" translate="yes" xml:space="preserve">
          <source>The directory or path alias pointing to where Smarty compiled templates will be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869fe849162880ee932708e6b48950e065b86f8a" translate="yes" xml:space="preserve">
          <source>The directory or path alias pointing to where Twig cache will be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de9f52b2e89c08f577989ad85fe21db49147699" translate="yes" xml:space="preserve">
          <source>The directory or path alias pointing to where Twig cache will be stored. Set to false to disable templates cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792e6176ba1780272ebd8f3b0d73460a9cac77dc" translate="yes" xml:space="preserve">
          <source>The directory separator to be used in the normalized result. Defaults to &lt;code&gt;DIRECTORY_SEPARATOR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95837a129bcfa95bfc4002a86b909f264fd8f5e0" translate="yes" xml:space="preserve">
          <source>The directory storing the debugger data files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61d9b1dfd3a4be79eae6075980de18932f5e839" translate="yes" xml:space="preserve">
          <source>The directory storing the debugger data files. This can be specified using a path alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46240e9ce3175f5b6f9673d52fb933aae92d7315" translate="yes" xml:space="preserve">
          <source>The directory that contains the controller classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d5c2382aa7b209d6cf075b00c90dec75cdff90" translate="yes" xml:space="preserve">
          <source>The directory that contains the module class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a39a613d3404582218986f01c9f84e381de02f5" translate="yes" xml:space="preserve">
          <source>The directory that contains the source asset files for this asset bundle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace3c5fc9f132f6d9ad083d9541c6770558610d2" translate="yes" xml:space="preserve">
          <source>The directory that contains the source asset files for this asset bundle. A source asset file is a file that is part of your source code repository of your Web application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e232b494459643bca21e3d3ce95df7c7263cad" translate="yes" xml:space="preserve">
          <source>The directory that contains the view files for composing mail messages Defaults to '@app/mail'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b831c6db14d273a327c19a4f4822aaf2f2a444" translate="yes" xml:space="preserve">
          <source>The directory that contains the view files for composing mail messages This can be specified as an absolute path or a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2aa14a0f48e2193ba55f684f5752c1fcfcbfd7" translate="yes" xml:space="preserve">
          <source>The directory that stores runtime files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816e90aa835f679eaa54d6a11555c5e76a771c54" translate="yes" xml:space="preserve">
          <source>The directory that stores runtime files. Defaults to the &quot;runtime&quot; subdirectory under &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9facf1d10cb41a2a42acb64b6ba99f049749e6a7" translate="yes" xml:space="preserve">
          <source>The directory that stores vendor files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b101627bc1399456c3fd689e856fc7d3218f3701" translate="yes" xml:space="preserve">
          <source>The directory that stores vendor files. Defaults to &quot;vendor&quot; directory under &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae5af2cd675e83d90dae4bbb6441b2c05c60e59" translate="yes" xml:space="preserve">
          <source>The directory the $asset is relative to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5202623fef118a654f2662e2ea43c21c3f1f9fc4" translate="yes" xml:space="preserve">
          <source>The directory to be deleted recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd932fa99457d12653a11eef6f4e6803ba9b1990" translate="yes" xml:space="preserve">
          <source>The directory to store cache files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b69da2bd91cbc06d89236ebccb0bfedaa53f4ad" translate="yes" xml:space="preserve">
          <source>The directory to store cache files. You may use &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; here. If not set, it will use the &quot;cache&quot; subdirectory under the application runtime path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf3ab7a76275d6b9ac285c322e33391fd144739" translate="yes" xml:space="preserve">
          <source>The directory to store mutex files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91515d1083d62d2829a70474e31b6e0ef15bf3a3" translate="yes" xml:space="preserve">
          <source>The directory to store mutex files. You may use &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; here. Defaults to the &quot;mutex&quot; subdirectory under the application runtime path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a757594eeea5bcced9bdff88d6e85e8f18ee3d" translate="yes" xml:space="preserve">
          <source>The directory under which expired cache files are removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539315e81bb26d22fbb5aa9b23c71f3cf82b9d72" translate="yes" xml:space="preserve">
          <source>The directory under which the files will be looked for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfe9635b8f321b250b999c775e79fd41e6198ea" translate="yes" xml:space="preserve">
          <source>The directory where the email messages are saved when &lt;a href=&quot;yii-mail-basemailer#%24useFileTransport-detail&quot;&gt;$useFileTransport&lt;/a&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076c8ba5f309335c413723714db0660701e82abc" translate="yes" xml:space="preserve">
          <source>The documents id. If not specified Id will be automatically chosen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e7a4e7ae1ed6fb765df97bb8ea9c77b4f5587f" translate="yes" xml:space="preserve">
          <source>The drawback of the above code is that you would have to call &lt;code&gt;trim()&lt;/code&gt; everywhere in your code where you might set the &lt;code&gt;label&lt;/code&gt; property. If, in the future, the &lt;code&gt;label&lt;/code&gt; property gets a new requirement, such as the first letter must be capitalized, you would again have to modify every bit of code that assigns a value to &lt;code&gt;label&lt;/code&gt;. The repetition of code leads to bugs, and is a practice you want to avoid as much as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4897faa46cf609c77f9a2e1f39ee532c3e4b4c0c" translate="yes" xml:space="preserve">
          <source>The driver-specific options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a451b7d3a3bb76741b0e907c7198867fffef295" translate="yes" xml:space="preserve">
          <source>The dropdown items configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3eac7a342a80ea4a0f560060eb04dc0c4b347a2" translate="yes" xml:space="preserve">
          <source>The dynamic attributes (name-value pairs, or names) being defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0bda5aec0bfa7299ccde73f5bf8e92aea7925c" translate="yes" xml:space="preserve">
          <source>The effect of this method call is the same as the user pressing the refresh button of his browser (without re-posting data).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3c7322e91285a1a6d5b518066bfd67e243ff43" translate="yes" xml:space="preserve">
          <source>The elasticsearch cluster nodes to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309ca829d7fb6e5533bd756cd887d0c023e87332" translate="yes" xml:space="preserve">
          <source>The elasticsearch connection object or the application component ID of the elasticsearch connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b874140e9d70a0bcb9f0414a9043ba4f5841622" translate="yes" xml:space="preserve">
          <source>The element at the offset, null if no element is found at the offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6952e6b8cbf8279cd21902cf2d61110cb5d11e06" translate="yes" xml:space="preserve">
          <source>The element value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024f61556f6b32f98bcddf11935e45a473a90fe7" translate="yes" xml:space="preserve">
          <source>The encoded content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf06d9ae72d1a0826452c199d3f05e0ac323a600" translate="yes" xml:space="preserve">
          <source>The encoded data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505a69df14c4d0b20686f4550c7a23912b09ccdb" translate="yes" xml:space="preserve">
          <source>The encoded message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318f4f8dfd48b48d12941c695e36c4b8ab552234" translate="yes" xml:space="preserve">
          <source>The encoding of the string value to be validated (e.g. 'UTF-8').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c96347e742d5b5b8c83d06dfc7cd4b65e7e6a9f" translate="yes" xml:space="preserve">
          <source>The encoding of the string value to be validated (e.g. 'UTF-8'). If this property is not set, &lt;a href=&quot;yii-base-application#%24charset-detail&quot;&gt;yii\base\Application::$charset&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab12e7261c19e3edd7da892378397010aa803e0b" translate="yes" xml:space="preserve">
          <source>The encoding options passed to &lt;a href=&quot;yii-helpers-basejson#encode()-detail&quot;&gt;yii\helpers\Json::encode()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede96d1180a695eb571656f55ed4b55404f1a29f" translate="yes" xml:space="preserve">
          <source>The encoding options passed to &lt;a href=&quot;yii-helpers-basejson#encode()-detail&quot;&gt;yii\helpers\Json::encode()&lt;/a&gt;. For more details please refer to &lt;a href=&quot;http://www.php.net/manual/en/function.json-encode.php&quot;&gt;http://www.php.net/manual/en/function.json-encode.php&lt;/a&gt;. Default is &lt;code&gt;JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE&lt;/code&gt;. This property has no effect, when &lt;a href=&quot;yii-web-jsonresponseformatter#%24useJsonp-detail&quot;&gt;$useJsonp&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11dc409471184d47b8a1f31dcecf6b7b7c1e518" translate="yes" xml:space="preserve">
          <source>The encoding options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4aac29472255731397071bf110ba2de28da1df4" translate="yes" xml:space="preserve">
          <source>The encoding options. For more details please refer to &lt;a href=&quot;http://www.php.net/manual/en/function.json-encode.php&quot;&gt;http://www.php.net/manual/en/function.json-encode.php&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a75420395286a6af40bb99c17f7428e37d9c4b2" translate="yes" xml:space="preserve">
          <source>The encoding options. For more details please refer to &lt;a href=&quot;http://www.php.net/manual/en/function.json-encode.php&quot;&gt;http://www.php.net/manual/en/function.json-encode.php&lt;/a&gt;. Default is &lt;code&gt;JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba5522c092bf8aa87abcc6f310efb20ff31def7" translate="yes" xml:space="preserve">
          <source>The encoding result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d185bfb48711b552d463ac6450ff923d5d2e5f90" translate="yes" xml:space="preserve">
          <source>The encoding result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38689dd881197a36eada88d042fe432ce08fdb62" translate="yes" xml:space="preserve">
          <source>The encrypted data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36de76abff54e633a2ffad12c05d459d4814d492" translate="yes" xml:space="preserve">
          <source>The encrypted data to decrypt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460bbbca463f2e079923b12cf6bee0a8802e57a1" translate="yes" xml:space="preserve">
          <source>The encryption password or key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6efa90e6f7485355c29b634e9d69007128500f" translate="yes" xml:space="preserve">
          <source>The english word to singularize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d7b2bf4535f6eff7e8a80f8c00f967001f53b8" translate="yes" xml:space="preserve">
          <source>The entity tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84decb789172b73df2dfcf5781a2cae89ecf04a6" translate="yes" xml:space="preserve">
          <source>The entry script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc4e82f8ac474c4e070b7bd8388e04b6af5b600" translate="yes" xml:space="preserve">
          <source>The entry script URL that is used by &lt;a href=&quot;yii-web-urlmanager#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt; to prepend to created URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b87ea530f442562e04f11f8d4012e9ad44e9355" translate="yes" xml:space="preserve">
          <source>The entry script calls &lt;a href=&quot;yii-base-application#run()-detail&quot;&gt;yii\base\Application::run()&lt;/a&gt; to run the application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2076cfd6c812c7f24bd3541939f1d950de7de3fe" translate="yes" xml:space="preserve">
          <source>The entry script creates a new instance of the application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fd6001d05dabd86b87b1a24ea742283a49d621" translate="yes" xml:space="preserve">
          <source>The entry script file path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2ccf461841549856fa9d4bedae70d6e0003480" translate="yes" xml:space="preserve">
          <source>The entry script file path can normally be determined based on the &lt;code&gt;SCRIPT_FILENAME&lt;/code&gt; SERVER variable. However, for some server configurations, this may not be correct or feasible. This setter is provided so that the entry script file path can be manually specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9392500c07b34b347e28bcdbf9f6b3063ceba55f" translate="yes" xml:space="preserve">
          <source>The entry script file path normally can be obtained from &lt;code&gt;$_SERVER['SCRIPT_FILENAME']&lt;/code&gt;. If your server configuration does not return the correct value, you may configure this property to make it right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9d119098cbfc4cc0fdeb463d181b3022854d09" translate="yes" xml:space="preserve">
          <source>The entry script file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834329909840a09c04fdce12807dc019c8a80596" translate="yes" xml:space="preserve">
          <source>The entry script file path. This can be either a file path or a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102af40d6e80592d9040df0c362de3adce8c5662" translate="yes" xml:space="preserve">
          <source>The entry script loads the application configuration as an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd9237c09e18b9c4db3d539725ccfda53879a6d" translate="yes" xml:space="preserve">
          <source>The entry script receives the exit status from the application and completes the request processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5d419bcb7da634fd0bf25f990053a80acf9868" translate="yes" xml:space="preserve">
          <source>The error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1491492203a837c9742e92cb76d83ebe725f86dd" translate="yes" xml:space="preserve">
          <source>The error handler application component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e0c226f5b38a96ad0c5ae1386b91c3226ffada" translate="yes" xml:space="preserve">
          <source>The error handler displays errors according to the format setting of the &lt;a href=&quot;guide-runtime-responses&quot;&gt;response&lt;/a&gt;. If the &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;response format&lt;/a&gt; is &lt;code&gt;html&lt;/code&gt;, it will use the error or exception view to display errors, as described in the last subsection. For other response formats, the error handler will assign the array representation of the exception to the &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;yii\web\Response::$data&lt;/a&gt; property which will then be converted to different formats accordingly. For example, if the response format is &lt;code&gt;json&lt;/code&gt;, you may see the following response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74f3e9c7dec65fd26102eb4ec3f7ceba114492b" translate="yes" xml:space="preserve">
          <source>The error info provided by a PDO exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134d7793703bf6fe1e53d6931f290952cdf47e6d" translate="yes" xml:space="preserve">
          <source>The error info provided by a PDO exception. This is the same as returned by &lt;a href=&quot;http://www.php.net/manual/en/pdo.errorinfo.php&quot;&gt;PDO::errorInfo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1c6503fa58a014e64e7ee7a3a77c3d5d8d0c4a" translate="yes" xml:space="preserve">
          <source>The error message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9f4a04e2ba9ef76df00aa76dd81e50631cfb1f" translate="yes" xml:space="preserve">
          <source>The error message and the parameters to be inserted into the error message. Null should be returned if the data is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a865e2d1123377436104aecb31bad55c767c703" translate="yes" xml:space="preserve">
          <source>The error message array indexed by the attribute IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd611fdab418d20b23fe73e8aa3315bfca9f085" translate="yes" xml:space="preserve">
          <source>The error message to be returned, if the validation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf7143e725e2c56e49d6df30bd9358e4f2f48c3" translate="yes" xml:space="preserve">
          <source>The error message used if the count of multiple uploads exceeds limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4654080b87e732f706ce783898c95814a5dce5f5" translate="yes" xml:space="preserve">
          <source>The error message used if the count of multiple uploads exceeds limit. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b842b5ef367082ff358a2bb9d4056e928b31ce76" translate="yes" xml:space="preserve">
          <source>The error message used when a file is not uploaded correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4e381fb355fbb6d65ddfc799ef76b6ff80ad18" translate="yes" xml:space="preserve">
          <source>The error message used when no file is uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7191d1249a0c6af51f2806820828699dcb11a636" translate="yes" xml:space="preserve">
          <source>The error message used when no file is uploaded. Note that this is the text of the validation error message. To make uploading files required, you have to set &lt;a href=&quot;yii-validators-validator#%24skipOnEmpty-detail&quot;&gt;$skipOnEmpty&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0548f5e4504b6bbff77b69be04aaab4ac4f01550" translate="yes" xml:space="preserve">
          <source>The error message used when the file has an mime type that is not allowed by &lt;a href=&quot;yii-validators-filevalidator#%24mimeTypes-detail&quot;&gt;$mimeTypes&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cce5aa86788cbe302f171ec8f6eee9160e77e18" translate="yes" xml:space="preserve">
          <source>The error message used when the file has an mime type that is not allowed by &lt;a href=&quot;yii-validators-filevalidator#%24mimeTypes-detail&quot;&gt;$mimeTypes&lt;/a&gt; property. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fe9af5cfeae82fe5c26bcd865242e9b9140421" translate="yes" xml:space="preserve">
          <source>The error message used when the image is over &lt;a href=&quot;yii-validators-imagevalidator#%24maxHeight-detail&quot;&gt;$maxHeight&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0720bc3cff807174b3921fffd40e74e9aff8d62c" translate="yes" xml:space="preserve">
          <source>The error message used when the image is over &lt;a href=&quot;yii-validators-imagevalidator#%24maxHeight-detail&quot;&gt;$maxHeight&lt;/a&gt;. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c282b2d7c3cf69fcc0ad3d2e2f4fe3e8d660e72" translate="yes" xml:space="preserve">
          <source>The error message used when the image is over &lt;a href=&quot;yii-validators-imagevalidator#%24maxWidth-detail&quot;&gt;$maxWidth&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcd63d97d07b2ab1fc8cb58b990d97c0ed4d792" translate="yes" xml:space="preserve">
          <source>The error message used when the image is over &lt;a href=&quot;yii-validators-imagevalidator#%24maxWidth-detail&quot;&gt;$maxWidth&lt;/a&gt;. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8572a4cd0fab655fe6e4ed3dfd349691d146cd" translate="yes" xml:space="preserve">
          <source>The error message used when the image is under &lt;a href=&quot;yii-validators-imagevalidator#%24minHeight-detail&quot;&gt;$minHeight&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b39c144a3cda6020c21ea147c8dd42b07e21fd0" translate="yes" xml:space="preserve">
          <source>The error message used when the image is under &lt;a href=&quot;yii-validators-imagevalidator#%24minHeight-detail&quot;&gt;$minHeight&lt;/a&gt;. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeaa0db01548296e79f0c3cf73a58b8047835d75" translate="yes" xml:space="preserve">
          <source>The error message used when the image is under &lt;a href=&quot;yii-validators-imagevalidator#%24minWidth-detail&quot;&gt;$minWidth&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e8db0c030f88dae5699c6786f83293a6fb4ef6" translate="yes" xml:space="preserve">
          <source>The error message used when the image is under &lt;a href=&quot;yii-validators-imagevalidator#%24minWidth-detail&quot;&gt;$minWidth&lt;/a&gt;. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fdd3594c4ed78ccd9b3c80bf582bc8a3b7a5810" translate="yes" xml:space="preserve">
          <source>The error message used when the uploaded file has an extension name that is not listed in &lt;a href=&quot;yii-validators-filevalidator#%24extensions-detail&quot;&gt;$extensions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7311b66197399ab5c6bc39af7e8a76f7a8cb98a3" translate="yes" xml:space="preserve">
          <source>The error message used when the uploaded file has an extension name that is not listed in &lt;a href=&quot;yii-validators-filevalidator#%24extensions-detail&quot;&gt;$extensions&lt;/a&gt;. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee5411e9c389f6bd659e2274f55b0c1f56cabe9" translate="yes" xml:space="preserve">
          <source>The error message used when the uploaded file is not an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6522dc8fa9d3eca6f236bfeda288ab85ce6d11eb" translate="yes" xml:space="preserve">
          <source>The error message used when the uploaded file is not an image. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85990952a7723c731263a3e9c0924daf8e5444e" translate="yes" xml:space="preserve">
          <source>The error message used when the uploaded file is too large.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de535171ec34ce2174c2590d0f0fa85ac9eea757" translate="yes" xml:space="preserve">
          <source>The error message used when the uploaded file is too large. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fbf7d51a3679480362448d296e03b7faff2bf1" translate="yes" xml:space="preserve">
          <source>The error message used when the uploaded file is too small.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbefa9b96c524d1e4b772919a616da15e2bc1ee5" translate="yes" xml:space="preserve">
          <source>The error message used when the uploaded file is too small. You may use the following tokens in the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0628012c2d77c4a62f2562528b964f8e826cdc" translate="yes" xml:space="preserve">
          <source>The error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f114bab0f8d6de300304d102e86111371f8d31a" translate="yes" xml:space="preserve">
          <source>The error message. Null is returned if no error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e392f0c07e4e4851642c83cf1cc7e38397d1e638" translate="yes" xml:space="preserve">
          <source>The error occurred while saving the code file, or true if no error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818fd6ca56934a45d85db822350c21d5d86d607a" translate="yes" xml:space="preserve">
          <source>The escaped result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fd03a372cdccb647736b0be288a14ad4a91567" translate="yes" xml:space="preserve">
          <source>The event handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6da26182b6cb5aaa38c1cfc38aed718670c4e31" translate="yes" xml:space="preserve">
          <source>The event handler must be a valid PHP callback. The following are some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854ef24a21d691468f5c1436611d3669ce7326d4" translate="yes" xml:space="preserve">
          <source>The event handler must be defined with the following signature,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c845416050cf40574c52fc2665f561d4af748a5f" translate="yes" xml:space="preserve">
          <source>The event handler to be removed. If it is &lt;code&gt;null&lt;/code&gt;, all handlers attached to the named event will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bdd80cd8309f78edc0c0ab8ced48528e667b24" translate="yes" xml:space="preserve">
          <source>The event handler to be removed. If it is null, all handlers attached to the named event will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c7e8b2e151c842080a470597cfe50cd9a39866" translate="yes" xml:space="preserve">
          <source>The event handler will be invoked whenever an instance of &lt;a href=&quot;yii-db-activerecord&quot;&gt;ActiveRecord&lt;/a&gt;, or one of its child classes, triggers the &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; event. In the handler, you can get the object that triggered the event through &lt;code&gt;$event-&amp;gt;sender&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61c356406816c3aed4fe110b0f8dfd17e337bca" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19aadd5a9126b1853102af12bbea17cdfdb7c4e6" translate="yes" xml:space="preserve">
          <source>The event handlers for the underlying Bootstrap JS plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c7a17fa2fa314ece6e5818886b2f1ca52a39f3" translate="yes" xml:space="preserve">
          <source>The event handlers for the underlying Bootstrap JS plugin. Please refer to the corresponding Bootstrap plugin Web page for possible events. For example, &lt;a href=&quot;http://getbootstrap.com/javascript/#modals&quot;&gt;this page&lt;/a&gt; shows how to use the &quot;Modal&quot; plugin and the supported events (e.g. &quot;shown&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa00f8d528b7ce0c0be1d1bb98f721b7b6ac92e0" translate="yes" xml:space="preserve">
          <source>The event handlers for the underlying jQuery UI widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde14a8b7c2899cec57505c3bff1322cf9b1f679" translate="yes" xml:space="preserve">
          <source>The event handlers for the underlying jQuery UI widget. Please refer to the corresponding jQuery UI widget Web page for possible events. For example, &lt;a href=&quot;http://api.jqueryui.com/accordion/&quot;&gt;this page&lt;/a&gt; shows how to use the &quot;Accordion&quot; widget and the supported events (e.g. &quot;create&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3480ae5fa3bae88d11d0b224ff60709d3f8daf82" translate="yes" xml:space="preserve">
          <source>The event handlers for the underlying jQuery UI widget. Please refer to the corresponding jQuery UI widget Web page for possible events. For example, &lt;a href=&quot;http://api.jqueryui.com/accordion/&quot;&gt;this page&lt;/a&gt; shows how to use the &quot;Accordion&quot; widget and the supported events (e.g. &quot;create&quot;). Keys are the event names and values are javascript code that is passed to the &lt;code&gt;.on()&lt;/code&gt; function as the event handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868872efc697d716e8a99c7c5beeaf28f7a8d16b" translate="yes" xml:space="preserve">
          <source>The event name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5a07e9e7870dabb698dfc0bc38ef6c1ac5454f" translate="yes" xml:space="preserve">
          <source>The event name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d98c287beb9ee42576ec087bdbef64e979b82d" translate="yes" xml:space="preserve">
          <source>The event name. This property is set by &lt;a href=&quot;yii-base-component#trigger()-detail&quot;&gt;yii\base\Component::trigger()&lt;/a&gt; and &lt;a href=&quot;yii-base-event#trigger()-detail&quot;&gt;trigger()&lt;/a&gt;. Event handlers may use this property to check what event it is handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f05e6040a24e19bfa38f00ed65d774430bc526" translate="yes" xml:space="preserve">
          <source>The event parameter is an instance of &lt;a href=&quot;yii-base-actionevent&quot;&gt;yii\base\ActionEvent&lt;/a&gt;. An event handler may set the &lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii\base\ActionEvent::$isValid&lt;/a&gt; property to be &lt;code&gt;false&lt;/code&gt; to stop running the action. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727a462fb517d6e0bef0972be2b8492cfe13dc27" translate="yes" xml:space="preserve">
          <source>The event parameter is an instance of &lt;a href=&quot;yii-base-actionevent&quot;&gt;yii\base\ActionEvent&lt;/a&gt;. Through the &lt;a href=&quot;yii-base-actionevent#%24result-detail&quot;&gt;yii\base\ActionEvent::$result&lt;/a&gt; property, an event handler may access or modify the action result. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d741fb4c909f442eade3ac95c6b1da5cf4f2fda" translate="yes" xml:space="preserve">
          <source>The event parameter. If not set, a default &lt;a href=&quot;yii-base-event&quot;&gt;yii\base\Event&lt;/a&gt; object will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830edf6f74de07d2a32dc228b0aa40574eb5c4a0" translate="yes" xml:space="preserve">
          <source>The event that triggers the current attribute updating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24856159936b81b0f02befb8da511780d787e5e4" translate="yes" xml:space="preserve">
          <source>The exception being converted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14debb977e682099eb82c6f16ce3de4548079ec5" translate="yes" xml:space="preserve">
          <source>The exception object, normally is filled on &lt;a href=&quot;yii-web-erroraction#init()-detail&quot;&gt;init()&lt;/a&gt; method call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b221e820de3c1366b9cdb27e6e96232c45d5ee" translate="yes" xml:space="preserve">
          <source>The exception object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ca7f3ab5593521390482f4bcc4f62a10a1b502" translate="yes" xml:space="preserve">
          <source>The exception that is being handled currently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6f09c333c167c83fa5de90d89e5b445625113b" translate="yes" xml:space="preserve">
          <source>The exception that is not caught</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac606e15e1b74a8463fc251ec8ee38cc6467705" translate="yes" xml:space="preserve">
          <source>The exception to be logged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efff75b20ca5171a92c833697f658d364e84d1b" translate="yes" xml:space="preserve">
          <source>The exception to be rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f87c0c55c0ee3bdc10a72ebc5ddedc8dc51cf0" translate="yes" xml:space="preserve">
          <source>The exception to convert to a PHP error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a20a7ea5845813c61376a006bcf8d8b6a4ef3a" translate="yes" xml:space="preserve">
          <source>The exception whose precursors should be rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ff62cc609d9216130492a8296212e5c87a6077" translate="yes" xml:space="preserve">
          <source>The execution of &lt;a href=&quot;http://redis.io/commands&quot;&gt;redis commands&lt;/a&gt; is possible with via &lt;a href=&quot;yii-redis-connection#executeCommand()-detail&quot;&gt;executeCommand()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd43dac01aa998c3fcb9d82e4fbcd220d5d50e65" translate="yes" xml:space="preserve">
          <source>The existing SQL (without ORDER BY/LIMIT/OFFSET)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1512f91bef7ab4ecaab0177a683734adc0dcd5a1" translate="yes" xml:space="preserve">
          <source>The exit status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46009259ed4b89c1dca1214323a202473a149e0" translate="yes" xml:space="preserve">
          <source>The exit status (0 means normal, non-zero values mean abnormal)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f225efcaaea68f0d7d5027df0cfa8eeadb6808" translate="yes" xml:space="preserve">
          <source>The exit status (value 0 means normal exit while other values mean abnormal exit).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e95a31342a5e5cb1c54292d4f26c09869f9f05" translate="yes" xml:space="preserve">
          <source>The exit status code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a502d88f2de6db5dcac6b71118e27f419a0d677c" translate="yes" xml:space="preserve">
          <source>The exit status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad98a798784f81060354ecfccaff1773c93d50b2" translate="yes" xml:space="preserve">
          <source>The exit status. Exit statuses should be in the range 0 to 254. The status 0 means the program terminates successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d3069710e0abeac214cb48094a724b8988bcd0" translate="yes" xml:space="preserve">
          <source>The expression object itself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fd7fd7f2d93270c9a19be9c4d9561946affa48" translate="yes" xml:space="preserve">
          <source>The expression parameters to be populated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9b1ee96cbe3224046deb161f7196e4f914bf5f" translate="yes" xml:space="preserve">
          <source>The expression result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47be04946e01ea4b6b231cb7276df102b62d137" translate="yes" xml:space="preserve">
          <source>The expression string which is needed to prepare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89538a28771b4a0f7ecba6d70ee08166d9fbb948" translate="yes" xml:space="preserve">
          <source>The extensions corresponding to the specified MIME type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c871d58e5c04ee24bf8c84e457f1befb48821c46" translate="yes" xml:space="preserve">
          <source>The extracted messages can be saved the following depending on &lt;code&gt;format&lt;/code&gt; setting in config file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb2dd4721f530b395c62fbcbb3225f1753a796c" translate="yes" xml:space="preserve">
          <source>The extracted part of file or &lt;code&gt;false&lt;/code&gt; on failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bbe5a29f9a87764f39d50341074af62d0c6d3f" translate="yes" xml:space="preserve">
          <source>The extracted part of string, or FALSE on failure or an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8d090e8144978725228407a8153176e0751a7e" translate="yes" xml:space="preserve">
          <source>The fallback implementation does NOT support the &lt;a href=&quot;http://www.php.net/manual/en/messageformatter.formatmessage.php&quot;&gt;'apostrophe-friendly' syntax&lt;/a&gt;. Also messages that are working with the fallback implementation are not necessarily compatible with the PHP intl MessageFormatter so do not rely on the fallback if you are able to install intl extension somehow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e65bdeed08a15be5cf81671c2c4e651e6ac0ae0" translate="yes" xml:space="preserve">
          <source>The fallback implementation only supports the following message formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefc3af8c0b34707ee211d3e839e58bb82ff47e6" translate="yes" xml:space="preserve">
          <source>The field object itself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d82fb347a43fca2b8ff9b922bde57197c27970" translate="yes" xml:space="preserve">
          <source>The field object itself Make sure you call this method before &lt;a href=&quot;yii-bootstrap-activefield#checkboxList()-detail&quot;&gt;checkboxList()&lt;/a&gt; or &lt;a href=&quot;yii-bootstrap-activefield#radioList()-detail&quot;&gt;radioList()&lt;/a&gt; to have any effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d038d1b714f3a4f51138ef55a90c7441592936" translate="yes" xml:space="preserve">
          <source>The field object itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfc9d639622270e4b8a56697f2864bbc086847d" translate="yes" xml:space="preserve">
          <source>The field to query over</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d668984de989d352f7151a7093378240322e4628" translate="yes" xml:space="preserve">
          <source>The fields being requested for exporting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dee85f2ed6386116171d3c688865ae98317413" translate="yes" xml:space="preserve">
          <source>The fields being requested. If empty, all fields as specified by &lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;fields()&lt;/a&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5415483e5669d058ddcab42775b48a0ad92c8888" translate="yes" xml:space="preserve">
          <source>The fields being retrieved from the documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba982529180169373159a7f6d7899589010ebb82" translate="yes" xml:space="preserve">
          <source>The fields being retrieved from the documents. For example, &lt;code&gt;['id', 'name']&lt;/code&gt;. If not set, this option will not be applied to the query and no fields will be returned. In this case the &lt;code&gt;_source&lt;/code&gt; field will be returned by default which can be configured using &lt;a href=&quot;yii-elasticsearch-query#source()-detail&quot;&gt;source()&lt;/a&gt;. Setting this to an empty array will result in no fields being retrieved, which means that only the primaryKey of a record will be available in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153f6db354a285f4c401420f3c21c3a4f1699aac" translate="yes" xml:space="preserve">
          <source>The fields of the results to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c4965d287d2a504d2782a690d960c231f31013" translate="yes" xml:space="preserve">
          <source>The fields of the results to return. For example: &lt;code&gt;['name', 'group_id']&lt;/code&gt;, &lt;code&gt;['name' =&amp;gt; true, '_id' =&amp;gt; false]&lt;/code&gt;. Unless directly excluded, the &quot;_id&quot; field is always returned. If not set, it means selecting all columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000714a75831b464acbeb195e7d16aae6fc0e78b" translate="yes" xml:space="preserve">
          <source>The fields that the output array should contain. Fields not specified in &lt;a href=&quot;yii-base-arrayable#fields()-detail&quot;&gt;fields()&lt;/a&gt; will be ignored. If this parameter is empty, all fields as specified in &lt;a href=&quot;yii-base-arrayable#fields()-detail&quot;&gt;fields()&lt;/a&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d8652613a17aa5cde45dc7e0c5434f42a339e1" translate="yes" xml:space="preserve">
          <source>The fields to be selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935ea2046a52b16829d097d9771fb4c50c6d2d11" translate="yes" xml:space="preserve">
          <source>The file name for saving the message when &lt;a href=&quot;yii-mail-basemailer#%24useFileTransport-detail&quot;&gt;$useFileTransport&lt;/a&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b711b525145b93956ee728f6545899e4cdabc44" translate="yes" xml:space="preserve">
          <source>The file name shown to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3a0912bd547332b639165e238fc8632ab96b81" translate="yes" xml:space="preserve">
          <source>The file name shown to the user. If null, it will be determined from &lt;code&gt;$filePath&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8e058e84bf3bc453cf035cfc7f2bf238000df0" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e183fc3ce1e8c11bbc29994f771eedece2242b44" translate="yes" xml:space="preserve">
          <source>The file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fea34792df4f2c91694af07818eabcae1ef25d5" translate="yes" xml:space="preserve">
          <source>The file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;. If this is not set, it will default to &lt;code&gt;FixturePath/data/TableName.php&lt;/code&gt;, where &lt;code&gt;FixturePath&lt;/code&gt; stands for the directory containing this fixture class, and &lt;code&gt;TableName&lt;/code&gt; stands for the name of the table associated with this fixture. You can set this property to be false to prevent loading any data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232ea8c1e78e75c47f4423b2bfba31d8342aff1c" translate="yes" xml:space="preserve">
          <source>The file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-test-arrayfixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e225c499fa3584fda8f0af1ca2268f6508980d4" translate="yes" xml:space="preserve">
          <source>The file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-test-arrayfixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;. You can set this property to be false to prevent loading any data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88d7d00c9772490c8039364f034fec76fea7451" translate="yes" xml:space="preserve">
          <source>The file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-test-baseactivefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f81a2e6ebdba935ae5059deb9328eb6faa275b" translate="yes" xml:space="preserve">
          <source>The file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-test-baseactivefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;. You can set this property to be false to prevent loading any data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d3944a17d3fef8f93ac9b548b8b6b762576497" translate="yes" xml:space="preserve">
          <source>The file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; whose last modification time is used to check if the dependency has been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b61c05b000a5e596badf9d02915e5472f313731" translate="yes" xml:space="preserve">
          <source>The file path or path alias of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68219e5d5c89a546406a44eb8fbeaafe25200fb0" translate="yes" xml:space="preserve">
          <source>The file path or path alias of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;. If this is not set, it will default to &lt;code&gt;FixturePath/data/Index/Type.php&lt;/code&gt;, where &lt;code&gt;FixturePath&lt;/code&gt; stands for the directory containing this fixture class, &lt;code&gt;Index&lt;/code&gt; stands for the elasticsearch &lt;a href=&quot;yii-elasticsearch-activefixture#%24index-detail&quot;&gt;$index&lt;/a&gt; name and &lt;code&gt;Type&lt;/code&gt; stands for the &lt;a href=&quot;yii-elasticsearch-activefixture#%24type-detail&quot;&gt;$type&lt;/a&gt; associated with this fixture. You can set this property to be false to prevent loading any data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d20dc12eafcc5a3177dc1d78ad2ccf3bd019df" translate="yes" xml:space="preserve">
          <source>The file path or path alias of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4469521b11cbb86c0358a3ea91547c0f2d7e24" translate="yes" xml:space="preserve">
          <source>The file path or path alias of the data file that contains the fixture data to be returned by &lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;. If this is not set, it will default to &lt;code&gt;FixturePath/data/IndexName.php&lt;/code&gt;, where &lt;code&gt;FixturePath&lt;/code&gt; stands for the directory containing this fixture class, and &lt;code&gt;IndexName&lt;/code&gt; stands for the name of the index associated with this fixture. You can set this property to be false to prevent loading any data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3a0ffb6ba802ddabea39025c9144a8908e7463" translate="yes" xml:space="preserve">
          <source>The file path that stores the sticky attribute values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8260032167e2882f44d816b8e69bc036608400e" translate="yes" xml:space="preserve">
          <source>The file path that the new code should be saved to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b070648d3292a0f67918cbcb65ccfd7875fdbde" translate="yes" xml:space="preserve">
          <source>The file path used to save the uploaded file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1c07aa7a4cf8ce2b995427d0e1c9fe9a377c14" translate="yes" xml:space="preserve">
          <source>The file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016a15647104c0d93361760303094323c60d5da4" translate="yes" xml:space="preserve">
          <source>The file should be uploaded using &lt;a href=&quot;yii-widgets-activefield#fileInput()-detail&quot;&gt;yii\widgets\ActiveField::fileInput()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5ebc46f8483cf1267ecf7093dbc7828a243dc3" translate="yes" xml:space="preserve">
          <source>The file to be themed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d51b893140a5f3caa2b65d1acb43f62814f86a7" translate="yes" xml:space="preserve">
          <source>The file/directory path to be normalized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a63bb5de02ec1234fbcbd676b3d4c86053f49a" translate="yes" xml:space="preserve">
          <source>The filename that the error was raised in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c502c48c777e5e46974d2fe8f626821dba13c17" translate="yes" xml:space="preserve">
          <source>The files and sub-directories will also be copied over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91108c1a063a6c4a6ee8c9f07ef299387a89e640" translate="yes" xml:space="preserve">
          <source>The filter part of this search query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7509b0ea48d50ac56fe41295ffa4ab5ea8b15a58" translate="yes" xml:space="preserve">
          <source>The filter part of this search query. This is an array or json string that follows the format of the elasticsearch &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html&quot;&gt;Query DSL&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b401c90f59b2d956223a864397615242673c300" translate="yes" xml:space="preserve">
          <source>The filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4bda36810b06e9c95231202ee5f5c3c88ccbf3" translate="yes" xml:space="preserve">
          <source>The filter. This can be a global function name, anonymous function, etc. The function signature must be as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b9a295bf643d23afcc66b8a5ac0f870de5398d" translate="yes" xml:space="preserve">
          <source>The filtered messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3e879ecf9c40f9b4177b4ef81a1eda884c67e7" translate="yes" xml:space="preserve">
          <source>The filtering options. See &lt;a href=&quot;yii-helpers-basefilehelper#findFiles()-detail&quot;&gt;findFiles()&lt;/a&gt; for explanations of the supported options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd469d0d207484d0b2b8c530c7993f7f01cd5b1" translate="yes" xml:space="preserve">
          <source>The first approach is mainly used by extensions and is managed by the Composer installation process. You mainly need to list the bootstrapping class of your extension in the &lt;code&gt;composer.json&lt;/code&gt; file like following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e65aab1e597072102b8386cc0d710939d8875ac" translate="yes" xml:space="preserve">
          <source>The first approach is only useful when you know the module ID, while the second approach is best used when you know about the controllers being requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0ae1e62d0fa77a794d8ab6cc9e8d01d4a736b8" translate="yes" xml:space="preserve">
          <source>The first argument contains the data we want to convert. In our case we're converting a &lt;code&gt;Post&lt;/code&gt; AR model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3444aa7f1ea35f28496fc79665969113d45d7c2" translate="yes" xml:space="preserve">
          <source>The first argument could be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de91666a7bfeac5e345d3fef8be515ded9effca" translate="yes" xml:space="preserve">
          <source>The first argument for all three methods is the button title, and the second one is an array of options. The title isn't encoded, so if you're displaying data from the end user, encode it with &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;Html::encode()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d0a91de4e62080c490b109352d7b2c1d75418b" translate="yes" xml:space="preserve">
          <source>The first argument is the URL the form will be submitted to. It can be specified in the form of a Yii route and parameters accepted by &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;Url::to()&lt;/a&gt;. The second one is the method to use. &lt;code&gt;post&lt;/code&gt; is the default. The third one is an array of options for the form tag. In this case we're changing the encoding of the form data in the POST request to &lt;code&gt;multipart/form-data&lt;/code&gt;, which is required in order to upload files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31d2a11aa67bef21342bb8d5e97dab94e276b5b" translate="yes" xml:space="preserve">
          <source>The first argument is the URL. The second one is an array of options. In addition to the regular options, you can specify:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094ae23f5fc217edd68588c9bc91d06af7ce3a1b" translate="yes" xml:space="preserve">
          <source>The first argument is the actual JS code we want to insert into the page. It will be wrapped into a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. The second argument determines at which position the script should be inserted into the page. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd28265eea3062c9e0edf3688a968f960526a95" translate="yes" xml:space="preserve">
          <source>The first argument is the name of the input, the second one is the value that's currently selected, and the third one is an array of key-value pairs, where the array key is the list value and the array value is the list label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313de6d7da42c67534247be87365228a8e05f50c" translate="yes" xml:space="preserve">
          <source>The first argument is the tag name. The second one is the content to be enclosed between the start and end tags. Note that we are using &lt;code&gt;Html::encode&lt;/code&gt; &amp;mdash; that's because the content isn't encoded automatically to allow using HTML when needed. The third one is an array of HTML options, or in other words, tag attributes. In this array the key is the name of the attribute (such as &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;href&lt;/code&gt; or &lt;code&gt;target&lt;/code&gt;), and the value is its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2839c44bd5aa3d945d521d776e227f0bdf398b6" translate="yes" xml:space="preserve">
          <source>The first argument is the title. It's not encoded, so if you're using data entered by the user, you need to encode it with &lt;code&gt;Html::encode()&lt;/code&gt;. The second argument is what will be in the &lt;code&gt;href&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;a&lt;/code&gt; tag. See &lt;a href=&quot;guide-helper-url&quot;&gt;Url::to()&lt;/a&gt; for details on what values it accepts. The third argument is an array of tag attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77843b44cef2ab98b92c20451a3b39c82d5a6ded" translate="yes" xml:space="preserve">
          <source>The first argument specifies the CSS file to be registered. The &lt;code&gt;@web&lt;/code&gt; in this example is an &lt;a href=&quot;guide-concept-aliases#predefined-aliases&quot;&gt;alias for the applications base URL&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90de23216f016c8f6103c7aebfb843a79374666b" translate="yes" xml:space="preserve">
          <source>The first column of the query result. An empty array is returned if the query results in nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee4ed7159e7dea0fd58052ff0cd86133b3e9574" translate="yes" xml:space="preserve">
          <source>The first column of the query result. Empty array is returned if the query results in nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e006515b2fa571719351d826161c596c6ca98db8" translate="yes" xml:space="preserve">
          <source>The first command will apply migrations in &lt;code&gt;@app/migrations/db1&lt;/code&gt; to the &lt;code&gt;db1&lt;/code&gt; database, the second command will apply migrations in &lt;code&gt;@app/migrations/db2&lt;/code&gt; to &lt;code&gt;db2&lt;/code&gt;, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd04df88baa67523f959aa268657fd9b13e8eea" translate="yes" xml:space="preserve">
          <source>The first element indicates the number of SQL statements executed, and the second element the total time spent in SQL execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f978e4506c144b5d49d5cd1d35e3035bb7461293" translate="yes" xml:space="preserve">
          <source>The first element is the route, and the second is the associated parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52819295f53bf0a136062ee92e5a163df5b92c30" translate="yes" xml:space="preserve">
          <source>The first errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368d39e43aea7362113a2c11d658977ddd8d7546" translate="yes" xml:space="preserve">
          <source>The first errors. The array keys are the attribute names, and the array values are the corresponding error messages. An empty array will be returned if there is no error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258a95f9a5277d3905b255ffea58fe2f8d7f9aa5" translate="yes" xml:space="preserve">
          <source>The first hyperlink in the breadcrumbs (called home link).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9a4e167702e7be3f323cd84c4d97d12bbb4712" translate="yes" xml:space="preserve">
          <source>The first hyperlink in the breadcrumbs (called home link). Please refer to &lt;a href=&quot;yii-widgets-breadcrumbs#%24links-detail&quot;&gt;$links&lt;/a&gt; on the format of the link. If this property is not set, it will default to a link pointing to &lt;a href=&quot;yii-web-application#%24homeUrl-detail&quot;&gt;yii\web\Application::$homeUrl&lt;/a&gt; with the label 'Home'. If this property is false, the home link will not be rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a736d113aa0a17c59174164e6c4b02c0d4d571c0" translate="yes" xml:space="preserve">
          <source>The first line will &lt;strong&gt;not&lt;/strong&gt; be indented, so &lt;code&gt;Console::wrapText(&quot;Lorem ipsum dolor sit amet.&quot;, 4)&lt;/code&gt; will result in the following output, given the screen width is 16 characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd79385a21af3e4b662722f483f4bf9c4192752" translate="yes" xml:space="preserve">
          <source>The first module in the array is the outermost one (i.e., the application instance), while the last is the innermost one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ba95a7655846773eae483bcabee4f03fcd80c8" translate="yes" xml:space="preserve">
          <source>The first operand is the column name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1db88d9c22021b04882091cafe57d65fab3aa7" translate="yes" xml:space="preserve">
          <source>The first operand is the column name. If it is an array a composite IN condition will be generated. The second operand is an array of values that column value should be among.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9daf70a3f9e13479183009b584bfb03d27fea586" translate="yes" xml:space="preserve">
          <source>The first operand is the column name. If it is an array a composite IN condition will be generated. The second operand is an array of values that column value should be among. If it is an empty array the generated expression will be a &lt;code&gt;false&lt;/code&gt; value if operator is &lt;code&gt;IN&lt;/code&gt; and empty if operator is &lt;code&gt;NOT IN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956ea183a458814cdc25156410b286f98cf513d0" translate="yes" xml:space="preserve">
          <source>The first operand is the column name. The second and third operands describe the interval that column value should be in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cbce2365e69d8f6c71bc98ac906c133272ab7a" translate="yes" xml:space="preserve">
          <source>The first operand is the column name. The second operand is a single value that column value should be compared with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eacadeaa3a45a2a30d19eab3f5a8d880f76a481f" translate="yes" xml:space="preserve">
          <source>The first parameter specifies what type of join it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ef0a63d7702fa3d154a58b4c9ed6ab6159aa40" translate="yes" xml:space="preserve">
          <source>The first row (in terms of an array) of the query result. &lt;code&gt;false&lt;/code&gt; is returned if the query results in nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb63598fc52da4dcdcdcf9a55c072551cd28f2b" translate="yes" xml:space="preserve">
          <source>The first row (in terms of an array) of the query result. False is returned if the query results in nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d180016175d9898c5bb264e8b285285c80b9bb8" translate="yes" xml:space="preserve">
          <source>The first step is to clone the basic Yii template's Git repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1cd360670bff2c936d7eaf26701c86039c473a7" translate="yes" xml:space="preserve">
          <source>The first three steps all happen within the object's constructor. This means that once you get a class instance (i.e., an object), that object has already been initialized to a proper, reliable state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769363a13cd34e827a5a6b4081f0bb983cc58fb3" translate="yes" xml:space="preserve">
          <source>The first way is to explicitly enclose Active Record method calls in a transactional block, like shown below,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd32ae019b26213ce9ce756c2e626ad78635dbe" translate="yes" xml:space="preserve">
          <source>The fixed verification code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625957b2b5b0991d21f0a111d8329c3a5658035e" translate="yes" xml:space="preserve">
          <source>The fixed verification code. When this property is set, &lt;a href=&quot;yii-captcha-captchaaction#getVerifyCode()-detail&quot;&gt;getVerifyCode()&lt;/a&gt; will always return the value of this property. This is mainly used in automated tests where we want to be able to reproduce the same verification code each time we run the tests. If not set, it means the verification code will be randomly generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035db748ef42efbf4d3621aa9e8efe03485ca633" translate="yes" xml:space="preserve">
          <source>The fixture data for an &lt;code&gt;ActiveFixture&lt;/code&gt; fixture is usually provided in a file located at &lt;code&gt;FixturePath/data/TableName.php&lt;/code&gt;, where &lt;code&gt;FixturePath&lt;/code&gt; stands for the directory containing the fixture class file, and &lt;code&gt;TableName&lt;/code&gt; is the name of the table associated with the fixture. In the example above, the file should be &lt;code&gt;@app/tests/fixtures/data/user.php&lt;/code&gt;. The data file should return an array of data rows to be inserted into the user table. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfbb30d9bced8cc1a76cc9556d84ae353d2aeca" translate="yes" xml:space="preserve">
          <source>The fixture name. This can be either the fixture alias name, or the class name if the alias is not used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b02d6d14a8e38a091111e8f9d52041c6571a133" translate="yes" xml:space="preserve">
          <source>The fixture object, or null if the named fixture does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a61595e72ae9e586f38af223f2116988ff000a" translate="yes" xml:space="preserve">
          <source>The fixture template file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f600aacd0957e7df25bc56109b9c497e1a78d893" translate="yes" xml:space="preserve">
          <source>The fixtures described above are mainly used by individual test cases. In most cases, you also need some global fixtures that are applied to ALL or many test cases. An example is &lt;a href=&quot;yii-test-initdbfixture&quot;&gt;yii\test\InitDbFixture&lt;/a&gt; which does two things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbde09f48985b61a7220175172b4b1debed3bb6c" translate="yes" xml:space="preserve">
          <source>The fixtures listed in the &lt;code&gt;fixtures()&lt;/code&gt; method will be automatically loaded before running every test method in the test case and unloaded after finishing every test method. And as we described before, when a fixture is being loaded, all its dependent fixtures will be automatically loaded first. In the above example, because &lt;code&gt;UserProfileFixture&lt;/code&gt; depends on &lt;code&gt;UserFixture&lt;/code&gt;, when running any test method in the test class, two fixtures will be loaded sequentially: &lt;code&gt;UserFixture&lt;/code&gt; and &lt;code&gt;UserProfileFixture&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545ec728a59949863d2b5ef944f44ecd58bfaa43" translate="yes" xml:space="preserve">
          <source>The fixtures needed by the current test case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7eba15ee315341c1b2a87483ac0218a451f85a" translate="yes" xml:space="preserve">
          <source>The fixtures shared and required by different test cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d971b4ebf42b55e97c468b3fbc4e5a959579c5" translate="yes" xml:space="preserve">
          <source>The fixtures that this fixture depends on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceaf1db4025e1fb547e7c883634bff8871594c9" translate="yes" xml:space="preserve">
          <source>The fixtures that this fixture depends on. This must be a list of the dependent fixture class names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bacd559af0431d4bf4d0e3e1cfa2860a84b30172" translate="yes" xml:space="preserve">
          <source>The fixtures to be created. You may provide fixture names or fixture configurations. If this parameter is not provided, the fixtures specified in &lt;a href=&quot;yii-test-fixturetrait#globalFixtures()-detail&quot;&gt;globalFixtures()&lt;/a&gt; and &lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;fixtures()&lt;/a&gt; will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4a0f064eb55e80ad60cf814a951e3c12506dfe" translate="yes" xml:space="preserve">
          <source>The fixtures to be loaded. If this parameter is not specified, the return value of &lt;a href=&quot;yii-test-fixturetrait#getFixtures()-detail&quot;&gt;getFixtures()&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1d8afcb9cd5064507fa96ef2f6024a16f24461" translate="yes" xml:space="preserve">
          <source>The flash message or an array of messages if addFlash was used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38760c053ea66ebfa1b175e93e7bb51f36e3cd99" translate="yes" xml:space="preserve">
          <source>The following JavaScript variables are predefined and can be used in the validation code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347a62ea1d0d471d718abcbd446fc44f91fdec12" translate="yes" xml:space="preserve">
          <source>The following aliases are defined by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816dcebbaa77ee3ce1425712ccfa6dd5e3fa242f" translate="yes" xml:space="preserve">
          <source>The following are examples of validation rules using this validator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81890a6f94e394cac352c101d31ece97695209e" translate="yes" xml:space="preserve">
          <source>The following are some examples, assuming the &lt;a href=&quot;yii-base-application#%24controllerNamespace-detail&quot;&gt;controller namespace&lt;/a&gt; takes the default value &lt;code&gt;app\controllers&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8d5d60f4805c7f9a04e620deebf92a07d5a218" translate="yes" xml:space="preserve">
          <source>The following are some usage examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3e25b2569315c86d550fa375fc228e750684d6" translate="yes" xml:space="preserve">
          <source>The following are the supported abstract column data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d54d91ec20bddfd9aab606e78d09277c687a6b" translate="yes" xml:space="preserve">
          <source>The following code defines a fixture about the &lt;code&gt;User&lt;/code&gt; ActiveRecord and the corresponding user table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3494b4515743eacd41fd650664468e916971913d" translate="yes" xml:space="preserve">
          <source>The following code defines the main asset bundle used by &lt;a href=&quot;guide-start-installation&quot;&gt;the basic project template&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e026451aa1c51196735ddd2c4cb87c7a62c0390" translate="yes" xml:space="preserve">
          <source>The following code is a typical example of using transactions (note that some DBMS may not support transactions):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1231f9522e5e3676e5f4b431b3558a4af34c8a0d" translate="yes" xml:space="preserve">
          <source>The following code is a typical implementation of this callable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a6de7684f2d56d7308fbc910a7b5a1282f4876" translate="yes" xml:space="preserve">
          <source>The following code is a typical usage pattern of data caching, where &lt;code&gt;$cache&lt;/code&gt; refers to a &lt;a href=&quot;#cache-components&quot;&gt;cache component&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5738d00c68f484053f6144c7e1819c536dfa7fa2" translate="yes" xml:space="preserve">
          <source>The following code shows a more sophisticated example. The &lt;code&gt;UserLister&lt;/code&gt; class depends on an object implementing the &lt;code&gt;UserFinderInterface&lt;/code&gt; interface; the &lt;code&gt;UserFinder&lt;/code&gt; class implements this interface and depends on a &lt;code&gt;Connection&lt;/code&gt; object. All these dependencies are declared through type hinting of the class constructor parameters. With property dependency registration, the DI container is able to resolve these dependencies automatically and creates a new &lt;code&gt;UserLister&lt;/code&gt; instance with a simple call of &lt;code&gt;get('userLister')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643f2c96761a1c403451e433e4a4b9ddc213ec4a" translate="yes" xml:space="preserve">
          <source>The following code shows a typical way of using query builder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6cb949411771482cc3896380a5d0b14e2d5503" translate="yes" xml:space="preserve">
          <source>The following code shows a typical way of using transactions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f757bb31241bb9e941930391b9342bce0565694" translate="yes" xml:space="preserve">
          <source>The following code shows different usage of &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt;. We assume the &lt;code&gt;Customer&lt;/code&gt; class has two relations &lt;code&gt;orders&lt;/code&gt; and &lt;code&gt;country&lt;/code&gt;, while the &lt;code&gt;Order&lt;/code&gt; class has one relation &lt;code&gt;items&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1e98f0576a3373f61806730991128b934512c0" translate="yes" xml:space="preserve">
          <source>The following code shows how these methods can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f6f4f029fcfc8c51fb5b5675f7311069cd9a80" translate="yes" xml:space="preserve">
          <source>The following code shows how to apply a default condition for all queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2515ed530b1a693fb7b42c731c587d0479aafcd3" translate="yes" xml:space="preserve">
          <source>The following code shows how to configure the &lt;code&gt;authManager&lt;/code&gt; in the application configuration using the &lt;a href=&quot;yii-rbac-dbmanager&quot;&gt;yii\rbac\DbManager&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22831f649551e4c99819ce2865ab0705ff33d478" translate="yes" xml:space="preserve">
          <source>The following code shows how to configure the &lt;code&gt;authManager&lt;/code&gt; in the application configuration using the &lt;a href=&quot;yii-rbac-phpmanager&quot;&gt;yii\rbac\PhpManager&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7f5e878f0b397a2fffd023d695e12e8f57df3f" translate="yes" xml:space="preserve">
          <source>The following code shows how to use this new variant of &lt;code&gt;HelloWidget&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cdafb8ec0adfafdd0f7cb844fcc085fc1c19190" translate="yes" xml:space="preserve">
          <source>The following code shows how you can use ContentNegotiator as a bootstrapping component. Note that in this case, the content negotiation applies to the whole application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9522efdb5da1c0e0aeb16934362c66cf5ff705f" translate="yes" xml:space="preserve">
          <source>The following code shows how you can use ContentNegotiator as an action filter in either a controller or a module. In this case, the content negotiation result only applies to the corresponding controller or module, or even specific actions if you configure the &lt;code&gt;only&lt;/code&gt; or &lt;code&gt;except&lt;/code&gt; property of the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe699c36e7b2a74227d48c919275e045741577ea" translate="yes" xml:space="preserve">
          <source>The following code shows the difference between this method and &lt;a href=&quot;yii-db-query#having()-detail&quot;&gt;having()&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39735c14164b8025fec7db860df41d5471c85a0" translate="yes" xml:space="preserve">
          <source>The following code shows the difference between this method and &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9354dda3ce67cb4fb8b43eb12f3dc7c3c94aab6" translate="yes" xml:space="preserve">
          <source>The following code shows the difference between this method and &lt;a href=&quot;yii-sphinx-matchexpression#match()-detail&quot;&gt;match()&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491d7cc08403cc1a3bf1645fe111cb8ff228fd4a" translate="yes" xml:space="preserve">
          <source>The following command will create a new user by sending a POST request with the user data in JSON format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d793f7d361e1eda466bd1108551dabcf68357b46" translate="yes" xml:space="preserve">
          <source>The following data provider classes are included in the Yii releases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2391c658746c628f8538943ba24502842475ffda" translate="yes" xml:space="preserve">
          <source>The following enhancements are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a13968332b7fba16614a51593a754cd1c2f034e" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;code&gt;post&lt;/code&gt; controller with two actions: &lt;code&gt;view&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9e23f1a5fbd161b4d509c0ffb75d1d4b339805" translate="yes" xml:space="preserve">
          <source>The following example shows a filter that logs the action execution time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a434669ef56d3e9a3bc108745810892ca50d967d" translate="yes" xml:space="preserve">
          <source>The following example shows a simple usage of a progress bar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ace7d33b1414a3a8a1701a8193e8e7cbac65c26" translate="yes" xml:space="preserve">
          <source>The following example shows alternative ways of binding parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4f0acf27cbdaad394fd9a095cbd748e2676286" translate="yes" xml:space="preserve">
          <source>The following example shows how a layout looks like. Note that for illustrative purpose, we have greatly simplified the code in the layout. In practice, you may want to add more content to it, such as head tags, main menu, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b076a160518518ed160dd09755d9ec43c56a07ec" translate="yes" xml:space="preserve">
          <source>The following example shows how to allow authenticated users to access the &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; actions while denying all other users from accessing these two actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4367f9a7190e130a49ddc55e487318b6c41ac120" translate="yes" xml:space="preserve">
          <source>The following example shows how to configure a DI container with Instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14be23d5bae5eb17fb6d80b666aad9f8aae60cac" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a Connection instance and establish the DB connection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a9308ea34929c332c7d5ee0b328c273eb37bfd" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a Connection instance and establish the Sphinx connection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a402e41b053d1fc483fb0aff0b41e9d68b9685" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a pagination object and feed it to a pager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d2fd626d18b8cd8223819e432155fab890c282" translate="yes" xml:space="preserve">
          <source>The following example shows how to declare arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afcf62e894b847edebeb349611d26f2e715ead7" translate="yes" xml:space="preserve">
          <source>The following example shows how to disable the bootstrap css file used by Bootstrap widgets (because you want to use your own styles):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef547650908cfec6e4585281dbd51562dfb8dc5" translate="yes" xml:space="preserve">
          <source>The following example shows how to support three authentication methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6719d92f1a55205c1e87938c8a5eee1a6ee5b8" translate="yes" xml:space="preserve">
          <source>The following example shows how to use Menu:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f158d7f0570d17dcf83ccd5aee9d3e44ddad28f4" translate="yes" xml:space="preserve">
          <source>The following example shows how to use Pjax with the &lt;a href=&quot;yii-grid-gridview&quot;&gt;yii\grid\GridView&lt;/a&gt; widget so that the grid pagination, sorting and filtering can be done via pjax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c944bc780f9b45e13a31e0557b5d94a7f73cff49" translate="yes" xml:space="preserve">
          <source>The following example shows how to use this widget with a model attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965fb51d643aa23fac24ccca705ff09fc3b9dba2" translate="yes" xml:space="preserve">
          <source>The following example shows how you can configure the application to use Cache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec06b3eaed7262d8258e6affebbafebdec6254d" translate="yes" xml:space="preserve">
          <source>The following example shows how you can configure the application to use CacheSession: Add the following to your application config under &lt;code&gt;components&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6b22b1dba76a1a40b56acf7daf89db9830624b" translate="yes" xml:space="preserve">
          <source>The following example shows how you can configure the application to use DbCache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d46d6905028a787c1617f1d303cc8dfbdfdbb2" translate="yes" xml:space="preserve">
          <source>The following example shows how you can configure the application to use DbSession: Add the following to your application config under &lt;code&gt;components&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a49b401ca80c1ddf4c79a3797131c7b317eebd" translate="yes" xml:space="preserve">
          <source>The following example shows how you can configure the application to use Session: Add the following to your application config under &lt;code&gt;components&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fb96add22041231f0de6d83d31bba3a9c8e14b" translate="yes" xml:space="preserve">
          <source>The following example shows how you can use &lt;a href=&quot;yii-filters-auth-httpbasicauth&quot;&gt;yii\filters\auth\HttpBasicAuth&lt;/a&gt; to authenticate a user using an access token based on HTTP Basic Auth method. Note that in order for this to work, your &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;user identity class&lt;/a&gt; must implement the &lt;a href=&quot;yii-web-identityinterface#findIdentityByAccessToken()-detail&quot;&gt;findIdentityByAccessToken()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b306f987d8d491a4fac1a643cf64a2b80a627ce8" translate="yes" xml:space="preserve">
          <source>The following example shows how you can use blocks to customize specific parts of a layout in a content view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2019256189c3a7e28c10076aaa8c2aa5e6b38e9" translate="yes" xml:space="preserve">
          <source>The following example shows how you can use these options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7fafd4297ae7784110d8d2d0ad8f38caf22b8e" translate="yes" xml:space="preserve">
          <source>The following example shows various ways of fetching data from a database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc4049183131e6221c1d012f4594488d50ea830" translate="yes" xml:space="preserve">
          <source>The following example will enable the validator only when the country currently selected is USA:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2491ace63d5a409bc1cc3dfbaea3da1ee2968f4a" translate="yes" xml:space="preserve">
          <source>The following example will show the content enclosed between the &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; calls within the alert box:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06430b25008d85a25a267e94a0636952ec1061c5" translate="yes" xml:space="preserve">
          <source>The following example will show the content enclosed between the &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; calls within the modal window:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753c902db1099f35f43d8690a84015c9a71ef422" translate="yes" xml:space="preserve">
          <source>The following example will show the content enclosed between the &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; calls within the widget container:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48356a4f647148834cbee573b985b72e6e815a45" translate="yes" xml:space="preserve">
          <source>The following example will use the name property instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b438956966e3c37c31be9c2e5c0942869a2999e7" translate="yes" xml:space="preserve">
          <source>The following examples shows how to trim the spaces in the inputs and turn empty inputs into nulls by using the &lt;a href=&quot;guide-tutorial-core-validators#trim&quot;&gt;trim&lt;/a&gt; and &lt;a href=&quot;tutorial-core-validators.md#default&quot;&gt;default&lt;/a&gt; core validators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12040820cfa3b4e2be198db1328046785a3ad785" translate="yes" xml:space="preserve">
          <source>The following is an example for registering two component definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef33fb055b3947d95cdc52c14bd8e070c95253dd" translate="yes" xml:space="preserve">
          <source>The following is an example for registering two sub-modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906081aab73c75737d3fc311eda8afa4ff03d375" translate="yes" xml:space="preserve">
          <source>The following is an example how a module class may look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4e578244562e0ae89782d767ffc15a5120a60b" translate="yes" xml:space="preserve">
          <source>The following is an example implementation of a controller action that allows requesting files from a directory that is not accessible from web:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498d5daab7d9e9e0db1cc8423903d13905cc7632" translate="yes" xml:space="preserve">
          <source>The following is an example model called &lt;code&gt;Customer&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36de920c6bae4ce18add07c8faa9a0f7434d2cf4" translate="yes" xml:space="preserve">
          <source>The following is an example of making use of the &lt;code&gt;ETag&lt;/code&gt; header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847d90631dc7598bf849dc5daa6093f01d7b2ec6" translate="yes" xml:space="preserve">
          <source>The following is an example of making use of the &lt;code&gt;Last-Modified&lt;/code&gt; header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec29d995190eb9c3eb9a04c0467291cc49e70d30" translate="yes" xml:space="preserve">
          <source>The following is an example of using ActiveDataProvider to provide ActiveRecord instances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddeb77d69d682d8f8c309fc456c2dd9a2765cd3" translate="yes" xml:space="preserve">
          <source>The following is an example of using ActiveDataProvider to provide facet results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed38596eeae1ed9d7dcfb7df999c45674415489a" translate="yes" xml:space="preserve">
          <source>The following is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd78b73bb53c9d20ec4e5f83da23fa179da8342" translate="yes" xml:space="preserve">
          <source>The following is the code in the entry script for the &lt;a href=&quot;guide-start-installation&quot;&gt;Basic Web Project Template&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84949f9973550963b79f8a729603dd3277de247f" translate="yes" xml:space="preserve">
          <source>The following is the list of the files generated by Gii, in case you want to investigate how these features are implemented, or to customize them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5595bfae1ea4fba136d6c58f82b7ef64b40a7654" translate="yes" xml:space="preserve">
          <source>The following options are specially handled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7e4835b6437d92712baa95f56ede23d97635fd" translate="yes" xml:space="preserve">
          <source>The following parameters are Yii specific:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2df9f1f7b0a4d6ffd2ac8ff813fd968ef749cc" translate="yes" xml:space="preserve">
          <source>The following preparation tasks are performed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af7df93e27530f3e45fb017c0d8db02162aa5eb" translate="yes" xml:space="preserve">
          <source>The following shows an example configuration for the &lt;a href=&quot;yii-web-urlnormalizer&quot;&gt;UrlNormalizer&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e96dc97a08f588a87f7c81df678f85b41b3b8e" translate="yes" xml:space="preserve">
          <source>The following shows how to implement tabular input with Yii.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4ac1793732e2ef1fce3fc84798096d124db272" translate="yes" xml:space="preserve">
          <source>The following special options are recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc4310cdf96719b9ffaa1db3ae86f42fcdcd567" translate="yes" xml:space="preserve">
          <source>The following special options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebfde65e1e8f0c48465d79afc396e4877cdda3e" translate="yes" xml:space="preserve">
          <source>The following steps show how database migration can be used by a team during development:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7e53febfb109256afd49fa225a504492e0ebba" translate="yes" xml:space="preserve">
          <source>The following target configuration specifies that the target should only process error and warning messages under the categories whose names match either &lt;code&gt;yii\db\*&lt;/code&gt; or &lt;code&gt;yii\web\HttpException:*&lt;/code&gt;, but not &lt;code&gt;yii\web\HttpException:404&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f9341349fffc059c543b3469c82975ec9d3050" translate="yes" xml:space="preserve">
          <source>The following tokens will be replaced with the corresponding values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bf498c136a84283484464d89ee8c8a2c0d2c0b" translate="yes" xml:space="preserve">
          <source>The font color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb179f9fc89277d8493206b0ec578202a3173df" translate="yes" xml:space="preserve">
          <source>The font color. For example, 0x55FF00. Defaults to 0x2040A0 (blue color).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8e2645be6512dcca3b7687cc16bd09892d0595" translate="yes" xml:space="preserve">
          <source>The footer cell content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d8f0f7e703ec5e3a57a978d5c85c8de70a4031" translate="yes" xml:space="preserve">
          <source>The footer cell content. Note that it will not be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ed87119aa4a792889baa48172cf1b0c1c97503" translate="yes" xml:space="preserve">
          <source>The footer content in the modal window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2195078e31c6d2e3ce201fa1599e6bd9b500ada9" translate="yes" xml:space="preserve">
          <source>The form action URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd230e8a7edfe858943a97a377113eb9516c221e" translate="yes" xml:space="preserve">
          <source>The form action URL. This parameter will be processed by &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii\helpers\Url::to()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1589a042af1bbcf8f33deefa4485afd4ac6703a" translate="yes" xml:space="preserve">
          <source>The form layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66b20095fa2d119c6597b1bb9f7591c5da723f7" translate="yes" xml:space="preserve">
          <source>The form layout. Either 'default', 'horizontal' or 'inline'. By choosing a layout, an appropriate default field configuration is applied. This will render the form fields with slightly different markup for each layout. You can override these defaults through &lt;a href=&quot;yii-widgets-activeform#%24fieldConfig-detail&quot;&gt;$fieldConfig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caed07370fb5d382edab8f674e8abd5399a652db" translate="yes" xml:space="preserve">
          <source>The form name is mainly used by &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt; to determine how to name the input fields for the attributes in a model. If the form name is &quot;A&quot; and an attribute name is &quot;b&quot;, then the corresponding input name would be &quot;A[b]&quot;. If the form name is an empty string, then the input name would be &quot;b&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250a371f7cff33bd36d7c2203b5bba69fcb1b85b" translate="yes" xml:space="preserve">
          <source>The form name of this model class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5968b05e50ddb4ec1622c7ea91f4435ef2d7ba41" translate="yes" xml:space="preserve">
          <source>The form name to be used for loading the data into the models. If not set, it will use the &lt;a href=&quot;yii-base-model#formName()-detail&quot;&gt;formName()&lt;/a&gt; value of the first model in &lt;code&gt;$models&lt;/code&gt;. This parameter is available since version 2.0.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911de8c802d8eb381d01a3ad950c67ffdc1d7358" translate="yes" xml:space="preserve">
          <source>The form name to use to load the data into the model. If not set, &lt;a href=&quot;yii-base-model#formName()-detail&quot;&gt;formName()&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e254742739d19923371695b84f38816f987bb83c" translate="yes" xml:space="preserve">
          <source>The form submission method, such as &quot;post&quot;, &quot;get&quot;, &quot;put&quot;, &quot;delete&quot; (case-insensitive). Since most browsers only support &quot;post&quot; and &quot;get&quot;, if other methods are given, they will be simulated using &quot;post&quot;, and a hidden input will be added which contains the actual method type. See &lt;a href=&quot;yii-web-request#%24methodParam-detail&quot;&gt;yii\web\Request::$methodParam&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc8574e5c5edd701360f9e4e6549ba186dfbffa" translate="yes" xml:space="preserve">
          <source>The form submission method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fd92bb3f06c54eca60bffe1ebfcc8c5cf71744" translate="yes" xml:space="preserve">
          <source>The form submission method. This should be either &lt;code&gt;post&lt;/code&gt; or &lt;code&gt;get&lt;/code&gt;. Defaults to &lt;code&gt;post&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f2314d8991d15b6b5353ae51420841af8181d9" translate="yes" xml:space="preserve">
          <source>The form that this field is associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b282f347f783b43c8435b6ff3c32357481c7b062" translate="yes" xml:space="preserve">
          <source>The format for number formatting can be adjusted using the &lt;a href=&quot;yii-i18n-formatter#%24decimalSeparator-detail&quot;&gt;decimalSeparator&lt;/a&gt; and &lt;a href=&quot;yii-i18n-formatter#%24thousandSeparator-detail&quot;&gt;thousandSeparator&lt;/a&gt;, both of which take default values according to the active &lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;locale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d822a13d3cfee80967308551bb95ec4ce1908f7a" translate="yes" xml:space="preserve">
          <source>The format is very close to what's used for plurals. To learn which arguments you should specify for a particular locale, please refer to &quot;Plural Rules, Ordinal&quot; at &lt;a href=&quot;http://intl.rmcreative.ru/&quot;&gt;http://intl.rmcreative.ru/&lt;/a&gt;. Alternatively you can refer to &lt;a href=&quot;http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html&quot;&gt;rules reference at unicode.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fdc6ef2b4fe4b8c5e5dbb3fc5534933bf494ae" translate="yes" xml:space="preserve">
          <source>The format must be the attribute name only for ascending or the attribute name prefixed with &lt;code&gt;-&lt;/code&gt; for descending.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c601ef229bc67042142ff238bfcc72f21d22c0" translate="yes" xml:space="preserve">
          <source>The format of a configuration can be formally described as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd92bbcb4e4726c1afb9a26171128744a16d347" translate="yes" xml:space="preserve">
          <source>The format of each definition is &lt;code&gt;COLUMN_NAME:COLUMN_TYPE:COLUMN_DECORATOR&lt;/code&gt;. Delimiter is &lt;code&gt;,&lt;/code&gt;. For example, &lt;code&gt;--fields=&quot;name:string(12):notNull:unique&quot;&lt;/code&gt; produces a string column of size 12 which is not null and unique values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00abebbd01bb88e58e6f4122cc0faa7cbb09f1d" translate="yes" xml:space="preserve">
          <source>The format of the definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9e69c5980fdf78bfd46dd7465de3b923bdad23" translate="yes" xml:space="preserve">
          <source>The format of the number must match the regular expression specified in &lt;a href=&quot;yii-validators-numbervalidator#%24integerPattern-detail&quot;&gt;$integerPattern&lt;/a&gt; or &lt;a href=&quot;yii-validators-numbervalidator#%24numberPattern-detail&quot;&gt;$numberPattern&lt;/a&gt;. Optionally, you may configure the &lt;a href=&quot;yii-validators-numbervalidator#%24max-detail&quot;&gt;$max&lt;/a&gt; and &lt;a href=&quot;yii-validators-numbervalidator#%24min-detail&quot;&gt;$min&lt;/a&gt; properties to ensure the number is within certain range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7e188fb32034e4feeaed27cf6ab1f633d6f3de" translate="yes" xml:space="preserve">
          <source>The format of the value, e.g., &quot;html&quot;, &quot;text&quot;. To specify additional parameters of the formatting method, you may use an array. The first element of the array specifies the format name, while the rest of the elements will be used as the parameters to the formatting method. For example, a format of &lt;code&gt;['date', 'Y-m-d']&lt;/code&gt; will cause the invocation of &lt;code&gt;asDate($value, 'Y-m-d')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74029cb6b913bed66f43cb7f6f374fbb695f2c78" translate="yes" xml:space="preserve">
          <source>The format string to be used for formatting the date value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78c55d5300bc36c461e582904805a38305baf07" translate="yes" xml:space="preserve">
          <source>The format string to be used for formatting the date value. This option will be used to populate the &lt;a href=&quot;yii-jui-widget#%24clientOptions-detail&quot;&gt;clientOption&lt;/a&gt;&lt;code&gt;dateFormat&lt;/code&gt;. The value can be one of &quot;short&quot;, &quot;medium&quot;, &quot;long&quot;, or &quot;full&quot;, which represents a preset format of different lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a77faba6dab81b085f5267ee65a15c9ad1990b5" translate="yes" xml:space="preserve">
          <source>The format to use when populating the &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$timestampAttribute&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfa38d2be605cf0b054ecfe6f5643a9f13586e6" translate="yes" xml:space="preserve">
          <source>The format to use when populating the &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$timestampAttribute&lt;/a&gt;. The format can be specified in the same way as for &lt;a href=&quot;yii-validators-datevalidator#%24format-detail&quot;&gt;$format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be6438443106beeeb524c78bf0b9596039d4c1c" translate="yes" xml:space="preserve">
          <source>The format used to convert the value into a date string. If null, &lt;a href=&quot;yii-i18n-formatter#%24dateFormat-detail&quot;&gt;$dateFormat&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9608fd9b849d651f20ce2f19dd40475944de2d8" translate="yes" xml:space="preserve">
          <source>The format used to convert the value into a date string. If null, &lt;a href=&quot;yii-i18n-formatter#%24timeFormat-detail&quot;&gt;$timeFormat&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652d4f664c57d42c4baf1234bd9a4e2585093f59" translate="yes" xml:space="preserve">
          <source>The formatted duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc69821884b75bce8240844bb386ebffa869bd7" translate="yes" xml:space="preserve">
          <source>The formatted message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60009eb59cee2caf49afaeebbfad3fe7916c5ec" translate="yes" xml:space="preserve">
          <source>The formatted message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41773bd89e915372eefd10976776343b7fad1e1a" translate="yes" xml:space="preserve">
          <source>The formatted pattern string or &lt;code&gt;false&lt;/code&gt; if an error occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26acfb23662938251320a91339faa68a9452ef0c" translate="yes" xml:space="preserve">
          <source>The formatted result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211a0a63712e01c27c8ed38996028512bad1d790" translate="yes" xml:space="preserve">
          <source>The formatted string for the alias argument or option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef676e964db045675e6a83df5444bfaf6823d42e" translate="yes" xml:space="preserve">
          <source>The formatted string for the argument or option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888c74c444b7dcc457091ed44086fff2420eb85f" translate="yes" xml:space="preserve">
          <source>The formatter application component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c96242cc808d23ae28631760c75f09fbc117fb" translate="yes" xml:space="preserve">
          <source>The formatter can be configured in the &lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;formatters&lt;/a&gt; property of the &lt;code&gt;response&lt;/code&gt; application component in the application &lt;a href=&quot;guide-concept-configuration&quot;&gt;configuration&lt;/a&gt; like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc62ddef902afe9074387adad20b3f2b966b3fdf" translate="yes" xml:space="preserve">
          <source>The formatter supports the following output formats that are related with date and time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6b78cb18cddcad5cf4dc63797787a87108db95" translate="yes" xml:space="preserve">
          <source>The formatter supports the following output formats that are related with numbers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4725457ca852e9887934006c4d1c8708cf3921" translate="yes" xml:space="preserve">
          <source>The formatter used to format model attribute values into displayable texts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978c958ca5d2885d1cdb678edfc57ad8ec0d228c" translate="yes" xml:space="preserve">
          <source>The formatter used to format model attribute values into displayable texts. This can be either an instance of &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; or an configuration array for creating the &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; instance. If this property is not set, the &quot;formatter&quot; application component will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49219e4cf7d112d4722f2ae90f632c0fbc42f74" translate="yes" xml:space="preserve">
          <source>The formatter used to format model attribute values into displayable texts. This can be either an instance of &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; or an configuration array for creating the &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; instance. If this property is not set, the &lt;code&gt;formatter&lt;/code&gt; application component will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d023843a58bbdc6258eec23aeded5f9b0ed2185d" translate="yes" xml:space="preserve">
          <source>The formatter will convert date values according to &lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;$timeZone&lt;/a&gt; before formatting it. If no timezone conversion should be performed, you need to set &lt;a href=&quot;yii-i18n-formatter#%24defaultTimeZone-detail&quot;&gt;$defaultTimeZone&lt;/a&gt; and &lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;$timeZone&lt;/a&gt; to the same value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400a9d56cfd4971e6a2ff3db4ecf4a4bc35ffe85" translate="yes" xml:space="preserve">
          <source>The formatter will convert date values according to &lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;$timeZone&lt;/a&gt; before formatting it. If no timezone conversion should be performed, you need to set &lt;a href=&quot;yii-i18n-formatter#%24defaultTimeZone-detail&quot;&gt;$defaultTimeZone&lt;/a&gt; and &lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;$timeZone&lt;/a&gt; to the same value. Also no conversion will be performed on values that have no time information, e.g. &lt;code&gt;&quot;2017-06-05&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431f3bff5759ba6416f2c8680d732d02ab430ee9" translate="yes" xml:space="preserve">
          <source>The formatters for converting data into the content of the specified \yii\httpclient\format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb37a52afe2fc81f87613f535781d3f3d20fc30" translate="yes" xml:space="preserve">
          <source>The formatters for converting data into the content of the specified \yii\httpclient\format. The array keys are the format names, and the array values are the corresponding configurations for creating the formatter objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196189179d4d2860f7ad7d66c909c5d194245bba" translate="yes" xml:space="preserve">
          <source>The formatters for converting data into the response content of the specified &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;$format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4251268798654aab462a0adcf7354369597e5a39" translate="yes" xml:space="preserve">
          <source>The formatters for converting data into the response content of the specified &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;$format&lt;/a&gt;. The array keys are the format names, and the array values are the corresponding configurations for creating the formatter objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1c888e89ef34d37138eefc89880820e085232d" translate="yes" xml:space="preserve">
          <source>The formatters that are supported by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88316900d4b4f3b1f17264c6e33ff3fd5a2adca" translate="yes" xml:space="preserve">
          <source>The formatting methods provided by Formatter are all named in the form of &lt;code&gt;asXyz()&lt;/code&gt;. The behavior of some of them may be configured via the properties of Formatter. For example, by configuring &lt;a href=&quot;yii-i18n-formatter#%24dateFormat-detail&quot;&gt;$dateFormat&lt;/a&gt;, one may control how &lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;asDate()&lt;/a&gt; formats the value into a date string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0850035e122bb5ba51d1bcd4d092b0da4f4fa2bc" translate="yes" xml:space="preserve">
          <source>The formatting result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919f8b2422667edfbc3ffa376768729d99f2b641" translate="yes" xml:space="preserve">
          <source>The full name of this table, which includes the schema name prefix, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d60379c9dd7a1e19737cde1599227efa47d16bc" translate="yes" xml:space="preserve">
          <source>The full name of this table, which includes the schema name prefix, if any. Note that if the schema name is the same as the &lt;a href=&quot;yii-db-schema#%24defaultSchema-detail&quot;&gt;default schema name&lt;/a&gt;, the schema name will not be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669311b07944414088d1f7401659416e444147f9" translate="yes" xml:space="preserve">
          <source>The full-text query to build snippets for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185b17bc5464c05064148990d437261dc496f994" translate="yes" xml:space="preserve">
          <source>The fully qualified class name from which the event handler needs to be detached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0d955a8f0234431a7aab47a032c689d0ab6305" translate="yes" xml:space="preserve">
          <source>The fully qualified class name to which the event handler needs to attach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9414509bca240bdbbedcd6c49d20d78b12d68239" translate="yes" xml:space="preserve">
          <source>The fully qualified class name without a leading backslash &quot;\&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9a276f481a63c11c7274ceb58422a847686a55" translate="yes" xml:space="preserve">
          <source>The fully qualified name of this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e9c196cc9b4e0aa6c982e5c557a50d6e469d4f" translate="yes" xml:space="preserve">
          <source>The functions used to serialize and unserialize cached data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8908fcf78cfa4269d885e4662ad8cecdf7f185a9" translate="yes" xml:space="preserve">
          <source>The functions used to serialize and unserialize cached data. Defaults to null, meaning using the default PHP &lt;code&gt;serialize()&lt;/code&gt; and &lt;code&gt;unserialize()&lt;/code&gt; functions. If you want to use some more efficient serializer (e.g. &lt;a href=&quot;http://pecl.php.net/package/igbinary&quot;&gt;igbinary&lt;/a&gt;), you may configure this property with a two-element array. The first element specifies the serialization function, and the second the deserialization function. If this property is set false, data will be directly sent to and retrieved from the underlying cache component without any serialization or deserialization. You should not turn off serialization if you are using &lt;a href=&quot;yii-caching-dependency&quot;&gt;cache dependency&lt;/a&gt;, because it relies on data serialization. Also, some implementations of the cache can not correctly save and retrieve data different from a string type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20a4c2af66b158735e42a5f19987f68e24f361a" translate="yes" xml:space="preserve">
          <source>The generated ETag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee4183015216d81c7cb08160f7a72da0762aa67" translate="yes" xml:space="preserve">
          <source>The generated HTML tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09706e7186fda44207a78e2ce0853eee59704f20" translate="yes" xml:space="preserve">
          <source>The generated Mongo condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae81fbc2d004afe1d5a337a17f67a2a93c0a3cdd" translate="yes" xml:space="preserve">
          <source>The generated Mongo condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b793721143f9969a194ce5d6277444b4892425" translate="yes" xml:space="preserve">
          <source>The generated SQL expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc2460c0394d4f61eebd58901ba9672d9c967e6" translate="yes" xml:space="preserve">
          <source>The generated SQL statement (the first array element) and the corresponding parameters to be bound to the SQL statement (the second array element).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14649766a04a3529e6918d916f55f0e1ff933b07" translate="yes" xml:space="preserve">
          <source>The generated SQL statement (the first array element) and the corresponding parameters to be bound to the SQL statement (the second array element). The parameters returned include those provided in &lt;code&gt;$params&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8112931ec692357b5fc961943b7fbdc0f38cb433" translate="yes" xml:space="preserve">
          <source>The generated URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c49d37c308c016db6e03c7ada10e8799068d2f8" translate="yes" xml:space="preserve">
          <source>The generated attribute labels (name =&amp;gt; label)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0366cc8c11a717cf8d2c5624ac673c24601a0cf9" translate="yes" xml:space="preserve">
          <source>The generated button tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399d2940f1f3b7940b80a5600b9305366ab7d9d6" translate="yes" xml:space="preserve">
          <source>The generated cache key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61231cbb2316ba9871b9dc479b1885d0a7204433" translate="yes" xml:space="preserve">
          <source>The generated checkbox list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c13f3ffaeb950f374788745a09ad670506f353" translate="yes" xml:space="preserve">
          <source>The generated checkbox tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8204dae385e226999142baa562a10cbcccb3ea" translate="yes" xml:space="preserve">
          <source>The generated class name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ce651e0991db9cd4c4042cc34614cf947b5615" translate="yes" xml:space="preserve">
          <source>The generated code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cf3fb214988258772916d3ecabb7e29a2822bb" translate="yes" xml:space="preserve">
          <source>The generated configuration file can be included in the application configuration, like described in the last subsection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e724b036f7e5df6451aaeed995531ba3acaba10" translate="yes" xml:space="preserve">
          <source>The generated configuration file contains parameters required for source code messages extraction. You may use this configuration file with the &quot;extract&quot; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ff539b570ac2af37acf6aad6cba303a54f6fae" translate="yes" xml:space="preserve">
          <source>The generated cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe76fbfd56e9609a7b8edf880eaef637c7b9915d" translate="yes" xml:space="preserve">
          <source>The generated drop-down list tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b25361bc412d24f636aa7efe28f7abb8faa3cd2" translate="yes" xml:space="preserve">
          <source>The generated end tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27670793f136d57df11e39295d66e7fc85e5a723" translate="yes" xml:space="preserve">
          <source>The generated error summary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f46f1df381f0cb39edf60cf689fc80a4018fcf" translate="yes" xml:space="preserve">
          <source>The generated error summary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcd7fbda647c24a5ecedba8ecea18a99c9e494a" translate="yes" xml:space="preserve">
          <source>The generated file input tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82874c0889ad1b5b3c0b90c7ec14fe0d8084c83" translate="yes" xml:space="preserve">
          <source>The generated form start tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef79b4deee6da995beb14560ff6e72247c0f65e" translate="yes" xml:space="preserve">
          <source>The generated hash can be stored in database. Later when a password needs to be validated, the hash can be fetched and passed to &lt;a href=&quot;yii-base-security#validatePassword()-detail&quot;&gt;validatePassword()&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9580e5e440c6e5ad1a45360968329581ee58a249" translate="yes" xml:space="preserve">
          <source>The generated hidden input tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b502430a5567aa7aecbab608ce333b9e30d7892" translate="yes" xml:space="preserve">
          <source>The generated hint tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84138fb5b44fc254fc1c6529ca7df9f004a097bc" translate="yes" xml:space="preserve">
          <source>The generated hyperlink</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a353c56d8c35d6abb5d9cd9b73931cae84733a49" translate="yes" xml:space="preserve">
          <source>The generated image tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f17b3a5458c53d4052f519c8dfe500e29996f79" translate="yes" xml:space="preserve">
          <source>The generated input ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa8373d71e27e7c8c3fac2cf6fe80b87f030bdd" translate="yes" xml:space="preserve">
          <source>The generated input element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdf3ba5bb7e75147ea5f431402b54e620709c71" translate="yes" xml:space="preserve">
          <source>The generated input list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43360b791f42aacdf50d35e4e09efd5571afdb2" translate="yes" xml:space="preserve">
          <source>The generated input name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892ad66fb61e27eb3809be13d13654975ce9365a" translate="yes" xml:space="preserve">
          <source>The generated input tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab1210ed89e3efca42c9547ce6bdb1506d8b9d5" translate="yes" xml:space="preserve">
          <source>The generated key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31525ef8408f8872991a16967c18e60dd381b104" translate="yes" xml:space="preserve">
          <source>The generated label tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7798d2180b68cfebc1e3b0f5983ab326a52d5fd6" translate="yes" xml:space="preserve">
          <source>The generated link parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b0240a9bfee0a6f49686fc5b81cb136a2bfb79" translate="yes" xml:space="preserve">
          <source>The generated link tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3427f4d7e11940ed39c540473a211bfc80a27a7a" translate="yes" xml:space="preserve">
          <source>The generated list box tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3750c099975048a80d98a7ef6c40d60b5fcbf564" translate="yes" xml:space="preserve">
          <source>The generated list options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97961c59acf1bf3430a0d56cbb338ca7442f313" translate="yes" xml:space="preserve">
          <source>The generated mailto link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7884d9ffb973f42e4e0b95935b59ff43123eff" translate="yes" xml:space="preserve">
          <source>The generated meta tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852e89870ce15c63e1640d5788650bd52291d80e" translate="yes" xml:space="preserve">
          <source>The generated ordered list. An empty string is returned if &lt;code&gt;$items&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8767531fcd9e9ffa92ce4b9caf644e0fb03989d0" translate="yes" xml:space="preserve">
          <source>The generated password input tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb50d6b2e6f56f0204ca0ebf9e0903bbf5ece73" translate="yes" xml:space="preserve">
          <source>The generated radio button list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521b7b7d2024cdb3035dc13fb8fe2ec4c0720707" translate="yes" xml:space="preserve">
          <source>The generated radio button tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9accd2772af76ed989dbcbcafad6820b2a8fcca6" translate="yes" xml:space="preserve">
          <source>The generated random bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7218746362d2bed85d69e95f353d0fa23f3fdef6" translate="yes" xml:space="preserve">
          <source>The generated random key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3551eedc7f700be3985960b0ca0ec5779098f48" translate="yes" xml:space="preserve">
          <source>The generated relation declarations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c5901c37bdcdc3bf76874773d46a5c4199105e" translate="yes" xml:space="preserve">
          <source>The generated reset button tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe8f38f6317e5e2903fe547ab03f973a6abdb0d" translate="yes" xml:space="preserve">
          <source>The generated script tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6219223166ae5c536b4b95bb08398f858b437e68" translate="yes" xml:space="preserve">
          <source>The generated sentence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b01ccc5e6ab230193860525fd035a15d4ac4df8" translate="yes" xml:space="preserve">
          <source>The generated start tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64b2fa44e429c56839d21733b4e0cf20f22b2da" translate="yes" xml:space="preserve">
          <source>The generated style tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5392c953cf87723fee4c820c57d57afbb10bdd" translate="yes" xml:space="preserve">
          <source>The generated submit button tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491b19dae2dacd3bae8b5188611590e366cfe73b" translate="yes" xml:space="preserve">
          <source>The generated table name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f94d8353a4b7f09485f75aa2a233a2fa8e00e6" translate="yes" xml:space="preserve">
          <source>The generated tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc23e59a4bc8d5d920600b4c8aa6a853f6ee5767" translate="yes" xml:space="preserve">
          <source>The generated text area tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449bad0e3d0f57fbb5bf07bb8c4be6e9ea5ea7b2" translate="yes" xml:space="preserve">
          <source>The generated text input tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f65aa652e113b38e286de227c931cc3ccc75a1" translate="yes" xml:space="preserve">
          <source>The generated textarea tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d96ddc19d2f9f7b9a9de981a16998a32ba978b" translate="yes" xml:space="preserve">
          <source>The generated unordered list. An empty list tag will be returned if &lt;code&gt;$items&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b7b470723b620a96255699845709b9f898b128" translate="yes" xml:space="preserve">
          <source>The generated validation rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f260f91ac649af77c9095566f3330dfcceda3617" translate="yes" xml:space="preserve">
          <source>The generated verification code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13803a54c288e4c2d3abb4c6317ae64f045b2afb" translate="yes" xml:space="preserve">
          <source>The given auth key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac7039c407a1ce9de6d92fc110b2dfab0bd07af" translate="yes" xml:space="preserve">
          <source>The given items. Please refer to &lt;a href=&quot;yii-bootstrap-dropdown#%24items-detail&quot;&gt;yii\bootstrap\Dropdown::$items&lt;/a&gt; for the array structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc45e040662f4d619a36e9a4a97bc0cd6eb805f3" translate="yes" xml:space="preserve">
          <source>The given limit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada41440ac624b2be74715bc0b624ed2f40bbec0" translate="yes" xml:space="preserve">
          <source>The given offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5715bba0552f51f15189df5216a24aed768f46a8" translate="yes" xml:space="preserve">
          <source>The given route is in the format of &lt;code&gt;abc/def/xyz&lt;/code&gt;. Try either &lt;code&gt;abc\DefController&lt;/code&gt; or &lt;code&gt;abc\def\XyzController&lt;/code&gt; class within the &lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;controller namespace&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d254d24d041b6127790e33dd87a0f6f67a090ac7" translate="yes" xml:space="preserve">
          <source>The grid view object that owns this column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb84db1d302c2ab335b8a2181e4f96f5f39e368" translate="yes" xml:space="preserve">
          <source>The handle of the stream to be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cc3d3c0f648312b4a556708b2249e8cc59d6c0" translate="yes" xml:space="preserve">
          <source>The handler will be invoked for EVERY successful ActiveRecord insertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49166fc5bbcf6865bc00ff288c3b80b600cf1779" translate="yes" xml:space="preserve">
          <source>The hash can then be associated with the corresponding model attribute, so it can be stored in the database for later use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19f0cae221833ce5d0d3a27ee8e87de11c1cf2c" translate="yes" xml:space="preserve">
          <source>The hash to verify the password against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ceacee5257be1e74789a84c119123c89e322a9" translate="yes" xml:space="preserve">
          <source>The hashed variable to store the pluginOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcf91de4a3a13039dfce542267b739c925d3bb6" translate="yes" xml:space="preserve">
          <source>The header cell content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f56bbf71a6cd013ea1fa59758e9ff8633c431e5" translate="yes" xml:space="preserve">
          <source>The header cell content. Note that it will not be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6a63bebb452aefc010663f82ffd17bc8f8e2c0" translate="yes" xml:space="preserve">
          <source>The header collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0188fe138ea54f0941c442f83c22139aff906da" translate="yes" xml:space="preserve">
          <source>The header collection contains incoming HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6bda5c49a3dfa4c19fcdaa94d5cbfd70b06d2f" translate="yes" xml:space="preserve">
          <source>The header collection contains the HTTP headers associated with HTTP message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b7de56ba3169f4a3738c211421bbce43e50c5d" translate="yes" xml:space="preserve">
          <source>The header collection contains the currently registered HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f898a9b6e20e48439a34e4e1acc658f37031c3" translate="yes" xml:space="preserve">
          <source>The header content in the modal window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e575b3ed923dd55c30c569c0fb9e963b1630fed6" translate="yes" xml:space="preserve">
          <source>The header name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f5d0f58b9c6be796217a15c736ae3a42f4c700" translate="yes" xml:space="preserve">
          <source>The header to be parsed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2b4e80f52057981e5ed374ab6f05b4644d69c5" translate="yes" xml:space="preserve">
          <source>The header value to be added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a172ca687889a767de08a0d59fda35fe4d982d8f" translate="yes" xml:space="preserve">
          <source>The header value with the specified name, null if the named header does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1040a318229b02cbcb2979351f73316cb1b4b572" translate="yes" xml:space="preserve">
          <source>The headers to populate from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4677467b6982816ffc6f7fd0bd1bc25d6d7de57a" translate="yes" xml:space="preserve">
          <source>The height of the generated CAPTCHA image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57d2a7a32471347b0a17196cf541b4e2818b743" translate="yes" xml:space="preserve">
          <source>The height of the generated CAPTCHA image. Defaults to 50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fd43cd8aa008e0bb346db27388ee236e4f81a9" translate="yes" xml:space="preserve">
          <source>The help information of the action arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657534cd4a8643d3355180a8eeade4b801daaded" translate="yes" xml:space="preserve">
          <source>The help information of the action options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14612910d952dc77a8c2c01c9143f3a10e6c363a" translate="yes" xml:space="preserve">
          <source>The highlight part of this search query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca79df301fb0ead2aa5c9b254d4c3d424e595b5" translate="yes" xml:space="preserve">
          <source>The highlight part of this search query. This is an array that allows to highlight search results on one or more fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecb45e1d54de56ac135f401d3bca0e26ec13dd3" translate="yes" xml:space="preserve">
          <source>The hint content. If &lt;code&gt;null&lt;/code&gt;, the hint will be generated via &lt;a href=&quot;yii-base-model#getAttributeHint()-detail&quot;&gt;yii\base\Model::getAttributeHint()&lt;/a&gt;. If &lt;code&gt;false&lt;/code&gt;, the generated field will not contain the hint part. Note that this will NOT be &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encoded&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c745306733213393d7b21a82ba3fffba02c18c8" translate="yes" xml:space="preserve">
          <source>The hint text is the hint associated with the attribute, obtained via &lt;a href=&quot;yii-base-model#getAttributeHint()-detail&quot;&gt;yii\base\Model::getAttributeHint()&lt;/a&gt;. If no hint content can be obtained, method will return an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e0233d14259667ecedee0fe95833ef7b64a64a" translate="yes" xml:space="preserve">
          <source>The homepage URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afce518fb2aa1d568c8b6787a765c80290f1b336" translate="yes" xml:space="preserve">
          <source>The host info (e.g. &quot;&lt;a href=&quot;http://www.example.com&quot;&gt;http://www.example.com&lt;/a&gt;&quot;) that is used by &lt;a href=&quot;yii-web-urlmanager#createAbsoluteUrl()-detail&quot;&gt;createAbsoluteUrl()&lt;/a&gt; to prepend to created URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33233bed1d3a72f846e937b98f49f165d3d2d5fc" translate="yes" xml:space="preserve">
          <source>The host info (e.g. &lt;code&gt;http://www.example.com&lt;/code&gt;) that is used by &lt;a href=&quot;yii-web-urlmanager#createAbsoluteUrl()-detail&quot;&gt;createAbsoluteUrl()&lt;/a&gt; to prepend to created URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840bc6b516a77e337c9761b5f5b1f870ada6e038" translate="yes" xml:space="preserve">
          <source>The host info (e.g. `&lt;a href=&quot;http://www&quot;&gt;http://www&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93440c0f6a1bed9021c5c40a522b494e3925996" translate="yes" xml:space="preserve">
          <source>The hostname or ip address to use for connecting to the redis server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244eef4e6f17c4fead310a6d1e8805a5ce3eaacc" translate="yes" xml:space="preserve">
          <source>The hostname or ip address to use for connecting to the redis server. Defaults to 'localhost'. If &lt;a href=&quot;yii-redis-connection#%24unixSocket-detail&quot;&gt;$unixSocket&lt;/a&gt; is specified, hostname and port will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6827e68d75763ff18ba9f225112b5b470ebed81" translate="yes" xml:space="preserve">
          <source>The identity associated with the given access token. Null is returned if the access token is invalid or &lt;a href=&quot;yii-web-user#login()-detail&quot;&gt;login()&lt;/a&gt; is unsuccessful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a612af2086cf5bd4dd058033000690faddd2f73" translate="yes" xml:space="preserve">
          <source>The identity information to be associated with the current user. If null, it means switching the current user to be a guest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87963c1f65d79a83a006520de5980d3ef4c82946" translate="yes" xml:space="preserve">
          <source>The identity object associated with the currently logged user. If null, it means the current user will be a guest without any associated identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fdbc3a5e79ea69b6474744fc9e27db22cbb550" translate="yes" xml:space="preserve">
          <source>The identity object associated with the currently logged-in user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418a5a77709da88dd63143bfecd54105285c6e3a" translate="yes" xml:space="preserve">
          <source>The identity object associated with the currently logged-in user. &lt;code&gt;null&lt;/code&gt; is returned if the user is not logged in (not authenticated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aac9c11fcd0da2fcd22887b26edd244ca381d98" translate="yes" xml:space="preserve">
          <source>The identity object associated with this event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7615a31726502a3ff607cf43123a70dbad316b85" translate="yes" xml:space="preserve">
          <source>The identity object that matches the given ID. Null should be returned if such an identity cannot be found or the identity is not in an active state (disabled, deleted, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d57e9a7b15fb56658cd24be371dfb509ef3142f" translate="yes" xml:space="preserve">
          <source>The identity object that matches the given token. Null should be returned if such an identity cannot be found or the identity is not in an active state (disabled, deleted, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e199368f2a09761b609b3cd338fe934ed26840e" translate="yes" xml:space="preserve">
          <source>The ids. An empty array will be returned if role is not assigned to any user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ea32b603bbfbac169268a4bb44ddb7fad8d2af" translate="yes" xml:space="preserve">
          <source>The image URL. This parameter will be processed by &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii\helpers\Url::to()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b2df3c4fa26639f1555e8ed9393f7bcfb172de" translate="yes" xml:space="preserve">
          <source>The image element rendered by Captcha will display a CAPTCHA image generated by an action whose route is specified by &lt;a href=&quot;yii-captcha-captcha#%24captchaAction-detail&quot;&gt;$captchaAction&lt;/a&gt;. This action must be an instance of &lt;a href=&quot;yii-captcha-captchaaction&quot;&gt;yii\captcha\CaptchaAction&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869a596f797f930158b8d336bcc7dde60ac5afe6" translate="yes" xml:space="preserve">
          <source>The implementation of this method referenced Zend_Controller_Request_Http in Zend Framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f6df1d289fe78ba8fdffd61cd271b623b02218" translate="yes" xml:space="preserve">
          <source>The implementation should normally throw UnauthorizedHttpException to indicate authentication failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7df5e6679649cc7b94a37bc1d5384fe2f40aaf" translate="yes" xml:space="preserve">
          <source>The index metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39be533e0993bc2ef15544e8ef5f2f494bb283d9" translate="yes" xml:space="preserve">
          <source>The index metadata object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79640e753b934319018a259cc9afd099c7e0db7" translate="yes" xml:space="preserve">
          <source>The index name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aac1fb0007ca261d1b27ff50924018500cc9d19" translate="yes" xml:space="preserve">
          <source>The index name to be converted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a40637cb5459cd3a7ea4aef0ab96cf3dccfbfd" translate="yes" xml:space="preserve">
          <source>The index names that match the pattern specified by &lt;a href=&quot;yii-sphinx-gii-model-generator#%24indexName-detail&quot;&gt;$indexName&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889726e0845dec7dc5f6822520a9badbaa568583" translate="yes" xml:space="preserve">
          <source>The index of the current row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1821764139a57e1ef537aebd2b43d2c05db06423" translate="yes" xml:space="preserve">
          <source>The index schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78676a78da2f85287c9a64d7d304e299dda7830d" translate="yes" xml:space="preserve">
          <source>The index that new rows will be inserted into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195bf015df71f8a1f2dbf1fd1bde1c1891b05336" translate="yes" xml:space="preserve">
          <source>The index that new rows will be replaced into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3aea54ed85cc972319c747037e821cd1cffee2" translate="yes" xml:space="preserve">
          <source>The index that new rows will be replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c83b6d9e304df68342d2e14830168ce3283823" translate="yes" xml:space="preserve">
          <source>The index to be truncated. The name will be properly quoted by the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19aea7cac7ad6d9a770755f8226ec9cbfb7835c" translate="yes" xml:space="preserve">
          <source>The index to be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b903898e9cae1aa2f0347bfaf0d853f05c226161" translate="yes" xml:space="preserve">
          <source>The index to retrieve data from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4461a929e29cc93d046d889bb3a6a9992b594abe" translate="yes" xml:space="preserve">
          <source>The index to retrieve data from. This can be a string representing a single index or a an array of multiple indexes. If this is &lt;code&gt;null&lt;/code&gt; it means that all indexes are being queried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c937e6288e03626c98797221101cc84191710c0f" translate="yes" xml:space="preserve">
          <source>The index to retrieve data from. This can be a string representing a single index or a an array of multiple indexes. If this is not set, indexes are being queried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c928f3c69718d5d13f8c223a3b53461f1b470c" translate="yes" xml:space="preserve">
          <source>The index where the data will be deleted from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c93f3d6639aeffe1598d272507464274f5b8c9e" translate="yes" xml:space="preserve">
          <source>The indexed and/or grouped array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b529c11ae37871c3ac3179749c34a866886d6afa" translate="yes" xml:space="preserve">
          <source>The indexes to execute the query on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e959c3546abc83481a8fdcde2d88981c5487274" translate="yes" xml:space="preserve">
          <source>The indexes to execute the query on. Defaults to null meaning all indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4868718b481ef5a7f8818420f95b8369c69a49" translate="yes" xml:space="preserve">
          <source>The informational link URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61dea67180b275d54b1e9f697dcd9ba0c11edf3" translate="yes" xml:space="preserve">
          <source>The init script file that should be executed when loading this fixture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011bd1a8094fc6cf90d125c6bf40be868ddeabdf" translate="yes" xml:space="preserve">
          <source>The init script file that should be executed when loading this fixture. This should be either a file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;. Note that if the file does not exist, no error will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d802273439e848d7e4acef6cea1008cc9365cc74" translate="yes" xml:space="preserve">
          <source>The input array should be multidimensional or an array of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70cff2688be09174909082aed777c416247f0e5" translate="yes" xml:space="preserve">
          <source>The input id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e72ae9c9a63ed0a6a2fbc95d921071afee63c1b" translate="yes" xml:space="preserve">
          <source>The input mask (e.g. '99/99/9999' for date input).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c75f123c158c70a77cac419dd5c28a1102447a6" translate="yes" xml:space="preserve">
          <source>The input mask (e.g. '99/99/9999' for date input). The following characters can be used in the mask and are predefined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c18d3c3aaea7340742cd9f1fccdc4130da62a50" translate="yes" xml:space="preserve">
          <source>The input name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ca737384e0451585bb03f59b64a70cf3f5837b" translate="yes" xml:space="preserve">
          <source>The input name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e2a078b00e6a96851a8892c34471f5a09063d4" translate="yes" xml:space="preserve">
          <source>The input name. This must be set if &lt;a href=&quot;yii-jui-inputwidget#%24model-detail&quot;&gt;$model&lt;/a&gt; and &lt;a href=&quot;yii-jui-inputwidget#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt; are not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01859343b5beb5533f62c5e2ecbe380da7f98a6a" translate="yes" xml:space="preserve">
          <source>The input name. This must be set if &lt;a href=&quot;yii-widgets-inputwidget#%24model-detail&quot;&gt;$model&lt;/a&gt; and &lt;a href=&quot;yii-widgets-inputwidget#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt; are not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb7d6ed63f24682c5e2b9ce1e38044fc8b2d3f2" translate="yes" xml:space="preserve">
          <source>The input options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1e99931658c2f6d49dac33e5c3100131ff81ba" translate="yes" xml:space="preserve">
          <source>The input should be either multidimensional array or an array of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fc46c7cd1e275bbd552ca99baf1284318cf394" translate="yes" xml:space="preserve">
          <source>The input string. Must be one character or longer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8dc06dc6a65573857a6509ef1c3024b90586cfc" translate="yes" xml:space="preserve">
          <source>The input to use for encryption and authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e949ccd1f2a7d1a8d1b1def479dcb41ec4842b" translate="yes" xml:space="preserve">
          <source>The input type (e.g. 'text', 'password')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e66fdf776137287168ab31326ff902fccde73cb" translate="yes" xml:space="preserve">
          <source>The input type (e.g. &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8c60c2295a70ed95d1521f1d0e780d2592f615" translate="yes" xml:space="preserve">
          <source>The input type. This can be 'listBox', 'radioList', or 'checkBoxList'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995f67c37397744a141535ae38d3e824e625bf19" translate="yes" xml:space="preserve">
          <source>The input type. This can be either &lt;code&gt;radio&lt;/code&gt; or &lt;code&gt;checkbox&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af60825cc9b6ecf1cec3fda1d01f60b9e2a9af3c" translate="yes" xml:space="preserve">
          <source>The input value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facca21d21c6c58efe2a48fa8a0526339a136291" translate="yes" xml:space="preserve">
          <source>The input value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c63d24129cf996f09fc8a1badc198b2612762a5" translate="yes" xml:space="preserve">
          <source>The input value. Note that it will be encoded using &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a6be86633ec9ae0cb787f88ec082fa7e37443a" translate="yes" xml:space="preserve">
          <source>The input value. This value will be converted using &lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;`Yii::$app-&amp;gt;formatter-&amp;gt;asDate()`&lt;/a&gt; with the &lt;a href=&quot;yii-jui-datepicker#%24dateFormat-detail&quot;&gt;$dateFormat&lt;/a&gt; if it is not null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dfb5906aef4377d9847ddd917733779960b897" translate="yes" xml:space="preserve">
          <source>The insert operation. This is mainly used when overriding &lt;a href=&quot;yii-db-activerecord#transactions()-detail&quot;&gt;transactions()&lt;/a&gt; to specify which operations are transactional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8bf32f638d6ac0b4465780c779387c4e0a3326" translate="yes" xml:space="preserve">
          <source>The insert operation. This is mainly used when overriding &lt;a href=&quot;yii-sphinx-activerecord#transactions()-detail&quot;&gt;transactions()&lt;/a&gt; to specify which operations are transactional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034b6f2a03da82556027a06b24ffbef743c713a1" translate="yes" xml:space="preserve">
          <source>The instance of the uploaded file. Null is returned if no file is uploaded for the specified model attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0443a8e1bb58c03a74af1baec5cb1bb7fbcddde1" translate="yes" xml:space="preserve">
          <source>The instance of the uploaded file. Null is returned if no file is uploaded for the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50da9efb009dc8284c3420ddcb199a1f2dbd639" translate="yes" xml:space="preserve">
          <source>The interface does not declare any method. Classes implementing this interface must declare their constructors like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3987ec204f1b11166b2f5999d6730ec563c891" translate="yes" xml:space="preserve">
          <source>The internationalization application component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513ad25fba2ea45465877374b8a4ea082afc7466" translate="yes" xml:space="preserve">
          <source>The isolation level to use for this transaction. See &lt;a href=&quot;yii-db-transaction#begin()-detail&quot;&gt;yii\db\Transaction::begin()&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80505be5526b1aa587d12405fa3bd211635620a" translate="yes" xml:space="preserve">
          <source>The item description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e625f34c4ba7ba5a06e9ef3d24af70b80bb186" translate="yes" xml:space="preserve">
          <source>The item index as each item group content must have an id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fbad5dcda8db093214814fd23f184863041191" translate="yes" xml:space="preserve">
          <source>The item index as the first item should be set to &lt;code&gt;active&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4f61d911674779850684d3452442a5e0304b9a" translate="yes" xml:space="preserve">
          <source>The item to add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9369db134993e437c07ed8fde2ecf1496994bac" translate="yes" xml:space="preserve">
          <source>The item to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ab34cdd60c8cf5734dbb4c54d922a2c812ab59" translate="yes" xml:space="preserve">
          <source>The item to render.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115ae1a54dd7e477b2ce4965e570351f74d36f1b" translate="yes" xml:space="preserve">
          <source>The items for generating the list. Each item generates a single list item. Note that items will be automatically HTML encoded if &lt;code&gt;$options['encode']&lt;/code&gt; is not set or true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361848b5de5c82ba48fcffac654f8223547a448e" translate="yes" xml:space="preserve">
          <source>The items that were removed from the array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e63d1d41dd9e3ba9026979c3fae6e82e7133ed" translate="yes" xml:space="preserve">
          <source>The items to be cached, as key-value pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3ce876c189aa23d0d4371709ec5786bce9a3c7" translate="yes" xml:space="preserve">
          <source>The items to be normalized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde31427f4388a276034e294933bfccdffe77688" translate="yes" xml:space="preserve">
          <source>The jQuery UI fallback definition to use for the ICU short patterns &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; and &lt;code&gt;full&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cf6e51eb8b0115f76c1ee62bd47dd1ac54d287" translate="yes" xml:space="preserve">
          <source>The jQuery UI fallback definition to use for the ICU short patterns &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; and &lt;code&gt;full&lt;/code&gt;. This is used as fallback when the intl extension is not installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dbf1aff2b9bfd4d455bb059622a1dadd42aef7" translate="yes" xml:space="preserve">
          <source>The jQuery event that will trigger form handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9a9fceab7a2802d45369f17fc4f6031ae28d83" translate="yes" xml:space="preserve">
          <source>The jQuery event that will trigger form handler. Defaults to &quot;submit&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95fed4580592d2ead2aadb224fc095e9dbf0a7d" translate="yes" xml:space="preserve">
          <source>The jQuery selector of the forms whose submissions should trigger pjax requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9396aa7f61d17d256156bd841a143927331fc84f" translate="yes" xml:space="preserve">
          <source>The jQuery selector of the forms whose submissions should trigger pjax requests. If not set, all forms with &lt;code&gt;data-pjax&lt;/code&gt; attribute within the enclosed content of Pjax will trigger pjax requests. If set to false, no code will be registered to handle forms. Note that if the response to the pjax request is a full page, a normal request will be sent again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e75b20f931d2145388615658078d6f80535669" translate="yes" xml:space="preserve">
          <source>The jQuery selector of the links that should trigger pjax requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739117ff36577c2244feb47be6566d6c0182dd52" translate="yes" xml:space="preserve">
          <source>The jQuery selector of the links that should trigger pjax requests. If not set, all links within the enclosed content of Pjax will trigger pjax requests. If set to false, no code will be registered to handle links. Note that if the response to the pjax request is a full page, a normal request will be sent again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd692badd69b5afc5b922f50424ca3eb2246375" translate="yes" xml:space="preserve">
          <source>The jQuery selectors for selecting the container, input and error tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a25d12394f0e9b5241df6799276103e2881e58" translate="yes" xml:space="preserve">
          <source>The jQuery selectors for selecting the container, input and error tags. The array keys should be &lt;code&gt;container&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt;, and/or &lt;code&gt;error&lt;/code&gt;, and the array values are the corresponding selectors. For example, &lt;code&gt;['input' =&amp;gt; '#my-input']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28517a4198bccc2be8b9c975d4f52b9517fc392c" translate="yes" xml:space="preserve">
          <source>The join condition that should appear in the ON part. Please refer to &lt;a href=&quot;yii-db-query#join()-detail&quot;&gt;join()&lt;/a&gt; on how to specify this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa93be10a49c00df3ec99041d04975e715fb03dc" translate="yes" xml:space="preserve">
          <source>The join condition that should appear in the ON part. Please refer to &lt;a href=&quot;yii-db-query#where()-detail&quot;&gt;where()&lt;/a&gt; on how to specify this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab04ad29c60cba0f3c3456d9175450bc082b1c37" translate="yes" xml:space="preserve">
          <source>The join condition that should appear in the ON part. Please refer to &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt; on how to specify this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f2c1adb34521e40d67bc5df5468d75f46cbca2" translate="yes" xml:space="preserve">
          <source>The join condition that should appear in the ON part. Please refer to &lt;a href=&quot;yii-sphinx-query#join()-detail&quot;&gt;join()&lt;/a&gt; on how to specify this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81286cb3c031c6a4b1175ec97c8d1cde39049606" translate="yes" xml:space="preserve">
          <source>The join condition to be used when this query is used in a relational context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412b30e3768de0b416230c35cbf4bab690ea6d32" translate="yes" xml:space="preserve">
          <source>The join condition to be used when this query is used in a relational context. The condition will be used in the ON part when &lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;yii\db\ActiveQuery::joinWith()&lt;/a&gt; is called. Otherwise, the condition will be used in the WHERE part of a query. Please refer to &lt;a href=&quot;yii-db-query#where()-detail&quot;&gt;yii\db\Query::where()&lt;/a&gt; on how to specify this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458233c0b374bd642f6cc38adfd6ca3512ce47fd" translate="yes" xml:space="preserve">
          <source>The join type of the relations specified in &lt;code&gt;$with&lt;/code&gt;. When this is a string, it applies to all relations specified in &lt;code&gt;$with&lt;/code&gt;. Use an array in the format of &lt;code&gt;relationName =&amp;gt; joinType&lt;/code&gt; to specify different join types for different relations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9efde70235ca7dbda67146409586389fc05859" translate="yes" xml:space="preserve">
          <source>The key associated with the data model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75794ed5adad77777240569c4cf3f8460c557db0" translate="yes" xml:space="preserve">
          <source>The key generated depends on both &lt;a href=&quot;yii-base-widget#%24id-detail&quot;&gt;$id&lt;/a&gt; and &lt;a href=&quot;yii-widgets-fragmentcache#%24variations-detail&quot;&gt;$variations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124332592cf902364e3ff60f33da21072a4ca8fc" translate="yes" xml:space="preserve">
          <source>The key identifying the flash message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de20921c34e7c01eb5149501e052e8111feac51" translate="yes" xml:space="preserve">
          <source>The key identifying the flash message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b043c9710d0de6bc06719a2a7c9058782cf0d7" translate="yes" xml:space="preserve">
          <source>The key identifying the flash message. Note that flash messages and normal session variables share the same name space. If you have a normal session variable using the same name, it will be removed by this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6413b3f0e6efb60c0d9762bbe5f59348bde86e" translate="yes" xml:space="preserve">
          <source>The key identifying the flash message. Note that flash messages and normal session variables share the same name space. If you have a normal session variable using the same name, its value will be overwritten by this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d5e5e517eb71e9698ff0dfb9f78bd47796d41f" translate="yes" xml:space="preserve">
          <source>The key identifying the value to be cached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319ec4f4a629bb28b9b26a2fc2a391c80a86711e" translate="yes" xml:space="preserve">
          <source>The key is the template type, the value is a path or the alias. Supported types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f88549e2a18584dc6868f00752091c0650e217" translate="yes" xml:space="preserve">
          <source>The key may be specified in a dot format to retrieve the value of a sub-array or the property of an embedded object. In particular, if the key is &lt;code&gt;x.y.z&lt;/code&gt;, then the returned value would be &lt;code&gt;$array['x']['y']['z']&lt;/code&gt; or &lt;code&gt;$array-&amp;gt;x-&amp;gt;y-&amp;gt;z&lt;/code&gt; (if &lt;code&gt;$array&lt;/code&gt; is an object). If &lt;code&gt;$array['x']&lt;/code&gt; or &lt;code&gt;$array-&amp;gt;x&lt;/code&gt; is neither an array nor an object, the default value will be returned. Note that if the array already has an element &lt;code&gt;x.y.z&lt;/code&gt;, then its value will be returned instead of going through the sub-arrays. So it is better to be done specifying an array of key names like &lt;code&gt;['x', 'y', 'z']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2d11d1ae397ea1d1848570e58305c736076ab2" translate="yes" xml:space="preserve">
          <source>The key of the current array element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26ef9064dab58f4b0874565cfbe7e14cdf28fd5" translate="yes" xml:space="preserve">
          <source>The key of the value to be deleted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b598ed95d53cba7267d0729fcce223a105bc1df5" translate="yes" xml:space="preserve">
          <source>The key should be unique for each individual user, and should be persistent so that it can be used to check the validity of the user identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b629d70796a0cdcc0c0665c262147ad35d97cf6" translate="yes" xml:space="preserve">
          <source>The key that identifies the CSS code block. If null, it will use $css as the key. If two CSS code blocks are registered with the same key, the latter will overwrite the former.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01118192db27f86c3faf76c6930fa0a23a9b870b" translate="yes" xml:space="preserve">
          <source>The key that identifies the CSS script file. If null, it will use $url as the key. If two CSS files are registered with the same key, the latter will overwrite the former.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e731acea5dc2b31c59f6bb8463c4137577a615f" translate="yes" xml:space="preserve">
          <source>The key that identifies the JS code block. If null, it will use $js as the key. If two JS code blocks are registered with the same key, the latter will overwrite the former.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e2f1b1715eef80bb836158bf0b32afda63494d" translate="yes" xml:space="preserve">
          <source>The key that identifies the JS script file. If null, it will use $url as the key. If two JS files are registered with the same key at the same position, the latter will overwrite the former. Note that position option takes precedence, thus files registered with the same key, but different position option will not override each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e9e033bb13ce8918ca1082abff283ffa25390d" translate="yes" xml:space="preserve">
          <source>The key that identifies the link tag. If two link tags are registered with the same key, the latter will overwrite the former. If this is null, the new link tag will be appended to the existing ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccf4bd90b758892018f7739b2560393b289c0a1" translate="yes" xml:space="preserve">
          <source>The key that identifies the meta tag. If two meta tags are registered with the same key, the latter will overwrite the former. If this is null, the new meta tag will be appended to the existing ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e05c497a046adee05fcba043cb95d9a2897192c" translate="yes" xml:space="preserve">
          <source>The key to be normalized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbc62df514cae3045f3fc1b30676ba6de60b8a0" translate="yes" xml:space="preserve">
          <source>The key to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9f46d4c79ada0fe65a7446ec749e0608c90cdb" translate="yes" xml:space="preserve">
          <source>The key used to cache response properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352c70776a3397538d411ad61ea7a3b16226f057" translate="yes" xml:space="preserve">
          <source>The key used to store RBAC data in cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2501dce706082be75070c9b747d4e8c418e1ec00" translate="yes" xml:space="preserve">
          <source>The key value associated with the data model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb3ceec8930ea0cf731e1235772b62eec74da3b" translate="yes" xml:space="preserve">
          <source>The key(s) to be sorted by. This refers to a key name of the sub-array elements, a property name of the objects, or an anonymous function returning the values for comparison purpose. The anonymous function signature should be: &lt;code&gt;function($item)&lt;/code&gt;. To sort by multiple keys, provide an array of keys here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25d326c7718e8e5761b238d51b659044b371d36" translate="yes" xml:space="preserve">
          <source>The keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce855278e51a13bb302f82e3436755e05c0728d9" translate="yes" xml:space="preserve">
          <source>The keys of &lt;a href=&quot;yii-web-assetmanager#%24assetMap-detail&quot;&gt;assetMap&lt;/a&gt; are the asset names that you want to fix, and the values are the desired asset paths. When you register an asset bundle with a view, each relative asset file in its &lt;a href=&quot;yii-web-assetbundle#%24css-detail&quot;&gt;css&lt;/a&gt; and &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;js&lt;/a&gt; arrays will be examined against this map. If any of the keys are found to be the last part of an asset file (which is prefixed with &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;yii\web\AssetBundle::$sourcePath&lt;/a&gt; if available), the corresponding value will replace the asset and be registered with the view. For example, the asset file &lt;code&gt;my/path/to/jquery.js&lt;/code&gt; matches the key &lt;code&gt;jquery.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fedcdfa977af0d51587a98d105a88561046782" translate="yes" xml:space="preserve">
          <source>The keys of the &lt;code&gt;formats&lt;/code&gt; property are the supported MIME types, while the values are the corresponding response format names which must be supported in &lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;yii\web\Response::$formatters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15eed2293a7427ad6d7eebd0e093e4a4dcc13635" translate="yes" xml:space="preserve">
          <source>The kind of headers we would handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4028f3dd221148e48581119eaf002b530da46be0" translate="yes" xml:space="preserve">
          <source>The label for the &quot;next&quot; page button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adca72520b65d94092084368eef86234fe39cb17" translate="yes" xml:space="preserve">
          <source>The label for the &quot;next&quot; page button. Note that this will NOT be HTML-encoded. If this property is false, the &quot;next&quot; page button will not be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8a1ee592b005692b3961dec6e5e9a43969b5e1" translate="yes" xml:space="preserve">
          <source>The label or null to use model label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000824bb1b2380d402e7483eac26966b46fd96db" translate="yes" xml:space="preserve">
          <source>The label text is the label associated with the attribute, obtained via &lt;a href=&quot;yii-base-model#getAttributeLabel()-detail&quot;&gt;yii\base\Model::getAttributeLabel()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81a910149920692e973407268d66ec597d86e74" translate="yes" xml:space="preserve">
          <source>The label to use. If &lt;code&gt;null&lt;/code&gt;, the label will be generated via &lt;a href=&quot;yii-base-model#getAttributeLabel()-detail&quot;&gt;yii\base\Model::getAttributeLabel()&lt;/a&gt;. If &lt;code&gt;false&lt;/code&gt;, the generated field will not contain the label part. Note that this will NOT be &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encoded&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478d8cc84f04419a8e4754a7172c51e850b899d6" translate="yes" xml:space="preserve">
          <source>The label to use. If &lt;code&gt;null&lt;/code&gt;, the label will be generated via \yii\bootstrap\Model::getAttributeLabel(). If &lt;code&gt;false&lt;/code&gt;, the generated field will not contain the label part. Note that this will NOT be &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encoded&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add94fe3d601cf367e3a4cc8e97e1c501b922d5b" translate="yes" xml:space="preserve">
          <source>The labels for the previous and the next control buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcf3c4901e82b572ee9d84ff5f22eb35c713431" translate="yes" xml:space="preserve">
          <source>The labels for the previous and the next control buttons. If false, it means the previous and the next control buttons should not be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6ac61b0f6483161f2fd71975a532099f16e39f" translate="yes" xml:space="preserve">
          <source>The language ID (e.g. en-US) that the message is to be translated to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3b57c193110d2b806c4ad3b093bb07fc882759" translate="yes" xml:space="preserve">
          <source>The language code (e.g. &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69e8b7b5b87ad6fcfb2f200e8444cb079853999" translate="yes" xml:space="preserve">
          <source>The language code (e.g. &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;). If this is null, the current &lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;application language&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae1d9fc2c85ecf6a7560cefcb751ddc5340182f" translate="yes" xml:space="preserve">
          <source>The language of the target resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60c2f93074625183fdcd1feab9b636c3b860c6f" translate="yes" xml:space="preserve">
          <source>The language resolution is based on the user preferred languages and the languages supported by the application. The method will try to find the best match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021cf3363df8bc8c18bc156bcda093870d5d8fc1" translate="yes" xml:space="preserve">
          <source>The language that is meant to be used for end users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec82acf0e50f4af2e675757789e78c8cd8b1c932" translate="yes" xml:space="preserve">
          <source>The language that is meant to be used for end users. It is recommended that you use &lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF language tags&lt;/a&gt;. For example, &lt;code&gt;en&lt;/code&gt; stands for English, while &lt;code&gt;en-US&lt;/code&gt; stands for English (United States).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5a5f8240f8e0f24e672f44ec74f9640f2cf4d1" translate="yes" xml:space="preserve">
          <source>The language that the application is written in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe14cae7eea676be9015f881ea0454f1d0edfa7" translate="yes" xml:space="preserve">
          <source>The language that the application is written in. This mainly refers to the language that the messages and view files are written in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88754e1b753edf3f9627c8e8dc63410a5832c13" translate="yes" xml:space="preserve">
          <source>The language that the application should use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7921a802f4cd8ce5901effdb1cff31137a3e84e4" translate="yes" xml:space="preserve">
          <source>The language that the original file is in. If not set, the value of &lt;a href=&quot;yii-base-application#%24sourceLanguage-detail&quot;&gt;yii\base\Application::$sourceLanguage&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374a1feb7267799ee82b82aa823fba713113605e" translate="yes" xml:space="preserve">
          <source>The language that the original messages are in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623cc41fe2821768604940ab5fdad21c3ee5ee8e" translate="yes" xml:space="preserve">
          <source>The language that the original messages are in. If not set, it will use the value of &lt;a href=&quot;yii-base-application#%24sourceLanguage-detail&quot;&gt;yii\base\Application::$sourceLanguage&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8ed55677c550ee44ba16e3bc6d368fc16ca41c" translate="yes" xml:space="preserve">
          <source>The languages ordered by the preference level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971982c3612ccacd85aa5818799784f56d297f0a" translate="yes" xml:space="preserve">
          <source>The languages ordered by the preference level. The first element represents the most preferred language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e289ae0d51802326ca05f17ffb3936587048b5c5" translate="yes" xml:space="preserve">
          <source>The languages that are acceptable by the end user. They should be ordered by the preference level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebfe93e0a34071df6353d79d4d67a95311f7f5e" translate="yes" xml:space="preserve">
          <source>The last argument is a unique script ID that is used to identify the script code block and replace an existing one with the same ID instead of adding a new one. If you don't provide it, the JS code itself will be used as the ID. It is used to avoid registration of the same code muliple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b16d98037cf01c0d3e732b4334bfc3e054b100" translate="yes" xml:space="preserve">
          <source>The last argument specifies an ID identifying this CSS file. If it is not provided, the URL of the CSS file will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62336f406e7072de5be8ee14814340617ee0ea14" translate="yes" xml:space="preserve">
          <source>The layout file path, or false if layout is not needed. Please refer to &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render()&lt;/a&gt; on how to specify this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad01bd2de97a43c533d4ba60c0affd612eaba477" translate="yes" xml:space="preserve">
          <source>The layout specific default configuration for this instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1009adc72f48e0080ade3ce86b8f52aad3612f" translate="yes" xml:space="preserve">
          <source>The layout that determines how different sections of the list view should be organized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09814e43d521ac31c4f87fbe6992625355f4b517" translate="yes" xml:space="preserve">
          <source>The layout that determines how different sections of the list view should be organized. The following tokens will be replaced with the corresponding section contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7a3c6beac0157edd35719d5de299c234427c3c" translate="yes" xml:space="preserve">
          <source>The layout that should be applied for views in this application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee4581546fee1e98917e2fb72ba81b518de6468" translate="yes" xml:space="preserve">
          <source>The layout that should be applied for views in this application. Defaults to 'main'. If this is false, layout will be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e3289971f2b1253c206a69125aeecba6db950e" translate="yes" xml:space="preserve">
          <source>The layout that should be applied for views within this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb50cb0a4b7b2fbda0ce0b03d19a07da2bbe011" translate="yes" xml:space="preserve">
          <source>The layout that should be applied for views within this module. This refers to a view name relative to &lt;a href=&quot;yii-base-module#%24layoutPath-detail&quot;&gt;$layoutPath&lt;/a&gt;. If this is not set, it means the layout value of the &lt;a href=&quot;yii-base-module#%24module-detail&quot;&gt;parent module&lt;/a&gt; will be taken. If this is &lt;code&gt;false&lt;/code&gt;, layout will be disabled within this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cb5d391393799bb8b78aeb385b3b64ede23377" translate="yes" xml:space="preserve">
          <source>The length of IPv4 address in bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210bf7c4f78b47aee163eef80b7d0a7337747e1d" translate="yes" xml:space="preserve">
          <source>The length of IPv6 address in bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9720e3cad9c4ea9f4c0f1ccd38d2d9f1be0bb05f" translate="yes" xml:space="preserve">
          <source>The length of the CSRF token mask. &lt;strong&gt;Deprecated since version 2.0.12: The mask length is now equal to the token length.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b018787e9f416ab826ec4b82821048e53eda2c" translate="yes" xml:space="preserve">
          <source>The length of the key in characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1bc8eb8af900c00af592ba5414aaccd68106ee" translate="yes" xml:space="preserve">
          <source>The length of the string not counting ANSI format characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45c955328cdad3426b6e28654d5f82f30d1fe15" translate="yes" xml:space="preserve">
          <source>The level of sub-directories to store cache files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346b3a080512754996d47df699b44e19640ebef8" translate="yes" xml:space="preserve">
          <source>The level of sub-directories to store cache files. Defaults to 1. If the system has huge number of cache files (e.g. one million), you may use a bigger value (usually no bigger than 3). Using sub-directories is mainly to ensure the file system is not over burdened with a single directory having too many files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57d7cdd4c44a3e860728fedea7dbec1399566b7" translate="yes" xml:space="preserve">
          <source>The level of the error raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b5effe1b9fff474ea746d2289788b8e1900375" translate="yes" xml:space="preserve">
          <source>The level of the message. This must be one of the following: &lt;code&gt;Logger::LEVEL_ERROR&lt;/code&gt;, &lt;code&gt;Logger::LEVEL_WARNING&lt;/code&gt;, &lt;code&gt;Logger::LEVEL_INFO&lt;/code&gt;, &lt;code&gt;Logger::LEVEL_TRACE&lt;/code&gt;, &lt;code&gt;Logger::LEVEL_PROFILE_BEGIN&lt;/code&gt;, &lt;code&gt;Logger::LEVEL_PROFILE_END&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceea5364d56207adf6a2d3c9fea0b8a8d651bd3" translate="yes" xml:space="preserve">
          <source>The limit number. See &lt;a href=&quot;yii-db-querytrait#limit()-detail&quot;&gt;yii\db\Query::limit()&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a43dea732a4b76d9fa95c190dc9b523e131c004" translate="yes" xml:space="preserve">
          <source>The limit number. See &lt;a href=&quot;yii-db-querytrait#limit()-detail&quot;&gt;yii\sphinx\Query::limit()&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9901fe7efee28c9ffc55af477feea496335e3eb" translate="yes" xml:space="preserve">
          <source>The limit number. See \yii\db\mssql\Query::limit for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3277f9bad46d635223883c72c5b60f8f6e963328" translate="yes" xml:space="preserve">
          <source>The limit number. See \yii\db\oci\Query::limit for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafa41f4aee3aba674436783b43b3e3776123a02" translate="yes" xml:space="preserve">
          <source>The limit of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9e20d41f9c890775d5e7292df08e3a3251d34a" translate="yes" xml:space="preserve">
          <source>The limit of the data. This may be used to set the LIMIT value for a SQL statement for fetching the current page of data. Note that if the page size is infinite, a value -1 will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5051afe49c1e5dad43b9c3d6979282e3d39cee65" translate="yes" xml:space="preserve">
          <source>The limit. Use null or negative value to disable limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d16b88d33975691018cfca7a0c4795519c1c0e" translate="yes" xml:space="preserve">
          <source>The line number the error was raised at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c8458109315af6a2b4c4a28102acd4690b3f50" translate="yes" xml:space="preserve">
          <source>The link between the junction table and the table associated with &lt;a href=&quot;yii-db-activerelationtrait#%24primaryModel-detail&quot;&gt;$primaryModel&lt;/a&gt;. The keys of the array represent the columns in the junction table, and the values represent the columns in the &lt;a href=&quot;yii-db-activerelationtrait#%24primaryModel-detail&quot;&gt;$primaryModel&lt;/a&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03cde2bf3d681ddbaacd812c1d55988c92a70a3c" translate="yes" xml:space="preserve">
          <source>The link to be rendered. It must contain the &quot;label&quot; element. The &quot;url&quot; element is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fbc0fb6de11eab793d06bf62b3fa73bc0cf147" translate="yes" xml:space="preserve">
          <source>The links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0fa28db6b2948a6d14e9e82c05888b30091145" translate="yes" xml:space="preserve">
          <source>The links for navigational purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91db692bfdd0f01c109de640074285e72b326102" translate="yes" xml:space="preserve">
          <source>The links for navigational purpose. The array keys specify the purpose of the links (e.g. &lt;a href=&quot;yii-data-pagination#LINK_FIRST-detail&quot;&gt;LINK_FIRST&lt;/a&gt;), and the array values are the corresponding URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6ec7b8629d93e22f6f85a8985daaf4e0d07cd9" translate="yes" xml:space="preserve">
          <source>The links to be serialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f5c8a0f57c82c8c41052847e97f98e1f978dbe" translate="yes" xml:space="preserve">
          <source>The list of IPs that are allowed to access this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2bdab1c6806d251f5ae51fb353b44979cb286b" translate="yes" xml:space="preserve">
          <source>The list of IPs that are allowed to access this module. Each array element represents a single IP filter which can be either an IP address or an address with wildcard (e.g. 192.168.0.*) to represent a network segment. The default value is &lt;code&gt;['127.0.0.1', '::1']&lt;/code&gt;, which means the module can only be accessed by localhost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df7c67585512358198c4d0cdb48cc6807afbd60" translate="yes" xml:space="preserve">
          <source>The list of attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9540321593cb111fac3d34b1064be722fc88283a" translate="yes" xml:space="preserve">
          <source>The list of attributes to be validated. Note that if an attribute is not associated with the validator - it will be ignored. If this parameter is null, every attribute listed in &lt;a href=&quot;yii-validators-validator#%24attributes-detail&quot;&gt;$attributes&lt;/a&gt; will be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a16331bca2955c9409917d19c94f8882ce7b75a" translate="yes" xml:space="preserve">
          <source>The list of auto complete values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d631bc1f8531b3c208f06ca0222f5632af835f4" translate="yes" xml:space="preserve">
          <source>The list of column values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a48e8d23b6101485bb01a2f89d773d74fefce83" translate="yes" xml:space="preserve">
          <source>The list of columns and aliases to be used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b8f1c94fa2a0c68dc142d27f3fb738929b5d66" translate="yes" xml:space="preserve">
          <source>The list of connection configurations in the server pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4b3cd911f4a33de5867dfecad938a2c42ddbd2" translate="yes" xml:space="preserve">
          <source>The list of constructor parameters. The parameters will be passed to the class constructor when &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;get()&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5631d2ceec6d4c47d3f2ea9179206f14a85e79" translate="yes" xml:space="preserve">
          <source>The list of data models in the current page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805835f1bd4846b6f05a2a45e1da184862e4061b" translate="yes" xml:space="preserve">
          <source>The list of expandable field names or field definitions. Please refer to &lt;a href=&quot;yii-base-arrayable#fields()-detail&quot;&gt;fields()&lt;/a&gt; on the format of the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875fd271a191100e9009e2747d7e4f5a7311c9c4" translate="yes" xml:space="preserve">
          <source>The list of expandable field names or field definitions. Please refer to &lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;fields()&lt;/a&gt; on the format of the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d07799b0d03623acc2f65972105827bee53c6f" translate="yes" xml:space="preserve">
          <source>The list of expandable field names or field definitions. Please refer to &lt;a href=&quot;yii-db-baseactiverecord#fields()-detail&quot;&gt;fields()&lt;/a&gt; on the format of the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09618bd4f6b502e0bf3664163367d57f5e72555b" translate="yes" xml:space="preserve">
          <source>The list of field names or field definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f941799352c14ff7994665829d7d54a74a7dc1" translate="yes" xml:space="preserve">
          <source>The list of fields to be exported. The array keys are the field names, and the array values are the corresponding object property names or PHP callables returning the field values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf8639b64d86b152317148ca73d63bee0a75dd4" translate="yes" xml:space="preserve">
          <source>The list of hint messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259cab4889371bee62c78e73918cc00f44eeb61c" translate="yes" xml:space="preserve">
          <source>The list of hosts that are allowed to access this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfebe8cd035feff9a8a41febdca8f36d94c5dccb" translate="yes" xml:space="preserve">
          <source>The list of hosts that are allowed to access this module. Each array element is a hostname that will be resolved to an IP address that is compared with the IP address of the user. A use case is to use a dynamic DNS (DDNS) to allow access. The default value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a156340040bdd49d5ca354e1429b15691f2932" translate="yes" xml:space="preserve">
          <source>The list of key values corresponding to &lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$models&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb8933c45200122ca946042d402fcca3793d58c" translate="yes" xml:space="preserve">
          <source>The list of key values corresponding to &lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$models&lt;/a&gt;. Each data model in &lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$models&lt;/a&gt; is uniquely identified by the corresponding key value in this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed19f5d2e3e14283d44a38f8c2e6fad387a132d" translate="yes" xml:space="preserve">
          <source>The list of key values corresponding to &lt;a href=&quot;yii-data-dataproviderinterface#getModels()-detail&quot;&gt;models&lt;/a&gt;. Each data model in &lt;a href=&quot;yii-data-dataproviderinterface#getModels()-detail&quot;&gt;models&lt;/a&gt; is uniquely identified by the corresponding key value in this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7234fd564f7db8a688b222c9050a1d057c7fd1" translate="yes" xml:space="preserve">
          <source>The list of the component definitions or the loaded component instances (ID =&amp;gt; definition or instance).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd6680b6b4eda5ac2a8359638c4abd06628fbe1" translate="yes" xml:space="preserve">
          <source>The list of the core code generator configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02130c5f8ccfc49129982b7d08f81fede73462a8" translate="yes" xml:space="preserve">
          <source>The list of the object definitions or the loaded shared objects (type or ID =&amp;gt; definition or instance).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4a2ba1b9e66eb9fff3e1d9469498ee0b118205" translate="yes" xml:space="preserve">
          <source>The loaded fixtures for the current test case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4c1423823e36dd926eee7b5087feb609fe5f90" translate="yes" xml:space="preserve">
          <source>The loaded generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1627ba7cef8283b3081bd207398cebf6812183ec" translate="yes" xml:space="preserve">
          <source>The loaded messages. The keys are original messages, and the values are the translated messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a47d0068cd161248e4d653c701d9d01adec73a" translate="yes" xml:space="preserve">
          <source>The loaded messages. The keys are original messages, and the values are translated messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2081fbd344da1a49e1d615ead128bd55f3f303d8" translate="yes" xml:space="preserve">
          <source>The locale ID (e.g. 'fr', 'de', 'en-GB') for the language to be used by the date picker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72588c6477691b7a995d05804f82f03eb17130c1" translate="yes" xml:space="preserve">
          <source>The locale ID (e.g. 'fr', 'de', 'en-GB') for the language to be used by the date picker. If this property is empty, then the current application language will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405d991fa777b28cc195694ca529a098c6f97d81" translate="yes" xml:space="preserve">
          <source>The locale ID that is used to localize the date and number formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd1bcdc358907540e1c50f637bd944ee3e76086" translate="yes" xml:space="preserve">
          <source>The locale ID that is used to localize the date and number formatting. For number and date formatting this is only effective when the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is installed. If not set, &lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;yii\base\Application::$language&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5472dd01c471362a526b5dce145e276f8cb80c7b" translate="yes" xml:space="preserve">
          <source>The locale ID that is used to localize the date parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf57da1127c1316e85381424385c5187e2b24dbf" translate="yes" xml:space="preserve">
          <source>The locale ID that is used to localize the date parsing. This is only effective when the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is installed. If not set, the locale of the &lt;a href=&quot;yii-base-application#%24formatter-detail&quot;&gt;formatter&lt;/a&gt; will be used. See also &lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;yii\i18n\Formatter::$locale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d42602cd00680cb8b722b89c4328fe24e8e76b" translate="yes" xml:space="preserve">
          <source>The locale to use for converting ICU short patterns &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; and &lt;code&gt;full&lt;/code&gt;. If not given, &lt;code&gt;Yii::$app-&amp;gt;language&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de834ee68268535f987daf49af26aac09dca4586" translate="yes" xml:space="preserve">
          <source>The locale to use for formatting locale-dependent parts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b5f2769a47a6d0816e83f0fdde40cd3538dfa3" translate="yes" xml:space="preserve">
          <source>The location of registered JavaScript code block or files. This means the location is at the beginning of the body section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098a8e815dc17b094da6b4a00dbf342a4daa1999" translate="yes" xml:space="preserve">
          <source>The location of registered JavaScript code block or files. This means the location is at the end of the body section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af7a785a2713e68fa868d8601f3029013d53dca" translate="yes" xml:space="preserve">
          <source>The location of registered JavaScript code block or files. This means the location is in the head section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288c3b10b1e2803ba6b6bbf65d42ff70ab648076" translate="yes" xml:space="preserve">
          <source>The location of registered JavaScript code block. This means the JavaScript code block will be enclosed within &lt;code&gt;jQuery(document).ready()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1be4443390f706e94a8c585c15bcc48ac7c3151" translate="yes" xml:space="preserve">
          <source>The location of registered JavaScript code block. This means the JavaScript code block will be enclosed within &lt;code&gt;jQuery(window).load()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762ef00c9c2610b25f26ff5a3c76d6e7fc448770" translate="yes" xml:space="preserve">
          <source>The log builder for this connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e99e33ef1716eac28cfbce3fe18406674af783" translate="yes" xml:space="preserve">
          <source>The log dispatcher application component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50da7a19c40bf090400b537f482c9d7ddbc4b106" translate="yes" xml:space="preserve">
          <source>The log file is specified via &lt;a href=&quot;yii-log-filetarget#%24logFile-detail&quot;&gt;$logFile&lt;/a&gt;. If the size of the log file exceeds &lt;a href=&quot;yii-log-filetarget#%24maxFileSize-detail&quot;&gt;$maxFileSize&lt;/a&gt; (in kilo-bytes), a rotation will be performed, which renames the current log file by suffixing the file name with '.1'. All existing log files are moved backwards by one place, i.e., '.2' to '.3', '.1' to '.2', and so on. The property &lt;a href=&quot;yii-log-filetarget#%24maxLogFiles-detail&quot;&gt;$maxLogFiles&lt;/a&gt; specifies how many history files to keep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8c199e648910dcaa3a63c44e72f0a1beb61de6" translate="yes" xml:space="preserve">
          <source>The log message to be formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58846a2343aa2b27dbdcd22564cc778c31e14b07" translate="yes" xml:space="preserve">
          <source>The log message to be formatted. The message structure follows that in &lt;a href=&quot;yii-log-logger#%24messages-detail&quot;&gt;yii\log\Logger::$messages&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb8888c9c7941ae0fab9b79d24c86e6a2fd50a4" translate="yes" xml:space="preserve">
          <source>The log messages obtained from profiling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d98ea9707eb106bc1a2dc209f71251a3bae7c90" translate="yes" xml:space="preserve">
          <source>The log targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5624dea21a82f5f09de9ae94463a197b9a0adfa9" translate="yes" xml:space="preserve">
          <source>The log targets. Each array element represents a single &lt;a href=&quot;yii-log-target&quot;&gt;log target&lt;/a&gt; instance or the configuration for creating the log target instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc539dbb38b32fd3a8f43db63b855e6ea44a3fe" translate="yes" xml:space="preserve">
          <source>The logged messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a1e4dc21b40e800ad4901e4ef769ff977a7db9" translate="yes" xml:space="preserve">
          <source>The logger object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd337f3fea10686462c883edaa3b34d15992c643" translate="yes" xml:space="preserve">
          <source>The logger to be used. This can either be a logger instance or a configuration that will be used to create one using &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii::createObject()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d9af06398f0b06422c3e0a1dbceaebc6a84ce8" translate="yes" xml:space="preserve">
          <source>The logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb588cedbc107113fc20d05d5d3c652e0b28816" translate="yes" xml:space="preserve">
          <source>The login page is assumed to serve &lt;code&gt;text/html&lt;/code&gt; or &lt;code&gt;application/xhtml+xml&lt;/code&gt; by default. You can change acceptable content types by modifying &lt;a href=&quot;yii-web-user#%24acceptableRedirectTypes-detail&quot;&gt;$acceptableRedirectTypes&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c872801ad10aee852ae2fe53d345687869d73ff" translate="yes" xml:space="preserve">
          <source>The logo URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4921703e943981c808472a8b636fca0ad00dbfcf" translate="yes" xml:space="preserve">
          <source>The look and feel of a grid view can be customized using the large amount of properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754132418f2a7e9a48b71c3d939f9486103dad47" translate="yes" xml:space="preserve">
          <source>The mail message being send.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51740b4141b98a8b7dd67684087b67fa4ecf35e7" translate="yes" xml:space="preserve">
          <source>The mailer application component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62566eea3c862a9a436ac006bc80979e120e8d8d" translate="yes" xml:space="preserve">
          <source>The mailer instance that created this message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51b0586e6e02c55ab7e516f6cf16ad7942656ca" translate="yes" xml:space="preserve">
          <source>The mailer instance that created this message. For independently created messages this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517fe6bf2c58e685930061fae8b58f92369b697e" translate="yes" xml:space="preserve">
          <source>The mailer object or the application component ID of the mailer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443455aee40a55b7b96e5e9551fa9598c9583140" translate="yes" xml:space="preserve">
          <source>The mailer object or the application component ID of the mailer object. After the EmailTarget object is created, if you want to change this property, you should only assign it with a mailer object. Starting from version 2.0.2, this can also be a configuration array for creating the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49143768f6c6925954f650f54634f2ddb16ba947" translate="yes" xml:space="preserve">
          <source>The mailer that should be used to send this message. If no mailer is given it will first check if &lt;a href=&quot;yii-mail-basemessage#%24mailer-detail&quot;&gt;$mailer&lt;/a&gt; is set and if not, the &quot;mail&quot; application component will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de4e6875929774cef9d0ec2ddd2dd3bf0864513" translate="yes" xml:space="preserve">
          <source>The mailer that should be used to send this message. If null, the &quot;mail&quot; application component will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57adaab5b41516a2b52e8a3f39a73389cef34bd6" translate="yes" xml:space="preserve">
          <source>The main method &lt;a href=&quot;yii-base-bootstrapinterface#bootstrap()-detail&quot;&gt;bootstrap()&lt;/a&gt; will be invoked by an application at the beginning of its &lt;code&gt;init()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baf609350ca3c19bd7c2c2ba27a9f3f70766c35" translate="yes" xml:space="preserve">
          <source>The main property of Menu is &lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$items&lt;/a&gt;, which specifies the possible items in the menu. A menu item can contain sub-items which specify the sub-menu under that menu item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31c99e8fac34da6855213be3d2c9606e3a7a6d7" translate="yes" xml:space="preserve">
          <source>The main setting of the data column is its &lt;a href=&quot;yii-grid-datacolumn#%24format-detail&quot;&gt;format&lt;/a&gt; property. Its values correspond to methods in the &lt;code&gt;formatter&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; that is &lt;a href=&quot;yii-i18n-formatter&quot;&gt;Formatter&lt;/a&gt; by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a0b80424b459f14fc271dec94d46ca3d14bdeb" translate="yes" xml:space="preserve">
          <source>The map reduce output collection name or output results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad95a6d9a8a9231b2f6353acf7a1e60a2b8239a" translate="yes" xml:space="preserve">
          <source>The mapping between view directories and their corresponding themed versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8852789f95ba701b00fcc2b0211e897de399e2d0" translate="yes" xml:space="preserve">
          <source>The mapping between view directories and their corresponding themed versions. This property is used by &lt;a href=&quot;yii-base-theme#applyTo()-detail&quot;&gt;applyTo()&lt;/a&gt; when a view is trying to apply the theme. &lt;a href=&quot;guide-concept-aliases&quot;&gt;Path aliases&lt;/a&gt; can be used when specifying directories. If this property is empty or not set, a mapping &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;yii\base\Application::$basePath&lt;/a&gt; to &lt;a href=&quot;yii-base-theme#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a5f97d5857c8a6c322d5d77c6a21584ca8715e" translate="yes" xml:space="preserve">
          <source>The mapping from file extensions to MIME types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d1a292f5b4be83cec07cac3f3e304c8923d249" translate="yes" xml:space="preserve">
          <source>The markdown flavor to use when none is specified explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199a1f7cf0a14f71bdb44f7d8c9c0a013fd12596" translate="yes" xml:space="preserve">
          <source>The markdown flavor to use when none is specified explicitly. Defaults to &lt;code&gt;original&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee9d11d42d2ed13159ba5a5f673b8c71979f32c" translate="yes" xml:space="preserve">
          <source>The markdown flavor to use. See &lt;a href=&quot;yii-helpers-basemarkdown#%24flavors-detail&quot;&gt;$flavors&lt;/a&gt; for available values. Defaults to &lt;a href=&quot;yii-helpers-basemarkdown#%24defaultFlavor-detail&quot;&gt;$defaultFlavor&lt;/a&gt;, if not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621f9e9f1fcd81948762b8dd8ec08f24e4ea8091" translate="yes" xml:space="preserve">
          <source>The markdown string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2a5ab246fa30d60a4fbc14aee879ed02d00105" translate="yes" xml:space="preserve">
          <source>The markdown text to parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcc1b96a6913b7795d1dd067982133418187e08" translate="yes" xml:space="preserve">
          <source>The masked text field is implemented based on the &lt;a href=&quot;https://github.com/RobinHerbots/Inputmask&quot;&gt;jQuery input masked plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea6914124ecd8032c17bfe941af42aa21ba5865" translate="yes" xml:space="preserve">
          <source>The match condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07260c3cca15508b57ccb211f9e98e90a691107" translate="yes" xml:space="preserve">
          <source>The matching localized file, or the original file if the localized version is not found. If the target and the source language codes are the same, the original file will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2150e295b36787a2ccae33a0299cc8ad1770199" translate="yes" xml:space="preserve">
          <source>The maximum file count the given attribute can hold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879fcbbfdb71d0f97dc797a9123350cab39c9601" translate="yes" xml:space="preserve">
          <source>The maximum file count the given attribute can hold. Defaults to 1, meaning single file upload. By defining a higher number, multiple uploads become possible. Setting it to &lt;code&gt;0&lt;/code&gt; means there is no limit on the number of files that can be uploaded simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f2037912e38b0c5c1df2cc1aa43ae13f360560" translate="yes" xml:space="preserve">
          <source>The maximum length for randomly generated word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a655bcf429b02690b0dcdd185c288625842de4" translate="yes" xml:space="preserve">
          <source>The maximum length for randomly generated word. Defaults to 7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ee9a161e6a63d72f59196ad3f2824fb42a8efb" translate="yes" xml:space="preserve">
          <source>The maximum number of allowed requests during a period</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b332e2c7a20375fe8ff5183d1aa38721431e6a" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes required for the uploaded file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37be8e0000e6161cfeb2bc0ddad4cac171c96f3a" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes required for the uploaded file. Defaults to null, meaning no limit. Note, the size limit is also affected by &lt;code&gt;upload_max_filesize&lt;/code&gt; and &lt;code&gt;post_max_size&lt;/code&gt; INI setting and the 'MAX_FILE_SIZE' hidden field value. See &lt;a href=&quot;yii-validators-filevalidator#getSizeLimit()-detail&quot;&gt;getSizeLimit()&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b707b920f7170dcfd7b1c939a74ce0388f387e90" translate="yes" xml:space="preserve">
          <source>The maximum number of debug data files to keep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e48a132fd6393ff7a3fb6be1bea606952b80757" translate="yes" xml:space="preserve">
          <source>The maximum number of debug data files to keep. If there are more files generated, the oldest ones will be removed.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
