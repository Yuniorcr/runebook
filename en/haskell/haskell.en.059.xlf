<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="c18feefd417a0cbe14e4acfc8ed24349072dc9a8" translate="yes" xml:space="preserve">
          <source>Conversion of values to readable &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41de73bd765f6dbd4ffbffd45f74c43aeabb1e7" translate="yes" xml:space="preserve">
          <source>Conversion of values to readable &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91fdf58947502d3e0a163a058adc4eb08aaa8e6" translate="yes" xml:space="preserve">
          <source>Conversion to and from Builders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dddf065c92050d6a5f8fc85ad8fce05b414e39" translate="yes" xml:space="preserve">
          <source>Conversion to and from ForeignPtrs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebce3a96a378128b8ca5b23650b13b3b0fd6ca4c" translate="yes" xml:space="preserve">
          <source>Conversion to other integral types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30122a0db100fe4f54ba80eca7d6a679af7e1ccb" translate="yes" xml:space="preserve">
          <source>Conversion with lists: packing and unpacking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08eaadf77cfdba7944ddcaf69eee5a983b74af3" translate="yes" xml:space="preserve">
          <source>Conversions</source>
          <target state="translated">Conversions</target>
        </trans-unit>
        <trans-unit id="73a7edc577732e7ee07365acc9871acb8143265a" translate="yes" xml:space="preserve">
          <source>Conversions between mutable and immutable arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa753fdc419d0d2bd21377afcbed18ec686ab147" translate="yes" xml:space="preserve">
          <source>Conversions to/from &lt;code&gt;BigNat&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f46d2bed780d5e07d0fc5283dc4e5893521bfe7" translate="yes" xml:space="preserve">
          <source>Convert &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;typed hole&lt;/a&gt; errors into warnings, &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;deferring the error until runtime&lt;/a&gt;. Implied by &lt;a href=&quot;#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt;. See also &lt;a href=&quot;#ghc-flag--Wtyped-holes&quot;&gt;&lt;code&gt;-Wtyped-holes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c2b2038e44c60303e29ec254e8c4dbb55f3cf4" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt;. Throws &lt;code&gt;&lt;a href=&quot;control-exception#v:Underflow&quot;&gt;Underflow&lt;/a&gt;&lt;/code&gt; when passed a negative &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1354e45c028636f8da1812d39c09c7b75b774c28" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;, matching zero &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to midnight of &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemEpochDay&quot;&gt;systemEpochDay&lt;/a&gt;&lt;/code&gt; UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09b0837999b09e91b54ee0d75c47ae892fd88e6" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;/code&gt;, matching zero &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to midnight of &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemEpochDay&quot;&gt;systemEpochDay&lt;/a&gt;&lt;/code&gt; UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac7818ee694c684710c555ffce6d02662bb549a" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;data-time-clock-tai#t:AbsoluteTime&quot;&gt;AbsoluteTime&lt;/a&gt;&lt;/code&gt;, matching zero &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to midnight of &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemEpochDay&quot;&gt;systemEpochDay&lt;/a&gt;&lt;/code&gt; TAI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b93bd92cc585aef504bf93a90660df07bdbe176" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;../base-4.12.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, converting characters that need to be escaped to HTML entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1ac996b3e8ececfc585027a89d993e882456a0" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;../base-4.12.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, converting characters that need to be escaped to HTML entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dba9cd9b73ede4abfec6448cd33c6df3348a76f" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;../base-4.12.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, converting characters that need to be escaped to HTML entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ead5afd69ddf93203b14bb57b2bcdf7910b417f" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; computation to &lt;code&gt;&lt;a href=&quot;control-monad-trans-maybe#t:MaybeT&quot;&gt;MaybeT&lt;/a&gt;&lt;/code&gt;, discarding the value of any exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b71074c790dcab4a6fefe131bcedd0f0fb3ea10" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;control-monad-trans-maybe#t:MaybeT&quot;&gt;MaybeT&lt;/a&gt;&lt;/code&gt; computation to &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt;, with a default exception value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cf9c88591a73abb39623630b404d0de5e67ca0" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt;&lt;/code&gt; stream by executing it on &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt;s allocated according to the given &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:AllocationStrategy&quot;&gt;AllocationStrategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26b60596f796c7c2c441d6c0ddfa0d0dc5b2e09" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt; ()&lt;/code&gt; to a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ddacb8d6db585b9396ae6f414b4ed4bdb1a501" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt;&lt;/code&gt; to a lazy tuple of the result and the written &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ab4d261dbd9413a55631dbec9803e8597233bd" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; action to a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e4754c6c58fa94215bb6e620a8b435ed45b584" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6100385e2c51dcd20067f630c16ceecbf9c49f97" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; returned is not necessarily unique; several &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt;s may map to the same &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (in practice however, the chances of this are small, so the result of &lt;code&gt;&lt;a href=&quot;ghc-stablename#v:hashStableName&quot;&gt;hashStableName&lt;/a&gt;&lt;/code&gt; makes a good hash key).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32af3d5dd3e225fe3673711f6fe71bdf33e15fca" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; returned is not necessarily unique; several &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt;s may map to the same &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (in practice however, the chances of this are small, so the result of &lt;code&gt;&lt;a href=&quot;system-mem-stablename#v:hashStableName&quot;&gt;hashStableName&lt;/a&gt;&lt;/code&gt; makes a good hash key).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e58fc4b1ce8fdb1edeccf4026d54972e93401e" translate="yes" xml:space="preserve">
          <source>Convert a Boolean in numeric representation to a Haskell value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add57a579fbcbc7b16ccd3672e91b7fa3c349b2c" translate="yes" xml:space="preserve">
          <source>Convert a C &lt;code&gt;signed char&lt;/code&gt;, representing a Latin-1 character, to the corresponding Haskell character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9408d5e16c71eb46b7f791b4ee5933182b4f9aea" translate="yes" xml:space="preserve">
          <source>Convert a C &lt;code&gt;unsigned char&lt;/code&gt;, representing a Latin-1 character, to the corresponding Haskell character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c61174035ed24642151950b9ed59d6a72e55c6d" translate="yes" xml:space="preserve">
          <source>Convert a C byte, representing a Latin-1 character, to the corresponding Haskell character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7995722c1381aea793cbfef4cf08b9e9aedbfe" translate="yes" xml:space="preserve">
          <source>Convert a Haskell &lt;code&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; to its numeric representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a88d0144531b579e58e385eb9438f51858e5d2" translate="yes" xml:space="preserve">
          <source>Convert a Haskell character to a C &lt;code&gt;signed char&lt;/code&gt;. This function is only safe on the first 256 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a986a3e036e3a2cc3cd0aee1a2f7d483f1688c07" translate="yes" xml:space="preserve">
          <source>Convert a Haskell character to a C &lt;code&gt;unsigned char&lt;/code&gt;. This function is only safe on the first 256 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38588134e51b133267d7afb4a6741974cc50b0f" translate="yes" xml:space="preserve">
          <source>Convert a Haskell character to a C character. This function is only safe on the first 256 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd33d417fbb44d20ec17b95d99a21d44693d7347" translate="yes" xml:space="preserve">
          <source>Convert a Word# into a Natural</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca866413f6e188d3a66231d0ec884291f9e0307" translate="yes" xml:space="preserve">
          <source>Convert a bit queue builder to a bit queue. This shifts in a new guard bit on the left, and shifts right until the old guard bit falls off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54977b34bb26a075a505f22f3cb19c02522b8bd" translate="yes" xml:space="preserve">
          <source>Convert a bit queue to a list of bits by unconsing. This is used to test that the queue functions properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3f317342c4c33d787139161d4a3ef9c58795fe" translate="yes" xml:space="preserve">
          <source>Convert a character to a string using only printable characters, using Haskell source-language escape conventions. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461fea11388916477d6dcd61f862a5783f75cc17" translate="yes" xml:space="preserve">
          <source>Convert a count of days and a time of day since midnight into a period of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440236428189e86240a4304a31fcfaa848f47a40" translate="yes" xml:space="preserve">
          <source>Convert a lazy &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation into a strict one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8848ddf3c54b6f57f6a9214c1c385e34929acb" translate="yes" xml:space="preserve">
          <source>Convert a lazy &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation into a strict one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75aea82a106bb03cf50fe05303197cceb4e2a8ef" translate="yes" xml:space="preserve">
          <source>Convert a letter to the corresponding lower-case letter, if any. Any other character is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee6954ed78015ea7d29b640b65fc7c12fcd0d84" translate="yes" xml:space="preserve">
          <source>Convert a letter to the corresponding title-case or upper-case letter, if any. (Title case differs from upper case only for a small number of ligature letters.) Any other character is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a93cb00f30ee92c18395187903b9b72f61487d" translate="yes" xml:space="preserve">
          <source>Convert a letter to the corresponding upper-case letter, if any. Any other character is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01ce343f251d5f421082350ad1567d3a7d947b8" translate="yes" xml:space="preserve">
          <source>Convert a list of call-sites to a &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec112ccbf1d4d737285d15bbf0515ce549babede" translate="yes" xml:space="preserve">
          <source>Convert a list of call-sites to a &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2ffd055ca02feb544b1080310fdc071a30c577" translate="yes" xml:space="preserve">
          <source>Convert a list of call-sites to a &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5d0a3738078db61665b290ff0d18c35edd8348" translate="yes" xml:space="preserve">
          <source>Convert a path into an absolute path. If the given path is relative, the current directory is prepended and the path may or may not be simplified. If the path is already absolute, the path is returned unchanged. The function preserves the presence or absence of the trailing path separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce36b3d9e0f7bb9e6aa680a0ec3e982cfb3aeee9" translate="yes" xml:space="preserve">
          <source>Convert a path into an absolute path. If the given path is relative, the current directory is prepended and then the combined result is normalized. If the path is already absolute, the path is simply normalized. The function preserves the presence or absence of the trailing path separator unless the path refers to the root directory &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e0bce6c1946d87ddff4dfb34893c7681f51eba" translate="yes" xml:space="preserve">
          <source>Convert a peek combinator into a one returning &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if applied to a &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4188bdd6ed5599fcdeb2cff29ed135b428f53ee4" translate="yes" xml:space="preserve">
          <source>Convert a period of time into a count of days and a time of day since midnight. The time of day will never have a leap second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834dbf3c13dffcbe8c79a14d60d773cd25ca966b" translate="yes" xml:space="preserve">
          <source>Convert a read-only computation into an accumulation computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f999a2287b1ca726aefc5cbc4affe6fd9f01db29" translate="yes" xml:space="preserve">
          <source>Convert a selection computation to a continuation-passing computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c30195beaa2bdb370ac55c764a09a1d124d25d" translate="yes" xml:space="preserve">
          <source>Convert a single digit &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; to the corresponding &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. This function fails unless its argument satisfies &lt;code&gt;&lt;a href=&quot;data-char#v:isHexDigit&quot;&gt;isHexDigit&lt;/a&gt;&lt;/code&gt;, but recognises both upper- and lower-case hexadecimal digits (that is, &lt;code&gt;'0'&lt;/code&gt;..&lt;code&gt;'9'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;..&lt;code&gt;'f'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;..&lt;code&gt;'F'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b58abdc7314d189db4477d184c4c7f4ad1b8ea" translate="yes" xml:space="preserve">
          <source>Convert a stream to a normal list efficiently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fc8d3c0ff49b685e7d1277606e1714ef38e232" translate="yes" xml:space="preserve">
          <source>Convert a strict &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation into a lazy one. The strict state thread passed to &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:strictToLazyST&quot;&gt;strictToLazyST&lt;/a&gt;&lt;/code&gt; is not performed until the result of the lazy state thread it returns is demanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd7667ea5e65ac9aa16df2f526ffa83317e3f90" translate="yes" xml:space="preserve">
          <source>Convert a strict &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation into a lazy one. The strict state thread passed to &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:strictToLazyST&quot;&gt;strictToLazyST&lt;/a&gt;&lt;/code&gt; is not performed until the result of the lazy state thread it returns is demanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c85eee20a2c7195a879b2859c36bc00d4409d03" translate="yes" xml:space="preserve">
          <source>Convert a strict pair to a standard pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcaba7de3acf83d2343a96e8cd0e9db73d554961" translate="yes" xml:space="preserve">
          <source>Convert a string into an unknown type-level symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af4693ff19cc7b50bb5b292b3837c46600843dd" translate="yes" xml:space="preserve">
          <source>Convert a time of day in UTC to a time of day in some timezone, together with a day adjustment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610f52f47184222d2336a2cfe271511a7eb2035c" translate="yes" xml:space="preserve">
          <source>Convert a time of day in some timezone to a time of day in UTC, together with a day adjustment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5186433eee47a0a45b61419a36e8bc0b1244558b" translate="yes" xml:space="preserve">
          <source>Convert a value to a readable &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3affb50ec8f318ae3a162e125de023dcfdeb9fb8" translate="yes" xml:space="preserve">
          <source>Convert a value to a readable &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cc1077c425874ff1c4f259b425fac56418f735" translate="yes" xml:space="preserve">
          <source>Convert a writer computation into an accumulation computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3097bc8f451f472a403377815e4fba2d572f590" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action to an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. This relies on &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; having the same representation modulo the constraint on the state thread type parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f79fe0c96bf72632a61bfe4daf1548a63999379" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action to an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. This relies on &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; having the same representation modulo the constraint on the state thread type parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3dce826b1745d7c992b21222274c6017c12a60" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; in the range &lt;code&gt;0&lt;/code&gt;..&lt;code&gt;15&lt;/code&gt; to the corresponding single digit &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;. This function fails on other inputs, and generates lower-case hexadecimal digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f0b6b1260d5defd56a239f83bfbed4227bb373" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action into an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action. The type of the result is constrained to use a &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; state thread, and therefore the result cannot be passed to &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f2267726028a74544624c09249fb0ad0568827" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action to an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action. This relies on &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; having the same representation modulo the constraint on the state thread type parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8669d2a4196ccf1ec2548a59f26e2f961b9e43" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action to an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action. This relies on &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; having the same representation modulo the constraint on the state thread type parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9624afdf7d460a90aeb20a9d89d18f01c7440f" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;Addr#&lt;/code&gt; to a followable Any type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27dde92842032874ddd117444ea1996f0f6a7f3" translate="yes" xml:space="preserve">
          <source>Convert an HValueRef to an HValue. Should only be used if the HValue originated in this process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3b5b5e30a7279d8b066b2899f4ba5bb8b255f3" translate="yes" xml:space="preserve">
          <source>Convert an accumulation (append-only) computation into a fully stateful computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c26a9a80ed57fafedee05dfb536a7db66f700a" translate="yes" xml:space="preserve">
          <source>Convert an array of given length into a Haskell list. The implementation is tail-recursive and so uses constant stack space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff3affd229bfd39f3632c917a3fb014f44bb93b" translate="yes" xml:space="preserve">
          <source>Convert an array terminated by the given end marker into a Haskell list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22024ce50341e68ba27616082b9f97f4ffa58e3" translate="yes" xml:space="preserve">
          <source>Convert an immutable array to a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f9aa467cfcf62fbe469b7ccf956bd45e053001" translate="yes" xml:space="preserve">
          <source>Convert an integer into an unknown type-level natural.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf621a15d173cd265c3ba565665dcb436a36fb6" translate="yes" xml:space="preserve">
          <source>Convert day of year in the Gregorian or Julian calendars to month and day. First arg is leap year flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37f7ac9a35a02cf8326f872bb9f3fbea761ab56" translate="yes" xml:space="preserve">
          <source>Convert empty paths to the current directory, otherwise leave it unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63405a27647cb210fb1a3a5f7dfb33b37f497009" translate="yes" xml:space="preserve">
          <source>Convert from &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;control-applicative-lift#t:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt; (inverse of &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:runErrors&quot;&gt;runErrors&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f3d416fef322766db7239cb611c35c46da47b8" translate="yes" xml:space="preserve">
          <source>Convert from ISO 8601 Ordinal Date format. Invalid day numbers return &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb864c9536371d3479760fce4e9bde5e881f31d4" translate="yes" xml:space="preserve">
          <source>Convert from ISO 8601 Ordinal Date format. Invalid day numbers will be clipped to the correct range (1 to 365 or 366).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a325947c34d0c6972435f016ee2ce8b3f602a4" translate="yes" xml:space="preserve">
          <source>Convert from ISO 8601 Week Date format. First argument is year, second week number (1-52 or 53), third day of week (1 for Monday to 7 for Sunday). Invalid week and day values will be clipped to the correct range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7cf0382c17e7377e5a95ac6ce7dfb066a00a948" translate="yes" xml:space="preserve">
          <source>Convert from ISO 8601 Week Date format. First argument is year, second week number (1-52 or 53), third day of week (1 for Monday to 7 for Sunday). Invalid week and day values will return Nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67eb0938a355fe3cf134ea7ed1362e4214969392" translate="yes" xml:space="preserve">
          <source>Convert from a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt;
&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59f506ff81e94fc6fe05d0f1e56a736002791fa" translate="yes" xml:space="preserve">
          <source>Convert from an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85644c051d11a3568fa6cc60adce651a22f8d86a" translate="yes" xml:space="preserve">
          <source>Convert from an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2eaadd9bf8f5f6c98721679570631814b1be28b" translate="yes" xml:space="preserve">
          <source>Convert from an &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b83e98c957ac7804ac824a5c19642bc967e35e" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Gregorian calendar. First argument is year, second month number (1-12), third day (1-31). Invalid values will be clipped to the correct range, month first, then day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469c7c0640886e82239e7d6cc781ea45a2b6b968" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Gregorian calendar. First argument is year, second month number (1-12), third day (1-31). Invalid values will return Nothing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b305509e78a4fc56609978b75821aeba0ef88991" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Julian calendar. First argument is year, second month number (1-12), third day (1-31). Invalid values will be clipped to the correct range, month first, then day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff62787e9261f7cdda067a1867b18b1005af48f1" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Julian calendar. First argument is year, second month number (1-12), third day (1-31). Invalid values will return Nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b312ed692dd9941efb9f711c0fe97a68a51681" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Julian year and day format. Invalid day numbers will be clipped to the correct range (1 to 365 or 366).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791436a0af7c6a7b742e32360b555f2662b6a13b" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Julian year and day format. Invalid day numbers will return Nothing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4109dbd23cca830e424df2b2ec9b825b78f79d" translate="yes" xml:space="preserve">
          <source>Convert from the datatype to its representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e27c8607e8afb531582e838c540e6692c273a0" translate="yes" xml:space="preserve">
          <source>Convert from the representation to the datatype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6af6cc7168a09017d2e2b0ecf8578dfd9965fb" translate="yes" xml:space="preserve">
          <source>Convert month and day in the Gregorian or Julian calendars to day of year. First arg is leap year flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bf03ef36655551931dc898719f97831c239fdf" translate="yes" xml:space="preserve">
          <source>Convert propositional (nominal) equality to representational equality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ce469a115dc3dc5aca28141f9d487f32bab06b" translate="yes" xml:space="preserve">
          <source>Convert the filled part of a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt; to a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31ccd4043fb20c8e7fee555c14ee36e4d6ae1a5" translate="yes" xml:space="preserve">
          <source>Convert to ISO 8601 Ordinal Date format. First element of result is year (proleptic Gregoran calendar), second is the day of the year, with 1 for Jan 1, and 365 (or 366 in leap years) for Dec 31.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d242675b463d83dcd5a529af5d365a9e8ad39b5d" translate="yes" xml:space="preserve">
          <source>Convert to ISO 8601 Week Date format. First element of result is year, second week number (1-53), third day of week (1 for Monday to 7 for Sunday). Note that &quot;Week&quot; years are not quite the same as Gregorian years, as the first day of the year is always a Monday. The first week of a year is the first week to contain at least four days in the corresponding Gregorian year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78267ac5f05b0a0dee850776bf0e019ff5377188" translate="yes" xml:space="preserve">
          <source>Convert to an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. It is implementation-dependent what &lt;code&gt;&lt;a href=&quot;ghc-enum#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; returns when applied to a value that is too large to fit in an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c9ad262cdb4a665746bcaa5dfd395de14cdae0" translate="yes" xml:space="preserve">
          <source>Convert to an &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. It is implementation-dependent what &lt;code&gt;&lt;a href=&quot;prelude#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; returns when applied to a value that is too large to fit in an &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a9a439e957cd49c9d8784d65671a76323cc5ad" translate="yes" xml:space="preserve">
          <source>Convert to integer. First component of the result is -1 or 1, indicating the sign of the mantissa. The next two are the high and low 32 bits of the mantissa respectively, and the last is the exponent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6538f02c12e21155f3cc865514637d9896586b" translate="yes" xml:space="preserve">
          <source>Convert to integers. First &lt;code&gt;Int#&lt;/code&gt; in result is the mantissa; second is the exponent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae47d5cd27263ada9ba8089a719b9a36300f0c2c" translate="yes" xml:space="preserve">
          <source>Convert to proleptic Gregorian calendar. First element of result is year, second month number (1-12), third day (1-31).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72db1a605e2f1c123e7e1ed3c7fd9ba09542193" translate="yes" xml:space="preserve">
          <source>Convert to proleptic Julian calendar. First element of result is year, second month number (1-12), third day (1-31).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed6adcb53e75e65f8cb94103d28123301c88d1e" translate="yes" xml:space="preserve">
          <source>Convert to proleptic Julian year and day format. First element of result is year (proleptic Julian calendar), second is the day of the year, with 1 for Jan 1, and 365 (or 366 in leap years) for Dec 31.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec35eab1bf8ff757aa20928e847beae39bb272d" translate="yes" xml:space="preserve">
          <source>Convert to the right kind of slashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b3c8c7134f1be8fb9c57a3fda74d276f2730ca" translate="yes" xml:space="preserve">
          <source>Convert variable out of scope variables errors into warnings. Implied by &lt;a href=&quot;#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt;. See also &lt;a href=&quot;#ghc-flag--Wdeferred-out-of-scope-variables&quot;&gt;&lt;code&gt;-Wdeferred-out-of-scope-variables&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a89fde6d6a92b19247264815bcda3f0b2c24bd4" translate="yes" xml:space="preserve">
          <source>Converters</source>
          <target state="translated">Converters</target>
        </trans-unit>
        <trans-unit id="ff40a1f4372ec126fbc5f44bcd1d70873f2d3f79" translate="yes" xml:space="preserve">
          <source>Converting &lt;code&gt;ST&lt;/code&gt; To &lt;code&gt;IO&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf173807d599be5f29f6ea397af0b52832ad9d4" translate="yes" xml:space="preserve">
          <source>Converting &lt;code&gt;ST&lt;/code&gt; to &lt;code&gt;IO&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cb2a8750427f7936586698517ff65216593ac5" translate="yes" xml:space="preserve">
          <source>Converting CStrings to ByteStrings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98449002eb0ed21951bbe655a615daa43b56371c" translate="yes" xml:space="preserve">
          <source>Converting between strict and lazy &lt;code&gt;ST&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c6feacad13dc3a7138b2212b529d8c5680b28c" translate="yes" xml:space="preserve">
          <source>Converting file descriptors to/from Handles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0482ba24d08f59046a76206fba405db795c7a5de" translate="yes" xml:space="preserve">
          <source>Converting from &lt;code&gt;String&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da1118e3ce662c6d206a1124e1f9ba8ebb26e62" translate="yes" xml:space="preserve">
          <source>Converting strings to HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4173bd74d262e9479ccd9e3c4de001cad6940370" translate="yes" xml:space="preserve">
          <source>Converting strings to values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6aba911527a738e2e03952c04bcad448968ea8" translate="yes" xml:space="preserve">
          <source>Converting to &lt;code&gt;String&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99547e8858198f6f2cfd4feb3bb5dc4ae63a091a" translate="yes" xml:space="preserve">
          <source>Converting to and from &lt;code&gt;Dynamic&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba505af9c39acec63179b145d28b2331f7f82ad" translate="yes" xml:space="preserve">
          <source>Converting to and from &lt;code&gt;String&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972c7a51a520be22fe11e2861b6607eb4b51c1df" translate="yes" xml:space="preserve">
          <source>Converting to and from a list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb4b84c140907b7598e2afe6ec587285f72643a" translate="yes" xml:space="preserve">
          <source>Converting values into documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62536252f28880b1dbb14db038090613b03b91d" translate="yes" xml:space="preserve">
          <source>Converting values to readable strings: the &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class and associated functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddea431bb3209cff12fab73f2837f2465f33f10" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; object back into an ordinary Haskell value of the correct type. See also &lt;code&gt;&lt;a href=&quot;data-dynamic#v:fromDyn&quot;&gt;fromDyn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbc864b9aed65009fb8ffc13a989024ff90273d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; object back into an ordinary Haskell value of the correct type. See also &lt;code&gt;&lt;a href=&quot;data-dynamic#v:fromDynamic&quot;&gt;fromDynamic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f58f5ad653117a2104c2ccbb8afa4ff7fd0b7e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; value into any type in class &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ead0b1836cb8fca1049909ca74508d6393e424" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; value into any type in class &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3ef5cb8d8e26efbc35a30fe7984ec9410503e6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;withXXX&lt;/code&gt; combinator into one marshalling a value wrapped into a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; to represent &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a905138dbf7107147e68ec78f26c025a56c006" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;withXXX&lt;/code&gt; combinator into one marshalling a value wrapped into a &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; to represent &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b090cd3e952fb38c4328670fe0e5cd245edb4c59" translate="yes" xml:space="preserve">
          <source>Converts a Haskell ReadS-style function into a parser. Warning: This introduces local backtracking in the resulting parser, and therefore a possible inefficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d258218a53afaa6146ce3bd0d2b2a0432cdb695c" translate="yes" xml:space="preserve">
          <source>Converts a mutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt;) to an immutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt;) by taking a complete copy of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db665403b470abc0f5b248c6aa39ff8da55be4ea" translate="yes" xml:space="preserve">
          <source>Converts a mutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-marray-safe#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt;) to an immutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt;) by taking a complete copy of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e70d82801df49daa796bb73ccabdb90c8e58b3c" translate="yes" xml:space="preserve">
          <source>Converts a normal list to a &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b7b406f45837988453307ff0a7cf0906222f89" translate="yes" xml:space="preserve">
          <source>Converts a parser into a Haskell ReadS-style function. This is the main way in which you can &quot;run&quot; a &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt;&lt;/code&gt; parser: the expanded type is &lt;code&gt; readP_to_S :: ReadP a -&amp;gt; String -&amp;gt; [(a,String)] &lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da27aa3e38fb7a7fa5871ce895ef8edaca7b071" translate="yes" xml:space="preserve">
          <source>Converts a possibly-negative &lt;code&gt;&lt;a href=&quot;ghc-real#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; value to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be635d9afe4b8e08d188497be0abe1248a45335b" translate="yes" xml:space="preserve">
          <source>Converts a possibly-negative &lt;code&gt;&lt;a href=&quot;prelude#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; value to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02762da8d09e5dbf151927cc46d9f8f56d134201" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;&lt;a href=&quot;../base-4.12.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; into a &lt;code&gt;&lt;a href=&quot;../base-4.12.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; that can be used with the standard Haskell IO library (see &lt;a href=&quot;../base-4.12.0.0/system-io&quot;&gt;System.IO&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55c1799c540db0b8d11acaf3d49077eec4e2b09" translate="yes" xml:space="preserve">
          <source>Converts an arbitrary value into an object of type &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1571584db72c118261d0ab776d67ce2f640a04c" translate="yes" xml:space="preserve">
          <source>Converts an immutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt;) into a mutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt;) by taking a complete copy of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194bdb8f1345b25ef47f537b89822d85290b899a" translate="yes" xml:space="preserve">
          <source>Converts an immutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt;) into a mutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-marray-safe#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt;) by taking a complete copy of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18ac7fa4a02f89db21f9adc7c2d4ab678ce5872" translate="yes" xml:space="preserve">
          <source>Converts an immutable array into a mutable array. The implementation may either simply cast the array from one type to the other without copying the array, or it may take a full copy of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96c2c572aa22372004feee4685547a459b6486b" translate="yes" xml:space="preserve">
          <source>Converts an mutable array into an immutable array. The implementation may either simply cast the array from one type to the other without copying the array, or it may take a full copy of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9704fe5361082e38fe0837b2d9fb771ce65a4b" translate="yes" xml:space="preserve">
          <source>Convinience definitions for working with &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72213a972c400aa0d57ccb1834e5a497f989eb2" translate="yes" xml:space="preserve">
          <source>Convinience definitions for working with &lt;code&gt;&lt;a href=&quot;../text-1.2.4.0/data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c58873957476a0d13386da8ab1aaf0968fb357" translate="yes" xml:space="preserve">
          <source>Convinience definitions for working with lazy &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b0b4b24f6dda602a523816f006da6afa42fa95" translate="yes" xml:space="preserve">
          <source>Copies the given number of bytes from the second area (source) into the first (destination); the copied areas &lt;em&gt;may&lt;/em&gt; overlap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f375eff7a072273bedab4df7dc2d55e5b4438e" translate="yes" xml:space="preserve">
          <source>Copies the given number of bytes from the second area (source) into the first (destination); the copied areas may &lt;em&gt;not&lt;/em&gt; overlap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7370cc0ddb7aa8412bb477820ffa609369bfe22" translate="yes" xml:space="preserve">
          <source>Copy a file with its associated metadata. If the destination file already exists, it is overwritten. There is no guarantee of atomicity in the replacement of the destination file. Neither path may refer to an existing directory. If the source and/or destination are symbolic links, the copy is performed on the targets of the links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ba749731c0b029c990c8a392be73e07cfc5d28" translate="yes" xml:space="preserve">
          <source>Copy a file with its permissions. If the destination file already exists, it is replaced atomically. Neither path may refer to an existing directory. No exceptions are thrown if the permissions could not be copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c03b4539be0395f5dece752373b846d414becf" translate="yes" xml:space="preserve">
          <source>Copy a memory range starting at the Addr# to the specified range in the MutableByteArray#. The memory region at Addr# and the ByteArray# must fully contain the specified ranges, but this is not checked. The Addr# must not point into the MutableByteArray# (e.g. if the MutableByteArray# were pinned), but this is not checked either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b958776ae71006550392eb451998a15b80fd73" translate="yes" xml:space="preserve">
          <source>Copy a range of the ArrayArray# to the specified region in the MutableArrayArray#. Both arrays must fully contain the specified ranges, but this is not checked. The two arrays must not be the same array in different states, but this is not checked either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2259fc41f9bf3fd3964399d4a856d49c2541f19" translate="yes" xml:space="preserve">
          <source>Copy a range of the ByteArray# to the memory range starting at the Addr#. The ByteArray# and the memory region at Addr# must fully contain the specified ranges, but this is not checked. The Addr# must not point into the ByteArray# (e.g. if the ByteArray# were pinned), but this is not checked either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b81ff3e9f8618d42f23d16984ec0efe8f654f4e" translate="yes" xml:space="preserve">
          <source>Copy a range of the MutableByteArray# to the memory range starting at the Addr#. The MutableByteArray# and the memory region at Addr# must fully contain the specified ranges, but this is not checked. The Addr# must not point into the MutableByteArray# (e.g. if the MutableByteArray# were pinned), but this is not checked either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e98456630d78a0c1b8233f9c4a42ab48eb4c2b4" translate="yes" xml:space="preserve">
          <source>Copy a range of the first MutableArrayArray# to the specified region in the second MutableArrayArray#. Both arrays must fully contain the specified ranges, but this is not checked. The regions are allowed to overlap, although this is only possible when the same array is provided as both the source and the destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3358cc06858ef1837cac03859b4ffe623b0985" translate="yes" xml:space="preserve">
          <source>Copy a range of the first MutableByteArray# to the specified region in the second MutableByteArray#. Both arrays must fully contain the specified ranges, but this is not checked. The regions are allowed to overlap, although this is only possible when the same array is provided as both the source and the destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf9459a64b2b7b5fc0ee5c07d5b6f628ffb6e2d" translate="yes" xml:space="preserve">
          <source>Copy all data from a file to a handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3ae9975a13d3c351b4d04b7cadbe07aa23dd36" translate="yes" xml:space="preserve">
          <source>Copy data from one handle to another until end of file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49089833661d92c10e46ac3b85707492d4283604" translate="yes" xml:space="preserve">
          <source>Copy some elements of a mutable array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f16d968b545bf097a6f37b71ac7033bbeba57b" translate="yes" xml:space="preserve">
          <source>Copy some elements of an immutable array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6562da081dbd47a9d7b80efae6dc0c0fc316533a" translate="yes" xml:space="preserve">
          <source>Copy the given number of elements from the second array (source) into the first array (destination); the copied areas &lt;em&gt;may&lt;/em&gt; overlap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86802b0d2fff91a8e1351b2e7b686942496e819" translate="yes" xml:space="preserve">
          <source>Copy the given number of elements from the second array (source) into the first array (destination); the copied areas may &lt;em&gt;not&lt;/em&gt; overlap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703ebcc4482f1e2fb8745f39c4f020b62cd0e1aa" translate="yes" xml:space="preserve">
          <source>Copy the permissions of one file to another. This reproduces the permissions more accurately than using &lt;code&gt;&lt;a href=&quot;system-directory#v:getPermissions&quot;&gt;getPermissions&lt;/a&gt;&lt;/code&gt; followed by &lt;code&gt;&lt;a href=&quot;system-directory#v:setPermissions&quot;&gt;setPermissions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b7de9894fd26b8d14ca6988e963239baff6ad4" translate="yes" xml:space="preserve">
          <source>Copying</source>
          <target state="translated">Copying</target>
        </trans-unit>
        <trans-unit id="3a8f5d919db1d18829220cf2186b85c84a9c0ce3" translate="yes" xml:space="preserve">
          <source>Copying ByteStrings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a420abf6e89816696d0724f377c00c6447c28f0a" translate="yes" xml:space="preserve">
          <source>Copyright</source>
          <target state="translated">Copyright</target>
        </trans-unit>
        <trans-unit id="f34f7ece0033be1157bb2ea62d68ea31d3a1999d" translate="yes" xml:space="preserve">
          <source>Copyright sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f47f4645aaef2045dee2741d015b26c6ec59db" translate="yes" xml:space="preserve">
          <source>Core dumps contain a large amount of information. Depending on what you are doing, not all of it will be useful. Use these flags to suppress the parts that you are not interested in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15a5148b9c1ee468348de4c9e13ef760f806003" translate="yes" xml:space="preserve">
          <source>Core representation and simplification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd2e3153c231b0770a66b56bd4d7ead1486a42a" translate="yes" xml:space="preserve">
          <source>Core stream fusion functionality for text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68445a701b2ec7a561a15f4a2c994aa11a81cac4" translate="yes" xml:space="preserve">
          <source>Core types and functions for the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; monoid and its generalization, the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094ded4e031e4987e25d535bf16ee1c81bb249cd" translate="yes" xml:space="preserve">
          <source>Correctly instrumented code provides coverage information of two kinds: source coverage and boolean-control coverage. Source coverage is the extent to which every part of the program was used, measured at three different levels: declarations (both top-level and local), alternatives (among several equations or case branches) and expressions (at every level). Boolean coverage is the extent to which each of the values True and False is obtained in every syntactic boolean context (ie. guard, condition, qualifier).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a84bf10f17131cd3bbe05e6d6b69842f08da92" translate="yes" xml:space="preserve">
          <source>Correspond to some of the int flags from C's fcntl.h.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3083b12b64eedd917dae6d40d788078aa911156b" translate="yes" xml:space="preserve">
          <source>Cost centre annotations can also appear in the top-level or in a declaration context. In that case you need to pass a function name defined in the same module or scope with the annotation. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a57dec5dab2c8600419bf9a0f35dd5a900db94" translate="yes" xml:space="preserve">
          <source>Cost centres are just program annotations. When you say &lt;code&gt;-fprof-auto&lt;/code&gt; to the compiler, it automatically inserts a cost centre annotation around every binding not marked INLINE in your program, but you are entirely free to add cost centre annotations yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfe9147164335478c6505e7792c465be684c626" translate="yes" xml:space="preserve">
          <source>CostCentre</source>
          <target state="translated">CostCentre</target>
        </trans-unit>
        <trans-unit id="bb8c68a235a0709f0f1575a65aea2c3233e7b3c8" translate="yes" xml:space="preserve">
          <source>CostCentreStack</source>
          <target state="translated">CostCentreStack</target>
        </trans-unit>
        <trans-unit id="17b7cb4f62cf8b34e2d355c70d772c07a9c249b9" translate="yes" xml:space="preserve">
          <source>CostCentresAll</source>
          <target state="translated">CostCentresAll</target>
        </trans-unit>
        <trans-unit id="34880f8a0edcd55dfce8473beea622cdcc056d3b" translate="yes" xml:space="preserve">
          <source>CostCentresJSON</source>
          <target state="translated">CostCentresJSON</target>
        </trans-unit>
        <trans-unit id="0739dd2ceaf7613ecfbe7585f0298037df383653" translate="yes" xml:space="preserve">
          <source>CostCentresNone</source>
          <target state="translated">CostCentresNone</target>
        </trans-unit>
        <trans-unit id="0375166c101d8700c9288a1bacf44e490fed6e11" translate="yes" xml:space="preserve">
          <source>CostCentresSummary</source>
          <target state="translated">CostCentresSummary</target>
        </trans-unit>
        <trans-unit id="693cfea7e902b11abdc78940917858c40fc362a4" translate="yes" xml:space="preserve">
          <source>CostCentresVerbose</source>
          <target state="translated">CostCentresVerbose</target>
        </trans-unit>
        <trans-unit id="20a97932f00140e6abca9c5265b02f10696707bc" translate="yes" xml:space="preserve">
          <source>Could not decode a byte sequence because it was invalid under the given encoding, or ran out of input in mid-decode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e12969c225cc6d65e18210488acb826eba907e" translate="yes" xml:space="preserve">
          <source>Count</source>
          <target state="translated">Count</target>
        </trans-unit>
        <trans-unit id="fe1cc521035a196e773c4a8058997db13978c627" translate="yes" xml:space="preserve">
          <source>Count leading zeros in a 64-bit word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace8357e575af86590a89513b902c958c8980d3b" translate="yes" xml:space="preserve">
          <source>Count leading zeros in a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c73627fc4fd426c7fb8e46ebd01cbfd252acac" translate="yes" xml:space="preserve">
          <source>Count leading zeros in the lower 16 bits of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865329aabf6c11fe2986bac17e7c792957dbce43" translate="yes" xml:space="preserve">
          <source>Count leading zeros in the lower 32 bits of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6005e90398520d2ddd82a456fd4ecdff930046f9" translate="yes" xml:space="preserve">
          <source>Count leading zeros in the lower 8 bits of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962b503db00b1879672bcf5ddf3d085de53c8149" translate="yes" xml:space="preserve">
          <source>Count number of set bits. For negative arguments returns negative population count of negated argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63090ecac9b0f57709ee501a0435d228fe773b35" translate="yes" xml:space="preserve">
          <source>Count number of zero bits following the least significant set bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5faeacbce8f47c677bf96f6dc4c1b07606858fc8" translate="yes" xml:space="preserve">
          <source>Count number of zero bits preceding the most significant set bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846dc456d8def4f1b260a6da69f7b7fbe3df67ec" translate="yes" xml:space="preserve">
          <source>Count of &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:GmpLimb&quot;&gt;GmpLimb&lt;/a&gt;&lt;/code&gt;s, must be positive (unless specified otherwise).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968c5d63647ccad23d5845924b8ad126e11fc3c0" translate="yes" xml:space="preserve">
          <source>Count the number of leaves in the tree:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ba0602752c999e2b1af71b124c514535f3a370" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in a 64-bit word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de38555facf060099d7100744f90c6f19bf42ebf" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e12af935c1c09d3bcc55efcd42491435100638" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in the lower 16 bits of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502e6842237bc7395372b3ecfd7f130090008bfb" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in the lower 32 bits of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8beae6de25ee4645fd4845f0007b7246fed692" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in the lower 8 bits of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e42b339884c70f35a6332efcbdfdf754c50e096" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in a 64-bit word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01aec7ad840416ccdaf0e0340d4c72c7f5f5464" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd11dfc96a67079f175a06a8e98a8a0280f000d8" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in the lower 16 bits of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7378b9b285283323f64c8e328b2ee5a0c5dcfd" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in the lower 32 bits of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a08e4694fc99f309fef7d332b71b56cd7c3dda" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in the lower 8 bits of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7810ca2eec9994e430b34bfbe7314516c25672d5" translate="yes" xml:space="preserve">
          <source>Counting</source>
          <target state="translated">Counting</target>
        </trans-unit>
        <trans-unit id="f027a8b8a8793e448266ca8427d676578bbb3a62" translate="yes" xml:space="preserve">
          <source>Covariant maps for tactics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e131440f69a2587f5c701c399ddee50b8b84976f" translate="yes" xml:space="preserve">
          <source>Cpp</source>
          <target state="translated">Cpp</target>
        </trans-unit>
        <trans-unit id="71899b9c58c5fa970a54ea8ca721e5c8881e4ea5" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;MutVar#&lt;/code&gt; with specified initial value in specified state thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd79f3974a375b94ca3336287dc3156af9dc178" translate="yes" xml:space="preserve">
          <source>Create ByteString of size &lt;code&gt;l&lt;/code&gt; and use action &lt;code&gt;f&lt;/code&gt; to fill it's contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b35794a4db80f46d09ae5f0f93b508db91517a" translate="yes" xml:space="preserve">
          <source>Create ByteString of up to size size &lt;code&gt;l&lt;/code&gt; and use action &lt;code&gt;f&lt;/code&gt; to fill it's contents which returns its true size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0945deb2c25ab70c2886de7a1095808fed6401d5" translate="yes" xml:space="preserve">
          <source>Create Simple MAPI-session by logon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00045f2da876d4c575659e861cdc511bbfb730ab" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; which contains the supplied value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0803ec81cb3e82177f6bdf3135ff80b12cec95eb" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; which is initially empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff9c04c9b23f38a861cb2dcee73a0838b483bf9" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting the same sequence of bytes as a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; inserts large chunks of the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly, but copies small ones to ensure that the generated chunks are large on average.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756d9726d3c4afa0501e00686cab8175fde2a167" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting the same sequence of bytes as a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; inserts large &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s directly, but copies small ones to ensure that the generated chunks are large on average.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8082f8ed051f7d5aa24e3ae9264cc7457689650" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that encodes a list of values consecutively using a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for each element. This function is more efficient than the canonical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97bb11d4a028d1bdcf23ef87494572bd93b6397" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that encodes a sequence generated from a seed value using a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for each sequence element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e50bff5d707a845a13084b9a9418eb725fcf7b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that encodes each &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; of a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;. For example, we can write a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that filters a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5b440a25af7d8a6d033ee2c0d4aa99f941053e" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that encodes values with the given &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8925f336391a694d9217788be990e809b9e36b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting the same sequence of bytes as a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; inserts large chunks of the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly, but copies small ones to ensure that the generated chunks are large on average.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45be853fdd5f3117cd54a8929b9cc6c349053db8" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting the same sequence of bytes as a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; inserts large &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s directly, but copies small ones to ensure that the generated chunks are large on average.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db85620f84495a90f05bfed7f97054ac264d43f9" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-time-clock#t:DiffTime&quot;&gt;DiffTime&lt;/a&gt;&lt;/code&gt; from a number of picoseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ee02840fe2d65f0f66f7f5fac6512b64c205b1" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-time-clock#t:DiffTime&quot;&gt;DiffTime&lt;/a&gt;&lt;/code&gt; which represents an integral number of seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cf657720739c222d1ad7e74033369a0823ad2c" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-time-clock#t:NominalDiffTime&quot;&gt;NominalDiffTime&lt;/a&gt;&lt;/code&gt; from a number of seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca821b3aed22d09be20b7a0b697024210b14e69e" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:ForeignRef&quot;&gt;ForeignRef&lt;/a&gt;&lt;/code&gt; from a &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:RemoteRef&quot;&gt;RemoteRef&lt;/a&gt;&lt;/code&gt;. The finalizer should arrange to call &lt;code&gt;freeHValueRef&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt;. (since this function needs to be called in the process that created the &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt;, it cannot be called directly from the finalizer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b1c0b9e3b7377d3fb704254d436888da703f96" translate="yes" xml:space="preserve">
          <source>Create a &lt;em&gt;directory&lt;/em&gt; symbolic link. The target path can be either absolute or relative and need not refer to an existing directory. The order of arguments follows the POSIX convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92afe06e8360d935ffa0176ee680da6d515bd51d" translate="yes" xml:space="preserve">
          <source>Create a &lt;em&gt;file&lt;/em&gt; symbolic link. The target path can be either absolute or relative and need not refer to an existing file. The order of arguments follows the POSIX convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d762bdc6134516ec533e840ad44faee5c8ac10f" translate="yes" xml:space="preserve">
          <source>Create a Haskell &lt;code&gt;&lt;a href=&quot;../base-4.12.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; from a Windows &lt;code&gt;&lt;a href=&quot;system-win32-types#t:HANDLE&quot;&gt;HANDLE&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5802df023298c4d16cf0b9712b8c70a4b7e9f148" translate="yes" xml:space="preserve">
          <source>Create a custom allocation strategy. See the code for &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:safeStrategy&quot;&gt;safeStrategy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:untrimmedStrategy&quot;&gt;untrimmedStrategy&lt;/a&gt;&lt;/code&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8e31fcd93a870f79943de5f8da99266563a5fe" translate="yes" xml:space="preserve">
          <source>Create a finished completion out of the given word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58cf08c8ca6e9d8e367573248dc7abe191bbfc0" translate="yes" xml:space="preserve">
          <source>Create a mutable byte array that the GC guarantees not to move.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd1495853d6b79fa3d7de4879e4f0b3ff310bd9" translate="yes" xml:space="preserve">
          <source>Create a mutable byte array, aligned by the specified amount, that the GC guarantees not to move.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f00dd1caa57025743acb620673aca92325ea94a" translate="yes" xml:space="preserve">
          <source>Create a nameless non-summer timezone for this number of hours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69c61885d235f126ac1a1c5ffb931b232d9dea4" translate="yes" xml:space="preserve">
          <source>Create a nameless non-summer timezone for this number of minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8508d459c4bff012afd8c5c0c0f0f926a7e005dd" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; holding a value supplied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af477688018958b86db99d8bc227f224fba9b3fd" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; holding a value supplied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77360c2c7cdba4d7876a1e48915312076868236" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; holding a value supplied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38180d40d7c61af3911ac6376d1b69ab379c5227" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; with the given source name, and line number and column number set to 1, the upper left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6ef286fe16e752b32e572d6c496342eb951a2c" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; with the given source name, line number and column number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daea250c1ea7ee436301f9cd3ff21648d39b426d" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; with the given source name, and line number and column number set to 1, the upper left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c76b562980b75a054716cda65a92b5a25047a1d" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; with the given source name, line number and column number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39dcd97a1dc08bc2569b3fc23fd8ed00fabccda6" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;TVar#&lt;/code&gt; holding a specified initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00160bd46f8c39abd64446014cdb16af8aa67d19" translate="yes" xml:space="preserve">
          <source>Create a new Compact with the given size (in bytes, not words). The size is rounded up to a multiple of the allocator block size, and capped to one mega block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f586fe8956038825470043a85ce56f1b0a9b45f1" translate="yes" xml:space="preserve">
          <source>Create a new array of breakpoint flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114bc5f557448f87ba3ba37d21a33303d48e608b" translate="yes" xml:space="preserve">
          <source>Create a new event manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ba7cf2f715d09d883a2584e949b47dbe98eab6" translate="yes" xml:space="preserve">
          <source>Create a new mutable array of arrays with the specified number of elements, in the specified state thread, with each element recursively referring to the newly created array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f2ac2227f78c40097b4522ee37bec2c89c5e10" translate="yes" xml:space="preserve">
          <source>Create a new mutable array with the specified number of elements, in the specified state thread, with each element containing the specified initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466a1587cd583580f451238c1058532cc7173ae1" translate="yes" xml:space="preserve">
          <source>Create a new mutable byte array of specified size (in bytes), in the specified state thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d38747d5cafb62a1d4c23189ab75d25c33220ef" translate="yes" xml:space="preserve">
          <source>Create a new pipe. The returned &lt;code&gt;Handle&lt;/code&gt; will use the default encoding and newline translation mode (just like &lt;code&gt;Handle&lt;/code&gt;s created by &lt;code&gt;openFile&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a95fcd208e463894853db8e17df73866959fee" translate="yes" xml:space="preserve">
          <source>Create a new process group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4918908a9ddecf23399957c34bf47bc495f2595" translate="yes" xml:space="preserve">
          <source>Create a piece of HTML which is the concatenation of two things which can be made into HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae61ab6375f35c4b6014b06d93a599ec08de088" translate="yes" xml:space="preserve">
          <source>Create a pipe for interprocess communication and return a &lt;code&gt;(readEnd, writeEnd)&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7d000399adba15dedace95e8d2bfdadc34c9ec" translate="yes" xml:space="preserve">
          <source>Create a pipe for interprocess communication and return a &lt;code&gt;(readEnd, writeEnd)&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-internals#t:FD&quot;&gt;FD&lt;/a&gt;&lt;/code&gt; pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af88e6d672145d94814d61a78597bfa9755d78cc" translate="yes" xml:space="preserve">
          <source>Create a set of BCO objects, and return HValueRefs to them Note: Each ByteString contains a Binary-encoded [ResolvedBCO], not a ResolvedBCO. The list is to allow us to serialise the ResolvedBCOs in parallel. See &lt;code&gt;createBCOs&lt;/code&gt; in compiler&lt;em&gt;ghci&lt;/em&gt;GHCi.hsc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70d76d7b1bbdb192631eea8926a810275465a84" translate="yes" xml:space="preserve">
          <source>Create a set of CostCentres with the same module name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d0ad1df326bea41844dc0f4b9b03677110fcca" translate="yes" xml:space="preserve">
          <source>Create a snapshot of specified resources. Call closeHandle to close snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee95cbf0d5a198a97ef6b06969dec534d13e3341" translate="yes" xml:space="preserve">
          <source>Create a stable pointer referring to the given Haskell value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff03cd89035feea1054db8e78456707fac6e2b5" translate="yes" xml:space="preserve">
          <source>Create a write-only &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;. More precisely, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:readTChan&quot;&gt;readTChan&lt;/a&gt;&lt;/code&gt; will &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; even after items have been written to the channel. The only way to read a broadcast channel is to duplicate it with &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:dupTChan&quot;&gt;dupTChan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42e3de888a4aea08cf836053a9965e3af6b1c9a" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which is initially empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6ecaa898ffe7f3832b01a81f12eb20577a8fa0" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which contains the supplied value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6004b41f6fe416427fd43cae954921d997817b3" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which is initially empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d792718b036d54e94a179082639af76b1e63a57d" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which contains the supplied value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a2227df32ab3e6b7015c7d796833117c2764b2" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which is initially empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da5d0de72d8d0b6c57ab915289b292ac1ce1f98" translate="yes" xml:space="preserve">
          <source>Create an empty bit queue builder. This is represented as a single guard bit in the most significant position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1269bcfb28e5f12bbc5b255bc45ff128cf82968" translate="yes" xml:space="preserve">
          <source>Create an info table for a constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da892e18107b5a7c239993e97889226099e469a" translate="yes" xml:space="preserve">
          <source>Create an uninitialized mutable array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e32925afa0b9a6c7846992f65ff4cd80b779ce8" translate="yes" xml:space="preserve">
          <source>Create and open this file in WriteOnly mode. A special case of &lt;code&gt;&lt;a href=&quot;system-posix-io#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; for information on how to use the &lt;code&gt;&lt;a href=&quot;../base-4.12.0.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5adf558f999880283393c3410706c8973e6deb3" translate="yes" xml:space="preserve">
          <source>Create and open this file in WriteOnly mode. A special case of &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; for information on how to use the &lt;code&gt;&lt;a href=&quot;../base-4.12.0.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1448c32ebec73c944bf29bb1c28a62ae40dcc25" translate="yes" xml:space="preserve">
          <source>Create is mix file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442f68673be56dd124bd7dad15bd5f0e66b61be9" translate="yes" xml:space="preserve">
          <source>Create its parents too?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74508472aa325dd84197b6ddff0cec62a5f5a4e" translate="yes" xml:space="preserve">
          <source>Create new &lt;code&gt;MVar#&lt;/code&gt;; initially empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3472467b8d8410a5ff1a349d7f4a7ffb7b36975b" translate="yes" xml:space="preserve">
          <source>Create output suitable for the &lt;code&gt;gs&lt;/code&gt; PostScript previewer (or similar). In this case the graph is printed in portrait mode without scaling. The output is unsuitable for a laser printer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3253efe9093358f7a6b05b7418a6f8169415700" translate="yes" xml:space="preserve">
          <source>CreateMode</source>
          <target state="translated">CreateMode</target>
        </trans-unit>
        <trans-unit id="09e793592754b717d65893a2edec48a18a91f778" translate="yes" xml:space="preserve">
          <source>CreatePipe</source>
          <target state="translated">CreatePipe</target>
        </trans-unit>
        <trans-unit id="d87c0b36b43c81178bf82f05421a7974783ce7e0" translate="yes" xml:space="preserve">
          <source>CreateProcess</source>
          <target state="translated">CreateProcess</target>
        </trans-unit>
        <trans-unit id="182e32c5591f9bdfa9259f14cd20558084afd9ef" translate="yes" xml:space="preserve">
          <source>Creates a means of decoding bytes into characters: the result must not be shared between several byte sequences or simultaneously across threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24e9933117124de7d907f3000c8eed42d4dcd03" translate="yes" xml:space="preserve">
          <source>Creates a means of encode characters into bytes: the result must not be shared between several character sequences or simultaneously across threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62821395ffa9c431bdec3d73abe8459ec5134240" translate="yes" xml:space="preserve">
          <source>Creates a new object of type &lt;code&gt;&lt;a href=&quot;data-unique#t:Unique&quot;&gt;Unique&lt;/a&gt;&lt;/code&gt;. The value returned will not compare equal to any other value of type &lt;code&gt;&lt;a href=&quot;data-unique#t:Unique&quot;&gt;Unique&lt;/a&gt;&lt;/code&gt; returned by previous calls to &lt;code&gt;&lt;a href=&quot;data-unique#v:newUnique&quot;&gt;newUnique&lt;/a&gt;&lt;/code&gt;. There is no limit on the number of times &lt;code&gt;&lt;a href=&quot;data-unique#v:newUnique&quot;&gt;newUnique&lt;/a&gt;&lt;/code&gt; may be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2189b80cdcf77de5eba35bed847e1964d9441f21" translate="yes" xml:space="preserve">
          <source>Creates a new process to run the specified command with the given arguments, and wait for it to finish. If the command returns a non-zero exit code, an exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86af67b5849b1a76e700724fe469b391589841d6" translate="yes" xml:space="preserve">
          <source>Creates a new process to run the specified raw command with the given arguments. It does not wait for the program to finish, but returns the &lt;code&gt;&lt;a href=&quot;system-process#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac21c6961ffb11e81d05179dbff40d5e11e14a1a" translate="yes" xml:space="preserve">
          <source>Creates a new process to run the specified shell command. If the command returns a non-zero exit code, an exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296f84823d0a41d3d8bc968f4b6d72a95b1736ef" translate="yes" xml:space="preserve">
          <source>Creates a new process to run the specified shell command. It does not wait for the program to finish, but returns the &lt;code&gt;&lt;a href=&quot;system-process#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffb32847ed1b4e2f1b38db9f7ec4d8fe5505f4b" translate="yes" xml:space="preserve">
          <source>Creates a new thread to run the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817d8db1b8ce30d837f462e77d15710f92068fa7" translate="yes" xml:space="preserve">
          <source>Creates a new thread to run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f797996b884cdde5480de5307a51966f4e6fd866" translate="yes" xml:space="preserve">
          <source>Creates a new thread to run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d7f818811e34e07c0408f2d7739e9d333c011e" translate="yes" xml:space="preserve">
          <source>Creates a new thread to run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9266fe6777f67db1d3e3a6d82021c4d40abf35cc" translate="yes" xml:space="preserve">
          <source>Creates a new, empty, package database at ⟨path⟩, which must not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f360c2288b39d9ee0476526b7d70da76b2c05a4" translate="yes" xml:space="preserve">
          <source>Creates an exception with a message. The default implementation of &lt;code&gt;&lt;a href=&quot;control-monad-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; s&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57d8b166949dc35de125e038990ab0558c0515a" translate="yes" xml:space="preserve">
          <source>Creates an exception with a message. The default implementation of &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:strMsg&quot;&gt;strMsg&lt;/a&gt; s&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98086dd73809caf1f05d206a236c7a7cff29c317" translate="yes" xml:space="preserve">
          <source>Creates an exception with a message. The default implementation of &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; s&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511032506367798b0cb1c4974caa1f9f1fe60240" translate="yes" xml:space="preserve">
          <source>Creates an exception without a message. The default implementation is &lt;code&gt;&lt;a href=&quot;control-monad-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; &quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac81865a533fdbe5cac09821edae62e9c8b88d60" translate="yes" xml:space="preserve">
          <source>Creates an exception without a message. The default implementation is &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:strMsg&quot;&gt;strMsg&lt;/a&gt; &quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7494fcc1df3bf278922ef928e5cb472891748b7" translate="yes" xml:space="preserve">
          <source>Creates an exception without a message. The default implementation is &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; &quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2074f76dde8b71722c7d0f1998a0d7c090702b2" translate="yes" xml:space="preserve">
          <source>Creating Builders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a456e71f8638005e839a43033f6e4aad42307a7" translate="yes" xml:space="preserve">
          <source>Creating a Win32 DLL -shared Sealing up your Haskell library inside a DLL is straightforward; compile up the object files that make up the library, and then build the DLL by issuing a command of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0459a8d194a0f0793b10be66f5b61a51073b5175" translate="yes" xml:space="preserve">
          <source>Creating and removing directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="bc965c830452272c9544f1bf817d9243583326b4" translate="yes" xml:space="preserve">
          <source>Creation and elimination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b0a27f6e5c518cbb90b62ff774a3c9a4c7f253" translate="yes" xml:space="preserve">
          <source>Cs: Other, Surrogate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb1c9bdf5e6d2fc16e7af648b01d7799c4f1a8c" translate="yes" xml:space="preserve">
          <source>Ctrl events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4c68c493635c80a6994587676c158aed26c878" translate="yes" xml:space="preserve">
          <source>Ctrl-C handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19767f8454725b6ba3c25b06a8304a4ef0ba15f" translate="yes" xml:space="preserve">
          <source>CtrlEvent</source>
          <target state="translated">CtrlEvent</target>
        </trans-unit>
        <trans-unit id="66f46ef580c7c357590db77c876fd01eadd34d9a" translate="yes" xml:space="preserve">
          <source>CurrencySymbol</source>
          <target state="translated">CurrencySymbol</target>
        </trans-unit>
        <trans-unit id="df893233f128ab6c4697175d320f8d120c1ab9e0" translate="yes" xml:space="preserve">
          <source>Current working directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9564b636067f838e011b00f0f7c00adda350ec" translate="yes" xml:space="preserve">
          <source>Currently only GHC provides eventlog profiling, see the GHC user guide for details on how to use it. These function exists for other Haskell implementations but no events are emitted. Note that the string message is always evaluated, whether or not profiling is available or enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197ae62b3b6ebabef2371e2a23d5e3100dc0c0c2" translate="yes" xml:space="preserve">
          <source>Currently set to 128 bytes, less the memory management overhead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59dbac8e31fcf050b4ac801e3fcd6685c255fe71" translate="yes" xml:space="preserve">
          <source>Currently set to 16 KiB, less the memory management overhead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4411ac819bb70a40c9c00539d1a7e8e3e92897f" translate="yes" xml:space="preserve">
          <source>Currently, in the primary message, the following inheritance tree is in place:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f8f298c1907930381d06f7681cf100b96bad39" translate="yes" xml:space="preserve">
          <source>Currently, only the six unlifted types listed above are generated, but this may be extended to encompass more unlifted types in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e23b04e9a2daaa71072024f864d988d07106c6" translate="yes" xml:space="preserve">
          <source>Currently, some implementations of &lt;code&gt;recover&lt;/code&gt; may mutate the input buffer. In particular, this feature is used to implement transliteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522976d3310b639354ae81aebca0c174fe79a2e5" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;IsList&lt;/code&gt; class is not accompanied with defaulting rules. Although feasible, not much thought has gone into how to specify the meaning of the default declarations like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe910afe8a39e1a6d528060fa8d85e23b5940aa" translate="yes" xml:space="preserve">
          <source>Currently, the deriving strategies are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce931ce09724af815ad98370c7680d089712c79d" translate="yes" xml:space="preserve">
          <source>Cursor flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdb08067040c8fdef06c4444b45a697866a5c52" translate="yes" xml:space="preserve">
          <source>Custom constructs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4b212280809bf2966adde4a4301caf4320a4e8" translate="yes" xml:space="preserve">
          <source>Custom tab completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="ed739ba2afbb77f8f138751a25ca7cff19dd9490" translate="yes" xml:space="preserve">
          <source>Cxt</source>
          <target state="translated">Cxt</target>
        </trans-unit>
        <trans-unit id="24d11fc8275501193b09ba0ba1204a0a8b7041c1" translate="yes" xml:space="preserve">
          <source>CxtQ</source>
          <target state="translated">CxtQ</target>
        </trans-unit>
        <trans-unit id="8e1fe2d5051dae6f4c0e85f4a647eae59d36638e" translate="yes" xml:space="preserve">
          <source>Cyan</source>
          <target state="translated">Cyan</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="84b6a10ad3f822286f4527daa9c452b2d4466910" translate="yes" xml:space="preserve">
          <source>D. M. Sunday: A Very Fast Substring Search Algorithm. Communications of the ACM, 33, 8, 132-142 (1990)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69d1e6c665e58810c027760f6565d2c2daef30c" translate="yes" xml:space="preserve">
          <source>D.R. Morrison, &quot;/PATRICIA -- Practical Algorithm To Retrieve Information Coded In Alphanumeric/&quot;, Journal of the ACM, 15(4), October 1968, pages 514-534.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9a0d8481459987c9df62ca0f44e7fe1da6461d" translate="yes" xml:space="preserve">
          <source>D1</source>
          <target state="translated">D1</target>
        </trans-unit>
        <trans-unit id="7476cacd8baa1dac9b09d0237624cbf7e3f47d96" translate="yes" xml:space="preserve">
          <source>DDWORD</source>
          <target state="translated">DDWORD</target>
        </trans-unit>
        <trans-unit id="50ad02e6b0bf26fc54c47e823eb0d0653ec30060" translate="yes" xml:space="preserve">
          <source>DEPRECATED. Get the number of bytes of remaining input. Note that this is an expensive function to use as in order to calculate how much input remains, all input has to be read and kept in-memory. The decoder keeps the input as a strict bytestring, so you are likely better off by calculating the remaining input in another way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de27379d6d2a9adac2874c6c48a4030c0e8eeb5" translate="yes" xml:space="preserve">
          <source>DEPRECATED. Provides compatibility with previous versions of this library. Run a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad and return a tuple with three values. The first value is the result of the decoder. The second and third are the unused input, and the number of consumed bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e2690c0c90e20b63f8d9a89bff9923e2601357" translate="yes" xml:space="preserve">
          <source>DEPRECATED. Same as &lt;code&gt;&lt;a href=&quot;data-binary-get#v:getByteString&quot;&gt;getByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766c79cedb89e96907fe9488d2164ec70ef135cc" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Use &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca2653a239775736863dd4f1240c390dd31b42f" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Use &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a81edefe355889dccbacb38a4a1453f4e85785" translate="yes" xml:space="preserve">
          <source>DL</source>
          <target state="translated">DL</target>
        </trans-unit>
        <trans-unit id="5047a019a53c431e52ed2552ab4129d7a751614d" translate="yes" xml:space="preserve">
          <source>DLL-creation mode (Windows only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a71cc44c6953225787d9bf20a5f5569b4a2c64c" translate="yes" xml:space="preserve">
          <source>DLL-creation mode (Windows only). See &lt;a href=&quot;win32-dlls#win32-dlls-create&quot;&gt;Creating a DLL&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddc404e20a0b6df539c9a2ed8237dab6ef44689" translate="yes" xml:space="preserve">
          <source>DLLs on Windows are typically linked to by linking to a corresponding &lt;code&gt;.lib&lt;/code&gt; or &lt;code&gt;.dll.a&lt;/code&gt; &amp;mdash; the so-called import library. GHC will typically generate such a file for every DLL you create by compiling in &lt;a href=&quot;#ghc-flag--shared&quot;&gt;&lt;code&gt;-shared&lt;/code&gt;&lt;/a&gt; mode. However, sometimes you don&amp;rsquo;t want to pay the disk-space cost of creating this import library, which can be substantial &amp;mdash; it might require as much space as the code itself, as Haskell DLLs tend to export lots of symbols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c265d30d8d7b94595ee17c4acff00356cbe1e73a" translate="yes" xml:space="preserve">
          <source>DWORD</source>
          <target state="translated">DWORD</target>
        </trans-unit>
        <trans-unit id="db5418ed202295261e25e2fa076fb5144d23b67d" translate="yes" xml:space="preserve">
          <source>DWORD32</source>
          <target state="translated">DWORD32</target>
        </trans-unit>
        <trans-unit id="c10eba1824eeaacef33916c4210bf226754d2bc3" translate="yes" xml:space="preserve">
          <source>DWORD64</source>
          <target state="translated">DWORD64</target>
        </trans-unit>
        <trans-unit id="7e91d1a8f180c02fc955e079f5a8213f9aacbd34" translate="yes" xml:space="preserve">
          <source>DWORD_PTR</source>
          <target state="translated">DWORD_PTR</target>
        </trans-unit>
        <trans-unit id="b02443d980b30072786b5401de57e9c89e3b9015" translate="yes" xml:space="preserve">
          <source>DashPunctuation</source>
          <target state="translated">DashPunctuation</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="6aa87263c838d31103d7ab645bc63afeb1267ac1" translate="yes" xml:space="preserve">
          <source>Data and newtype instance declarations are only permitted when an appropriate family declaration is in scope - just as a class instance declaration requires the class declaration to be visible. Moreover, each instance declaration has to conform to the kind determined by its family declaration. This implies that the number of parameters of an instance declaration matches the arity determined by the kind of the family.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0b9ed2f85e616e5c049c699a209b22caab8e15" translate="yes" xml:space="preserve">
          <source>Data constructor representations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668da06f5b11bf0ad5cab96208c26ae5002865ff" translate="yes" xml:space="preserve">
          <source>Data constructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ccd3fc79385e9d9c6acebe0d437424e4b05e3a" translate="yes" xml:space="preserve">
          <source>Data constructors and class methods are usually displayed in the context of their data type or class declaration. However, if the &lt;code&gt;!&lt;/code&gt; symbol is appended to the command, thus &lt;code&gt;:browse!&lt;/code&gt;, they are listed individually. The &lt;code&gt;!&lt;/code&gt;-form also annotates the listing with comments giving possible imports for each group of entries. Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d046baaaca9ed71cef681a28496638dc0a50ad5" translate="yes" xml:space="preserve">
          <source>Data constructors with contexts that contain non-equality constraints cannot be promoted. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bd061168460f4231b25b2bdf8bfd96b0c59cd4" translate="yes" xml:space="preserve">
          <source>Data families appear in two flavours: (1) they can be defined on the toplevel or (2) they can appear inside type classes (in which case they are known as associated types). The former is the more general variant, as it lacks the requirement for the type-indexes to coincide with the class parameters. However, the latter can lead to more clearly structured code and compiler warnings if some type instances were - possibly accidentally - omitted. In the following, we always discuss the general toplevel form first and then cover the additional constraints placed on associated types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb896e12d4ecacad75f07c035ad68bb87ed99bb" translate="yes" xml:space="preserve">
          <source>Data family instance constructors cannot be promoted at the moment. GHC&amp;rsquo;s type theory just isn&amp;rsquo;t up to the task of promoting data families, which requires full dependent types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70286070f76be39db74ca379634a2c5f5b173e64" translate="yes" xml:space="preserve">
          <source>Data instance declarations can also have &lt;code&gt;deriving&lt;/code&gt; clauses. For example, we can write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d73bd8314e309be92d4b988742621d331cd76c0" translate="yes" xml:space="preserve">
          <source>Data invariants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184bd4fb85e290373b19fd2b5378bb3959836f96" translate="yes" xml:space="preserve">
          <source>Data is available to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629dbf374b91734a82f94cef74fa2d332a884cf4" translate="yes" xml:space="preserve">
          <source>Data pointers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a0aabd9551fbbb38306d45990e136bb349e42b" translate="yes" xml:space="preserve">
          <source>Data structures that can be folded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab80543e6a6d7c74b61cce4b396915133dcc165" translate="yes" xml:space="preserve">
          <source>Data type and type-synonym declarations can be written infix, parenthesised if you want further arguments. E.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333e74b289f832e852fd79dbfc807c85709cbe52" translate="yes" xml:space="preserve">
          <source>Data type declarations merge only with other data type declarations which match exactly, except abstract data, which can merge with &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;newtype&lt;/code&gt; or &lt;code&gt;type&lt;/code&gt; declarations. Merges with type synonyms are especially useful: suppose you are using a package of strings which has left the type of characters in the string unspecified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c4787150e20cb1eb297c0a3cc25cc7b7a34245" translate="yes" xml:space="preserve">
          <source>Data type families may appear in an instance head</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbf7b36d99406a480e215981887401f3cacdfb6" translate="yes" xml:space="preserve">
          <source>Data type invariant and abstraction function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf641a8141deca7cf4452bad22be168de376b0f" translate="yes" xml:space="preserve">
          <source>Data type invariant and abstraction functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6be514c02654c4ded06230fc9559da237b0aa77" translate="yes" xml:space="preserve">
          <source>Data types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a1974e9a64c18cd86b25b1448db438f154309b" translate="yes" xml:space="preserve">
          <source>Data types containing function types on the right-hand side cannot have derived &lt;code&gt;Foldable&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc3d4954862bf2c412451270fec2049805aa55e" translate="yes" xml:space="preserve">
          <source>Data.Array</source>
          <target state="translated">Data.Array</target>
        </trans-unit>
        <trans-unit id="bee5d9f750787b3d318e85cf9bc971b7742d6fdf" translate="yes" xml:space="preserve">
          <source>Data.Array.IArray</source>
          <target state="translated">Data.Array.IArray</target>
        </trans-unit>
        <trans-unit id="4d5c4ef5dab64822e3d0118a4a572ee14eab0e03" translate="yes" xml:space="preserve">
          <source>Data.Array.IO</source>
          <target state="translated">Data.Array.IO</target>
        </trans-unit>
        <trans-unit id="21ae62ef38eb2ba63923a16222a2176e32112b51" translate="yes" xml:space="preserve">
          <source>Data.Array.IO.Safe</source>
          <target state="translated">Data.Array.IO.Safe</target>
        </trans-unit>
        <trans-unit id="d97dc66ebcdf8a918a3f71bb969e8619813c2ab5" translate="yes" xml:space="preserve">
          <source>Data.Array.MArray</source>
          <target state="translated">Data.Array.MArray</target>
        </trans-unit>
        <trans-unit id="82788e687421c36e638fe77c767d1cd41b8dc594" translate="yes" xml:space="preserve">
          <source>Data.Array.MArray.Safe</source>
          <target state="translated">Data.Array.MArray.Safe</target>
        </trans-unit>
        <trans-unit id="f18f79809c497ec68fbe829d0bdf37a21cc45b12" translate="yes" xml:space="preserve">
          <source>Data.Array.ST</source>
          <target state="translated">Data.Array.ST</target>
        </trans-unit>
        <trans-unit id="36f81fdcccf569dde5896acf99a913ae1abc34a3" translate="yes" xml:space="preserve">
          <source>Data.Array.ST.Safe</source>
          <target state="translated">Data.Array.ST.Safe</target>
        </trans-unit>
        <trans-unit id="2d77b659cbeb34725b1e3bf75abd03ae412f7919" translate="yes" xml:space="preserve">
          <source>Data.Array.Storable</source>
          <target state="translated">Data.Array.Storable</target>
        </trans-unit>
        <trans-unit id="38ca930e49af0251b046583af5be4574ca37de61" translate="yes" xml:space="preserve">
          <source>Data.Array.Storable.Safe</source>
          <target state="translated">Data.Array.Storable.Safe</target>
        </trans-unit>
        <trans-unit id="e4aab66fed76a76e5047053392ce85b45725836a" translate="yes" xml:space="preserve">
          <source>Data.Array.Unboxed</source>
          <target state="translated">Data.Array.Unboxed</target>
        </trans-unit>
        <trans-unit id="573ae5dba8b4130d912fc6e1f10d446faa976a43" translate="yes" xml:space="preserve">
          <source>Data.Array.Unsafe</source>
          <target state="translated">Data.Array.Unsafe</target>
        </trans-unit>
        <trans-unit id="3552625f584daea90b340a72d4deafa10e756541" translate="yes" xml:space="preserve">
          <source>Data.Bifoldable</source>
          <target state="translated">Data.Bifoldable</target>
        </trans-unit>
        <trans-unit id="9684f80cefcea711a4a2075a18fe7b7eb3d4e089" translate="yes" xml:space="preserve">
          <source>Data.Bifunctor</source>
          <target state="translated">Data.Bifunctor</target>
        </trans-unit>
        <trans-unit id="46d53119c3c0c62b03d51e560f3dbf441a606dc7" translate="yes" xml:space="preserve">
          <source>Data.Binary</source>
          <target state="translated">Data.Binary</target>
        </trans-unit>
        <trans-unit id="6eb62e6037c40ab83b03289906dddf5b93c2c673" translate="yes" xml:space="preserve">
          <source>Data.Binary.Builder</source>
          <target state="translated">Data.Binary.Builder</target>
        </trans-unit>
        <trans-unit id="b7bccf58de0287b26fa9588c783b4c3c41851a34" translate="yes" xml:space="preserve">
          <source>Data.Binary.Get</source>
          <target state="translated">Data.Binary.Get</target>
        </trans-unit>
        <trans-unit id="9e0d1341783fc2e105cc27b1096953a2af171455" translate="yes" xml:space="preserve">
          <source>Data.Binary.Put</source>
          <target state="translated">Data.Binary.Put</target>
        </trans-unit>
        <trans-unit id="fc1c12cb6bea6360559f859f59e208d4f7a31bf4" translate="yes" xml:space="preserve">
          <source>Data.Bitraversable</source>
          <target state="translated">Data.Bitraversable</target>
        </trans-unit>
        <trans-unit id="5ef5425bcf409c2be6f48ed33886b4645fa25b40" translate="yes" xml:space="preserve">
          <source>Data.Bits</source>
          <target state="translated">Data.Bits</target>
        </trans-unit>
        <trans-unit id="298857f304cd7d0f5ee54ca2e7f9cee86f3c4ea5" translate="yes" xml:space="preserve">
          <source>Data.Bool</source>
          <target state="translated">Data.Bool</target>
        </trans-unit>
        <trans-unit id="c472eae259b22522267f151ab2d747d30add8a10" translate="yes" xml:space="preserve">
          <source>Data.ByteString</source>
          <target state="translated">Data.ByteString</target>
        </trans-unit>
        <trans-unit id="024f5e8d8cce11c68c7b4c5202cd71d3fa79f47e" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder</source>
          <target state="translated">Data.ByteString.Builder</target>
        </trans-unit>
        <trans-unit id="90d6ddd4c11bd442f873e01275266550a1b12028" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder.Extra</source>
          <target state="translated">Data.ByteString.Builder.Extra</target>
        </trans-unit>
        <trans-unit id="506e48c9c17ebe29bfac638dacb5bdaa5233e49a" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder.Internal</source>
          <target state="translated">Data.ByteString.Builder.Internal</target>
        </trans-unit>
        <trans-unit id="c1d80f9fb5e5714970a4be375e422b60815c7b6f" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder.Prim</source>
          <target state="translated">Data.ByteString.Builder.Prim</target>
        </trans-unit>
        <trans-unit id="c250145382b54c8e068cba2313e71442bbedf8f4" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder.Prim.Internal</source>
          <target state="translated">Data.ByteString.Builder.Prim.Internal</target>
        </trans-unit>
        <trans-unit id="405773c8d0e2f632da9d77e2ddd6841594072c6c" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Char8</source>
          <target state="translated">Data.ByteString.Char8</target>
        </trans-unit>
        <trans-unit id="ec762cc968825f2356e1b70bb0c5d4ae37cb638b" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Internal</source>
          <target state="translated">Data.ByteString.Internal</target>
        </trans-unit>
        <trans-unit id="9e5447404d2b616dcf7e5590f471e6e55658777f" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Lazy</source>
          <target state="translated">Data.ByteString.Lazy</target>
        </trans-unit>
        <trans-unit id="0e0d5af1a3b250337c4392e74b0786675f2ee0b0" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Lazy.Char8</source>
          <target state="translated">Data.ByteString.Lazy.Char8</target>
        </trans-unit>
        <trans-unit id="55cf836a35020a7464f72f44138df5ac4e6dc929" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Lazy.Internal</source>
          <target state="translated">Data.ByteString.Lazy.Internal</target>
        </trans-unit>
        <trans-unit id="acab9a28bffe96f307376ce637156f1b43fa76bd" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Short</source>
          <target state="translated">Data.ByteString.Short</target>
        </trans-unit>
        <trans-unit id="ad0190f5dec81307bc7127337883c871cf4c6b20" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Short.Internal</source>
          <target state="translated">Data.ByteString.Short.Internal</target>
        </trans-unit>
        <trans-unit id="000a6502b9fd80c6a70be2f13de887b1165e0fcf" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Unsafe</source>
          <target state="translated">Data.ByteString.Unsafe</target>
        </trans-unit>
        <trans-unit id="cc96e6111519a4d93622c2178bb458d25298c1ec" translate="yes" xml:space="preserve">
          <source>Data.Char</source>
          <target state="translated">Data.Char</target>
        </trans-unit>
        <trans-unit id="5d4fec7c3207c1b5ebd33d24daba00fd109344f9" translate="yes" xml:space="preserve">
          <source>Data.Coerce</source>
          <target state="translated">Data.Coerce</target>
        </trans-unit>
        <trans-unit id="43677d43ef777cc263ba8826aa3f14427891cea6" translate="yes" xml:space="preserve">
          <source>Data.Complex</source>
          <target state="translated">Data.Complex</target>
        </trans-unit>
        <trans-unit id="7df406919b12a65d451a90be47ab75fd9dfebfd6" translate="yes" xml:space="preserve">
          <source>Data.Containers</source>
          <target state="translated">Data.Containers</target>
        </trans-unit>
        <trans-unit id="40c624194fa6646f722be97a27d1f0ad14b350ef" translate="yes" xml:space="preserve">
          <source>Data.Containers.ListUtils</source>
          <target state="translated">Data.Containers.ListUtils</target>
        </trans-unit>
        <trans-unit id="ee1c2de1d4d5f0f37dc8472ca928ecb67fb994b5" translate="yes" xml:space="preserve">
          <source>Data.Data</source>
          <target state="translated">Data.Data</target>
        </trans-unit>
        <trans-unit id="45cf0f6c9667741ce52f8a95a75c183b5ba5b2e5" translate="yes" xml:space="preserve">
          <source>Data.Dynamic</source>
          <target state="translated">Data.Dynamic</target>
        </trans-unit>
        <trans-unit id="708f24822d07214f8498deebf3c19aee3e457cc4" translate="yes" xml:space="preserve">
          <source>Data.Either</source>
          <target state="translated">Data.Either</target>
        </trans-unit>
        <trans-unit id="c9600e25bf2274bbf41cfac2fa1b0f857759a11f" translate="yes" xml:space="preserve">
          <source>Data.Eq</source>
          <target state="translated">Data.Eq</target>
        </trans-unit>
        <trans-unit id="ef2ee7b45da29b72e7026993c0d4cd636aed8f12" translate="yes" xml:space="preserve">
          <source>Data.Fixed</source>
          <target state="translated">Data.Fixed</target>
        </trans-unit>
        <trans-unit id="d5be1a1fc0528b81b37b527d91a16ea933bc9dda" translate="yes" xml:space="preserve">
          <source>Data.Foldable</source>
          <target state="translated">Data.Foldable</target>
        </trans-unit>
        <trans-unit id="13666412d3fcd318acf61389534035ded46af002" translate="yes" xml:space="preserve">
          <source>Data.Function</source>
          <target state="translated">Data.Function</target>
        </trans-unit>
        <trans-unit id="c28ad4c5940fa577706318fa97f22e82478aaa39" translate="yes" xml:space="preserve">
          <source>Data.Functor</source>
          <target state="translated">Data.Functor</target>
        </trans-unit>
        <trans-unit id="2d4a5d6b55fe6448a8539d8c23b8022d13b86083" translate="yes" xml:space="preserve">
          <source>Data.Functor.Classes</source>
          <target state="translated">Data.Functor.Classes</target>
        </trans-unit>
        <trans-unit id="b66a52d4cfdfaf5e32c3da6992c85b6b57477ed9" translate="yes" xml:space="preserve">
          <source>Data.Functor.Compose</source>
          <target state="translated">Data.Functor.Compose</target>
        </trans-unit>
        <trans-unit id="0d3859d34ba438e61c3275ead1746d71f809c4bb" translate="yes" xml:space="preserve">
          <source>Data.Functor.Const</source>
          <target state="translated">Data.Functor.Const</target>
        </trans-unit>
        <trans-unit id="f77a4ebad37e5a4768ee5c12919f41be9529e1c3" translate="yes" xml:space="preserve">
          <source>Data.Functor.Constant</source>
          <target state="translated">Data.Functor.Constant</target>
        </trans-unit>
        <trans-unit id="3ea98150364eff9aa1e383bb890a68b327d42386" translate="yes" xml:space="preserve">
          <source>Data.Functor.Contravariant</source>
          <target state="translated">Data.Functor.Contravariant</target>
        </trans-unit>
        <trans-unit id="c11e36cb63e2266794149d8913544ecc7cfe1eaa" translate="yes" xml:space="preserve">
          <source>Data.Functor.Identity</source>
          <target state="translated">Data.Functor.Identity</target>
        </trans-unit>
        <trans-unit id="b9e8b4f4735f9d366522a10a1ad0b8edfcb51c6c" translate="yes" xml:space="preserve">
          <source>Data.Functor.Product</source>
          <target state="translated">Data.Functor.Product</target>
        </trans-unit>
        <trans-unit id="22a7e681dbe2b89a9f207a7f392953815a5b6b71" translate="yes" xml:space="preserve">
          <source>Data.Functor.Reverse</source>
          <target state="translated">Data.Functor.Reverse</target>
        </trans-unit>
        <trans-unit id="24d48aed5a6b8968affcef204128d6fe77df99b8" translate="yes" xml:space="preserve">
          <source>Data.Functor.Sum</source>
          <target state="translated">Data.Functor.Sum</target>
        </trans-unit>
        <trans-unit id="ae2de86b26ed1a5a281e192b7a6d6f4566456e46" translate="yes" xml:space="preserve">
          <source>Data.Graph</source>
          <target state="translated">Data.Graph</target>
        </trans-unit>
        <trans-unit id="58576fa80efe80ba447bf569f5ee4abbb4991472" translate="yes" xml:space="preserve">
          <source>Data.IORef</source>
          <target state="translated">Data.IORef</target>
        </trans-unit>
        <trans-unit id="51b11d78b3690d0f2348b41a7a3fcf50bd3fe80c" translate="yes" xml:space="preserve">
          <source>Data.Int</source>
          <target state="translated">Data.Int</target>
        </trans-unit>
        <trans-unit id="1afa6238853359f855a03aa86f8f1220d32cc840" translate="yes" xml:space="preserve">
          <source>Data.IntMap</source>
          <target state="translated">Data.IntMap</target>
        </trans-unit>
        <trans-unit id="48ae7f80cc4515b564e354b99a14f71094013dc3" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Internal.Debug</source>
          <target state="translated">Data.IntMap.Internal.Debug</target>
        </trans-unit>
        <trans-unit id="48a940e83146d28f21189f0ca2b9f5398bd9de1f" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Lazy</source>
          <target state="translated">Data.IntMap.Lazy</target>
        </trans-unit>
        <trans-unit id="a195d8f5f90f40a58cb73a106a2206015d03a1e2" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Merge.Lazy</source>
          <target state="translated">Data.IntMap.Merge.Lazy</target>
        </trans-unit>
        <trans-unit id="67a0c0ef42130fa3cede0f3bdb2882d3e20347e1" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Merge.Strict</source>
          <target state="translated">Data.IntMap.Merge.Strict</target>
        </trans-unit>
        <trans-unit id="8b72265ff11e3c9a3acebc01c8c1b225550d9370" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Strict</source>
          <target state="translated">Data.IntMap.Strict</target>
        </trans-unit>
        <trans-unit id="1160abff8cd26174fad50e33ec8df62898f1ac7a" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Strict.Internal</source>
          <target state="translated">Data.IntMap.Strict.Internal</target>
        </trans-unit>
        <trans-unit id="49c2242ccb6b382e1c991dfb7be02f822119a1d3" translate="yes" xml:space="preserve">
          <source>Data.IntSet</source>
          <target state="translated">Data.IntSet</target>
        </trans-unit>
        <trans-unit id="3ecb3e09acf51a4b96bef9bddf477e62fcb34998" translate="yes" xml:space="preserve">
          <source>Data.IntSet.Internal</source>
          <target state="translated">Data.IntSet.Internal</target>
        </trans-unit>
        <trans-unit id="20fe47f4ebf5a711585d68901cc4d59be061a59b" translate="yes" xml:space="preserve">
          <source>Data.Ix</source>
          <target state="translated">Data.Ix</target>
        </trans-unit>
        <trans-unit id="35631afd37b0d9a71650f462390cf9c52a2fb800" translate="yes" xml:space="preserve">
          <source>Data.Kind</source>
          <target state="translated">Data.Kind</target>
        </trans-unit>
        <trans-unit id="9cd22834576e4b32a7dd0a281c6488e80a2a228f" translate="yes" xml:space="preserve">
          <source>Data.List</source>
          <target state="translated">Data.List</target>
        </trans-unit>
        <trans-unit id="d2a3e0b9ec43f7ae3d145ae0bf6cbf4d98a05260" translate="yes" xml:space="preserve">
          <source>Data.List.NonEmpty</source>
          <target state="translated">Data.List.NonEmpty</target>
        </trans-unit>
        <trans-unit id="03476e613c284afc475ef4d17902902504b59d26" translate="yes" xml:space="preserve">
          <source>Data.Map</source>
          <target state="translated">Data.Map</target>
        </trans-unit>
        <trans-unit id="c4a4f8e612bf51fc6c8dec9c042af0835a3b6aa3" translate="yes" xml:space="preserve">
          <source>Data.Map.Internal.Debug</source>
          <target state="translated">Data.Map.Internal.Debug</target>
        </trans-unit>
        <trans-unit id="888ae6329f30ba87c0b41c776d93a2250fe7e44d" translate="yes" xml:space="preserve">
          <source>Data.Map.Lazy</source>
          <target state="translated">Data.Map.Lazy</target>
        </trans-unit>
        <trans-unit id="b5a8cd88458e43d151013b5e85392826f3033be9" translate="yes" xml:space="preserve">
          <source>Data.Map.Merge.Lazy</source>
          <target state="translated">Data.Map.Merge.Lazy</target>
        </trans-unit>
        <trans-unit id="8c9f78f60ba6aedd012a94bec54818740b8e9599" translate="yes" xml:space="preserve">
          <source>Data.Map.Merge.Strict</source>
          <target state="translated">Data.Map.Merge.Strict</target>
        </trans-unit>
        <trans-unit id="1bb8aa0d89b279f861b4a854f3592bad99cbb641" translate="yes" xml:space="preserve">
          <source>Data.Map.Strict</source>
          <target state="translated">Data.Map.Strict</target>
        </trans-unit>
        <trans-unit id="c1fe18bf895171b309e477a91208ef6f3f67889f" translate="yes" xml:space="preserve">
          <source>Data.Maybe</source>
          <target state="translated">Data.Maybe</target>
        </trans-unit>
        <trans-unit id="fce6fd94b4247eb2c36c1ffba6b5284d803cfd26" translate="yes" xml:space="preserve">
          <source>Data.Monoid</source>
          <target state="translated">Data.Monoid</target>
        </trans-unit>
        <trans-unit id="22ae1d34196d6ad5432d8fcc9e7eb7aa7ea23b95" translate="yes" xml:space="preserve">
          <source>Data.Ord</source>
          <target state="translated">Data.Ord</target>
        </trans-unit>
        <trans-unit id="9c9cd8f75b2f463113162c7474cd271854c7682a" translate="yes" xml:space="preserve">
          <source>Data.Proxy</source>
          <target state="translated">Data.Proxy</target>
        </trans-unit>
        <trans-unit id="cd4e2a0166d519235a7cc6a511449be2f200f36d" translate="yes" xml:space="preserve">
          <source>Data.Ratio</source>
          <target state="translated">Data.Ratio</target>
        </trans-unit>
        <trans-unit id="c99bf00ca1bde29e2a455e53791e1ff44089911d" translate="yes" xml:space="preserve">
          <source>Data.STRef</source>
          <target state="translated">Data.STRef</target>
        </trans-unit>
        <trans-unit id="1f138c4a9a89b7f2fecd58b9f1ccf8428d3fea81" translate="yes" xml:space="preserve">
          <source>Data.STRef.Lazy</source>
          <target state="translated">Data.STRef.Lazy</target>
        </trans-unit>
        <trans-unit id="62c972d9835f8f7a5f14d6487ca0baa0c2609bfa" translate="yes" xml:space="preserve">
          <source>Data.Semigroup</source>
          <target state="translated">Data.Semigroup</target>
        </trans-unit>
        <trans-unit id="986a1277bf50f66381c93704ea27a869c15c5534" translate="yes" xml:space="preserve">
          <source>Data.Sequence</source>
          <target state="translated">Data.Sequence</target>
        </trans-unit>
        <trans-unit id="b87972fdbd3905f8b2b55bcc5a1732d99bedd483" translate="yes" xml:space="preserve">
          <source>Data.Sequence.Internal.Sorting</source>
          <target state="translated">Data.Sequence.Internal.Sorting</target>
        </trans-unit>
        <trans-unit id="672899ec0cfbd08c182d60604060320977e724e0" translate="yes" xml:space="preserve">
          <source>Data.Set</source>
          <target state="translated">Data.Set</target>
        </trans-unit>
        <trans-unit id="774076d6244c129340d5a391f383bad5cfa5a5cf" translate="yes" xml:space="preserve">
          <source>Data.String</source>
          <target state="translated">Data.String</target>
        </trans-unit>
        <trans-unit id="847d28cde4ab61b4f418fee10ba971ef299b41b3" translate="yes" xml:space="preserve">
          <source>Data.Text</source>
          <target state="translated">Data.Text</target>
        </trans-unit>
        <trans-unit id="4099c4f8337ed608a00347b0277bc698efd68142" translate="yes" xml:space="preserve">
          <source>Data.Text.Array</source>
          <target state="translated">Data.Text.Array</target>
        </trans-unit>
        <trans-unit id="7a849ec34d2c27cebb9639a9c1cb7d307f8b9543" translate="yes" xml:space="preserve">
          <source>Data.Text.Encoding</source>
          <target state="translated">Data.Text.Encoding</target>
        </trans-unit>
        <trans-unit id="a3af7e15bb515e50bbb403da137fd7be3d0ab0af" translate="yes" xml:space="preserve">
          <source>Data.Text.Encoding.Error</source>
          <target state="translated">Data.Text.Encoding.Error</target>
        </trans-unit>
        <trans-unit id="509f7a5abfaa64a8782c80dcf8d4d86768ef7044" translate="yes" xml:space="preserve">
          <source>Data.Text.Foreign</source>
          <target state="translated">Data.Text.Foreign</target>
        </trans-unit>
        <trans-unit id="c974fa7d87bc54f56e237014f55c78662ee92b0d" translate="yes" xml:space="preserve">
          <source>Data.Text.IO</source>
          <target state="translated">Data.Text.IO</target>
        </trans-unit>
        <trans-unit id="a79e7e4a42181407db2ddcfd16d13804b8e65f1a" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal</source>
          <target state="translated">Data.Text.Internal</target>
        </trans-unit>
        <trans-unit id="9f0840b1944447eaf847ad441bcb9c3a491d6b51" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Builder</source>
          <target state="translated">Data.Text.Internal.Builder</target>
        </trans-unit>
        <trans-unit id="39d127e380c08a13d49f061a06491d7c3894db01" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Builder.Functions</source>
          <target state="translated">Data.Text.Internal.Builder.Functions</target>
        </trans-unit>
        <trans-unit id="7344d52e37600be1d18ecacfd47a126c164b291f" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Encoding.Fusion</source>
          <target state="translated">Data.Text.Internal.Encoding.Fusion</target>
        </trans-unit>
        <trans-unit id="d4d057665af5d6dae24012fe480eab9e91d528ad" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Encoding.Fusion.Common</source>
          <target state="translated">Data.Text.Internal.Encoding.Fusion.Common</target>
        </trans-unit>
        <trans-unit id="0ce286b0635c1db825417c282ca5fc75732c42e3" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Encoding.Utf8</source>
          <target state="translated">Data.Text.Internal.Encoding.Utf8</target>
        </trans-unit>
        <trans-unit id="d9e64b5fb42b54bfaa1a2017be180bad9241fc87" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Functions</source>
          <target state="translated">Data.Text.Internal.Functions</target>
        </trans-unit>
        <trans-unit id="b2630e02b5e8a4f824a50fe963ffae06e0dee978" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Fusion</source>
          <target state="translated">Data.Text.Internal.Fusion</target>
        </trans-unit>
        <trans-unit id="bfe2e021dda13724bc59e73773e02abe0b40774c" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Fusion.Common</source>
          <target state="translated">Data.Text.Internal.Fusion.Common</target>
        </trans-unit>
        <trans-unit id="6e0e5c3a5acaf18f744f57a10a920e6b89a5fa35" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Fusion.Size</source>
          <target state="translated">Data.Text.Internal.Fusion.Size</target>
        </trans-unit>
        <trans-unit id="12d6c8e0598600cc8b8b2da2f853c6111cccbec6" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Fusion.Types</source>
          <target state="translated">Data.Text.Internal.Fusion.Types</target>
        </trans-unit>
        <trans-unit id="59aa3b952692c6ca1d4861e1dd7ee65c21da47aa" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.IO</source>
          <target state="translated">Data.Text.Internal.IO</target>
        </trans-unit>
        <trans-unit id="0693be465822a23a7fd169b4a7bba5fec71cdc54" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Lazy</source>
          <target state="translated">Data.Text.Internal.Lazy</target>
        </trans-unit>
        <trans-unit id="8f2f10e531db5620e833af23baebadf6f7e235f5" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Lazy.Encoding.Fusion</source>
          <target state="translated">Data.Text.Internal.Lazy.Encoding.Fusion</target>
        </trans-unit>
        <trans-unit id="e6d69613335c059cfa52979a4da59c65f9b0612f" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Lazy.Fusion</source>
          <target state="translated">Data.Text.Internal.Lazy.Fusion</target>
        </trans-unit>
        <trans-unit id="0e80511de3354ad078189f805ccca84e00f64eb4" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Lazy.Search</source>
          <target state="translated">Data.Text.Internal.Lazy.Search</target>
        </trans-unit>
        <trans-unit id="440e33d38198789029386db59082f5d118acdf2d" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Search</source>
          <target state="translated">Data.Text.Internal.Search</target>
        </trans-unit>
        <trans-unit id="9ac45467daf788711b1476473edf26a6f1d10523" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Unsafe</source>
          <target state="translated">Data.Text.Internal.Unsafe</target>
        </trans-unit>
        <trans-unit id="2464d278d9d017a92d8afcd30d874a06f8273ac2" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Unsafe.Char</source>
          <target state="translated">Data.Text.Internal.Unsafe.Char</target>
        </trans-unit>
        <trans-unit id="765854835a43ef937c1224afdf86f76f7235fd4e" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Unsafe.Shift</source>
          <target state="translated">Data.Text.Internal.Unsafe.Shift</target>
        </trans-unit>
        <trans-unit id="d24e8b98b80ec2f97da936c68887eee0def6378e" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy</source>
          <target state="translated">Data.Text.Lazy</target>
        </trans-unit>
        <trans-unit id="a65465172b5a3004f60a8162fe5f83a8de99de21" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.Builder</source>
          <target state="translated">Data.Text.Lazy.Builder</target>
        </trans-unit>
        <trans-unit id="afb5bf055639a290d7184b06fda1d5234e5ef49d" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.Builder.RealFloat</source>
          <target state="translated">Data.Text.Lazy.Builder.RealFloat</target>
        </trans-unit>
        <trans-unit id="ea9f49200e0b67b32160fdee943300c992efab34" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.Encoding</source>
          <target state="translated">Data.Text.Lazy.Encoding</target>
        </trans-unit>
        <trans-unit id="b1b87f215d96badd370355fb77725e4295bd3594" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.IO</source>
          <target state="translated">Data.Text.Lazy.IO</target>
        </trans-unit>
        <trans-unit id="11339c303f7391a637e80f65f76189bb788df960" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.Read</source>
          <target state="translated">Data.Text.Lazy.Read</target>
        </trans-unit>
        <trans-unit id="304ab08f08e5d2151ca300e1066f8cec35ac2b5d" translate="yes" xml:space="preserve">
          <source>Data.Text.Read</source>
          <target state="translated">Data.Text.Read</target>
        </trans-unit>
        <trans-unit id="8868a842b728efc631e15d13ff503e927105d23c" translate="yes" xml:space="preserve">
          <source>Data.Text.Unsafe</source>
          <target state="translated">Data.Text.Unsafe</target>
        </trans-unit>
        <trans-unit id="6c6f4372e5801d30261bf4eb788c2bcb8a57039a" translate="yes" xml:space="preserve">
          <source>Data.Time</source>
          <target state="translated">Data.Time</target>
        </trans-unit>
        <trans-unit id="923126a09f2a0571bc6a61e06351e036a1850ed0" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar</source>
          <target state="translated">Data.Time.Calendar</target>
        </trans-unit>
        <trans-unit id="9c5d0d1e08aaa36ac655d6f320106f6b5a920b7d" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.Easter</source>
          <target state="translated">Data.Time.Calendar.Easter</target>
        </trans-unit>
        <trans-unit id="0782c6e9b3b972e6826ad4765e8e6401ee5204ce" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.Julian</source>
          <target state="translated">Data.Time.Calendar.Julian</target>
        </trans-unit>
        <trans-unit id="f5855b0afd183e1f76e4fa8dc0ae4f5590e111b6" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.MonthDay</source>
          <target state="translated">Data.Time.Calendar.MonthDay</target>
        </trans-unit>
        <trans-unit id="4b93bc06f1111b17c0df722a22c2f74e8a967471" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.OrdinalDate</source>
          <target state="translated">Data.Time.Calendar.OrdinalDate</target>
        </trans-unit>
        <trans-unit id="b0d0540fffea713588585d43248fb266e265df79" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.WeekDate</source>
          <target state="translated">Data.Time.Calendar.WeekDate</target>
        </trans-unit>
        <trans-unit id="0a209cd33d0eb1b5e1b18ba32c03b6f12809fa9a" translate="yes" xml:space="preserve">
          <source>Data.Time.Clock</source>
          <target state="translated">Data.Time.Clock</target>
        </trans-unit>
        <trans-unit id="aef55f2ba38c5c167b46f0590f4c21819ca853fa" translate="yes" xml:space="preserve">
          <source>Data.Time.Clock.POSIX</source>
          <target state="translated">Data.Time.Clock.POSIX</target>
        </trans-unit>
        <trans-unit id="56a69add46d55d43dbfe19d1737c61edb5a0e82d" translate="yes" xml:space="preserve">
          <source>Data.Time.Clock.System</source>
          <target state="translated">Data.Time.Clock.System</target>
        </trans-unit>
        <trans-unit id="ec6616bf379743186bfbcbb8939de44c4955e867" translate="yes" xml:space="preserve">
          <source>Data.Time.Clock.TAI</source>
          <target state="translated">Data.Time.Clock.TAI</target>
        </trans-unit>
        <trans-unit id="0d452005eb89df49d4351b291218a7fd522e164f" translate="yes" xml:space="preserve">
          <source>Data.Time.Format</source>
          <target state="translated">Data.Time.Format</target>
        </trans-unit>
        <trans-unit id="a9c00e7b58f5f5c7130bbb9c4b067c15e1d6e155" translate="yes" xml:space="preserve">
          <source>Data.Time.Format.ISO8601</source>
          <target state="translated">Data.Time.Format.ISO8601</target>
        </trans-unit>
        <trans-unit id="306f55efa1f29ef26853c30b9a4dbe9d7ba59f30" translate="yes" xml:space="preserve">
          <source>Data.Time.Format.Internal</source>
          <target state="translated">Data.Time.Format.Internal</target>
        </trans-unit>
        <trans-unit id="0094f22c006ca05ef33052417272af5bf6cfe7e6" translate="yes" xml:space="preserve">
          <source>Data.Time.LocalTime</source>
          <target state="translated">Data.Time.LocalTime</target>
        </trans-unit>
        <trans-unit id="a67d0e0359c684636f5ded41811f4295da03562f" translate="yes" xml:space="preserve">
          <source>Data.Traversable</source>
          <target state="translated">Data.Traversable</target>
        </trans-unit>
        <trans-unit id="8c3691679b058acc254d89b8f4afd2bd92b625b0" translate="yes" xml:space="preserve">
          <source>Data.Tree</source>
          <target state="translated">Data.Tree</target>
        </trans-unit>
        <trans-unit id="767687156757127ab7eb7503bc1ae0366e642975" translate="yes" xml:space="preserve">
          <source>Data.Tuple</source>
          <target state="translated">Data.Tuple</target>
        </trans-unit>
        <trans-unit id="bf562d2274a62b6e2ecc4440422faa50b1808566" translate="yes" xml:space="preserve">
          <source>Data.Type</source>
          <target state="translated">Data.Type</target>
        </trans-unit>
        <trans-unit id="0ac23f287c17a76bb00a4b0072bb22c17967ae04" translate="yes" xml:space="preserve">
          <source>Data.Type.Bool</source>
          <target state="translated">Data.Type.Bool</target>
        </trans-unit>
        <trans-unit id="1059d55032cf9e95e331b01219bd46940d62ffcd" translate="yes" xml:space="preserve">
          <source>Data.Type.Coercion</source>
          <target state="translated">Data.Type.Coercion</target>
        </trans-unit>
        <trans-unit id="da60015c97167838b1c65433f9dd6287216811f3" translate="yes" xml:space="preserve">
          <source>Data.Type.Equality</source>
          <target state="translated">Data.Type.Equality</target>
        </trans-unit>
        <trans-unit id="1b584534307f5bc3f46e376c7b07fa093da43ab9" translate="yes" xml:space="preserve">
          <source>Data.Typeable</source>
          <target state="translated">Data.Typeable</target>
        </trans-unit>
        <trans-unit id="c96d23b53d27949726652cced347a5348cd21337" translate="yes" xml:space="preserve">
          <source>Data.Unique</source>
          <target state="translated">Data.Unique</target>
        </trans-unit>
        <trans-unit id="b533a686e99bd0ccd217afc0e935d262f6a6e063" translate="yes" xml:space="preserve">
          <source>Data.Version</source>
          <target state="translated">Data.Version</target>
        </trans-unit>
        <trans-unit id="c987e30db04b09de9a86debfc90edf1ff494144d" translate="yes" xml:space="preserve">
          <source>Data.Void</source>
          <target state="translated">Data.Void</target>
        </trans-unit>
        <trans-unit id="6164e1522c57933328e7cbb34a007fc86bb53a6a" translate="yes" xml:space="preserve">
          <source>Data.Word</source>
          <target state="translated">Data.Word</target>
        </trans-unit>
        <trans-unit id="95536639a205a98ec9816b2c4e4f787edcd826e4" translate="yes" xml:space="preserve">
          <source>DataKinds</source>
          <target state="translated">DataKinds</target>
        </trans-unit>
        <trans-unit id="ffbf41eaf1aa34b1dd0d4d4dda8572a1076504be" translate="yes" xml:space="preserve">
          <source>DataName</source>
          <target state="translated">DataName</target>
        </trans-unit>
        <trans-unit id="2c3add59d0d35b73bed86b869cb8c2d605373cd5" translate="yes" xml:space="preserve">
          <source>DataRep</source>
          <target state="translated">DataRep</target>
        </trans-unit>
        <trans-unit id="1a6ef663b216f0691196f62dda764be8e921ace2" translate="yes" xml:space="preserve">
          <source>DataType</source>
          <target state="translated">DataType</target>
        </trans-unit>
        <trans-unit id="2b3b2437f86ea4a0a8830ee6f8676cb1c3fc7da2" translate="yes" xml:space="preserve">
          <source>Datatype</source>
          <target state="translated">Datatype</target>
        </trans-unit>
        <trans-unit id="4fa0fb2691d1a58255adf01f703d7bd54f3e484b" translate="yes" xml:space="preserve">
          <source>Datatype representations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699d14189de27ba0d0eeeabaa01ed471687ef576" translate="yes" xml:space="preserve">
          <source>Datatype to represent metadata associated with a datatype (&lt;code&gt;MetaData&lt;/code&gt;), constructor (&lt;code&gt;MetaCons&lt;/code&gt;), or field selector (&lt;code&gt;MetaSel&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d90a3c6507660dab591ce35a5d27da2c7f2a7c" translate="yes" xml:space="preserve">
          <source>Datatype to represent the associativity of a constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572b97df580980ab5b4e2d3eb883a6b9ed654512" translate="yes" xml:space="preserve">
          <source>Datatype to represent the fixity of a constructor. An infix | declaration directly corresponds to an application of &lt;code&gt;&lt;a href=&quot;ghc-generics#v:Infix&quot;&gt;Infix&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8aab1b1b5777d2d541226463500735932cac36" translate="yes" xml:space="preserve">
          <source>Datatype-generic functions are based on the idea of converting values of a datatype &lt;code&gt;T&lt;/code&gt; into corresponding values of a (nearly) isomorphic type &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt; T&lt;/code&gt;. The type &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt; T&lt;/code&gt; is built from a limited set of type constructors, all provided by this module. A datatype-generic function is then an overloaded function with instances for most of these type constructors, together with a wrapper that performs the mapping between &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt; T&lt;/code&gt;. By using this technique, we merely need a few generic instances in order to implement functionality that works for any representable type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb77218a8857a982e558b444d6b4d65e0cf85a57" translate="yes" xml:space="preserve">
          <source>Datatype-generic functions as defined above work for a large class of datatypes, including parameterized datatypes. (We have used &lt;code&gt;Tree&lt;/code&gt; as our example above, which is of kind &lt;code&gt;* -&amp;gt; *&lt;/code&gt;.) However, the &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; class ranges over types of kind &lt;code&gt;*&lt;/code&gt;, and therefore, the resulting generic functions (such as &lt;code&gt;encode&lt;/code&gt;) must be parameterized by a generic type argument of kind &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcf5d9d197ad90994813bcb90a5bf86799fc9ff" translate="yes" xml:space="preserve">
          <source>DatatypeContexts</source>
          <target state="translated">DatatypeContexts</target>
        </trans-unit>
        <trans-unit id="d413b9db5a2dc082055072d1b7cf2b88756577f3" translate="yes" xml:space="preserve">
          <source>Datatypes and file-access routines for the per-module (&lt;code&gt;.mix&lt;/code&gt;) indexes used by Hpc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c072700a3f1548f917d63855bbc815672d16229" translate="yes" xml:space="preserve">
          <source>Datatypes and file-access routines for the tick data file (&lt;code&gt;.tix&lt;/code&gt;) used by Hpc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b834d9ae68afa4ef80c2b03c33f406fa9b9be44" translate="yes" xml:space="preserve">
          <source>David Terei &amp;lt;code@davidterei.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987b9ced08d4ac5d11d286ca4b54b99a4f69164b" translate="yes" xml:space="preserve">
          <source>Day</source>
          <target state="translated">Day</target>
        </trans-unit>
        <trans-unit id="7869c8a187f8a64feeb6d5c9e8bffead21dea3f9" translate="yes" xml:space="preserve">
          <source>Day of week Sunday is 0, Saturday is 6 (as &lt;code&gt;%w&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e860105ed619698339402948e52cd99633c077" translate="yes" xml:space="preserve">
          <source>Day of week. Monday is 1, Sunday is 7 (as &lt;code&gt;%u&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112dd8ca9e3e34b2066901c4ed02caede3e418b8" translate="yes" xml:space="preserve">
          <source>Day of week. Sunday is 0, Saturday is 6 (as &lt;code&gt;%w&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53867761f2a54c550e24e76921e71bbd5607b5ce" translate="yes" xml:space="preserve">
          <source>DayOfWeek</source>
          <target state="translated">DayOfWeek</target>
        </trans-unit>
        <trans-unit id="f6bb0f468a8569c67b3d6826e57e62c5500c3681" translate="yes" xml:space="preserve">
          <source>Days</source>
          <target state="translated">Days</target>
        </trans-unit>
        <trans-unit id="d4368efccc9912ac8bdfe7594bbfc70ae912d34c" translate="yes" xml:space="preserve">
          <source>Deadlock</source>
          <target state="translated">Deadlock</target>
        </trans-unit>
        <trans-unit id="a04bb2764f0dcc01b3be04af8d5e4d8bcf4ffcd2" translate="yes" xml:space="preserve">
          <source>Deallocate a memory pool and everything which has been allocated in the pool itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="b42ee0b08474e53dfd97bc0aca230c78cc91c15e" translate="yes" xml:space="preserve">
          <source>Debug information entities (DIEs) describing all of the basic blocks in the compiled program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3938878890234d53e50351e98db2530cea6141a8" translate="yes" xml:space="preserve">
          <source>Debug messages will be sent to the binary event log file instead of stdout if the &lt;a href=&quot;profiling#rts-flag--l&quot;&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/a&gt; option is added. This might be useful for reducing the overhead of debug tracing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509f9196ad7f74a3f9bd0414d669581317439d4d" translate="yes" xml:space="preserve">
          <source>Debug.Trace</source>
          <target state="translated">Debug.Trace</target>
        </trans-unit>
        <trans-unit id="09e3f89aaf601c703bba03e0ed62db787b429023" translate="yes" xml:space="preserve">
          <source>DebugFlags</source>
          <target state="translated">DebugFlags</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="0afa055f5125f9d1605e1df97396ffd76b1bbb87" translate="yes" xml:space="preserve">
          <source>Debugging output is in one of several &amp;ldquo;styles.&amp;rdquo; Take the printing of types, for example. In the &amp;ldquo;user&amp;rdquo; style (the default), the compiler&amp;rsquo;s internal ideas about types are presented in Haskell source-level syntax, insofar as possible. In the &amp;ldquo;debug&amp;rdquo; style (which is the default for debugging output), the types are printed in with explicit foralls, and variables have their unique-id attached (so you can check for things that look the same but aren&amp;rsquo;t). This flag makes debugging output appear in the more verbose debug style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a442b40082af358980ccde93abe3fac72eaa773" translate="yes" xml:space="preserve">
          <source>Debugging the compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997f59bc99b2a57280179c3ce09ba8ab57cbdf44" translate="yes" xml:space="preserve">
          <source>Dec</source>
          <target state="translated">Dec</target>
        </trans-unit>
        <trans-unit id="3f9c4869e7ce80ca26ab68a98a604b9360a2a7b0" translate="yes" xml:space="preserve">
          <source>DecQ</source>
          <target state="translated">DecQ</target>
        </trans-unit>
        <trans-unit id="282aa883228293ef6bf48fabeb898a0c888497ba" translate="yes" xml:space="preserve">
          <source>Deci</source>
          <target state="translated">Deci</target>
        </trans-unit>
        <trans-unit id="c5f1c94aad2d5dfcf4e37f5e275775c7e299b1f7" translate="yes" xml:space="preserve">
          <source>DecidedLazy</source>
          <target state="translated">DecidedLazy</target>
        </trans-unit>
        <trans-unit id="1f0c796f3e3f82cec111425a226edba1ace66756" translate="yes" xml:space="preserve">
          <source>DecidedStrict</source>
          <target state="translated">DecidedStrict</target>
        </trans-unit>
        <trans-unit id="c7149e59cce7d51762498d25229242398080f135" translate="yes" xml:space="preserve">
          <source>DecidedStrictness</source>
          <target state="translated">DecidedStrictness</target>
        </trans-unit>
        <trans-unit id="9b824a53894fe5341d0e717d6a72387a3c01f3b8" translate="yes" xml:space="preserve">
          <source>DecidedUnpack</source>
          <target state="translated">DecidedUnpack</target>
        </trans-unit>
        <trans-unit id="0bba4b32029c5955e8153d4a3aeaaa31f67d9c07" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03923347e3ab121d569646ea9f6e16ecd2ff4ee0" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928831bcdfb61d3bfd70b276a740279d09aa62d6" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b2d2258ba15b30736104fa5ee91e83fa426a59" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752095aed3b15ad538564f71af06076294458db5" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2053012704efe119abb2c265cfa2146aa0127c3f" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b04c61a2dda5729d8785b3b584bc857ac75f80f" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2904b4b0d9a1e17d0f498e21c3965437c89646c1" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25af773307c902a5261e244aa51e174e1305bb2e" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e9067b1e04f504169ea835e7be7912f0c7823e" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9056480abe91015b7639835bf80fa97fb9d4afe2" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b9e317dee3a799fe2313223bd9ce961d1d23f3" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dd66d15c6eb8a94236ff04d54d08ce4e7bcf5f" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e362dd9dd7370855176c5819043c9c23a6a9e0" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e94a8e95c37f6729ab11b1ace3bfd92106a34c" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58141f2389812f9e204dd48eb5ff81dc623d409" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b5d4529836d798304911dd338258cb981b3b62" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decb62ed71ae511e3b32dc0797261217ecfc3bd8" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7854519ecf35da8859473f289eceb22c93797d11" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f94d71a2ba4edb694ba626aeb2e1eaf13b10a12" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ecbf75a7dea0923460fa033453c49470747d3e" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df9bd46c64fc7b4bf54636251b82b718a22d532" translate="yes" xml:space="preserve">
          <source>Decimal encoding of numbers using ASCII encoded characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204a6d220b2afb494c6a0dc7ef89f01661b6a362" translate="yes" xml:space="preserve">
          <source>Decimal numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112c248def0a38f0123497e35685cf4bb8f1c638" translate="yes" xml:space="preserve">
          <source>DecimalNumber</source>
          <target state="translated">DecimalNumber</target>
        </trans-unit>
        <trans-unit id="0268ae9338cdffe4824ea929d0394dc309f5b267" translate="yes" xml:space="preserve">
          <source>Declaration of the &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#t:ReaderT&quot;&gt;ReaderT&lt;/a&gt;&lt;/code&gt; monad transformer, which adds a static environment to a given monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3e10527dbdcc0670658f4e073d53664ca5a0ac" translate="yes" xml:space="preserve">
          <source>Declaration splices: partial type signature are fully supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b846963186dedc9a34aab11fab9a0a092e2d1b" translate="yes" xml:space="preserve">
          <source>Declarations</source>
          <target state="translated">Declarations</target>
        </trans-unit>
        <trans-unit id="3e193f5c233b62233aa3cce4c3cd3f1267f61704" translate="yes" xml:space="preserve">
          <source>Declare the Safe Haskell state of the current module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90dd6f5535448e2ab6bed113548eb72d00a79a18" translate="yes" xml:space="preserve">
          <source>Decode &lt;code&gt;Double#&lt;/code&gt; into mantissa and base-2 exponent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8bd2fdf50954e344d5718e1365df7624c327eb" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing Latin-1 (aka ISO-8859-1) encoded text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f257fd2c4dfa2a0df24e16839abc91a5c78a4632" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing UTF-8 encoded text that is known to be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c64e168be07fa8952d49de7948e80e61ff779a" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing UTF-8 encoded text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494862f0258298999dc97d7129b5d4dc328dd57b" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;ByteString&lt;/code&gt; containing Latin-1 (aka ISO-8859-1) encoded text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5688f00794f625b1c48e231ad37d7b7039890758" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;ByteString&lt;/code&gt; containing UTF-8 encoded text that is known to be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cea320995e7b29774e97b64b83281dd0ead301" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;ByteString&lt;/code&gt; containing UTF-8 encoded text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc0e5ecbaae1ee182bd24d55479d2d8ecfaf3cf" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;ByteString&lt;/code&gt; containing UTF-8 encoded text..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fed4802bfaf402da06bc2bd64bbfa8ea7bafcc" translate="yes" xml:space="preserve">
          <source>Decode a value from a file. In case of errors, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; will be called with the error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf6218a7d07abff1be6f5cc08f717abebc9597d" translate="yes" xml:space="preserve">
          <source>Decode a value from a file. In case of success, the value will be returned in &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;. In case of decoder errors, the error message together with the byte offset will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232f944d15c6021eb04b0aab36387c1d73e2f0ce" translate="yes" xml:space="preserve">
          <source>Decode a value from a lazy ByteString, reconstructing the original structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848b5df95e9652bac96d4d914031268ae619ffb4" translate="yes" xml:space="preserve">
          <source>Decode a value from a lazy ByteString. Returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; on failure and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; on success. In both cases the unconsumed input and the number of consumed bytes is returned. In case of failure, a human-readable error message will be returned as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1433896453908891a00a7f0ac057ea89c1a2434" translate="yes" xml:space="preserve">
          <source>Decode a value in the Get monad</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5f7b2a7bab74514bfcb40d078a0e56795c8b6d" translate="yes" xml:space="preserve">
          <source>Decode text from big endian UTF-16 encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8026bf52453deb5d2931f0abb6d1e57db660907" translate="yes" xml:space="preserve">
          <source>Decode text from big endian UTF-32 encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac6e36a5e0f273125c553bfed02e4e332f95b96" translate="yes" xml:space="preserve">
          <source>Decode text from little endian UTF-16 encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27035e26b8355a32cc3c1520dbfbc76201abee98" translate="yes" xml:space="preserve">
          <source>Decode text from little endian UTF-32 encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413cade64f6cfd3964fdaba2cfe554088d9f7466" translate="yes" xml:space="preserve">
          <source>Decode, in a stream oriented way, a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing UTF-8 encoded text that is known to be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8b027d9e150647b779424835cf495fe5d4aebd" translate="yes" xml:space="preserve">
          <source>Decode, in a stream oriented way, a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing UTF-8 encoded text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be2f0f143224d91c1d79bb0d11cb4d0a2c69cde" translate="yes" xml:space="preserve">
          <source>Decoder</source>
          <target state="translated">Decoder</target>
        </trans-unit>
        <trans-unit id="4b9d36d83c06e37782d740af6424903230486d88" translate="yes" xml:space="preserve">
          <source>Decoding</source>
          <target state="translated">Decoding</target>
        </trans-unit>
        <trans-unit id="7deaf238dda111a50b4ef31cebb55ed82a10c69b" translate="yes" xml:space="preserve">
          <source>Decoding ByteStrings to Text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da74ceaeff3a5d2761a4728f82d5eea8afbc466" translate="yes" xml:space="preserve">
          <source>Decoding Floats/Doubles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b72ff3a7a4983384d0c331e7a9ca22b33f7b97" translate="yes" xml:space="preserve">
          <source>Decoding Ints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6d765fa3c2abb6c0f6ae7edbcac4876b86b545" translate="yes" xml:space="preserve">
          <source>Decoding Words</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af8079d98637bd2b5b62f4b92e2f19ae0580b49" translate="yes" xml:space="preserve">
          <source>Deconstructing mutable arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937838a5d858257ad13468fc7c6c2b1a2308ab6d" translate="yes" xml:space="preserve">
          <source>Deconstructing names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73cb52d577e8ff3e4cf60fda398fed7a79b8bf2" translate="yes" xml:space="preserve">
          <source>Deconstruction</source>
          <target state="translated">Deconstruction</target>
        </trans-unit>
        <trans-unit id="e1747034df3ed849d75abc95545bebbdd69aa899" translate="yes" xml:space="preserve">
          <source>Decrease the &amp;ldquo;go-for-it&amp;rdquo; threshold for unfolding smallish expressions. Give a &lt;code&gt;-funfolding-use-threshold=0&lt;/code&gt; option for the extreme case. (&amp;ldquo;Only unfoldings with zero cost should proceed.&amp;rdquo;) Warning: except in certain specialised cases (like Happy parsers) this is likely to actually &lt;em&gt;increase&lt;/em&gt; the size of your program, because unfolding generally enables extra simplifying optimisations to be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450fb0777c673d3a3821acb1c395cac2e02490a7" translate="yes" xml:space="preserve">
          <source>DecsQ</source>
          <target state="translated">DecsQ</target>
        </trans-unit>
        <trans-unit id="0ffad9ceb027bcb274f2cd0d59b901975ca9aefc" translate="yes" xml:space="preserve">
          <source>Deeply strict version of &lt;code&gt;&lt;a href=&quot;../base-4.12.0.0/data-functor#v:-60--36--62-&quot;&gt;&amp;lt;$&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="e909208bec2a6f9415b0248e83fb2b9dc80d8387" translate="yes" xml:space="preserve">
          <source>Default buffer size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8485d36b30d225f286160d6555b8470c59fbc527" translate="yes" xml:space="preserve">
          <source>Default fixity: &lt;code&gt;infixl 9&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b2b5f65fabdb919ee237efbc7509297224ac6d" translate="yes" xml:space="preserve">
          <source>Default implementation based upon &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSizeMaybe&quot;&gt;bitSizeMaybe&lt;/a&gt;&lt;/code&gt; provided since 4.12.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399c53bc8b9589e3334f94fb9ef4076f51cf0d3f" translate="yes" xml:space="preserve">
          <source>Default implementation for &lt;code&gt;&lt;a href=&quot;data-bits#v:bit&quot;&gt;bit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5fdef243abdf8f1426f457bb80b8da186d6070" translate="yes" xml:space="preserve">
          <source>Default implementation for &lt;code&gt;&lt;a href=&quot;data-bits#v:popCount&quot;&gt;popCount&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68740092e030cf2f1db89e87c0b8755a14c4559" translate="yes" xml:space="preserve">
          <source>Default implementation for &lt;code&gt;&lt;a href=&quot;data-bits#v:testBit&quot;&gt;testBit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0106c1bc5252b42182dd0987d6eed7a755f9a597" translate="yes" xml:space="preserve">
          <source>Default implementation: &lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a9a055ca8dcbdf7475659dbb609e9e36017c8f" translate="yes" xml:space="preserve">
          <source>Default rendering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e91d1b4b736995ff4d507ac478286f0975ca5d" translate="yes" xml:space="preserve">
          <source>Default shell (pw_shell)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5551a2941f050b84d3a93b66d30443bb74f625" translate="yes" xml:space="preserve">
          <source>Default values for the &lt;code&gt;&lt;a href=&quot;system-posix-io#t:OpenFileFlags&quot;&gt;OpenFileFlags&lt;/a&gt;&lt;/code&gt; type. False for each of append, exclusive, noctty, nonBlock, and trunc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cf1a399dc98cb9b44f28ab805469e4394ccafe" translate="yes" xml:space="preserve">
          <source>Default values for the &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#t:OpenFileFlags&quot;&gt;OpenFileFlags&lt;/a&gt;&lt;/code&gt; type. False for each of append, exclusive, noctty, nonBlock, and trunc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="25a9084be6987615bf532ff3db85aaec6121b192" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c014141f4aec21bebb7267f66e0034cb5c55f0ff" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;Nothing&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192bf7771749870af9f084951e181e6dac6cae06" translate="yes" xml:space="preserve">
          <source>DefaultSignatures</source>
          <target state="translated">DefaultSignatures</target>
        </trans-unit>
        <trans-unit id="7cc46fc0142a8dee62fdf649a99f9134ea28bbf9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftL&quot;&gt;shiftL&lt;/a&gt;&lt;/code&gt; unless defined explicitly by an instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4dd3616cf53abc90cfd5af95721703709065a8f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftR&quot;&gt;shiftR&lt;/a&gt;&lt;/code&gt; unless defined explicitly by an instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f021ed354ac0af633a78d4a308f0937d71f608" translate="yes" xml:space="preserve">
          <source>Defer as many type errors as possible until runtime. At compile time you get a warning (instead of an error). At runtime, if you use a value that depends on a type error, you get a runtime error; but you can run any type-correct parts of your code just fine. See &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cb32f86eb368967bdb03dfef9804181ea037f4" translate="yes" xml:space="preserve">
          <source>Defer typed holes errors (errors about names with a leading underscore (e.g., &amp;ldquo;_&amp;rdquo;, &amp;ldquo;_foo&amp;rdquo;, &amp;ldquo;_bar&amp;rdquo;)) until runtime. This will turn the errors produced by &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;typed holes&lt;/a&gt; into warnings. Using a value that depends on a typed hole produces a runtime error, the same as &lt;a href=&quot;#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt; (which implies this option). See &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; and &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268b0cecddd4b20f6b987b804aaaa0b1aaf235c6" translate="yes" xml:space="preserve">
          <source>Defer variable out-of-scope errors (errors about names without a leading underscore) until runtime. This will turn variable-out-of-scope errors into warnings. Using a value that depends on a typed hole produces a runtime error, the same as &lt;a href=&quot;#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt; (which implies this option). See &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; and &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3e6f54594eb4dd38616ad455411235c21de4e4" translate="yes" xml:space="preserve">
          <source>Define a symbol in the C pre-processor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c392c395edafe45638e67d31a5849d3754ed6ea" translate="yes" xml:space="preserve">
          <source>Define macro ⟨symbol⟩ in the usual way. When no value is given, the value is taken to be &lt;code&gt;1&lt;/code&gt;. For instance, &lt;code&gt;-DUSE_MYLIB&lt;/code&gt; is equivalent to &lt;code&gt;-DUSE_MYLIB=1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff94d5e6cca878f5d2d91fd3547c3aef33954213" translate="yes" xml:space="preserve">
          <source>DefineDosDeviceFlags</source>
          <target state="translated">DefineDosDeviceFlags</target>
        </trans-unit>
        <trans-unit id="4776a7653ca9646912fb52ea316bbe330097c672" translate="yes" xml:space="preserve">
          <source>Defined as &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt; = &lt;a href=&quot;../base-4.12.0.0/data-void#v:absurd&quot;&gt;absurd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739275e538bde9c3cc7c15812971ee9bfca68b10" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.12.0.0/ghc-conc-sync&quot;&gt;GHC.Conc.Sync&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015fb98b22e813c01cafbd7bacb2cccf9c2d354e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-foldable&quot;&gt;Data.Foldable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a72b0803da9ecda14cc7b9999cdc96a6eb0c866" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-functor-const&quot;&gt;Data.Functor.Const&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86bf45a1340d9b842dd95688d48858474963376" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-proxy&quot;&gt;Data.Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694effb0aa84761f5f01a700f0a0d458cf882e8d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-semigroup&quot;&gt;Data.Semigroup&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a43f2083adba7705ad24691fda122270a089c8c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-traversable&quot;&gt;Data.Traversable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465bfbe34a7e55db5afe848bbc01c7f26eed3a3d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-void&quot;&gt;Data.Void&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f9cc786a4b3e356f57dd93139c46df1c0cf447" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fefad65e82e92463ee57e119b78e512fd884649" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/foreign-storable&quot;&gt;Foreign.Storable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585e29cd3e44388e7e52848d7dd4be2388ccd6ce" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-arr&quot;&gt;GHC.Arr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6682a0be15cd20232380e3c77c2909d8bb785af2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-base&quot;&gt;GHC.Base&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dafd02d3bbe90bafb0908e296be94b10cb0c97b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-exception&quot;&gt;GHC.Exception&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e618a104d4b85ee9464035511f36e03094a0ab80" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-exception-type&quot;&gt;GHC.Exception.Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee063271fd368d559bb3ec9f3d15aee5c4d48c8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-io-exception&quot;&gt;GHC.IO.Exception&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2968b07f67d3ae338b511b8b0844df9f384ed467" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-types&quot;&gt;GHC.IO.Handle.Types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acddbf6703ff006d2816b91356bf89db14e632e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-io-iomode&quot;&gt;GHC.IO.IOMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77262ccfb6b20a3767f25aba7f59dd217d66836" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-ioarray&quot;&gt;GHC.IOArray&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90159d1495b2038b0a140e4cc30744a4b2e00a6a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-ioref&quot;&gt;GHC.IORef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de732b334cdc6d912a5248c47c0173866600397" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-ptr&quot;&gt;GHC.Ptr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e767af5ec7114bd727101fb24cb02a04ccd835f7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-read&quot;&gt;GHC.Read&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60afc09bbd5bd67475604f8fc347fe7f5c263684" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/system-posix-types&quot;&gt;System.Posix.Types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7ac8664d8e80fe43385525e5f118e613e10e67" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-builder-internal&quot;&gt;Data.ByteString.Builder.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0306090633fd3a7728cd411888e91bcae17c09aa" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../integer-gmp-1.0.2.0/ghc-integer-type&quot;&gt;GHC.Integer.Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e656bbe2516aa9c98062a7d7a91ddc2108e05f8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../terminfo-0.4.1.4/system-console-terminfo-base&quot;&gt;System.Console.Terminfo.Base&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86975ae5c31662550bb4cebdc2234e31799d979" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-cont&quot;&gt;Control.Monad.Trans.Cont&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fae84c093b7cd29b01e11b87bd22559e14276d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4736c5f8ec871d82fde52cecc86a3ebe7f3c08d0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c806ba4b989590ea7f38f9ab87745b8721c6fba" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-list&quot;&gt;Control.Monad.Trans.List&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a37bffb4e55ad0335ba6f04f35f3bedadd6769" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-reader&quot;&gt;Control.Monad.Trans.Reader&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e72e2b6fce6cb28738db3c4bbf2233107c4f691" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd0a9572b2db2db3a5b1f77762da1bb0a106ec3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-rws-strict&quot;&gt;Control.Monad.Trans.RWS.Strict&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a74dfea91fda7e4ff8a7e45e1458a597e1993d0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-state-lazy&quot;&gt;Control.Monad.Trans.State.Lazy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19073bdccd2d437aa12790db11cf061d07ce67dc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-state-strict&quot;&gt;Control.Monad.Trans.State.Strict&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2d36469bee65b0699d78611602d439cca2b20e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-writer-lazy&quot;&gt;Control.Monad.Trans.Writer.Lazy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dd39539ff88764c0ea6c0952a51ea6ac7d8640" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.5.0/control-monad-trans-writer-strict&quot;&gt;Control.Monad.Trans.Writer.Strict&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87214f59ca880bf1983161c55aea843948cd0b5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2b152a1e8b0b6b4336f8992d85959878823f0a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../unix-2.7.2.2/system-posix-files-common&quot;&gt;System.Posix.Files.Common&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6dca433084901c0d9db49269d14323e168a57d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-applicative&quot;&gt;Control.Applicative&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88768e4db2475a89ece2f9bbfa54130dfea5ad6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-applicative-backwards&quot;&gt;Control.Applicative.Backwards&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d341bebf0b8cd10e3b6c03cc7da4c75f28c77f9c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-applicative-lift&quot;&gt;Control.Applicative.Lift&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347c4baf3920cab4738dff573708fee25e1a9a02" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-arrow&quot;&gt;Control.Arrow&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aeb55b368de453ca7719b68b13e7337bad751d0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-category&quot;&gt;Control.Category&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a2798f84d75b19b38ab49e1ced04c1617d80bf" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-chan&quot;&gt;Control.Concurrent.Chan&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66341d313e25aa181630f17d7ab0b4099aef1e0f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tarray&quot;&gt;Control.Concurrent.STM.TArray&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b206a2f8681c9617327ab62ecb8e83f95b30d3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tbqueue&quot;&gt;Control.Concurrent.STM.TBQueue&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4af52daca653e334b23dd1a3d9885380471573" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tchan&quot;&gt;Control.Concurrent.STM.TChan&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f1c0f7e29ae013c0db096b1300ced1561a5187" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tmvar&quot;&gt;Control.Concurrent.STM.TMVar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61f458365e3a87b552b2c2f62ef2c30f44da6ca" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tqueue&quot;&gt;Control.Concurrent.STM.TQueue&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191db76eb408e9c97db4c746f761b1d4c0b47b63" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tsem&quot;&gt;Control.Concurrent.STM.TSem&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3827818309df1d28240d974c144764fe05a42e7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-deepseq&quot;&gt;Control.DeepSeq&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6aa134fc3892f41f26d6ffd899de0cffb4eb0e2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d385240175645765020865bad6b89e09b93481" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-cont-class&quot;&gt;Control.Monad.Cont.Class&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236ee1757bf4297c94beca3cff9d2962fe7b8b0a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-error-class&quot;&gt;Control.Monad.Error.Class&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b25af32d3e4428d45299bf8d492af0c92f505b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-fail&quot;&gt;Control.Monad.Fail&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4988a1d5f42174a3462012d39c8c4b4284841ee4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-fix&quot;&gt;Control.Monad.Fix&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbffe97bb635774e3d81e265268c6104ec55915" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-io-class&quot;&gt;Control.Monad.IO.Class&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f408a4475552b3c0377bf0654c36b6e9a8d114" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-reader-class&quot;&gt;Control.Monad.Reader.Class&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26df13ecba7bd8ad65d4834779516b72a2c350f5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-rws-class&quot;&gt;Control.Monad.RWS.Class&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42dc4e50a15d5704ec9024c7cae51b423e74467" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-st-lazy-imp&quot;&gt;Control.Monad.ST.Lazy.Imp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614b29571a8d65775ea6474e4db54cff09c65a0b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-state-class&quot;&gt;Control.Monad.State.Class&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133497b483bb6f04e0b324a6bcd3e5ffc0e08ddd" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-stm&quot;&gt;Control.Monad.STM&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3987e078387c7a946f3eef09b33473c91bd48db1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-accum&quot;&gt;Control.Monad.Trans.Accum&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513c41523eb8d533bf346bad3214fd5ebca1fdb9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-cont&quot;&gt;Control.Monad.Trans.Cont&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771430dce0dc8006cee9f6b975fd8ece88ffed7b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52e19239e9d6aaffd45aebd6aa2cd36b548aedb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576966bb38a379130c90bb9e211c16a7d21c04da" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-identity&quot;&gt;Control.Monad.Trans.Identity&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c46374eedcce81a66f77f116fee74665c0a0fa" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-list&quot;&gt;Control.Monad.Trans.List&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9607e2e17cbda9968c52faae7cf19ab8f79f9cb7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-maybe&quot;&gt;Control.Monad.Trans.Maybe&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d46a2c8bcf24db91b70313030f3e8e5b978313" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-reader&quot;&gt;Control.Monad.Trans.Reader&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda8014cc38a4e9cf88c6ea1922ae5b5d481b9eb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9079049ac9764c33632f9f89b4c94278efdcd0e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3835a8446d0e8a8bff5cc9b42d1e3acb651be668" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-rws-strict&quot;&gt;Control.Monad.Trans.RWS.Strict&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3e104db8a81761ccadc7e1d63271d3b1f3bc37" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-select&quot;&gt;Control.Monad.Trans.Select&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ab7378f13e0aec114299684dfa54e74e2ea42a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-state-lazy&quot;&gt;Control.Monad.Trans.State.Lazy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39e4d027b3adbe9a825aeb75099f85bcf9f453f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-state-strict&quot;&gt;Control.Monad.Trans.State.Strict&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c9bad425355ad490dfeb81dc5cc32961d306d2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-writer-cps&quot;&gt;Control.Monad.Trans.Writer.CPS&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c28f716c3beb11e74b62693ca2a1cfa6c7dfc0b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-writer-lazy&quot;&gt;Control.Monad.Trans.Writer.Lazy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f7751cb21b9411d38f795c3b25c732ed9fecb6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-writer-strict&quot;&gt;Control.Monad.Trans.Writer.Strict&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6892601da85f61ea92ff04294fab15de727378d5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-writer-class&quot;&gt;Control.Monad.Writer.Class&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434ee96f0438970a6b86ae059a5fc9dc5f7d4431" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-zip&quot;&gt;Control.Monad.Zip&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf2b168e990c6cc77ffe9b3a5c28afdc11ba9ea" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-array-base&quot;&gt;Data.Array.Base&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e8086a4cdb0e3352fcbf6f051a8f06136b614e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-array-io-internals&quot;&gt;Data.Array.IO.Internals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff9d3821b25d1d6b8ece11c212209cb9e3860e0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-array-storable-internals&quot;&gt;Data.Array.Storable.Internals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79d40b1027ef5fa568de371c8245cf72b2ce204" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bifoldable&quot;&gt;Data.Bifoldable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528f092f29093c759842987e8bc8aeb0f68ca44e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bifunctor&quot;&gt;Data.Bifunctor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784931b79af702d9c0faf760d167b70cca8e2a46" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-binary-class&quot;&gt;Data.Binary.Class&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba32a604e4fbb5c02121f730ced3fadab00230c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-binary-generic&quot;&gt;Data.Binary.Generic&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b457998e2abb6a164a26f61f55e906bf2732f8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-binary-put&quot;&gt;Data.Binary.Put&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e1212127f26339fc347b0b387c0c4ca38a27d5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bitraversable&quot;&gt;Data.Bitraversable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a122dfb1be92b2ca517eb8cfa053b59a25704ec9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bits&quot;&gt;Data.Bits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ed9ccb487f0dd5c28cf3e53783a7187b925503" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-builder&quot;&gt;Data.ByteString.Builder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5c6c8958392e96cdd473536503b69f6732d8bb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-builder-internal&quot;&gt;Data.ByteString.Builder.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6101ae7cf44b974329d91b4da17069c466aafa07" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-internal&quot;&gt;Data.ByteString.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be19b3d200ad3607e88e6c9d1f9fb73867cfb1dd" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-lazy-internal&quot;&gt;Data.ByteString.Lazy.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01335230cc86cdea72805b90d8bcdf3171f8957" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-short-internal&quot;&gt;Data.ByteString.Short.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc4c71c000dee726ed8bd707086dcf480a9b199" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-complex&quot;&gt;Data.Complex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c56ae23c5fe8700d16b3bf6c9c9a3ecf6af60d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-data&quot;&gt;Data.Data&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aede7f1b878e24a3449d5bbdc8cbbeeb99b7f2ee" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-dynamic&quot;&gt;Data.Dynamic&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5e902b6888e3b5460701e96e196615d9f560b8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-either&quot;&gt;Data.Either&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f193bbd23d8b24a48e7ef312012974ec0bec7302" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-fixed&quot;&gt;Data.Fixed&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553d7f6f8a62869b04cc3e8182796beb24c2fba8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-foldable&quot;&gt;Data.Foldable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6f06fac20b64c928c404d8d591edd78747f475" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-classes&quot;&gt;Data.Functor.Classes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6728dbe7abc7ac6e4ab0388b846ac55d4e474e9b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-compose&quot;&gt;Data.Functor.Compose&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a378860896cc7edc11b10702e4b13af334f99d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-const&quot;&gt;Data.Functor.Const&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4913fee43165925ac7a994e54918ee07aadee214" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-constant&quot;&gt;Data.Functor.Constant&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1019ab328d855188c345cc827f321fccbcec11" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-contravariant&quot;&gt;Data.Functor.Contravariant&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c078a25fdea9572767758ec19da6dd0c71988d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-identity&quot;&gt;Data.Functor.Identity&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91c09de6f5f34ae679f9041a67e935a4cc929ef" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-product&quot;&gt;Data.Functor.Product&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ab7b6336077da00a21756c97d38936972d0b8b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-reverse&quot;&gt;Data.Functor.Reverse&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680b8fdf7f3228e3b7b9d611f80b35a6a9a291ff" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-sum&quot;&gt;Data.Functor.Sum&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc49743b6fa86c31d6502d121054f12c793b9087" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-graph&quot;&gt;Data.Graph&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b26aa080f9ea3306b3ebf84408d1794c7ce18a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-intset-internal&quot;&gt;Data.IntSet.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b878ee28c04131be605bd99382df8d5dcfd23b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-monoid&quot;&gt;Data.Monoid&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8c45077cc0d26e4b5915e6e4fda7d6e5b6e1d1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-ord&quot;&gt;Data.Ord&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17764fa8ecb4dce1b5431b653f92df2b29bae09" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-proxy&quot;&gt;Data.Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393fbc56b056896665e0db2c24ca0e383478b0b1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-semigroup&quot;&gt;Data.Semigroup&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadf72b018e20e380a8bbc530f237e6169befdce" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-semigroup-internal&quot;&gt;Data.Semigroup.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eafecbafb613cfd772a0117c6120e1c8b0b8a68" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-string&quot;&gt;Data.String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338a22364e84c7e4d2c7855dd49ad52937a159ed" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text&quot;&gt;Data.Text&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aaab948dd2dbd6dd0fb194785d513f0109be910" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-encoding&quot;&gt;Data.Text.Encoding&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54a8d76bc217565336ae3e1f089405f9e9caa52" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-encoding-error&quot;&gt;Data.Text.Encoding.Error&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbea779bbfb502e4a0a8514a95f1c38fb8b7683" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-foreign&quot;&gt;Data.Text.Foreign&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad75ad0a3e31edcefcc14d939373744eddce296" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-internal-builder&quot;&gt;Data.Text.Internal.Builder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e26d41bcc71f2d6d1eb238ac40c2f7fca95d16" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-internal-fusion-size&quot;&gt;Data.Text.Internal.Fusion.Size&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5802d1e5467a9c436e553481ca60f7c4ca19e2a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-internal-fusion-types&quot;&gt;Data.Text.Internal.Fusion.Types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969e6ea75217d749d39f2eaa74dd63d0af62bdca" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-internal-unsafe-shift&quot;&gt;Data.Text.Internal.Unsafe.Shift&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307fe85a9d7d77e86cb0167fbb9b1ca6b7331ede" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-lazy&quot;&gt;Data.Text.Lazy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da53578eccfe94e8e13a61e43068366a3bbe112" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-lazy-builder-realfloat&quot;&gt;Data.Text.Lazy.Builder.RealFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43af77d21a8f701fc389f0f751a73309c74fa2a3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-show&quot;&gt;Data.Text.Show&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e8076e86d9280ca1884ef0ab583127b148260a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-calendar-calendardiffdays&quot;&gt;Data.Time.Calendar.CalendarDiffDays&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aada3c948bd6f50e3c41642b48a64db60f123625" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-calendar-days&quot;&gt;Data.Time.Calendar.Days&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60adb7e9b29ae67e6e4a4368588dfabac5198f24" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-calendar-gregorian&quot;&gt;Data.Time.Calendar.Gregorian&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a051bc3fce5ce305d2f898b46d90a0ac786d2a56" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-calendar-week&quot;&gt;Data.Time.Calendar.Week&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c0fe891731f8cfa525684eaea64fd66455e01f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-absolutetime&quot;&gt;Data.Time.Clock.Internal.AbsoluteTime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f525544c026311e78f4dd704c82f5ac66de443d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-difftime&quot;&gt;Data.Time.Clock.Internal.DiffTime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa537532689066a31ffff4e785a6c30ce4a8e6e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-nominaldifftime&quot;&gt;Data.Time.Clock.Internal.NominalDiffTime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bccf783899e9e197e7ec966500528c655608278" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-systemtime&quot;&gt;Data.Time.Clock.Internal.SystemTime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb1bbc3ceeb648306088142fea4cdb82e668662" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-universaltime&quot;&gt;Data.Time.Clock.Internal.UniversalTime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb350c3188c20246afdeaa674891704d6bac7cbd" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-utctime&quot;&gt;Data.Time.Clock.Internal.UTCTime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b653f156dab45f5528de7fd78d1f20e883225ca" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-tai&quot;&gt;Data.Time.Clock.TAI&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f93432402d486c4b0e72c50ccd37a5534a3d0b1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-format-instances&quot;&gt;Data.Time.Format.Format.Instances&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f46fa2d5770ed623bb6ff69ee0a2945cc87e65" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-iso8601&quot;&gt;Data.Time.Format.ISO8601&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7a4a789c036f29be5d183d2d6b338242335528" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-locale&quot;&gt;Data.Time.Format.Locale&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5e327677fe12bd5a7788d7b1f3715586bf6836" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-parse&quot;&gt;Data.Time.Format.Parse&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30afdd2d2b1ab66e47885c413982928ba8914fcc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-parse-instances&quot;&gt;Data.Time.Format.Parse.Instances&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1965d414fb68f7a3e4771e232ad59dcc061c9d2f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-calendardifftime&quot;&gt;Data.Time.LocalTime.Internal.CalendarDiffTime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67c3f78a91f12b737cc1abe6bdbb380bd5aee28" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-localtime&quot;&gt;Data.Time.LocalTime.Internal.LocalTime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ef43d8db2542b328f20bb336b03733fdadc922" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-timeofday&quot;&gt;Data.Time.LocalTime.Internal.TimeOfDay&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233968608065cbe693f16b5f67c51c819c2c63e9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-timezone&quot;&gt;Data.Time.LocalTime.Internal.TimeZone&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9c6d60b5107ea4f730e9914da4b78b4fd44b29" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-zonedtime&quot;&gt;Data.Time.LocalTime.Internal.ZonedTime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec144a81d4444ee88089ca20a4144c4afd6fc2c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-traversable&quot;&gt;Data.Traversable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4273371ed31c73cb1fb239b021eaebcc9a6cc3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-tree&quot;&gt;Data.Tree&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9282f33eac95463b89b7cdad5289f3a4107edf" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-type-coercion&quot;&gt;Data.Type.Coercion&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2607972c3e25ba97b080ca97933829d6e5ff0df9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-type-equality&quot;&gt;Data.Type.Equality&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dfc48f1dce9870e45da7b9da27e581e9f5fe19" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-unique&quot;&gt;Data.Unique&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc461e6906100b70605b16acdcfc0b5292c6451d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-version&quot;&gt;Data.Version&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ad645cb7e7e257e25ef5cd3912bcaa0db73eba" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-void&quot;&gt;Data.Void&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82eb2e31cb30fa004af52e3871c253d6d448d768" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;foreign-c-error&quot;&gt;Foreign.C.Error&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda110d27b78824892bff40634ff5724247541ea" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ae76aa176624892963f50cba7148a4e723cf93" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;foreign-ptr&quot;&gt;Foreign.Ptr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8ee20839bb6654240da7f90b643c9cdd82b547" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;foreign-storable&quot;&gt;Foreign.Storable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df158bfb5e7549c703c9af36f1f4bfd198dbace" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-arr&quot;&gt;GHC.Arr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e887a96e9f72595f3fceb351be893e83aae8daac" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-base&quot;&gt;GHC.Base&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b598d78aaa0f2f605e81a5d764be2f051f166e39" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-byteorder&quot;&gt;GHC.ByteOrder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785904c1167bfbdfa26aeb1b84fd6bea4d73cd35" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-conc-sync&quot;&gt;GHC.Conc.Sync&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbf1375cf2b3f4607d84b6c5cbdb384b8af628d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-enum&quot;&gt;GHC.Enum&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ad0b6c10b2e5f5227ffa98bae9fb0b8e2866d1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-event-internal&quot;&gt;GHC.Event.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe243a8d1bb753af9bcc9730d21e981cf98c8f0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-event-manager&quot;&gt;GHC.Event.Manager&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d59595b82ad1c127d61ff418e62dfb48629040" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-event-timermanager&quot;&gt;GHC.Event.TimerManager&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04343c2682c25c2e30f55cc2afeefc1c281f7b8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-exception&quot;&gt;GHC.Exception&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8f64e7029f952d0b48c825193c99899ba026bc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-exception-type&quot;&gt;GHC.Exception.Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192fdc3c251063859e3c1e03f8fd4dcd52ebd6f4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-exts&quot;&gt;GHC.Exts&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22097229e3c8469f3aa722df7acd512da8d4e6a6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-fingerprint-type&quot;&gt;GHC.Fingerprint.Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3570f97fb48050b1c4ded216275ea0f2b3a69440" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-float&quot;&gt;GHC.Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8e0fd60252f003313e6b1bbc3307d65167dfe0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-foreignptr&quot;&gt;GHC.ForeignPtr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76390de265e2e3976fd13f834a69df94672bc367" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-generics&quot;&gt;GHC.Generics&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40502a0d6b45e570f8414939b6b72033aab227d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-ghci&quot;&gt;GHC.GHCi&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6978473572fcac0a1f53398f048fdb6e48378b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-int&quot;&gt;GHC.Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2babe8566954bb12aa752a8665b26d13275388ee" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-integer-type&quot;&gt;GHC.Integer.Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b084eee092b526e00758ceca81c1bbba69f90e9a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io&quot;&gt;GHC.IO&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a17f5f572e474d1554915f1e4aa5a31ad8d109d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-buffer&quot;&gt;GHC.IO.Buffer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f31d59fb2567ecd23a30d61e53d2640e19d8d1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-device&quot;&gt;GHC.IO.Device&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6b577a1d3fc024ae21f3415354ebc9a7799f4f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-encoding-failure&quot;&gt;GHC.IO.Encoding.Failure&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f551752e238b993bb46dc1b83252ca3a73ac10d2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-exception&quot;&gt;GHC.IO.Exception&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bac829434e873e28815ec815ec300d236821389" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-fd&quot;&gt;GHC.IO.FD&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448ce0deee7866118225b76f973e0d69a5260ec2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-handle&quot;&gt;GHC.IO.Handle&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5a10d35be0117a2be109220272fe2bf729e210" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-handle-lock&quot;&gt;GHC.IO.Handle.Lock&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a0e5241140eff076d0b5ac2d5acfeffd617d4d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-handle-types&quot;&gt;GHC.IO.Handle.Types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ff21ac93ba630a831b4edd13eb06785b10bc11" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-iomode&quot;&gt;GHC.IO.IOMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bc368adedd77ec755cbd9ee90244d08e9fce6a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-ioarray&quot;&gt;GHC.IOArray&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69eab9c3f2232447ea682ace20e28f20f8e16a8c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-ioref&quot;&gt;GHC.IORef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474cc386548ad7f86ae5d2360a460afa5ba4776d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-maybe&quot;&gt;GHC.Maybe&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13cef80cbdfb796439d42004734d08078be1cc8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-mvar&quot;&gt;GHC.MVar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03425832656fa5fd811dccad754c8e3a02ffbbf" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-natural&quot;&gt;GHC.Natural&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7da3358ca5cc547ba57e3e2b7e9a980483b0d2b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-num&quot;&gt;GHC.Num&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf28569a8c766615ea5c7fecad6653aa9024d53" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-ptr&quot;&gt;GHC.Ptr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4c556ad22cd48c7fd7c15cc074c07fbef196f6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-read&quot;&gt;GHC.Read&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18937c2518d454b2c2cc66493b00f6d7570d848" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-real&quot;&gt;GHC.Real&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f914494331110d07942dd08235d5088fa46fb909" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-rts-flags&quot;&gt;GHC.RTS.Flags&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0fc1faae93e15ae15929682dcb28eaee1670b9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-show&quot;&gt;GHC.Show&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78844b9a7dadd03fbd69a74dd2b8e66b611b0637" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-st&quot;&gt;GHC.ST&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e046eb2146e0cf778992eb417a34b55bc1c05af" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stable&quot;&gt;GHC.Stable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da75d45401dd8f7e389ee402a2e007a7780800f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stablename&quot;&gt;GHC.StableName&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e31fd61815cffa28275a4a64c0037ce236b9f8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stack-types&quot;&gt;GHC.Stack.Types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee0214639da0b97eb60fe737e58efdcce0869c4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-staticptr&quot;&gt;GHC.StaticPtr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6442f5f054736524b9833cffe1db5d13debe8170" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stats&quot;&gt;GHC.Stats&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe53f76fbf50f75e33baf8786d283118d4d48969" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stref&quot;&gt;GHC.STRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a1ce2445b7704129aeaebb1e299c9690f1be6c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-typelits&quot;&gt;GHC.TypeLits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918bfa4dd91e950051328a88cdc4bbd2f9c74909" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-typenats&quot;&gt;GHC.TypeNats&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeca8524082d3a32acbbcedd108fc5c697f12eed" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-unicode&quot;&gt;GHC.Unicode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd1029f8124d49e0bc7f77ec957eac894eb6415" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-word&quot;&gt;GHC.Word&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0dc4a0b334f7caf289183ef346c4583a9ddeb84" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghci-message&quot;&gt;GHCi.Message&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841b67f32a9b94ab752ce6c1bf748a7c91d36b2b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghci-remotetypes&quot;&gt;GHCi.RemoteTypes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71217839cec01d562cc0567cfd5565711ac5be73" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghci-resolvedbco&quot;&gt;GHCi.ResolvedBCO&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95542f362de4081829e46a47a67567ac3d86959d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghci-th&quot;&gt;GHCi.TH&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8537b467899d44314666184a91fead7f3f128878" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.6.1/docs/html/libraries/unix-2.7.2.2/System-Posix-Process-Internals.html&quot;&gt;System.Posix.Process.Internals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3a735048ab6cc6c2f029fa7f45640da05049a2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html&quot;&gt;Control.Exception.Base&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e5aac50a59f399f334d6bb7c9fa00aafa1a7d4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Data-Typeable-Internal.html&quot;&gt;Data.Typeable.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9222312d8767eb61173ec3602d630506bfe71345" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html&quot;&gt;GHC.IO.Encoding.Types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edac87e64577a5d345384d0db7b06acbe155061" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/binary-0.8.7.0/Data-Binary-Get-Internal.html&quot;&gt;Data.Binary.Get.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde4291117674bc9dbf05c614e8b9bdbbd73c1e7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-IntMap-Internal.html&quot;&gt;Data.IntMap.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabd8ebd6457f2b1a620ae2b4edbaa391a1be030" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html&quot;&gt;Data.Map.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b5dc97449865c0e964542c4cb16d8a5e03122b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html&quot;&gt;Data.Sequence.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872c9226a52be8e1d66cc379a9126b90e21fb77a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Set-Internal.html&quot;&gt;Data.Set.Internal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0c9bc848e007e39a34222ede9adcd1c57a15a8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-boot-th-8.8.3/GHC-ForeignSrcLang-Type.html&quot;&gt;GHC.ForeignSrcLang.Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfaec02ec6b4c33c7335e731868e78964e563e6e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-boot-th-8.8.3/GHC-LanguageExtensions-Type.html&quot;&gt;GHC.LanguageExtensions.Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648ca89d64aa5f738d2accd8c52632382ac02737" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Classes.html&quot;&gt;GHC.Classes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8806a05762a9619e68738bb367db2864fbfa42e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;language-haskell-th-ppr&quot;&gt;Language.Haskell.TH.Ppr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45006e9b03867f6aeef3594cea0c932689c2a7f0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;language-haskell-th-pprlib&quot;&gt;Language.Haskell.TH.PprLib&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d22753b58dddce23e17b3e1bc3fabab7c588e8a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;language-haskell-th-syntax&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee9fc93d28773ee8867d98216e5016242af8247" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-getopt&quot;&gt;System.Console.GetOpt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdf20f11811643b8d9c2c07b0ce52e1471eefbc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-completion&quot;&gt;System.Console.Haskeline.Completion&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c25546da44c9e18b585e4260d0e93e91c72b33f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-history&quot;&gt;System.Console.Haskeline.History&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd4dc2a85e62046ff81e920cce78667f0bf3bd5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-inputt&quot;&gt;System.Console.Haskeline.InputT&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30c9cc05bcc84451b9d9dde397e37eb90006f25" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-monadexception&quot;&gt;System.Console.Haskeline.MonadException&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6b5ff6c23f074e5c6b83779b3bda047c700c3a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-prefs&quot;&gt;System.Console.Haskeline.Prefs&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2806c25978e017225dfec7410aec5ed0f33148f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-term&quot;&gt;System.Console.Haskeline.Term&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c21866a8f06dfb2bbd365f0036439775b15d22" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-terminfo-base&quot;&gt;System.Console.Terminfo.Base&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35193581351d8433ff3025a496b5e30635feff00" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-terminfo-color&quot;&gt;System.Console.Terminfo.Color&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b33af59af873f57a8ca66dfc37436e1342d6813" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-directory-internal-common&quot;&gt;System.Directory.Internal.Common&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e154d61a0507623ea43812d2a58d9b6fddba4f54" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-dynamiclinker-prim&quot;&gt;System.Posix.DynamicLinker.Prim&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4edf35a994595bfcb4f3180d9422b44415ab5d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-fcntl&quot;&gt;System.Posix.Fcntl&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7e267436d9afd19ef8953e026388df05c6a2ea" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-resource&quot;&gt;System.Posix.Resource&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92528c09ad03d445dfdc2d7a40a3faefbe0d9928" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-types&quot;&gt;System.Posix.Types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2f5c5f56defd7192d1c7bf80d223d67b11f77a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-user&quot;&gt;System.Posix.User&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14026564f0de381353f02e5a1ec33ccbcb79a22a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-process-common&quot;&gt;System.Process.Common&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bacb50c67d8a04e151589f7eb0836460dd9355e0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-automation-input&quot;&gt;System.Win32.Automation.Input&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a13626edd3089b6f78391ce793dbf1904a1532" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-automation-input-mouse&quot;&gt;System.Win32.Automation.Input.Mouse&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7b1c8911ebc9520a20c592576d3985721aab9a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-file&quot;&gt;System.Win32.File&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb78450d65393862784e66a76a05cc21269ed72f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-info-version&quot;&gt;System.Win32.Info.Version&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830443d4f7af1671a343ec39a6e095c7f419f4ee" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-simplemapi&quot;&gt;System.Win32.SimpleMAPI&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4645ec52e96dec2dc509d9a7d5272217d8176f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsec-error&quot;&gt;Text.Parsec.Error&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76c9166e075dca47e1266e3fffb751766d34eb3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsec-pos&quot;&gt;Text.Parsec.Pos&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659ac41858b16fe7d0276bb7d4d65c59c6741ae6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsec-prim&quot;&gt;Text.Parsec.Prim&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ce413d76b2ee4ca88d86c68bbd1fa1b84b6465" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsercombinators-readp&quot;&gt;Text.ParserCombinators.ReadP&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6176ffaff42639f1d816126a3568a7cd3d791283" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsercombinators-readprec&quot;&gt;Text.ParserCombinators.ReadPrec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8667ae642fb2e7f7f9736460deaefe559f9327" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-prettyprint-annotated-hughespj&quot;&gt;Text.PrettyPrint.Annotated.HughesPJ&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52da3be7d88654fdb841e5a1896de2a835667495" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-prettyprint-annotated-hughespjclass&quot;&gt;Text.PrettyPrint.Annotated.HughesPJClass&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd803acc4cbf625937fd727de63bf933b4d5e411" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-prettyprint-hughespj&quot;&gt;Text.PrettyPrint.HughesPJ&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18adb5287e0519dd50aa66b5532242f7d9b3677" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-prettyprint-hughespjclass&quot;&gt;Text.PrettyPrint.HughesPJClass&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17db054bc809ebc8aefba12852ef17b5778b00f5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-printf&quot;&gt;Text.Printf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f802642e8f3e3585dd801aa0e51bdbc9d36e40" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-read-lex&quot;&gt;Text.Read.Lex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f831f1c11f790c03cf8fea822975cc957b7a031" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-show-functions&quot;&gt;Text.Show.Functions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0f0d6149ea551886d0f5d7537b49c331efd09e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-xhtml-debug&quot;&gt;Text.XHtml.Debug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cceefc38a36e7f1290512b45457089eb16b3fda9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-xhtml-extras&quot;&gt;Text.XHtml.Extras&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726f7091d259ab2acd1f6fcc18e5bdc92b229d0b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-xhtml-internals&quot;&gt;Text.XHtml.Internals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedef91b7633244f32a120c647b9ed8cf4c5e390" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-xhtml-table&quot;&gt;Text.XHtml.Table&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6936f6c55d8f3df715b9c6d76c0e7fad1d73fae" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;trace-hpc-mix&quot;&gt;Trace.Hpc.Mix&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed27984e141f65150271d79f12c4c60d16ac050c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;trace-hpc-tix&quot;&gt;Trace.Hpc.Tix&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcac20b347297fec4870a99a62aea0d7597e110b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;trace-hpc-util&quot;&gt;Trace.Hpc.Util&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de635231469414804de1ba6508d086ea2019a53f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;utils-containers-internal-bitqueue&quot;&gt;Utils.Containers.Internal.BitQueue&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548143259c39affc65a3f18775be20f0876215f3" translate="yes" xml:space="preserve">
          <source>Defines a macro to be applied to the Haskell source. Parameter names are comma-separated, not inside parens. Such macro is invoked as other &lt;code&gt;#&lt;/code&gt;-constructs, starting with &lt;code&gt;#name&lt;/code&gt;. The definition will be put in the C program inside parens as arguments of &lt;code&gt;printf&lt;/code&gt;. To refer to a parameter, close the quote, put a parameter name and open the quote again, to let C string literals concatenate. Or use &lt;code&gt;printf&lt;/code&gt;&amp;lsquo;s format directives. Values of arguments must be given as strings, unless the macro stringifies them itself using the C preprocessor&amp;rsquo;s &lt;code&gt;#parameter&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337219b8017f6e3901f09de41288884966bcbced" translate="yes" xml:space="preserve">
          <source>Defines a total ordering on a type as per &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec06cbe93b74d2bf02c2a0f0181f042a49a369fb" translate="yes" xml:space="preserve">
          <source>Defines the exit codes that a program can return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e004251e8479de822a929ee4db3ae66fec9b1588" translate="yes" xml:space="preserve">
          <source>Defining a particular instance is now as simple as saying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07bbabba2767e48802fa0f6eba85fe141f331ba9" translate="yes" xml:space="preserve">
          <source>Defining datatype-generic functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2d2c9b9b2c6ec25e38219ce48e783855483642" translate="yes" xml:space="preserve">
          <source>Definition of a Proxy type (poly-kinded in GHC)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3781f414440de1e13f1687f4640c8c41c723e91" translate="yes" xml:space="preserve">
          <source>Definition of character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6789175d50ca62a576adb6becabc0d8ef276ee" translate="yes" xml:space="preserve">
          <source>Definition of propositional equality &lt;code&gt;(&lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt;)&lt;/code&gt;. Pattern-matching on a variable of type &lt;code&gt;(a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)&lt;/code&gt; produces a proof that &lt;code&gt;a '~' b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c985d76d09aac5a0ebe08a1227c25f57c7b79a" translate="yes" xml:space="preserve">
          <source>Definition of representational equality (&lt;code&gt;&lt;a href=&quot;data-type-coercion#t:Coercion&quot;&gt;Coercion&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ad566aa48d75e869e0c3f6a3732f5cb9790bb1" translate="yes" xml:space="preserve">
          <source>Definition of the generic representation types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae8e4716d9ada48a95470d8bc20527701874b17" translate="yes" xml:space="preserve">
          <source>Definitions for the &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad and its friends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e7a0925683dfc3e6cf46fe66aacbdd6ee02e0e" translate="yes" xml:space="preserve">
          <source>Deian Stefan &amp;lt;deian@cs.stanford.edu&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5085f9c9884679e2abbcf4c4316c1f89fa3178dc" translate="yes" xml:space="preserve">
          <source>Delegate control-C handling. Use this for interactive console processes to let them handle control-C themselves (see below for details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4402b950b091b6e155c07442990bfcbc9f4f6add" translate="yes" xml:space="preserve">
          <source>Delete one or more breakpoints by number (use &lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt;&lt;code&gt;:show breaks&lt;/code&gt;&lt;/a&gt; to see the number of each breakpoint). The &lt;code&gt;*&lt;/code&gt; form deletes all the breakpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cdde96d0d70f02c9207fdbfebdd209d208088e" translate="yes" xml:space="preserve">
          <source>Delete the drive, if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab906da44c7fff4202275d6362da2b15e83b3b1" translate="yes" xml:space="preserve">
          <source>Delete the semaphore with the given name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690b03848be456d1dc969aa15d3de8d6ee4aceb7" translate="yes" xml:space="preserve">
          <source>Delete the shared memory object with the given name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5760a885df762d59ffdb1273af2f2f20823eb16" translate="yes" xml:space="preserve">
          <source>Deletion</source>
          <target state="translated">Deletion</target>
        </trans-unit>
        <trans-unit id="5cdaef2b804ee0628603ce6daa12b314ac2c47ea" translate="yes" xml:space="preserve">
          <source>Deletion/Update</source>
          <target state="translated">Deletion/Update</target>
        </trans-unit>
        <trans-unit id="07d0ea439ef27c51c496e2befab2d01a0406fc30" translate="yes" xml:space="preserve">
          <source>Delimited continuation operators are taken from Kenichi Asai and Oleg Kiselyov's tutorial at CW 2011, &quot;Introduction to programming with shift and reset&quot; (&lt;a href=&quot;http://okmij.org/ftp/continuations/#tutorial&quot;&gt;http://okmij.org/ftp/continuations/#tutorial&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fee807155bdc6d26e62b1a2493396a0ce7b43b8" translate="yes" xml:space="preserve">
          <source>Delimited continuations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e535c5110278046f743276ff95809894ddf5e1" translate="yes" xml:space="preserve">
          <source>Denormal</source>
          <target state="translated">Denormal</target>
        </trans-unit>
        <trans-unit id="95d37de666d072852361b9697e530ed08e474acf" translate="yes" xml:space="preserve">
          <source>Dependencies also help to produce more accurate types for user defined functions, and hence to provide earlier detection of errors, and less cluttered types for programmers to work with. Recall the previous definition for a function &lt;code&gt;f&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899a1ea3b9e3bbf05219b587fdabcda174851421" translate="yes" xml:space="preserve">
          <source>Dependency-generation mode. In this mode, GHC can be used to generate dependency information suitable for use in a &lt;code&gt;Makefile&lt;/code&gt;. See &lt;a href=&quot;separate_compilation#makefile-dependencies&quot;&gt;Dependency generation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b1c3fcc2a3701c522192678f25f3732794ea9b" translate="yes" xml:space="preserve">
          <source>Depending on your workload and the other activity on the machine, this may or may not result in a performance improvement. We recommend trying it out and measuring the difference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57be218ae72d75070c0d1ef3835f37b867fc97e5" translate="yes" xml:space="preserve">
          <source>Deposit bits to a word at locations specified by a mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b5395483b1a0a0cbdc76dcb0abbfa9e91f207c" translate="yes" xml:space="preserve">
          <source>Deposit bits to lower 16 bits of a word at locations specified by a mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dfcf91b0052b013d24f8b42645f6f8d9b95620" translate="yes" xml:space="preserve">
          <source>Deposit bits to lower 32 bits of a word at locations specified by a mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d554eaa2d892e27fed45cd01e74567d55f67a8" translate="yes" xml:space="preserve">
          <source>Deposit bits to lower 8 bits of a word at locations specified by a mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="246bb74f28bee156fdef3bc603d3399cdf8d8554" translate="yes" xml:space="preserve">
          <source>Deprecated and unmentionable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b899be11715ab36cdec5b579ce021eba8d82ce" translate="yes" xml:space="preserve">
          <source>Deprecated extension to weaken checks intended to ensure instance resolution termination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d3e633516ce1af098fe4ff7ebdf4e7f3c34f38" translate="yes" xml:space="preserve">
          <source>Deprecated functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d7d5a1634686016c0ad41fc613e6d35e8da5ff" translate="yes" xml:space="preserve">
          <source>Deprecated general combining function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56856579baada6cadc258bee4e3a8031f2712d3" translate="yes" xml:space="preserve">
          <source>Deprecated name for &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:selectToContT&quot;&gt;selectToContT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437588858ba15fa833eee95f8c9ae903eed8cd61" translate="yes" xml:space="preserve">
          <source>Deprecated, does nothing. nullary (no parameter) type classes are now enabled using &lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt;&lt;code&gt;MultiParamTypeClasses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b79ae1c7ab3d19b128e926a6e896d7c942955c" translate="yes" xml:space="preserve">
          <source>Deprecated. Enable kind polymorphism and datatype promotion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa97c5db55e4a5f3c413b23556bec1e29b5bb189" translate="yes" xml:space="preserve">
          <source>Deprecated. Enable most language extensions; see &lt;a href=&quot;#options-language&quot;&gt;Language options&lt;/a&gt; for exactly which ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94bb46bb69774a24d0752d8fbda0e50fd0fc969" translate="yes" xml:space="preserve">
          <source>Deprecated: &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; appends the call stack now</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ce87b4cd12deb8bf23aac0951d42670ab39da3" translate="yes" xml:space="preserve">
          <source>Deprecated: As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:StrictType&quot;&gt;StrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:BangType&quot;&gt;BangType&lt;/a&gt;&lt;/code&gt;. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bangType&quot;&gt;bangType&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3ccf60b556fb58a3434970e15dec49e841fbdb" translate="yes" xml:space="preserve">
          <source>Deprecated: As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:StrictType&quot;&gt;StrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:BangType&quot;&gt;BangType&lt;/a&gt;&lt;/code&gt;. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprBangType&quot;&gt;pprBangType&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46df33720c28dd84dabcecfc3bad5e8d0527d43d" translate="yes" xml:space="preserve">
          <source>Deprecated: As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarStrictType&quot;&gt;VarStrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarBangType&quot;&gt;VarBangType&lt;/a&gt;&lt;/code&gt;. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:varBangType&quot;&gt;varBangType&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5fa3fd2c07f144432a09cbe9bd620938fef37d" translate="yes" xml:space="preserve">
          <source>Deprecated: As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarStrictType&quot;&gt;VarStrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarBangType&quot;&gt;VarBangType&lt;/a&gt;&lt;/code&gt;. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprVarBangType&quot;&gt;pprVarBangType&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27369f8a125013046843020705bad712eafa340b" translate="yes" xml:space="preserve">
          <source>Deprecated: As of template-haskell-2.10, constraint predicates (Pred) are just types (Type), in keeping with ConstraintKinds. Please see &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:equalityT&quot;&gt;equalityT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24267cdd2cb2da28be13fa82976f6ab6ad489237" translate="yes" xml:space="preserve">
          <source>Deprecated: As of template-haskell-2.10, constraint predicates (Pred) are just types (Type), in keeping with ConstraintKinds. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:conT&quot;&gt;conT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:appT&quot;&gt;appT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524362486ccd9d1fd2a47985e3d7043a035ec9b6" translate="yes" xml:space="preserve">
          <source>Deprecated: Do not use this function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb950c290b02e17008623cbd642c0453b8119ba2" translate="yes" xml:space="preserve">
          <source>Deprecated: If you think you know what you are doing, use &lt;code&gt;unsafePerformIO&lt;/code&gt;. If you are sure you know what you are doing, use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt;. If you enjoy sharing an address space with a malevolent agent of chaos, try &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#v:accursedUnutterablePerformIO&quot;&gt;accursedUnutterablePerformIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea6ff0ffe05107ddf6f5770742c45fcaeefbfa5" translate="yes" xml:space="preserve">
          <source>Deprecated: It is an internal function and should never have been exported. Use 'break (== x)' instead. (There are rewrite rules that handle this special case of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64283095497c77fb8a0fb34296ab4c8134ff8ef" translate="yes" xml:space="preserve">
          <source>Deprecated: Please do not use this anymore, use the ordinary &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;. If you need the SIGINT handling, use delegate_ctlc = True (runGenProcess_ is now just an imperfectly emulated stub that probably duplicates or overrides your own signal handling).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84113d1b47c2c2415d68469c44ceb85c47ce2050" translate="yes" xml:space="preserve">
          <source>Deprecated: Please use &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:maybeParens&quot;&gt;maybeParens&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a534244ab642b85ab0f2af16dde445bb53818446" translate="yes" xml:space="preserve">
          <source>Deprecated: Please use &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:maybeParens&quot;&gt;maybeParens&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25447db7fb2297f2c852d45d8735aacd9359989c" translate="yes" xml:space="preserve">
          <source>Deprecated: Safe is now the default, please use Control.Monad.ST instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9bbb7622fb96366bac53d84ef01f1bc604efb3" translate="yes" xml:space="preserve">
          <source>Deprecated: Safe is now the default, please use Control.Monad.ST.Lazy instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b6228674c72cb135b38c2756b15e9168691c66" translate="yes" xml:space="preserve">
          <source>Deprecated: Safe is now the default, please use Foreign.ForeignPtr instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e16e0c54eb9e9fb4539f320a1b8036a55d52dfa" translate="yes" xml:space="preserve">
          <source>Deprecated: Safe is now the default, please use Foreign.Marshal instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704d9633c0a9e36eb4a6c178610f617389dc89af" translate="yes" xml:space="preserve">
          <source>Deprecated: See GHC ticket #2496</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4eba82979df880ba8e29850542d3b0d37abd2d4" translate="yes" xml:space="preserve">
          <source>Deprecated: The use of color attibutes is deprecated in XHTML 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9af07fda45da0df376ea0cc1826948fa2325b34" translate="yes" xml:space="preserve">
          <source>Deprecated: This attribute is deprecated in XHTML 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8e5abba3199458b7c9ea56379fbe9734d9d395" translate="yes" xml:space="preserve">
          <source>Deprecated: This constructor is never used, and will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e5c9f6c8a05c601d166f5b788d5447b1dc9cb0" translate="yes" xml:space="preserve">
          <source>Deprecated: This element is deprecated in XHTML 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5706b2f7b2caa46200990622a8f4fad4759986" translate="yes" xml:space="preserve">
          <source>Deprecated: This exception is never used in practice, and will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c73c7b378b387e0763e88a4bceeeb892adf428" translate="yes" xml:space="preserve">
          <source>Deprecated: This function always throws an exception, and will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33e385a80456b6c714d4425a345543c1a626170" translate="yes" xml:space="preserve">
          <source>Deprecated: This function is scheduled to be replaced by something different in the future, we therefore recommend that you do not use this version and use &lt;code&gt;&lt;a href=&quot;system-posix-process#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7378b846cafb3f483cfb533d2fa0285d45357c9e" translate="yes" xml:space="preserve">
          <source>Deprecated: This function is scheduled to be replaced by something different in the future, we therefore recommend that you do not use this version and use &lt;code&gt;&lt;a href=&quot;system-posix-process#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35b8a8ad1be9bd7f8f44a2515f2b07acd1413d7" translate="yes" xml:space="preserve">
          <source>Deprecated: This function is scheduled to be replaced by something different in the future, we therefore recommend that you do not use this version and use &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d16e33cfe28db6141c894d40b6da802c5cd136" translate="yes" xml:space="preserve">
          <source>Deprecated: This function is scheduled to be replaced by something different in the future, we therefore recommend that you do not use this version and use &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753130d4e203d167614f6d4143d46518b3c3d548" translate="yes" xml:space="preserve">
          <source>Deprecated: This module now contains no instances and will be removed in the future</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f00b60749d14ddd277a8cb7802f1c557fa9603" translate="yes" xml:space="preserve">
          <source>Deprecated: This transformer is invalid on most monads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c75bae1baaa2b545060c1660117b8144143437f" translate="yes" xml:space="preserve">
          <source>Deprecated: This will force all remaining input, don't use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa2c343f2a5edfc38895e149c34e81bb4ac1c92" translate="yes" xml:space="preserve">
          <source>Deprecated: Use 'findWindow Nothing' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f0dce9df91fc24425d47d4e77d0953d8384279" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;a href=&quot;control-monad-except&quot;&gt;Control.Monad.Except&lt;/a&gt; instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef5ca2f0189e7abbe644e1f3ebb1f967527a641" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;a href=&quot;system-process&quot;&gt;System.Process&lt;/a&gt; instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c1c0132fc3565f7f91a44c35a8129c010d4ce8" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-binary-get#v:getByteString&quot;&gt;getByteString&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;data-binary-get#v:getBytes&quot;&gt;getBytes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78a8a7a0f0007382d4289b097f6e3ede23ad043" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSizeMaybe&quot;&gt;bitSizeMaybe&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-bits#v:finiteBitSize&quot;&gt;finiteBitSize&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f82b1e2ee957ce1775bb1a94b207ed9bbb9f17c" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinaryWith&quot;&gt;readsBinaryWith&lt;/a&gt;&lt;/code&gt; to define &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadsPrec&quot;&gt;liftReadsPrec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d674f189e536ec546b41914231b504313e5423a8" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnaryWith&quot;&gt;readsUnaryWith&lt;/a&gt;&lt;/code&gt; to define &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadsPrec&quot;&gt;liftReadsPrec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832d7d100f01f1fdf015ae415b229312e5b29168" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinaryWith&quot;&gt;showsBinaryWith&lt;/a&gt;&lt;/code&gt; to define &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftShowsPrec&quot;&gt;liftShowsPrec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d16fbf8ac25cc564c690166bc63353a8ece881" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnaryWith&quot;&gt;showsUnaryWith&lt;/a&gt;&lt;/code&gt; to define &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftShowsPrec&quot;&gt;liftShowsPrec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16b1e14436dd8f55a120dbc5a196776858e87a6" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEvent&quot;&gt;traceEvent&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEventIO&quot;&gt;traceEventIO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06035f5462368b6b15c0ad9be83de4295d64a79" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c663a41f74d424456c94ec2da384abd9b13bf7" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&quot;&gt;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&lt;/a&gt;. Example usage: 'bang noSourceUnpackedness noSourceStrictness'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0a1b6645cf42c041d078c4f1cb7764f1f017ba" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&quot;&gt;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&lt;/a&gt;. Example usage: 'bang noSourceUnpackedness sourceStrict'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c38676e17091dd362fd130a4f8e1d366eabf24d" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&quot;&gt;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&lt;/a&gt;. Example usage: 'bang sourceUnpack sourceStrict'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c054d451f03e0fe7b68451e90a3f80d110aa0077" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2388c0eec0c4076c7c181343758542e3be3bd69" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;system-directory#v:pathIsSymbolicLink&quot;&gt;pathIsSymbolicLink&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d8fd2a62c15ff4d3416d9bdc3602dd82081c01" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Control.Monad.Trans.Except instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec41ec3a6dce210c917edb0af6b2031808f905e" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Data.ByteString.Char8.hPutStrLn instead. (Functions that rely on ASCII encodings belong in Data.ByteString.Char8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02c7e4792fa881f7b522fd61737f9d17d13d51c" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Data.ByteString.Char8.putStrLn instead. (Functions that rely on ASCII encodings belong in Data.ByteString.Char8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19b9ff00dbb5f904737f8d8aae14b610c9e35a9" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Data.ByteString.Lazy.Char8.putStrLn instead. (Functions that rely on ASCII encodings belong in Data.ByteString.Lazy.Char8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e154adc1416fcc5f369659ef8acfc00a8f9691c" translate="yes" xml:space="preserve">
          <source>Deprecated: Use decodeUtf8 instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4534c43331de4672237e2e31e26511beae1d3687" translate="yes" xml:space="preserve">
          <source>Deprecated: Use reportError or reportWarning instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db141d5473c2b60791d80f8e3e45192c20a8500" translate="yes" xml:space="preserve">
          <source>Deprecated: Use runGetIncremental instead. This function will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1e78389edeecf3c7a4a427aa14021d0e8fe28f" translate="yes" xml:space="preserve">
          <source>Deprecated: Use selectToContT instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287f3eff5b52baac68a6ef50f143d430539cdc35" translate="yes" xml:space="preserve">
          <source>Deprecated: Use text instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4115316b39dfce8c17d4aa30feffabccc6621ae5" translate="yes" xml:space="preserve">
          <source>Deprecated: Use unfoldr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62929b9d0df82739069c397d0cdaa32e2e164b52" translate="yes" xml:space="preserve">
          <source>Deprecated: defaults to True</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
