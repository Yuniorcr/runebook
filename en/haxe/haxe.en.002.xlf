<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="ccc54c49d9898b991db7fb5c2a07ccc6d7414512" translate="yes" xml:space="preserve">
          <source>Inserts a child at the given position among the other childs. A child node can only be inside one given parent node, which is indicated by the [parent] property. If the child is already inside this Document or Element, it will be moved to the new position among the Document or Element's children. If the child node was previously inside a different node, it will be moved to this Document or Element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea9201399a9274c69bf57a512b2df61ef10b3c6" translate="yes" xml:space="preserve">
          <source>Inserts the element &lt;code&gt;x&lt;/code&gt; at the position &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72af19552ac011948858c92dd2f381a88d759a22" translate="yes" xml:space="preserve">
          <source>Instantiates an error with given message and position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c89edcac2811a6a9e8072517cae7f3cbfd5049d" translate="yes" xml:space="preserve">
          <source>Int</source>
          <target state="translated">Int</target>
        </trans-unit>
        <trans-unit id="f4753a4dee54ee10a75b28c6d04eb9ea0d19acce" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="translated">Int32</target>
        </trans-unit>
        <trans-unit id="b94fd3fc483ec65377806e70d0482e51d802d6d3" translate="yes" xml:space="preserve">
          <source>Int32 provides a 32-bit integer with consistent overflow behavior across all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9270926884d9d5f7ad179219983019f730473fe9" translate="yes" xml:space="preserve">
          <source>Int32(&lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">Int32(&lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="de5a2ee2343dadcf8cc5203dfaf64f16eeeaffa6" translate="yes" xml:space="preserve">
          <source>Int32.ucompare()</source>
          <target state="translated">Int32.ucompare()</target>
        </trans-unit>
        <trans-unit id="a9d661ec63e700e837c2d302da08dafc2d57a6a5" translate="yes" xml:space="preserve">
          <source>Int32Array(&lt;a href=&quot;int32arraydata&quot;&gt;Int32ArrayData&lt;/a&gt;)</source>
          <target state="translated">Int32Array(&lt;a href=&quot;int32arraydata&quot;&gt;Int32ArrayData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="b5571064cbb3d52b1b1eb2c829e2e08afa9b13b2" translate="yes" xml:space="preserve">
          <source>Int32ArrayData</source>
          <target state="translated">Int32ArrayData</target>
        </trans-unit>
        <trans-unit id="180fcbe698d0f2c44101a06215c472930bbd0a01" translate="yes" xml:space="preserve">
          <source>Int64</source>
          <target state="translated">Int64</target>
        </trans-unit>
        <trans-unit id="5bef6e89eecff4c79d1e47021f1ebff5bac40f9d" translate="yes" xml:space="preserve">
          <source>Int64(__Int64)</source>
          <target state="translated">Int64(__Int64)</target>
        </trans-unit>
        <trans-unit id="134120295b3cb8fbca390941de6d2b032ccab64c" translate="yes" xml:space="preserve">
          <source>Int64.add()</source>
          <target state="translated">Int64.add()</target>
        </trans-unit>
        <trans-unit id="83ebfbbbee982a9d93cd00e827ea2ec63ea2464c" translate="yes" xml:space="preserve">
          <source>Int64.and()</source>
          <target state="translated">Int64.and()</target>
        </trans-unit>
        <trans-unit id="46fe643c8a87fabd178678e41105cdc5ce5a470d" translate="yes" xml:space="preserve">
          <source>Int64.compare()</source>
          <target state="translated">Int64.compare()</target>
        </trans-unit>
        <trans-unit id="30076c398b525c54cb802cdfc7ddeb23ad067ac4" translate="yes" xml:space="preserve">
          <source>Int64.copy()</source>
          <target state="translated">Int64.copy()</target>
        </trans-unit>
        <trans-unit id="4652c1efc479493fe7c908e553c13cf30f047b36" translate="yes" xml:space="preserve">
          <source>Int64.div()</source>
          <target state="translated">Int64.div()</target>
        </trans-unit>
        <trans-unit id="9e7ae222750d96f580712218bc25c47e0a29eab4" translate="yes" xml:space="preserve">
          <source>Int64.divMod()</source>
          <target state="translated">Int64.divMod()</target>
        </trans-unit>
        <trans-unit id="d87b0ea420d48534e2b25127bca234036a39b121" translate="yes" xml:space="preserve">
          <source>Int64.eq()</source>
          <target state="translated">Int64.eq()</target>
        </trans-unit>
        <trans-unit id="eb9daed6e0d9b77e6a60051b04cc487af0564cb6" translate="yes" xml:space="preserve">
          <source>Int64.fromFloat()</source>
          <target state="translated">Int64.fromFloat()</target>
        </trans-unit>
        <trans-unit id="cdd23e45f5f7fc4bc8d469a00d35cd76d2db4e3a" translate="yes" xml:space="preserve">
          <source>Int64.getHigh()</source>
          <target state="translated">Int64.getHigh()</target>
        </trans-unit>
        <trans-unit id="c5eee1725ffca95cad91df865a20a4a50d3b3696" translate="yes" xml:space="preserve">
          <source>Int64.getLow()</source>
          <target state="translated">Int64.getLow()</target>
        </trans-unit>
        <trans-unit id="18444a9cdaa24ca5a6b93cb80947a1a8e9398f50" translate="yes" xml:space="preserve">
          <source>Int64.get_high()</source>
          <target state="translated">Int64.get_high()</target>
        </trans-unit>
        <trans-unit id="b1d5edae242d29ceda1a9875cedff10e845ed1b2" translate="yes" xml:space="preserve">
          <source>Int64.get_low()</source>
          <target state="translated">Int64.get_low()</target>
        </trans-unit>
        <trans-unit id="18fa04a245b590afab6f2ff722a4a015fcbf7bce" translate="yes" xml:space="preserve">
          <source>Int64.high</source>
          <target state="translated">Int64.high</target>
        </trans-unit>
        <trans-unit id="d7dc5ab451f4c579e67f869c85ad13a0a533b61f" translate="yes" xml:space="preserve">
          <source>Int64.is()</source>
          <target state="translated">Int64.is()</target>
        </trans-unit>
        <trans-unit id="bcd2e1c217fe2bdf7b11af964e0debeb61b4bdbb" translate="yes" xml:space="preserve">
          <source>Int64.isNeg()</source>
          <target state="translated">Int64.isNeg()</target>
        </trans-unit>
        <trans-unit id="f29471f20ca96a9cd5b80bbcf8214063e89a1323" translate="yes" xml:space="preserve">
          <source>Int64.isZero()</source>
          <target state="translated">Int64.isZero()</target>
        </trans-unit>
        <trans-unit id="ac182af57dbdef0cc32c9e054f32e7369d4881e9" translate="yes" xml:space="preserve">
          <source>Int64.low</source>
          <target state="translated">Int64.low</target>
        </trans-unit>
        <trans-unit id="68c0e28d38b44089b5478a45d15dabb16c5cfbe1" translate="yes" xml:space="preserve">
          <source>Int64.make()</source>
          <target state="translated">Int64.make()</target>
        </trans-unit>
        <trans-unit id="5286936eb7ff1e0467a88ab37977c4315876dd23" translate="yes" xml:space="preserve">
          <source>Int64.mod()</source>
          <target state="translated">Int64.mod()</target>
        </trans-unit>
        <trans-unit id="436e2d6b4b0183e272d0906a3ae98bb988e6c5e0" translate="yes" xml:space="preserve">
          <source>Int64.mul()</source>
          <target state="translated">Int64.mul()</target>
        </trans-unit>
        <trans-unit id="de0604ab78222643dae1cf589a6de22cf96b1d4e" translate="yes" xml:space="preserve">
          <source>Int64.neg()</source>
          <target state="translated">Int64.neg()</target>
        </trans-unit>
        <trans-unit id="4dee3c7f716ebc1bed2634ffd8bbae9359b83d41" translate="yes" xml:space="preserve">
          <source>Int64.neq()</source>
          <target state="translated">Int64.neq()</target>
        </trans-unit>
        <trans-unit id="3122df3b20427c42d63389fa1814d1e5c3787aca" translate="yes" xml:space="preserve">
          <source>Int64.ofInt()</source>
          <target state="translated">Int64.ofInt()</target>
        </trans-unit>
        <trans-unit id="eab25feb6c1fc309aeddb7160c450bf89738d6ac" translate="yes" xml:space="preserve">
          <source>Int64.or()</source>
          <target state="translated">Int64.or()</target>
        </trans-unit>
        <trans-unit id="3c9db879e9452d0354498148a752f8c6e2d2ca62" translate="yes" xml:space="preserve">
          <source>Int64.parseString()</source>
          <target state="translated">Int64.parseString()</target>
        </trans-unit>
        <trans-unit id="1db95124921f628b30992822c9167a86fdb270c0" translate="yes" xml:space="preserve">
          <source>Int64.shl()</source>
          <target state="translated">Int64.shl()</target>
        </trans-unit>
        <trans-unit id="2ed19a806c38f9a8b4805c86c38409aaada2af88" translate="yes" xml:space="preserve">
          <source>Int64.shr()</source>
          <target state="translated">Int64.shr()</target>
        </trans-unit>
        <trans-unit id="322abe81021f7a85ed8ceafd1cc766ac63e1886b" translate="yes" xml:space="preserve">
          <source>Int64.sub()</source>
          <target state="translated">Int64.sub()</target>
        </trans-unit>
        <trans-unit id="63f14cf685c9f4a982a35f13a9891a80b9167f6a" translate="yes" xml:space="preserve">
          <source>Int64.toInt()</source>
          <target state="translated">Int64.toInt()</target>
        </trans-unit>
        <trans-unit id="2d53150be3da37ae6d2ee6b228568e49ad7fd192" translate="yes" xml:space="preserve">
          <source>Int64.toStr()</source>
          <target state="translated">Int64.toStr()</target>
        </trans-unit>
        <trans-unit id="4396e08a967ef5941252aedf19b95dbff42a03eb" translate="yes" xml:space="preserve">
          <source>Int64.ucompare()</source>
          <target state="translated">Int64.ucompare()</target>
        </trans-unit>
        <trans-unit id="2c409c7cdbc6aeb6b92f753ddf0d6cabb971a9bd" translate="yes" xml:space="preserve">
          <source>Int64.ushr()</source>
          <target state="translated">Int64.ushr()</target>
        </trans-unit>
        <trans-unit id="0a0be006fbe5fda2152a53726cecae5f3c5180fd" translate="yes" xml:space="preserve">
          <source>Int64.xor()</source>
          <target state="translated">Int64.xor()</target>
        </trans-unit>
        <trans-unit id="4e55ccee8930a5e457760073c2a43fcf0c956399" translate="yes" xml:space="preserve">
          <source>Int64Helper</source>
          <target state="translated">Int64Helper</target>
        </trans-unit>
        <trans-unit id="63600de6179ad76585aed3b8a453dad1af9fcf8b" translate="yes" xml:space="preserve">
          <source>Int64Helper.fromFloat()</source>
          <target state="translated">Int64Helper.fromFloat()</target>
        </trans-unit>
        <trans-unit id="c27936a0c8347c77c85933922ca4261392559d54" translate="yes" xml:space="preserve">
          <source>Int64Helper.parseString()</source>
          <target state="translated">Int64Helper.parseString()</target>
        </trans-unit>
        <trans-unit id="80050b51df21784d163dd20b4b73efde68f88f12" translate="yes" xml:space="preserve">
          <source>IntIterator</source>
          <target state="translated">IntIterator</target>
        </trans-unit>
        <trans-unit id="d37fb896016adb154de1a13f94560e9c0c2b2c19" translate="yes" xml:space="preserve">
          <source>IntIterator is used for implementing interval iterations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0267c0e1e00e25fcc8c7b4f2649f93445d615e53" translate="yes" xml:space="preserve">
          <source>IntIterator.hasNext()</source>
          <target state="translated">IntIterator.hasNext()</target>
        </trans-unit>
        <trans-unit id="fa35d51c662a948aaea3133b573e3aba9d35af75" translate="yes" xml:space="preserve">
          <source>IntIterator.next()</source>
          <target state="translated">IntIterator.next()</target>
        </trans-unit>
        <trans-unit id="0f29482cc9bc047f66a8e132b870415f8be1e054" translate="yes" xml:space="preserve">
          <source>IntMap allows mapping of Int keys to arbitrary values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d20980f0130a49479da795bf213548ea80bc914" translate="yes" xml:space="preserve">
          <source>IntMap&amp;lt;T&amp;gt;</source>
          <target state="translated">IntMap&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="520c41dabb2a5f400ebb6936be91ab99c28cf706" translate="yes" xml:space="preserve">
          <source>Internally used to provide completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a404079143e2e9e9b99843dd9361ed8070c7f3f" translate="yes" xml:space="preserve">
          <source>Invalidates all files given in &lt;code&gt;filePaths&lt;/code&gt;, removing them from the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb4b89b9f08866e1d6951c493bcd5e2b8515d64" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;f&lt;/code&gt; after &lt;code&gt;time_ms&lt;/code&gt; milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cd6af055a9ee42b80c697ab67486aaed7956c9" translate="yes" xml:space="preserve">
          <source>It can be overridden in a subclass, or rebound directly to a custom function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8f000566e6989ee09cb4151b669ab3917bd8d7" translate="yes" xml:space="preserve">
          <source>It contains common functions that interact with the macro interpreter to query or set information. Other API functions are available in the tools classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10b8095f50b1c866058f2e2c5c0e1a188b7173b" translate="yes" xml:space="preserve">
          <source>It is also possible to extend this class and override its run() method in the child class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11053e26c278bec4a6c1e30da7c49ef546b4e5a2" translate="yes" xml:space="preserve">
          <source>It is intended to be used as a type parameter constraint. If used as a real type, the underlying type will be &lt;code&gt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6b8c778e1d80e2295634f8cd6900fd7f433115" translate="yes" xml:space="preserve">
          <source>It is not possible to restart &lt;code&gt;this&lt;/code&gt; Timer once stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb7c99bd75f17cb6863cc01225bb7512dde52dd" translate="yes" xml:space="preserve">
          <source>It is possible to define new types in the callback, in which case it will be called again with the new types as argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12bcc5eb31cf090d7f733e9140e92cff2be601da" translate="yes" xml:space="preserve">
          <source>It is separated from the file name by a dot. This dot is not part of the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6166ccaa8f992a6c03b601c1c913a7974c07c0f" translate="yes" xml:space="preserve">
          <source>It is useful for interfacing with external code on dynamic platforms such as JavaScript or Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96c54765c241e5f5fad130fa7178b33e054a390" translate="yes" xml:space="preserve">
          <source>It is usually not used explicitly, but through its special syntax: &lt;code&gt;min...max&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b396397f5218b266ce44652bbcdc85b84a1b35b" translate="yes" xml:space="preserve">
          <source>It's a more type-safe alternative to &lt;code&gt;&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt;, because it doesn't support field access or operators and it's bound to monomorphs. So, to work with the actual value, it needs to be explicitly promoted to another type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ca6a3da933ca6826a2f4d3fcc919af71d7e380" translate="yes" xml:space="preserve">
          <source>Iterable</source>
          <target state="translated">Iterable</target>
        </trans-unit>
        <trans-unit id="3d30c160a784532449e4b66c8bf52b1b3134429c" translate="yes" xml:space="preserve">
          <source>Iterable&amp;lt;T&amp;gt;</source>
          <target state="translated">Iterable&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="267f460cfa9d3bfe2791d937d97710dce1ede9b7" translate="yes" xml:space="preserve">
          <source>Iterable.iterator()</source>
          <target state="translated">Iterable.iterator()</target>
        </trans-unit>
        <trans-unit id="8da3c0291b824bb9493360e79c263ec9dda0b199" translate="yes" xml:space="preserve">
          <source>Iterates from &lt;code&gt;min&lt;/code&gt; (inclusive) to &lt;code&gt;max&lt;/code&gt; (exclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2efa8005f721253c1885b7aa66fe3772b9b4797" translate="yes" xml:space="preserve">
          <source>Iterates over the bound values of &lt;code&gt;this&lt;/code&gt; BalancedTree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0997d0bbc72107b79eae3068b414ad69676f9462" translate="yes" xml:space="preserve">
          <source>Iterates over the keys of &lt;code&gt;this&lt;/code&gt; BalancedTree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c04500b0e0cbf652d51b923f1ff87220e0f92b" translate="yes" xml:space="preserve">
          <source>Iteration over keys and values, using &lt;code&gt;keys&lt;/code&gt; and &lt;code&gt;iterator&lt;/code&gt; respectively, are in-order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="b542145b39639fa15db12eacc638c4db7092e621" translate="yes" xml:space="preserve">
          <source>Iterator&amp;lt;T&amp;gt;</source>
          <target state="translated">Iterator&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b988d194cf1a284c44207987379b50ca5d2d3ecd" translate="yes" xml:space="preserve">
          <source>Iterator.hasNext()</source>
          <target state="translated">Iterator.hasNext()</target>
        </trans-unit>
        <trans-unit id="998f38b51ea45889d523b65844f1bb755807c2f4" translate="yes" xml:space="preserve">
          <source>Iterator.next()</source>
          <target state="translated">Iterator.next()</target>
        </trans-unit>
        <trans-unit id="1e8fdf1b66294b0c9bbc3abac50ad7357fd07bc1" translate="yes" xml:space="preserve">
          <source>Its cross-platform implementation uses String concatenation internally, but StringBuf may be optimized for different targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dd61f23186974dd64efe93b01701903b2ac456" translate="yes" xml:space="preserve">
          <source>JSGenApi</source>
          <target state="translated">JSGenApi</target>
        </trans-unit>
        <trans-unit id="fe121dfcb66a48c30a57bc39607e7db48adf991e" translate="yes" xml:space="preserve">
          <source>JSON objects are parsed into anonymous structures and JSON arrays are parsed into &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311fa4916aba6e2981bcbe50a744430ba7125aad" translate="yes" xml:space="preserve">
          <source>JSON objects are parsed into anonymous structures and JSON arrays are parsed into &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7807a381c0fc2b95fb1698046b30c699eafc8e" translate="yes" xml:space="preserve">
          <source>Joins all paths in &lt;code&gt;paths&lt;/code&gt; together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8b29f774aacb41aea9f3a3e3922bc27a5b2f86" translate="yes" xml:space="preserve">
          <source>Json</source>
          <target state="translated">Json</target>
        </trans-unit>
        <trans-unit id="a6fd8dd44b293b5e4d498feaa7280008d100aec2" translate="yes" xml:space="preserve">
          <source>Json.parse()</source>
          <target state="translated">Json.parse()</target>
        </trans-unit>
        <trans-unit id="f4380e4af95e27923bb12fef067bd0f7955ed3f2" translate="yes" xml:space="preserve">
          <source>Json.stringify()</source>
          <target state="translated">Json.stringify()</target>
        </trans-unit>
        <trans-unit id="effd5a759570a43edf1b2f9b97568c00121b8523" translate="yes" xml:space="preserve">
          <source>JsonParser</source>
          <target state="translated">JsonParser</target>
        </trans-unit>
        <trans-unit id="c97f6a4f16b61e4936d52def688365d67d5c2532" translate="yes" xml:space="preserve">
          <source>JsonPrinter</source>
          <target state="translated">JsonPrinter</target>
        </trans-unit>
        <trans-unit id="b763e5cdc815105e1dc8846598350214d4af0022" translate="yes" xml:space="preserve">
          <source>Keys are compared by value and recursively over their parameters. If any parameter is not an enum value, &lt;code&gt;&lt;a href=&quot;../../reflect#compare&quot;&gt;Reflect.compare&lt;/a&gt;&lt;/code&gt; is used to compare them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab09d9adb98c17169fd258e9b9f83a3876c4fd1" translate="yes" xml:space="preserve">
          <source>Lambda</source>
          <target state="translated">Lambda</target>
        </trans-unit>
        <trans-unit id="27f242dfdc7f50a63384a8385ba1024ccaa40dd9" translate="yes" xml:space="preserve">
          <source>Lambda.array()</source>
          <target state="translated">Lambda.array()</target>
        </trans-unit>
        <trans-unit id="50ad3063a05a5b4f649a0c7a35a25373b9b3d9bd" translate="yes" xml:space="preserve">
          <source>Lambda.concat()</source>
          <target state="translated">Lambda.concat()</target>
        </trans-unit>
        <trans-unit id="4b4a99325a415582a170046c28303bb010bf356b" translate="yes" xml:space="preserve">
          <source>Lambda.count()</source>
          <target state="translated">Lambda.count()</target>
        </trans-unit>
        <trans-unit id="37a7ea6068bee3763de49bf6ae095706a3076f47" translate="yes" xml:space="preserve">
          <source>Lambda.empty()</source>
          <target state="translated">Lambda.empty()</target>
        </trans-unit>
        <trans-unit id="6cecf5c524fd3fe202cb3652323f119c59fc6bc3" translate="yes" xml:space="preserve">
          <source>Lambda.exists()</source>
          <target state="translated">Lambda.exists()</target>
        </trans-unit>
        <trans-unit id="c55e298692d97e1bc70fa9fed76fb0e4be914736" translate="yes" xml:space="preserve">
          <source>Lambda.filter()</source>
          <target state="translated">Lambda.filter()</target>
        </trans-unit>
        <trans-unit id="88d46de068bf9e283140243f0f8521404887a2cb" translate="yes" xml:space="preserve">
          <source>Lambda.find()</source>
          <target state="translated">Lambda.find()</target>
        </trans-unit>
        <trans-unit id="0e8e3edef98ba19fa696726e259fafe1d6f35e33" translate="yes" xml:space="preserve">
          <source>Lambda.flatMap()</source>
          <target state="translated">Lambda.flatMap()</target>
        </trans-unit>
        <trans-unit id="26f5c76a7f8e4e068abb0de9d7fd18fb14cc59a2" translate="yes" xml:space="preserve">
          <source>Lambda.flatten()</source>
          <target state="translated">Lambda.flatten()</target>
        </trans-unit>
        <trans-unit id="31bc528527b0a0e533d6bb543f42793570f88da5" translate="yes" xml:space="preserve">
          <source>Lambda.fold()</source>
          <target state="translated">Lambda.fold()</target>
        </trans-unit>
        <trans-unit id="a07f1ba596c39f4d764ece343af39fe70e98fcea" translate="yes" xml:space="preserve">
          <source>Lambda.foreach()</source>
          <target state="translated">Lambda.foreach()</target>
        </trans-unit>
        <trans-unit id="e2fcb2bd62934ca8689279b4b5032bc36711a62a" translate="yes" xml:space="preserve">
          <source>Lambda.has()</source>
          <target state="translated">Lambda.has()</target>
        </trans-unit>
        <trans-unit id="f1a9f7798ee3ed600de30119165a2bda2e16239f" translate="yes" xml:space="preserve">
          <source>Lambda.indexOf()</source>
          <target state="translated">Lambda.indexOf()</target>
        </trans-unit>
        <trans-unit id="0c4a1f7b34c7e12792f4ae5ca1d3ec22dfeb1063" translate="yes" xml:space="preserve">
          <source>Lambda.iter()</source>
          <target state="translated">Lambda.iter()</target>
        </trans-unit>
        <trans-unit id="dbb816d462e6816615abb320e05881adaed97573" translate="yes" xml:space="preserve">
          <source>Lambda.list()</source>
          <target state="translated">Lambda.list()</target>
        </trans-unit>
        <trans-unit id="f260cd4c876daa0ed07e37bce4c7dee38e6f0788" translate="yes" xml:space="preserve">
          <source>Lambda.map()</source>
          <target state="translated">Lambda.map()</target>
        </trans-unit>
        <trans-unit id="63a9df624e17608be913003677ea1d78f8d12038" translate="yes" xml:space="preserve">
          <source>Lambda.mapi()</source>
          <target state="translated">Lambda.mapi()</target>
        </trans-unit>
        <trans-unit id="7d8aafdfe2c5246c81e7910d5b0fd2c14015f92a" translate="yes" xml:space="preserve">
          <source>Leading 0s that are not part of the 0x/0X hexadecimal notation are ignored, which means octal notation is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332429ff7e40c3d9c62743d50829b44166181db9" translate="yes" xml:space="preserve">
          <source>Leading whitespaces are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b818541880f1879e3c469fb9496a9e45e29f246d" translate="yes" xml:space="preserve">
          <source>Learn by example with the &lt;a href=&quot;http://code.haxe.org&quot;&gt;Haxe Code Cookbook&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf75d76f0e17fe6c4712a0d6260231aabca20b24" translate="yes" xml:space="preserve">
          <source>Licensed under a MIT license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb545ae96a630ac4a0bb2ea8a3276b5626493c0c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;context#getPosInfos&quot;&gt;Context.getPosInfos&lt;/a&gt;&lt;/code&gt;, except this method is available on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76837ec01edda32a9c5e09d61a290f1fcfef2611" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;context#makePosition&quot;&gt;Context.makePosition&lt;/a&gt;&lt;/code&gt;, except this method is available on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e038d11f67d31f5b4e005f6581d77e194e1010ab" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;follow&lt;/code&gt;, follows all typedefs of &lt;code&gt;t&lt;/code&gt; to reach the actual type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="32624fa358bf3077ed85bd024f17f4ae15dfa095" translate="yes" xml:space="preserve">
          <source>List of &lt;code&gt;&lt;a href=&quot;typetree#TypeTree&quot;&gt;TypeTree&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f559d92989bbcd29509985b2338853d8b4a10b" translate="yes" xml:space="preserve">
          <source>List&amp;lt;T&amp;gt;</source>
          <target state="translated">List&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d14b7c0f12440628dcaefb1e2f628f5c7f28ddde" translate="yes" xml:space="preserve">
          <source>List.add()</source>
          <target state="translated">List.add()</target>
        </trans-unit>
        <trans-unit id="1a84b0d8d4b6a09ca8b34c444b8c7376621f0f85" translate="yes" xml:space="preserve">
          <source>List.clear()</source>
          <target state="translated">List.clear()</target>
        </trans-unit>
        <trans-unit id="23e69ca61121fcd9b2912431399774c89bc72349" translate="yes" xml:space="preserve">
          <source>List.filter()</source>
          <target state="translated">List.filter()</target>
        </trans-unit>
        <trans-unit id="53f740e7aacc7e5663b09bb034447335d19a950b" translate="yes" xml:space="preserve">
          <source>List.first()</source>
          <target state="translated">List.first()</target>
        </trans-unit>
        <trans-unit id="eb4f897db91be5ed91613dfe895e372fc2625367" translate="yes" xml:space="preserve">
          <source>List.isEmpty()</source>
          <target state="translated">List.isEmpty()</target>
        </trans-unit>
        <trans-unit id="374e236e19bedfd585542bc4f7611e6535386ae6" translate="yes" xml:space="preserve">
          <source>List.iterator()</source>
          <target state="translated">List.iterator()</target>
        </trans-unit>
        <trans-unit id="a4b40f1378385b05cb279641e315d22935baae0b" translate="yes" xml:space="preserve">
          <source>List.join()</source>
          <target state="translated">List.join()</target>
        </trans-unit>
        <trans-unit id="25360d50042f7fa5ea7f82b2406d57f8679c61c2" translate="yes" xml:space="preserve">
          <source>List.last()</source>
          <target state="translated">List.last()</target>
        </trans-unit>
        <trans-unit id="b71c6da1b49faa2aea2599be40252afd1f8ca5a6" translate="yes" xml:space="preserve">
          <source>List.length</source>
          <target state="translated">List.length</target>
        </trans-unit>
        <trans-unit id="2a230e9328fa7b593ab57adec3856214ed0c8182" translate="yes" xml:space="preserve">
          <source>List.map()</source>
          <target state="translated">List.map()</target>
        </trans-unit>
        <trans-unit id="a20817c20811e9c8c576f8f50edcb6df6443e6be" translate="yes" xml:space="preserve">
          <source>List.pop()</source>
          <target state="translated">List.pop()</target>
        </trans-unit>
        <trans-unit id="0a76a2f082b1dc5ee0fa6ec88350f9d120a71785" translate="yes" xml:space="preserve">
          <source>List.push()</source>
          <target state="translated">List.push()</target>
        </trans-unit>
        <trans-unit id="91244face8cde1eefcf1019ecb2c39865751c226" translate="yes" xml:space="preserve">
          <source>List.remove()</source>
          <target state="translated">List.remove()</target>
        </trans-unit>
        <trans-unit id="4960121cc615faf7a14e1a06ce81d86e6747d9af" translate="yes" xml:space="preserve">
          <source>List.toString()</source>
          <target state="translated">List.toString()</target>
        </trans-unit>
        <trans-unit id="9a25cbe2bedb93a2c7434e53a1547350c436f777" translate="yes" xml:space="preserve">
          <source>ListSort</source>
          <target state="translated">ListSort</target>
        </trans-unit>
        <trans-unit id="2a5be9b1d727aa430f0e4ba99f6e42e73a8b03d6" translate="yes" xml:space="preserve">
          <source>ListSort provides a stable implementation of merge sort through its &lt;code&gt;sort&lt;/code&gt; method. It has a O(N.log(N)) complexity and does not require additional memory allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ecf92f6ca737b6640fef29c561c2818971f882" translate="yes" xml:space="preserve">
          <source>Lists all available resource names. The resource name is the name part of the -resource file@name command line parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185503187cd6d17ae7ba84afffb5fc7a922409a2" translate="yes" xml:space="preserve">
          <source>Load a type patch file that can modify the field types within declared classes and enums.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752feb706b41e3858353d7acb32e6dc65ab30c05" translate="yes" xml:space="preserve">
          <source>LocalConnection</source>
          <target state="translated">LocalConnection</target>
        </trans-unit>
        <trans-unit id="f49cd27f603cccf93ab664acf83a3a0f0cb9e7e5" translate="yes" xml:space="preserve">
          <source>Lock&amp;lt;T&amp;gt;</source>
          <target state="translated">Lock&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8bf95ea372568c7a254ba9fada5f6f1701ebc5b5" translate="yes" xml:space="preserve">
          <source>Log</source>
          <target state="translated">Log</target>
        </trans-unit>
        <trans-unit id="f55d8cea62032e57fd1f73e59b8757cbcfc2f73b" translate="yes" xml:space="preserve">
          <source>Log primarily provides the &lt;code&gt;trace()&lt;/code&gt; method, which is invoked upon a call to &lt;code&gt;trace()&lt;/code&gt; in Haxe code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c050687de494209c2881feeb3c7df48a3a362416" translate="yes" xml:space="preserve">
          <source>Log.clear()</source>
          <target state="translated">Log.clear()</target>
        </trans-unit>
        <trans-unit id="7aad365ad01d6811220691f5915fb1f5c707df4f" translate="yes" xml:space="preserve">
          <source>Log.setColor()</source>
          <target state="translated">Log.setColor()</target>
        </trans-unit>
        <trans-unit id="114379759a6377e6e41d8d5d8c0becc838aea9a6" translate="yes" xml:space="preserve">
          <source>Log.trace()</source>
          <target state="translated">Log.trace()</target>
        </trans-unit>
        <trans-unit id="8fe80ba4a1cb69fd7346d22527df0323c51fb2d2" translate="yes" xml:space="preserve">
          <source>Look at these &lt;a href=&quot;https://haxe.org/use-cases/&quot;&gt;use cases for Haxe&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c50b1160e5ff84e62f4b3173a6691cb7b618b66" translate="yes" xml:space="preserve">
          <source>MacroStringTools</source>
          <target state="translated">MacroStringTools</target>
        </trans-unit>
        <trans-unit id="2997e89a9aeea087a209d02b5f0eabf66d21e3b5" translate="yes" xml:space="preserve">
          <source>MacroType&amp;lt;Const&amp;gt;</source>
          <target state="translated">MacroType&amp;lt;Const&amp;gt;</target>
        </trans-unit>
        <trans-unit id="918d07668894baa8d1e9ee3b4ce21148bed0b520" translate="yes" xml:space="preserve">
          <source>Macros access modifier. Allows expression macro functions. These are normal functions which are executed as soon as they are typed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7801b7c9c57e922d34ab91363fb3dfffc41fec" translate="yes" xml:space="preserve">
          <source>MainEvent</source>
          <target state="translated">MainEvent</target>
        </trans-unit>
        <trans-unit id="2fa06cacd277c4e665ee59494282d37d3858cef6" translate="yes" xml:space="preserve">
          <source>MainEvent.call()</source>
          <target state="translated">MainEvent.call()</target>
        </trans-unit>
        <trans-unit id="78d52dc2c9de3750aa67fbd70420adde292a2367" translate="yes" xml:space="preserve">
          <source>MainEvent.delay()</source>
          <target state="translated">MainEvent.delay()</target>
        </trans-unit>
        <trans-unit id="0a1cefbba38f322028170eeb5e10a740e230a659" translate="yes" xml:space="preserve">
          <source>MainEvent.nextRun</source>
          <target state="translated">MainEvent.nextRun</target>
        </trans-unit>
        <trans-unit id="8edea1ab1d2fa9a98a918633d0f8754c9e978e47" translate="yes" xml:space="preserve">
          <source>MainEvent.priority</source>
          <target state="translated">MainEvent.priority</target>
        </trans-unit>
        <trans-unit id="6d8d2afc0b1ab754a72622172021a3ce26464bc3" translate="yes" xml:space="preserve">
          <source>MainEvent.stop()</source>
          <target state="translated">MainEvent.stop()</target>
        </trans-unit>
        <trans-unit id="40c391e1c2a1b977268271ac8c3df04d18e8ea6e" translate="yes" xml:space="preserve">
          <source>MainLoop</source>
          <target state="translated">MainLoop</target>
        </trans-unit>
        <trans-unit id="9d778eea7a6aeb1d1e456459c3b275a4d3401534" translate="yes" xml:space="preserve">
          <source>MainLoop.add()</source>
          <target state="translated">MainLoop.add()</target>
        </trans-unit>
        <trans-unit id="4026375b42d5b5ca422f92cb1dde9740819423c9" translate="yes" xml:space="preserve">
          <source>MainLoop.addThread()</source>
          <target state="translated">MainLoop.addThread()</target>
        </trans-unit>
        <trans-unit id="8930769f763c994fd299dee8d0b9aeac6f78f941" translate="yes" xml:space="preserve">
          <source>MainLoop.hasEvents()</source>
          <target state="translated">MainLoop.hasEvents()</target>
        </trans-unit>
        <trans-unit id="276bdffc8b04f51d5055b5613fb9d4b550a4a2dd" translate="yes" xml:space="preserve">
          <source>MainLoop.runInMainThread()</source>
          <target state="translated">MainLoop.runInMainThread()</target>
        </trans-unit>
        <trans-unit id="40bf89f3f28d70683145e2c66ad514851b51f476" translate="yes" xml:space="preserve">
          <source>MainLoop.threadCount</source>
          <target state="translated">MainLoop.threadCount</target>
        </trans-unit>
        <trans-unit id="a81a3363116c64c5426433d5407b5bdbfd31d2e3" translate="yes" xml:space="preserve">
          <source>Makes a copy of &lt;code&gt;this&lt;/code&gt; Int64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c841cc3ef994c9acf550521be47b677e4f717dc9" translate="yes" xml:space="preserve">
          <source>Makes a synchronous request to &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8f9b7ce8a59db9731c134550c4d461617944c0" translate="yes" xml:space="preserve">
          <source>Makes resource &lt;code&gt;data&lt;/code&gt; available as &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="138f5692ce97dbe96858dab22ab134bc7f182d89" translate="yes" xml:space="preserve">
          <source>Map allows key to value mapping for arbitrary value types, and many key types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309297f794a2d7efc969046934ff6b887a1aeece" translate="yes" xml:space="preserve">
          <source>Map is an abstract type, it is not available at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06201829a2445ed32711d907519dd7c99b678797" translate="yes" xml:space="preserve">
          <source>Map&amp;lt;K, V&amp;gt;(IMap&amp;lt;K, V&amp;gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8501008afedc1d61e9b4815a6eda5ad19edbbec8" translate="yes" xml:space="preserve">
          <source>Map.arrayWrite()</source>
          <target state="translated">Map.arrayWrite()</target>
        </trans-unit>
        <trans-unit id="271d4619f34f8043244a7b9237fcd38c99bba578" translate="yes" xml:space="preserve">
          <source>Map.exists()</source>
          <target state="translated">Map.exists()</target>
        </trans-unit>
        <trans-unit id="59aa2f9bd709837734543a1dec9f937f6b2f80da" translate="yes" xml:space="preserve">
          <source>Map.get()</source>
          <target state="translated">Map.get()</target>
        </trans-unit>
        <trans-unit id="2cbb8aac9a50c136f75a38ed435a6aa0f43ec4fc" translate="yes" xml:space="preserve">
          <source>Map.iterator()</source>
          <target state="translated">Map.iterator()</target>
        </trans-unit>
        <trans-unit id="90ff2cf297cb2ed8c4986eaacd559456af872849" translate="yes" xml:space="preserve">
          <source>Map.keys()</source>
          <target state="translated">Map.keys()</target>
        </trans-unit>
        <trans-unit id="ccffb05f5f2037c69b057b00e4d61c09692e8dbd" translate="yes" xml:space="preserve">
          <source>Map.remove()</source>
          <target state="translated">Map.remove()</target>
        </trans-unit>
        <trans-unit id="c20db6399b1842a6faf38ec875ed56416adf85d9" translate="yes" xml:space="preserve">
          <source>Map.set()</source>
          <target state="translated">Map.set()</target>
        </trans-unit>
        <trans-unit id="277e78758a79f4483424adbbfa295813d60d381a" translate="yes" xml:space="preserve">
          <source>Map.toString()</source>
          <target state="translated">Map.toString()</target>
        </trans-unit>
        <trans-unit id="b39ff0729241b6e3a81eed842c9591324f95a8f3" translate="yes" xml:space="preserve">
          <source>Maps &lt;code&gt;key&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a1a69c7059a56e56db4c96d54b678f1af4b025" translate="yes" xml:space="preserve">
          <source>Maps can also be created with &lt;code&gt;key1 =&amp;gt; value1, key2 =&amp;gt; value2&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e1e07c053273f32109dfec5ad10eefee4212e5" translate="yes" xml:space="preserve">
          <source>Marks types or packages to be kept by DCE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45abd8dff3c8dc9dcba8fcd85572a17fa6ae3e57" translate="yes" xml:space="preserve">
          <source>MatchRule</source>
          <target state="translated">MatchRule</target>
        </trans-unit>
        <trans-unit id="c798ec5af798149e7ab4dde5ec5ec74738f2dce4" translate="yes" xml:space="preserve">
          <source>Matches enum instance &lt;code&gt;e&lt;/code&gt; against pattern &lt;code&gt;pattern&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if matching succeeded and &lt;code&gt;&lt;a href=&quot;../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="f2bd7d71bb1b474d5e8de04960bdbaeedfe3ff9a" translate="yes" xml:space="preserve">
          <source>Math.NEGATIVE_INFINITY</source>
          <target state="translated">Math.NEGATIVE_INFINITY</target>
        </trans-unit>
        <trans-unit id="0cddc42478d36e342e44fe5b84c0fefe156eb049" translate="yes" xml:space="preserve">
          <source>Math.NaN</source>
          <target state="translated">Math.NaN</target>
        </trans-unit>
        <trans-unit id="8eb0aa2e2eaf6d220ee9aa91dbaaef38886bc084" translate="yes" xml:space="preserve">
          <source>Math.PI</source>
          <target state="translated">Math.PI</target>
        </trans-unit>
        <trans-unit id="17e961d0e9d278c8ca680032e2413410e29f287e" translate="yes" xml:space="preserve">
          <source>Math.POSITIVE_INFINITY</source>
          <target state="translated">Math.POSITIVE_INFINITY</target>
        </trans-unit>
        <trans-unit id="410be9abfb7aaa2be737501fe036af1a9344e4b3" translate="yes" xml:space="preserve">
          <source>Math.abs()</source>
          <target state="translated">Math.abs()</target>
        </trans-unit>
        <trans-unit id="371a116a45b4fda1dae503f69736bb5c23aecba8" translate="yes" xml:space="preserve">
          <source>Math.acos()</source>
          <target state="translated">Math.acos()</target>
        </trans-unit>
        <trans-unit id="58bd364a10777d15907dd59767c23e184100db1e" translate="yes" xml:space="preserve">
          <source>Math.asin()</source>
          <target state="translated">Math.asin()</target>
        </trans-unit>
        <trans-unit id="7e13cc7456379588c253cce58617c5dbbcb35881" translate="yes" xml:space="preserve">
          <source>Math.atan()</source>
          <target state="translated">Math.atan()</target>
        </trans-unit>
        <trans-unit id="ad760c496be563f7240b9336bd77a84142c0e9f1" translate="yes" xml:space="preserve">
          <source>Math.atan2()</source>
          <target state="translated">Math.atan2()</target>
        </trans-unit>
        <trans-unit id="4bb8e3b9820c801b1612fceea3a211075931c4fe" translate="yes" xml:space="preserve">
          <source>Math.ceil()</source>
          <target state="translated">Math.ceil()</target>
        </trans-unit>
        <trans-unit id="d28b469ca7beef472018effe638bd28565ce92e9" translate="yes" xml:space="preserve">
          <source>Math.cos()</source>
          <target state="translated">Math.cos()</target>
        </trans-unit>
        <trans-unit id="902536dd96513dfad1a26237a47da1d9e145d98d" translate="yes" xml:space="preserve">
          <source>Math.exp()</source>
          <target state="translated">Math.exp()</target>
        </trans-unit>
        <trans-unit id="14217c7c7bfcf32796a3182827b49fbd64a4e00b" translate="yes" xml:space="preserve">
          <source>Math.fceil()</source>
          <target state="translated">Math.fceil()</target>
        </trans-unit>
        <trans-unit id="4ef116e618db21738e658a61c68bde6482b69f24" translate="yes" xml:space="preserve">
          <source>Math.ffloor()</source>
          <target state="translated">Math.ffloor()</target>
        </trans-unit>
        <trans-unit id="8b59ee2be64414a87adc740217a55452b3e2ad97" translate="yes" xml:space="preserve">
          <source>Math.floor()</source>
          <target state="translated">Math.floor()</target>
        </trans-unit>
        <trans-unit id="65bf29809adb56eb695ea6232862428a77dcf44a" translate="yes" xml:space="preserve">
          <source>Math.fround()</source>
          <target state="translated">Math.fround()</target>
        </trans-unit>
        <trans-unit id="5f9868dfe9ada158e2a9d7b427839dd2bee8e048" translate="yes" xml:space="preserve">
          <source>Math.isFinite()</source>
          <target state="translated">Math.isFinite()</target>
        </trans-unit>
        <trans-unit id="9db47049e9d0cf7848334d16dc3308b2b93a534e" translate="yes" xml:space="preserve">
          <source>Math.isNaN()</source>
          <target state="translated">Math.isNaN()</target>
        </trans-unit>
        <trans-unit id="cd9260ff35733cd6d2d0b8d78f69537991161ee9" translate="yes" xml:space="preserve">
          <source>Math.log()</source>
          <target state="translated">Math.log()</target>
        </trans-unit>
        <trans-unit id="59d550bb51fcbd809bcb1a581c55b9b9d51c5881" translate="yes" xml:space="preserve">
          <source>Math.max()</source>
          <target state="translated">Math.max()</target>
        </trans-unit>
        <trans-unit id="59ae67f5bd89a4693de2775190ca889bd7a8078c" translate="yes" xml:space="preserve">
          <source>Math.min()</source>
          <target state="translated">Math.min()</target>
        </trans-unit>
        <trans-unit id="523528971a2803cf69e0ea61ea813382bbbf3d98" translate="yes" xml:space="preserve">
          <source>Math.pow()</source>
          <target state="translated">Math.pow()</target>
        </trans-unit>
        <trans-unit id="0ab0041a8e6aee90eced0ae6e90d6f2b7fef1562" translate="yes" xml:space="preserve">
          <source>Math.random()</source>
          <target state="translated">Math.random()</target>
        </trans-unit>
        <trans-unit id="28cdeeac79c1ac918e3083c7d60b7d07ee168245" translate="yes" xml:space="preserve">
          <source>Math.round()</source>
          <target state="translated">Math.round()</target>
        </trans-unit>
        <trans-unit id="5e1feedbc187958257f60dbaf59b99fad8f88cc4" translate="yes" xml:space="preserve">
          <source>Math.sin()</source>
          <target state="translated">Math.sin()</target>
        </trans-unit>
        <trans-unit id="3a8b88b5d82bbf087d118e791e0c5efdf1773ae1" translate="yes" xml:space="preserve">
          <source>Math.sqrt()</source>
          <target state="translated">Math.sqrt()</target>
        </trans-unit>
        <trans-unit id="5d7e16f7faf45c61e05012368a117cb301121b40" translate="yes" xml:space="preserve">
          <source>Math.tan()</source>
          <target state="translated">Math.tan()</target>
        </trans-unit>
        <trans-unit id="6791d0c4d3294b9ee3e99d6e48fd8f80d4067dc1" translate="yes" xml:space="preserve">
          <source>Md5</source>
          <target state="translated">Md5</target>
        </trans-unit>
        <trans-unit id="e7bc0a8e250176656f22ed6849e1330fa83bd3e8" translate="yes" xml:space="preserve">
          <source>Measures the time it takes to execute &lt;code&gt;f&lt;/code&gt;, in seconds with fractions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d546a6dea9ff90d517b51c25b35319931ae4e04" translate="yes" xml:space="preserve">
          <source>Meta</source>
          <target state="translated">Meta</target>
        </trans-unit>
        <trans-unit id="d28c9cca7f3f18f58098609b4a964b0dbc0e6a18" translate="yes" xml:space="preserve">
          <source>MetaAccess</source>
          <target state="translated">MetaAccess</target>
        </trans-unit>
        <trans-unit id="69819943b882f40949cbb4cadd6a04e570c64be4" translate="yes" xml:space="preserve">
          <source>MetaAccess is a wrapper for the &lt;code&gt;&lt;a href=&quot;metadata#Metadata&quot;&gt;Metadata&lt;/a&gt;&lt;/code&gt; array. It can be used to add metadata to and remove metadata from its origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ff384a2ab537f81603a84ba3dd7536455eedee" translate="yes" xml:space="preserve">
          <source>MetaData</source>
          <target state="translated">MetaData</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="0140cd33697a5d8ddd5240027a63a00a50a0d2c5" translate="yes" xml:space="preserve">
          <source>Metadata names are not unique during compilation, so this method never overwrites a previous metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b5ca2a4b6acd2e3b8aa9222d2692ff8b0958a0" translate="yes" xml:space="preserve">
          <source>MetadataEntry</source>
          <target state="translated">MetadataEntry</target>
        </trans-unit>
        <trans-unit id="71ead62a79b4567bac01731540620bf0c3051828" translate="yes" xml:space="preserve">
          <source>MethodKind</source>
          <target state="translated">MethodKind</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="35e1b982c363c49a860fddb149aac4fff5c17524" translate="yes" xml:space="preserve">
          <source>Might return null if no specific type is expected or if the calling macro is not an expression-macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d906f8494989376971bc62ef6900aa277e6d2a14" translate="yes" xml:space="preserve">
          <source>Modifying the returned array has no effect on the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf83da1b0977d6162ad0fd0d0d525ea5b3a60c1" translate="yes" xml:space="preserve">
          <source>Modifying the returned array has no effect on the compiler. Class paths can be added using &lt;code&gt;&lt;a href=&quot;compiler#addClassPath&quot;&gt;haxe.macro.Compiler.addClassPath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6e1af0a8f8d55bc46fdcae1b7793ad59f66986" translate="yes" xml:space="preserve">
          <source>Modifying the returned map has no effect on the compilation, use &lt;code&gt;&lt;a href=&quot;context#addResource&quot;&gt;haxe.macro.Context.addResource&lt;/a&gt;&lt;/code&gt; to add new resources to the compilation unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2ccc212e7e65123388fd7df0bf1aeb24cfe764" translate="yes" xml:space="preserve">
          <source>Modifying the returned map has no effect on the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a12d90caa82e15b9b854b9926f86905c67e4f00" translate="yes" xml:space="preserve">
          <source>Modifying this array has no effect on the origin of &lt;code&gt;this&lt;/code&gt; MetaAccess. The &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; methods can be used for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99263090c30ac075de9347a59fa806dbb19270d9" translate="yes" xml:space="preserve">
          <source>ModuleCheckPolicy(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">ModuleCheckPolicy(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="c2bba267685ef4c3db2faf28bb4267b2572a88a2" translate="yes" xml:space="preserve">
          <source>ModuleType</source>
          <target state="translated">ModuleType</target>
        </trans-unit>
        <trans-unit id="ffac16deee6a292d09a331bd8ce9bc7b63094f44" translate="yes" xml:space="preserve">
          <source>Moves to the next item of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cad1141c092936dc7fa14a78aa4361c5951a366" translate="yes" xml:space="preserve">
          <source>NOTE: the returned value references an internally stored typed expression that is reset between compilations, so care should be taken when storing the expression returned by this method in a static variable and using the compilation server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b3b49049fcfd166898d6769456b314335b904a" translate="yes" xml:space="preserve">
          <source>NaN stands for &quot;Not a Number&quot;. It occurs when a mathematically incorrect operation is executed, such as taking the square root of a negative number: Math.sqrt(-1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25acd4c2b3c1dcc8de02b2801172478511c2d45" translate="yes" xml:space="preserve">
          <source>No access (&lt;code&gt;never&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83597e6219f449d1b0ec6befd379f0cf572ba220" translate="yes" xml:space="preserve">
          <source>Normal access (&lt;code&gt;default&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a80cee7e81ebdd48405366d6cfe9c66f927aad" translate="yes" xml:space="preserve">
          <source>Normalize a given &lt;code&gt;path&lt;/code&gt; (e.g. make '/usr/local/../lib' to '/usr/lib').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb03948a9c4520461b4ef9b9c1bf46ad47ecda3e" translate="yes" xml:space="preserve">
          <source>Note that a check like &lt;code&gt;map.get(key) == null&lt;/code&gt; can hold for two reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706e42662e87178dbf4a0c9a542873ebad5d3a8b" translate="yes" xml:space="preserve">
          <source>Note that a running Timer may or may not prevent the program to exit automatically when main() returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c12843ddd86402b24eb26318693db71ea8e485" translate="yes" xml:space="preserve">
          <source>Note: Deprecated in 4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="2733fbc99552717d5102849f42ab3bcc5f21cfab" translate="yes" xml:space="preserve">
          <source>Null&amp;lt;T&amp;gt;</source>
          <target state="translated">Null&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="44f9ea50ccf6e2aadc844ebab41b632b830f328c" translate="yes" xml:space="preserve">
          <source>Numeric types: a is less than b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed408433eb83d06324f5dbe38d33fa8afbed5aae" translate="yes" xml:space="preserve">
          <source>ObjectMap allows mapping of object keys to arbitrary values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91282fcc33beb387840e4c61116a93db0007963" translate="yes" xml:space="preserve">
          <source>ObjectMap&amp;lt;K, V&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98688248bc7d3d5a0a74c6905684cd0a1dd31735" translate="yes" xml:space="preserve">
          <source>On some platforms configurations (for instance JS with no TypedArray support as in IE8-), Haxe will try to emulate the array buffers API. However in that case memory sharing will not be supported : each typed array or will copy its own data set. This flag allows users to detect if we are doing such emulation. At the moment only JavaScript is concerned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fa1f24ceb2959eca332781724c7e2ec8171c1a" translate="yes" xml:space="preserve">
          <source>On static platforms, working with the Iterable structure might be slower than performing the operations directly on known types, such as Array and List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b757b0566c6952821e83d7aa37124e5debb5e103" translate="yes" xml:space="preserve">
          <source>On static targets, &lt;code&gt;null&lt;/code&gt; cannot be assigned to &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt;. If this is necessary, &lt;code&gt;&lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&amp;gt;&lt;/code&gt; can be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d398aae823e69c29ca1158d89406a9fcd40dcbe6" translate="yes" xml:space="preserve">
          <source>On static targets, &lt;code&gt;null&lt;/code&gt; cannot be assigned to &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. If this is necessary, &lt;code&gt;&lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&amp;gt;&lt;/code&gt; can be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d925332d75c20a6eac884be08b0ece94f6089917" translate="yes" xml:space="preserve">
          <source>On static targets, &lt;code&gt;null&lt;/code&gt; cannot be assigned to Float. If this is necessary, &lt;code&gt;&lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&amp;gt;&lt;/code&gt; can be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec1b4296d24c1ff061619d7eede215547f7c020" translate="yes" xml:space="preserve">
          <source>On static targets, the keys are considered to be strong references. Refer to &lt;code&gt;&lt;a href=&quot;weakmap#WeakMap&quot;&gt;haxe.ds.WeakMap&lt;/a&gt;&lt;/code&gt; for a weak reference version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3878092d5d082b3ba70698b0b68ec54b5c427188" translate="yes" xml:space="preserve">
          <source>On the other hand, iterators should not require a call to &lt;code&gt;hasNext()&lt;/code&gt; before the first call to &lt;code&gt;next()&lt;/code&gt; if an element is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbfb65b933d2f7e0872533e17b13c0c938f4a21" translate="yes" xml:space="preserve">
          <source>Once bound, it can still be rebound to different functions until &lt;code&gt;this&lt;/code&gt; Timer is stopped through a call to &lt;code&gt;this.&lt;a href=&quot;#stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635eec5935d421e98aea98c57081ed28c00f612e" translate="yes" xml:space="preserve">
          <source>Operations have a logarithmic average and worst-case cost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8f578f6f4f68de81e2397d589ea6aab09aa82a" translate="yes" xml:space="preserve">
          <source>Operations with &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; as an operand may result in &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b1eb7fd1ef670549308d23236297255f43ea3d" translate="yes" xml:space="preserve">
          <source>Operations with &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; as an operand may result in &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b71dcb31df29f269ad6fbba8a8705b0675750af" translate="yes" xml:space="preserve">
          <source>Option&amp;lt;T&amp;gt;</source>
          <target state="translated">Option&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0ac3bb84c3044318ef15b9b7ba88f1aa8e993927" translate="yes" xml:space="preserve">
          <source>Optional parameters of the type path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5deb42fb6fd7ce67cd61c124e6e3a2f67bb605" translate="yes" xml:space="preserve">
          <source>Other errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863b00a4699928d4f0a22ab180512fc9f32cb47b" translate="yes" xml:space="preserve">
          <source>Other: unspecified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824a48c4300ad158d712f07dceefac7b606b23a8" translate="yes" xml:space="preserve">
          <source>Otherwise &lt;code&gt;f&lt;/code&gt; is called once per sub-expression of &lt;code&gt;e&lt;/code&gt;, with the sub-expression as argument. These calls are done in order of the sub-expression declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8028e504a2a4f1b302b03f08eb41bed59157dd50" translate="yes" xml:space="preserve">
          <source>Otherwise &lt;code&gt;t&lt;/code&gt; is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac5a6f043f40890c9b616ca1fe784f9925372cb" translate="yes" xml:space="preserve">
          <source>Otherwise &lt;code&gt;x&lt;/code&gt; is read as decimal number with 0-9 being allowed characters. &lt;code&gt;x&lt;/code&gt; may also start with a - to denote a negative value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cc458be331dd8f5fb7a07cd5b56f5d6a435943" translate="yes" xml:space="preserve">
          <source>Otherwise an instance of &lt;code&gt;e&lt;/code&gt; constructed through each of its non- argument constructors is returned, in the order of the constructor declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ba360360bdc560edc5e6fea61675d202e04a7a" translate="yes" xml:space="preserve">
          <source>Otherwise if &lt;code&gt;f&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e0209ef8c383aaab1b3029d525547240f916bd" translate="yes" xml:space="preserve">
          <source>Otherwise null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff0b2b5b7ec17ee286283225e41550a1e8fab49" translate="yes" xml:space="preserve">
          <source>Otherwise the binding of &lt;code&gt;key&lt;/code&gt; is removed and true is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3637a125b40e231dc4fe6034a6e6c7341f317c66" translate="yes" xml:space="preserve">
          <source>Otherwise the elements of &lt;code&gt;pack&lt;/code&gt; are joined with a separating dot, with an appended dot separating the result from &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa1bd5e22eca5704b2e70452f7062e65ae43d6d" translate="yes" xml:space="preserve">
          <source>Otherwise the first element of &lt;code&gt;it&lt;/code&gt; is passed to &lt;code&gt;f&lt;/code&gt; alongside &lt;code&gt;first&lt;/code&gt;. The result of that call is then passed to &lt;code&gt;f&lt;/code&gt; with the next element of &lt;code&gt;it&lt;/code&gt;, and so on until &lt;code&gt;it&lt;/code&gt; has no more elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0438d2621dc8dd712e6696ebc8c434c97808ca" translate="yes" xml:space="preserve">
          <source>Otherwise the length may exceed &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861bfa3a2ad00efb19cd6de3f74b04b1e0ae0fc7" translate="yes" xml:space="preserve">
          <source>Otherwise the result are the values that were used as arguments to &lt;code&gt;e&lt;/code&gt;, in the order of their declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6609017418423b33d9e530bd2dabb678b9f73389" translate="yes" xml:space="preserve">
          <source>Otherwise the result is a chain of &lt;code&gt;EField&lt;/code&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2adbc4f057ad50c853f8eaecd9c6c828f97307d" translate="yes" xml:space="preserve">
          <source>Otherwise the result is true if &lt;code&gt;f1&lt;/code&gt; and the &lt;code&gt;f2&lt;/code&gt; are physically equal, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0b1567cd56b5e2edbf298d3b541376b8b2fdda" translate="yes" xml:space="preserve">
          <source>Otherwise the substring of &lt;code&gt;path&lt;/code&gt; excluding the trailing slashes or backslashes is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b0124575a83566ec5f513949efcd6880dc06d5" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;this&lt;/code&gt; String is split into parts at each occurrence of &lt;code&gt;delimiter&lt;/code&gt;. If &lt;code&gt;this&lt;/code&gt; String starts (or ends) with &lt;code&gt;delimiter&lt;/code&gt;, the result &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; contains a leading (or trailing) empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; element. Two subsequent delimiters also result in an empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e060664fdd507949850375a8aa2c87031263440" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;this&lt;/code&gt; Ucs2 is split into parts at each occurrence of &lt;code&gt;delimiter&lt;/code&gt;. If &lt;code&gt;this&lt;/code&gt; Ucs2 starts (or ends) with &lt;code&gt;delimiter&lt;/code&gt;, the result Array contains a leading (or trailing) empty Ucs2 &quot;&quot; element. Two subsequent delimiters also result in an empty Ucs2 &quot;&quot; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249171dd8f2b5924a4dd0454902831425c2e6c2e" translate="yes" xml:space="preserve">
          <source>Otherwise, false is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a1e1a99fc3b515d67b15eb61cae43cb01881d1" translate="yes" xml:space="preserve">
          <source>Otherwise, including if &lt;code&gt;v&lt;/code&gt; is null, the result is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928311fa99f2c83c52c7ecf64b80ae10c3a6d3d7" translate="yes" xml:space="preserve">
          <source>Otherwise, the offset is &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28eba5a0589043b3d3f65a6cb961e8e6f2937db" translate="yes" xml:space="preserve">
          <source>Otherwise, use of this type is discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="9e949f0dd4c824b824055796ff17df154ea3bbc0" translate="yes" xml:space="preserve">
          <source>Outputs &lt;code&gt;v&lt;/code&gt; in a platform-dependent way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4a71d0f71882f8de998c326f3b4a906593e6ee" translate="yes" xml:space="preserve">
          <source>Override access modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c16016a39b41bfb9e355a8c15bec09997ac36c" translate="yes" xml:space="preserve">
          <source>Override this method to execute code after the test ran.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80ed5b9bcbdf2107537363fd651e326b86dce5a" translate="yes" xml:space="preserve">
          <source>Override this method to execute code before the test runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="891ab403237575001b05cf5a5b6202dff31e5751" translate="yes" xml:space="preserve">
          <source>Parentheses &lt;code&gt;(e)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75133fc01dec1aa3de0d7dd201959cdd0538b3c6" translate="yes" xml:space="preserve">
          <source>Parentheses, metadata and the &lt;code&gt;untyped&lt;/code&gt; keyword are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="translated">Parser</target>
        </trans-unit>
        <trans-unit id="38cd6ef41d5664ca03c435e04f636982845f9a27" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;expr&lt;/code&gt; as Haxe code, returning the corresponding AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6dc2f3a8a9e65f7ac164ad08218724221efcbcc" translate="yes" xml:space="preserve">
          <source>Parses given JSON-encoded &lt;code&gt;str&lt;/code&gt; and returns the resulting object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac4ace7c6644ee4edcf4fa1a420e1131573af32" translate="yes" xml:space="preserve">
          <source>Parses given JSON-encoded &lt;code&gt;text&lt;/code&gt; and returns the resulting object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f37ebee9250096c6c8960c277c7b74fd8ef0687" translate="yes" xml:space="preserve">
          <source>Parses the String into an XML Document. Set strict parsing to true in order to enable a strict check of XML attributes and entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7854f6caa716e484d0ae70496434441ca184ad1" translate="yes" xml:space="preserve">
          <source>Parses the String into an Xml document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="759138b862d089fdda685d2844bf3152e6ad186d" translate="yes" xml:space="preserve">
          <source>Path information can be retrieved by accessing the dir, file and ext properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256f5110956397f72314b193ed29700edd80a9c6" translate="yes" xml:space="preserve">
          <source>PathParams</source>
          <target state="translated">PathParams</target>
        </trans-unit>
        <trans-unit id="ab732f23f5ebb6d701d5df2d193b422a4167a295" translate="yes" xml:space="preserve">
          <source>Performs signed integer divison of &lt;code&gt;dividend&lt;/code&gt; by &lt;code&gt;divisor&lt;/code&gt;. Returns &lt;code&gt;{ quotient : &lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;, modulus : &lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt; }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1a42f5ac9a45b411a075f430e4ea8f3c6f1418" translate="yes" xml:space="preserve">
          <source>Platforms</source>
          <target state="translated">Platforms</target>
        </trans-unit>
        <trans-unit id="1d0e5968b17715852e84985fa2aa0254f3cf5f45" translate="yes" xml:space="preserve">
          <source>PosInfos</source>
          <target state="translated">PosInfos</target>
        </trans-unit>
        <trans-unit id="8dc56fe0debcf4acea57f4e25c554ddc5b45b4b0" translate="yes" xml:space="preserve">
          <source>PosInfos is a magic type which can be used to generate position information into the output for debugging use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7165d08098ed3e6ba66084c39a2959a837b6b7f3" translate="yes" xml:space="preserve">
          <source>PosInfos.className</source>
          <target state="translated">PosInfos.className</target>
        </trans-unit>
        <trans-unit id="dba53d5296fbd303f1c026ccc77526a6309697af" translate="yes" xml:space="preserve">
          <source>PosInfos.customParams</source>
          <target state="translated">PosInfos.customParams</target>
        </trans-unit>
        <trans-unit id="e38b700d7033fbe91790fee1f2373de377ac1fda" translate="yes" xml:space="preserve">
          <source>PosInfos.fileName</source>
          <target state="translated">PosInfos.fileName</target>
        </trans-unit>
        <trans-unit id="5919f2860c846c3936e050acd3f89f92590d232a" translate="yes" xml:space="preserve">
          <source>PosInfos.lineNumber</source>
          <target state="translated">PosInfos.lineNumber</target>
        </trans-unit>
        <trans-unit id="b5bd368a0c760f0e942c3f18de9cedc7cbed2779" translate="yes" xml:space="preserve">
          <source>PosInfos.methodName</source>
          <target state="translated">PosInfos.methodName</target>
        </trans-unit>
        <trans-unit id="cf1c85adba548e8d681255278976584a7e4a44de" translate="yes" xml:space="preserve">
          <source>Position</source>
          <target state="translated">Position</target>
        </trans-unit>
        <trans-unit id="847d8ff596de89de1cd1f45423f8bec23a450e95" translate="yes" xml:space="preserve">
          <source>Position of the first character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ce72b0bf717c87d76da9ab4c43f66033822ba3" translate="yes" xml:space="preserve">
          <source>Position of the last character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b97b160dab72ef77d9291f020855d7aeaf9403" translate="yes" xml:space="preserve">
          <source>PositionTools</source>
          <target state="translated">PositionTools</target>
        </trans-unit>
        <trans-unit id="e3701c0b33f685db9dac4d2c6eddc77b37839aa5" translate="yes" xml:space="preserve">
          <source>Prepend the file content to the body of the top-level closure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894bdd02bc2fa0b9bdc70a3cb4a441edb9d081f6" translate="yes" xml:space="preserve">
          <source>Prepend the file content to the output file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058303c8cf02da5c2389da749d685aae6191690e" translate="yes" xml:space="preserve">
          <source>Printer</source>
          <target state="translated">Printer</target>
        </trans-unit>
        <trans-unit id="483d74a1d79aca4a22a954af662dff0c019851e5" translate="yes" xml:space="preserve">
          <source>Prints the given object/value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b98852ebeb12d6a73d9d8a7ee3ae40e2a841429" translate="yes" xml:space="preserve">
          <source>Private access (&lt;code&gt;null&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7b1ab4e66a62d962aa93ebe75c834cfeaaab8d" translate="yes" xml:space="preserve">
          <source>Private access modifier, grants access to class and its sub-classes only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="12051892e4b8e3a7fe14e66fd7a63e7550e6a4aa" translate="yes" xml:space="preserve">
          <source>Proxy&amp;lt;Const, T&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15915928fc0349be9bbc8c8729d312197f7ec2e9" translate="yes" xml:space="preserve">
          <source>Proxy&amp;lt;T&amp;gt;</source>
          <target state="translated">Proxy&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ad9c36058a7cc7327ab5d7a152d54bfd051bc59f" translate="yes" xml:space="preserve">
          <source>Public access modifier, grants access from anywhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36d89ff6879f2dff9bae9a1362412e771b06742" translate="yes" xml:space="preserve">
          <source>Pushes element &lt;code&gt;item&lt;/code&gt; onto the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde08e45f6377ee3f9807d3eb7f5763b1d96b8b1" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;len&lt;/code&gt; bytes and write them into &lt;code&gt;s&lt;/code&gt; to the position specified by &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe4875fd67e9e1d2e8736f4edcda1f056cb14c4" translate="yes" xml:space="preserve">
          <source>Read a 16-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9152105c65d5b2d234ccfbded7ee529ef7804d6" translate="yes" xml:space="preserve">
          <source>Read a 16-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af87eff626f2471973103d19a00cc3cc088427a" translate="yes" xml:space="preserve">
          <source>Read a 24-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723c305c2b036473c4af80f604fdbf99d74558a1" translate="yes" xml:space="preserve">
          <source>Read a 24-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b605478108e7e2b22a9241e8c27f1c8835b25e98" translate="yes" xml:space="preserve">
          <source>Read a 32-bit floating point number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cc28954a69007fce6da945b7d8dcebd209cf2f" translate="yes" xml:space="preserve">
          <source>Read a 32-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7fd9ad69ab3b3918a0a8c5d06ad9eb7f38a647" translate="yes" xml:space="preserve">
          <source>Read a 64-bit double-precision floating point number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e800a9ef4671fca2669b4a9317b24bd069a517" translate="yes" xml:space="preserve">
          <source>Read a 8-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f7818a0f6a01ee74ac6d837eb1161475e59a33" translate="yes" xml:space="preserve">
          <source>Read a line of text separated by CR and/or LF bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f370b391c6ee9ed9868e90d26e0546d45148d7" translate="yes" xml:space="preserve">
          <source>Read a string until a character code specified by &lt;code&gt;end&lt;/code&gt; is occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814eca51579348aace67e84ad65e41b6c67ecf17" translate="yes" xml:space="preserve">
          <source>Read all available data from &lt;code&gt;i&lt;/code&gt; and write it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b6d2995bf7ca212b8afe3e82423dee5d0f4cb0" translate="yes" xml:space="preserve">
          <source>Read and &lt;code&gt;len&lt;/code&gt; bytes as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcc3b161a414c64d70f24b4782bb38fbf48a804" translate="yes" xml:space="preserve">
          <source>Read and return &lt;code&gt;nbytes&lt;/code&gt; bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604319f40d8dcf7531b316513fb313b99afb5594" translate="yes" xml:space="preserve">
          <source>Read and return all available data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182deb1db887d2ffb907694b3d6d9aa8f1c84b74" translate="yes" xml:space="preserve">
          <source>Read and return one byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a79d32d00f94b67813272f9222e95a1ba7d87f" translate="yes" xml:space="preserve">
          <source>Read the most efficiently possible the n-th byte of the data. Behavior when reading outside of the available data is unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99833f4e3b18bf3ff272a16669fabd2301f6f019" translate="yes" xml:space="preserve">
          <source>Read through the &lt;a href=&quot;https://haxe.org/manual/&quot;&gt;Haxe Manual&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5bbe8292ed1b69e0f95e5bdaa035569a295fd7" translate="yes" xml:space="preserve">
          <source>Reader</source>
          <target state="translated">Reader</target>
        </trans-unit>
        <trans-unit id="8cde78c1f9a8fe77cc848765edef823bd6fc106e" translate="yes" xml:space="preserve">
          <source>Recursively compares two enum instances &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; by value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cfcdca5ed542240131e60e7a5af5e83f61e786" translate="yes" xml:space="preserve">
          <source>Redirect</source>
          <target state="translated">Redirect</target>
        </trans-unit>
        <trans-unit id="82bb7572ac7b9c8a2185290b7dd3bc75fa4f8070" translate="yes" xml:space="preserve">
          <source>Ref&amp;lt;T&amp;gt;</source>
          <target state="translated">Ref&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4bf40ac28e074a6e06069cfd386c1c69cebbf927" translate="yes" xml:space="preserve">
          <source>Reference to a local variable &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af5c710bf6404186492885fc3c961395cdb8e12" translate="yes" xml:space="preserve">
          <source>Reference to a module type &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31267e0260d2bfe84f183fae83927d447432e232" translate="yes" xml:space="preserve">
          <source>Reference to the filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a5b905dd4356baa99003c3d0fb1752a6134b6e" translate="yes" xml:space="preserve">
          <source>Reflect</source>
          <target state="translated">Reflect</target>
        </trans-unit>
        <trans-unit id="751583da9a58e6a4503530976d6d44c292750d91" translate="yes" xml:space="preserve">
          <source>Reflect.callMethod()</source>
          <target state="translated">Reflect.callMethod()</target>
        </trans-unit>
        <trans-unit id="2f082e52b41580fee7c1d6fbf2491d64e005f228" translate="yes" xml:space="preserve">
          <source>Reflect.compare()</source>
          <target state="translated">Reflect.compare()</target>
        </trans-unit>
        <trans-unit id="9b0703076839190c9f9c369497d954b4d96ad721" translate="yes" xml:space="preserve">
          <source>Reflect.compareMethods()</source>
          <target state="translated">Reflect.compareMethods()</target>
        </trans-unit>
        <trans-unit id="1264ee98671936625b33b9dd4464d04fcdf21254" translate="yes" xml:space="preserve">
          <source>Reflect.copy()</source>
          <target state="translated">Reflect.copy()</target>
        </trans-unit>
        <trans-unit id="820a08006167b0a0fb69636a95f17977751735b3" translate="yes" xml:space="preserve">
          <source>Reflect.deleteField()</source>
          <target state="translated">Reflect.deleteField()</target>
        </trans-unit>
        <trans-unit id="8581302b729befbb04d08a49d3068f82f6c9c117" translate="yes" xml:space="preserve">
          <source>Reflect.field()</source>
          <target state="translated">Reflect.field()</target>
        </trans-unit>
        <trans-unit id="c5e1010834e280aca2282a4d745441fdf50f5ae7" translate="yes" xml:space="preserve">
          <source>Reflect.fields()</source>
          <target state="translated">Reflect.fields()</target>
        </trans-unit>
        <trans-unit id="1857173c79749ea4dc9f4995f289d7250a4aea65" translate="yes" xml:space="preserve">
          <source>Reflect.getProperty()</source>
          <target state="translated">Reflect.getProperty()</target>
        </trans-unit>
        <trans-unit id="db49d3af6678613773dd2cf550436f37a59453ef" translate="yes" xml:space="preserve">
          <source>Reflect.hasField()</source>
          <target state="translated">Reflect.hasField()</target>
        </trans-unit>
        <trans-unit id="8af14c4e31ce782f32ed4dbc5eec6dbed52ff033" translate="yes" xml:space="preserve">
          <source>Reflect.isEnumValue()</source>
          <target state="translated">Reflect.isEnumValue()</target>
        </trans-unit>
        <trans-unit id="697cf2670984ebb02a1edc0c116f01a98123d6da" translate="yes" xml:space="preserve">
          <source>Reflect.isFunction()</source>
          <target state="translated">Reflect.isFunction()</target>
        </trans-unit>
        <trans-unit id="9cd1abdae7755d0e295b0f94735ebb45c50e4965" translate="yes" xml:space="preserve">
          <source>Reflect.isObject()</source>
          <target state="translated">Reflect.isObject()</target>
        </trans-unit>
        <trans-unit id="110d55db56dab424ed11f455ce923c5193462c6b" translate="yes" xml:space="preserve">
          <source>Reflect.makeVarArgs()</source>
          <target state="translated">Reflect.makeVarArgs()</target>
        </trans-unit>
        <trans-unit id="1e3e35f6bb812edda6c3cb272493f1aab51a8612" translate="yes" xml:space="preserve">
          <source>Reflect.setField()</source>
          <target state="translated">Reflect.setField()</target>
        </trans-unit>
        <trans-unit id="9f704d04e4003c2c0220b3741bc3371cc661566c" translate="yes" xml:space="preserve">
          <source>Reflect.setProperty()</source>
          <target state="translated">Reflect.setProperty()</target>
        </trans-unit>
        <trans-unit id="3fa17b6b13575e5711a868b90dcaac3eab6a132e" translate="yes" xml:space="preserve">
          <source>Register a callback function that will be called every time the macro context cached is reused with a new compilation. This enable to reset some static vars since the code might have been changed. If the callback returns false, the macro context is discarded and another one is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7beca115492a9bf4a71d3c4d99406dc1634d179" translate="yes" xml:space="preserve">
          <source>Register a macro call to be performed every time the module &lt;code&gt;modulePath&lt;/code&gt; is reused by the compilation cache, meaning that neither the module itself nor its dependencies was changed since last compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37abe345cf691b55220e5bb527727019ca2b9693" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;len&lt;/code&gt; elements from &lt;code&gt;this&lt;/code&gt; Array, starting at and including &lt;code&gt;pos&lt;/code&gt;, an returns them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca4b9fb56da057c4dc944813fdbd129aa681f3b" translate="yes" xml:space="preserve">
          <source>Removes a (static) field from a given class by name. An error is thrown when &lt;code&gt;className&lt;/code&gt; or &lt;code&gt;field&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9011c65faf199fb3b4122b2cd38e9f1b6797a04" translate="yes" xml:space="preserve">
          <source>Removes a child from the Document or Element. Returns true if the child was successfuly removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2442f440bfbb7a9a892a7e491b1a1b8a7907078" translate="yes" xml:space="preserve">
          <source>Removes a specified &lt;code&gt;key&lt;/code&gt; from the structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9667df8c9991013f032b901dbbfd91f2f3d64b" translate="yes" xml:space="preserve">
          <source>Removes all &lt;code&gt;name&lt;/code&gt; metadata entries from the origin of &lt;code&gt;this&lt;/code&gt; MetaAccess.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134d5d2cdb070309f09b816a5681ec510db99484" translate="yes" xml:space="preserve">
          <source>Removes an attribute for an Element node. Attributes are case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977787e31b7ea94bb8442ab3512dda29e7bd3e3a" translate="yes" xml:space="preserve">
          <source>Removes leading and trailing space characters of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bf8f34c8a0e842074ca0100ab3b0a431b1d9a2" translate="yes" xml:space="preserve">
          <source>Removes leading space characters of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788dc55e0f6e7aae28374568805751739c678c9d" translate="yes" xml:space="preserve">
          <source>Removes the current binding of &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc774470d6a303589292ea0adfd4c4c234a2cb0" translate="yes" xml:space="preserve">
          <source>Removes the field named &lt;code&gt;field&lt;/code&gt; from structure &lt;code&gt;o&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec84921fe7e49c9953360786e023ce22f38574e" translate="yes" xml:space="preserve">
          <source>Removes the first element of &lt;code&gt;this&lt;/code&gt; Array and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b4e512823ac53569acaa139c5d6271a1d82640" translate="yes" xml:space="preserve">
          <source>Removes the first element which is equal to &lt;code&gt;v&lt;/code&gt; according to the &lt;code&gt;==&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5874aafcd035d0e14d450e2ab62dacfc98611aec" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of &lt;code&gt;v&lt;/code&gt; in &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9d674a61b8f447801d0ae7215292b51fc175b9" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d95702a60769f36d45178b39cf398ca07dd5ef" translate="yes" xml:space="preserve">
          <source>Removes the last element of &lt;code&gt;this&lt;/code&gt; Array and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6add162e0d8702e01592775512718c5a376da61" translate="yes" xml:space="preserve">
          <source>Removes the mapping of &lt;code&gt;key&lt;/code&gt; and returns true if such a mapping existed, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2751e4c45f3e0c59810e460b60689af19437e60" translate="yes" xml:space="preserve">
          <source>Removes trailing slashes from &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649307404e6545f75821d07e304d676f5cd5a210" translate="yes" xml:space="preserve">
          <source>Removes trailing space characters of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8b3aefbf7096bc39cec5e9b4948cb03114ac71" translate="yes" xml:space="preserve">
          <source>Replace all occurrences of the String &lt;code&gt;sub&lt;/code&gt; in the String &lt;code&gt;s&lt;/code&gt; by the String &lt;code&gt;by&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e197d3d6a8170e552964a3850117c982f1f36f" translate="yes" xml:space="preserve">
          <source>Replaces the first substring of &lt;code&gt;s&lt;/code&gt; which &lt;code&gt;this&lt;/code&gt; EReg matches with &lt;code&gt;by&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4baf7604b365f06bf784f46a2a80f035879b33" translate="yes" xml:space="preserve">
          <source>Represents Dynamic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f812ee6cd90507d56190bfe692048180fb2168c8" translate="yes" xml:space="preserve">
          <source>Represents XML character data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02e78f40afdb59843e74021fa79b7ce03263fd0" translate="yes" xml:space="preserve">
          <source>Represents XML parsed character data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebda37d3653615cf8baac89965ca99ea8f5c1409" translate="yes" xml:space="preserve">
          <source>Represents a &lt;code&gt;switch&lt;/code&gt; expression with related cases and an optional &lt;code&gt;default&lt;/code&gt; case if edef != null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac639160d4a662149bf9217c676a159735231594" translate="yes" xml:space="preserve">
          <source>Represents a &lt;code&gt;switch&lt;/code&gt; expression with related cases and an optional. &lt;code&gt;default&lt;/code&gt; case if edef != null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f70f02667b93accab04ce0ee8bf21124cf04ed5" translate="yes" xml:space="preserve">
          <source>Represents a &lt;code&gt;try&lt;/code&gt;-expression with related catches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f8b33f236deaf286c106775bcde54a3c9ebd6e" translate="yes" xml:space="preserve">
          <source>Represents a &lt;code&gt;while&lt;/code&gt; expression. When &lt;code&gt;normalWhile&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; it is &lt;code&gt;while (...)&lt;/code&gt;. When &lt;code&gt;normalWhile&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; it is &lt;code&gt;do {...} while (...)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91117bf8fa732861207fee95e3fad39deb1ae7ed" translate="yes" xml:space="preserve">
          <source>Represents a AST node identical to &lt;code&gt;&lt;a href=&quot;expr#Expr&quot;&gt;Expr&lt;/a&gt;&lt;/code&gt;, but it allows constraining the type of accepted expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9667f3660d0c3c39a2f080a2a60d4fe5350240d2" translate="yes" xml:space="preserve">
          <source>Represents a catch in the AST. @&lt;a href=&quot;https://haxe.org/manual/expression-try-catch.html&quot;&gt;https://haxe.org/manual/expression-try-catch.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e959f2eb31cc4e6e2607cf31869917a354eedcc4" translate="yes" xml:space="preserve">
          <source>Represents a class field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925695cdfc5b318938b76dac1de1f8bd54a87656" translate="yes" xml:space="preserve">
          <source>Represents a class instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27333faf18afab9e0c8c75c47f753206256ee9f8" translate="yes" xml:space="preserve">
          <source>Represents a class kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90819ebd7e4a3b090b970d5b8145b713219a337" translate="yes" xml:space="preserve">
          <source>Represents a class type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d3034cf135faedf50311222fb5daf45756da6d" translate="yes" xml:space="preserve">
          <source>Represents a concrete type parameter in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3a89369bc49b42b7fa90c2e1b1221d8b155ea2" translate="yes" xml:space="preserve">
          <source>Represents a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c35774feb641d29f99cd2109cf8f71cce0c960" translate="yes" xml:space="preserve">
          <source>Represents a default import &lt;code&gt;import c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc3573b301b054bb42273fc9a856faf58bfa365" translate="yes" xml:space="preserve">
          <source>Represents a field in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e97c39942e75a86100aec106d87428d9523d5af" translate="yes" xml:space="preserve">
          <source>Represents a field kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8e86df35e46bb3a89db1b98b328b65a0f64cbf" translate="yes" xml:space="preserve">
          <source>Represents a float literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2764f4ddf30a6659db6b77749d7d58c900772513" translate="yes" xml:space="preserve">
          <source>Represents a function argument in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d010dc69d5bc7bae4fbe0d335e158e4950beb63" translate="yes" xml:space="preserve">
          <source>Represents a function field type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237277f813344958cd82f799109688414ac5d72c" translate="yes" xml:space="preserve">
          <source>Represents a function in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafee42c01428fa44ab6650fa2a8c4a4016f66b5" translate="yes" xml:space="preserve">
          <source>Represents a function in the typed AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edd9e4c775afc9ee343e3e3524917ce08a3e0de" translate="yes" xml:space="preserve">
          <source>Represents a function type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab519cde076afcd35a3d219b2bcd7fc8c5e94c1" translate="yes" xml:space="preserve">
          <source>Represents a metadata entry in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8103cfa1df529a8704288b04eaf8ff8a0fb180" translate="yes" xml:space="preserve">
          <source>Represents a module type. These are the types that can be declared in a Haxe module and which are passed to the generators (except &lt;code&gt;TTypeDecl&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb584e637e9fb2fd4a17e6dad2717557729b6b49" translate="yes" xml:space="preserve">
          <source>Represents a monomorph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3031b7bc3f17eee2bdeaa4f271f19b31989939d7" translate="yes" xml:space="preserve">
          <source>Represents a node in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb154782cc574d3a68f0ecbeb343d20f5abdd05" translate="yes" xml:space="preserve">
          <source>Represents a position in a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1bd944257662d96d5f5a27d95bdddebf20a147" translate="yes" xml:space="preserve">
          <source>Represents a property with getter and setter field type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4777595a33b71e86c652ea4095b2297f745556cf" translate="yes" xml:space="preserve">
          <source>Represents a reference to internal compiler structure. It exists to avoid expensive encoding if it is not required and to ensure that physical equality remains intact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfe9c0d4c9d95245ba2790b866a27de22067419" translate="yes" xml:space="preserve">
          <source>Represents a regular expression literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27c888737bf30bd1c9018add47be816597547d1" translate="yes" xml:space="preserve">
          <source>Represents a string literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90ec91cdee292bf8d7f119c042bb5016ca3ab98" translate="yes" xml:space="preserve">
          <source>Represents a structure kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c097e80ad261a4476ee17fb6fcffdbf478696b" translate="yes" xml:space="preserve">
          <source>Represents a structure which extends one or multiple structures defined in &lt;code&gt;tl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cbfca364c800fac53b49d28bfff6192a80e53a" translate="yes" xml:space="preserve">
          <source>Represents a switch case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534d7f3579770dc241a897c69edb67cc7fafb1f0" translate="yes" xml:space="preserve">
          <source>Represents a type definition kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b50ffaf4920ea3e08c7df95bb92ff684c280805" translate="yes" xml:space="preserve">
          <source>Represents a type definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e04f0426bf97fbe5489f6590af6160a34da38c" translate="yes" xml:space="preserve">
          <source>Represents a type parameter declaration in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91c5efd66cf678a108bcd91bf61e5b0f0b1a923" translate="yes" xml:space="preserve">
          <source>Represents a type path in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1eb7b34b42f60abd5ab3849df350d21da88302" translate="yes" xml:space="preserve">
          <source>Represents a type syntax in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff889273709a6e00f3c67dbdcf9917031a2a8a1" translate="yes" xml:space="preserve">
          <source>Represents a type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ad0722ef3569814028469e8ad4d4c6a54b540d" translate="yes" xml:space="preserve">
          <source>Represents a typed AST node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bcd4914081e15900559321d0b1f064b5a696c9" translate="yes" xml:space="preserve">
          <source>Represents a typedef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864d12d533df1d8626cc0f4327fdbaf0b50bc970" translate="yes" xml:space="preserve">
          <source>Represents a variable field type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568b03848d16ba52534a11b203fab4adc050f271" translate="yes" xml:space="preserve">
          <source>Represents a variable in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e13528e455b7cf524b56a1a5995619c6ced1f51" translate="yes" xml:space="preserve">
          <source>Represents a variable in the typed AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d76bb3ed3e0a8958400057a9cc3cfa8bed54f9" translate="yes" xml:space="preserve">
          <source>Represents an XML comment type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157831a672d6a15618a406d55eba0030d9fb26cf" translate="yes" xml:space="preserve">
          <source>Represents an XML doctype element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5ee057305a4c9321bde373abd469843452ec2e" translate="yes" xml:space="preserve">
          <source>Represents an XML document type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eba21acc41d7ed37b705c3df64cca83018362b9" translate="yes" xml:space="preserve">
          <source>Represents an XML element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbdbbe63564cf2bc180188d615868f8b82eca4e" translate="yes" xml:space="preserve">
          <source>Represents an XML processing instruction type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b161e27becd75b649c201017fd70567811a01f2f" translate="yes" xml:space="preserve">
          <source>Represents an abstract kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb5b952367e738d8b2fbd2b9ab26bcd6f448d23" translate="yes" xml:space="preserve">
          <source>Represents an abstract type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44894a906056b6cff1ce33e8f88e179322de9a95" translate="yes" xml:space="preserve">
          <source>Represents an access modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f0ec6d83113e6c339af494587eb5544b083922" translate="yes" xml:space="preserve">
          <source>Represents an alias/typedef kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25beb5afe5c4d8e3cb9dd9ff6b84e7acf722fbd8" translate="yes" xml:space="preserve">
          <source>Represents an anonymous structure type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0f4fd6785deb06d17e4106533f4c66c4d96229" translate="yes" xml:space="preserve">
          <source>Represents an enum constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01d894ffaacfe9780c132478a4a31919e347b57" translate="yes" xml:space="preserve">
          <source>Represents an enum instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9780c6380b9ba3a2401a2764442e21b199784244" translate="yes" xml:space="preserve">
          <source>Represents an enum kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb231e5e00261a33d4d6e37c867db3e20118fc2" translate="yes" xml:space="preserve">
          <source>Represents an enum type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8fd5d12e1379e2813ce36322d0502cb8d8d88d" translate="yes" xml:space="preserve">
          <source>Represents an identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1baae33ac41c48d2b24cb11d48b5ff4a2821719" translate="yes" xml:space="preserve">
          <source>Represents an integer literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22899aefe7fa0766b78ea9634948b0310c1566b6" translate="yes" xml:space="preserve">
          <source>Represents an optional type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031d00a0b98ee247203a3d9744077c3c3dedce38" translate="yes" xml:space="preserve">
          <source>Represents information for anonymous structure types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07230f6aeadccfbc6f0c5cff67892f88c90e4eff" translate="yes" xml:space="preserve">
          <source>Represents kind of a node in the typed AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa36ff05f23ceb2da461e12f123b2b8a264e644" translate="yes" xml:space="preserve">
          <source>Represents metadata in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d810fe4a30e9450341e093384a2fcbcb7994de92" translate="yes" xml:space="preserve">
          <source>Represents parentheses around a type, e.g. the &lt;code&gt;(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../../void&quot;&gt;Void&lt;/a&gt;)&lt;/code&gt; part in &lt;code&gt;(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../../void&quot;&gt;Void&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af5141713819de4d0e475b62748df0f1f582120" translate="yes" xml:space="preserve">
          <source>Represents the alias import &lt;code&gt;import c as alias&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd79304eaa4cf373ecd8d3205de767901a564a5" translate="yes" xml:space="preserve">
          <source>Represents the declaration of type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7e71f395453d47f45043dbaf0a7d0017137faf" translate="yes" xml:space="preserve">
          <source>Represents the field type in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee684db88e47f9fe1e2c935b9232d8f2bc245c0" translate="yes" xml:space="preserve">
          <source>Represents the import expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3cc5b33935a3b19cce1d02ef34d72cd03f35f4" translate="yes" xml:space="preserve">
          <source>Represents the import mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb746f0ac52726c708296d510c81289b13c7910" translate="yes" xml:space="preserve">
          <source>Represents the kind of a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840a90159001796f1f34ac816a419b09e2349a3b" translate="yes" xml:space="preserve">
          <source>Represents the kind of a node in the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1456bb008a5e1cee8c95334ba10547a6af1e102" translate="yes" xml:space="preserve">
          <source>Represents the kind of field access in the typed AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b1fea7664b496fa200cb58efb5153a75aad9ef" translate="yes" xml:space="preserve">
          <source>Represents the kind of the anonymous structure type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a69acebf64191f1d8bc3f9950f72d273ce46480" translate="yes" xml:space="preserve">
          <source>Represents the method kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5dcff08801dac3e11a1ac0f4711cd5858233c3" translate="yes" xml:space="preserve">
          <source>Represents the package of the type path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a292e74e73efc466ee708b45f125319777619a9e" translate="yes" xml:space="preserve">
          <source>Represents the ratio of the circumference of a circle to its diameter, specified by the constant, &amp;pi;. &lt;code&gt;PI&lt;/code&gt; is approximately 3.141592653589793.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1286fed6251b7cb108a62394ce07c91880cea90f" translate="yes" xml:space="preserve">
          <source>Represents the runtime rights of a type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c7ad67a01bfdbebbfcd67865a69af739b5d8a3" translate="yes" xml:space="preserve">
          <source>Represents the type path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df34c119c1ed51f8d0d28f9c34f3f134627e8a79" translate="yes" xml:space="preserve">
          <source>Represents the variable accessor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b673a66dece9dd9413ada5b991240281e5e910d" translate="yes" xml:space="preserve">
          <source>Represents the wildcard import &lt;code&gt;import *&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2213bd6f8a9222ee9309e3253336f1c876aca7" translate="yes" xml:space="preserve">
          <source>Represents typed constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9f7cd1524acd055bc8eb359ac834ed83238d13" translate="yes" xml:space="preserve">
          <source>Represents typedef extensions &lt;code&gt;&amp;gt; &lt;a href=&quot;../../iterable&quot;&gt;Iterable&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;. The array &lt;code&gt;p&lt;/code&gt; holds the type paths to the given types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">Request</target>
        </trans-unit>
        <trans-unit id="5ff583637c16eed959f3ef65f0a22b780989f70e" translate="yes" xml:space="preserve">
          <source>Resolve type &lt;code&gt;t&lt;/code&gt; and returns the corresponding &lt;code&gt;&lt;a href=&quot;../../type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1e8e8cf2e01915d8b468933ffba1cb098c70cd" translate="yes" xml:space="preserve">
          <source>Resolves a class by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c445297af82c7866ac14514eb921e83a9c2e6278" translate="yes" xml:space="preserve">
          <source>Resolves a file name &lt;code&gt;file&lt;/code&gt; based on the current class paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77a30632433525114b3a3469e2c8bde71685a71" translate="yes" xml:space="preserve">
          <source>Resolves a module identified by &lt;code&gt;name&lt;/code&gt; and returns an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; of all its contained types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b639cc32f47c189eded2a5b5659d3990c10c9ca" translate="yes" xml:space="preserve">
          <source>Resolves a type identified by &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3773e570a40e4a0baef469e10c18206b88288a75" translate="yes" xml:space="preserve">
          <source>Resolves an enum by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101d2f753cb6352b1c06faf4da918da328d4eb50" translate="yes" xml:space="preserve">
          <source>Resolves the field named &lt;code&gt;name&lt;/code&gt; on class &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701a0d5d7292ab1c37c6c40b8d1a464dec99caa3" translate="yes" xml:space="preserve">
          <source>Resolving the type may result in a compiler error which can be caught using &lt;code&gt;try ... catch&lt;/code&gt;. Resolution is performed based on the current context in which the macro is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021493f340d35ce0d744f7a3a9e53445394e86a6" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="translated">Resource</target>
        </trans-unit>
        <trans-unit id="4c40cdbc16133514e67c7c876292b5144ad35345" translate="yes" xml:space="preserve">
          <source>Resource can be used to access resources that were added through the -resource file@name command line parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1ab39b7dce7f70f7c40ba799d491e25fbbaff1" translate="yes" xml:space="preserve">
          <source>Resource.getBytes()</source>
          <target state="translated">Resource.getBytes()</target>
        </trans-unit>
        <trans-unit id="74014202e6c218734a518877b058e5adea5e0b24" translate="yes" xml:space="preserve">
          <source>Resource.getString()</source>
          <target state="translated">Resource.getString()</target>
        </trans-unit>
        <trans-unit id="6f541962c7daad9461c7f258120084d0f255d004" translate="yes" xml:space="preserve">
          <source>Resource.listNames()</source>
          <target state="translated">Resource.listNames()</target>
        </trans-unit>
        <trans-unit id="076523442e6634e0443e70f1ce0b1ea2e1e3969f" translate="yes" xml:space="preserve">
          <source>Rest&amp;lt;T&amp;gt;(&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;T&amp;gt;)</source>
          <target state="translated">Rest&amp;lt;T&amp;gt;(&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;T&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="44cc3280f4c431aced20161eeced9d2b69e05c0c" translate="yes" xml:space="preserve">
          <source>Retrieve Unix timestamp value from Date components. Takes same argument sequence as the Date constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7495b52531c041b35d1daab0b050b7b86465bb" translate="yes" xml:space="preserve">
          <source>Retrieves the resource identified by &lt;code&gt;name&lt;/code&gt; as a String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104279f32cdeb138f07b8ef54917bf04889f8f43" translate="yes" xml:space="preserve">
          <source>Retrieves the resource identified by &lt;code&gt;name&lt;/code&gt; as an instance of haxe.io.Bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89741098b4bd86b450c8b54b1183385120c16b7d" translate="yes" xml:space="preserve">
          <source>Return a random integer between 0 included and &lt;code&gt;x&lt;/code&gt; excluded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20822eab7d4f898e7652122a1a0a5076b185c0b3" translate="yes" xml:space="preserve">
          <source>Return the String representation of &lt;code&gt;this&lt;/code&gt; Serializer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2983299a77f92421d8fd0086a3cd93d87efa32" translate="yes" xml:space="preserve">
          <source>Return the call stack elements, or an empty array if not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4085c12bbafe2955bac17a135cf9f5300659fef" translate="yes" xml:space="preserve">
          <source>Return the exception stack : this is the stack elements between the place the last exception was thrown and the place it was caught, or an empty array if not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2b4dbe69b7fdf6b469f9e56a4e87480fc7266b" translate="yes" xml:space="preserve">
          <source>Return the wrapped &lt;code&gt;&lt;a href=&quot;metadata#Metadata&quot;&gt;Metadata&lt;/a&gt;&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c0fc455bc09c1d10243095fafea31bb3625853" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if the given &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; is a variable or &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; if it is a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd507751ccc583f272f66167a8f634c1e72e7218" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; is equal to &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462dbb55835c9311be6690d40aa69ef3098f83e9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; is not equal to &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6216c8cb482305d1b3118ccdbca39794cdd1adc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is exactly zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8af9333229bc2ae20ed5349103d696bdc73992" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is less than zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdbaac5d181e30b5f4bf988535c3e93e5d20c7f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; if the iteration is complete, &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec20e0bb84c1c294d59548ff4a3fd98681b37ae7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;a&lt;/code&gt; left-shifted by &lt;code&gt;b&lt;/code&gt; bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f413b76616407871aa56699f5d7fb848fe3c1b83" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;a&lt;/code&gt; minus &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59387e11c8b22d7ed69aee297cd4b16e7967c39d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;a&lt;/code&gt; right-shifted by &lt;code&gt;b&lt;/code&gt; bits in signed mode. &lt;code&gt;a&lt;/code&gt; is sign-extended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cded3e85f861121884825926ec3f16fbddb1483" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;a&lt;/code&gt; right-shifted by &lt;code&gt;b&lt;/code&gt; bits in unsigned mode. &lt;code&gt;a&lt;/code&gt; is padded with zeroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7b7fc726b37c1c8dcbb156cd67ecf8fa84c3f4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;this&lt;/code&gt; String, starting at position &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f949fd20844ccead37ad68d6896521cd80a518" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;this&lt;/code&gt; Ucs2, starting at position &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da13190688a0df7282a38e4f821aea8fbc45e43" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;null&lt;/code&gt; if the current macro is not a &lt;code&gt;@:genericBuild&lt;/code&gt; macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a55ca976d958840a6041cebc68d2d9179e796f" translate="yes" xml:space="preserve">
          <source>Returns Euler's number, raised to the power of &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e307feeb93232cdc7df13c55be488e65516d8c8e" translate="yes" xml:space="preserve">
          <source>Returns a Date from a formated string &lt;code&gt;s&lt;/code&gt;, with the following accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb10cbb606bb08893efb326f0279e3febaae7ada" translate="yes" xml:space="preserve">
          <source>Returns a Date from timestamp &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f647e6266e84c56311f41209cc68ace7c5dc7cf3" translate="yes" xml:space="preserve">
          <source>Returns a Date representing the current local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6691bf6b93b504c2549329bebb040677622d0b4" translate="yes" xml:space="preserve">
          <source>Returns a List containing those elements of &lt;code&gt;it&lt;/code&gt; for which &lt;code&gt;f&lt;/code&gt; returned true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca34d34305b1b62a1ce9d7f82b2c76fd5fa7b7cb" translate="yes" xml:space="preserve">
          <source>Returns a String representation of &lt;code&gt;path&lt;/code&gt; where the extension is &lt;code&gt;ext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4c761143d7a5fce2013369dab3e88a1d15faa9" translate="yes" xml:space="preserve">
          <source>Returns a String representation of &lt;code&gt;this&lt;/code&gt; GenericStack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a18a62a3f12762dd5330d39c7df571c8f651e3" translate="yes" xml:space="preserve">
          <source>Returns a String representation of &lt;code&gt;this&lt;/code&gt; Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f482b9fb2fd3cff21dd2a4f4b10da6293540fb81" translate="yes" xml:space="preserve">
          <source>Returns a String representation of &lt;code&gt;this&lt;/code&gt; path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbd2238d9354b7e126b171eb5e18c5cbe6e2317" translate="yes" xml:space="preserve">
          <source>Returns a String representation of the Xml node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d81a9c3d130fb69a78b218340a45fb2b5fe8828" translate="yes" xml:space="preserve">
          <source>Returns a String that can be used as a single command line argument on Unix. The input will be quoted, or escaped if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623bd424ee030d6f0c7ad19e44890d565dd9234a" translate="yes" xml:space="preserve">
          <source>Returns a String that can be used as a single command line argument on Windows. The input will be quoted, or escaped if necessary, such that the output will be parsed as a single argument using the rule specified in http://msdn.microsoft.com/en-us/library/ms880421</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6176f81e13fc607dc365eb90be92be7f787f9e4" translate="yes" xml:space="preserve">
          <source>Returns a String where all characters of &lt;code&gt;this&lt;/code&gt; String are lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b4c72ddb6e1d95edb3047e7d86b60e6af9fbe1" translate="yes" xml:space="preserve">
          <source>Returns a String where all characters of &lt;code&gt;this&lt;/code&gt; String are upper case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6ed22a4eb99e349ebaed31da8bd3dce6df17e0" translate="yes" xml:space="preserve">
          <source>Returns a Ucs2 where all characters of &lt;code&gt;this&lt;/code&gt; Ucs2 are lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a0c02aecd2d0fcba69064b3a8f6356a801a3ad" translate="yes" xml:space="preserve">
          <source>Returns a Ucs2 where all characters of &lt;code&gt;this&lt;/code&gt; Ucs2 are upper case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0766436550d96edd6990e555d209041f929e9b49" translate="yes" xml:space="preserve">
          <source>Returns a hashed MD5 signature of value &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cffff5dbab005fda4a3feccb953e2682fbf53c" translate="yes" xml:space="preserve">
          <source>Returns a list filtered with &lt;code&gt;f&lt;/code&gt;. The returned list will contain all elements for which &lt;code&gt;f(x) == &lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7781d9911a8965ea669d8b3a0133cdac42844c69" translate="yes" xml:space="preserve">
          <source>Returns a list of all constructors of enum &lt;code&gt;e&lt;/code&gt; that require no arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba754589df8a1bd24e56ce275d0466df745978a4" translate="yes" xml:space="preserve">
          <source>Returns a list of static fields of class &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d4a700a44c609eb91b77ea8b1c8208b79db0b2" translate="yes" xml:space="preserve">
          <source>Returns a list of the constructor arguments of enum instance &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125e9c00c85f3600bd140890897dff7eaefa557b" translate="yes" xml:space="preserve">
          <source>Returns a list of the instance fields of class &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ce0c3539bf3a63587cf1ec679cca55055a0721" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all constructors of enum &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9092074f35707ed6b4854c504946a7a091a05d" translate="yes" xml:space="preserve">
          <source>Returns a map of all compiler directives that have been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f484527568e2c39659603a0bcf220588eaafd4" translate="yes" xml:space="preserve">
          <source>Returns a map of all registered resources for this compilation unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5aef7c02f0422c45d6877ed8823be12b6bd9e57" translate="yes" xml:space="preserve">
          <source>Returns a map of local variables accessible in the context the macro was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd59e4d9ff15d03a80af5bef3dbf93f721ee6ba4" translate="yes" xml:space="preserve">
          <source>Returns a new Array by appending the elements of &lt;code&gt;a&lt;/code&gt; to the elements of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7872c98afe07e5e0f9560f9f35043ccd77a251" translate="yes" xml:space="preserve">
          <source>Returns a new List containing all elements of Iterable &lt;code&gt;a&lt;/code&gt; followed by all elements of Iterable &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98eb81c32b63448386c53ceac00a837832177c3" translate="yes" xml:space="preserve">
          <source>Returns a new list where all elements have been converted by the function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bae50f78c1af841fc82d2b937aab39fbd32d97" translate="yes" xml:space="preserve">
          <source>Returns a pseudo-random number which is greater than or equal to 0.0, and less than 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e179f44e484886dcf0afe402cabaa5537bd736" translate="yes" xml:space="preserve">
          <source>Returns a representation of the stack as a printable string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cb3012d719c738aba992206d09f04fc97595ae" translate="yes" xml:space="preserve">
          <source>Returns a shallow copy of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b95a3127ed5b02c0b35c9169b39451efa9d3512" translate="yes" xml:space="preserve">
          <source>Returns a shallow copy of &lt;code&gt;this&lt;/code&gt; Vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd735026ea4de04fc8236276b130dc941d25148c" translate="yes" xml:space="preserve">
          <source>Returns a signed decimal &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; representation of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d41d75674b91297d4616a02a1392128da7c9355" translate="yes" xml:space="preserve">
          <source>Returns a specified base &lt;code&gt;v&lt;/code&gt; raised to the specified power &lt;code&gt;exp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3ba090eba947859f0e1e10c9f2bd0f609caf57" translate="yes" xml:space="preserve">
          <source>Returns a string representation of &lt;code&gt;this&lt;/code&gt; Array, with &lt;code&gt;sep&lt;/code&gt; separating each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de10c4b64ba102f4450afcf37505c7b5bb9f01c" translate="yes" xml:space="preserve">
          <source>Returns a string representation of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da17eb95cc2f1bbedc97e60bfc9e710598b549d" translate="yes" xml:space="preserve">
          <source>Returns a string representation of &lt;code&gt;this&lt;/code&gt; Date, by using the standard format [YYYY-MM-DD HH:MM:SS]. See &lt;code&gt;&lt;a href=&quot;datetools#format&quot;&gt;DateTools.format&lt;/a&gt;&lt;/code&gt; for other formating rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32281f38da11eb2ff9a2a4f3fa3d3af6da7245e" translate="yes" xml:space="preserve">
          <source>Returns a string representation of &lt;code&gt;this&lt;/code&gt; List, with &lt;code&gt;sep&lt;/code&gt; separating each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148f4c3c1b751f36964e6c22e289c55e06f1df6e" translate="yes" xml:space="preserve">
          <source>Returns a string representation of &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a2949fb8f6f05bdd5f8fad656393b0a36f31d6" translate="yes" xml:space="preserve">
          <source>Returns a string representation of &lt;code&gt;this&lt;/code&gt; Vector, with &lt;code&gt;sep&lt;/code&gt; separating each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc20f242c1dd4afb2a546e01437bbb15200c5dfd" translate="yes" xml:space="preserve">
          <source>Returns a syntax-level expression corresponding to typed expression &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855c50283128155baa8759e2ef2ab6acee2d761d" translate="yes" xml:space="preserve">
          <source>Returns a syntax-level type corresponding to Type &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7035f4d26a9a0b5ddf0dfa0466ecbc46b6d8c63a" translate="yes" xml:space="preserve">
          <source>Returns a timestamp, in seconds with fractions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def8b681dc933ba1cf9354510d5a41efcee087c3" translate="yes" xml:space="preserve">
          <source>Returns a type corresponding to &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370d5240e1389424bcb381eace1e47ba95b7d01d" translate="yes" xml:space="preserve">
          <source>Returns a value by specified &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533faf0dd59955cd65e837f85577558ca9e3dfdf" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; of all imports in the context the macro was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4e331355c71c098c215af3da738c405e10fb49" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; of classes which are available for &lt;code&gt;using&lt;/code&gt; usage in the context the macro was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc1c79ec5076f0e8792790800792e29a40974fe" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; of current class paths in the order of their declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8713034335e04fc3244c19efd64d72428378d4db" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; of fields of the class which is to be built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb0ce8a4691d2605b16ca18dba5aa2f5ae03e75" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; on all the attribute names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17732cf4c92f1b51e3bfce3cc23c287973d48164" translate="yes" xml:space="preserve">
          <source>Returns an Array containing those elements of &lt;code&gt;this&lt;/code&gt; for which &lt;code&gt;f&lt;/code&gt; returned true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c267d9e173dbc616351f9cb267cfaa0559a222" translate="yes" xml:space="preserve">
          <source>Returns an Int with the value of the Int64 &lt;code&gt;x&lt;/code&gt;. Throws an exception if &lt;code&gt;x&lt;/code&gt; cannot be represented in 32 bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77c7c928016ec7e7183be8b32953239f9a181a4" translate="yes" xml:space="preserve">
          <source>Returns an Int64 representing the bytes representation of the double precision IEEE float value. WARNING : for performance reason, the same Int64 value might be reused every time. Copy its low/high values before calling again. We still ensure that this is safe to use in a multithread environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9bf688a04c4da3e4e645ccddfdacb7f011f8c8" translate="yes" xml:space="preserve">
          <source>Returns an Int64 with the value of the Int &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; is sign-extended to fill 64 bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f89670f8d717301f941ea60d6ef631ceabcd04" translate="yes" xml:space="preserve">
          <source>Returns an Iterator over the keys of &lt;code&gt;this&lt;/code&gt; Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd37bc43d927461ef1ea705550c1cce5105659f7" translate="yes" xml:space="preserve">
          <source>Returns an Iterator over the values of &lt;code&gt;this&lt;/code&gt; Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae456b19e6b950d736c91f55b6a5ad616dfe5d73" translate="yes" xml:space="preserve">
          <source>Returns an array of &lt;code&gt;keys&lt;/code&gt; in a structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8eff0175f5cad165685dd79bfaaa945f2b55bec" translate="yes" xml:space="preserve">
          <source>Returns an displayable representation of the hashtable content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54be47b3f60f6c194abf6c50d022a40a6d006ec2" translate="yes" xml:space="preserve">
          <source>Returns an iterator of all child nodes which are Elements with the given nodeName. Only works if the current node is an Element or a Document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7e247ea7ee4ee547c874315ee4341efcbcfcbd" translate="yes" xml:space="preserve">
          <source>Returns an iterator of all child nodes which are Elements. Only works if the current node is an Element or a Document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613826c84548a0be1e2e3bcd8a1e77ee72c93116" translate="yes" xml:space="preserve">
          <source>Returns an iterator of all child nodes. Only works if the current node is an Element or a Document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f179b4cf06ff1d7dca137f049507601df7edf52" translate="yes" xml:space="preserve">
          <source>Returns an iterator of all keys in the hashtable. Implementation detail: Do not set() any new value while iterating, as it may cause a resize, which will break iteration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ef6da3fd614e3ac59bc52d46d47626a1d8ec0c" translate="yes" xml:space="preserve">
          <source>Returns an iterator of all values in the hashtable. Implementation detail: Do not set() any new value while iterating, as it may cause a resize, which will break iteration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a967fc6cb2aeaa6486d2a6c4485ca75c6d59f2d6" translate="yes" xml:space="preserve">
          <source>Returns an iterator of the Array values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53a9c47c53ab2c362c532fac7b816cdfa7ccde3" translate="yes" xml:space="preserve">
          <source>Returns an iterator on the elements of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd2b89746c9c97116a355082419c9602dc62682" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the elements of &lt;code&gt;this&lt;/code&gt; GenericStack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32fbda2f5e1c30f73f3821e74ff11b63c681f8b" translate="yes" xml:space="preserve">
          <source>Returns either a copy or a reference of the current bytes. Once called, the buffer can no longer be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7db69dfcde63e6e8fa26a61cf99b69f40363e9" translate="yes" xml:space="preserve">
          <source>Returns position of the first occurrence of &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;this&lt;/code&gt; Array, searching front to back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8365c29493e96a4bd6ac87bcbb6c15aa505735" translate="yes" xml:space="preserve">
          <source>Returns position of the last occurrence of &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;this&lt;/code&gt; Array, searching back to front.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a61d30eaba102d5d7127ca6980f6e971a07b254" translate="yes" xml:space="preserve">
          <source>Returns the 16 bit unsigned integer at given position (in low endian encoding).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfca5a92690383f2991b71185af071e4ba9599d" translate="yes" xml:space="preserve">
          <source>Returns the 32 bit integer at given position (in low endian encoding).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659432a7ea617664a6083c4447b15d9353e3ee23" translate="yes" xml:space="preserve">
          <source>Returns the 64 bit integer at given position (in low endian encoding).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039140e524e01ec96f0716aa6e632e61251aa1f1" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;bytes#Bytes&quot;&gt;Bytes&lt;/a&gt;&lt;/code&gt; of this output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45df57e0a220e830b6d5e8b55df04cdef09c6102" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;complextype#ComplexType&quot;&gt;ComplexType&lt;/a&gt;&lt;/code&gt; corresponding to the given &lt;code&gt;&lt;a href=&quot;../../type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt;&lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec32306a00c92195841727ce72e62a991a3cb1ab" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;ctype#Classdef&quot;&gt;haxe.rtti.CType.Classdef&lt;/a&gt;&lt;/code&gt; corresponding to class &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18871d0cf626279055d5d77b792d8ab332224f59" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; where the caller of &lt;code&gt;here&lt;/code&gt; is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1caaff9a370e42f684f29454c9a60871cea025b4" translate="yes" xml:space="preserve">
          <source>Returns the IEEE double precision value at given position (in low endian encoding). Result is unspecified if reading outside of the bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd04f95eda3b89a70025c08eea091bba982bb5c9" translate="yes" xml:space="preserve">
          <source>Returns the IEEE single precision value at given position (in low endian encoding). Result is unspecified if reading outside of the bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d5b241a1a2125ba14ba283fae22f106a741c54" translate="yes" xml:space="preserve">
          <source>Returns the String corresponding to the character code &lt;code&gt;code&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f8b98902d29fccc3baf4d274681dc3890b3ad9" translate="yes" xml:space="preserve">
          <source>Returns the String itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c49b6b547668014654f396b0f698bb5c481f852" translate="yes" xml:space="preserve">
          <source>Returns the String representation of &lt;code&gt;path&lt;/code&gt; without the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45280ae622c38e14ff1bf761e8350e8aa415e8a" translate="yes" xml:space="preserve">
          <source>Returns the String representation of &lt;code&gt;path&lt;/code&gt; without the file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0007e2373ff933aae4133de2ac424cf9d36eeddf" translate="yes" xml:space="preserve">
          <source>Returns the Ucs2 corresponding to the character code &lt;code&gt;code&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b889f754e1bba5b984afa538b76ab9b232a2a84c" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ab2e8e0403c1c13faa7f776e45d8bfaf86fe8d" translate="yes" xml:space="preserve">
          <source>Returns the actual length of read data that can be smaller than &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42fc6c2f83d80b0c8a73e358b29f8a653770245" translate="yes" xml:space="preserve">
          <source>Returns the actual length of written data that can differ from &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4617569d8f14faae2734f7aaa39f921fdc3fe50" translate="yes" xml:space="preserve">
          <source>Returns the bitwise AND of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5680bbab3ab0581ead56377d77c75a2b2e7dbb99" translate="yes" xml:space="preserve">
          <source>Returns the bitwise OR of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4ad46bd7e962b8610ceff3ad87484c78e2ff2d" translate="yes" xml:space="preserve">
          <source>Returns the bitwise XOR of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bb4290fd9020b99f076e68d929b1474151436d" translate="yes" xml:space="preserve">
          <source>Returns the buffer converted to a String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9bc8ba17e9c77744185e7f32ab0779b17c12de" translate="yes" xml:space="preserve">
          <source>Returns the call arguments that lead to the invocation of the current &lt;code&gt;@:genericBuild&lt;/code&gt; macro, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d373620a88809facb4132ac688441ab8577a19" translate="yes" xml:space="preserve">
          <source>Returns the character at position &lt;code&gt;index&lt;/code&gt; of &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f965bb00938ae9690ce483937a12c8a17071e26" translate="yes" xml:space="preserve">
          <source>Returns the character at position &lt;code&gt;index&lt;/code&gt; of &lt;code&gt;this&lt;/code&gt; Ucs2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e35e4aee114912458faffbd63853af739f852c" translate="yes" xml:space="preserve">
          <source>Returns the character code at position &lt;code&gt;index&lt;/code&gt; of &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cfed348a4d700211a8c3f50e526af573a4a31b" translate="yes" xml:space="preserve">
          <source>Returns the character code at position &lt;code&gt;index&lt;/code&gt; of &lt;code&gt;this&lt;/code&gt; Ucs2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465d6162a248ce110b7f2105300e70925a1b5fec" translate="yes" xml:space="preserve">
          <source>Returns the character code at position &lt;code&gt;index&lt;/code&gt; of String &lt;code&gt;s&lt;/code&gt;, or an end-of-file indicator at if &lt;code&gt;position&lt;/code&gt; equals &lt;code&gt;s.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3359d276e0f317e8418c46e914fc4c381167fdd" translate="yes" xml:space="preserve">
          <source>Returns the class of &lt;code&gt;o&lt;/code&gt;, if &lt;code&gt;o&lt;/code&gt; is a class instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15782690ad53c84ff15f3e8a42f735c2093499e" translate="yes" xml:space="preserve">
          <source>Returns the constructor name of enum instance &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504c025e78dc58bd321bc94c16b2fcd1a80f4ddd" translate="yes" xml:space="preserve">
          <source>Returns the content of &lt;code&gt;this&lt;/code&gt; StringBuf as String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4022c267a00ad050141f884da8d3920f53abf5bd" translate="yes" xml:space="preserve">
          <source>Returns the current class in which the macro was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc939de37686afbeb109074ce4c1c57067b81436" translate="yes" xml:space="preserve">
          <source>Returns the current item of the &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; and advances to the next one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1e4558a465b78a11f46718c2c0736c2bd60e01" translate="yes" xml:space="preserve">
          <source>Returns the current mapping of &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4709939c9af20355f7f6f7a52180521c2f496906" translate="yes" xml:space="preserve">
          <source>Returns the current module path in/on which the macro was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3226000d0faba181fdb7559d969ee0c3a722ae8" translate="yes" xml:space="preserve">
          <source>Returns the current page GET and POST parameters (only GET parameters for Javascript)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d56da0a18188137814cf337dd01b2a69b128fa" translate="yes" xml:space="preserve">
          <source>Returns the current type in/on which the macro was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56eabddb0b91b6f55a73e47d9885514657770a9f" translate="yes" xml:space="preserve">
          <source>Returns the day of &lt;code&gt;this&lt;/code&gt; Date (1-31 range).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c04d073122ff86f7579722011ff0c29efd642f" translate="yes" xml:space="preserve">
          <source>Returns the day of the week of &lt;code&gt;this&lt;/code&gt; Date (0-6 range) where &lt;code&gt;0&lt;/code&gt; is Sunday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9d107095c1d85a29b4902606c2074c27f2fd72" translate="yes" xml:space="preserve">
          <source>Returns the directory of &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ce8ee9c42ac822a91002b3ce670b23e6f2aadc" translate="yes" xml:space="preserve">
          <source>Returns the enum of enum instance &lt;code&gt;o&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9cd0e4c76649fd9e5d47934b61ca32cd6cf169" translate="yes" xml:space="preserve">
          <source>Returns the extension of &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d13e784be43efd766c6f771ffcc0b4332e724c4" translate="yes" xml:space="preserve">
          <source>Returns the fields of structure &lt;code&gt;o&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1523a5cf9f73c9d96054ce2e6c7df1be01d74818" translate="yes" xml:space="preserve">
          <source>Returns the first child node which is an Element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b337cb74eadbc4d15bd2e1eee888b754457334" translate="yes" xml:space="preserve">
          <source>Returns the first child node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944c6cbf3f3129d77a2d764c35d4a83250495654" translate="yes" xml:space="preserve">
          <source>Returns the first element of &lt;code&gt;it&lt;/code&gt; for which &lt;code&gt;f&lt;/code&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30c0e72b3adcbe1d5602aac8b6c40b5de01670b" translate="yes" xml:space="preserve">
          <source>Returns the first element of &lt;code&gt;this&lt;/code&gt; List, or null if no elements exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7537c5ee013f7e7df800651aba7a567867c1b985" translate="yes" xml:space="preserve">
          <source>Returns the full year of &lt;code&gt;this&lt;/code&gt; Date (4-digits).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2b04774845d3102aec3b3b2ab391a7d0a76f18" translate="yes" xml:space="preserve">
          <source>Returns the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6730ffa4befc8d714fbc05038874aefed24b28" translate="yes" xml:space="preserve">
          <source>Returns the greater of values &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979412c72b22fac76a89816a1b0934d10b1dcd67" translate="yes" xml:space="preserve">
          <source>Returns the high 32-bit word of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791848806ab591bb01f364deb280f8b8240b23cd" translate="yes" xml:space="preserve">
          <source>Returns the hours of &lt;code&gt;this&lt;/code&gt; Date (0-23 range).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044aa6a8f6f06a84aa5f5b1bee9dc20234132523" translate="yes" xml:space="preserve">
          <source>Returns the index of enum instance &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee49498d89ad61db71d326b063d488822056f52b" translate="yes" xml:space="preserve">
          <source>Returns the index of the first element &lt;code&gt;v&lt;/code&gt; within Iterable &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1bdcbcd8cf5a282fa70a1501afba9485b7a3c3" translate="yes" xml:space="preserve">
          <source>Returns the information stored in &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d70d2925be8ade935477ed217316a0daa3b84b4" translate="yes" xml:space="preserve">
          <source>Returns the largest integer value that is not greater than &lt;code&gt;v&lt;/code&gt;, as a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda19cef7998d8a8cdb19d5442f994f062b85941" translate="yes" xml:space="preserve">
          <source>Returns the largest integer value that is not greater than &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7f642659e97b9b5573004a6944b71e21c6e6a1" translate="yes" xml:space="preserve">
          <source>Returns the last element of &lt;code&gt;this&lt;/code&gt; List, or null if no elements exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0976bec4c33d407b1a217ba8029bd67afddac67f" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;this&lt;/code&gt; Vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ccbdb5195cf1b041ec720d4b1cc6b040883b69" translate="yes" xml:space="preserve">
          <source>Returns the local server host name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27deab1440566e8d76f4a59f903ddff76ec808a" translate="yes" xml:space="preserve">
          <source>Returns the low 32-bit word of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d352962f664cc8a11bca0650fbadbeeca741f374" translate="yes" xml:space="preserve">
          <source>Returns the matched sub-group &lt;code&gt;n&lt;/code&gt; of &lt;code&gt;this&lt;/code&gt; EReg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7a67489216849128ab85402bd30a7a68a877af" translate="yes" xml:space="preserve">
          <source>Returns the metadata that were declared for the given class fields or enum constructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db429a810927413d3057b3919f4b15a5fbd6f79f" translate="yes" xml:space="preserve">
          <source>Returns the metadata that were declared for the given class static fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcc1af194280749cd93108b5bd7ffc227c892bf" translate="yes" xml:space="preserve">
          <source>Returns the metadata that were declared for the given type (class or enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499aac6e83395a979823a436939612e5629d5dca" translate="yes" xml:space="preserve">
          <source>Returns the minutes of &lt;code&gt;this&lt;/code&gt; Date (0-59 range).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e11efa0c8779b555f31ee934a9776f93f2c2f16" translate="yes" xml:space="preserve">
          <source>Returns the modulus of &lt;code&gt;a&lt;/code&gt; divided by &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8874a7f83e9288222dd286e46badb149a6f903" translate="yes" xml:space="preserve">
          <source>Returns the month of &lt;code&gt;this&lt;/code&gt; Date (0-11 range).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea104bd1ca0e097fea2680921bcd2003b6989b4b" translate="yes" xml:space="preserve">
          <source>Returns the name of class &lt;code&gt;c&lt;/code&gt;, including its path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975128ad04413a2c1331fcc2fa314b3e8a9a3334" translate="yes" xml:space="preserve">
          <source>Returns the name of enum &lt;code&gt;e&lt;/code&gt;, including its path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873d9de1c96edae573c43b223334219aaf1409cf" translate="yes" xml:space="preserve">
          <source>Returns the name of the method from which the macro was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3d653811c0934058e5d2f6690d87725295378c" translate="yes" xml:space="preserve">
          <source>Returns the native underlying String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207cbe1adcf67e6f745d2dd94e0529fada5ad8b3" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm of &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712e5493544ea5c0bf3a43cd06621f74ab3ca688" translate="yes" xml:space="preserve">
          <source>Returns the negative of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b626031edbce964ab73dac1a3559d501cc99898" translate="yes" xml:space="preserve">
          <source>Returns the node name of an Element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df8b1580de84582b39cda8a46c87a0f5f694d58" translate="yes" xml:space="preserve">
          <source>Returns the node value. Only works if the Xml node is not an Element or a Document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089334cc48d19cdf10e835c9d63b95caa0ed6952" translate="yes" xml:space="preserve">
          <source>Returns the number of UTF8 chars of the String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669a096e6338d7f6f2b8c0341f09f86f98d7f513" translate="yes" xml:space="preserve">
          <source>Returns the number of days in the month of Date &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69791f755a5ce68862f5fb93db1dbaa57f977694" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in &lt;code&gt;it&lt;/code&gt; for which &lt;code&gt;pred&lt;/code&gt; is true, or the total number of elements in &lt;code&gt;it&lt;/code&gt; if &lt;code&gt;pred&lt;/code&gt; is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36010b2259febc76e7e575b57b69fc6e4431b88a" translate="yes" xml:space="preserve">
          <source>Returns the original request URL (before any server internal redirections)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eee91868fe4f085eeb062923887f8f2dc3fa48d" translate="yes" xml:space="preserve">
          <source>Returns the parent object in the Xml hierarchy. The parent can be &lt;code&gt;null&lt;/code&gt;, an Element or a Document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140461b4a1d6b99631831bc2b519c4d54f5e2ec4" translate="yes" xml:space="preserve">
          <source>Returns the part of &lt;code&gt;this&lt;/code&gt; String from &lt;code&gt;startIndex&lt;/code&gt; to but not including &lt;code&gt;endIndex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a41b2afd6bb00e3b251edab6dcb8c0c00fef978" translate="yes" xml:space="preserve">
          <source>Returns the part of &lt;code&gt;this&lt;/code&gt; Ucs2 from &lt;code&gt;startIndex&lt;/code&gt; to &lt;code&gt;endIndex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1495ae5e9657bd653d7d425a40680be2fa2f1827" translate="yes" xml:space="preserve">
          <source>Returns the part to the left of the last matched substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6991f10baf0a016ca2a5bb004ca835f2ec5e5c" translate="yes" xml:space="preserve">
          <source>Returns the part to the right of the last matched substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257cccc40c09c3f932c27af520bd2fe8b7257c81" translate="yes" xml:space="preserve">
          <source>Returns the position and length of the last matched substring, within the String which was last used as argument to &lt;code&gt;this.&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;this.&lt;a href=&quot;#matchSub&quot;&gt;matchSub&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b034ff71ff67ccd581222a7bc4677659fa3d5a" translate="yes" xml:space="preserve">
          <source>Returns the position at which the macro was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2bcaf835b9f09fa5478bd5dc1e6460adb7a2b3" translate="yes" xml:space="preserve">
          <source>Returns the position of the leftmost occurrence of &lt;code&gt;str&lt;/code&gt; within &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b178828bbeb84178e6d1b453f9a8cf0068b8f8e9" translate="yes" xml:space="preserve">
          <source>Returns the position of the leftmost occurrence of &lt;code&gt;str&lt;/code&gt; within &lt;code&gt;this&lt;/code&gt; Ucs2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c531888ec5cfb8a3b083f4cb82e0ecf03a12a4f8" translate="yes" xml:space="preserve">
          <source>Returns the position of the rightmost occurrence of &lt;code&gt;str&lt;/code&gt; within &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed7a24b3e1d83c6fa8beb6eb6386a4866493d17" translate="yes" xml:space="preserve">
          <source>Returns the position of the rightmost occurrence of &lt;code&gt;str&lt;/code&gt; within &lt;code&gt;this&lt;/code&gt; Ucs2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abce1b9490acd1995d6bd88684101cfb180d14f" translate="yes" xml:space="preserve">
          <source>Returns the product of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c60de82539862ac8f2e5f2a70b62034361bd144" translate="yes" xml:space="preserve">
          <source>Returns the quotient of &lt;code&gt;a&lt;/code&gt; divided by &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea1d77ad1c3faf56501bd94599531159477431d" translate="yes" xml:space="preserve">
          <source>Returns the result of adding timestamp &lt;code&gt;t&lt;/code&gt; to Date &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f34cd2d3a43a3bcfd6e951a34afdacc8f8b486" translate="yes" xml:space="preserve">
          <source>Returns the runtime type of value &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed791d0e05830f9503c138af676aadbcef36c947" translate="yes" xml:space="preserve">
          <source>Returns the seconds of &lt;code&gt;this&lt;/code&gt; Date (0-59 range).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a94654c7673d811dbbabdc375ebf4b27fb8116" translate="yes" xml:space="preserve">
          <source>Returns the smaller of values &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e32bba140901d706c6ef92ea9df2bccd639e64" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer value that is not less than &lt;code&gt;v&lt;/code&gt;, as a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bedb226abc498abe173071b14f0b55b65451e4" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer value that is not less than &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1e697801e14d741efef69f6eec3d74391e6415" translate="yes" xml:space="preserve">
          <source>Returns the square root of &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4255d77a6262e202861d96a8b6f65c24df7922b" translate="yes" xml:space="preserve">
          <source>Returns the sum of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a321eb47734728fbc5ef320187ef20eec11a0db" translate="yes" xml:space="preserve">
          <source>Returns the super-class of class &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c61847f33d2969ec1c5035d02f8de9f0cf77cbc" translate="yes" xml:space="preserve">
          <source>Returns the timestamp (in milliseconds) of the date. It might only have a per-second precision depending on the platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9adfc3a318aa05b8bbf02ee4fc365bfec408d9" translate="yes" xml:space="preserve">
          <source>Returns the topmost stack element and removes it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6f03e732547e98a619e11c27c7a4a6a465232c" translate="yes" xml:space="preserve">
          <source>Returns the topmost stack element without removing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a195869ec14906069754cb820602b9e20caa6344" translate="yes" xml:space="preserve">
          <source>Returns the trigonometric arc cosine of the specified angle &lt;code&gt;v&lt;/code&gt;, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3438b7394dc34eb745144311b56b21f81765f113" translate="yes" xml:space="preserve">
          <source>Returns the trigonometric arc of the specified angle &lt;code&gt;v&lt;/code&gt;, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07951b3487663b48c07146cab3e852bcbdf9747" translate="yes" xml:space="preserve">
          <source>Returns the trigonometric arc tangent of the specified angle &lt;code&gt;v&lt;/code&gt;, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f477630f08311dcb3e6b82e2303460e59e0a2dd5" translate="yes" xml:space="preserve">
          <source>Returns the trigonometric arc tangent whose tangent is the quotient of two specified numbers, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272716fb367106896199de3390f685dc039e0a03" translate="yes" xml:space="preserve">
          <source>Returns the trigonometric cosine of the specified angle &lt;code&gt;v&lt;/code&gt;, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cddc034335810e9db244b3011f4082b368e5508" translate="yes" xml:space="preserve">
          <source>Returns the trigonometric sine of the specified angle &lt;code&gt;v&lt;/code&gt;, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6dda0475a9e6fbea3cf0c64cc1c2d0674cabd0" translate="yes" xml:space="preserve">
          <source>Returns the trigonometric tangent of the specified angle &lt;code&gt;v&lt;/code&gt;, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540a0396bb9e9451e8d77521341b760cd43323a5" translate="yes" xml:space="preserve">
          <source>Returns the type of the Xml Node. This should be used before accessing other functions since some might raise an exception if the node type is not correct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d872468efa82eb184a206662d2fac13c5f280aea" translate="yes" xml:space="preserve">
          <source>Returns the type which is expected at the place the macro is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e14292915b1e483f259d206899729e9a25da52" translate="yes" xml:space="preserve">
          <source>Returns the typed expression of the class field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781f24711fa236facac31910c88c2e944040e49f" translate="yes" xml:space="preserve">
          <source>Returns the value &lt;code&gt;e&lt;/code&gt; represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b5754aac8477a1e3e258fbebb4a6c765962c5b" translate="yes" xml:space="preserve">
          <source>Returns the value &lt;code&gt;key&lt;/code&gt; is bound to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbd8bfa81d61f23d8cc9dffe681c37b90f7a638" translate="yes" xml:space="preserve">
          <source>Returns the value at index &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa9b8098babfec6e1a67325e156aad332ed1b2b" translate="yes" xml:space="preserve">
          <source>Returns the value defined for compiler directive &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c956eaa729c0cb6ddc1280af062e08eff1b95eaa" translate="yes" xml:space="preserve">
          <source>Returns the value of a compiler flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1632cef38baad876bd178285b6c229a0dc27954" translate="yes" xml:space="preserve">
          <source>Returns the value of the field named &lt;code&gt;field&lt;/code&gt; on object &lt;code&gt;o&lt;/code&gt;, taking property getter functions into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec88cd845fc32593370ac33e5cd902243cfa214" translate="yes" xml:space="preserve">
          <source>Returns the value of the field named &lt;code&gt;field&lt;/code&gt; on object &lt;code&gt;o&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d23caa52468f1cf13afccf59e5e64f9da65315" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;f&lt;/code&gt; is a function, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc31f8aa2d87843c1896ddae8b52835a94849d10" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;key&lt;/code&gt; has a mapping, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ef3a23f0c2406cfc8b15e6b7447c435ce53125" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt; unify, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c464d2fee5782355c5fbd94893a8299425e5baa" translate="yes" xml:space="preserve">
          <source>Returns true if the iterator has other items, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cab1290b4702a0a2e0f4632fab3aab9b6cae02" translate="yes" xml:space="preserve">
          <source>Returns true if the path is an absolute path, and false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29bc69083e123912eee2a083c0468bff217cd52" translate="yes" xml:space="preserve">
          <source>Returns true, if &lt;code&gt;key&lt;/code&gt; was present in structure, or false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb0687f6cb91bbb7ce2a9f92a46cd55e4234600" translate="yes" xml:space="preserve">
          <source>Returns whether the value &lt;code&gt;val&lt;/code&gt; is of type &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;haxe.Int64&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="e9bd8f38514dfe0d7222be2eeb1691098852c0a7" translate="yes" xml:space="preserve">
          <source>Reverse the order of elements of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db94ff6b8e95a22f9f280697b732e93363d52a25" translate="yes" xml:space="preserve">
          <source>Rights</source>
          <target state="translated">Rights</target>
        </trans-unit>
        <trans-unit id="d8e9fc7a40eccbd0c4f688a28885619219a2c291" translate="yes" xml:space="preserve">
          <source>Rounds &lt;code&gt;v&lt;/code&gt; to the nearest integer value, as a Float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1370f9b3cbef9d7c3c67eb628674387d61ebac" translate="yes" xml:space="preserve">
          <source>Rounds &lt;code&gt;v&lt;/code&gt; to the nearest integer value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75631d79c56873b227719cfc32c68aed1747aa77" translate="yes" xml:space="preserve">
          <source>Rtti</source>
          <target state="translated">Rtti</target>
        </trans-unit>
        <trans-unit id="67f7b1b858b7d0d4a0f1adf00c2414e41975d294" translate="yes" xml:space="preserve">
          <source>Rtti is a helper class which supplements the &lt;code&gt;@:rtti&lt;/code&gt; metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e1790e29a5541b6d02348fc3f45f18445709f4" translate="yes" xml:space="preserve">
          <source>Rule</source>
          <target state="translated">Rule</target>
        </trans-unit>
        <trans-unit id="b93de5736fbddde8015b54c206407145c0ba63de" translate="yes" xml:space="preserve">
          <source>Runs the unit tests and prints the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f07f69662fb949403cf67cd8c7d15668397a19" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;sort&lt;/code&gt; but on single linked list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544f8d9602f1128011b7ca8f8a247ec02c6493a4" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; for documentation details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaeb737dae93e68d8f5e5067ae50c4041bbc215a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#exists&quot;&gt;Map.exists&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0923bf1e7baa5a2ea29d5d35515a394714465970" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#get&quot;&gt;Map.get&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44d05c8c2b0f3f836f29b61a7d6dc71ff6785e1" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#iterator&quot;&gt;Map.iterator&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a95f65afe199277830a4fd1508e4fd4a0937cd7" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#keys&quot;&gt;Map.keys&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e58c025e885e3ff91de9d7071ae43660af2ae59" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#remove&quot;&gt;Map.remove&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5919e52a8dfdcc94f6807ac71b0224c15e35ef" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#set&quot;&gt;Map.set&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4a35deb83bef16131537f009b9c226961162e4" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#toString&quot;&gt;Map.toString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb1ca1c8095e68e59b59e7a529d9036e002fc29" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;exprtools#iter&quot;&gt;haxe.macro.ExprTools.iter&lt;/a&gt;&lt;/code&gt; for details on iterating expressions in general. This function works the same way, but with a different data structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a29961367aec34686a2f900162de8f678f04e5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;exprtools#map&quot;&gt;haxe.macro.ExprTools.map&lt;/a&gt;&lt;/code&gt; for details on expression mapping in general. This function works the same way, but with a different data structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48a27daa7903a518277b11aa6e6abd345c7a034" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; for the Haxe Reflection API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9dd29dd1d25b3ab0e4be3c7a42dad178762271" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;typetools#follow&quot;&gt;haxe.macro.TypeTools.follow&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f974d45c26d48e2e5862f01746ed32a0af4620" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;typetools#followWithAbstracts&quot;&gt;haxe.macro.TypeTools.followWithAbstracts&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4aea6f64693fb2fadefe2e4710e1d793c3fc4c3" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;typetools#toComplexType&quot;&gt;haxe.macro.TypeTools.toComplexType&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6277542f110280657fa548b03a3b8462079278" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;DEFAULT_RESOLVER&lt;/code&gt; for more information on type resolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1585ad345b3a213d2ab8632717cc9801580018" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;readFullBytes&lt;/code&gt; that tries to read the exact amount of specified bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de577dbf81d3b7446c18920b9f677747a8fd9ac6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;writeFullBytes&lt;/code&gt; that tries to write the exact amount of specified bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0ef69cc25fa14f79654ba57ea5df04910bc466" translate="yes" xml:space="preserve">
          <source>See USE_CACHE for a complete description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdbce152fe8cfdbb0636eb6ea283e8853252904" translate="yes" xml:space="preserve">
          <source>See USE_ENUM_INDEX for a complete description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497dea2253a9763272c1d3ca91776ece14a847f1" translate="yes" xml:space="preserve">
          <source>See:</source>
          <target state="translated">See:</target>
        </trans-unit>
        <trans-unit id="ddecf6c27d9e9b00891ab1556c3da8f2e5917668" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;this&lt;/code&gt; Http request to the Url specified by &lt;code&gt;this.&lt;a href=&quot;#url&quot;&gt;url&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418b43758063220f4630e269ee64079d485cace5" translate="yes" xml:space="preserve">
          <source>Separate a date-time into several components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef67beca4c63b5c4848eac728905cca68816ec3" translate="yes" xml:space="preserve">
          <source>Serialization is guaranteed to work for all haxe-defined classes, but may or may not work for instances of external/native classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bee72c1fd17c82da45c231f035a209dfdee94a" translate="yes" xml:space="preserve">
          <source>Serializer</source>
          <target state="translated">Serializer</target>
        </trans-unit>
        <trans-unit id="37ab87d27ac3fc6aff97de4899cf111dbc93119e" translate="yes" xml:space="preserve">
          <source>Serializer.USE_CACHE()</source>
          <target state="translated">Serializer.USE_CACHE()</target>
        </trans-unit>
        <trans-unit id="8c47c32f4753490883aa7f2da42b9237e91dd631" translate="yes" xml:space="preserve">
          <source>Serializer.USE_ENUM_INDEX()</source>
          <target state="translated">Serializer.USE_ENUM_INDEX()</target>
        </trans-unit>
        <trans-unit id="7334929471113570ab0df0cde901e126c19cfac2" translate="yes" xml:space="preserve">
          <source>Serializer.run()</source>
          <target state="translated">Serializer.run()</target>
        </trans-unit>
        <trans-unit id="d1d6929bc6ae78c0192436d99ce11dad76611222" translate="yes" xml:space="preserve">
          <source>Serializer.serialize()</source>
          <target state="translated">Serializer.serialize()</target>
        </trans-unit>
        <trans-unit id="47e3d6df905a599900c2674b7bbdf809e98a6f0a" translate="yes" xml:space="preserve">
          <source>Serializer.serializeException()</source>
          <target state="translated">Serializer.serializeException()</target>
        </trans-unit>
        <trans-unit id="77ca718da7643515b5a4b69896142c7cff21a637" translate="yes" xml:space="preserve">
          <source>Serializer.toString()</source>
          <target state="translated">Serializer.toString()</target>
        </trans-unit>
        <trans-unit id="75e52bd72a908119d7ef59f2290e8e0c3362041b" translate="yes" xml:space="preserve">
          <source>Serializer.useCache</source>
          <target state="translated">Serializer.useCache</target>
        </trans-unit>
        <trans-unit id="c3148282cbb22645d0901abe7b3884eff5c9168b" translate="yes" xml:space="preserve">
          <source>Serializer.useEnumIndex</source>
          <target state="translated">Serializer.useEnumIndex</target>
        </trans-unit>
        <trans-unit id="772cf6b5e7f38afd909a1198d97163e2ef545f0b" translate="yes" xml:space="preserve">
          <source>Serializes &lt;code&gt;v&lt;/code&gt; and returns the String representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18edd5905d31173d899f6372b8578e30304bb279" translate="yes" xml:space="preserve">
          <source>Serializes &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df28c0c79904cb74759cc80ed424274ed5afae63" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;pretty&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; to prettify the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece63fce080f97be8b5de1ada601cacf30b6cf93" translate="yes" xml:space="preserve">
          <source>Set a conditional compiler flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8d3994b1f9ee8de92e04557b343aa72ff0e0cf" translate="yes" xml:space="preserve">
          <source>Set the given attribute value for an Element node. Attributes are case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5667554b1d17e46e8630f29f00a69f74ee140d" translate="yes" xml:space="preserve">
          <source>Set the type of a (static) field at a given class by name. An error is thrown when &lt;code&gt;className&lt;/code&gt; or &lt;code&gt;field&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e17f5fca6b7ef88d4b8ed5224060e6333194857" translate="yes" xml:space="preserve">
          <source>Sets a &lt;code&gt;value&lt;/code&gt; for a specified &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a27860485d6fe61ba5f7ac598bc95e455dceb77" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;modulecheckpolicy#ModuleCheckPolicy&quot;&gt;ModuleCheckPolicy&lt;/a&gt;&lt;/code&gt; of all files whose dot-path matches an element of &lt;code&gt;pathFilters&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84372b944bb3690629343ac656b346c11f6feabb" translate="yes" xml:space="preserve">
          <source>Sets the color of the trace output to &lt;code&gt;rgb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0c82cb4109537384b1a5c03061b1c370667f9c" translate="yes" xml:space="preserve">
          <source>Sets the field named &lt;code&gt;field&lt;/code&gt; of object &lt;code&gt;o&lt;/code&gt; to value &lt;code&gt;value&lt;/code&gt;, taking property setter functions into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2872b22ffc494a4070ae02a75538187ecb35343" translate="yes" xml:space="preserve">
          <source>Sets the field named &lt;code&gt;field&lt;/code&gt; of object &lt;code&gt;o&lt;/code&gt; to value &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74d67451e2fa3aaef2f3a983804d3a443d0eacb" translate="yes" xml:space="preserve">
          <source>Sets the header identified as &lt;code&gt;header&lt;/code&gt; to value &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f217841658d3e9ca990f280b51fdba594c81d58a" translate="yes" xml:space="preserve">
          <source>Sets the index of enum instance &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8ec662d036ba9fa517be001ffa1fb2e7cf3f41" translate="yes" xml:space="preserve">
          <source>Sets the parameter identified as &lt;code&gt;param&lt;/code&gt; to value &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b2b0f565720f8e413f7c5a583e282382bea02c" translate="yes" xml:space="preserve">
          <source>Sets the post data of &lt;code&gt;this&lt;/code&gt; Http request to &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e955f007ed5200df8e4b8703b73782c2686c26" translate="yes" xml:space="preserve">
          <source>Sets the type resolver of &lt;code&gt;this&lt;/code&gt; Unserializer instance to &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08522b503f7e528b9c648e4f03360912495d6ab8" translate="yes" xml:space="preserve">
          <source>Sets the value at index &lt;code&gt;index&lt;/code&gt; to &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed9204b3f3aa707aebab739471ee7f5a8f25641" translate="yes" xml:space="preserve">
          <source>Sha1</source>
          <target state="translated">Sha1</target>
        </trans-unit>
        <trans-unit id="3a8ec862ad8ee003a306031418c488e4f63f62ca" translate="yes" xml:space="preserve">
          <source>Sha224</source>
          <target state="translated">Sha224</target>
        </trans-unit>
        <trans-unit id="6d5db0e686f6ba298ef37be6e0c44dea3cbf70dd" translate="yes" xml:space="preserve">
          <source>Sha256</source>
          <target state="translated">Sha256</target>
        </trans-unit>
        <trans-unit id="833eec462913c05720b68fac476ead3589719ad7" translate="yes" xml:space="preserve">
          <source>Should be used as a type for the last argument of an extern method, representing that arbitrary number of arguments of given type can be passed to that method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088a0a746bda84afb6e52a0529a17bbcc29a0664" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../string#charCodeAt&quot;&gt;String.charCodeAt&lt;/a&gt;&lt;/code&gt; but uses the UTF8 character position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b754bbbc1ec7de2b50ee1a3b70ad0661dfc3f1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;getLocalVars&lt;/code&gt;, but returns elements of type &lt;code&gt;&lt;a href=&quot;tvar#TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;../../type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154b4ece272befa90d771cf7fce0c392dd4d0120" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;parse&lt;/code&gt;, but error positions are reported within the provided String &lt;code&gt;expr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f27efaf8c47e6fad92609fb8ff97047e287656" translate="yes" xml:space="preserve">
          <source>Similar to map, but also passes the index of each element to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52aaa93e9fd18f190378e95968016b9fb7865dc6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;data&lt;/code&gt; is the internal representation of Vector, this is a no-op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8402a9baafad7b2c07760534b81e992db65ebd" translate="yes" xml:space="preserve">
          <source>Since not all platforms guarantee that &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; always uses UTF-8 encoding, you can use this cross-platform API to perform operations on such strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972dff2e71ca7560ec0b2ff72d5f32ae8e19d0bd" translate="yes" xml:space="preserve">
          <source>Since the closure is in strict-mode, there may be run-time error if the input is not strict-mode-compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1186892a2f5c2bd17cd7d41f90482e39bd02c5" translate="yes" xml:space="preserve">
          <source>Single</source>
          <target state="translated">Single</target>
        </trans-unit>
        <trans-unit id="e9d07248d7339a00f41d4a2651e3f227cbb5162b" translate="yes" xml:space="preserve">
          <source>Single-precision IEEE 32bit float (4-byte).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c6a1f183694628e37ced41591147bfc0da1908" translate="yes" xml:space="preserve">
          <source>Socket</source>
          <target state="translated">Socket</target>
        </trans-unit>
        <trans-unit id="ab9a72ff408669ff32588ef8dccccdfc274f27e7" translate="yes" xml:space="preserve">
          <source>SocketConnection</source>
          <target state="translated">SocketConnection</target>
        </trans-unit>
        <trans-unit id="ead21ae2917edb34d045aeb124a3fa5e9351c871" translate="yes" xml:space="preserve">
          <source>SocketProtocol</source>
          <target state="translated">SocketProtocol</target>
        </trans-unit>
        <trans-unit id="7f035d1c14c708217397b6cbe06a051d9bbd2ca3" translate="yes" xml:space="preserve">
          <source>SocketWrapper</source>
          <target state="translated">SocketWrapper</target>
        </trans-unit>
        <trans-unit id="536e52c4f92e3654731e2d3ead0b53b48dc9c15f" translate="yes" xml:space="preserve">
          <source>Sorts &lt;code&gt;this&lt;/code&gt; Array according to the comparison function &lt;code&gt;f&lt;/code&gt;, where &lt;code&gt;f(x,y)&lt;/code&gt; returns 0 if x == y, a positive Int if x &amp;gt; y and a negative Int if x &amp;lt; y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f9397d146a462975c732b4337b247b3adf6bdd" translate="yes" xml:space="preserve">
          <source>Sorts &lt;code&gt;this&lt;/code&gt; Vector according to the comparison function &lt;code&gt;f&lt;/code&gt;, where &lt;code&gt;f(x,y)&lt;/code&gt; returns 0 if x == y, a positive Int if x &amp;gt; y and a negative Int if x &amp;lt; y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15072ed76b3e67aac5415baed65dff7fb49434a" translate="yes" xml:space="preserve">
          <source>Sorts Array &lt;code&gt;a&lt;/code&gt; according to the comparison function &lt;code&gt;cmp&lt;/code&gt;, where &lt;code&gt;cmp(x,y)&lt;/code&gt; returns 0 if &lt;code&gt;x == y&lt;/code&gt;, a positive Int if &lt;code&gt;x &amp;gt; y&lt;/code&gt; and a negative Int if &lt;code&gt;x &amp;lt; y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b1351e4364aa20c08b37dbf3ed07832e9ee128" translate="yes" xml:space="preserve">
          <source>Sorts List &lt;code&gt;lst&lt;/code&gt; according to the comparison function &lt;code&gt;cmp&lt;/code&gt;, where &lt;code&gt;cmp(x,y)&lt;/code&gt; returns 0 if &lt;code&gt;x == y&lt;/code&gt;, a positive Int if &lt;code&gt;x &amp;gt; y&lt;/code&gt; and a negative Int if &lt;code&gt;x &amp;lt; y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91f84b3f7980df3d2f80311fd051df5e3086e1b" translate="yes" xml:space="preserve">
          <source>Special information which is internally used to keep track of closure. information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5be4393103e59256181184a4f80be8e0548d7a" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;this&lt;/code&gt; String at each occurrence of &lt;code&gt;delimiter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11216a1f7c902849f81fb76e4741092ff61e8bf3" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;this&lt;/code&gt; Ucs2 at each occurrence of &lt;code&gt;delimiter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3094fbe0e0dbd12f5d47e0d107d7ef3e9061f4da" translate="yes" xml:space="preserve">
          <source>Splits String &lt;code&gt;s&lt;/code&gt; at all substrings &lt;code&gt;this&lt;/code&gt; EReg matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e19ba7355ecca575e829eb5f8c23445d4b223c5" translate="yes" xml:space="preserve">
          <source>StackItem</source>
          <target state="translated">StackItem</target>
        </trans-unit>
        <trans-unit id="01e8bf4a606093cd4b3714a5b0bcf48538998a8f" translate="yes" xml:space="preserve">
          <source>StackItem.CFunction</source>
          <target state="translated">StackItem.CFunction</target>
        </trans-unit>
        <trans-unit id="c6c144570a6c59268309d0e49ce5404f3a31a88c" translate="yes" xml:space="preserve">
          <source>StackItem.FilePos()</source>
          <target state="translated">StackItem.FilePos()</target>
        </trans-unit>
        <trans-unit id="0fc3a50091254f821b836b6320b0f7fbeb7fda13" translate="yes" xml:space="preserve">
          <source>StackItem.LocalFunction()</source>
          <target state="translated">StackItem.LocalFunction()</target>
        </trans-unit>
        <trans-unit id="29266c08eca7b89ab562c2de1297cfa2029730cf" translate="yes" xml:space="preserve">
          <source>StackItem.Method()</source>
          <target state="translated">StackItem.Method()</target>
        </trans-unit>
        <trans-unit id="b9d6f4fc5447a387066238859c60682e98f24bc4" translate="yes" xml:space="preserve">
          <source>StackItem.Module()</source>
          <target state="translated">StackItem.Module()</target>
        </trans-unit>
        <trans-unit id="a199c834c4355abdd01dfe7eb3b38b5ec2d5ed37" translate="yes" xml:space="preserve">
          <source>Start the main loop. Depending on the platform, this can return immediately or will only return when the application exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9940879bb90ee666e075dbf3aa81feaa3bbd4d2a" translate="yes" xml:space="preserve">
          <source>Static access modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdc494b62ce12568d812e3742eabaaa377383a0" translate="yes" xml:space="preserve">
          <source>Static access of a field &lt;code&gt;cf&lt;/code&gt; on a class &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749a016bf10749d6bbdfc0717392432e9f0401f6" translate="yes" xml:space="preserve">
          <source>Static methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a1e24cb37c5326f36226124c89932ddcdd79d9" translate="yes" xml:space="preserve">
          <source>Static variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45b18c0f0f4b3cf24da66312054a56ccf27d9c5" translate="yes" xml:space="preserve">
          <source>Std</source>
          <target state="translated">Std</target>
        </trans-unit>
        <trans-unit id="c2ff3fce1f4cff6a6cfd9b17685f610f23425afa" translate="yes" xml:space="preserve">
          <source>Std.instance()</source>
          <target state="translated">Std.instance()</target>
        </trans-unit>
        <trans-unit id="9c20258b926c52a97bfe4dbca52836d251671080" translate="yes" xml:space="preserve">
          <source>Std.int()</source>
          <target state="translated">Std.int()</target>
        </trans-unit>
        <trans-unit id="aac19e0e9f73facc51474f6499a4f8da634eb2fa" translate="yes" xml:space="preserve">
          <source>Std.is()</source>
          <target state="translated">Std.is()</target>
        </trans-unit>
        <trans-unit id="397e388b01b486009591b311680c351a483bd85d" translate="yes" xml:space="preserve">
          <source>Std.parseFloat()</source>
          <target state="translated">Std.parseFloat()</target>
        </trans-unit>
        <trans-unit id="d784ad78a1d558596b9ff9c5203b65d0c4eafa07" translate="yes" xml:space="preserve">
          <source>Std.parseInt()</source>
          <target state="translated">Std.parseInt()</target>
        </trans-unit>
        <trans-unit id="8afb79b45e71a7fe831b233c276af2aeaf132937" translate="yes" xml:space="preserve">
          <source>Std.random()</source>
          <target state="translated">Std.random()</target>
        </trans-unit>
        <trans-unit id="689d74fcb26d627d6bf253589bb62c3cdb3288e7" translate="yes" xml:space="preserve">
          <source>Std.string()</source>
          <target state="translated">Std.string()</target>
        </trans-unit>
        <trans-unit id="e4d7d7293668ffbef258370bd8c610c8b365dfb0" translate="yes" xml:space="preserve">
          <source>Stop the event from firing anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522e60728305fa639db7bdfdaba0bfde6913c865" translate="yes" xml:space="preserve">
          <source>Stops &lt;code&gt;this&lt;/code&gt; Timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6cc8fce810b126d71a76900c310d7421863118" translate="yes" xml:space="preserve">
          <source>Store the 16 bit unsigned integer at given position (in low endian encoding).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9098804d80469b0635a7451d9dc3f2497345977d" translate="yes" xml:space="preserve">
          <source>Store the 32 bit integer at given position (in low endian encoding).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bdd00b40a4d48f5de84f5dbe943382f42fe0f1" translate="yes" xml:space="preserve">
          <source>Store the 64 bit integer at given position (in low endian encoding).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f95bb05ae6408a810e814b4f27d929b0a37e4ce" translate="yes" xml:space="preserve">
          <source>Store the IEEE double precision value at given position in low endian encoding. Result is unspecified if writing outside of the bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8320fc8344c5e1b5bd6aa55b4c822e0637d40078" translate="yes" xml:space="preserve">
          <source>Store the IEEE single precision value at given position in low endian encoding. Result is unspecified if writing outside of the bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8caa81f168b2a457e31b637033460600698e4506" translate="yes" xml:space="preserve">
          <source>Store typed expression &lt;code&gt;t&lt;/code&gt; internally and give a syntax-level expression that can be returned from a macro and will be replaced by the stored typed expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="60c11f43f3015181e3b65d07af2da7197d0f9069" translate="yes" xml:space="preserve">
          <source>String can be concatenated by using the &lt;code&gt;+&lt;/code&gt; operator. If an operand is not a String, it is passed through &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;()&lt;/code&gt; first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14108186841d9779e94cf989088527076f2fc154" translate="yes" xml:space="preserve">
          <source>String interpolation of single quote strings within &lt;code&gt;expr&lt;/code&gt; is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa5ee344c22c0b243b04aa9644ff9a8a7b6a174" translate="yes" xml:space="preserve">
          <source>String representation from the result of the unit test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c637ead74346c866f0960b72f372813307712470" translate="yes" xml:space="preserve">
          <source>String.charAt()</source>
          <target state="translated">String.charAt()</target>
        </trans-unit>
        <trans-unit id="a242836a6071cd7499111977f7d5e7f2c703e276" translate="yes" xml:space="preserve">
          <source>String.charCodeAt()</source>
          <target state="translated">String.charCodeAt()</target>
        </trans-unit>
        <trans-unit id="660a36e0e4772c20a4ecfca38e4206d391d98e89" translate="yes" xml:space="preserve">
          <source>String.fromCharCode()</source>
          <target state="translated">String.fromCharCode()</target>
        </trans-unit>
        <trans-unit id="57cdfc28612baa44d9b801ecdd9786648969ade8" translate="yes" xml:space="preserve">
          <source>String.indexOf()</source>
          <target state="translated">String.indexOf()</target>
        </trans-unit>
        <trans-unit id="3c71d20886551d61cad75b8b861093ecf093951e" translate="yes" xml:space="preserve">
          <source>String.lastIndexOf()</source>
          <target state="translated">String.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="43f86903d36d048c8634a0d3efec8e4d2a2b6670" translate="yes" xml:space="preserve">
          <source>String.length</source>
          <target state="translated">String.length</target>
        </trans-unit>
        <trans-unit id="ac4175c194775f4bc4a29cc540d6eb829722928a" translate="yes" xml:space="preserve">
          <source>String.split()</source>
          <target state="translated">String.split()</target>
        </trans-unit>
        <trans-unit id="8247af16fde986c7d4e4dcc1235575e5764100fc" translate="yes" xml:space="preserve">
          <source>String.substr()</source>
          <target state="translated">String.substr()</target>
        </trans-unit>
        <trans-unit id="778c766f0211155295dacfdcfe2cfd89e1516b97" translate="yes" xml:space="preserve">
          <source>String.substring()</source>
          <target state="translated">String.substring()</target>
        </trans-unit>
        <trans-unit id="9f3e5777bde2c321e3646d9333930d022069936b" translate="yes" xml:space="preserve">
          <source>String.toLowerCase()</source>
          <target state="translated">String.toLowerCase()</target>
        </trans-unit>
        <trans-unit id="302b23bd707c0a79fe8cf9a19faf8fc4777fd369" translate="yes" xml:space="preserve">
          <source>String.toString()</source>
          <target state="translated">String.toString()</target>
        </trans-unit>
        <trans-unit id="751fea106399bd9d2e73e1e2b8d24bf176e4da8c" translate="yes" xml:space="preserve">
          <source>String.toUpperCase()</source>
          <target state="translated">String.toUpperCase()</target>
        </trans-unit>
        <trans-unit id="4af867646404217d7a643be333857ebe7ed14777" translate="yes" xml:space="preserve">
          <source>String: a is lexicographically less than b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce5288eecd589d87724840446678fd320dd0922" translate="yes" xml:space="preserve">
          <source>StringBuf</source>
          <target state="translated">StringBuf</target>
        </trans-unit>
        <trans-unit id="d52634d4323e4a257700858ef08d29a6f3f3621c" translate="yes" xml:space="preserve">
          <source>StringBuf.add()</source>
          <target state="translated">StringBuf.add()</target>
        </trans-unit>
        <trans-unit id="5b40e1b56c9b5af54deaec42a99d4b22626b0784" translate="yes" xml:space="preserve">
          <source>StringBuf.addChar()</source>
          <target state="translated">StringBuf.addChar()</target>
        </trans-unit>
        <trans-unit id="55a61f580bf1a5126d9663982961a321ba2a194f" translate="yes" xml:space="preserve">
          <source>StringBuf.addSub()</source>
          <target state="translated">StringBuf.addSub()</target>
        </trans-unit>
        <trans-unit id="325aa5d4306b280e3f7d56df34a832795e94ce0f" translate="yes" xml:space="preserve">
          <source>StringBuf.length</source>
          <target state="translated">StringBuf.length</target>
        </trans-unit>
        <trans-unit id="4eebd5bac90b8edc0d2f15671e9bb0117e935d93" translate="yes" xml:space="preserve">
          <source>StringBuf.toString()</source>
          <target state="translated">StringBuf.toString()</target>
        </trans-unit>
        <trans-unit id="9894336d87778661629ae35f1f8fe91d036d0a97" translate="yes" xml:space="preserve">
          <source>StringInput</source>
          <target state="translated">StringInput</target>
        </trans-unit>
        <trans-unit id="22c80d2b5fdaa8cf4f33bc57659e755edaaac4e6" translate="yes" xml:space="preserve">
          <source>StringMap allows mapping of String keys to arbitrary values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbec8c36f6a0a8eea2c029d8eb3d39f12dd7bfe" translate="yes" xml:space="preserve">
          <source>StringMap&amp;lt;T&amp;gt;</source>
          <target state="translated">StringMap&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e789cfea6961f46f9c02914ab7112ce66cd3139a" translate="yes" xml:space="preserve">
          <source>StringTools</source>
          <target state="translated">StringTools</target>
        </trans-unit>
        <trans-unit id="a5648da944ebcf25fd39c46c4ba676b241894206" translate="yes" xml:space="preserve">
          <source>StringTools.endsWith()</source>
          <target state="translated">StringTools.endsWith()</target>
        </trans-unit>
        <trans-unit id="6bedde3147b1d7ee75cacd3e4f6be2263ef802e8" translate="yes" xml:space="preserve">
          <source>StringTools.fastCodeAt()</source>
          <target state="translated">StringTools.fastCodeAt()</target>
        </trans-unit>
        <trans-unit id="89d14e1fa30f5d38fe676fef35798506c808486d" translate="yes" xml:space="preserve">
          <source>StringTools.hex()</source>
          <target state="translated">StringTools.hex()</target>
        </trans-unit>
        <trans-unit id="ff88737c750c5776ee1924063c75cca982883e3f" translate="yes" xml:space="preserve">
          <source>StringTools.htmlEscape()</source>
          <target state="translated">StringTools.htmlEscape()</target>
        </trans-unit>
        <trans-unit id="0031cc48010c119e88b96acf17d3c53f7cc0b0fb" translate="yes" xml:space="preserve">
          <source>StringTools.htmlUnescape()</source>
          <target state="translated">StringTools.htmlUnescape()</target>
        </trans-unit>
        <trans-unit id="3d83674595529ceb28118a641db3c63035f72b8e" translate="yes" xml:space="preserve">
          <source>StringTools.isEof()</source>
          <target state="translated">StringTools.isEof()</target>
        </trans-unit>
        <trans-unit id="3278b0215963e56cb63635cf50d09b69685780ef" translate="yes" xml:space="preserve">
          <source>StringTools.isSpace()</source>
          <target state="translated">StringTools.isSpace()</target>
        </trans-unit>
        <trans-unit id="f9fdd143a3b3afd978ee3bed9c8f0a7658f760d0" translate="yes" xml:space="preserve">
          <source>StringTools.lpad()</source>
          <target state="translated">StringTools.lpad()</target>
        </trans-unit>
        <trans-unit id="e81620c50e815483885f4e201fe4d0f8c18d0130" translate="yes" xml:space="preserve">
          <source>StringTools.ltrim()</source>
          <target state="translated">StringTools.ltrim()</target>
        </trans-unit>
        <trans-unit id="dd8aaa3894975c37507cf31142975bbca7061559" translate="yes" xml:space="preserve">
          <source>StringTools.quoteUnixArg()</source>
          <target state="translated">StringTools.quoteUnixArg()</target>
        </trans-unit>
        <trans-unit id="9a48eadfdd3cd5b0d5aa7df62ca5d0b79869d4f3" translate="yes" xml:space="preserve">
          <source>StringTools.quoteWinArg()</source>
          <target state="translated">StringTools.quoteWinArg()</target>
        </trans-unit>
        <trans-unit id="ad86cabd3e325fcca7c648e38661e557967f5ba5" translate="yes" xml:space="preserve">
          <source>StringTools.replace()</source>
          <target state="translated">StringTools.replace()</target>
        </trans-unit>
        <trans-unit id="90afb456c93d7a758e9fac27b8e158a129fb81a6" translate="yes" xml:space="preserve">
          <source>StringTools.rpad()</source>
          <target state="translated">StringTools.rpad()</target>
        </trans-unit>
        <trans-unit id="53d2d6671fb64947c9f7a829ec4150d4abd78f6c" translate="yes" xml:space="preserve">
          <source>StringTools.rtrim()</source>
          <target state="translated">StringTools.rtrim()</target>
        </trans-unit>
        <trans-unit id="701efdd85e43587f394bb025622a8b535636ea93" translate="yes" xml:space="preserve">
          <source>StringTools.startsWith()</source>
          <target state="translated">StringTools.startsWith()</target>
        </trans-unit>
        <trans-unit id="6603f0379d349e74bc2aff1fdbae6ed0e9a1c50d" translate="yes" xml:space="preserve">
          <source>StringTools.trim()</source>
          <target state="translated">StringTools.trim()</target>
        </trans-unit>
        <trans-unit id="1fae0d26cbf9084834cf577973cfecbf8f3b365e" translate="yes" xml:space="preserve">
          <source>StringTools.urlDecode()</source>
          <target state="translated">StringTools.urlDecode()</target>
        </trans-unit>
        <trans-unit id="396b64f793577d79696f85546523d8335d5a05e3" translate="yes" xml:space="preserve">
          <source>StringTools.urlEncode()</source>
          <target state="translated">StringTools.urlEncode()</target>
        </trans-unit>
        <trans-unit id="1e4575afd68788540c1587144193b89bd80ad0c0" translate="yes" xml:space="preserve">
          <source>StringTools.winMetaCharacters()</source>
          <target state="translated">StringTools.winMetaCharacters()</target>
        </trans-unit>
        <trans-unit id="3451ec778827dd14d24ea3b9f88b60a5392772bf" translate="yes" xml:space="preserve">
          <source>Strings can be constructed using the String literal syntax &lt;code&gt;&quot;string value&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0faf70bd1dc8b4a4ebf5ffb799c4fd33c25c3565" translate="yes" xml:space="preserve">
          <source>Sub is set on module sub-type access: &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/cpp/cppia/Module.html#Type&quot;&gt;pack.Module.Type&lt;/a&gt;&lt;/code&gt; has name = Module, sub = Type, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bc93825413e6a2ce0a0cf3dbac4ddae7d831a8" translate="yes" xml:space="preserve">
          <source>Subsequent calls to &lt;code&gt;this.&lt;a href=&quot;#serialize&quot;&gt;serialize&lt;/a&gt;&lt;/code&gt; will append values to the internal buffer of this String. Once complete, the contents can be retrieved through a call to &lt;code&gt;this.&lt;a href=&quot;#toString&quot;&gt;toString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e3107bfc3f52ee43f89b12d3c782f7973dc0ba" translate="yes" xml:space="preserve">
          <source>Succeeds if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34097280e1c036a3e6ff4132d8facb22f4b655ea" translate="yes" xml:space="preserve">
          <source>Succeeds if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6466ce697321b0027fd2b023a6daab956c3788fe" translate="yes" xml:space="preserve">
          <source>Succeeds if &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94a865493df7964a8209d4a3fb321d17e966ff2" translate="yes" xml:space="preserve">
          <source>Supported expressions are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9314dc4349bfb2624e481889017abe1beb1298" translate="yes" xml:space="preserve">
          <source>SyncSocketConnection</source>
          <target state="translated">SyncSocketConnection</target>
        </trans-unit>
        <trans-unit id="b709bfe0901af77e59588feb42157ebb8a6da866" translate="yes" xml:space="preserve">
          <source>Synchronous communications between Flash and Javascript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea5f6535cf1464538bf913c29432e06b44c8a00" translate="yes" xml:space="preserve">
          <source>Sys</source>
          <target state="translated">Sys</target>
        </trans-unit>
        <trans-unit id="6ad14368795511a22ee1d3233f23e4d0ca6d404f" translate="yes" xml:space="preserve">
          <source>SysError</source>
          <target state="translated">SysError</target>
        </trans-unit>
        <trans-unit id="f8faecd1b83759cd76df0b250cd9f0ce3d94ae67" translate="yes" xml:space="preserve">
          <source>TConstant</source>
          <target state="translated">TConstant</target>
        </trans-unit>
        <trans-unit id="c5b9f165e9450db15ca2b4ad6805c393ad43956a" translate="yes" xml:space="preserve">
          <source>TFunc</source>
          <target state="translated">TFunc</target>
        </trans-unit>
        <trans-unit id="4464b8e4a039bf6559ad424da8e3e745adcd64af" translate="yes" xml:space="preserve">
          <source>TVar</source>
          <target state="translated">TVar</target>
        </trans-unit>
        <trans-unit id="5f659ddc7f84d614a3867cfb3c11be9c8ea16d0d" translate="yes" xml:space="preserve">
          <source>Take a look at our &lt;a href=&quot;https://haxe.org/documentation/introduction/&quot;&gt;introduction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38741dd02b84e0f54bddd0737c628ba91b6e6bc4" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;c&lt;/code&gt; has runtime type information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f5ae1ced766c937c14fb35de48cee8878876ea" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;e&lt;/code&gt; is a format string, i.e. uses single quotes &lt;code&gt;'&lt;/code&gt; as delimiters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d16ff44a03f9f5a266ad4aac7027d1b6709fa6" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;f&lt;/code&gt; is a finite number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a98b3204ac00893fd6e5099e9c967cd24019fbc" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;f&lt;/code&gt; is not a valid number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef02b7df1c1a301528181cfbe9569640d2cff4e" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;f&lt;/code&gt; is true for all elements of &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f516b714e34a92568adf9fff1c7b045722549a7" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;it&lt;/code&gt; contains &lt;code&gt;elt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2189405f46381eb5633f148bc5154cc2ae925c3" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;it&lt;/code&gt; contains an element for which &lt;code&gt;f&lt;/code&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c158a00c221a58b48358ce524da90646bdcf3a" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;key&lt;/code&gt; is bound to a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e05fb414d512ea0bfc754d3af2ca3d559f8baf9" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;this&lt;/code&gt; List is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41ff8c559301e17c051b597460860f9e832e521" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;this&lt;/code&gt; regular expression matches String &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2974fb6bd6155b1c93ea87fadedba06d64c3a49f" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;this&lt;/code&gt; regular expression matches a substring of String &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98e84272fc251d4f16e364353946ca646e906f4" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;v&lt;/code&gt; is an enum value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb30437beebf6a2792bcb224f760d7921c62583" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;v&lt;/code&gt; is an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634f9981ed1a651baf02a637d1948481b3ed5e5f" translate="yes" xml:space="preserve">
          <source>Tells if Iterable &lt;code&gt;it&lt;/code&gt; does not contain any element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff0f00ad90cdeb4989ab13b4e7b54d9ad5bbe09" translate="yes" xml:space="preserve">
          <source>Tells if a value &lt;code&gt;v&lt;/code&gt; is of the type &lt;code&gt;t&lt;/code&gt;. Returns &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;v&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt; are null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9da2bf3c0320c56f4164dbb3c46621b976a9bfc" translate="yes" xml:space="preserve">
          <source>Tells if compiler directive &lt;code&gt;s&lt;/code&gt; has been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91957c73ecdacd8fd94442b78fac8967000439a2" translate="yes" xml:space="preserve">
          <source>Tells if structure &lt;code&gt;o&lt;/code&gt; has a field named &lt;code&gt;field&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c401ee8ffde4356549052944e113f8c86c30551d" translate="yes" xml:space="preserve">
          <source>Tells if the Element node has a given attribute. Attributes are case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5baab970a5856eeeaa0e3842fbc216b118b3fa" translate="yes" xml:space="preserve">
          <source>Tells if the String is correctly encoded as UTF8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6ab23292dacd4065fd616248cdc0f0f76031fa" translate="yes" xml:space="preserve">
          <source>Tells if the character in the string &lt;code&gt;s&lt;/code&gt; at position &lt;code&gt;pos&lt;/code&gt; is a space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f3ae6b152e6643bceeb5604b6c73c014a376be" translate="yes" xml:space="preserve">
          <source>Tells if the origin of &lt;code&gt;this&lt;/code&gt; MetaAccess has a &lt;code&gt;name&lt;/code&gt; metadata entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aedaa3d4b85b1e06c03e58055bed36d9ee66545" translate="yes" xml:space="preserve">
          <source>Tells if the stack is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4099474bf49d1325acdc370308d20ed5003f018f" translate="yes" xml:space="preserve">
          <source>Tells if the string &lt;code&gt;s&lt;/code&gt; ends with the string &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb06c1b3d5fa84003a9d0cf31339c8e9b8135bcd" translate="yes" xml:space="preserve">
          <source>Tells if the string &lt;code&gt;s&lt;/code&gt; starts with the string &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f264888e24e6adca753088925731e94ace0a9f" translate="yes" xml:space="preserve">
          <source>Tells if the structure contains a specified &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="8824a03e8121a11b9190b67db94e93c1d15b0ce5" translate="yes" xml:space="preserve">
          <source>Template provides a basic templating mechanism to replace values in a source String, and to have some basic logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42454697730a1cbc9b75add5b56b3203b80b82f1" translate="yes" xml:space="preserve">
          <source>Template.execute()</source>
          <target state="translated">Template.execute()</target>
        </trans-unit>
        <trans-unit id="95c0c942d96a22c63bac7f3c8e753a09c011dc29" translate="yes" xml:space="preserve">
          <source>Template.globals()</source>
          <target state="translated">Template.globals()</target>
        </trans-unit>
        <trans-unit id="a70ce38389e318bd2be18a0111c6dc76bd2cd9ed" translate="yes" xml:space="preserve">
          <source>TestCase</source>
          <target state="translated">TestCase</target>
        </trans-unit>
        <trans-unit id="10e93232f5ee13cde5c73ae6c73ca6a57a250ad6" translate="yes" xml:space="preserve">
          <source>TestResult</source>
          <target state="translated">TestResult</target>
        </trans-unit>
        <trans-unit id="5771978534ec9caac4c84541cc3f1c7a393abd6e" translate="yes" xml:space="preserve">
          <source>TestResult contains the result of the executed unit tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0713b4982e6a2f0170adb1f8c9579ad0d6fb95" translate="yes" xml:space="preserve">
          <source>TestRunner</source>
          <target state="translated">TestRunner</target>
        </trans-unit>
        <trans-unit id="44320de3e55bad908ec4a22b4067142b26237ec3" translate="yes" xml:space="preserve">
          <source>TestStatus</source>
          <target state="translated">TestStatus</target>
        </trans-unit>
        <trans-unit id="250d75267bda967811751f8a8fd083b64d9099c0" translate="yes" xml:space="preserve">
          <source>The (dot-)path of the runtime type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6d9d90603ab1d3e84d7718d9979a5975425aa0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://haxe.org/manual/dictionary.html#define-read-access&quot;&gt;read access&lt;/a&gt; behavior of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7890cb80813ef3c3a878fcae0a1ffcdc3b27a257" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://haxe.org/manual/dictionary.html#define-write-access&quot;&gt;write access&lt;/a&gt; behavior of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79307e746e84759212afca4cad12d03a0e7a2997" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://haxe.org/manual/lf-metadata.html&quot;&gt;metadata&lt;/a&gt; the type was annotated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0330477b732a5996249467f988d74cb3dfce27c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;fast#Fast&quot;&gt;haxe.xml.Fast&lt;/a&gt;&lt;/code&gt; API helps providing a fast dot-syntax access to the most common &lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e242ad80cb4378eec3c918a590c5945fd9e7c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; class is a collection of methods to support functional programming. It is ideally used with &lt;code&gt;using &lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; and then acts as an extension to Iterable types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401b89e8665cf56021aa83ea248b8ef19fe0cd7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;&lt;/code&gt; class is the complement to the &lt;code&gt;&lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;&lt;/code&gt; class. It parses a serialization &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and creates objects from the contained data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f667ca07a1b1e65a642d0dfcc791a103a96fd35b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__init__&lt;/code&gt; expression of the class, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e0ac1778780942ea34d581f3b1d4eb5b5388f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bufsize&lt;/code&gt; optional argument specifies the size of chunks by which data is read and written. Its default value is 4096.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767ce0e5a3e1f8a4b7fa5056c83d59c748024f1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bufsize&lt;/code&gt; optional argument specifies the size of chunks by which data is read. Its default value is target-specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94673dec5d2b7439dd7831863ec7f1127aa5180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;f&lt;/code&gt; function takes &lt;code&gt;this&lt;/code&gt; EReg object as its first argument and should return a replacement string for the substring matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbad905814888ed8c2b34d936b54db9d3ad8ad3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;macroCall&lt;/code&gt; should be a String containing valid Haxe expression, similar to &lt;code&gt;--init&lt;/code&gt; macros (see https://haxe.org/manual/macro-initialization.html). Multiple calls with the exact same &lt;code&gt;macroCall&lt;/code&gt; value will only register the callback once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c46831d15d6107bc7adc67b6ebaff4aacfb1141" translate="yes" xml:space="preserve">
          <source>The CR/LF characters are not included in the resulting string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efa97f2e182625f315bc29d2bb7b9812ffe4e70" translate="yes" xml:space="preserve">
          <source>The CTypeTools class contains some extra functionalities for handling &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b14b4d7f1c12777b14be99fc980520cb4a44aa" translate="yes" xml:space="preserve">
          <source>The Date class provides a basic structure for date and time related information. Date instances can be created by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e7197ad8615ffd350d87ca082820cb5db126c7" translate="yes" xml:space="preserve">
          <source>The DateTools class contains some extra functionalities for handling &lt;code&gt;&lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;&lt;/code&gt; instances and timestamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac3629ccafe086dc62306a399e2accfdebe3c46" translate="yes" xml:space="preserve">
          <source>The EReg class represents regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f29b5d9b47077010b7fe8b4236f1341f17ca22" translate="yes" xml:space="preserve">
          <source>The Haxe Reflection API allows retrieval of type information at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffb2f82c51fcf81c3f94157ffc90b6ec3287d42" translate="yes" xml:space="preserve">
          <source>The Haxe Remoting Socket Protocol is composed of serialized string exchanges. Each string is prefixed with a 2-chars header encoding the string size (up to 4KB) and postfixed with the &lt;code&gt;\0&lt;/code&gt; message delimiting char.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa92a35513b710778cdf4db69a995ad4b2bf30a" translate="yes" xml:space="preserve">
          <source>The IO is set into nonblocking mode and some data cannot be read or written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9f9ebf78d2dd299115d673459cee9939e73524" translate="yes" xml:space="preserve">
          <source>The Reflect API is a way to manipulate values dynamically through an abstract interface in an untyped manner. Use with care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cbc7ec2ff1f35d67992c58ee30318b8ac804d3" translate="yes" xml:space="preserve">
          <source>The Serializer class can be used to encode values and objects into a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, from which the &lt;code&gt;&lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;&lt;/code&gt; class can recreate the original representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb8fc14263503d4a0ef89c1bc97f59281f073a6" translate="yes" xml:space="preserve">
          <source>The Std class provides standard methods for manipulating basic types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1e050dc3b7f7cc004539f97a0127fde439f0ae" translate="yes" xml:space="preserve">
          <source>The TestCase can be tested using &lt;code&gt;&lt;a href=&quot;testrunner#TestRunner&quot;&gt;TestRunner&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e161946c0bbe0310a7b3e27d9139fbf387b3ed2" translate="yes" xml:space="preserve">
          <source>The Timer class allows you to create asynchronous timers on platforms that support events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3969b55f4af09fa755caed6df48e400a3e558b" translate="yes" xml:space="preserve">
          <source>The XML string built with all the sub nodes, excluding the current one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76eb7e246eeacc1df76682ed86eb7f501ea77659" translate="yes" xml:space="preserve">
          <source>The abstract type runtime information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b1c192c874cad2d4b7ee8f99fdf0cb24b467ce" translate="yes" xml:space="preserve">
          <source>The access modifiers of the field. By default fields have private access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5455b5901b3bddcea67f54880f0e3be5ee319f6a" translate="yes" xml:space="preserve">
          <source>The accuracy of this may be platform-dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a21a48351bcabb62d7fb25d9e1ff70a186df45a" translate="yes" xml:space="preserve">
          <source>The actual expression of the field or &lt;code&gt;null&lt;/code&gt; if there is no expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d5a6d1eeb9c334a915606298ab6166fe409819" translate="yes" xml:space="preserve">
          <source>The actual macro implemented for Std.format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207a2e0bbbb519a33a869447fd6df78234be31ec" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;contextOptions&lt;/code&gt; determines which context (normal, macro or both) this affects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6c5bfa8cd922eaeeceec09a200f17a603a6eb2" translate="yes" xml:space="preserve">
          <source>The associated documentation of the class field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243881ddac02cf6c56f8d62a647676930d77b8b9" translate="yes" xml:space="preserve">
          <source>The associated documentation of the enum constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a394ceefae87e128a968c804c5d10d3f2c37295e" translate="yes" xml:space="preserve">
          <source>The available enum constructors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bdba3abbede096a765ff7e5ba57dc717c2342e" translate="yes" xml:space="preserve">
          <source>The available implicit from-casts of the abstract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adb5f46f1cc7d240da10a3b8280de9dcd6e6717" translate="yes" xml:space="preserve">
          <source>The available implicit to-casts of the abstract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61c59e9c725a644203b8dc40287991c5375dea6" translate="yes" xml:space="preserve">
          <source>The basic String class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aad5843d06b7ebf8bbca7fde6cc9105c376d2dd" translate="yes" xml:space="preserve">
          <source>The behaviour of a Date instance is only consistent across platforms if the the arguments describe a valid date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd50bc432fd2dcf904e83a7b5c7783aba0bf893" translate="yes" xml:space="preserve">
          <source>The buffer is not emptied by this operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f6bc42f146966dadda56e6b9626e2984ce393b" translate="yes" xml:space="preserve">
          <source>The callback may return a type definition, which is then used for the expected type. If it returns null, the type is considered to still not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0269409f600377c04a93d4694fa0b82212959363" translate="yes" xml:space="preserve">
          <source>The callback receives an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; containing all types which are about to be generated. Modifications are limited to metadata, it is mainly intended to obtain information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e2d28c783a6065f165a4b9db928372d4b7af86" translate="yes" xml:space="preserve">
          <source>The class field kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c329817953f539a35aec1ad738645c7b43f9d7e" translate="yes" xml:space="preserve">
          <source>The class fields of the structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3085c9d10478fbf85c11f20192831c5c0d0f5163" translate="yes" xml:space="preserve">
          <source>The class name does not include any type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218ec9c2a230410bf07f05a266fd2f92e8347697" translate="yes" xml:space="preserve">
          <source>The class name must not include any type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1427aa8f0a9d99efaeef1f7ddb8a76550aeaefae" translate="yes" xml:space="preserve">
          <source>The class name of the unit test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9b23521af273b06a648a577d50b535b71cc002" translate="yes" xml:space="preserve">
          <source>The class' parent class defined by its type path and list of type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b55b4ccd61ba7b3f2a5aaddba9ab773131ad9b" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13a88443d63ce0d7fb8d8c88a734295fda6f2c8" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;super&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031879354dec4dadc92c3eed8446ac587551b36a" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1ea03411d9e01c422c3aaefb5c8ee45658baf3" translate="yes" xml:space="preserve">
          <source>The constructor indices are preserved from Haxe syntax, so the first declared is index 0, the next index 1 etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18b174951d2df9bb3829229554fa2795f18444a" translate="yes" xml:space="preserve">
          <source>The constructor of the class, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc57ecc42c0662c15c6701504941ae2395b84f25" translate="yes" xml:space="preserve">
          <source>The corresponding enum instance type is &lt;code&gt;&lt;a href=&quot;enumvalue&quot;&gt;EnumValue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1363bbbd9083b5fec877ad1029a02c13f11aa4" translate="yes" xml:space="preserve">
          <source>The current corresponding &lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9d3d504d258cafb20a658cb8c5fd36ac98066f" translate="yes" xml:space="preserve">
          <source>The current position in the stream in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd974852708a1e584e643f015ee9a38b950fda7" translate="yes" xml:space="preserve">
          <source>The current test status of the TestRunner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb73a86a60c4e5b9998b325d9593fe4ccb6c4d5" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;&quot;1&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f417e72b255ca37088c68c509fbf9484ab353d21" translate="yes" xml:space="preserve">
          <source>The defined array-access fields of the abstract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca0f6042af8c243ca94edb36584a92b4b58fca5" translate="yes" xml:space="preserve">
          <source>The defined binary operators of the abstract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2d08d568b995572b03bdeea09beb8b0a524c8c" translate="yes" xml:space="preserve">
          <source>The defined unary operators of the abstract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b1953579ebedfaf3c7716c60fe86c37e63221a" translate="yes" xml:space="preserve">
          <source>The difference is passed as argument to Log.trace(), with &quot;s&quot; appended to denote the unit. The optional &lt;code&gt;pos&lt;/code&gt; argument is passed through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4154e46fdff4fa4556678c9723d0158bc0379eb2" translate="yes" xml:space="preserve">
          <source>The directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42406de1a6c84f08fe6eb21a12ea6c786ebf630" translate="yes" xml:space="preserve">
          <source>The documentation of the constructor. This information is only available if the compiler flag &lt;code&gt;-D use_rtti_doc&lt;/code&gt; was in place. Otherwise, or if the constructor has no documentation, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e72f68a8da4b3447510cfc78e7e70ec233cf33b" translate="yes" xml:space="preserve">
          <source>The documentation of the field, if available. If the field has no documentation, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ba8d2f599030c6ab747357e428c66148f55352" translate="yes" xml:space="preserve">
          <source>The documentation of the field. This information is only available if the compiler flag &lt;code&gt;-D use_rtti_doc&lt;/code&gt; was in place. Otherwise, or if the field has no documentation, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82a1a1f0545aa788f5ea197fc6057b9086b05ef" translate="yes" xml:space="preserve">
          <source>The documentation of the type. This information is only available if the compiler flag &lt;code&gt;-D use_rtti_doc&lt;/code&gt; was in place. Otherwise, or if the constructor has no documentation, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113e97df707d6edf762a990d110a86f46c941a51" translate="yes" xml:space="preserve">
          <source>The element is removed from &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d568350142de9f873e778a54dd2025807c7fe322" translate="yes" xml:space="preserve">
          <source>The elements are not copied and retain their identity, so &lt;code&gt;a[i] == &lt;a href=&quot;vector#fromArrayCopy&quot;&gt;Vector.fromArrayCopy&lt;/a&gt;(a).get(i)&lt;/code&gt; is true for any valid i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768209c3b451ade65ad765e0a6193f958a2edc27" translate="yes" xml:space="preserve">
          <source>The elements are not copied and retain their identity, so &lt;code&gt;a[i] == a.copy()[i]&lt;/code&gt; is true for any valid &lt;code&gt;i&lt;/code&gt;. However, &lt;code&gt;a == a.copy()&lt;/code&gt; is always false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ace532b99be5d83f22918ae674b67c269a5907c" translate="yes" xml:space="preserve">
          <source>The elements are not copied and retain their identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9567b2fdf21e62a947b8ff5a22c759aac7a259" translate="yes" xml:space="preserve">
          <source>The enum name does not include any type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f47e462cf376a4d16cc80b60671cb45073f3c1" translate="yes" xml:space="preserve">
          <source>The enum name must not include any type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae4c569d5ce598b18334663a129cd3aafc5e7df" translate="yes" xml:space="preserve">
          <source>The enum runtime type information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725c0f05348b5b773c05f4d9a43dc1ef68710aa7" translate="yes" xml:space="preserve">
          <source>The error message of the unit test method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0628012c2d77c4a62f2562528b964f8e826cdc" translate="yes" xml:space="preserve">
          <source>The error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f9e2c9637f49f4e0ed50c047efae396d8daf72" translate="yes" xml:space="preserve">
          <source>The exact format specification can be found here: https://haxe.org/manual/serialization/format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20be7daf9f1c1f383dd53eaf23ab51ee2fd3f22e" translate="yes" xml:space="preserve">
          <source>The exact representation depends on the platform and key-type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2102190701ac70dee7a32f957265e47f140ac2ec" translate="yes" xml:space="preserve">
          <source>The exact representation of &lt;code&gt;x&lt;/code&gt; may vary per platform. To get more consistent behavior, this function should be called with Std.string(x).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26feec8f5ec8c3799b70b86a08297d9cfdb19559" translate="yes" xml:space="preserve">
          <source>The expression kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64aa494f19d09a69d9d61be6771b6329aca7799" translate="yes" xml:space="preserve">
          <source>The expression of the case, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b3d05474226b50168c712dae1afa6fe86804a5" translate="yes" xml:space="preserve">
          <source>The expression of the catch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718d2d0a761f68dce6f830fd44ae82785e1b4cab" translate="yes" xml:space="preserve">
          <source>The expression of the function body, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73c97109e4013a82b8199321546b0c0dca45268" translate="yes" xml:space="preserve">
          <source>The expression of the function body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bc03d778dc6529545d0f6c5de457282bb36f3d" translate="yes" xml:space="preserve">
          <source>The expression of the variable, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612a79bfc8f73484a2d8ff1e536ee51a52fb93b0" translate="yes" xml:space="preserve">
          <source>The fields of the type definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e4813edd411db97295525bc672ab0cae480132" translate="yes" xml:space="preserve">
          <source>The file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8e058e84bf3bc453cf035cfc7f2bf238000df0" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bb1935623ea3eb5deac517ee415f826ee95051" translate="yes" xml:space="preserve">
          <source>The final character is not included in the resulting string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755ce70352f84be96ec285060b43aaf1bf0ebc63" translate="yes" xml:space="preserve">
          <source>The first invocation occurs after &lt;code&gt;time_ms&lt;/code&gt; milliseconds, not immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55094cde8d47075c999cb003e416ab35b9017b99" translate="yes" xml:space="preserve">
          <source>The first two formats are expressed in local time, the third in UTC Epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ce8db39472eb2302e7637a11a401e574af1f49" translate="yes" xml:space="preserve">
          <source>The following replacements are made:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4391ed5de7c6f85557ebb7e719b38621406e36be" translate="yes" xml:space="preserve">
          <source>The following types are considered compound:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720a9053eee85ae44276dd0e42c81c7fa73e45ef" translate="yes" xml:space="preserve">
          <source>The full slash path of the .hx file containing the type. This might be &lt;code&gt;null&lt;/code&gt; in case there is no such file, e.g. if the type is defined through a macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d5319267b752b1b474126d5a20dbb4ac9e1365" translate="yes" xml:space="preserve">
          <source>The function argument runtime type information.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
